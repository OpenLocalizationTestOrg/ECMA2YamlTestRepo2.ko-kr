### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.BindingContext
  id: BindingContext
  children:
  - System.Windows.Forms.BindingContext.#ctor
  - System.Windows.Forms.BindingContext.Add(System.Object,System.Windows.Forms.BindingManagerBase)
  - System.Windows.Forms.BindingContext.AddCore(System.Object,System.Windows.Forms.BindingManagerBase)
  - System.Windows.Forms.BindingContext.Clear
  - System.Windows.Forms.BindingContext.ClearCore
  - System.Windows.Forms.BindingContext.CollectionChanged
  - System.Windows.Forms.BindingContext.Contains(System.Object)
  - System.Windows.Forms.BindingContext.Contains(System.Object,System.String)
  - System.Windows.Forms.BindingContext.IsReadOnly
  - System.Windows.Forms.BindingContext.Item(System.Object)
  - System.Windows.Forms.BindingContext.Item(System.Object,System.String)
  - System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  - System.Windows.Forms.BindingContext.Remove(System.Object)
  - System.Windows.Forms.BindingContext.RemoveCore(System.Object)
  - System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Windows.Forms.BindingContext.System#Collections#ICollection#Count
  - System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized
  - System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot
  - System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator
  - System.Windows.Forms.BindingContext.UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)
  langs:
  - csharp
  name: BindingContext
  nameWithType: BindingContext
  fullName: System.Windows.Forms.BindingContext
  type: Class
  summary: "컬렉션을 관리 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> 에서 상속 하는 모든 개체에 대 한 개체는 <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 클래스입니다."
  remarks: "각 Windows Form에 하나 이상의 BindingContext 개체를 관리 하는 <xref:System.Windows.Forms.BindingManagerBase>폼에 대 한 개체입니다.</xref:System.Windows.Forms.BindingManagerBase> 때문에 <xref:System.Windows.Forms.BindingManagerBase>클래스는 추상 클래스의 <xref:System.Windows.Forms.BindingContext.Item%2A>속성 중 하나는 <xref:System.Windows.Forms.CurrencyManager>나 <xref:System.Windows.Forms.PropertyManager>.</xref:System.Windows.Forms.PropertyManager> </xref:System.Windows.Forms.CurrencyManager> 은</xref:System.Windows.Forms.BindingContext.Item%2A> 반환 형식이</xref:System.Windows.Forms.BindingManagerBase> 데이터 원본이 있으면 목록 개체), (대신 하나의 속성만 반환할 수 있는 개체에 <xref:System.Type> <xref:System.Windows.Forms.PropertyManager>.</xref:System.Windows.Forms.PropertyManager> 은</xref:System.Type> 예를 들어, 지정 하는 경우는 <xref:System.Windows.Forms.TextBox>데이터 원본으로는 <xref:System.Windows.Forms.PropertyManager>반환 됩니다.</xref:System.Windows.Forms.PropertyManager> </xref:System.Windows.Forms.TextBox> 반대로, 구현 하는 개체 데이터 원본이 경우 <xref:System.Collections.IList>또는 <xref:System.ComponentModel.IBindingList>, <xref:System.Windows.Forms.CurrencyManager>반환 됩니다.</xref:System.Windows.Forms.CurrencyManager> </xref:System.ComponentModel.IBindingList> </xref:System.Collections.IList>       Windows Form에 각 데이터 원본에 대해 발생 하는 단일 <xref:System.Windows.Forms.CurrencyManager>또는 <xref:System.Windows.Forms.PropertyManager>.</xref:System.Windows.Forms.PropertyManager> </xref:System.Windows.Forms.CurrencyManager> 여러 데이터 원본에 연결 된 Windows Form 있을 수 있기 때문에 BindingContext 검색할 수 있도록 특정 <xref:System.Windows.Forms.CurrencyManager>데이터 원본과 관련 된.</xref:System.Windows.Forms.CurrencyManager>      > [!NOTE] > 사용 하는 경우는 <xref:System.Windows.Forms.BindingContext.Item%2A>속성 BindingContext에서는 새 <xref:System.Windows.Forms.BindingManagerBase>아직 없는 경우.</xref:System.Windows.Forms.BindingManagerBase> </xref:System.Windows.Forms.BindingContext.Item%2A> 이 목록 (또는 목록)에 반환 된 개체를 관리 하지 못할 수도 처럼 일부 혼란이 발생할 수 있습니다. 잘못 된 반환 하지 않도록 하려면 <xref:System.Windows.Forms.BindingManagerBase>를 사용 하 여는 <xref:System.Windows.Forms.BindingContext.Contains%2A>여부를 확인 하는 메서드를 의도 된 <xref:System.Windows.Forms.BindingManagerBase>이미 있습니다.</xref:System.Windows.Forms.BindingManagerBase> </xref:System.Windows.Forms.BindingContext.Contains%2A> </xref:System.Windows.Forms.BindingManagerBase>       와 같은 컨테이너 컨트롤을 사용 하는 경우는 <xref:System.Windows.Forms.GroupBox>, <xref:System.Windows.Forms.Panel>, 또는 <xref:System.Windows.Forms.TabControl>데이터 바인딩된 컨트롤을 포함 하기 바로 해당 컨테이너 컨트롤과 해당 컨트롤에 대 한 BindingContext를 만들 수 있습니다.</xref:System.Windows.Forms.TabControl> </xref:System.Windows.Forms.Panel> </xref:System.Windows.Forms.GroupBox> 그런 다음 폼의 각 부분 관리할 수 있습니다는 자체 <xref:System.Windows.Forms.BindingManagerBase>.</xref:System.Windows.Forms.BindingManagerBase> 참조는 <xref:System.Windows.Forms.BindingContext.%23ctor%2A>여러 개 만드는 방법에 대 한 자세한 내용은 생성자 <xref:System.Windows.Forms.BindingManagerBase>동일한 데이터 원본에 대 한 개체입니다.</xref:System.Windows.Forms.BindingManagerBase> </xref:System.Windows.Forms.BindingContext.%23ctor%2A>       추가 하는 경우는 <xref:System.Windows.Forms.TextBox>컨트롤을 폼을 데이터 집합에서 테이블의 열에 바인딩 양식을 BindingContext와 통신 하는 컨트롤.</xref:System.Windows.Forms.TextBox> BindingContext, 통신 특정 <xref:System.Windows.Forms.CurrencyManager>해당 데이터 연결에 대 한.</xref:System.Windows.Forms.CurrencyManager> 쿼리하면는 `Position` 의 속성은 <xref:System.Windows.Forms.CurrencyManager>, 해당 바인딩에 대 한 현재 레코드를 보고 합니다 <xref:System.Windows.Forms.TextBox>컨트롤.</xref:System.Windows.Forms.TextBox> </xref:System.Windows.Forms.CurrencyManager> 다음 코드 예제에서는 <xref:System.Windows.Forms.TextBox>컨트롤이 바인딩되는 `FirstName` 의 열 한 `Customers` 테이블에 `dataSet1` BindingContext의 폼에 대 한를 통해 데이터 집합.</xref:System.Windows.Forms.TextBox>      ```vb#   TextBox1.DataBindings.Add(&quot;Text&quot;, dataSet1, &quot;Customers.FirstName&quot;)      ```      ```c#   textBox1.DataBindings.Add(&quot;Text&quot;, dataSet1, &quot;Customers.FirstName&quot;);      ```      ```cpp   textBox1->DataBindings->Add(&quot;Text&quot;, dataSet1, &quot;Customers.FirstName&quot;);   ```초를 추가할 수 있습니다 <xref:System.Windows.Forms.TextBox>컨트롤 (`TextBox2`)를 폼에 바인딩합니다는 `LastName` 의 열은 `Customers` 동일한 데이터 집합의 테이블.</xref:System.Windows.Forms.TextBox> BindingContext는 첫 번째 바인딩 인식 (`TextBox1` 를 `Customers.FirstName`) 이므로 동일한 사용 한다는 <xref:System.Windows.Forms.CurrencyManager>와 텍스트 상자를 모두 동일한 데이터 집합에 바인딩됩니다 (`DataSet1`).</xref:System.Windows.Forms.CurrencyManager>      ```vb#   TextBox2.DataBindings.Add(&quot;Text&quot;, dataSet1, &quot;Customers.LastName&quot;)      ```      ```c#   textBox2.DataBindings.Add(&quot;Text&quot;, dataSet1, &quot;Customers.LastName&quot;);      ```      ```cpp   textBox2->DataBindings->Add(&quot;Text&quot;, dataSet1, &quot;Customers.LastName&quot;);   ```바인딩하는 경우 `TextBox2` 인 다른 데이터 집합 BindingContext 작성 하 고 두 번째 <xref:System.Windows.Forms.CurrencyManager>.</xref:System.Windows.Forms.CurrencyManager> 관리       설정 하는 방법에 대 한 일관성을 유지 해야는 <xref:System.Windows.Forms.ListControl.DataSource%2A>및 <xref:System.Windows.Forms.ListControl.DisplayMember%2A>속성; 그렇지 않으면 BindingContext 만듭니다 여러 통화 오류가 발생할 동일한 데이터 집합에 대 한 관리자.</xref:System.Windows.Forms.ListControl.DisplayMember%2A> </xref:System.Windows.Forms.ListControl.DataSource%2A> 다음 코드 예제에는 속성과 연관 된 BindingContext 개체를 설정 하는 몇 가지 방법을 보여 줍니다. 코드 전반에 일관성이으로 다음 방법 중 하나를 사용 하 여 속성을 설정할 수 있습니다.      ```vb#   ComboBox1.DataSource = DataSet1   ComboBox1.DisplayMember = &quot;Customers.FirstName&quot;   Me.BindingContext(dataSet1, &quot;Customers&quot;).Position = 1      ```      ```c#   comboBox1.DataSource = DataSet1;   comboBox1.DisplayMember = &quot;Customers.FirstName&quot;;   this.BindingContext[dataSet1, &quot;Customers&quot;].Position = 1;      ```      ```cpp   comboBox1->DataSource = dataSet1;   comboBox1->DisplayMember = &quot;Customers.FirstName&quot;;   this->BindingContext->get_Item(dataSet1, &quot;Customers&quot;)->Position = 1;      ```      ```vb#   ComboBox1.DataSource = DataSet1.Customers   ComboBox1.DisplayMember = &quot;FirstName&quot;   Me.BindingContext(dataSet1.Customers).Position = 1      ```      ```c#   comboBox1.DataSource = DataSet1.Customers;   comboBox1.DisplayMember = &quot;FirstName&quot;;   this.BindingContext[dataSet1.Customers].Position = 1;      ```      ```cpp   comboBox1->DataSource = dataSet1->Customers;   comboBox1->DisplayMember = &quot;FirstName&quot;;   this->BindingContext->get_Item(dataSet1->Customers)->Position = 1;      ```      > [!NOTE]>에 <xref:System.Windows.Forms.BindingSource>.</xref:System.Windows.Forms.BindingSource> 통해 대부분의 Windows Forms 응용 프로그램 바인딩 <xref:System.Windows.Forms.BindingSource>구성 요소를 캡슐화 한 <xref:System.Windows.Forms.CurrencyManager>노출는 <xref:System.Windows.Forms.CurrencyManager>프로그래밍 인터페이스입니다.</xref:System.Windows.Forms.CurrencyManager> </xref:System.Windows.Forms.CurrencyManager> </xref:System.Windows.Forms.BindingSource> 사용 하는 경우는 <xref:System.Windows.Forms.BindingSource>바인딩에 의해 노출 되는 멤버를 사용 해야는 <xref:System.Windows.Forms.BindingSource>&quot;currency&quot; 조작할 수 (즉, `Position`) BindingContext 수행 하지 않고.</xref:System.Windows.Forms.BindingSource> </xref:System.Windows.Forms.BindingSource>"
  example:
  - "The following code example creates four <xref:System.Windows.Forms.Binding> objects to bind five controls—a <xref:System.Windows.Forms.DateTimePicker> and four <xref:System.Windows.Forms.TextBox> controls—to several data sources. The BindingContext is then used to get the <xref:System.Windows.Forms.BindingManagerBase> for each data source.  \n  \n [!code-cpp[Classic BindingContext Example#1](~/add/codesnippet/cpp/t-system.windows.forms.b_7_1.cpp)]\n [!code-cs[Classic BindingContext Example#1](~/add/codesnippet/csharp/t-system.windows.forms.b_7_1.cs)]\n [!code-vb[Classic BindingContext Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.b_7_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("CollectionChanged")]

      public class BindingContext : System.Collections.ICollection
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: BindingContext()
  nameWithType: BindingContext.BindingContext()
  fullName: System.Windows.Forms.BindingContext.BindingContext()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref> 클래스입니다."
  remarks: "여러 개의 <xref:System.Windows.Forms.BindingManagerBase>새 <xref:System.Windows.Forms.BindingContext> <xref:System.Windows.Forms.Control.BindingContext%2A> <xref:System.Windows.Forms.Control>클래스</xref:System.Windows.Forms.Control> 에서 상속 되는 개체의 속성</xref:System.Windows.Forms.Control.BindingContext%2A> 을 설정 하 고</xref:System.Windows.Forms.BindingContext> 동일한 데이터 원본에 대 한 인스턴스 만들기</xref:System.Windows.Forms.BindingManagerBase> 를 포함 하려는 경우 예를 들어 있는 경우 두 <xref:System.Windows.Forms.BindingManagerBase>개체 (에서 서로 다른 두 <xref:System.Windows.Forms.BindingContext>개체)를 설정할 수 있습니다는 <xref:System.Windows.Forms.BindingManagerBase.Position%2A>각 <xref:System.Windows.Forms.BindingManagerBase>서로 다른 값으로.</xref:System.Windows.Forms.BindingManagerBase> </xref:System.Windows.Forms.BindingManagerBase.Position%2A> </xref:System.Windows.Forms.BindingContext> </xref:System.Windows.Forms.BindingManagerBase> 이렇게 하면 각 데이터 바인딩된 컨트롤 집합을 같은 데이터 원본에서 다른 값을 표시 합니다."
  example:
  - "The following code example creates two new <xref:System.Windows.Forms.BindingContext> objects and assigns each object to the <xref:System.Windows.Forms.BindingContext> property of a <xref:System.Windows.Forms.GroupBox> control. `GroupBox1` contains `TextBox1`, and `GroupBox2` contains `TextBox2` (which is accomplished by using the <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> method of the <xref:System.Windows.Forms.Control.ControlCollection> class). The example then adds <xref:System.Windows.Forms.Binding> objects to the two <xref:System.Windows.Forms.TextBox> controls, binding each to the same data source and data member. The example also shows two event handlers that use the <xref:System.Windows.Forms.BindingContext> from the <xref:System.Windows.Forms.GroupBox> controls to set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property on different <xref:System.Windows.Forms.BindingManagerBase> objects.  \n  \n [!code-cs[Classic BindingContext.BindingContext Example#1](~/add/codesnippet/csharp/m-system.windows.forms.b_17_1.cs)]\n [!code-cpp[Classic BindingContext.BindingContext Example#1](~/add/codesnippet/cpp/m-system.windows.forms.b_17_1.cpp)]\n [!code-vb[Classic BindingContext.BindingContext Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.b_17_1.vb)]"
  syntax:
    content: public BindingContext ();
    parameters: []
  overload: System.Windows.Forms.BindingContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Add(System.Object,System.Windows.Forms.BindingManagerBase)
  id: Add(System.Object,System.Windows.Forms.BindingManagerBase)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Add(Object,BindingManagerBase)
  nameWithType: BindingContext.Add(Object,BindingManagerBase)
  fullName: System.Windows.Forms.BindingContext.Add(Object,BindingManagerBase)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "추가 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> 컬렉션에 특정 데이터 원본에 연결 된입니다."
  syntax:
    content: protected void Add (object dataSource, System.Windows.Forms.BindingManagerBase listManager);
    parameters:
    - id: dataSource
      type: System.Object
      description: "<xref:System.Object>연관 된 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>.</xref:System.Object>"
    - id: listManager
      type: System.Windows.Forms.BindingManagerBase
      description: "The <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref> to add."
  overload: System.Windows.Forms.BindingContext.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.AddCore(System.Object,System.Windows.Forms.BindingManagerBase)
  id: AddCore(System.Object,System.Windows.Forms.BindingManagerBase)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: AddCore(Object,BindingManagerBase)
  nameWithType: BindingContext.AddCore(Object,BindingManagerBase)
  fullName: System.Windows.Forms.BindingContext.AddCore(Object,BindingManagerBase)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "추가 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> 컬렉션에 특정 데이터 원본에 연결 된입니다."
  syntax:
    content: protected virtual void AddCore (object dataSource, System.Windows.Forms.BindingManagerBase listManager);
    parameters:
    - id: dataSource
      type: System.Object
      description: "와 연결 된 개체는 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>합니다."
    - id: listManager
      type: System.Windows.Forms.BindingManagerBase
      description: "The <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref> to add."
  overload: System.Windows.Forms.BindingContext.AddCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dataSource</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>listManager</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Clear
  id: Clear
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Clear()
  nameWithType: BindingContext.Clear()
  fullName: System.Windows.Forms.BindingContext.Clear()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "모든 컬렉션을 지웁니다 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> 개체입니다."
  syntax:
    content: protected void Clear ();
    parameters: []
  overload: System.Windows.Forms.BindingContext.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.ClearCore
  id: ClearCore
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: ClearCore()
  nameWithType: BindingContext.ClearCore()
  fullName: System.Windows.Forms.BindingContext.ClearCore()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컬렉션을 지웁니다."
  syntax:
    content: protected virtual void ClearCore ();
    parameters: []
  overload: System.Windows.Forms.BindingContext.ClearCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.CollectionChanged
  id: CollectionChanged
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: BindingContext.CollectionChanged
  fullName: System.Windows.Forms.BindingContext.CollectionChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "항상 한 <xref:System.NotImplementedException>처리 될 때.</xref:System.NotImplementedException>"
  remarks: "CollectionChanged 이벤트 사용 되지 않으며 항상는 <xref:System.NotImplementedException>처리 될 때.</xref:System.NotImplementedException> 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "추가할 수 있습니다."
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "모든 경우에에서 발생합니다."
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: BindingContext.Contains(Object)
  fullName: System.Windows.Forms.BindingContext.Contains(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref> 포함는 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> 지정 된 데이터 원본과 관련 된 합니다."
  remarks: "참조는 <xref:System.Windows.Forms.Binding>가능한 데이터 원본 및 컨트롤을 데이터 소스에 바인딩하는 방법에 대 한 정보는 목록에 대 한 클래스입니다.</xref:System.Windows.Forms.Binding>       참조는 <xref:System.Windows.Forms.BindingContext.Item%2A>반환에 대 한 정보를 보려면 속성을 <xref:System.Windows.Forms.BindingManagerBase>데이터 원본만 사용 하 여.</xref:System.Windows.Forms.BindingManagerBase> </xref:System.Windows.Forms.BindingContext.Item%2A>"
  example:
  - "The following code example uses the Contains method to determine whether a <xref:System.Windows.Forms.BindingManagerBase> exists for each control on a form. The example passes each <xref:System.Data.DataTable> in a <xref:System.Data.DataSet> to the method.  \n  \n [!code-vb[Classic BindingContext.Contains Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.b_9_1.vb)]\n [!code-cs[Classic BindingContext.Contains Example#1](~/add/codesnippet/csharp/m-system.windows.forms.b_9_1.cs)]\n [!code-cpp[Classic BindingContext.Contains Example#1](~/add/codesnippet/cpp/m-system.windows.forms.b_9_1.cpp)]"
  syntax:
    content: public bool Contains (object dataSource);
    parameters:
    - id: dataSource
      type: System.Object
      description: "<xref:System.Object>데이터 소스를 나타내는입니다.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref> 에 지정 된 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.BindingContext.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Contains(System.Object,System.String)
  id: Contains(System.Object,System.String)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Contains(Object,String)
  nameWithType: BindingContext.Contains(Object,String)
  fullName: System.Windows.Forms.BindingContext.Contains(Object,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref> 포함는 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> 지정한 데이터 원본 및 데이터 멤버와 관련 된 합니다."
  remarks: "참조는 <xref:System.Windows.Forms.Binding>가능한 데이터 원본 목록 및 컨트롤을 데이터 소스에 바인딩하는 방법에 대 한 정보에 대 한 클래스입니다.</xref:System.Windows.Forms.Binding>       참조는 <xref:System.Windows.Forms.BindingContext.Item%2A>반환에 대 한 정보를 보려면 속성을 <xref:System.Windows.Forms.BindingManagerBase>데이터 원본 및 데이터 멤버를 사용 하 여.</xref:System.Windows.Forms.BindingManagerBase> </xref:System.Windows.Forms.BindingContext.Item%2A>"
  example:
  - "The following code example uses the <xref:System.Windows.Forms.BindingContext.Contains%2A> method to test whether a specific <xref:System.Windows.Forms.BindingManagerBase> exists before attempting to get it through the <xref:System.Windows.Forms.BindingContext.Item%2A> property.  \n  \n [!code-cs[Classic BindingContext.Contains1 Example#1](~/add/codesnippet/csharp/m-system.windows.forms.b_18_1.cs)]\n [!code-vb[Classic BindingContext.Contains1 Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.b_18_1.vb)]\n [!code-cpp[Classic BindingContext.Contains1 Example#1](~/add/codesnippet/cpp/m-system.windows.forms.b_18_1.cpp)]"
  syntax:
    content: public bool Contains (object dataSource, string dataMember);
    parameters:
    - id: dataSource
      type: System.Object
      description: "<xref:System.Object>데이터 소스를 나타내는입니다.</xref:System.Object>"
    - id: dataMember
      type: System.String
      description: "특정 해결 하는 데 필요한 정보 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref> 에 지정 된 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.BindingContext.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: BindingContext.IsReadOnly
  fullName: System.Windows.Forms.BindingContext.IsReadOnly
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컬렉션이 읽기 전용인 지 여부를 나타내는 값을 가져옵니다."
  remarks: "이 속성에서 파생 된 <xref:System.Collections.ICollection>을 항상 반환 하도록 재정의 하 고 `false`.</xref:System.Collections.ICollection>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컬렉션이 읽기 전용인 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.BindingContext.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Item(System.Object)
  id: Item(System.Object)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Item(Object)
  nameWithType: BindingContext.Item(Object)
  fullName: System.Windows.Forms.BindingContext.Item(Object)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "가져옵니다는 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> 지정된 된 데이터 소스와 연결 된입니다."
  remarks: "이 오버 로드를 사용 <xref:System.Windows.Forms.BindingManagerBase>하려면 탐색 경로 필요 하지 않습니다</xref:System.Windows.Forms.BindingManagerBase> 예를 들어 경우는 <xref:System.Windows.Forms.BindingManagerBase>집합을 관리 <xref:System.Windows.Forms.Binding>사용 하는 개체는 <xref:System.Collections.ArrayList>또는 <xref:System.Data.DataTable>로 <xref:System.Windows.Forms.Binding.DataSource%2A>, 탐색 경로가 필요 하지 않습니다.</xref:System.Windows.Forms.Binding.DataSource%2A> </xref:System.Data.DataTable> </xref:System.Collections.ArrayList> </xref:System.Windows.Forms.Binding> </xref:System.Windows.Forms.BindingManagerBase>      > [!NOTE] > 항목의 속성은 항상 반환 된 <xref:System.Windows.Forms.BindingManagerBase>, 한 반환 하지 `null`.</xref:System.Windows.Forms.BindingManagerBase>       참조는 <xref:System.Windows.Forms.Binding>가능한 데이터 원본 목록 및 컨트롤을 데이터 소스에 바인딩하는 방법에 대 한 정보에 대 한 클래스입니다.</xref:System.Windows.Forms.Binding>"
  example:
  - "The following code example returns three <xref:System.Windows.Forms.BindingManagerBase> objects: one for a <xref:System.Data.DataView>, one for an <xref:System.Collections.ArrayList>, and one for the <xref:System.Windows.Forms.Binding.DataSource%2A> of a <xref:System.Windows.Forms.Binding> that belongs to a <xref:System.Windows.Forms.TextBox> control.  \n  \n [!code-cs[Classic BindingContext.this Example#1](~/add/codesnippet/csharp/p-system.windows.forms.b_30_1.cs)]\n [!code-cpp[Classic BindingContext.this Example#1](~/add/codesnippet/cpp/p-system.windows.forms.b_30_1.cpp)]\n [!code-vb[Classic BindingContext.this Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.b_30_1.vb)]"
  syntax:
    content: public System.Windows.Forms.BindingManagerBase this[object dataSource] { get; }
    parameters:
    - id: dataSource
      type: System.Object
      description: "특정와 연결 된 데이터 원본이 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>합니다."
    return:
      type: System.Windows.Forms.BindingManagerBase
      description: "A <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> 지정된 된 데이터 원본에 대 한 합니다."
  overload: System.Windows.Forms.BindingContext.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Item(System.Object,System.String)
  id: Item(System.Object,System.String)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Item(Object,String)
  nameWithType: BindingContext.Item(Object,String)
  fullName: System.Windows.Forms.BindingContext.Item(Object,String)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "가져옵니다는 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> 지정한 데이터 원본 및 데이터 멤버와 연결 합니다."
  remarks: "사용할 경우이 오버 로드는 <xref:System.Windows.Forms.BindingManagerBase>집합을 관리 <xref:System.Windows.Forms.Binding>데이터 원본을 여러 개체를 포함 하는 개체입니다.</xref:System.Windows.Forms.Binding> </xref:System.Windows.Forms.BindingManagerBase> 예를 들어 한 <xref:System.Data.DataSet>여러 포함 될 수 있습니다 <xref:System.Data.DataTable>의해 연결 된 <xref:System.Data.DataRelation>개체.</xref:System.Data.DataRelation> </xref:System.Data.DataTable> </xref:System.Data.DataSet> 이러한 경우 탐색 경로 <xref:System.Windows.Forms.BindingContext>올바른 <xref:System.Windows.Forms.BindingManagerBase>.</xref:System.Windows.Forms.BindingManagerBase> 반환할</xref:System.Windows.Forms.BindingContext> 수 있도록 필요      > [!NOTE] >는 항목 속성은 항상 반환는 <xref:System.Windows.Forms.BindingManagerBase>때는 `dataMember` 매개 변수는 유효 합니다.</xref:System.Windows.Forms.BindingManagerBase> 반환 하지 것입니다 `null`합니다.       참조는 <xref:System.Windows.Forms.Binding>가능한 데이터 원본 목록 및 컨트롤을 데이터 소스에 바인딩하는 방법에 대 한 정보에 대 한 클래스입니다.</xref:System.Windows.Forms.Binding>       경우 원하는 <xref:System.Windows.Forms.BindingManagerBase>관리 목록에서 탐색 경로 목록 끝나야 합니다.</xref:System.Windows.Forms.BindingManagerBase> 예를 들어 다음 C# 코드 바인딩하는 <xref:System.Windows.Forms.TextBox>orders 테이블에 있는 주문 날짜 컨트롤.</xref:System.Windows.Forms.TextBox> 탐색 경로 포함 된 <xref:System.Data.DataTable.TableName%2A>, <xref:System.Data.DataRelation.RelationName%2A>, 및 <xref:System.Data.DataColumn.ColumnName%2A>.</xref:System.Data.DataColumn.ColumnName%2A> </xref:System.Data.DataRelation.RelationName%2A> </xref:System.Data.DataTable.TableName%2A> 그러나는 <xref:System.Windows.Forms.BindingManagerBase>만 사용 하 여 검색할 수는 <xref:System.Data.DataTable.TableName%2A>및 <xref:System.Data.DataRelation.RelationName%2A>(확인 되는 목록에).</xref:System.Data.DataRelation.RelationName%2A> </xref:System.Data.DataTable.TableName%2A> </xref:System.Windows.Forms.BindingManagerBase>      ```   // The navigation path for a Binding ends with a property.   textBox1.DataBindings.Add   (&quot;Text&quot;, dataSet1, &quot;Customers.custToOrders.OrderDate&quot;);   // The navigation path for the BindingManagerBase ends with a list.   BindingManagerBase bmOrders = this.BindingContext   [dataSet1, &quot;Customers.custToOrders&quot;];   ```역할에 <xref:System.Windows.Forms.BindingManagerBase> <xref:System.Windows.Forms.Binding>만 탐색 경로 수정 하 고</xref:System.Windows.Forms.Binding> 동일한 데이터 소스를 사용 해야 합니다.</xref:System.Windows.Forms.BindingManagerBase> 반환 하는 경우       사용 하 여는 <xref:System.Windows.Forms.BindingContext.Contains%2A>여부를 확인 하는 메서드는 원하는 <xref:System.Windows.Forms.BindingManagerBase>이미 있습니다.</xref:System.Windows.Forms.BindingManagerBase> </xref:System.Windows.Forms.BindingContext.Contains%2A>"
  example:
  - "The following code example demonstrates how to use the Item to retrieve the <xref:System.Windows.Forms.BindingManagerBase> for a particular binding. It also shows how to handle the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event for the <xref:System.Windows.Forms.BindingManagerBase> to ensure multiple controls bound to the same data source remain synchronized when one of the control values is changed. To run this example, paste the code into a Windows Form and call the `InitializeControlsAndData` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \n  \n [!code-vb[System.Windows.Forms.BindingSourceMultipleControls#11](~/add/codesnippet/visualbasic/p-system.windows.forms.b_17_1.vb)]\n [!code-cs[System.Windows.Forms.BindingSourceMultipleControls#11](~/add/codesnippet/csharp/p-system.windows.forms.b_17_1.cs)]"
  syntax:
    content: public System.Windows.Forms.BindingManagerBase this[object dataSource, string dataMember] { get; }
    parameters:
    - id: dataSource
      type: System.Object
      description: "특정와 연결 된 데이터 원본이 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>합니다."
    - id: dataMember
      type: System.String
      description: "특정 문서로 확인 되는 정보를 포함 하는 탐색 경로 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>합니다."
    return:
      type: System.Windows.Forms.BindingManagerBase
      description: "<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> 지정 된 데이터 원본과 데이터 멤버에 대 한 합니다."
  overload: System.Windows.Forms.BindingContext.Item*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "지정 된 <code> dataMember </code> 데이터 원본 내에 존재 하지 않습니다."
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  id: OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: OnCollectionChanged(CollectionChangeEventArgs)
  nameWithType: BindingContext.OnCollectionChanged(CollectionChangeEventArgs)
  fullName: System.Windows.Forms.BindingContext.OnCollectionChanged(CollectionChangeEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.BindingContext.CollectionChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnCollectionChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnCollectionChanged (System.ComponentModel.CollectionChangeEventArgs ccevent);
    parameters:
    - id: ccevent
      type: System.ComponentModel.CollectionChangeEventArgs
      description: "A <xref href=&quot;System.ComponentModel.CollectionChangeEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.BindingContext.OnCollectionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: BindingContext.Remove(Object)
  fullName: System.Windows.Forms.BindingContext.Remove(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "삭제는 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> 지정 된 데이터 원본과 연결 합니다."
  syntax:
    content: protected void Remove (object dataSource);
    parameters:
    - id: dataSource
      type: System.Object
      description: "와 연결 된 데이터 소스는 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> 제거 하려면."
  overload: System.Windows.Forms.BindingContext.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.RemoveCore(System.Object)
  id: RemoveCore(System.Object)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: RemoveCore(Object)
  nameWithType: BindingContext.RemoveCore(Object)
  fullName: System.Windows.Forms.BindingContext.RemoveCore(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "제거는 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> 지정 된 데이터 원본과 연결 합니다."
  syntax:
    content: protected virtual void RemoveCore (object dataSource);
    parameters:
    - id: dataSource
      type: System.Object
      description: "와 연결 된 데이터 소스는 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> 제거 하려면."
  overload: System.Windows.Forms.BindingContext.RemoveCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: BindingContext.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컬렉션 인덱스부터 시작 하는 지정 된 배열에 컬렉션의 요소를 복사 합니다."
  remarks: ''
  example:
  - >-
    [!code-cs[Classic BindingContext.ICollection.CopyTo Example#1](~/add/codesnippet/csharp/030fb284-4e33-401e-88b7-_1.cs)]
     [!code-cpp[Classic BindingContext.ICollection.CopyTo Example#1](~/add/codesnippet/cpp/030fb284-4e33-401e-88b7-_1.cpp)]
     [!code-vb[Classic BindingContext.ICollection.CopyTo Example#1](~/add/codesnippet/visualbasic/030fb284-4e33-401e-88b7-_1.vb)]
  syntax:
    content: void ICollection.CopyTo (Array ar, int index);
    parameters:
    - id: ar
      type: System.Array
      description: "<xref:System.Array>에 복사 합니다.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "컬렉션에서 복사를 시작할 인덱스입니다."
  overload: System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: System.Collections.ICollection.Count
  nameWithType: BindingContext.System.Collections.ICollection.Count
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "총 수를 가져옵니다 <xref href=&quot;System.Windows.Forms.CurrencyManager&quot;> </xref> 하 여 관리 되는 개체는 <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example returns the number of <xref:System.Windows.Forms.CurrencyManager> objects managed by the <xref:System.Windows.Forms.BindingContext>.  \n  \n [!code-vb[Classic BindingContext.ICollection.Count Example#1](~/add/codesnippet/visualbasic/24e4ccaa-040d-4b41-b443-_1.vb)]\n [!code-cpp[Classic BindingContext.ICollection.Count Example#1](~/add/codesnippet/cpp/24e4ccaa-040d-4b41-b443-_1.cpp)]\n [!code-cs[Classic BindingContext.ICollection.Count Example#1](~/add/codesnippet/csharp/24e4ccaa-040d-4b41-b443-_1.cs)]"
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "관리 하는 데이터 원본 수는 <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref>합니다."
  overload: System.Windows.Forms.BindingContext.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: BindingContext.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컬렉션이 동기화 되었는지 여부를 나타내는 값을 가져옵니다."
  remarks: "이 속성에서 파생 된 <xref:System.Collections.ICollection>을 항상 반환 하도록 재정의 하 고 `false`.</xref:System.Collections.ICollection>"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컬렉션이 스레드로부터 안전 합니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: BindingContext.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "동기화 (스레드로부터의 안전성)에 사용할 개체를 가져옵니다."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "이 속성에서 파생 된 <xref:System.Collections.ICollection>을 항상 반환 하도록 재정의 하 고 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: BindingContext.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Forms.BindingContext.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컬렉션에 대 한 열거자를 가져옵니다."
  remarks: "<xref:System.Collections.IEnumerator>메서드를 사용 하면에 <xref:System.Windows.Forms.BindingContext>.</xref:System.Windows.Forms.BindingContext> 관리 하는 컬렉션을 반복할 수 있습니다 IEnumerable.GetEnumerator를 반환한</xref:System.Collections.IEnumerator>"
  example:
  - "The following code example uses the IEnumerable.GetEnumerator method to return an <xref:System.Collections.IEnumerator> for the <xref:System.Windows.Forms.BindingContext>.  \n  \n [!code-cs[Classic BindingContext.IEnumerable.GetEnumerator Example#1](~/add/codesnippet/csharp/dec1c1ce-5dab-481d-86dd-_1.cs)]\n [!code-cpp[Classic BindingContext.IEnumerable.GetEnumerator Example#1](~/add/codesnippet/cpp/dec1c1ce-5dab-481d-86dd-_1.cpp)]\n [!code-vb[Classic BindingContext.IEnumerable.GetEnumerator Example#1](~/add/codesnippet/visualbasic/dec1c1ce-5dab-481d-86dd-_1.vb)]"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>컬렉션에 대 한.</xref:System.Collections.IEnumerator>"
  overload: System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)
  id: UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: UpdateBinding(BindingContext,Binding)
  nameWithType: BindingContext.UpdateBinding(BindingContext,Binding)
  fullName: System.Windows.Forms.BindingContext.UpdateBinding(BindingContext,Binding)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "연결 된 <xref href=&quot;System.Windows.Forms.Binding&quot;> </xref> 를 새 <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref>합니다."
  remarks: "이 메서드를 구현 하는 구성 요소 바인딩을 업데이트 사용 <xref:System.Windows.Forms.IBindableComponent>때 자신의 <xref:System.Windows.Forms.BindingContext>변경.</xref:System.Windows.Forms.BindingContext> </xref:System.Windows.Forms.IBindableComponent>"
  syntax:
    content: public static void UpdateBinding (System.Windows.Forms.BindingContext newBindingContext, System.Windows.Forms.Binding binding);
    parameters:
    - id: newBindingContext
      type: System.Windows.Forms.BindingContext
      description: "새 <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref> 연관 시킬는 <xref href=&quot;System.Windows.Forms.Binding&quot;> </xref>합니다."
    - id: binding
      type: System.Windows.Forms.Binding
      description: "<xref href=&quot;System.Windows.Forms.Binding&quot;> </xref> 새와 연결할 <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref>합니다."
  overload: System.Windows.Forms.BindingContext.UpdateBinding*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotImplementedException
  isExternal: true
  name: System.NotImplementedException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Windows.Forms.BindingContext.#ctor
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: BindingContext()
  nameWithType: BindingContext.BindingContext()
  fullName: System.Windows.Forms.BindingContext.BindingContext()
- uid: System.Windows.Forms.BindingContext.Add(System.Object,System.Windows.Forms.BindingManagerBase)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Add(Object,BindingManagerBase)
  nameWithType: BindingContext.Add(Object,BindingManagerBase)
  fullName: System.Windows.Forms.BindingContext.Add(Object,BindingManagerBase)
- uid: System.Windows.Forms.BindingManagerBase
  parent: System.Windows.Forms
  isExternal: false
  name: BindingManagerBase
  nameWithType: BindingManagerBase
  fullName: System.Windows.Forms.BindingManagerBase
- uid: System.Windows.Forms.BindingContext.AddCore(System.Object,System.Windows.Forms.BindingManagerBase)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: AddCore(Object,BindingManagerBase)
  nameWithType: BindingContext.AddCore(Object,BindingManagerBase)
  fullName: System.Windows.Forms.BindingContext.AddCore(Object,BindingManagerBase)
- uid: System.Windows.Forms.BindingContext.Clear
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Clear()
  nameWithType: BindingContext.Clear()
  fullName: System.Windows.Forms.BindingContext.Clear()
- uid: System.Windows.Forms.BindingContext.ClearCore
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: ClearCore()
  nameWithType: BindingContext.ClearCore()
  fullName: System.Windows.Forms.BindingContext.ClearCore()
- uid: System.Windows.Forms.BindingContext.CollectionChanged
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: CollectionChanged
  nameWithType: BindingContext.CollectionChanged
  fullName: System.Windows.Forms.BindingContext.CollectionChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Windows.Forms.BindingContext.Contains(System.Object)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Contains(Object)
  nameWithType: BindingContext.Contains(Object)
  fullName: System.Windows.Forms.BindingContext.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.BindingContext.Contains(System.Object,System.String)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Contains(Object,String)
  nameWithType: BindingContext.Contains(Object,String)
  fullName: System.Windows.Forms.BindingContext.Contains(Object,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.BindingContext.IsReadOnly
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: IsReadOnly
  nameWithType: BindingContext.IsReadOnly
  fullName: System.Windows.Forms.BindingContext.IsReadOnly
- uid: System.Windows.Forms.BindingContext.Item(System.Object)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Item(Object)
  nameWithType: BindingContext.Item(Object)
  fullName: System.Windows.Forms.BindingContext.Item(Object)
- uid: System.Windows.Forms.BindingContext.Item(System.Object,System.String)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Item(Object,String)
  nameWithType: BindingContext.Item(Object,String)
  fullName: System.Windows.Forms.BindingContext.Item(Object,String)
- uid: System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: OnCollectionChanged(CollectionChangeEventArgs)
  nameWithType: BindingContext.OnCollectionChanged(CollectionChangeEventArgs)
  fullName: System.Windows.Forms.BindingContext.OnCollectionChanged(CollectionChangeEventArgs)
- uid: System.ComponentModel.CollectionChangeEventArgs
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventArgs
  nameWithType: CollectionChangeEventArgs
  fullName: System.ComponentModel.CollectionChangeEventArgs
- uid: System.Windows.Forms.BindingContext.Remove(System.Object)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Remove(Object)
  nameWithType: BindingContext.Remove(Object)
  fullName: System.Windows.Forms.BindingContext.Remove(Object)
- uid: System.Windows.Forms.BindingContext.RemoveCore(System.Object)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: RemoveCore(Object)
  nameWithType: BindingContext.RemoveCore(Object)
  fullName: System.Windows.Forms.BindingContext.RemoveCore(Object)
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: BindingContext.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#Count
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: BindingContext.System.Collections.ICollection.Count
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.Count
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: BindingContext.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: BindingContext.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.SyncRoot
- uid: System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: BindingContext.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Forms.BindingContext.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Forms.BindingContext.UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: UpdateBinding(BindingContext,Binding)
  nameWithType: BindingContext.UpdateBinding(BindingContext,Binding)
  fullName: System.Windows.Forms.BindingContext.UpdateBinding(BindingContext,Binding)
- uid: System.Windows.Forms.BindingContext
  parent: System.Windows.Forms
  isExternal: false
  name: BindingContext
  nameWithType: BindingContext
  fullName: System.Windows.Forms.BindingContext
- uid: System.Windows.Forms.Binding
  parent: System.Windows.Forms
  isExternal: false
  name: Binding
  nameWithType: Binding
  fullName: System.Windows.Forms.Binding
- uid: System.Windows.Forms.BindingContext.#ctor*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: BindingContext
  nameWithType: BindingContext.BindingContext
- uid: System.Windows.Forms.BindingContext.Add*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Add
  nameWithType: BindingContext.Add
- uid: System.Windows.Forms.BindingContext.AddCore*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: AddCore
  nameWithType: BindingContext.AddCore
- uid: System.Windows.Forms.BindingContext.Clear*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Clear
  nameWithType: BindingContext.Clear
- uid: System.Windows.Forms.BindingContext.ClearCore*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: ClearCore
  nameWithType: BindingContext.ClearCore
- uid: System.Windows.Forms.BindingContext.Contains*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Contains
  nameWithType: BindingContext.Contains
- uid: System.Windows.Forms.BindingContext.IsReadOnly*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: IsReadOnly
  nameWithType: BindingContext.IsReadOnly
- uid: System.Windows.Forms.BindingContext.Item*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Item
  nameWithType: BindingContext.Item
- uid: System.Windows.Forms.BindingContext.OnCollectionChanged*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: OnCollectionChanged
  nameWithType: BindingContext.OnCollectionChanged
- uid: System.Windows.Forms.BindingContext.Remove*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Remove
  nameWithType: BindingContext.Remove
- uid: System.Windows.Forms.BindingContext.RemoveCore*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: RemoveCore
  nameWithType: BindingContext.RemoveCore
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: BindingContext.System.Collections.ICollection.CopyTo
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#Count*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: BindingContext.System.Collections.ICollection.Count
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: BindingContext.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: BindingContext.System.Collections.ICollection.SyncRoot
- uid: System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: BindingContext.System.Collections.IEnumerable.GetEnumerator
- uid: System.Windows.Forms.BindingContext.UpdateBinding*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: UpdateBinding
  nameWithType: BindingContext.UpdateBinding
