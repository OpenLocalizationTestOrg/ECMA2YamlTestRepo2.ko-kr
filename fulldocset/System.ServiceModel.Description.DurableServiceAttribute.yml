### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.DurableServiceAttribute
  id: DurableServiceAttribute
  children:
  - System.ServiceModel.Description.DurableServiceAttribute.#ctor
  - System.ServiceModel.Description.DurableServiceAttribute.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.Description.DurableServiceAttribute.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction
  - System.ServiceModel.Description.DurableServiceAttribute.UnknownExceptionAction
  - System.ServiceModel.Description.DurableServiceAttribute.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  langs:
  - csharp
  name: DurableServiceAttribute
  nameWithType: DurableServiceAttribute
  fullName: System.ServiceModel.Description.DurableServiceAttribute
  type: Class
  summary: "영 속 서비스 계약 구현의 내부 실행 동작을 지정합니다."
  remarks: "영 속 서비스에 대 한 유효성 검사 논리의 일부로 검사 되는 다음 항목:-모든 세션 바인딩에 <xref:System.ServiceModel.Configuration.WSHttpContextBindingElement>또는 <xref:System.ServiceModel.Configuration.NetTcpContextBindingElement>.</xref:System.ServiceModel.Configuration.NetTcpContextBindingElement> </xref:System.ServiceModel.Configuration.WSHttpContextBindingElement> 같은 컨텍스트 바인딩 요소는      - <xref:System.ServiceModel.ConcurrencyMode>배수로 값을 설정할 수 있어야 합니다.</xref:System.ServiceModel.ConcurrencyMode>      - <xref:System.ServiceModel.InstanceContextMode>값 PerSession 이어야 합니다.</xref:System.ServiceModel.InstanceContextMode>      -있어야 서비스용으로 구성 된 세션 끝점 하나가 있습니다.      -계약 다음 세션을 허용 하지 않는 경우 <xref:System.ServiceModel.Description.DurableOperationAttribute.CanCreateInstance%2A>으로 설정 되어 있어야 `true` 모든 작업에 대해.</xref:System.ServiceModel.Description.DurableOperationAttribute.CanCreateInstance%2A>      -경우 계약을 허용 하는지 여부나 세션 다음 된 모든 작업 <xref:System.ServiceModel.Description.DurableOperationAttribute.CanCreateInstance%2A>로 설정 된 `true` 즉 요청/응답 작업 이어야 <xref:System.Workflow.Activities.OperationInfo.IsOneWay%2A>로 설정할 수 없습니다 `true`.</xref:System.Workflow.Activities.OperationInfo.IsOneWay%2A> </xref:System.ServiceModel.Description.DurableOperationAttribute.CanCreateInstance%2A>      -If <xref:System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction%2A>로 설정 되어 `true`, 서비스에서 모든 작업으로 표시 하거나 해야 다음 <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=fullName>로 설정 `true` 또는 <xref:System.ServiceModel.TransactionFlowOption?displayProperty=fullName>.</xref:System.ServiceModel.TransactionFlowOption?displayProperty=fullName> 으로 표시</xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction%2A> 또한 <xref:System.ServiceModel.ConcurrencyMode>Single로 설정 해야 합니다.</xref:System.ServiceModel.ConcurrencyMode>"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class)]

      [System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")]

      public sealed class DurableServiceAttribute : Attribute, System.ServiceModel.Description.IServiceBehavior
  inheritance:
  - System.Attribute
  implements:
  - System.ServiceModel.Description.IServiceBehavior
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Description.DurableServiceAttribute.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Description.DurableServiceAttribute
  langs:
  - csharp
  name: DurableServiceAttribute()
  nameWithType: DurableServiceAttribute.DurableServiceAttribute()
  fullName: System.ServiceModel.Description.DurableServiceAttribute.DurableServiceAttribute()
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Description
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.Description.DurableServiceAttribute&quot;> </xref> 클래스입니다."
  syntax:
    content: public DurableServiceAttribute ();
    parameters: []
  overload: System.ServiceModel.Description.DurableServiceAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.DurableServiceAttribute.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  id: AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.Description.DurableServiceAttribute
  langs:
  - csharp
  name: AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  nameWithType: DurableServiceAttribute.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  fullName: System.ServiceModel.Description.DurableServiceAttribute.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Description
  summary: "구현 되지 <xref href=&quot;System.ServiceModel.Description.DurableServiceAttribute&quot;> </xref>합니다."
  syntax:
    content: public void AddBindingParameters (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint> endpoints, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);
    parameters:
    - id: serviceDescription
      type: System.ServiceModel.Description.ServiceDescription
      description: "구현되지 않았습니다."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "구현되지 않았습니다."
    - id: endpoints
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
      description: "구현되지 않았습니다."
    - id: bindingParameters
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: "구현되지 않았습니다."
  overload: System.ServiceModel.Description.DurableServiceAttribute.AddBindingParameters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.DurableServiceAttribute.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  id: ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Description.DurableServiceAttribute
  langs:
  - csharp
  name: ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  nameWithType: DurableServiceAttribute.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.Description.DurableServiceAttribute.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Description
  summary: "지정 하는 등 영 속 서비스 동작 속성을 지원 하도록 서비스 런타임을 사용자 지정는 <xref href=&quot;System.ServiceModel.Persistence.PersistenceProvider&quot;> </xref> 서비스에 대 한 합니다."
  syntax:
    content: public void ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase);
    parameters:
    - id: serviceDescription
      type: System.ServiceModel.Description.ServiceDescription
      description: "서비스 설명입니다."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "서비스 호스트입니다."
  overload: System.ServiceModel.Description.DurableServiceAttribute.ApplyDispatchBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction
  id: SaveStateInOperationTransaction
  parent: System.ServiceModel.Description.DurableServiceAttribute
  langs:
  - csharp
  name: SaveStateInOperationTransaction
  nameWithType: DurableServiceAttribute.SaveStateInOperationTransaction
  fullName: System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Description
  summary: "서비스 인스턴스 상태를 유지 되는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref href=&quot;System.ServiceModel.Persistence.PersistenceProvider&quot;> </xref> 작업이 실행 되는 동일한 트랜잭션을 사용 하 여 합니다."
  remarks: "SaveStateInOperationTransaction로 설정 되어 있으면 `true`, 서비스에서 모든 작업으로 표시 하거나 해야 다음 <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=fullName>로 설정 `true` <xref:System.ServiceModel.TransactionFlowOption?displayProperty=fullName>.</xref:System.ServiceModel.TransactionFlowOption?displayProperty=fullName> 으로 표시 또는</xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=fullName> 또한 <xref:System.ServiceModel.ConcurrencyMode>Single로 설정 해야 합니다.</xref:System.ServiceModel.ConcurrencyMode>       SaveStateInOperationTransaction 설정 `true` 하면 작업 트랜잭션과 함께 서비스 상태도 트랜잭션이 됩니다. 즉,이 작업의 트랜잭션이 롤백되면 서비스 상태도 롤백됩니다."
  syntax:
    content: public bool SaveStateInOperationTransaction { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>서비스 인스턴스 상태가 동일한 트랜잭션을; 사용 하 여 지속 되 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.DurableServiceAttribute.UnknownExceptionAction
  id: UnknownExceptionAction
  parent: System.ServiceModel.Description.DurableServiceAttribute
  langs:
  - csharp
  name: UnknownExceptionAction
  nameWithType: DurableServiceAttribute.UnknownExceptionAction
  fullName: System.ServiceModel.Description.DurableServiceAttribute.UnknownExceptionAction
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Description
  summary: "가져오거나는 <xref href=&quot;System.ServiceModel.Description.UnknownExceptionAction&quot;> </xref> 영 속 서비스와 연결 된 열거형 값입니다."
  remarks: "때 <xref:System.ServiceModel.Description.DurableServiceAttribute>은이 속성 값을 <xref:System.ServiceModel.Description.UnknownExceptionAction>.</xref:System.ServiceModel.Description.UnknownExceptionAction> 설정 인스턴스화된</xref:System.ServiceModel.Description.DurableServiceAttribute> 즉, 영 속 서비스에서 알 수 없는 예외가 발생 될 때마다 서비스 인스턴스가 종료 되 고 모든 상태 정보가 지 속성 저장소에서 삭제 됩니다."
  syntax:
    content: public System.ServiceModel.Description.UnknownExceptionAction UnknownExceptionAction { get; set; }
    return:
      type: System.ServiceModel.Description.UnknownExceptionAction
      description: "<xref href=&quot;System.ServiceModel.Description.UnknownExceptionAction&quot;> </xref> 열거형 값입니다."
  overload: System.ServiceModel.Description.DurableServiceAttribute.UnknownExceptionAction*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.DurableServiceAttribute.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  id: Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Description.DurableServiceAttribute
  langs:
  - csharp
  name: Validate(ServiceDescription,ServiceHostBase)
  nameWithType: DurableServiceAttribute.Validate(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.Description.DurableServiceAttribute.Validate(ServiceDescription,ServiceHostBase)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Description
  summary: "서비스의 모든 영 속 작업이 제대로 설정 되어 있는지 확인 합니다."
  syntax:
    content: public void Validate (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase);
    parameters:
    - id: serviceDescription
      type: System.ServiceModel.Description.ServiceDescription
      description: "서비스 설명입니다."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "서비스 호스트입니다."
  overload: System.ServiceModel.Description.DurableServiceAttribute.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ServiceModel.Description.DurableServiceAttribute.#ctor
  parent: System.ServiceModel.Description.DurableServiceAttribute
  isExternal: false
  name: DurableServiceAttribute()
  nameWithType: DurableServiceAttribute.DurableServiceAttribute()
  fullName: System.ServiceModel.Description.DurableServiceAttribute.DurableServiceAttribute()
- uid: System.ServiceModel.Description.DurableServiceAttribute.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.Description.DurableServiceAttribute
  isExternal: false
  name: AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  nameWithType: DurableServiceAttribute.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  fullName: System.ServiceModel.Description.DurableServiceAttribute.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
- uid: System.ServiceModel.Description.ServiceDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.ServiceModel.Description.ServiceDescription
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ServiceEndpoint>
  nameWithType: Collection<ServiceEndpoint>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.ServiceModel.Description.ServiceEndpoint>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ServiceEndpoint
    name: ServiceEndpoint
    nameWithType: ServiceEndpoint
    fullName: ServiceEndpoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.BindingParameterCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingParameterCollection
  nameWithType: BindingParameterCollection
  fullName: System.ServiceModel.Channels.BindingParameterCollection
- uid: System.ServiceModel.Description.DurableServiceAttribute.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Description.DurableServiceAttribute
  isExternal: false
  name: ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  nameWithType: DurableServiceAttribute.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.Description.DurableServiceAttribute.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
- uid: System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction
  parent: System.ServiceModel.Description.DurableServiceAttribute
  isExternal: false
  name: SaveStateInOperationTransaction
  nameWithType: DurableServiceAttribute.SaveStateInOperationTransaction
  fullName: System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Description.DurableServiceAttribute.UnknownExceptionAction
  parent: System.ServiceModel.Description.DurableServiceAttribute
  isExternal: false
  name: UnknownExceptionAction
  nameWithType: DurableServiceAttribute.UnknownExceptionAction
  fullName: System.ServiceModel.Description.DurableServiceAttribute.UnknownExceptionAction
- uid: System.ServiceModel.Description.UnknownExceptionAction
  parent: System.ServiceModel.Description
  isExternal: false
  name: UnknownExceptionAction
  nameWithType: UnknownExceptionAction
  fullName: System.ServiceModel.Description.UnknownExceptionAction
- uid: System.ServiceModel.Description.DurableServiceAttribute.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Description.DurableServiceAttribute
  isExternal: false
  name: Validate(ServiceDescription,ServiceHostBase)
  nameWithType: DurableServiceAttribute.Validate(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.Description.DurableServiceAttribute.Validate(ServiceDescription,ServiceHostBase)
- uid: System.ServiceModel.Description.DurableServiceAttribute.#ctor*
  parent: System.ServiceModel.Description.DurableServiceAttribute
  isExternal: false
  name: DurableServiceAttribute
  nameWithType: DurableServiceAttribute.DurableServiceAttribute
- uid: System.ServiceModel.Description.DurableServiceAttribute.AddBindingParameters*
  parent: System.ServiceModel.Description.DurableServiceAttribute
  isExternal: false
  name: AddBindingParameters
  nameWithType: DurableServiceAttribute.AddBindingParameters
- uid: System.ServiceModel.Description.DurableServiceAttribute.ApplyDispatchBehavior*
  parent: System.ServiceModel.Description.DurableServiceAttribute
  isExternal: false
  name: ApplyDispatchBehavior
  nameWithType: DurableServiceAttribute.ApplyDispatchBehavior
- uid: System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction*
  parent: System.ServiceModel.Description.DurableServiceAttribute
  isExternal: false
  name: SaveStateInOperationTransaction
  nameWithType: DurableServiceAttribute.SaveStateInOperationTransaction
- uid: System.ServiceModel.Description.DurableServiceAttribute.UnknownExceptionAction*
  parent: System.ServiceModel.Description.DurableServiceAttribute
  isExternal: false
  name: UnknownExceptionAction
  nameWithType: DurableServiceAttribute.UnknownExceptionAction
- uid: System.ServiceModel.Description.DurableServiceAttribute.Validate*
  parent: System.ServiceModel.Description.DurableServiceAttribute
  isExternal: false
  name: Validate
  nameWithType: DurableServiceAttribute.Validate
