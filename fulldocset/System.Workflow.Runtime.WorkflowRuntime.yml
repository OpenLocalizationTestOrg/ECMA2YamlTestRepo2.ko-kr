### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.WorkflowRuntime
  id: WorkflowRuntime
  children:
  - System.Workflow.Runtime.WorkflowRuntime.#ctor
  - System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)
  - System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)
  - System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  - System.Workflow.Runtime.WorkflowRuntime.Dispose
  - System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)
  - System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1
  - System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows
  - System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)
  - System.Workflow.Runtime.WorkflowRuntime.GetService``1
  - System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)
  - System.Workflow.Runtime.WorkflowRuntime.IsStarted
  - System.Workflow.Runtime.WorkflowRuntime.Name
  - System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)
  - System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled
  - System.Workflow.Runtime.WorkflowRuntime.Started
  - System.Workflow.Runtime.WorkflowRuntime.StartRuntime
  - System.Workflow.Runtime.WorkflowRuntime.Stopped
  - System.Workflow.Runtime.WorkflowRuntime.StopRuntime
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded
  langs:
  - csharp
  name: WorkflowRuntime
  nameWithType: WorkflowRuntime
  fullName: System.Workflow.Runtime.WorkflowRuntime
  type: Class
  summary: "워크플로에 대 한 워크플로 런타임 엔진에서 제공 하는 구성 가능한 실행 환경을 나타냅니다."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]WorkflowRuntime는 호스트 응용 프로그램 및 서비스를 구성 하 여 워크플로 런타임 엔진을 제어 하 고 변경 내용을 워크플로 런타임 엔진 및 해당 워크플로 인스턴스 중 하나에 대 한 알림을 필요한 기능을 노출 합니다."
  example:
  - "The following code example demonstrates how to use WorkflowRuntime functionality from a workflow host. It provides examples of how to use the <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> constructor and the <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>, <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>, and <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> methods. The code also shows the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object in a workflow host using the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method. It also shows how to set event handlers for the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted>, <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled>, and <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> events.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public class WorkflowRuntime : IDisposable, IServiceProvider
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor
  id: '#ctor'
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowRuntime()
  nameWithType: WorkflowRuntime.WorkflowRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime()
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Workflow.Runtime.WorkflowRuntime>기본 속성 값으로 초기화 되 고 기본 핵심 서비스를 포함 합니다.</xref:System.Workflow.Runtime.WorkflowRuntime> 또한 워크플로 런타임 엔진을 구성 하려면 추가 및 사용 하 여 서비스를 제거할 수 있습니다 <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>및 <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>, <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A> 를 설정할 수 있습니다 및</xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> 후의 <xref:System.Workflow.Runtime.WorkflowRuntime>는 호출을 구성 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>를 워크플로 런타임 엔진과 해당 서비스를 시작 합니다.</xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> </xref:System.Workflow.Runtime.WorkflowRuntime>       다음 표에서 <xref:System.Workflow.Runtime.WorkflowRuntime>클래스</xref:System.Workflow.Runtime.WorkflowRuntime> 의 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 초기 값 |   |--------------|-------------------|   | <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>|&quot; WorkflowRuntime &quot;|   | <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>| `false`|       기본 핵심 서비스는 <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService>및 <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService>.</xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> </xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>"
  example:
  - "The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. It provides an example of how to use the WorkflowRuntime constructor to create an instance of a <xref:System.Workflow.Runtime.WorkflowRuntime> and access its methods and events.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: public WorkflowRuntime ();
    parameters: []
  overload: System.Workflow.Runtime.WorkflowRuntime.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowRuntime(String)
  nameWithType: WorkflowRuntime.WorkflowRuntime(String)
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime(String)
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> 응용 프로그램 구성 파일의 지정된 된 섹션을 사용 하 여 클래스입니다."
  remarks: "<xref:System.Workflow.Runtime.WorkflowRuntime>설정 하 여 지정 된 섹션에 따라 초기화 `configSectionName` 응용 프로그램 구성 파일에.</xref:System.Workflow.Runtime.WorkflowRuntime> `configSectionName`유효한 일치 해야 `workflowSettings` 구성 파일의 섹션입니다.       응용 프로그램 구성 파일을 사용 하 여 워크플로 런타임 엔진을 구성, 로드 및에 나열 된 유형의 클래스를 인스턴스화하는 `Services` 구성 파일의 섹션입니다. 다음 순서로 다음과 같은 서명 사용 하는 클래스 생성자를 찾도록 클래스 워크플로 런타임 엔진 이러한를 생성할 때: 1입니다.  Service(WorkflowRuntime runtime, NameValueCollection parameters) 2입니다.  Service(WorkflowRuntime runtime) 3입니다.  Service(NameValueCollection parameters) 4입니다.  모든 서비스 구성 파일에서 로드 되는 클래스 Service() 이러한 생성자 서명을 하나 이상 구현 해야 합니다.       [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection>"
  syntax:
    content: public WorkflowRuntime (string configSectionName);
    parameters:
    - id: configSectionName
      type: System.String
      description: "올바른 이름의 <xref uid=&quot;langword_csharp_workflowSettings&quot; name=&quot;workflowSettings&quot; href=&quot;&quot;> </xref> 응용 프로그램 구성 파일의 섹션입니다."
  overload: System.Workflow.Runtime.WorkflowRuntime.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>configSectionName</code>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "유효한 <xref uid=&quot;langword_csharp_workflowSettings&quot; name=&quot;workflowSettings&quot; href=&quot;&quot;> </xref> 응용 프로그램 구성 파일에서 섹션을 찾을 수 없습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> 이 응용 프로그램 도메인에 대해 이미 존재 합니다."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)
  id: '#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)'
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowRuntime(WorkflowRuntimeSection)
  nameWithType: WorkflowRuntime.WorkflowRuntime(WorkflowRuntimeSection)
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime(WorkflowRuntimeSection)
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> 클래스를 지정 된 설정을 사용 하 여 <xref href=&quot;System.Workflow.Runtime.Configuration.WorkflowRuntimeSection&quot;> </xref>합니다."
  remarks: "이 생성자는 응용 프로그램 구성 파일을 사용 하지 않는 호스트에 대 한 단일 메서드 호출을 사용 하 여 워크플로 런타임 엔진을 구성 하는 메커니즘을 제공 합니다. 응용 프로그램 구성 파일을 사용 하지 않는 여러 가지 이유가 있습니다. 호스트 구성 파일을 사용 하 여 허용 하지 않는 환경에서 실행할 수 있습니다. 예를 들어 신뢰할 수 있는 환경에 있는 읽기를 허용 하지 않는 보안상의 이유로 응용 프로그램 구성 파일에서 합니다. 또한 호스트가 비공개 구성 메커니즘; 사용할 수 있습니다. 예를 들어 호스트는 SQL 데이터베이스에 워크플로 런타임 엔진 구성 설정을 저장할 수 있습니다.       워크플로 런타임 엔진이 로드 하 고 <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=fullName>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=fullName> 에 포함 된 형식의 클래스를 인스턴스화합니다. 다음 순서로 다음과 같은 서명 사용 하는 클래스 생성자를 찾도록 클래스 워크플로 런타임 엔진 이러한를 생성할 때: 1입니다.  Service(WorkflowRuntime runtime, NameValueCollection parameters) 2입니다.  Service(WorkflowRuntime runtime) 3입니다.  Service(NameValueCollection parameters) 4입니다.  모든 서비스 클래스에 지정 된 Service() `settings` 이러한 생성자 서명을 하나 이상 구현 해야 합니다."
  syntax:
    content: public WorkflowRuntime (System.Workflow.Runtime.Configuration.WorkflowRuntimeSection settings);
    parameters:
    - id: settings
      type: System.Workflow.Runtime.Configuration.WorkflowRuntimeSection
      description: "A <xref href=&quot;System.Workflow.Runtime.Configuration.WorkflowRuntimeSection&quot;></xref>."
  overload: System.Workflow.Runtime.WorkflowRuntime.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>settings</code>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> 이 응용 프로그램 도메인에 대해 이미 존재 합니다."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)
  id: AddService(System.Object)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: AddService(Object)
  nameWithType: WorkflowRuntime.AddService(Object)
  fullName: System.Workflow.Runtime.WorkflowRuntime.AddService(Object)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "워크플로 런타임 엔진에 지정된 된 서비스를 추가 합니다."
  remarks: "핵심 서비스를 추가 하 여 워크플로 런타임 엔진을 구성할 수 있습니다. 핵심 서비스는 다음 서비스 기본 클래스에서 파생 된: <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>클래스는 <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>클래스의 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>클래스 및 <xref:System.Workflow.Runtime.Tracking.TrackingService>클래스</xref:System.Workflow.Runtime.Tracking.TrackingService> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>  핵심 서비스는 워크플로 런타임 엔진; 실행 하지 않는 경우에 추가할 수 있습니다. 즉, <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>은 `false`.</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> <xref:System.Workflow.Runtime.WorkflowRuntime>호스트에서 실행 중인 응용 프로그램이 나 다른 워크플로에서 사용할 수 있는 다른 서비스에 대 한 저장소 컨테이너로 사용 수도 수 있습니다.</xref:System.Workflow.Runtime.WorkflowRuntime> 파생 된 비핵심 서비스를 추가 하는 경우는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>AddService 호출 하는 워크플로 런타임 엔진이 시작 된 후 클래스는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>해당 서비스에서 구현 하는 메서드.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>      > [!NOTE] > AddService 제한을 적용 하는 두 개의 서비스의 동일한 <xref:System.Type> <xref:System.Workflow.Runtime.WorkflowRuntime>.</xref:System.Workflow.Runtime.WorkflowRuntime> 에 추가할 수 있습니다</xref:System.Type> 그러나 동일한 기본 클래스에서 파생 되는 여러 서비스를 추가할 수 있습니다.  각각에 다음 서비스 기본 클래스에서 파생 된 서비스가 하나만 있을 수는 <xref:System.Workflow.Runtime.WorkflowRuntime>:의 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>클래스는 <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>클래스 및 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>클래스</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> ,</xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> </xref:System.Workflow.Runtime.WorkflowRuntime>  추가 하는 경우 여러 서비스에서 파생 된 예에서는 두 개의 지 속성 서비스에 대 한 이러한 클래스 중 하나 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> throw</xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>"
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. It provides example of how to use the AddService method to add an <xref:System.Workflow.Activities.ExternalDataExchangeService> and <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> to the workflow run-time engine.  \n  \n This code example is part of the [Cancelling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: public void AddService (object service);
    parameters:
    - id: service
      type: System.Object
      description: "추가할 서비스를 나타내는 개체입니다."
  overload: System.Workflow.Runtime.WorkflowRuntime.AddService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>service</code>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> 삭제 됩니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>service</code>워크플로 런타임 엔진에 이미 등록 되었습니다.       -또는- <code>service</code> 은 핵심 서비스와 워크플로 런타임 엔진은 이미 실행 되 고 (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted*> 은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>)."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)
  id: CreateWorkflow(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(Type)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "지정된 된 워크플로 <xref:System.Type>.</xref:System.Type> 를 사용 하 여 새 워크플로 인스턴스를 만듭니다."
  remarks: "전에 <xref:System.Workflow.Runtime.WorkflowInstance>가 생성 되어 유효성 검사가 실행 됩니다</xref:System.Workflow.Runtime.WorkflowInstance> 유효성 검사 오류가 발생 한 경우는 <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>throw 됩니다.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> 이 간단한 시나리오에 적합 하지만 서버 환경에서 모든 활성화에 대 한 워크플로 유효성을 다시 검사 수 불필요 한 오버 헤드입니다.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]유효성 검사를 해제, 참조 <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>"
  example:
  - "The following code example demonstrates the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object in a workflow host using the CreateWorkflow method.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#260](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#260)]\n [!code-vb[WF_Samples#260](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#260)]"
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType);
    parameters:
    - id: workflowType
      type: System.Type
      description: "<xref:System.Type>워크플로 만드는.</xref:System.Type>"
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "만들어진된 워크플로 인스턴스입니다."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowType</code>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)
  id: CreateWorkflow(System.Xml.XmlReader)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(XmlReader)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "지정 된 <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 를 사용 하 여 워크플로 인스턴스를 만듭니다."
  remarks: "워크플로 인스턴스가 <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 에서 참조 하는 XAML 워크플로 정의 파일에서 만들어집니다.       전에 <xref:System.Workflow.Runtime.WorkflowInstance>가 생성 되어 유효성 검사가 실행 됩니다</xref:System.Workflow.Runtime.WorkflowInstance> 유효성 검사 오류가 발생 한 경우는 <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>throw 됩니다.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> 이 간단한 시나리오에 적합 하지만 서버 환경에서 모든 활성화에 대 한 워크플로 유효성을 다시 검사 수 불필요 한 오버 헤드입니다.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]유효성 검사를 해제, 참조 <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>"
  example:
  - "The following example demonstrates how to create a workflow given a XAML-based workflow definition.  \n  \n```  \nstatic void Main(string[] args)  \n{  \n    using (WorkflowRuntime workflowRuntime = new WorkflowRuntime())  \n    {  \n        AutoResetEvent waitHandle = new AutoResetEvent(false);  \n        workflowRuntime.WorkflowCompleted += delegate(object sender, WorkflowCompletedEventArgs e)  \n        {  \n            waitHandle.Set();  \n        };  \n        workflowRuntime.WorkflowTerminated += delegate(object sender, WorkflowTerminatedEventArgs e)  \n        {  \n            Console.WriteLine(e.Exception.Message);  \n            waitHandle.Set();  \n        };  \n  \n        TypeProvider typeProvider = new TypeProvider(null);  \n        // Add referenced assemblies, if needed  \n        // typeProvider.AddAssembly(...);  \n        workflowRuntime.AddService(typeProvider);  \n  \n        using (XmlReader reader = XmlReader.Create(\"Workflow1.xoml\"))  \n        {  \n            WorkflowInstance instance = workflowRuntime.CreateWorkflow(reader);  \n            instance.Start();  \n        }  \n  \n        waitHandle.WaitOne();  \n    }  \n}  \n```"
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader);
    parameters:
    - id: workflowDefinitionReader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>워크플로 정의 포함 하는.</xref:System.Xml.XmlReader>"
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "만들어진된 워크플로 인스턴스입니다."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowDefinitionReader</code>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> 삭제 됩니다."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(Type,Dictionary<String,Object>)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "지정된 된 워크플로 사용 하 여 워크플로 인스턴스를 만듭니다 <xref:System.Type>변수와 인수에 지정 된 포함 된 워크플로를 &lt;xref:System.Collections.Generic.Dictionary%602&gt;.</xref:System.Type>"
  remarks: "전에 <xref:System.Workflow.Runtime.WorkflowInstance>가 생성 되어 유효성 검사가 실행 됩니다</xref:System.Workflow.Runtime.WorkflowInstance> 유효성 검사 오류가 발생 한 경우는 <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>throw 됩니다.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> 이 간단한 시나리오에 적합 하지만 서버 환경에서 모든 활성화에 대 한 워크플로 유효성을 다시 검사 수 불필요 한 오버 헤드입니다.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]유효성 검사를 해제, 참조 <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>       매개 변수를 전달에 대 한 예제 `CreateWorkflow`, 참조 [Workflow with Parameters 샘플](http://go.microsoft.com/fwlink/?LinkId=157403)합니다."
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType, System.Collections.Generic.Dictionary<string,object> namedArgumentValues);
    parameters:
    - id: workflowType
      type: System.Type
      description: "<xref:System.Type>워크플로 만드는.</xref:System.Type>"
    - id: namedArgumentValues
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "A &lt;xref:System.Collections.Generic.Dictionary%602&gt; 워크플로에 인수를 나타내는 문자열로 키가 지정 된 개체입니다."
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "만들어진된 워크플로 인스턴스입니다."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowType</code>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  id: CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(Type,Dictionary<String,Object>,Guid)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>,Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "지정된 된 매개 변수를 사용 하 여 워크플로 인스턴스를 만듭니다."
  remarks: "전에 <xref:System.Workflow.Runtime.WorkflowInstance>가 생성 되어 유효성 검사가 실행 됩니다</xref:System.Workflow.Runtime.WorkflowInstance> 유효성 검사 오류가 발생 한 경우는 <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>throw 됩니다.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> 이 간단한 시나리오에 적합 하지만 서버 환경에서 모든 활성화에 대 한 워크플로 유효성을 다시 검사 수 불필요 한 오버 헤드입니다.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]유효성 검사를 해제, 참조 <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>       워크플로 `instanceId` 에 대 한 실행에 의해 로드 된 워크플로 <xref:System.Workflow.Runtime.WorkflowRuntime>고유 해야 합니다.</xref:System.Workflow.Runtime.WorkflowRuntime> 전달 하는 경우는 `instanceId` 만들고 워크플로 실행 중인 워크플로를 이미 사용 중 이며 `instanceId`, <xref:System.InvalidOperationException>throw 됩니다.</xref:System.InvalidOperationException>       매개 변수를 전달에 대 한 예제 `CreateWorkflow`, 참조 [Workflow with Parameters 샘플](http://go.microsoft.com/fwlink/?LinkID=157403)합니다."
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType, System.Collections.Generic.Dictionary<string,object> namedArgumentValues, Guid instanceId);
    parameters:
    - id: workflowType
      type: System.Type
      description: "<xref:System.Type>워크플로 만드는.</xref:System.Type>"
    - id: namedArgumentValues
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "A &lt;xref:System.Collections.Generic.Dictionary%602&gt; 워크플로에 인수를 나타내는 문자열로 키가 지정 된 개체입니다."
    - id: instanceId
      type: System.Guid
      description: "<xref:System.Guid>는 특정 <xref href=&quot;System.Workflow.Runtime.WorkflowInstance&quot;> </xref> 만들려는.</xref:System.Guid>"
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "만들어진된 워크플로 인스턴스입니다."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowType</code>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "지정 된를 사용 하 여 워크플로 인스턴스를 만듭니다 <xref:System.Xml.XmlReader>개체 및 지정 된 포함 된 인수 &lt;xref:System.Collections.Generic.Dictionary%602&gt;.</xref:System.Xml.XmlReader>"
  remarks: "참조 하는 워크플로 정의에서 워크플로 인스턴스를 만들지는 <xref:System.Xml.XmlReader>및 제공한 인수 `namedArgumentValues`.</xref:System.Xml.XmlReader>       전에 <xref:System.Workflow.Runtime.WorkflowInstance>가 생성 되어 유효성 검사가 실행 됩니다</xref:System.Workflow.Runtime.WorkflowInstance> 유효성 검사 오류가 발생 한 경우는 <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>throw 됩니다.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> 이 간단한 시나리오에 적합 하지만 서버 환경에서 모든 활성화에 대 한 워크플로 유효성을 다시 검사 수 불필요 한 오버 헤드입니다.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]유효성 검사를 해제, 참조 <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>       매개 변수를 전달에 대 한 예제 `CreateWorkflow`, 참조 [Workflow with Parameters 샘플](http://go.microsoft.com/fwlink/?LinkID=157403)합니다.       XML에 정의 된 규칙을 사용 하 여 예제를 보려면 [규칙 샘플 IfElse](http://go.microsoft.com/fwlink/?LinkId=157404)합니다."
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader, System.Xml.XmlReader rulesReader, System.Collections.Generic.Dictionary<string,object> namedArgumentValues);
    parameters:
    - id: workflowDefinitionReader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>워크플로 정의 포함 하는.</xref:System.Xml.XmlReader>"
    - id: rulesReader
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
    - id: namedArgumentValues
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "A &lt;xref:System.Collections.Generic.Dictionary%602&gt; 워크플로에 인수를 나타내는 문자열로 키가 지정 된 개체입니다."
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "만들어진된 워크플로 인스턴스입니다."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowDefinitionReader</code>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> 삭제 됩니다."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  id: CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "지정된 된 매개 변수를 사용 하 여 워크플로 인스턴스를 만듭니다."
  remarks: "전에 <xref:System.Workflow.Runtime.WorkflowInstance>가 생성 되어 유효성 검사가 실행 됩니다</xref:System.Workflow.Runtime.WorkflowInstance> 유효성 검사 오류가 발생 한 경우는 <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>throw 됩니다.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> 이 간단한 시나리오에 적합 하지만 서버 환경에서 모든 활성화에 대 한 워크플로 유효성을 다시 검사 수 불필요 한 오버 헤드입니다.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]유효성 검사를 해제, 참조 <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>       워크플로 `instanceId` 에 대 한 실행에 의해 로드 된 워크플로 <xref:System.Workflow.Runtime.WorkflowRuntime>고유 해야 합니다.</xref:System.Workflow.Runtime.WorkflowRuntime> 전달 하는 경우는 `instanceId` 만들고 워크플로 실행 중인 워크플로를 이미 사용 중 이며 `instanceId`, <xref:System.InvalidOperationException>throw 됩니다.</xref:System.InvalidOperationException>       매개 변수를 전달에 대 한 예제 `CreateWorkflow`, 참조 [Workflow with Parameters 샘플](http://go.microsoft.com/fwlink/?LinkID=157403)합니다.       XML에 정의 된 규칙을 사용 하 여 예제를 보려면 [규칙 샘플 IfElse](http://go.microsoft.com/fwlink/?LinkID=157404)합니다."
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader, System.Xml.XmlReader rulesReader, System.Collections.Generic.Dictionary<string,object> namedArgumentValues, Guid instanceId);
    parameters:
    - id: workflowDefinitionReader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>워크플로 정의 포함 하는.</xref:System.Xml.XmlReader>"
    - id: rulesReader
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
    - id: namedArgumentValues
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "A &lt;xref:System.Collections.Generic.Dictionary%602&gt; 워크플로에 인수를 나타내는 문자열로 키가 지정 된 개체입니다."
    - id: instanceId
      type: System.Guid
      description: "<xref:System.Guid>는 특정 <xref href=&quot;System.Workflow.Runtime.WorkflowInstance&quot;> </xref> 만들려는.</xref:System.Guid>"
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "만들어진된 워크플로 인스턴스입니다."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowType</code>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.Dispose
  id: Dispose
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: Dispose()
  nameWithType: WorkflowRuntime.Dispose()
  fullName: System.Workflow.Runtime.WorkflowRuntime.Dispose()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "사용 하는 리소스를 해제는 <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>합니다."
  remarks: "<xref:System.Workflow.Runtime.WorkflowRuntime>Dispose <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> 호출한 후에 호출 해야 정상적으로,</xref:System.Workflow.Runtime.WorkflowRuntime> 종료 하려면 단독 leaves Dispose 메서드를 호출 하기 때문에 이것이 <xref:System.Workflow.Runtime.WorkflowRuntime>불안정 한 상태가.</xref:System.Workflow.Runtime.WorkflowRuntime> Dispose 열려 있는 파일 핸들, 데이터베이스 연결 및 등을 닫아 런타임이 사용 하는 리소스를 해제 하거나 하지 않는 워크플로 인스턴스 언로드, 서비스를 중지 하는 다른 작업 중 하나를 수행 하지만 <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>않습니다.</xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>       호스트 응용 프로그램에서 사용 하는 리소스를 해제 해야 하는 경우에 dispose를 호출 해야는 <xref:System.Workflow.Runtime.WorkflowRuntime>전에 가비지 수집기에 의해 자동으로 해제 됩니다.</xref:System.Workflow.Runtime.WorkflowRuntime> Dispose에 대 한 일반 정보를 참조 하십시오. [관리 되지 않는 리소스 정리](~/add/includes/ajax-current-ext-md.md) 및 [Dispose 메서드를 구현](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example demonstrates how to call Dispose on a <xref:System.Workflow.Runtime.WorkflowRuntime> object. In this sample, the Dispose method is called from the FormClosing event handler for the main form of the application; this ensures that the objects created by the runtime are properly cleaned up when the application shuts down. This sample is from the [Speech Application Sample](http://go.microsoft.com/fwlink/?LinkId=157405).  \n  \n [!code-cs[WF_Samples#108](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#108)]\n [!code-vb[WF_Samples#108](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#108)]"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Workflow.Runtime.WorkflowRuntime.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)
  id: GetAllServices(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetAllServices(Type)
  nameWithType: WorkflowRuntime.GetAllServices(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetAllServices(Type)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "모든 서비스를 검색 워크플로 런타임 엔진에 추가 된 구현에 지정 된 <xref:System.Type>.</xref:System.Type> 에서 파생 되는"
  remarks: "빈 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>나타냅니다 서비스가 하는 구현에서 지정 된 파생 <xref:System.Type>워크플로 런타임 엔진에 추가 되었습니다.</xref:System.Type> </xref:System.Collections.ObjectModel.ReadOnlyCollection%601>"
  example:
  - "The following example demonstrates how to retrieve all services of a given type from a <xref:System.Workflow.Runtime.WorkflowRuntime> object.  \n  \n [!code-cs[WF_Samples#19](~/add/codesnippet/csharp/wf_snippets/snippets.cs#19)]\n [!code-vb[WF_Samples#19](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#19)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<object> GetAllServices (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "<xref:System.Type>반환 될 서비스를 구현 해야 합니다.</xref:System.Type>"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Object}
      description: "구현 하거나 지정 된 <xref:System.Type>.</xref:System.Type> 에서 파생 되는 서비스"
  overload: System.Workflow.Runtime.WorkflowRuntime.GetAllServices*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> 삭제 됩니다."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1
  id: GetAllServices``1
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetAllServices()
  nameWithType: WorkflowRuntime.GetAllServices()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetAllServices()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<T> GetAllServices<T> ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{T}
      description: "추가할 수 있습니다."
  overload: System.Workflow.Runtime.WorkflowRuntime.GetAllServices<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows
  id: GetLoadedWorkflows
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetLoadedWorkflows()
  nameWithType: WorkflowRuntime.GetLoadedWorkflows()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "현재 메모리에 로드 된 모든 워크플로 인스턴스를 포함 하는 컬렉션을 가져옵니다."
  remarks: "이때 달리 <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A>,이 메서드를 throw 하지 않습니다는 <xref:System.InvalidOperationException>런타임이 시작 되지 않은 경우.</xref:System.InvalidOperationException> </xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A>"
  example:
  - "The following example demonstrates how to retrieve a collection of loaded workflows from a <xref:System.Workflow.Runtime.WorkflowRuntime> object.  \n  \n [!code-cs[WF_Samples#18](~/add/codesnippet/csharp/wf_snippets/snippets.cs#18)]\n [!code-vb[WF_Samples#18](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#18)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Workflow.Runtime.WorkflowInstance> GetLoadedWorkflows ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.Runtime.WorkflowInstance}
      description: "A <xref href=&quot;System.Workflow.Runtime.WorkflowInstance&quot;> </xref> 각 워크플로 인스턴스에 대 한 현재 메모리에 로드 합니다."
  overload: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> 삭제 됩니다."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: WorkflowRuntime.GetService(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetService(Type)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "지정 된 서비스를 검색 <xref:System.Type>워크플로 런타임 엔진에서.</xref:System.Type>"
  remarks: "GetService throw <xref:System.InvalidOperationException> <xref:System.Type>.</xref:System.Type> 지정된에 대 한 서비스가 여러 개 있는 경우</xref:System.InvalidOperationException> <xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A>지정한 형식의 서비스가 여러 개 있을 수 있는 <xref:System.Workflow.Runtime.WorkflowRuntime>.</xref:System.Workflow.Runtime.WorkflowRuntime> 경우</xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A> 의 오버 로드 된 메서드 중 하나를 사용 해야 따라서 예를 들어 워크플로 런타임 엔진에는 여러 개의 추적 서비스가 있을 수 있습니다. 지정 하 여 추적 서비스를 요청 하는 경우는 <xref:System.Workflow.Runtime.Tracking.TrackingService>은 예외가 throw 될 수는 기본 클래스입니다.</xref:System.Workflow.Runtime.Tracking.TrackingService>"
  syntax:
    content: public object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "<xref:System.Type>검색할 서비스의.</xref:System.Type>"
    return:
      type: System.Object
      description: "지정 된 <xref:System.Type>.</xref:System.Type> 서비스"
  overload: System.Workflow.Runtime.WorkflowRuntime.GetService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> 이 이미 삭제 합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "형식의 서비스가 여러 개 <code> serviceType </code> 찾았습니다."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService``1
  id: GetService``1
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetService()
  nameWithType: WorkflowRuntime.GetService()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetService()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  syntax:
    content: public T GetService<T> ();
    parameters: []
    return:
      type: T
      description: "추가할 수 있습니다."
  overload: System.Workflow.Runtime.WorkflowRuntime.GetService<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)
  id: GetWorkflow(System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetWorkflow(Guid)
  nameWithType: WorkflowRuntime.GetWorkflow(Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "지정 된 <xref:System.Guid>.</xref:System.Guid> 워크플로 인스턴스를 검색"
  remarks: "경우 `instanceId` 현재 메모리에 없는 워크플로 인스턴스를 지정 합니다. 워크플로 인스턴스가 메모리에 로드 되 고 실행 되도록 예약 됩니다. 예를 들어 워크플로 인스턴스가 중단 된 후 GetWorkflow 워크플로 인스턴스가 메모리에 로드를 호출할 수 있습니다. 이 경우에 워크플로 인스턴스의 마지막 유지 된 상태 지 속성 서비스에 의해 메모리에 로드 됩니다."
  example:
  - "The following code example demonstrates a `ReloadWorkflow` method that calls the GetWorkflow method. The `ReloadWorkflow` method is part of a larger class that has a `Runtime` property to access all of the methods, properties, and events of the <xref:System.Workflow.Runtime.WorkflowRuntime> class.  \n  \n This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkId=157351) sample.  \n  \n> [!NOTE]\n>  In the example, the call to <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> is redundant because both the GetWorkflow and <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> methods use the same internal helper method to load the workflow instance into memory.  \n  \n [!code-cs[WF_Samples#265](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#265)]\n [!code-vb[WF_Samples#265](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#265)]"
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance GetWorkflow (Guid instanceId);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "<xref:System.Guid>워크플로 인스턴스의.</xref:System.Guid>"
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "<xref href=&quot;System.Workflow.Runtime.WorkflowInstance&quot;> </xref> 지정된 <xref:System.Guid>.</xref:System.Guid> 포함"
  overload: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "워크플로 런타임이 시작 되지 않았습니다."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.IsStarted
  id: IsStarted
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: IsStarted
  nameWithType: WorkflowRuntime.IsStarted
  fullName: System.Workflow.Runtime.WorkflowRuntime.IsStarted
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "워크플로 런타임 엔진이 시작 되었는지 여부를 나타내는 값을 가져옵니다."
  remarks: "IsStarted는 워크플로 런타임 엔진 서비스가 실행 되 고 있는지를 나타냅니다. IsStarted은 `false` <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> 호스트 호출할 때까지 그대로 `true` <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> 호스트 호출할 때까지      > [!NOTE] > 실행 되는 동안 워크플로 런타임 엔진에 핵심 서비스를 추가할 수 없습니다. 핵심 서비스는의 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>클래스는 <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService>클래스는 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>클래스 및 <xref:System.Workflow.Runtime.Tracking.TrackingService>클래스</xref:System.Workflow.Runtime.Tracking.TrackingService> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> 에서 파생 된 서비스"
  example:
  - "The following example demonstrates how to access the IsStarted property of a <xref:System.Workflow.Runtime.WorkflowRuntime> object. In this example, if the runtime is started, a message is printed to the console.  \n  \n [!code-cs[WF_Samples#21](~/add/codesnippet/csharp/wf_snippets/snippets.cs#21)]\n [!code-vb[WF_Samples#21](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#21)]"
  syntax:
    content: public bool IsStarted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>워크플로 런타임 엔진이 시작 된 경우에; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Workflow.Runtime.WorkflowRuntime.IsStarted*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.Name
  id: Name
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: Name
  nameWithType: WorkflowRuntime.Name
  fullName: System.Workflow.Runtime.WorkflowRuntime.Name
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "와 연결 된 이름을 가져오거나 설정 합니다.는 <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>합니다."
  remarks: "워크플로 런타임 엔진이 실행 되는 동안 이름을 설정할 수 없습니다 (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> 은 `true`).</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>"
  example:
  - "The following example demonstrates how to access the Name property of a <xref:System.Workflow.Runtime.WorkflowRuntime> object. In this example, the name of the runtime is set to \"Main Runtime\".  \n  \n [!code-cs[WF_Samples#20](~/add/codesnippet/csharp/wf_snippets/snippets.cs#20)]\n [!code-vb[WF_Samples#20](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#20)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "연결 된이 이름은 <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>합니다."
  overload: System.Workflow.Runtime.WorkflowRuntime.Name*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이름을 설정 하려고 한 <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> 삭제 되는 발생 합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "워크플로 런타임 엔진이 실행 되는 동안 이름을 설정 하려고 발생 합니다."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)
  id: RemoveService(System.Object)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: RemoveService(Object)
  nameWithType: WorkflowRuntime.RemoveService(Object)
  fullName: System.Workflow.Runtime.WorkflowRuntime.RemoveService(Object)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "워크플로 런타임 엔진에서 지정된 된 서비스를 제거합니다."
  remarks: "워크플로 런타임 엔진이 실행 되는 동안에 핵심 서비스를 제거할 수 없습니다 (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> 은 `true`).</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> 핵심 서비스는의 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>클래스의 <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>클래스, 해당 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>클래스 또는 <xref:System.Workflow.Runtime.Tracking.TrackingService>클래스</xref:System.Workflow.Runtime.Tracking.TrackingService> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> 에서 파생 된 서비스  경우 `service` 에서 파생 되는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>RemoveService 호출 클래스는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>메서드는 구현 `service`.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>"
  example:
  - "In the following example, a <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> is added and removed from the <xref:System.Workflow.Runtime.WorkflowRuntime>.  \n  \n [!code-cs[WF_Samples#16](~/add/codesnippet/csharp/wf_snippets/snippets.cs#16)]\n [!code-vb[WF_Samples#16](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#16)]"
  syntax:
    content: public void RemoveService (object service);
    parameters:
    - id: service
      type: System.Object
      description: "제거할 서비스를 나타내는 개체입니다."
  overload: System.Workflow.Runtime.WorkflowRuntime.RemoveService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>service</code>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> 이 이미 삭제 합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The workflow run-time engine has started (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>) and <code>service</code> is a core service.  \n  \n \\- or -  \n  \n <code>service</code> is not registered with the workflow run-time engine."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled
  id: ServicesExceptionNotHandled
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: ServicesExceptionNotHandled
  nameWithType: WorkflowRuntime.ServicesExceptionNotHandled
  fullName: System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "파생 된 서비스는 발생 된 <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeService&quot;> </xref> 호출 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent*>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent*> 클래스"
  remarks: "파생 된 서비스는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>클래스를 호출할 수는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A>메서드를 처리할 수 없었던 예외가 실행 중에 발생 하는 ServicesExceptionNotHandled 이벤트에 대 한 구독자에 게 알립니다.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 복구 메커니즘을 구현 하려면이 이벤트를 구독할 수 있습니다.       이 이벤트는 워크플로 런타임 엔진에 의해 워크플로 인스턴스가 아직 생성 되지 않은 예외가 발생할 때 발생 합니다. 이 시나리오에서 호스트 응용 프로그램에 예외가 발생 했다고 알리는 유일한 방법은이 이벤트를 발생 시키는 것입니다. 그러나 워크플로 런타임 엔진은 호출 하지 않습니다이 직접. 대신, 워크플로 런타임 엔진이 워크플로 인스턴스를 예외 배달 설정 하거나 없는 인스턴스가 있는 경우이 이벤트를 발생 시킨 서비스에이 경우에 호출자에 게 다시 throw 있습니다. 고유한 지 속성 또는 스케줄러 서비스를 만드는 경우를 구현 해야이 이벤트 직접 기본 통해 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A>메서드.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A>       보낸 사람에 게 ServicesExceptionNotHandled 이벤트에 대 한 포함는 <xref:System.Workflow.Runtime.WorkflowRuntime>및 <xref:System.Workflow.Runtime.WorkflowEventArgs>포함는 <xref:System.Guid>서비스를 사용 하는 워크플로 인스턴스 및 <xref:System.Exception>있는 처리할 수 없습니다.</xref:System.Exception> </xref:System.Guid> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]이벤트를 처리 하는, 참조 [이벤트 사용](http://go.microsoft.com/fwlink/?LinkID=157352)합니다."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates ServicesExceptionNotHandled with an event handler, a method named `OnExceptionNotHandled`.  \n  \n This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=157351).  \n  \n [!code-cs[WF_Samples#271](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#271)]\n [!code-vb[WF_Samples#271](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#271)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs> ServicesExceptionNotHandled;
    return:
      type: System.EventHandler{System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.Started
  id: Started
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: Started
  nameWithType: WorkflowRuntime.Started
  fullName: System.Workflow.Runtime.WorkflowRuntime.Started
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "워크플로 런타임 엔진이 시작 될 때 발생 합니다."
  remarks: "<xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>메서드 시작 됨 이벤트를 발생 후 워크플로 런타임 엔진의 핵심 서비스 구성 유효성을 검사 한,이 호출는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>각에서 파생 되는 서비스에 의해 구현 되는 메서드는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>클래스을 설정한 <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>를 `true`.</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> 순서는 보장 되지 않습니다에서 파생 되는 서비스는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>클래스는 워크플로 런타임 엔진에 의해 시작 되 고 이러한 워크플로 런타임 엔진 서비스 중 일부는 다른 있어야만 시작 작업을 완료 하려면 이러한 서비스를 제공 하는 기능에 종속 될 수 있습니다.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 워크플로 런타임 엔진 서비스를 재정의할 수는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=fullName>메서드 시작 이벤트가 발생할 때 다른 워크플로 런타임 엔진 서비스의 지원이 필요한 최종 시작 작업을 수행 하도록 합니다.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=fullName>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]이벤트를 처리 하는, 참조 [이벤트 사용](http://go.microsoft.com/fwlink/?LinkID=157352)합니다."
  example:
  - "In the following example, an event handler is added to the Started event of the <xref:System.Workflow.Runtime.WorkflowRuntime>. In this example, the handler is an anonymous method that prints a simple message to the console.  \n  \n [!code-cs[WF_Samples#15](~/add/codesnippet/csharp/wf_snippets/snippets.cs#15)]\n [!code-vb[WF_Samples#15](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#15)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowRuntimeEventArgs> Started;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowRuntimeEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.StartRuntime
  id: StartRuntime
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: StartRuntime()
  nameWithType: WorkflowRuntime.StartRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.StartRuntime()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "워크플로 런타임 엔진과 워크플로 런타임 엔진 서비스를 시작합니다."
  remarks: "이 메서드는 올바른 핵심 서비스 집합이 있고 다음 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>클래스</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 에서 파생 되는 모든 서비스 시작 확인  하나 및 각 핵심 서비스를 다음 중에서 하나만 있어야: 워크플로 `CommitWorkBatch` 는 <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>기본 클래스 및 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>기본 클래스</xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> 에서 파생 된 스케줄러 서비스에서</xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> 파생 된 서비스  이러한 주요 서비스 중 하나 또는 모두 누락 되 면 워크플로 런타임 엔진은 적절 한 기본 서비스를 제공 하는: <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService>워크플로에 대 한 `CommitWorkBatch` 서비스 및 <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService>스케줄러 서비스에 대 한.</xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> </xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> 지 속성 서비스는 선택 사항 이지만 하나의 지 속성 서비스만 있을 수 있습니다. 서비스 구성 유효성을 검사 한, StartRuntime <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>모든 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>클래스</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 에서 파생 되는 서비스에서</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 호출  워크플로 런타임 엔진에서 설정 마지막으로, <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>가능성이 높아지고는 <xref:System.Workflow.Runtime.WorkflowRuntime.Started>이벤트.</xref:System.Workflow.Runtime.WorkflowRuntime.Started> </xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>       추가 하거나 워크플로 런타임 엔진이 시작 된 후에 핵심 서비스를 제거할 수 없습니다. 핵심 서비스는의 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>클래스의 <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>클래스, 해당 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>클래스 또는 <xref:System.Workflow.Runtime.Tracking.TrackingService>클래스</xref:System.Workflow.Runtime.Tracking.TrackingService> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> 에서 파생 된 서비스  워크플로 런타임 엔진이 실행 되는 동안 StartRuntime를 호출 하면 아무 작업도 수행 합니다."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code calls the StartRuntime after the <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> creates a <xref:System.Workflow.Runtime.WorkflowRuntime> instance and after it calls <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> to add services to the runtime. It also calls StartRuntime before any other processing occurs.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: public void StartRuntime ();
    parameters: []
  overload: System.Workflow.Runtime.WorkflowRuntime.StartRuntime*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> 삭제 됩니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "둘 이상의 서비스 워크플로 <xref uid=&quot;langword_csharp_CommitWorkBatch&quot; name=&quot;CommitWorkBatch&quot; href=&quot;&quot;> </xref> 서비스에 등록 된이 <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>합니다.       -또는-등록 된이 둘 이상의 스케줄러 서비스가 <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>합니다.       -또는-등록 된이 둘 이상의 지 속성 서비스가 <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.Stopped
  id: Stopped
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: Stopped
  nameWithType: WorkflowRuntime.Stopped
  fullName: System.Workflow.Runtime.WorkflowRuntime.Stopped
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "워크플로 런타임 엔진이 중지 될 때 발생 합니다."
  remarks: "<xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>메서드에는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>각 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>클래스</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 에서 파생 되는 서비스에서 구현 된 메서드</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 를 호출한 후 중지 이벤트를 발생 시킵니다.</xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>  이러한 워크플로 런타임 엔진 서비스를 중지 하 고는 중지 될 때까지 다른 서비스에 의존 하는 일부 기능을 보존 해야 할 수는 이러한 서비스 중 일부를 순서에 대 한 보장이 없습니다. 이러한 서비스를 재정의할 수는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=fullName>Stopped 이벤트가 발생할 때 나머지 종료 논리를 수행 하는 메서드.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=fullName>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]이벤트를 처리 하는, 참조 [이벤트 사용](http://go.microsoft.com/fwlink/?LinkID=157352)합니다."
  example:
  - "In the following example, an event handler is added to the Stopped event of the <xref:System.Workflow.Runtime.WorkflowRuntime>. In this example, the handler is an anonymous method that prints a simple message to the console.  \n  \n [!code-cs[WF_Samples#14](~/add/codesnippet/csharp/wf_snippets/snippets.cs#14)]\n [!code-vb[WF_Samples#14](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#14)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowRuntimeEventArgs> Stopped;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowRuntimeEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.StopRuntime
  id: StopRuntime
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: StopRuntime()
  nameWithType: WorkflowRuntime.StopRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.StopRuntime()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "워크플로 런타임 엔진과 런타임 서비스를 중지합니다."
  remarks: "이 메서드를 사용 하면 워크플로 런타임 엔진 각 해당 워크플로 인스턴스 언로드, 모든에서 파생 된 서비스를 중지 하는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>클래스, 설정 <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>를 `false`, 시키고는 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped>이벤트.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> </xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>       <xref:System.Workflow.Runtime.WorkflowRuntime>정상적으로, StopRuntime <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> 를 호출 하기 전에 호출</xref:System.Workflow.Runtime.WorkflowRuntime> 을 종료 하려면       [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]<xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>메서드.</xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>"
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. StopRuntime is called after the host has completed all other processing associated with the runtime.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.  \n  \n [!code-cs[WF_Samples#259](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#259)]\n [!code-vb[WF_Samples#259](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#259)]"
  syntax:
    content: public void StopRuntime ();
    parameters: []
  overload: System.Workflow.Runtime.WorkflowRuntime.StopRuntime*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> 이 이미 삭제 합니다."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted
  id: WorkflowAborted
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowAborted
  nameWithType: WorkflowRuntime.WorkflowAborted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "워크플로 인스턴스가 중단 될 때 발생 합니다."
  remarks: "WorkflowAborted 발생 모든 보류 중인 작업에 대 한 워크플로 인스턴스가 선택을 취소 하면 인스턴스가 메모리에서 무효화 되기 전에 워크플로 합니다. <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=fullName>.</xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=fullName> 를 호출 하 여 워크플로 인스턴스를 중단할 수 있습니다.       이 이벤트에 대 한 보낸 사람에 게 포함 되어는 <xref:System.Workflow.Runtime.WorkflowRuntime>및 <xref:System.Workflow.Runtime.WorkflowEventArgs>포함는 <xref:System.Workflow.Runtime.WorkflowInstance>이벤트와 관련 된.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]이벤트를 처리 하는, 참조 [이벤트 사용](http://go.microsoft.com/fwlink/?LinkId=157352)합니다."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowAborted with an event handler, a method named `OnWorkflowAborted`.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#141](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#141)]\n [!code-vb[WF_Samples#141](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#141)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowAborted;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted
  id: WorkflowCompleted
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowCompleted
  nameWithType: WorkflowRuntime.WorkflowCompleted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "워크플로 인스턴스가 완료 되 면 발생 합니다."
  remarks: "WorkflowCompleted는 워크플로 인스턴스가 완료 되었지만 인스턴스가 메모리에서 무효화 되기 전에 발생 합니다.       에 대 한는 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>이벤트, 보낸 사람에 포함 되어는 <xref:System.Workflow.Runtime.WorkflowRuntime>및 <xref:System.Workflow.Runtime.WorkflowCompletedEventArgs>포함는 <xref:System.Workflow.Runtime.WorkflowInstance>및 해당 출력 매개 변수.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowCompletedEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime> </xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]이벤트를 처리 하는, 참조 [이벤트 사용](http://go.microsoft.com/fwlink/?LinkId=157352)합니다."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowCompleted with an event handler, a method named `OnWorkflowCompleted`.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowCompletedEventArgs> WorkflowCompleted;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowCompletedEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated
  id: WorkflowCreated
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowCreated
  nameWithType: WorkflowRuntime.WorkflowCreated
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "워크플로 인스턴스가 만들어질 때 발생 합니다."
  remarks: "워크플로 런타임 엔진은 워크플로 인스턴스가 완전히 생성 된 나 활동이 처리 되기 전에 WorkflowCreated 이벤트를 발생 합니다. 이 이벤트에 대 한 보낸 사람에 게 포함 되어는 <xref:System.Workflow.Runtime.WorkflowRuntime>및 <xref:System.Workflow.Runtime.WorkflowEventArgs>포함는 <xref:System.Workflow.Runtime.WorkflowInstance>이벤트와 관련 된.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]이벤트를 처리 하는, 참조 [이벤트 사용](http://go.microsoft.com/fwlink/?LinkId=157352)합니다."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowCreated with an event handler, a method named `OnWorkflowCreated`.  \n  \n This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=15735).  \n  \n [!code-cs[WF_Samples#271](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#271)]\n [!code-vb[WF_Samples#271](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#271)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowCreated;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled
  id: WorkflowIdled
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowIdled
  nameWithType: WorkflowRuntime.WorkflowIdled
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "워크플로 인스턴스가 유휴 상태가 될 때 발생 합니다."
  remarks: "워크플로 런타임 엔진에는 워크플로 인스턴스가 유휴 상태에 들어가면 WorkflowIdled 이벤트를 발생 시킵니다. 예를 들어 워크플로 기다리는 경우는 <xref:System.Workflow.Activities.DelayActivity>동작이 완료.</xref:System.Workflow.Activities.DelayActivity>       이 이벤트에 대 한 보낸 사람에 게 포함 되어는 <xref:System.Workflow.Runtime.WorkflowRuntime>및 <xref:System.Workflow.Runtime.WorkflowEventArgs>포함는 <xref:System.Workflow.Runtime.WorkflowInstance>이벤트와 관련 된.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]이벤트를 처리 하는, 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowIdled with an event handler, a method named `OnWorkflowIdled`.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowIdled;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded
  id: WorkflowLoaded
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowLoaded
  nameWithType: WorkflowRuntime.WorkflowLoaded
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "워크플로 인스턴스가 메모리에 로드 될 때 발생 합니다."
  remarks: "WorkflowLoaded 전에 워크플로 런타임 엔진은 활동을 실행 하기 시작 하지만 지 속성 서비스가 워크플로 인스턴스를 복원한 후에 발생 합니다.       보낸 사람에 게 WorkflowLoaded 이벤트에 대 한 포함는 <xref:System.Workflow.Runtime.WorkflowRuntime>및 <xref:System.Workflow.Runtime.WorkflowEventArgs>포함는 <xref:System.Workflow.Runtime.WorkflowInstance>이벤트와 관련 된.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]이벤트를 처리 하는, 참조 [이벤트 사용](http://go.microsoft.com/fwlink/?LinkID=157352)합니다."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowLoaded with an event handler, a method named `OnWorkflowLoad`.  \n  \n This code example is part of the [Custom Persistence Service](http://go.microsoft.com/fwlink/?LinkID=157351) sample.  \n  \n [!code-cs[WF_Samples#271](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#271)]\n [!code-vb[WF_Samples#271](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#271)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowLoaded;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted
  id: WorkflowPersisted
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowPersisted
  nameWithType: WorkflowRuntime.WorkflowPersisted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "워크플로 인스턴스 상태가 유지 될 때 발생 합니다."
  remarks: "워크플로 인스턴스는 여러 가지 이유로 유지할 수 있습니다. 예를 들어 호스트 호출할 수 <xref:System.Workflow.Runtime.WorkflowInstance.UnLoad%2A?displayProperty=fullName>워크플로 인스턴스나 워크플로 인스턴스가 유휴 상태가 되거나 원자성 범위가 완료 되어 런타임 엔진이 워크플로 인스턴스를 유지할 수 있습니다.</xref:System.Workflow.Runtime.WorkflowInstance.UnLoad%2A?displayProperty=fullName> 지 속성 서비스에 있는 경우는 <xref:System.Workflow.Runtime.WorkflowRuntime>, 워크플로 인스턴스의 상태가 메모리에 저장 된 후 WorkflowPersisted 런타임에 의해 발생 합니다.</xref:System.Workflow.Runtime.WorkflowRuntime> 지 속성 서비스가 없으면 이벤트는 발생 하지만 인스턴스 상태 저장 되지 않습니다. 워크플로 인스턴스가 언로드되고 있으므로 WorkflowPersisted 이벤트가 발생 하는 경우 뒤에 오지는 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded>이벤트.</xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded>       보낸 사람에 게 WorkflowPersisted 이벤트에 대 한 포함는 <xref:System.Workflow.Runtime.WorkflowRuntime>및 <xref:System.Workflow.Runtime.WorkflowEventArgs>포함는 <xref:System.Workflow.Runtime.WorkflowInstance>이벤트와 관련 된.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]이벤트를 처리 하는, 참조 [이벤트 사용](http://go.microsoft.com/fwlink/?LinkID=157352)합니다."
  example:
  - "The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowPersisted with an event handler, a method named `OnWorkflowPersisted`.  \n  \n This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=15735).  \n  \n [!code-cs[WF_Samples#279](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#279)]\n [!code-vb[WF_Samples#279](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#279)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowPersisted;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed
  id: WorkflowResumed
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowResumed
  nameWithType: WorkflowRuntime.WorkflowResumed
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "워크플로 인스턴스 실행을 일시 중단 이후 재개 되 면 발생 합니다."
  remarks: "워크플로 런타임 엔진이 워크플로 인스턴스 예약 된 직전 WorkflowResumed 이벤트를 발생 시킵니다. WorkflowResumed 일반적으로 이벤트는 <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=fullName>.</xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=fullName> 를 명시적으로 호출 때문에 그러나 워크플로 런타임 엔진 작업 수행 하기 위해, 예를 들어, 워크플로 변경 내용을 적용 하려면 인스턴스를 일시적으로 중단할 수 있습니다. 이 경우 WorkflowResumed 이벤트는 런타임 작업 워크플로 인스턴스 실행을 다시 시작 될 때 발생 합니다.       보낸 사람에 게 WorkflowResumed 이벤트에 대 한 포함는 <xref:System.Workflow.Runtime.WorkflowRuntime>및 <xref:System.Workflow.Runtime.WorkflowEventArgs>포함는 <xref:System.Workflow.Runtime.WorkflowInstance>이벤트와 관련 된.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]이벤트를 처리 하는, 참조 [이벤트 사용](http://go.microsoft.com/fwlink/?LinkID=157352)합니다."
  example:
  - "The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowResumed with an event handler, a method named `OnWorkflowResume`.  \n  \n This code example is part of the [Suspend and Terminate Sample](http://go.microsoft.com/fwlink/?LinkId=157402).  \n  \n [!code-cs[WF_Samples#171](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#171)]\n [!code-vb[WF_Samples#171](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#171)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowResumed;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted
  id: WorkflowStarted
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowStarted
  nameWithType: WorkflowRuntime.WorkflowStarted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "워크플로 인스턴스가 시작 되 면 발생 합니다."
  remarks: "워크플로 런타임 엔진이 워크플로 인스턴스 실행에 대 한 루트 활동을 예약 하 여 시작 된 후 WorkflowStarted 이벤트를 발생 시킵니다. 이 이벤트에 대 한 보낸 사람에 게 포함 되어는 <xref:System.Workflow.Runtime.WorkflowRuntime>및 <xref:System.Workflow.Runtime.WorkflowEventArgs>포함는 <xref:System.Workflow.Runtime.WorkflowInstance>이벤트와 관련 된.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]이벤트를 처리 하는, 참조 [이벤트 사용](http://go.microsoft.com/fwlink/?LinkID=157352)합니다."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowStarted with an event handler, a method named `OnWorkflowStarted`.  \n  \n This code example is part of the [Host Communication Sample](http://go.microsoft.com/fwlink/?LinkId=157406).  \n  \n [!code-cs[WF_Samples#297](~/add/codesnippet/csharp/wf_snippets/snippets38.cs#297)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowStarted;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended
  id: WorkflowSuspended
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowSuspended
  nameWithType: WorkflowRuntime.WorkflowSuspended
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "워크플로 인스턴스가 일시 중단 될 때 발생 합니다."
  remarks: "호출을 통해 호스트에서 워크플로 인스턴스를 일시 중단할 수는 <xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A>메서드를 위한 것 이며는 <xref:System.Workflow.ComponentModel.SuspendActivity>활동 또는 워크플로 런타임 엔진에 의해 암시적으로.</xref:System.Workflow.ComponentModel.SuspendActivity> </xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> 예를 들어 워크플로 런타임 엔진 인스턴스를 일시 동적 변경 내용을 인스턴스에 적용할 때.       WorkflowSuspended 이벤트에 대 한 보낸 사람에 게 포함 되어는 <xref:System.Workflow.Runtime.WorkflowRuntime>및 <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs>포함는 <xref:System.Workflow.Runtime.WorkflowInstance>인스턴스 이유를 설명 하는 문자열 일시 중단 되었습니다.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]이벤트를 처리 하는, 참조 [이벤트 사용](http://go.microsoft.com/fwlink/?LinkID=157352)합니다."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowSuspended with an event handler, a method named `OnWorkflowSuspended`.  \n  \n This code example is part of the [Suspend and Terminate Sample](http://go.microsoft.com/fwlink/?LinkID=157402).  \n  \n [!code-cs[WF_Samples#170](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#170)]\n [!code-vb[WF_Samples#170](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#170)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowSuspendedEventArgs> WorkflowSuspended;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowSuspendedEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated
  id: WorkflowTerminated
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowTerminated
  nameWithType: WorkflowRuntime.WorkflowTerminated
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "워크플로 인스턴스가 종료 될 때 발생 합니다."
  remarks: "워크플로 호출 하 여 호스트에 의해 종료 될 수 있습니다는 <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A>메서드를 위한 것 이며는 <xref:System.Workflow.ComponentModel.TerminateActivity>활동 또는 처리 되지 않은 예외가 발생할 때 워크플로 런타임 엔진에 의해.</xref:System.Workflow.ComponentModel.TerminateActivity> </xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> 워크플로 런타임 엔진은 워크플로 인스턴스가 종료 되 면 나 메모리에서 무효화 되기 전에 WorkflowTerminated 이벤트를 발생 합니다.       에 대 한는 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>이벤트, 보낸 사람에 포함 되어는 <xref:System.Workflow.Runtime.WorkflowRuntime>및 <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs>포함는 <xref:System.Workflow.Runtime.WorkflowInstance>및에 인스턴스가 종료 된 이유에 대 한 정보는 <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=fullName>속성.</xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=fullName> </xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime> </xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]이벤트를 처리 하는, 참조 [이벤트 사용](http://go.microsoft.com/fwlink/?LinkID=157352)합니다."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> with an event handler, a method named `OnWorkflowCompleted`.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#260](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#260)]\n [!code-vb[WF_Samples#260](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#260)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowTerminatedEventArgs> WorkflowTerminated;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowTerminatedEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded
  id: WorkflowUnloaded
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowUnloaded
  nameWithType: WorkflowRuntime.WorkflowUnloaded
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "워크플로 인스턴스가 메모리에서 언로드될 때 발생 합니다."
  remarks: "워크플로 인스턴스를 명시적으로 호출 하 여 메모리에서 언로드할 수 <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A>, 자체의 의미 체계에 따라 워크플로 런타임 엔진에 의해 암시적으로 또는.</xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> 인스턴스가 유휴 상태가 되 고 런타임에 경우 워크플로 런타임 엔진에서 워크플로 인스턴스를 언로드합니다 하는 예를 들어 한 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>는 대 한 추가 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A>은 `true`.</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>       워크플로 런타임 엔진이 워크플로 인스턴스 상태가 성공적으로 지속 나 인스턴스가 메모리에서 무효화 되기 전에 WorkflowUnloaded 이벤트를 발생 합니다. 따라서 한 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>이벤트 WorkflowUnloaded 이벤트 앞에 옵니다.</xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>       에 대 한는 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnLoaded>이벤트, 보낸 사람에 포함 되어는 <xref:System.Workflow.Runtime.WorkflowRuntime>및 <xref:System.Workflow.Runtime.WorkflowEventArgs>포함는 <xref:System.Workflow.Runtime.WorkflowInstance>이벤트와 관련 된.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime> </xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnLoaded>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]이벤트를 처리 하는, 참조 [이벤트 사용](http://go.microsoft.com/fwlink/?LinkID=157352)합니다."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowUnloaded with an event handler, a method named `OnWorkflowUnload`.  \n  \n This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=157351).  \n  \n [!code-cs[WF_Samples#271](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#271)]\n [!code-vb[WF_Samples#271](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#271)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowUnloaded;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowRuntime()
  nameWithType: WorkflowRuntime.WorkflowRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime()
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowRuntime(String)
  nameWithType: WorkflowRuntime.WorkflowRuntime(String)
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowRuntime(WorkflowRuntimeSection)
  nameWithType: WorkflowRuntime.WorkflowRuntime(WorkflowRuntimeSection)
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime(WorkflowRuntimeSection)
- uid: System.Workflow.Runtime.Configuration.WorkflowRuntimeSection
  parent: System.Workflow.Runtime.Configuration
  isExternal: false
  name: WorkflowRuntimeSection
  nameWithType: WorkflowRuntimeSection
  fullName: System.Workflow.Runtime.Configuration.WorkflowRuntimeSection
- uid: System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: AddService(Object)
  nameWithType: WorkflowRuntime.AddService(Object)
  fullName: System.Workflow.Runtime.WorkflowRuntime.AddService(Object)
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(Type)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type)
- uid: System.Workflow.Runtime.WorkflowInstance
  parent: System.Workflow.Runtime
  isExternal: false
  name: WorkflowInstance
  nameWithType: WorkflowInstance
  fullName: System.Workflow.Runtime.WorkflowInstance
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(XmlReader)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(Type,Dictionary<String,Object>)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>)
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<String,Object>
  nameWithType: Dictionary<String,Object>
  fullName: System.Collections.Generic.Dictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(Type,Dictionary<String,Object>,Guid)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>,Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>,Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
- uid: System.Workflow.Runtime.WorkflowRuntime.Dispose
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Dispose()
  nameWithType: WorkflowRuntime.Dispose()
  fullName: System.Workflow.Runtime.WorkflowRuntime.Dispose()
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetAllServices(Type)
  nameWithType: WorkflowRuntime.GetAllServices(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetAllServices(Type)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Object}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<Object>
  nameWithType: ReadOnlyCollection<Object>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Object>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetAllServices()
  nameWithType: WorkflowRuntime.GetAllServices()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetAllServices()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{T}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetLoadedWorkflows()
  nameWithType: WorkflowRuntime.GetLoadedWorkflows()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.Runtime.WorkflowInstance}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<WorkflowInstance>
  nameWithType: ReadOnlyCollection<WorkflowInstance>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Workflow.Runtime.WorkflowInstance>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Workflow.Runtime.WorkflowInstance>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowInstance
    name: WorkflowInstance
    nameWithType: WorkflowInstance
    fullName: WorkflowInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetService(Type)
  nameWithType: WorkflowRuntime.GetService(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetService(Type)
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService``1
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetService()
  nameWithType: WorkflowRuntime.GetService()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetService()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetWorkflow(Guid)
  nameWithType: WorkflowRuntime.GetWorkflow(Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(Guid)
- uid: System.Workflow.Runtime.WorkflowRuntime.IsStarted
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: IsStarted
  nameWithType: WorkflowRuntime.IsStarted
  fullName: System.Workflow.Runtime.WorkflowRuntime.IsStarted
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Runtime.WorkflowRuntime.Name
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Name
  nameWithType: WorkflowRuntime.Name
  fullName: System.Workflow.Runtime.WorkflowRuntime.Name
- uid: System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: RemoveService(Object)
  nameWithType: WorkflowRuntime.RemoveService(Object)
  fullName: System.Workflow.Runtime.WorkflowRuntime.RemoveService(Object)
- uid: System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: ServicesExceptionNotHandled
  nameWithType: WorkflowRuntime.ServicesExceptionNotHandled
  fullName: System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled
- uid: System.EventHandler{System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ServicesExceptionNotHandledEventArgs>
  nameWithType: EventHandler<ServicesExceptionNotHandledEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs
    name: ServicesExceptionNotHandledEventArgs
    nameWithType: ServicesExceptionNotHandledEventArgs
    fullName: ServicesExceptionNotHandledEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.Started
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Started
  nameWithType: WorkflowRuntime.Started
  fullName: System.Workflow.Runtime.WorkflowRuntime.Started
- uid: System.EventHandler{System.Workflow.Runtime.WorkflowRuntimeEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<WorkflowRuntimeEventArgs>
  nameWithType: EventHandler<WorkflowRuntimeEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.WorkflowRuntimeEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.WorkflowRuntimeEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowRuntimeEventArgs
    name: WorkflowRuntimeEventArgs
    nameWithType: WorkflowRuntimeEventArgs
    fullName: WorkflowRuntimeEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.StartRuntime
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: StartRuntime()
  nameWithType: WorkflowRuntime.StartRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.StartRuntime()
- uid: System.Workflow.Runtime.WorkflowRuntime.Stopped
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Stopped
  nameWithType: WorkflowRuntime.Stopped
  fullName: System.Workflow.Runtime.WorkflowRuntime.Stopped
- uid: System.Workflow.Runtime.WorkflowRuntime.StopRuntime
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: StopRuntime()
  nameWithType: WorkflowRuntime.StopRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.StopRuntime()
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowAborted
  nameWithType: WorkflowRuntime.WorkflowAborted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted
- uid: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<WorkflowEventArgs>
  nameWithType: EventHandler<WorkflowEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.WorkflowEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.WorkflowEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowEventArgs
    name: WorkflowEventArgs
    nameWithType: WorkflowEventArgs
    fullName: WorkflowEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowCompleted
  nameWithType: WorkflowRuntime.WorkflowCompleted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted
- uid: System.EventHandler{System.Workflow.Runtime.WorkflowCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<WorkflowCompletedEventArgs>
  nameWithType: EventHandler<WorkflowCompletedEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.WorkflowCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.WorkflowCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowCompletedEventArgs
    name: WorkflowCompletedEventArgs
    nameWithType: WorkflowCompletedEventArgs
    fullName: WorkflowCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowCreated
  nameWithType: WorkflowRuntime.WorkflowCreated
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowIdled
  nameWithType: WorkflowRuntime.WorkflowIdled
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowLoaded
  nameWithType: WorkflowRuntime.WorkflowLoaded
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowPersisted
  nameWithType: WorkflowRuntime.WorkflowPersisted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowResumed
  nameWithType: WorkflowRuntime.WorkflowResumed
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowStarted
  nameWithType: WorkflowRuntime.WorkflowStarted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowSuspended
  nameWithType: WorkflowRuntime.WorkflowSuspended
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended
- uid: System.EventHandler{System.Workflow.Runtime.WorkflowSuspendedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<WorkflowSuspendedEventArgs>
  nameWithType: EventHandler<WorkflowSuspendedEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.WorkflowSuspendedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.WorkflowSuspendedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowSuspendedEventArgs
    name: WorkflowSuspendedEventArgs
    nameWithType: WorkflowSuspendedEventArgs
    fullName: WorkflowSuspendedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowTerminated
  nameWithType: WorkflowRuntime.WorkflowTerminated
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated
- uid: System.EventHandler{System.Workflow.Runtime.WorkflowTerminatedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<WorkflowTerminatedEventArgs>
  nameWithType: EventHandler<WorkflowTerminatedEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.WorkflowTerminatedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.WorkflowTerminatedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowTerminatedEventArgs
    name: WorkflowTerminatedEventArgs
    nameWithType: WorkflowTerminatedEventArgs
    fullName: WorkflowTerminatedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowUnloaded
  nameWithType: WorkflowRuntime.WorkflowUnloaded
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowRuntime
  nameWithType: WorkflowRuntime.WorkflowRuntime
- uid: System.Workflow.Runtime.WorkflowRuntime.AddService*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: AddService
  nameWithType: WorkflowRuntime.AddService
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow
  nameWithType: WorkflowRuntime.CreateWorkflow
- uid: System.Workflow.Runtime.WorkflowRuntime.Dispose*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Dispose
  nameWithType: WorkflowRuntime.Dispose
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetAllServices
  nameWithType: WorkflowRuntime.GetAllServices
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices<T>*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetAllServices<T>
  nameWithType: WorkflowRuntime.GetAllServices<T>
- uid: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetLoadedWorkflows
  nameWithType: WorkflowRuntime.GetLoadedWorkflows
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetService
  nameWithType: WorkflowRuntime.GetService
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService<T>*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetService<T>
  nameWithType: WorkflowRuntime.GetService<T>
- uid: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetWorkflow
  nameWithType: WorkflowRuntime.GetWorkflow
- uid: System.Workflow.Runtime.WorkflowRuntime.IsStarted*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: IsStarted
  nameWithType: WorkflowRuntime.IsStarted
- uid: System.Workflow.Runtime.WorkflowRuntime.Name*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Name
  nameWithType: WorkflowRuntime.Name
- uid: System.Workflow.Runtime.WorkflowRuntime.RemoveService*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: RemoveService
  nameWithType: WorkflowRuntime.RemoveService
- uid: System.Workflow.Runtime.WorkflowRuntime.StartRuntime*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: StartRuntime
  nameWithType: WorkflowRuntime.StartRuntime
- uid: System.Workflow.Runtime.WorkflowRuntime.StopRuntime*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: StopRuntime
  nameWithType: WorkflowRuntime.StopRuntime
