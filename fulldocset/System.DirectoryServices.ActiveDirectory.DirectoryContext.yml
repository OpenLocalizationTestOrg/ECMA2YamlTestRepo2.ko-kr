### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext
  id: DirectoryContext
  children:
  - System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType)
  - System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String)
  - System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String)
  - System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String,System.String)
  - System.DirectoryServices.ActiveDirectory.DirectoryContext.ContextType
  - System.DirectoryServices.ActiveDirectory.DirectoryContext.Name
  - System.DirectoryServices.ActiveDirectory.DirectoryContext.UserName
  langs:
  - csharp
  name: DirectoryContext
  nameWithType: DirectoryContext
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext
  type: Class
  summary: "DirectoryContext 클래스는 특정 디렉터리 및 디렉터리에 액세스 하는 데 사용 되는 자격 증명을 식별 합니다."
  remarks: "디렉터리 컨텍스트에 메서드와 같은 도메인 이나 포리스트의 System.DirectoryServices.ActiveDirectory 디렉터리 개체의 속성에 액세스 하기 전에 만들어야 합니다.       디렉터리 컨텍스트에 만들 때 프로세스의 현재 자격 증명 또는 대체 자격 증명에 적용할 수 해당 상황에 맞는 적절 한 생성자를 사용 하 여 합니다.  이러한 자격 증명에는 프로그램 디렉터리 개체에 액세스할 때 적용 되는 권한이 결정 됩니다.  Active Directory 도메인 서비스 개체 관리 권한이 없는 사용자가 검색 또는 수정 으로부터 보호 될 수 있습니다, 때문에 대상 개체에 액세스할 수 있는 권한이 있는 대체 자격 증명을 사용 해야만 경우에 따라 적절 한 프로그램 기능 됩니다.       다음 표에서 허용 되는 대상 형식의 목록 및 대상 문자열의 형식에 대 한 설명을 포함 합니다.      | 대상 유형 | <xref:System.DirectoryServices.ActiveDirectory.DirectoryContextType>멤버 | 대상 이름 형식 |   |-----------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------|   | 도메인 컨트롤러 | <xref:System.DirectoryServices.ActiveDirectory.DirectoryContextType>| 도메인 컨트롤러의 DNS 이름입니다. |   | AD LDS 인스턴스 | <xref:System.DirectoryServices.ActiveDirectory.DirectoryContextType>| 포트 번호, 예를 들어 ad_lds_instance.fabrikam.com:389.| AD LDS 서버 및 LDAP의 DNS 이름   | 도메인 | <xref:System.DirectoryServices.ActiveDirectory.DirectoryContextType>| 예를 들어 sales.corp.fabrikam.com.| 도메인의 DNS 이름   | 포리스트 | <xref:System.DirectoryServices.ActiveDirectory.DirectoryContextType>| 예를 들어 corp.fabrikam.com.| 포리스트의 DNS 이름   | 응용 프로그램 파티션을 | <xref:System.DirectoryServices.ActiveDirectory.DirectoryContextType>| 응용 프로그램 파티션의 DNS 이름입니다. |   | AD LDS 구성 집합 | <xref:System.DirectoryServices.ActiveDirectory.DirectoryContextType>| 구성 집합에 대 한 AD LDS 인스턴스를 등록 한 서비스 연결 지점과 연관 된 키워드 중 하나입니다. |</xref:System.DirectoryServices.ActiveDirectory.DirectoryContextType> </xref:System.DirectoryServices.ActiveDirectory.DirectoryContextType> </xref:System.DirectoryServices.ActiveDirectory.DirectoryContextType> </xref:System.DirectoryServices.ActiveDirectory.DirectoryContextType> </xref:System.DirectoryServices.ActiveDirectory.DirectoryContextType> </xref:System.DirectoryServices.ActiveDirectory.DirectoryContextType> </xref:System.DirectoryServices.ActiveDirectory.DirectoryContextType>"
  syntax:
    content: public class DirectoryContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType)
  id: '#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType)'
  parent: System.DirectoryServices.ActiveDirectory.DirectoryContext
  langs:
  - csharp
  name: DirectoryContext(DirectoryContextType)
  nameWithType: DirectoryContext.DirectoryContext(DirectoryContextType)
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext.DirectoryContext(DirectoryContextType)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;> </xref> 현재 사용자 컨텍스트의 자격 증명을 포함 하는 지정 된 형식의 클래스입니다."
  syntax:
    content: public DirectoryContext (System.DirectoryServices.ActiveDirectory.DirectoryContextType contextType);
    parameters:
    - id: contextType
      type: System.DirectoryServices.ActiveDirectory.DirectoryContextType
      description: "중 하나는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContextType&quot;> </xref> 만들려는 컨텍스트의 유형을 지정 하는 멤버입니다.  이 생성자에 대 한 컨텍스트 형식은 이어야 <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContextType&quot;> </xref> 또는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContextType&quot;> </xref>합니다.  디렉터리 또는 대상 이름을 지정 하는 매개 변수를 포함 하는 생성자가 필요 하기 때문에이 생성자를 사용 하 여 다른 형식의 컨텍스트에 디렉터리를 만들 수 없습니다."
  overload: System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contextType</code>잘못 되었습니다."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "이 클래스는 현재 플랫폼에서 작동 하지 않습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String)
  id: '#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String)'
  parent: System.DirectoryServices.ActiveDirectory.DirectoryContext
  langs:
  - csharp
  name: DirectoryContext(DirectoryContextType,String)
  nameWithType: DirectoryContext.DirectoryContext(DirectoryContextType,String)
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext.DirectoryContext(DirectoryContextType,String)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;> </xref> 지정 된 형식의 지정 된 이름 및 현재 사용자 컨텍스트의 자격 증명을 포함 하는 클래스입니다."
  syntax:
    content: public DirectoryContext (System.DirectoryServices.ActiveDirectory.DirectoryContextType contextType, string name);
    parameters:
    - id: contextType
      type: System.DirectoryServices.ActiveDirectory.DirectoryContextType
      description: "중 하나는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContextType&quot;> </xref> 만들려는 컨텍스트의 유형을 지정 하는 멤버입니다."
    - id: name
      type: System.String
      description: "디렉터리 컨텍스트의 대상은 합니다. 이 문자열의 설명 섹션에 정의 된 형식에 사용할 수 있는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;> </xref> 항목입니다."
  overload: System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>잘못 되었습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>contextType</code>잘못 되었습니다."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "이 클래스는 현재 플랫폼에서 작동 하지 않습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String)
  id: '#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String)'
  parent: System.DirectoryServices.ActiveDirectory.DirectoryContext
  langs:
  - csharp
  name: DirectoryContext(DirectoryContextType,String,String)
  nameWithType: DirectoryContext.DirectoryContext(DirectoryContextType,String,String)
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext.DirectoryContext(DirectoryContextType,String,String)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;> </xref> 지정 된 형식의 지정 된 사용자 이름 및 암호를 포함 하는 클래스입니다."
  syntax:
    content: public DirectoryContext (System.DirectoryServices.ActiveDirectory.DirectoryContextType contextType, string username, string password);
    parameters:
    - id: contextType
      type: System.DirectoryServices.ActiveDirectory.DirectoryContextType
      description: "중 하나는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContextType&quot;> </xref> 만들려는 컨텍스트의 유형을 지정 하는 멤버입니다. 이 생성자에 대 한이 매개 변수 해야 <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContextType&quot;> </xref> 또는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContextType&quot;> </xref>합니다."
    - id: username
      type: System.String
      description: "액세스에 사용할 사용자 이름입니다."
    - id: password
      type: System.String
      description: "액세스에 사용할 암호입니다."
  overload: System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contextType</code>잘못 되었습니다."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "이 클래스는 현재 플랫폼에서 작동 하지 않습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String,System.String)
  id: '#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String,System.String)'
  parent: System.DirectoryServices.ActiveDirectory.DirectoryContext
  langs:
  - csharp
  name: DirectoryContext(DirectoryContextType,String,String,String)
  nameWithType: DirectoryContext.DirectoryContext(DirectoryContextType,String,String,String)
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext.DirectoryContext(DirectoryContextType,String,String,String)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;> </xref> 지정 된 형식의 지정 된 대상, 사용자 이름 및 암호를 포함 하는 클래스입니다."
  syntax:
    content: public DirectoryContext (System.DirectoryServices.ActiveDirectory.DirectoryContextType contextType, string name, string username, string password);
    parameters:
    - id: contextType
      type: System.DirectoryServices.ActiveDirectory.DirectoryContextType
      description: "중 하나는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContextType&quot;> </xref> 만들려는 컨텍스트의 유형을 지정 하는 멤버입니다."
    - id: name
      type: System.String
      description: "디렉터리 컨텍스트의 대상은 합니다. 이 문자열의 설명 섹션에 정의 된 형식에 사용할 수 있는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;> </xref> 항목입니다."
    - id: username
      type: System.String
      description: "액세스에 사용할 사용자 이름입니다."
    - id: password
      type: System.String
      description: "액세스에 사용할 암호입니다."
  overload: System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>잘못 되었습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>contextType</code>잘못 되었습니다."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "이 클래스는 현재 플랫폼에서 작동 하지 않습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext.ContextType
  id: ContextType
  parent: System.DirectoryServices.ActiveDirectory.DirectoryContext
  langs:
  - csharp
  name: ContextType
  nameWithType: DirectoryContext.ContextType
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext.ContextType
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "컨텍스트 개체의 형식을 가져옵니다."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DirectoryContextType ContextType { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DirectoryContextType
      description: "중 하나는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContextType&quot;> </xref> 컨텍스트의 유형을 지정 하는 멤버입니다."
  overload: System.DirectoryServices.ActiveDirectory.DirectoryContext.ContextType*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext.Name
  id: Name
  parent: System.DirectoryServices.ActiveDirectory.DirectoryContext
  langs:
  - csharp
  name: Name
  nameWithType: DirectoryContext.Name
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext.Name
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "컨텍스트의 이름을 가져옵니다."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "컨텍스트에서의 이름입니다."
  overload: System.DirectoryServices.ActiveDirectory.DirectoryContext.Name*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext.UserName
  id: UserName
  parent: System.DirectoryServices.ActiveDirectory.DirectoryContext
  langs:
  - csharp
  name: UserName
  nameWithType: DirectoryContext.UserName
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext.UserName
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "컨텍스트의 사용자 이름을 가져옵니다."
  syntax:
    content: public string UserName { get; }
    return:
      type: System.String
      description: "이 컨텍스트가 액세스에 사용할 사용자 이름입니다."
  overload: System.DirectoryServices.ActiveDirectory.DirectoryContext.UserName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType)
  parent: System.DirectoryServices.ActiveDirectory.DirectoryContext
  isExternal: false
  name: DirectoryContext(DirectoryContextType)
  nameWithType: DirectoryContext.DirectoryContext(DirectoryContextType)
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext.DirectoryContext(DirectoryContextType)
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContextType
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DirectoryContextType
  nameWithType: DirectoryContextType
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContextType
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String)
  parent: System.DirectoryServices.ActiveDirectory.DirectoryContext
  isExternal: false
  name: DirectoryContext(DirectoryContextType,String)
  nameWithType: DirectoryContext.DirectoryContext(DirectoryContextType,String)
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext.DirectoryContext(DirectoryContextType,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.DirectoryContext
  isExternal: false
  name: DirectoryContext(DirectoryContextType,String,String)
  nameWithType: DirectoryContext.DirectoryContext(DirectoryContextType,String,String)
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext.DirectoryContext(DirectoryContextType,String,String)
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.DirectoryContext
  isExternal: false
  name: DirectoryContext(DirectoryContextType,String,String,String)
  nameWithType: DirectoryContext.DirectoryContext(DirectoryContextType,String,String,String)
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext.DirectoryContext(DirectoryContextType,String,String,String)
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext.ContextType
  parent: System.DirectoryServices.ActiveDirectory.DirectoryContext
  isExternal: false
  name: ContextType
  nameWithType: DirectoryContext.ContextType
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext.ContextType
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext.Name
  parent: System.DirectoryServices.ActiveDirectory.DirectoryContext
  isExternal: false
  name: Name
  nameWithType: DirectoryContext.Name
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext.Name
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext.UserName
  parent: System.DirectoryServices.ActiveDirectory.DirectoryContext
  isExternal: false
  name: UserName
  nameWithType: DirectoryContext.UserName
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext.UserName
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor*
  parent: System.DirectoryServices.ActiveDirectory.DirectoryContext
  isExternal: false
  name: DirectoryContext
  nameWithType: DirectoryContext.DirectoryContext
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext.ContextType*
  parent: System.DirectoryServices.ActiveDirectory.DirectoryContext
  isExternal: false
  name: ContextType
  nameWithType: DirectoryContext.ContextType
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext.Name*
  parent: System.DirectoryServices.ActiveDirectory.DirectoryContext
  isExternal: false
  name: Name
  nameWithType: DirectoryContext.Name
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext.UserName*
  parent: System.DirectoryServices.ActiveDirectory.DirectoryContext
  isExternal: false
  name: UserName
  nameWithType: DirectoryContext.UserName
