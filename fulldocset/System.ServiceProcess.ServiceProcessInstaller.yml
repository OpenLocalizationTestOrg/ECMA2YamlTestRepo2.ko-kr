### YamlMime:ManagedReference
items:
- uid: System.ServiceProcess.ServiceProcessInstaller
  id: ServiceProcessInstaller
  children:
  - System.ServiceProcess.ServiceProcessInstaller.#ctor
  - System.ServiceProcess.ServiceProcessInstaller.Account
  - System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)
  - System.ServiceProcess.ServiceProcessInstaller.HelpText
  - System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)
  - System.ServiceProcess.ServiceProcessInstaller.Password
  - System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)
  - System.ServiceProcess.ServiceProcessInstaller.Username
  langs:
  - csharp
  name: ServiceProcessInstaller
  nameWithType: ServiceProcessInstaller
  fullName: System.ServiceProcess.ServiceProcessInstaller
  type: Class
  summary: "확장 하는 클래스가 포함 된 실행 파일을 설치 <xref href=&quot;System.ServiceProcess.ServiceBase&quot;> </xref>합니다. 이 클래스는 서비스 응용 프로그램을 설치 하는 경우 InstallUtil.exe 등의 설치 유틸리티에 의해 호출 됩니다."
  remarks: "ServiceProcessInstaller는 실행 파일의 모든 서비스에 공통적으로 작동 합니다. 설치 하려는 서비스와 관련 된 레지스트리 값을 쓸 설치 유틸리티에 의해 사용 됩니다.       서비스를 설치 하려면에서 상속 되는 프로젝트 설치 관리자 클래스를 만듭니다 <xref:System.Configuration.Install.Installer>를 설정 하 고는 <xref:System.ComponentModel.RunInstallerAttribute>클래스에 `true`.</xref:System.ComponentModel.RunInstallerAttribute> </xref:System.Configuration.Install.Installer> 프로젝트 내에서 서비스 응용 프로그램 마다 하나의 ServiceProcessInstaller 인스턴스 및 한 인스턴스화 <xref:System.ServiceProcess.ServiceInstaller>응용 프로그램의 각 서비스에 대 한 인스턴스.</xref:System.ServiceProcess.ServiceInstaller> ServiceProcessInstaller 인스턴스 및 <xref:System.ServiceProcess.ServiceInstaller>프로젝트 설치 관리자 클래스 인스턴스</xref:System.ServiceProcess.ServiceInstaller> 를 마지막으로 추가       유틸리티를 사용 하 여 서비스 어셈블리의 클래스를 찾습니다 InstallUtil.exe를 실행 하면는 <xref:System.ComponentModel.RunInstallerAttribute>로 설정 `true`.</xref:System.ComponentModel.RunInstallerAttribute> 에 추가 하 여 서비스 어셈블리에 클래스 추가 <xref:System.Configuration.Install.Installer.Installers%2A>프로젝트 설치 관리자와 연결 된 컬렉션입니다.</xref:System.Configuration.Install.Installer.Installers%2A> 경우 <xref:System.ComponentModel.RunInstallerAttribute>은 `false`, 설치 유틸리티 프로젝트 설치 관리자를 무시 합니다.</xref:System.ComponentModel.RunInstallerAttribute>       ServiceProcessInstaller 인스턴스에 대 한 속성을 수정할 수 있습니다 로그온 한 사용자가 아닌 계정에서 실행 하는 서비스 응용 프로그램을 지정 한다고 포함 됩니다. 특정을 지정할 수 있습니다 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>및 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>쌍은 서비스를 실행 하거나 사용할 수 있습니다 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>에서 서비스가 컴퓨터의 시스템 계정, 로컬 또는 네트워크 서비스 계정 또는 사용자 계정에서 실행 되도록 지정할 수 있습니다.</xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> </xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> </xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>      > [!NOTE] > 컴퓨터의 시스템 계정 관리자 계정 동일 하지 않습니다.       일반적으로 메서드를 호출 하지 않으면 <xref:System.ServiceProcess.ServiceInstaller>; 코드 내에서 일반적으로에서 호출 설치 유틸리티.</xref:System.ServiceProcess.ServiceInstaller> 설치 유틸리티를 자동으로 호출 된 <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=fullName>및 <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=fullName>설치 프로세스 중에 방법을.</xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=fullName> </xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=fullName> 백업를 필요에 따라 호출 하 여 <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>(또는 <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=fullName>) 이전에 설치 된 모든 구성 요소에.</xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=fullName> </xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>       응용 프로그램의 설치 루틴 프로젝트 설치 관리자의 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>.</xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> 를 사용 하 여 구성 요소가 이미 설치 되어 자동으로 정보를 유지 관리 이 상태 정보는 계속 ServiceProcessInstaller 인스턴스와 각 업데이트 <xref:System.ServiceProcess.ServiceInstaller>인스턴스가 유틸리티에 의해 설치 된.</xref:System.ServiceProcess.ServiceInstaller> 일반적으로 코드의 명시적으로이 상태 정보를 수정할 필요는 없습니다.       기본 클래스 생성자를 사용 하면 한 ServiceProcessInstaller 인스턴스화 <xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>가 호출 됩니다.</xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>"
  example:
  - "The following example creates a project installer called MyProjectInstaller, which inherits from <xref:System.Configuration.Install.Installer>. It is assumed there is a service executable that contains two services, \"Hello-World Service 1\" and \"Hello-World Service 2\". Within the constructor for MyProjectInstaller (which would be called by the install utility), <xref:System.ServiceProcess.ServiceInstaller> objects are created for each service, and a ServiceProcessInstaller is created for the executable. For the install utility to recognize MyProjectInstaller as a valid installer, the <xref:System.ComponentModel.RunInstallerAttribute> attribute is set to `true`.  \n  \n Optional properties are set on the process installer and the service installers before the installers are added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection. When the install utility accesses MyProjectInstaller, the objects added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection through a call to <xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=fullName> will be installed in turn. During the process, the installer maintains state information indicating which objects have been installed, so each object can be backed out in turn in case of an installation failure.  \n  \n Normally, you would not instantiate your project installer class explicitly. You would create it and add the <xref:System.ComponentModel.RunInstallerAttribute>, but the install utility actually calls, and therefore instantiates, the class.  \n  \n [!code-cpp[Classic ServiceInstaller Example#1](~/add/codesnippet/cpp/t-system.serviceprocess._0_1.cpp)]\n [!code-cs[Classic ServiceInstaller Example#1](~/add/codesnippet/csharp/t-system.serviceprocess._0_1.cs)]\n [!code-vb[Classic ServiceInstaller Example#1](~/add/codesnippet/visualbasic/t-system.serviceprocess._0_1.vb)]"
  syntax:
    content: 'public class ServiceProcessInstaller : System.Configuration.Install.ComponentInstaller'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Configuration.Install.Installer
  - System.Configuration.Install.ComponentInstaller
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)
  - System.Configuration.Install.Installer.AfterInstall
  - System.Configuration.Install.Installer.AfterRollback
  - System.Configuration.Install.Installer.AfterUninstall
  - System.Configuration.Install.Installer.BeforeInstall
  - System.Configuration.Install.Installer.BeforeRollback
  - System.Configuration.Install.Installer.BeforeUninstall
  - System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.Committed
  - System.Configuration.Install.Installer.Committing
  - System.Configuration.Install.Installer.Context
  - System.Configuration.Install.Installer.Installers
  - System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.Parent
  - System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.#ctor
  id: '#ctor'
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: ServiceProcessInstaller()
  nameWithType: ServiceProcessInstaller.ServiceProcessInstaller()
  fullName: System.ServiceProcess.ServiceProcessInstaller.ServiceProcessInstaller()
  type: Constructor
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.ServiceProcess.ServiceProcessInstaller&quot;> </xref> 클래스입니다."
  syntax:
    content: public ServiceProcessInstaller ();
    parameters: []
  overload: System.ServiceProcess.ServiceProcessInstaller.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.Account
  id: Account
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: Account
  nameWithType: ServiceProcessInstaller.Account
  fullName: System.ServiceProcess.ServiceProcessInstaller.Account
  type: Property
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "이 서비스 응용 프로그램을 실행 하는 데 계정의 유형을 가져오거나 설정 합니다."
  remarks: "계정 속성이 `User`, <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>및 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>속성 서비스 응용 프로그램이 실행 되는 계정을 정의 하는 데 사용 됩니다.</xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> </xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>       <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>및 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>쌍 시스템 계정 이외의 계정으로 실행 되도록 서비스 수 있습니다.</xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> </xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 예를 들어 사용자가 로그온 하는 경우 재부팅 시 자동으로 시작 하는 서비스를 허용할 수를이. 비워는 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>또는 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>빈 데이터 요소 및 계정 설정 `User`, 유효한 사용자 이름과 설치 시 암호를 묻는 메시지가 표시 됩니다.</xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> </xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>       지정할 수도 있습니다는 서비스가 로컬 시스템 계정 또는 로컬 실행 또는 네트워크 서비스입니다. 참조는 <xref:System.ServiceProcess.ServiceAccount>계정 유형에 대 한 자세한 내용은 열거형.</xref:System.ServiceProcess.ServiceAccount>"
  syntax:
    content: public System.ServiceProcess.ServiceAccount Account { get; set; }
    return:
      type: System.ServiceProcess.ServiceAccount
      description: "A <xref href=&quot;System.ServiceProcess.ServiceAccount&quot;> </xref> 시스템이이 서비스가 실행 되는 계정 유형을 정의 하는 합니다. 기본값은 <xref uid=&quot;langword_csharp_User&quot; name=&quot;User&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceProcess.ServiceProcessInstaller.Account*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)
  id: CopyFromComponent(System.ComponentModel.IComponent)
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: CopyFromComponent(IComponent)
  nameWithType: ServiceProcessInstaller.CopyFromComponent(IComponent)
  fullName: System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(IComponent)
  type: Method
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "기본 클래스를 구현 &lt;xref:System.Configuration.Install.ComponentInstaller.CopyFromComponent%2A?displayProperty=fullName&gt; 메서드 없이 <xref href=&quot;System.ServiceProcess.ServiceProcessInstaller&quot;> </xref> 클래스 관련 동작입니다."
  remarks: "이 메서드를 코드 내에서 호출 되어야 합니다. 기본 클래스 메서드를 <xref:System.Configuration.Install.ComponentInstaller>은 `abstract`이므로 파생된 클래스에서 구현 됩니다</xref:System.Configuration.Install.ComponentInstaller> 그러나 없는 <xref:System.ServiceProcess.ServiceProcessInstaller>클래스 관련 메서드의 구현에서 처리 합니다.</xref:System.ServiceProcess.ServiceProcessInstaller>"
  syntax:
    content: public override void CopyFromComponent (System.ComponentModel.IComponent comp);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "<xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> 서비스 프로세스를 나타내는입니다."
  overload: System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.HelpText
  id: HelpText
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: HelpText
  nameWithType: ServiceProcessInstaller.HelpText
  fullName: System.ServiceProcess.ServiceProcessInstaller.HelpText
  type: Property
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "서비스 설치 옵션에 대 한 표시 텍스트를 도움말을 가져옵니다."
  remarks: "이 도움말 텍스트는 서비스가 수동으로 시작 될 때 사용할 수 있습니다. 사용자에 게 사용자 이름 및 암호 정보를 입력 하는 방법을 나타냅니다."
  syntax:
    content: public override string HelpText { get; }
    return:
      type: System.String
      description: "도움말 텍스트는 특정 계정에서 서비스를 실행 하는 데 사용자 이름과 암호를 설정 하기 위한 단계에 대 한 설명을 제공 합니다."
  overload: System.ServiceProcess.ServiceProcessInstaller.HelpText*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)
  id: Install(System.Collections.IDictionary)
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: Install(IDictionary)
  nameWithType: ServiceProcessInstaller.Install(IDictionary)
  fullName: System.ServiceProcess.ServiceProcessInstaller.Install(IDictionary)
  type: Method
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "서비스 응용 프로그램 정보를 레지스트리에 씁니다. 이 메서드는 자동으로 적절 한 메서드를 호출 하는 설치 도구에서 사용할 것입니다."
  remarks: "일반적으로 메서드를 호출 하지 않으면 <xref:System.ServiceProcess.ServiceProcessInstaller>; 코드 내에서 일반적으로에서 호출 설치 유틸리티.</xref:System.ServiceProcess.ServiceProcessInstaller> 설치 유틸리티는 자동으로 설치 과정에서 설치 메서드를 호출합니다. 백업를 필요에 따라 호출 하 여 <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>이전에 설치 된 모든 구성 요소에.</xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> 이 메서드는 설치의 기본 클래스를 전달 <xref:System.Configuration.Install.Installer.Install%2A?displayProperty=fullName>메서드.</xref:System.Configuration.Install.Installer.Install%2A?displayProperty=fullName>       일반적으로 메서드를 호출 하지 것입니다 <xref:System.ServiceProcess.ServiceInstaller>; 코드 내에서 일반적으로에서 호출 설치 유틸리티.</xref:System.ServiceProcess.ServiceInstaller> 설치 유틸리티 설치를 자동으로 호출 하 고 <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=fullName>설치 프로세스 중에 방법을.</xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=fullName> 백업를 필요에 따라 호출 하 여 <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>(또는 <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=fullName>) 응용 프로그램의 설치 루틴에서 이전에 설치 된 모든 구성 요소 프로젝트 설치 관리자의 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>.</xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> 를 사용 하 여 구성 요소가 이미 설치 되어 자동으로 정보를 유지 관리</xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=fullName> </xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> 이 상태 정보로 설치로 전달 된는 `stateSaver` 매개 변수를 계속 업데이트 됩니다는 <xref:System.ServiceProcess.ServiceProcessInstaller>인스턴스와 각 <xref:System.ServiceProcess.ServiceInstaller>인스턴스가 유틸리티에 의해 설치 된.</xref:System.ServiceProcess.ServiceInstaller> </xref:System.ServiceProcess.ServiceProcessInstaller> 일반적으로 코드의 명시적으로이 상태 정보를 수정할 필요는 없습니다.       설치 기본 클래스 메서드에 의해 throw 된 예외를 호출 하는 메서드로 전달 또는 <xref:System.Configuration.Install.Installer.BeforeInstall>/ <xref:System.Configuration.Install.Installer.AfterInstall>이벤트 처리기.</xref:System.Configuration.Install.Installer.AfterInstall> </xref:System.Configuration.Install.Installer.BeforeInstall>"
  syntax:
    content: public override void Install (System.Collections.IDictionary stateSaver);
    parameters:
    - id: stateSaver
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>설치와 관련 된 컨텍스트 정보가 포함 된.</xref:System.Collections.IDictionary>"
  overload: System.ServiceProcess.ServiceProcessInstaller.Install*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>stateSaver</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.Password
  id: Password
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: Password
  nameWithType: ServiceProcessInstaller.Password
  fullName: System.ServiceProcess.ServiceProcessInstaller.Password
  type: Property
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "서비스 응용 프로그램이 실행 되는 사용자 계정과 연결 된 암호를 가져오거나 설정 합니다."
  remarks: "암호 및 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>쌍 시스템 계정 이외의 계정으로 실행 되도록 서비스 수 있습니다.</xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 예를 들어 사용자가 로그온 하는 경우 재부팅 시 자동으로 시작 하는 서비스를 허용할 수를이.       암호 및 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>직렬화 되거나 설치 상태에 저장 되지 안전한 방식으로 처리 됩니다 (프로젝트 설치 관리자의 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>) 또는 공용 액세스를 사용 하 여 다른 위치.</xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> </xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>       설정 된 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>암호 계정이 설치 중에 서비스를 자동으로 연결 될 수 있습니다.</xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 비워는 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>또는 암호를 설정 하 고 빈 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>를 `User`, 유효한 사용자 이름과 설치 시 암호를 묻는 메시지가 표시 됩니다.</xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> </xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>       별도 계정에서 서비스를 실행 하기 위한 또 다른 옵션은 컴퓨터의 시스템 계정을 사용 하는 것입니다. 관리자 계정 구별 되는 해당 계정에 암호가 필요 합니다. 시스템 계정 권한이 현재 로그인 한 사용자의 초과 합니다. 사용자 계정이 아닌 시스템 계정에서 실행 되는 권한이 없는 경우 서비스에서 필요한 경우 사용자에 게 서 발생 한 문제를 방지 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>아닌 다른 값이 `User`, (로컬 또는 네트워크 서비스 또는 로컬 시스템) 지정 된 계정을 사용할 경우에는 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>암호 속성이 채워져 있는지 및.</xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> </xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>"
  syntax:
    content: public string Password { get; set; }
    return:
      type: System.String
      description: "서비스를 실행 해야 해당 계정과 연결 된 암호입니다. 기본값은 빈 문자열 (&quot;&quot;). 속성이 공용, 아니며 serialize 되지 않습니다."
  overload: System.ServiceProcess.ServiceProcessInstaller.Password*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)
  id: Rollback(System.Collections.IDictionary)
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: Rollback(IDictionary)
  nameWithType: ServiceProcessInstaller.Rollback(IDictionary)
  fullName: System.ServiceProcess.ServiceProcessInstaller.Rollback(IDictionary)
  type: Method
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "설치 과정에서 레지스트리에 기록 하는 서비스 응용 프로그램 정보를 롤백합니다. 이 메서드는 적절 한 메서드를 자동으로 처리 하는 설치 도구에서 사용할 제공 됩니다."
  remarks: "일반적으로 메서드를 호출 하지 않으면 <xref:System.ServiceProcess.ServiceProcessInstaller>; 코드 내에서 일반적으로에서 호출 설치 유틸리티.</xref:System.ServiceProcess.ServiceProcessInstaller> 설치 유틸리티를 자동으로 호출 된 <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=fullName>설치 과정에서 메서드.</xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=fullName> 필요한 경우 개체에 롤백 호출 하 여 예외를 생성 하는 경우를 백업 합니다.       응용 프로그램의 설치 루틴 프로젝트 설치 관리자의 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>.</xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> 를 사용 하 여 구성 요소가 이미 설치 되어 자동으로 정보를 유지 관리 이 상태 정보로 롤백에 전달 된는 `savedState` 매개 변수를 계속 업데이트 됩니다는 <xref:System.ServiceProcess.ServiceProcessInstaller>인스턴스와 각 <xref:System.ServiceProcess.ServiceInstaller>인스턴스가 유틸리티에 의해 설치 된.</xref:System.ServiceProcess.ServiceInstaller> </xref:System.ServiceProcess.ServiceProcessInstaller> 일반적으로 코드의 명시적으로이 상태 정보를 수정할 필요는 없습니다.       호출 하는 메서드로 전달 롤백 기본 클래스 메서드에 의해 throw 된 예외 또는 <xref:System.Configuration.Install.Installer.BeforeInstall>/ <xref:System.Configuration.Install.Installer.AfterInstall>이벤트 처리기.</xref:System.Configuration.Install.Installer.AfterInstall> </xref:System.Configuration.Install.Installer.BeforeInstall>"
  syntax:
    content: public override void Rollback (System.Collections.IDictionary savedState);
    parameters:
    - id: savedState
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>설치와 관련 된 컨텍스트 정보가 포함 된.</xref:System.Collections.IDictionary>"
  overload: System.ServiceProcess.ServiceProcessInstaller.Rollback*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>savedState</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는- <code> savedState </code> 손상 되었거나 존재 하지 않는 합니다."
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.Username
  id: Username
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: Username
  nameWithType: ServiceProcessInstaller.Username
  fullName: System.ServiceProcess.ServiceProcessInstaller.Username
  type: Property
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "서비스 응용 프로그램이 실행 될 사용자 계정을 가져오거나 설정 합니다."
  remarks: "사용자 이름 및 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>쌍 시스템 계정 이외의 계정으로 실행 되도록 서비스 수 있습니다.</xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 예를 들어 사용자가 로그온 하는 경우 재부팅 시 자동으로 시작 하는 서비스를 허용할 수를이.       <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>직렬화 되거나 설치 상태에 저장 되지에서 안전 하 게 처리 되는 사용자 이름 및 (프로젝트 설치 관리자의 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>) 또는 공용 액세스를 사용 하 여 다른 위치.</xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName></xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>       사용자 이름을 설정 하 고 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>계정이 설치 중에 서비스를 자동으로 연결 될 수 있습니다.</xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 사용자 이름 중 하나를 두면 또는 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>빈 및 설정 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>를 `User`, 유효한 사용자 이름과 설치 시 암호를 묻는 메시지가 표시 됩니다.</xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> </xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>       별도 계정에서 서비스를 실행 하기 위한 또 다른 옵션은 컴퓨터의 시스템 계정을 사용 하는 것입니다. 관리자 계정 구별 되는 해당 계정에 암호가 필요 합니다. 시스템 계정 권한이 현재 로그인 한 사용자의 초과 합니다. 권한이 없는 경우 서비스에서 필요한 경우 사용자에 게 서 발생 한 문제를 방지 하는 사용자 계정이 아닌 시스템 계정에서 실행 되 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>아닌 다른 값이 `User`, 지정 된 계정 (로컬 또는 네트워크 서비스 또는 로컬 시스템) 사용 하는 경우에 사용자 이름 및 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>속성이 채워져 있는지.</xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> </xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>"
  syntax:
    content: public string Username { get; set; }
    return:
      type: System.String
      description: "서비스를 실행 하는 계정입니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.ServiceProcess.ServiceProcessInstaller.Username*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.Install.ComponentInstaller
  isExternal: false
  name: System.Configuration.Install.ComponentInstaller
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ServiceProcess.ServiceProcessInstaller.#ctor
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: ServiceProcessInstaller()
  nameWithType: ServiceProcessInstaller.ServiceProcessInstaller()
  fullName: System.ServiceProcess.ServiceProcessInstaller.ServiceProcessInstaller()
- uid: System.ServiceProcess.ServiceProcessInstaller.Account
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Account
  nameWithType: ServiceProcessInstaller.Account
  fullName: System.ServiceProcess.ServiceProcessInstaller.Account
- uid: System.ServiceProcess.ServiceAccount
  parent: System.ServiceProcess
  isExternal: false
  name: ServiceAccount
  nameWithType: ServiceAccount
  fullName: System.ServiceProcess.ServiceAccount
- uid: System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: CopyFromComponent(IComponent)
  nameWithType: ServiceProcessInstaller.CopyFromComponent(IComponent)
  fullName: System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(IComponent)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ServiceProcess.ServiceProcessInstaller.HelpText
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: HelpText
  nameWithType: ServiceProcessInstaller.HelpText
  fullName: System.ServiceProcess.ServiceProcessInstaller.HelpText
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Install(IDictionary)
  nameWithType: ServiceProcessInstaller.Install(IDictionary)
  fullName: System.ServiceProcess.ServiceProcessInstaller.Install(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.ServiceProcess.ServiceProcessInstaller.Password
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Password
  nameWithType: ServiceProcessInstaller.Password
  fullName: System.ServiceProcess.ServiceProcessInstaller.Password
- uid: System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Rollback(IDictionary)
  nameWithType: ServiceProcessInstaller.Rollback(IDictionary)
  fullName: System.ServiceProcess.ServiceProcessInstaller.Rollback(IDictionary)
- uid: System.ServiceProcess.ServiceProcessInstaller.Username
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Username
  nameWithType: ServiceProcessInstaller.Username
  fullName: System.ServiceProcess.ServiceProcessInstaller.Username
- uid: System.ServiceProcess.ServiceProcessInstaller.#ctor*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: ServiceProcessInstaller
  nameWithType: ServiceProcessInstaller.ServiceProcessInstaller
- uid: System.ServiceProcess.ServiceProcessInstaller.Account*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Account
  nameWithType: ServiceProcessInstaller.Account
- uid: System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: CopyFromComponent
  nameWithType: ServiceProcessInstaller.CopyFromComponent
- uid: System.ServiceProcess.ServiceProcessInstaller.HelpText*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: HelpText
  nameWithType: ServiceProcessInstaller.HelpText
- uid: System.ServiceProcess.ServiceProcessInstaller.Install*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Install
  nameWithType: ServiceProcessInstaller.Install
- uid: System.ServiceProcess.ServiceProcessInstaller.Password*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Password
  nameWithType: ServiceProcessInstaller.Password
- uid: System.ServiceProcess.ServiceProcessInstaller.Rollback*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Rollback
  nameWithType: ServiceProcessInstaller.Rollback
- uid: System.ServiceProcess.ServiceProcessInstaller.Username*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Username
  nameWithType: ServiceProcessInstaller.Username
