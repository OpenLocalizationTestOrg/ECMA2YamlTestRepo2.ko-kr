### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.CompositionTarget
  id: CompositionTarget
  children:
  - System.Windows.Media.CompositionTarget.Dispose
  - System.Windows.Media.CompositionTarget.Rendering
  - System.Windows.Media.CompositionTarget.RootVisual
  - System.Windows.Media.CompositionTarget.TransformFromDevice
  - System.Windows.Media.CompositionTarget.TransformToDevice
  langs:
  - csharp
  name: CompositionTarget
  nameWithType: CompositionTarget
  fullName: System.Windows.Media.CompositionTarget
  type: Class
  summary: "응용 프로그램의 화면을 나타냅니다."
  remarks: "CompositionTarget는 응용 프로그램를 끄는 디스플레이 화면을 나타내는 클래스입니다. [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 애니메이션 엔진은 애니메이션 프레임 기반을 만들기 위한 다양 한 기능을 제공 합니다. 그러나 렌더링 프레임별으로 대 한 제어 해야 하는 응용 프로그램 시나리오가 있습니다. CompositionTarget 개체 프레임별 콜백에 따라 사용자 지정 애니메이션을 만드는 기능을 제공 합니다.      > [!NOTE] > CompositionTarget를 사용 하 여 전체 코드 샘플을 보려면 [CompositionTarget 샘플을 사용 하 여](http://go.microsoft.com/fwlink/?LinkID=160045)합니다."
  syntax:
    content: 'public abstract class CompositionTarget : System.Windows.Threading.DispatcherObject, IDisposable'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.CompositionTarget.Dispose
  id: Dispose
  parent: System.Windows.Media.CompositionTarget
  langs:
  - csharp
  name: Dispose()
  nameWithType: CompositionTarget.Dispose()
  fullName: System.Windows.Media.CompositionTarget.Dispose()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "삭제 <xref href=&quot;System.Windows.Media.CompositionTarget&quot;> </xref>합니다."
  syntax:
    content: public virtual void Dispose ();
    parameters: []
  overload: System.Windows.Media.CompositionTarget.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.CompositionTarget.Rendering
  id: Rendering
  parent: System.Windows.Media.CompositionTarget
  langs:
  - csharp
  name: Rendering
  nameWithType: CompositionTarget.Rendering
  fullName: System.Windows.Media.CompositionTarget.Rendering
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "컴퍼지션 트리의 개체가 렌더링 되기 바로 전에 발생 합니다."
  remarks: "애니메이션 및 레이아웃 컴퍼지션 트리의에 적용 된 후 렌더링 이벤트 지정된 된 이벤트 처리기로 라우팅됩니다."
  example:
  - "The Rendering event is raised during the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] rendering process. The following example shows how you register an <xref:System.EventHandler> delegate to the static Rendering method on <xref:System.Windows.Media.CompositionTarget>.  \n  \n [!code-cs[CompositionTargetSample#CompositionTarget1](~/add/codesnippet/csharp/CompositionTargetSample/Window1.xaml.cs#compositiontarget1)]\n [!code-vb[CompositionTargetSample#CompositionTarget1](~/add/codesnippet/visualbasic/compositiontargetsample/window1.xaml.vb#compositiontarget1)]  \n  \n You can use your rendering event handler to create custom drawing content. This event handler gets called once per frame. Each time that [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] marshals the persisted rendering data in the visual tree across to the composition tree, your event handler is called. In addition, if changes to the visual tree force updates to the composition tree, your event handler is also called. Note that your event handler is called after layout has been computed. However, you can modify layout in your event handler, which means that layout will be computed once more before rendering."
  syntax:
    content: public static event EventHandler Rendering;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.CompositionTarget.RootVisual
  id: RootVisual
  parent: System.Windows.Media.CompositionTarget
  langs:
  - csharp
  name: RootVisual
  nameWithType: CompositionTarget.RootVisual
  fullName: System.Windows.Media.CompositionTarget.RootVisual
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "루트를 가져오거나 설정 합니다.의 시각적는 <xref href=&quot;System.Windows.Media.CompositionTarget&quot;> </xref>합니다."
  syntax:
    content: public virtual System.Windows.Media.Visual RootVisual { get; set; }
    return:
      type: System.Windows.Media.Visual
      description: "루트 visual은 <xref href=&quot;System.Windows.Media.CompositionTarget&quot;> </xref>합니다."
  overload: System.Windows.Media.CompositionTarget.RootVisual*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.CompositionTarget.TransformFromDevice
  id: TransformFromDevice
  parent: System.Windows.Media.CompositionTarget
  langs:
  - csharp
  name: TransformFromDevice
  nameWithType: CompositionTarget.TransformFromDevice
  fullName: System.Windows.Media.CompositionTarget.TransformFromDevice
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "이 대상에 렌더링 대상 장치에서 좌표로 변환에 사용할 수 있는 행렬을 가져옵니다."
  syntax:
    content: public abstract System.Windows.Media.Matrix TransformFromDevice { get; }
    return:
      type: System.Windows.Media.Matrix
      description: "변환 행렬입니다."
  overload: System.Windows.Media.CompositionTarget.TransformFromDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.CompositionTarget.TransformToDevice
  id: TransformToDevice
  parent: System.Windows.Media.CompositionTarget
  langs:
  - csharp
  name: TransformToDevice
  nameWithType: CompositionTarget.TransformToDevice
  fullName: System.Windows.Media.CompositionTarget.TransformToDevice
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "이 대상 좌표 렌더링 대상 장치를 변환에 사용할 수 있는 행렬을 가져옵니다."
  syntax:
    content: public abstract System.Windows.Media.Matrix TransformToDevice { get; }
    return:
      type: System.Windows.Media.Matrix
      description: "변환 행렬입니다."
  overload: System.Windows.Media.CompositionTarget.TransformToDevice*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: System.Windows.Threading.DispatcherObject
- uid: System.Windows.Media.CompositionTarget.Dispose
  parent: System.Windows.Media.CompositionTarget
  isExternal: false
  name: Dispose()
  nameWithType: CompositionTarget.Dispose()
  fullName: System.Windows.Media.CompositionTarget.Dispose()
- uid: System.Windows.Media.CompositionTarget.Rendering
  parent: System.Windows.Media.CompositionTarget
  isExternal: false
  name: Rendering
  nameWithType: CompositionTarget.Rendering
  fullName: System.Windows.Media.CompositionTarget.Rendering
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Media.CompositionTarget.RootVisual
  parent: System.Windows.Media.CompositionTarget
  isExternal: false
  name: RootVisual
  nameWithType: CompositionTarget.RootVisual
  fullName: System.Windows.Media.CompositionTarget.RootVisual
- uid: System.Windows.Media.Visual
  parent: System.Windows.Media
  isExternal: false
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual
- uid: System.Windows.Media.CompositionTarget.TransformFromDevice
  parent: System.Windows.Media.CompositionTarget
  isExternal: false
  name: TransformFromDevice
  nameWithType: CompositionTarget.TransformFromDevice
  fullName: System.Windows.Media.CompositionTarget.TransformFromDevice
- uid: System.Windows.Media.Matrix
  parent: System.Windows.Media
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Windows.Media.Matrix
- uid: System.Windows.Media.CompositionTarget.TransformToDevice
  parent: System.Windows.Media.CompositionTarget
  isExternal: false
  name: TransformToDevice
  nameWithType: CompositionTarget.TransformToDevice
  fullName: System.Windows.Media.CompositionTarget.TransformToDevice
- uid: System.Windows.Media.CompositionTarget.Dispose*
  parent: System.Windows.Media.CompositionTarget
  isExternal: false
  name: Dispose
  nameWithType: CompositionTarget.Dispose
- uid: System.Windows.Media.CompositionTarget.RootVisual*
  parent: System.Windows.Media.CompositionTarget
  isExternal: false
  name: RootVisual
  nameWithType: CompositionTarget.RootVisual
- uid: System.Windows.Media.CompositionTarget.TransformFromDevice*
  parent: System.Windows.Media.CompositionTarget
  isExternal: false
  name: TransformFromDevice
  nameWithType: CompositionTarget.TransformFromDevice
- uid: System.Windows.Media.CompositionTarget.TransformToDevice*
  parent: System.Windows.Media.CompositionTarget
  isExternal: false
  name: TransformToDevice
  nameWithType: CompositionTarget.TransformToDevice
