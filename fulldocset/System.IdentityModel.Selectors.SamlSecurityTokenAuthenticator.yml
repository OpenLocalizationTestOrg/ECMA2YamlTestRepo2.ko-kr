### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  id: SamlSecurityTokenAuthenticator
  children:
  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator})
  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator},System.TimeSpan)
  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris
  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode
  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)
  - System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  name: SamlSecurityTokenAuthenticator
  nameWithType: SamlSecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  type: Class
  summary: "인증 된 <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref> 보안 토큰입니다."
  remarks: "SamlSecurityTokenAuthenticator 클래스를 사용 하 여 인증 <xref:System.IdentityModel.Tokens.SamlSecurityToken>보안 토큰입니다.</xref:System.IdentityModel.Tokens.SamlSecurityToken>"
  syntax:
    content: 'public class SamlSecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenAuthenticator'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator
  implements: []
  inheritedMembers:
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator})
  id: '#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator})'
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  name: SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>)
  nameWithType: SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&quot;> </xref> 클래스는 지정 된 인증자 집합을 사용 합니다."
  syntax:
    content: public SamlSecurityTokenAuthenticator (System.Collections.Generic.IList<System.IdentityModel.Selectors.SecurityTokenAuthenticator> supportingAuthenticators);
    parameters:
    - id: supportingAuthenticators
      type: System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator}
      description: "&lt;xref:System.Collections.Generic.IList%601&gt; 의 <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenAuthenticator&quot;> </xref> 발급자의 인증할 인증자를 포함 하는 <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 보안 토큰입니다."
  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator},System.TimeSpan)
  id: '#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator},System.TimeSpan)'
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  name: SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>,TimeSpan)
  nameWithType: SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>,TimeSpan)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>,TimeSpan)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&quot;> </xref> 클래스는 지정 된 인증자 집합 및 보낸 사람의 클럭과 수신자 클럭 간에 허용 가능한 최대 차이 사용 합니다."
  syntax:
    content: public SamlSecurityTokenAuthenticator (System.Collections.Generic.IList<System.IdentityModel.Selectors.SecurityTokenAuthenticator> supportingAuthenticators, TimeSpan maxClockSkew);
    parameters:
    - id: supportingAuthenticators
      type: System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator}
      description: "&lt;xref:System.Collections.Generic.IList%601&gt; 의 <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenAuthenticator&quot;> </xref> 발급자의 인증할 인증자를 포함 하는 <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 보안 토큰입니다."
    - id: maxClockSkew
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>보낸 사람의 클럭과 수신자 클럭 간에 허용 가능한 최대 차이 나타내는입니다.</xref:System.TimeSpan>"
  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris
  id: AllowedAudienceUris
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  name: AllowedAudienceUris
  nameWithType: SamlSecurityTokenAuthenticator.AllowedAudienceUris
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "대상 Uri 집합을 가져옵니다을 <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref> 보안 토큰에 유효한 것으로 간주 될이 대상이 될 수 있습니다 <xref href=&quot;System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&quot;> </xref> 인스턴스."
  remarks: "보안 토큰 서비스 (STS)를 발급 하는 페더레이션된 응용 프로그램에 a d d 속성을 사용 하 여 <xref:System.IdentityModel.Tokens.SamlSecurityToken>보안 토큰입니다.</xref:System.IdentityModel.Tokens.SamlSecurityToken> 추가 하 여 보안 토큰을 사용 하는 웹 서비스의 URI를 지정할 수 있는 보안 토큰을 발급 하는 STS를 경우는 <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition>에 보안 토큰을.</xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> 허용 하는 <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>확인 하도록 지정 하 여이 확인은 다음을 수행 하 여 발급 된 보안 토큰이이 웹 서비스에 대 한 의도 된 수신자 웹 서비스에 대 한:- <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A>속성을 <xref:System.IdentityModel.Selectors.AudienceUriMode>또는 <xref:System.IdentityModel.Selectors.AudienceUriMode>.</xref:System.IdentityModel.Selectors.AudienceUriMode> </xref:System.IdentityModel.Selectors.AudienceUriMode> </xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A> 설정</xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>      -A d d 컬렉션에 Uri를 추가 하 여 유효한 Uri 집합을 지정 합니다.      -선택적으로 재정의 <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A>허용 된 URI에 사용할 유효성 검사 알고리즘을 지정 하는 메서드.</xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A>"
  syntax:
    content: public System.Collections.Generic.IList<string> AllowedAudienceUris { get; }
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "&lt;xref:System.Collections.Generic.IList%601&gt; 형식의 <xref:System.String>의 대상 Uri를 포함 하는 대 한는 <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref> 보안 토큰이 유효한 것으로 간주 될이 보안 토큰 인증자를 대상이 될 수 있습니다.</xref:System.String>"
  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode
  id: AudienceUriMode
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  name: AudienceUriMode
  nameWithType: SamlSecurityTokenAuthenticator.AudienceUriMode
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "가져오거나는 <xref href=&quot;System.IdentityModel.Selectors.AudienceUriMode&quot;> </xref> 지정 하는 여부는 <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref> 보안 토큰의 <xref href=&quot;System.IdentityModel.Tokens.SamlAudienceRestrictionCondition&quot;> </xref> 유효성을 검사 해야 합니다."
  remarks: "보안 토큰 서비스 (STS)를 발급 하는 페더레이션된 응용 프로그램에서 AudienceUriMode 속성을 사용 하 여 <xref:System.IdentityModel.Tokens.SamlSecurityToken>보안 토큰입니다.</xref:System.IdentityModel.Tokens.SamlSecurityToken> 추가 하 여 보안 토큰을 사용 하는 웹 서비스의 URI를 지정할 수 있는 보안 토큰을 발급 하는 STS를 경우는 <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition>에 보안 토큰을.</xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> 허용 하는 <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>확인 하도록 지정 하 여이 확인은 다음을 수행 하 여 발급 된 보안 토큰이이 웹 서비스에 대 한 의도 된 수신자 웹 서비스에 대 한:-AudienceUriMode 속성을 설정 <xref:System.IdentityModel.Selectors.AudienceUriMode>하거나 <xref:System.IdentityModel.Selectors.AudienceUriMode>.</xref:System.IdentityModel.Selectors.AudienceUriMode> </xref:System.IdentityModel.Selectors.AudienceUriMode> </xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>      -Uri를 추가 하 여 유효한 Uri 집합을 지정 합니다.는 <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A>컬렉션.</xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A>      > [!NOTE] > 때 the AudienceUriMode 속성이로 설정 되어 <xref:System.IdentityModel.Selectors.AudienceUriMode>, 하면 들어오는 비 보증 <xref:System.IdentityModel.Tokens.SamlSecurityToken>포함 해야 합니다는 <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition>및 <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.Audiences%2A>컬렉션 하 나와 일치 하는 URI가 포함 되어야 유효한에 지정 된 Uri는 <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A>컬렉션.</xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A> </xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.Audiences%2A> </xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> </xref:System.IdentityModel.Tokens.SamlSecurityToken> </xref:System.IdentityModel.Selectors.AudienceUriMode> 비 보증 또는 bearer 토큰은 보안 토큰을 메시지에 포함 되며 메시지의 모든 부분을 서명 하는 사용 되지 않습니다.      -선택적으로 재정의 <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A>허용 된 URI에 사용할 유효성 검사 알고리즘을 지정 하는 메서드.</xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A>"
  syntax:
    content: public System.IdentityModel.Selectors.AudienceUriMode AudienceUriMode { get; set; }
    return:
      type: System.IdentityModel.Selectors.AudienceUriMode
      description: "<xref href=&quot;System.IdentityModel.Selectors.AudienceUriMode&quot;> </xref> 지정 하는 여부는 <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref> 보안 토큰의 <xref href=&quot;System.IdentityModel.Tokens.SamlAudienceRestrictionCondition&quot;> </xref> 유효성을 검사 해야 합니다."
  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: SamlSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "이 보안 토큰 인증 자가 지정된 된 보안 토큰 유효성을 검사할 수 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "CanValidateTokenCore 메서드는 보안 토큰을 인증 하지 않습니다. 통해 수행 됩니다는 <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore%2A>메서드.</xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore%2A>"
  syntax:
    content: protected override bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 유효성을 검사 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>when <code>token</code> is a <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref> security token; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: ResolveClaimSet(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  name: ResolveClaimSet(SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenAuthenticator.ResolveClaimSet(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(SecurityKeyIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "될 때 제공 된 지원 보안 인증자를 사용 하 여 지정된 된 키 식별자와 연결 된 id를 확인 하는 <xref href=&quot;System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&quot;> </xref> 인스턴스 생성 된 및로 반환 된 <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>합니다."
  syntax:
    content: public virtual System.IdentityModel.Claims.ClaimSet ResolveClaimSet (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);
    parameters:
    - id: keyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> 의 id를 가져오려면 합니다."
    return:
      type: System.IdentityModel.Claims.ClaimSet
      description: "A <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> 지정된 된 키 식별자의 id를 나타내는입니다."
  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(System.IdentityModel.Tokens.SecurityToken)
  id: ResolveClaimSet(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  name: ResolveClaimSet(SecurityToken)
  nameWithType: SamlSecurityTokenAuthenticator.ResolveClaimSet(SecurityToken)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "될 때 제공 된 지원 토큰 인증자를 사용 하 여 지정 된 보안 토큰과 연결 된 id를 확인 하는 <xref href=&quot;System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&quot;> </xref> 인스턴스 생성 된 및로 반환 된 <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>합니다."
  syntax:
    content: public virtual System.IdentityModel.Claims.ClaimSet ResolveClaimSet (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 의 id를 가져오려면 합니다."
    return:
      type: System.IdentityModel.Claims.ClaimSet
      description: "A <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> 지정된 된 보안 토큰의 id를 나타내는입니다."
  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: ResolveIdentity(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  name: ResolveIdentity(SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenAuthenticator.ResolveIdentity(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(SecurityKeyIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "될 때 제공 된 지원 보안 토큰 인증자를 사용 하 여 지정된 된 키 식별자와 연결 된 id를 확인 하는 <xref href=&quot;System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&quot;> </xref> 인스턴스가 만들어지고 <xref:System.Security.Principal.IIdentity>.</xref:System.Security.Principal.IIdentity> 로 반환"
  remarks: "<xref:System.IdentityModel.Tokens.SamlSecurityToken>보안 토큰의 키 식별자를 사용 하 여 캐시 됩니다.</xref:System.IdentityModel.Tokens.SamlSecurityToken>"
  syntax:
    content: public virtual System.Security.Principal.IIdentity ResolveIdentity (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);
    parameters:
    - id: keyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> 의 id를 가져오려면 합니다."
    return:
      type: System.Security.Principal.IIdentity
      description: "<xref:System.Security.Principal.IIdentity>지정된 된 키 식별자의 id를 나타내는입니다.</xref:System.Security.Principal.IIdentity>"
  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(System.IdentityModel.Tokens.SecurityToken)
  id: ResolveIdentity(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  name: ResolveIdentity(SecurityToken)
  nameWithType: SamlSecurityTokenAuthenticator.ResolveIdentity(SecurityToken)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "될 때 제공 된 지원 보안 토큰 인증자를 사용 하 여 지정 된 보안 토큰과 연결 된 id를 확인 하는 <xref href=&quot;System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&quot;> </xref> 인스턴스가 만들어지고 <xref:System.Security.Principal.IIdentity>.</xref:System.Security.Principal.IIdentity> 로 반환"
  syntax:
    content: public virtual System.Security.Principal.IIdentity ResolveIdentity (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 의 id를 가져오려면 합니다."
    return:
      type: System.Security.Principal.IIdentity
      description: "<xref:System.Security.Principal.IIdentity>지정된 된 보안 토큰의 id를 나타내는입니다.</xref:System.Security.Principal.IIdentity>"
  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)
  id: ValidateAudienceRestriction(System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateAudienceRestriction(SamlAudienceRestrictionCondition)
  nameWithType: SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(SamlAudienceRestrictionCondition)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(SamlAudienceRestrictionCondition)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "확인 하 고 <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref> 보안 토큰이이 웹 서비스 용인지 되었습니다."
  remarks: "ValidateAudienceRestriction 메서드에 의해 호출 됩니다는 <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore%2A>메서드 때 <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A>속성 <xref:System.IdentityModel.Selectors.AudienceUriMode>또는 <xref:System.IdentityModel.Selectors.AudienceUriMode>.</xref:System.IdentityModel.Selectors.AudienceUriMode> </xref:System.IdentityModel.Selectors.AudienceUriMode> </xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A> </xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore%2A>"
  syntax:
    content: protected virtual bool ValidateAudienceRestriction (System.IdentityModel.Tokens.SamlAudienceRestrictionCondition audienceRestrictionCondition);
    parameters:
    - id: audienceRestrictionCondition
      type: System.IdentityModel.Tokens.SamlAudienceRestrictionCondition
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAudienceRestrictionCondition&quot;> </xref> 는 대상 웹 서비스의 집합을 지정 하는 <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref> 보안 토큰을 사용 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <> </> *>의 속성은 <code> audienceRestrictionCondition </code> 에 매개 변수는는 <> </> *> 컬렉션, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateTokenCore(SecurityToken)
  nameWithType: SamlSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "지정 된 보안 토큰을 인증 하 고 보안 토큰에 대 한 권한 부여 정책의 집합을 반환 합니다."
  syntax:
    content: protected override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 유효성을 검사 합니다."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; 형식의 <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> 보안 토큰 인증에서 발생 하는 권한 부여 정책의 집합이 들어 있는입니다."
  overload: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: System.IdentityModel.Selectors.SecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator})
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>)
  nameWithType: SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>)
- uid: System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<SecurityTokenAuthenticator>
  nameWithType: IList<SecurityTokenAuthenticator>
  fullName: System.Collections.Generic.IList<System.IdentityModel.Selectors.SecurityTokenAuthenticator>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.IdentityModel.Selectors.SecurityTokenAuthenticator>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator
    name: SecurityTokenAuthenticator
    nameWithType: SecurityTokenAuthenticator
    fullName: SecurityTokenAuthenticator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator},System.TimeSpan)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>,TimeSpan)
  nameWithType: SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>,TimeSpan)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator(IList<SecurityTokenAuthenticator>,TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: AllowedAudienceUris
  nameWithType: SamlSecurityTokenAuthenticator.AllowedAudienceUris
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: AudienceUriMode
  nameWithType: SamlSecurityTokenAuthenticator.AudienceUriMode
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode
- uid: System.IdentityModel.Selectors.AudienceUriMode
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: AudienceUriMode
  nameWithType: AudienceUriMode
  fullName: System.IdentityModel.Selectors.AudienceUriMode
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: SamlSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: ResolveClaimSet(SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenAuthenticator.ResolveClaimSet(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(SecurityKeyIdentifier)
- uid: System.IdentityModel.Claims.ClaimSet
  parent: System.IdentityModel.Claims
  isExternal: false
  name: ClaimSet
  nameWithType: ClaimSet
  fullName: System.IdentityModel.Claims.ClaimSet
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: ResolveClaimSet(SecurityToken)
  nameWithType: SamlSecurityTokenAuthenticator.ResolveClaimSet(SecurityToken)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(SecurityToken)
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: ResolveIdentity(SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenAuthenticator.ResolveIdentity(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(SecurityKeyIdentifier)
- uid: System.Security.Principal.IIdentity
  parent: System.Security.Principal
  isExternal: true
  name: IIdentity
  nameWithType: IIdentity
  fullName: System.Security.Principal.IIdentity
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: ResolveIdentity(SecurityToken)
  nameWithType: SamlSecurityTokenAuthenticator.ResolveIdentity(SecurityToken)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(SecurityToken)
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: ValidateAudienceRestriction(SamlAudienceRestrictionCondition)
  nameWithType: SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(SamlAudienceRestrictionCondition)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(SamlAudienceRestrictionCondition)
- uid: System.IdentityModel.Tokens.SamlAudienceRestrictionCondition
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAudienceRestrictionCondition
  nameWithType: SamlAudienceRestrictionCondition
  fullName: System.IdentityModel.Tokens.SamlAudienceRestrictionCondition
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore(SecurityToken)
  nameWithType: SamlSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: IAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor*
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: SamlSecurityTokenAuthenticator
  nameWithType: SamlSecurityTokenAuthenticator.SamlSecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris*
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: AllowedAudienceUris
  nameWithType: SamlSecurityTokenAuthenticator.AllowedAudienceUris
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode*
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: AudienceUriMode
  nameWithType: SamlSecurityTokenAuthenticator.AudienceUriMode
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore*
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore
  nameWithType: SamlSecurityTokenAuthenticator.CanValidateTokenCore
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet*
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: ResolveClaimSet
  nameWithType: SamlSecurityTokenAuthenticator.ResolveClaimSet
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity*
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: ResolveIdentity
  nameWithType: SamlSecurityTokenAuthenticator.ResolveIdentity
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction*
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: ValidateAudienceRestriction
  nameWithType: SamlSecurityTokenAuthenticator.ValidateAudienceRestriction
- uid: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore*
  parent: System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore
  nameWithType: SamlSecurityTokenAuthenticator.ValidateTokenCore
