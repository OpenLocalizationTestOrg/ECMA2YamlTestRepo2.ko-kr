### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs
  id: FormViewInsertedEventArgs
  children:
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor(System.Int32,System.Exception)
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode
  - System.Web.UI.WebControls.FormViewInsertedEventArgs.Values
  langs:
  - csharp
  name: FormViewInsertedEventArgs
  nameWithType: FormViewInsertedEventArgs
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs
  type: Class
  summary: "에 대 한 데이터를 제공는 <xref href=&quot;System.Web.UI.WebControls.FormView.ItemInserted&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Web.UI.WebControls.FormView>발생는 <xref:System.Web.UI.WebControls.FormView.ItemInserted>이벤트 삽입 단추 (된 단추 해당 `CommandName` 속성이 &quot;Insert&quot;로 설정) 컨트롤 내에서 클릭 하면 후는 <xref:System.Web.UI.WebControls.FormView>레코드를 삽입 합니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemInserted> </xref:System.Web.UI.WebControls.FormView> 이 옵션을 사용 하면이 이벤트가 발생할 때마다 삽입 작업의 결과 확인 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       FormViewInsertedEventArgs 개체는 영향을 받는 레코드 수를 확인할 수 있는 이벤트 처리 메서드 및 발생할 수 있는 모든 예외를 전달 됩니다. 삽입 작업의 영향을 받는 레코드 수를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>속성.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>속성 예외가 발생 한 것인지 확인 합니다.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> 설정 하 여 이벤트 처리 메서드에서 예외가 처리 되었는지 여부를 나타낼 수도 있습니다는 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>속성.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> 사용 하 여 삽입된 된 레코드의 값에 액세스 해야 하는 경우는 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A>속성.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A>       기본적으로는 <xref:System.Web.UI.WebControls.FormView>제어가 반환 하 여 지정 된 모드는 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>속성 삽입 작업 후.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> 삽입 작업 중에 예외가 발생 하는 경우 보관할 수 있습니다는 <xref:System.Web.UI.WebControls.FormView>컨트롤을 삽입 모드로 설정 하 여는 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>속성을 `true`.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> </xref:System.Web.UI.WebControls.FormView>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.       인스턴스에 대 한 초기 속성 값 목록은 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs>클래스를 참조 하십시오.는 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.%23ctor%2A>생성자.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.%23ctor%2A> </xref:System.Web.UI.WebControls.FormViewDeletedEventArgs>"
  example:
  - "The following example demonstrates how to use the FormViewInsertedEventArgs object passed to the event-handling method for the <xref:System.Web.UI.WebControls.FormView.ItemInserted> event to determine whether an exception occurred during an insert operation.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_252_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_252_1.aspx)]"
  syntax:
    content: 'public class FormViewInsertedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor(System.Int32,System.Exception)
  id: '#ctor(System.Int32,System.Exception)'
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: FormViewInsertedEventArgs(Int32,Exception)
  nameWithType: FormViewInsertedEventArgs.FormViewInsertedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.FormViewInsertedEventArgs(Int32,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.FormViewInsertedEventArgs&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>클래스</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> 의 새 인스턴스를 초기화 하려면이 생성자를 사용 합니다.       다음 표에서 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>안내 하십시오.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 초기 값 |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>| 값은 `affectedRows` 매개 변수입니다. |   | <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>| 에 포함 된 <xref:System.Exception?displayProperty=fullName>개체는 `e` 매개 변수입니다. |   | <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>| 로 초기화 `false`. |   | <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>| 로 초기화 `false`. |      > [!NOTE] > 이벤트를 발생 시킬 때이 생성자는 주로 컨트롤 개발자가 사용 됩니다.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> </xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> </xref:System.Exception?displayProperty=fullName> </xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> </xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>"
  syntax:
    content: public FormViewInsertedEventArgs (int affectedRows, Exception e);
    parameters:
    - id: affectedRows
      type: System.Int32
      description: "삽입 작업에 영향을 받는 행의 수입니다."
    - id: e
      type: System.Exception
      description: "<xref:System.Exception>삽입 작업을 수행 하는 동안 발생 한 예외를 나타내는입니다.</xref:System.Exception> 예외가 발생 하지를 사용 하 여 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이 매개 변수에 대 한 합니다."
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows
  id: AffectedRows
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: AffectedRows
  nameWithType: FormViewInsertedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "삽입 작업에 영향을 받은 행 수를 가져옵니다."
  remarks: "받는 속성을 사용 하 여 삽입 작업에 영향을 받는 레코드 수를 결정 합니다. 이 속성은 일반적으로 다음과 같은 경우 레코드의 정확한 수 삽입 되었는지 확인 하는 데 사용 됩니다.-하나의 레코드만 삽입 되었는지 확인 합니다. 때로는 잘못 작성 된 insert 문에 여러 레코드 삽입 수 있습니다.      -예외 발생 시 키 지 않는 삽입 작업 중에 오류가 발생 하는 경우는 레코드가 삽입 되었는지 확인 하십시오.      -데이터 소스 제어를 지 원하는 경우 충돌 검색 (낙관적 동시성)와 같은 레코드 삽입 되었는지 확인는 <xref:System.Web.UI.WebControls.SqlDataSource>및 <xref:System.Web.UI.WebControls.ObjectDataSource>제어에 해당 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>속성이로 설정 된 `ConflictOptions.CompareAllValues` 열거형 값입니다.</xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> 이 설정에서는 동시에 다른 사용자가 레코드와 같은 키 값 수 있는 레코드를 삽입할 수 있습니다."
  example:
  - "The following example demonstrates how to use the AffectedRows property to verify that a record was inserted during the insert operation.  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_880_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_880_1.aspx)]"
  syntax:
    content: public int AffectedRows { get; }
    return:
      type: System.Int32
      description: "삽입 작업에 영향을 받는 행의 수입니다."
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: FormViewInsertedEventArgs.Exception
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "(있는 경우) 예외를 가져옵니다 삽입 작업 동안 예외가 발생 합니다."
  remarks: "(있는 경우) 예외를 확인 하려면 예외 속성을 사용 하 여 삽입 작업 동안 예외가 발생 합니다. 이 속성을 반환 하는 경우 예외가 발생 된, `null`합니다.      > [!NOTE] > 예외가 발생 했습니다. 이벤트 처리기에서 예외를 처리 하려는 설정 해야는 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>속성을 `true`, 그렇지 않으면는 <xref:System.Web.UI.WebControls.FormView>제어 예외를 다시 throw 합니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>"
  example:
  - "The following example demonstrates how to use the Exception property to determine whether an exception was raised during an insert operation.  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_372_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_372_1.aspx)]"
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "<xref:System.Exception>삽입 작업 중에 발생 하는 예외를 나타내는입니다.</xref:System.Exception>"
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: FormViewInsertedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "삽입 작업 중에 발생 하는 예외 처리 되었는지 여부를 이벤트 처리기를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "삽입 작업 중에 예외가 발생 한 경우, ExceptionHandled 속성 처리 되었는지 나타내는 예외 이벤트에 처리기를 사용 합니다. 이 속성이로 설정 된 경우 `true`, 예외 처리 된 것으로 간주 되어 다시 throw 되지 않습니다. 이 속성은로 설정 하는 경우 `false`, <xref:System.Web.UI.WebControls.FormView>제어 예외를 다시 throw 합니다.</xref:System.Web.UI.WebControls.FormView> 발생 한 예외를 확인 하려면는 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>속성.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>"
  example:
  - "The following example demonstrates how to use the ExceptionHandled property to indicate that the exception was handled in the event handler.  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_826_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_826_1.aspx)]"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>예외 이벤트에 처리기; 처리 된 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode
  id: KeepInInsertMode
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: KeepInInsertMode
  nameWithType: FormViewInsertedEventArgs.KeepInInsertMode
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져오거나 여부는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 삽입 작업 후 컨트롤 삽입 모드에 유지 해야 합니다."
  remarks: "기본적으로는 <xref:System.Web.UI.WebControls.FormView>제어가 반환 하 여 지정 된 모드는 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>속성.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> KeepInInsertMode 속성을 사용 하 여 지정할 수 있는지 여부를 <xref:System.Web.UI.WebControls.FormView>삽입 작업 후 컨트롤 삽입 모드에 유지 해야 합니다.</xref:System.Web.UI.WebControls.FormView> 계속 하려면는 <xref:System.Web.UI.WebControls.FormView>삽입 모드에 컨트롤을이 속성을 설정 `true`.</xref:System.Web.UI.WebControls.FormView>      > [!NOTE] > 상황이 발생 하면 (예: 예외 발생) 정상적인 경우 다르게 동작 하도록 컨트롤을 필요로 하는 경우에이 속성을 사용 해야 합니다. 경우는 <xref:System.Web.UI.WebControls.FormView>제어 설정, 기본적으로 삽입 모드를 유지 해야 하는 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>속성 대신.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the KeepInInsertMode property to keep the <xref:System.Web.UI.WebControls.FormView> control in insert mode when an exception occurs during an insert operation.  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_181_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_181_1.aspx)]"
  syntax:
    content: public bool KeepInInsertMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>삽입 작업; 후 삽입 모드를 유지 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values
  id: Values
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  langs:
  - csharp
  name: Values
  nameWithType: FormViewInsertedEventArgs.Values
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "삽입된 된 레코드에 대 한 필드 이름/값 쌍을 포함 하는 사전을 가져옵니다."
  remarks: "삽입된 된 레코드에 대 한 필드의 값에 액세스 하려면 값 속성을 사용 합니다. 예를 들어 삽입 된 레코드의 로그를 유지 하려면이 값을 사용할 수 있습니다.       값 속성은 반환 된 <xref:System.Collections.Specialized.OrderedDictionary>구현 하는 개체는 <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName>인터페이스.</xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> <xref:System.Collections.Specialized.OrderedDictionary>개체에 포함 되어 <xref:System.Collections.DictionaryEntry?displayProperty=fullName>삽입된 된 레코드의 필드를 나타내는 개체입니다.</xref:System.Collections.DictionaryEntry?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> 필드 이름에 액세스 하려면 사용 하 여는 <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>의 속성은 <xref:System.Collections.Specialized.OrderedDictionary>개체입니다.</xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> 마찬가지로, 사용 하 여 필드 값에 액세스할 수 있습니다는 <xref:System.Collections.Specialized.OrderedDictionary.Values%2A>속성.</xref:System.Collections.Specialized.OrderedDictionary.Values%2A>      > [!NOTE] >를 사용할 수도 있습니다의 인덱서는 <xref:System.Collections.Specialized.OrderedDictionary>직접 값 필드에 액세스 하는 개체입니다.</xref:System.Collections.Specialized.OrderedDictionary> 인덱서를 사용 하 여 장점은 필드 값이 직접 반환 된다는 것입니다. 데이터 소스 필드 순서를 사용 하는 컨트롤 (예: <xref:System.Web.UI.WebControls.AccessDataSource>) 인덱스로 필드 값에 액세스할 수 있습니다.</xref:System.Web.UI.WebControls.AccessDataSource>"
  example:
  - "The following example demonstrates how to iterate through the items in the Values collection.  \n  \n [!code-vb[FormViewInsertedEventArgsValues#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1339_1.aspx)]\n [!code-cs[FormViewInsertedEventArgsValues#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1339_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary Values { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> 삽입된 된 레코드에 대 한 키 필드 이름/값 쌍의 사전에 포함 된 개체입니다."
  overload: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor(System.Int32,System.Exception)
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: FormViewInsertedEventArgs(Int32,Exception)
  nameWithType: FormViewInsertedEventArgs.FormViewInsertedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.FormViewInsertedEventArgs(Int32,Exception)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: FormViewInsertedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: Exception
  nameWithType: FormViewInsertedEventArgs.Exception
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: FormViewInsertedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: KeepInInsertMode
  nameWithType: FormViewInsertedEventArgs.KeepInInsertMode
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: Values
  nameWithType: FormViewInsertedEventArgs.Values
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: FormViewInsertedEventArgs
  nameWithType: FormViewInsertedEventArgs.FormViewInsertedEventArgs
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: FormViewInsertedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: Exception
  nameWithType: FormViewInsertedEventArgs.Exception
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: FormViewInsertedEventArgs.ExceptionHandled
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: KeepInInsertMode
  nameWithType: FormViewInsertedEventArgs.KeepInInsertMode
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs.Values*
  parent: System.Web.UI.WebControls.FormViewInsertedEventArgs
  isExternal: false
  name: Values
  nameWithType: FormViewInsertedEventArgs.Values
