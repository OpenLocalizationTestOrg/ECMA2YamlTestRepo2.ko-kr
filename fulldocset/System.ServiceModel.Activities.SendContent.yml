### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Activities.SendContent
  id: SendContent
  children:
  - System.ServiceModel.Activities.SendContent.Create(System.Activities.InArgument)
  - System.ServiceModel.Activities.SendContent.Create(System.Collections.Generic.IDictionary{System.String,System.Activities.InArgument})
  - System.ServiceModel.Activities.SendContent.Create(System.Activities.InArgument,System.Type)
  langs:
  - csharp
  name: SendContent
  nameWithType: SendContent
  fullName: System.ServiceModel.Activities.SendContent
  type: Class
  summary: "워크플로 서비스에 전송 되는 데이터를 나타내는 클래스에 대 한 추상 기본 클래스입니다."
  remarks: ''
  example:
  - "The following example shows how to use the SendContent class to specify the <xref:System.ServiceModel.Activities.SendMessageContent> for a <xref:System.ServiceModel.Activities.Send> activity.  \n  \n [!code-cs[ContentBasedCorrelation#1](~/add/codesnippet/csharp/t-system.servicemodel.ac_18_1.cs)]"
  syntax:
    content: public abstract class SendContent
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.SendContent.Create(System.Activities.InArgument)
  id: Create(System.Activities.InArgument)
  parent: System.ServiceModel.Activities.SendContent
  langs:
  - csharp
  name: Create(InArgument)
  nameWithType: SendContent.Create(InArgument)
  fullName: System.ServiceModel.Activities.SendContent.Create(InArgument)
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "새 <xref href=&quot;System.ServiceModel.Activities.SendMessageContent&quot;> </xref> 지정된 된 메시지를 사용 하 여 인스턴스."
  remarks: ''
  example:
  - "The following example shows how to use the <xref:System.ServiceModel.Activities.SendContent> class to specify the <xref:System.ServiceModel.Activities.SendMessageContent> for a <xref:System.ServiceModel.Activities.SendReply> activity. This example uses a lambda expression to specify the <xref:System.Activities.InArgument>. [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] lambda expressions, see [Lambda Expressions](http://go.microsoft.com/fwlink/?LinkId=182082)  \n  \n [!code-cs[ContentBasedCorrelation#2](~/add/codesnippet/csharp/6be8a2e4-b79b-4af3-90c2-_1.cs)]"
  syntax:
    content: public static System.ServiceModel.Activities.SendMessageContent Create (System.Activities.InArgument message);
    parameters:
    - id: message
      type: System.Activities.InArgument
      description: "보낼 데이터입니다."
    return:
      type: System.ServiceModel.Activities.SendMessageContent
      description: "A <xref href=&quot;System.ServiceModel.Activities.SendMessageContent&quot;> </xref> 인스턴스."
  overload: System.ServiceModel.Activities.SendContent.Create*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.SendContent.Create(System.Collections.Generic.IDictionary{System.String,System.Activities.InArgument})
  id: Create(System.Collections.Generic.IDictionary{System.String,System.Activities.InArgument})
  parent: System.ServiceModel.Activities.SendContent
  langs:
  - csharp
  name: Create(IDictionary<String,InArgument>)
  nameWithType: SendContent.Create(IDictionary<String,InArgument>)
  fullName: System.ServiceModel.Activities.SendContent.Create(IDictionary<String,InArgument>)
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "새 <xref href=&quot;System.ServiceModel.Activities.SendParametersContent&quot;> </xref> 지정된 된 매개 변수를 사용 하 여 인스턴스."
  syntax:
    content: public static System.ServiceModel.Activities.SendParametersContent Create (System.Collections.Generic.IDictionary<string,System.Activities.InArgument> parameters);
    parameters:
    - id: parameters
      type: System.Collections.Generic.IDictionary{System.String,System.Activities.InArgument}
      description: "키는 매개 변수 이름 및 인수를 포함 하는 값을 포함 한 이름/값 쌍의 컬렉션입니다."
    return:
      type: System.ServiceModel.Activities.SendParametersContent
      description: "A <xref href=&quot;System.ServiceModel.Activities.SendParametersContent&quot;> </xref> 인스턴스."
  overload: System.ServiceModel.Activities.SendContent.Create*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.SendContent.Create(System.Activities.InArgument,System.Type)
  id: Create(System.Activities.InArgument,System.Type)
  parent: System.ServiceModel.Activities.SendContent
  langs:
  - csharp
  name: Create(InArgument,Type)
  nameWithType: SendContent.Create(InArgument,Type)
  fullName: System.ServiceModel.Activities.SendContent.Create(InArgument,Type)
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "새 <xref href=&quot;System.ServiceModel.Activities.SendMessageContent&quot;> </xref> 인스턴스에 지정 된 메시지와 메시지 유형을 사용 합니다."
  remarks: '[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]선언 된 메시지 유형, <xref:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType%2A>.</xref:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType%2A> 참조'
  syntax:
    content: public static System.ServiceModel.Activities.SendMessageContent Create (System.Activities.InArgument message, Type declaredMessageType);
    parameters:
    - id: message
      type: System.Activities.InArgument
      description: "보낼 데이터입니다."
    - id: declaredMessageType
      type: System.Type
      description: "서비스 설명 및 WSDL에 표시 되는 데이터 형식입니다. 메시지의 인수 형식 또는 기본 형식 이어야 합니다."
    return:
      type: System.ServiceModel.Activities.SendMessageContent
      description: "A <xref href=&quot;System.ServiceModel.Activities.SendMessageContent&quot;> </xref> 인스턴스."
  overload: System.ServiceModel.Activities.SendContent.Create*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Activities.SendContent.Create(System.Activities.InArgument)
  parent: System.ServiceModel.Activities.SendContent
  isExternal: false
  name: Create(InArgument)
  nameWithType: SendContent.Create(InArgument)
  fullName: System.ServiceModel.Activities.SendContent.Create(InArgument)
- uid: System.ServiceModel.Activities.SendMessageContent
  parent: System.ServiceModel.Activities
  isExternal: false
  name: SendMessageContent
  nameWithType: SendMessageContent
  fullName: System.ServiceModel.Activities.SendMessageContent
- uid: System.Activities.InArgument
  parent: System.Activities
  isExternal: false
  name: InArgument
  nameWithType: InArgument
  fullName: System.Activities.InArgument
- uid: System.ServiceModel.Activities.SendContent.Create(System.Collections.Generic.IDictionary{System.String,System.Activities.InArgument})
  parent: System.ServiceModel.Activities.SendContent
  isExternal: false
  name: Create(IDictionary<String,InArgument>)
  nameWithType: SendContent.Create(IDictionary<String,InArgument>)
  fullName: System.ServiceModel.Activities.SendContent.Create(IDictionary<String,InArgument>)
- uid: System.ServiceModel.Activities.SendParametersContent
  parent: System.ServiceModel.Activities
  isExternal: false
  name: SendParametersContent
  nameWithType: SendParametersContent
  fullName: System.ServiceModel.Activities.SendParametersContent
- uid: System.Collections.Generic.IDictionary{System.String,System.Activities.InArgument}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,InArgument>
  nameWithType: IDictionary<String,InArgument>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Activities.InArgument>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Activities.InArgument>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Activities.InArgument
    name: InArgument
    nameWithType: InArgument
    fullName: InArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Activities.SendContent.Create(System.Activities.InArgument,System.Type)
  parent: System.ServiceModel.Activities.SendContent
  isExternal: false
  name: Create(InArgument,Type)
  nameWithType: SendContent.Create(InArgument,Type)
  fullName: System.ServiceModel.Activities.SendContent.Create(InArgument,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Activities.SendContent.Create*
  parent: System.ServiceModel.Activities.SendContent
  isExternal: false
  name: Create
  nameWithType: SendContent.Create
