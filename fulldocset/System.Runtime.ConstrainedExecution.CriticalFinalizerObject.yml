### YamlMime:ManagedReference
items:
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  id: CriticalFinalizerObject
  children:
  - System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor
  - System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize
  langs:
  - csharp
  name: CriticalFinalizerObject
  nameWithType: CriticalFinalizerObject
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  type: Class
  summary: "파생된 클래스에서 모든 종료 코드 중요로 표시 되어 있음을 확인 합니다."
  remarks: "CriticalFinalizerObject 클래스에서 파생 된 클래스는 제약이 있는 실행 영역 (CER)로 암시적으로 처리 됩니다.  이 코드에만 강력한 안정성 계약을 사용 하 여 코드를 호출 하면 종료 자가 필요 합니다. Cer에 대 한 자세한 내용은 참조는 <xref:System.Runtime.ConstrainedExecution>네임 스페이스.</xref:System.Runtime.ConstrainedExecution>       CriticalFinalizerObject 클래스에서 파생 된 클래스를 모든 중요 한 종료 코드를 실행 하려면 기회 제공 될 공용 언어 런타임 (CLR) 보장 종료자 CLR 강제로 응용 프로그램 도메인을 언로드합니다 위치나 스레드를 중단 하는 경우에도 CER에 대 한 규칙을 따르는 제공. 종료자 CER에 대 한 규칙을 위반 하면 것 하지 성공적으로 실행 될 합니다. 또한 CLR와 중요 한 종료자 간에 약한 순서를 설정: 하지 동시에 가비지 수집에서 회수 된 개체에 대해 이전에 중요 한 종료 자가 호출 됩니다. 예를 들어와 같은 클래스 <xref:System.IO.FileStream>의 데이터가 들어 있는 <xref:System.Runtime.InteropServices.SafeHandle>CriticalFinalizerObject에서 파생 된 클래스를 버퍼링 된 기존 데이터 플러시 표준 종료자를 실행할 수 있습니다.</xref:System.Runtime.InteropServices.SafeHandle> </xref:System.IO.FileStream>       대부분의 경우 CriticalFinalizerObject 클래스에서 파생 된 클래스를 작성할 필요가 없습니다. .NET Framework 클래스 라이브러리는 두 개의 클래스를 제공 <xref:System.Runtime.InteropServices.SafeHandle>및 <xref:System.Runtime.InteropServices.CriticalHandle>, 핸들 리소스에 대 한 중요 한 종료 기능을 제공 합니다.</xref:System.Runtime.InteropServices.CriticalHandle> </xref:System.Runtime.InteropServices.SafeHandle> .NET Framework에서 파생 된 미리 작성 된 클래스의 집합을 제공 하는 또한는 <xref:System.Runtime.InteropServices.SafeHandle>집합과이 집합에는 <xref:Microsoft.Win32.SafeHandles>네임 스페이스.</xref:Microsoft.Win32.SafeHandles> </xref:System.Runtime.InteropServices.SafeHandle> 이러한 클래스는 파일 및 운영 체제 핸들을 지원 하기 위한 공통 기능을 제공 하도록 설계 되었습니다."
  example:
  - "The following code example shows the use of the <xref:Microsoft.Win32.SafeHandles.SafeFileHandle> class to provide critical finalization for the standard input and output streams. The <xref:Microsoft.Win32.SafeHandles.SafeFileHandle>, derived from the <xref:System.Runtime.InteropServices.SafeHandle> class, is passed to the file stream in the <xref:System.IO.FileStream> constructor.  \n  \n [!code-cs[SafeHandle.SafeFileHandle#1](~/add/codesnippet/csharp/t-system.runtime.constra_0_1.cs)]\n [!code-vb[SafeHandle.SafeFileHandle#1](~/add/codesnippet/visualbasic/t-system.runtime.constra_0_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class CriticalFinalizerObject
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor
  id: '#ctor'
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  langs:
  - csharp
  name: CriticalFinalizerObject()
  nameWithType: CriticalFinalizerObject.CriticalFinalizerObject()
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.CriticalFinalizerObject()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.ConstrainedExecution
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Runtime.ConstrainedExecution.CriticalFinalizerObject&quot;> </xref> 클래스입니다."
  syntax:
    content: protected CriticalFinalizerObject ();
    parameters: []
  overload: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize
  id: Finalize
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  langs:
  - csharp
  name: Finalize()
  nameWithType: CriticalFinalizerObject.Finalize()
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.ConstrainedExecution
  summary: "사용 하는 모든 리소스를 해제는 <xref href=&quot;System.Runtime.ConstrainedExecution.CriticalFinalizerObject&quot;> </xref> 클래스입니다."
  remarks: "파생 된 모든 형식에 대 한 종료자 <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject>제공할지 기회를 실행 하 고 되지 중단 되며 종료자 올바르게 제약이 있는 실행 영역 (CER)에 대 한 규칙을 따르는 것으로 가정 합니다.</xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject>"
  syntax:
    content: ~CriticalFinalizerObject ();
    parameters: []
  overload: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  isExternal: false
  name: CriticalFinalizerObject()
  nameWithType: CriticalFinalizerObject.CriticalFinalizerObject()
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.CriticalFinalizerObject()
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  isExternal: false
  name: Finalize()
  nameWithType: CriticalFinalizerObject.Finalize()
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize()
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor*
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  isExternal: false
  name: CriticalFinalizerObject
  nameWithType: CriticalFinalizerObject.CriticalFinalizerObject
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize*
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  isExternal: false
  name: Finalize
  nameWithType: CriticalFinalizerObject.Finalize
