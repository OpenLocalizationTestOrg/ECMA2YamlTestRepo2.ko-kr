### YamlMime:ManagedReference
items:
- uid: System.IO.Log.LogExtentCollection
  id: LogExtentCollection
  children:
  - System.IO.Log.LogExtentCollection.Add(System.String)
  - System.IO.Log.LogExtentCollection.Add(System.String,System.Int64)
  - System.IO.Log.LogExtentCollection.Count
  - System.IO.Log.LogExtentCollection.FreeCount
  - System.IO.Log.LogExtentCollection.GetEnumerator
  - System.IO.Log.LogExtentCollection.Remove(System.IO.Log.LogExtent,System.Boolean)
  - System.IO.Log.LogExtentCollection.Remove(System.String,System.Boolean)
  - System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: LogExtentCollection
  nameWithType: LogExtentCollection
  fullName: System.IO.Log.LogExtentCollection
  type: Class
  summary: "컬렉션을 나타냅니다 <xref href=&quot;System.IO.Log.LogExtent&quot;> </xref> 와 연결 된 개체는 <xref href=&quot;System.IO.Log.LogStore&quot;> </xref>합니다."
  remarks: "이 클래스에 <xref:System.IO.Log.LogExtent> <xref:System.IO.Log.LogStore>.</xref:System.IO.Log.LogStore> 와 연결 된 개체의</xref:System.IO.Log.LogExtent> 컬렉션을 포함 A <xref:System.IO.Log.LogStore>인스턴스가 나타내는 디스크 범위의 컬렉션에 데이터를 저장 <xref:System.IO.Log.LogExtent>인스턴스.</xref:System.IO.Log.LogExtent> </xref:System.IO.Log.LogStore> 특정 <xref:System.IO.Log.LogExtent>하 나와 연결 된 <xref:System.IO.Log.LogStore>, 및 <xref:System.IO.Log.LogExtent>동일한 개체 <xref:System.IO.Log.LogStore>는 크기가 같습니다.</xref:System.IO.Log.LogStore> </xref:System.IO.Log.LogExtent> </xref:System.IO.Log.LogStore> </xref:System.IO.Log.LogExtent> 공간에 추가 되 고에서 제거 된 <xref:System.IO.Log.LogStore>범위가 증가 인스턴스.</xref:System.IO.Log.LogStore>       하지만 <xref:System.IO.Log.LogExtent>개체가 디스크에서 파일로 나타나지만, 있습니다 사용할 이동 되거나 삭제 되지 않아야 일반 파일 처럼.</xref:System.IO.Log.LogExtent> 추가 및 삭제에 대 한이 클래스에서 제공 하는 메서드를 사용 해야 하는 대신, <xref:System.IO.Log.LogExtent>인스턴스를 직접.</xref:System.IO.Log.LogExtent> 익스텐트는 더 이상 활성 데이터를 포함 하는 경우에 일반적으로 제거 됩니다. 그러나 경우는 `force` 에서 매개 변수는 <xref:System.IO.Log.LogExtentCollection.Remove%2A>방법은 `true`를 즉시 제거할 수 없는 경우 예외가 throw 됩니다.</xref:System.IO.Log.LogExtentCollection.Remove%2A>       즉 LogExtentCollection에서 마지막 범위를 제거할 수 없습니다는 <xref:System.IO.Log.LogExtentCollection.Count%2A>범위가 추가 된 후 속성이&0;이 될 수 없습니다.</xref:System.IO.Log.LogExtentCollection.Count%2A>"
  example:
  - "This example shows how to use the <xref:System.IO.Log.LogExtent> and LogExtentCollection classes to add and emulate extents in a log sequence.  \n  \n [!code-cs[S_UELogRecordSequence#0](~/add/codesnippet/csharp/t-system.io.log.logexten_1.cs)]\n [!code-vb[S_UELogRecordSequence#0](~/add/codesnippet/visualbasic/t-system.io.log.logexten_1.vb)]"
  syntax:
    content: 'public sealed class LogExtentCollection : System.Collections.Generic.IEnumerable<System.IO.Log.LogExtent>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable<System.IO.Log.LogExtent>
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.Add(System.String)
  id: Add(System.String)
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: LogExtentCollection.Add(String)
  fullName: System.IO.Log.LogExtentCollection.Add(String)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "추가 <xref href=&quot;System.IO.Log.LogExtent&quot;> </xref> 인스턴스를 컬렉션에 있습니다."
  remarks: "새로 추가 된 크기인 <xref:System.IO.Log.LogExtent>인스턴스는 기존 열의 크기와 동일 하 게 <xref:System.IO.Log.LogExtent>컬렉션의 인스턴스.</xref:System.IO.Log.LogExtent> </xref:System.IO.Log.LogExtent>      > [!NOTE] > 첫 번째 추가 하려면이 메서드를 사용 하지 마십시오 <xref:System.IO.Log.LogExtent>컬렉션에.</xref:System.IO.Log.LogExtent>"
  example:
  - "This example shows how to use the <xref:System.IO.Log.LogExtent> and <xref:System.IO.Log.LogExtentCollection> classes to add and emulate extents in a log sequence.  \n  \n [!code-cs[S_UELogRecordSequence#0](~/add/codesnippet/csharp/m-system.io.log.logexten_1.cs)]\n [!code-vb[S_UELogRecordSequence#0](~/add/codesnippet/visualbasic/m-system.io.log.logexten_1.vb)]"
  syntax:
    content: public void Add (string path);
    parameters:
    - id: path
      type: System.String
      description: "추가할 로그 범위에 대 한 경로입니다."
  overload: System.IO.Log.LogExtentCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "로 지정 된 로그 저장소 파일 이름이 <code> path  </code>올바르지 않습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "첫 번째 범위에 대 한 크기를 지정 해야 합니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "예기치 못한 I/O 예외 때문에 요청을 수행할 수 없습니다.       -또는-지정 된 파일이 <code> path </code> 파일 또는 디렉터리가 이미 있기 때문에 만들 수 없습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "시퀀스의 삭제 된 후 메서드가 호출 되었습니다."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "메모리가 부족 하 여 프로그램의 실행을 계속할 수 없습니다."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "레코드 시퀀스가 꽉 찼습니다.       -또는-저장소 디스크 또는 매체가 꽉 찼습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "지정된 된 로그 저장소에 대 한 액세스는 운영 체제에서 거부 됩니다."
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.Add(System.String,System.Int64)
  id: Add(System.String,System.Int64)
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: Add(String,Int64)
  nameWithType: LogExtentCollection.Add(String,Int64)
  fullName: System.IO.Log.LogExtentCollection.Add(String,Int64)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "새 <xref href=&quot;System.IO.Log.LogExtent&quot;> </xref> 지정 된 크기는 컬렉션에 추가 합니다."
  remarks: "컬렉션에 비어 있지 않으면 지정된 된 크기는 컬렉션에 있는 다른 범위의 크기 이상이 여야 합니다. 이 경우에 `size` 매개 변수는 무시 되 고와 컬렉션에 있는 다른 범위와 동일한 크기의 범위가 만들어집니다."
  syntax:
    content: public void Add (string path, long size);
    parameters:
    - id: path
      type: System.String
      description: "로그 범위에 대 한 경로입니다."
    - id: size
      type: System.Int64
      description: "로그 범위의 크기입니다."
  overload: System.IO.Log.LogExtentCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path </code>or <code>size</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>archiveTail</code>가 유효한 범위를 벗어납니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "로 지정 된 로그 저장소 파일 이름이 <code> path  </code>올바르지 않습니다.       <code>size</code>저장소에 있는 다른 범위의 크기 보다 작습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "첫 번째 범위에 대 한 크기를 지정 해야 합니다.       -또는-중복 범위 이름은 사용할 수 없습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "예기치 못한 I/O 예외 때문에 요청을 수행할 수 없습니다.       -또는-지정 된 파일이 <code> path </code> 파일 또는 디렉터리가 이미 있기 때문에 만들 수 없습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "시퀀스의 삭제 된 후 메서드가 호출 되었습니다."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "메모리가 부족 하 여 프로그램의 실행을 계속할 수 없습니다."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "레코드 시퀀스가 꽉 찼습니다.       -또는-저장소 디스크 또는 매체가 꽉 찼습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "지정된 된 로그 저장소에 대 한 액세스는 운영 체제에서 거부 됩니다."
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.Count
  id: Count
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: Count
  nameWithType: LogExtentCollection.Count
  fullName: System.IO.Log.LogExtentCollection.Count
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "컬렉션에 있는 로그 범위의 수를 가져옵니다."
  remarks: ''
  example:
  - "This example shows how to use the <xref:System.IO.Log.LogExtent> and <xref:System.IO.Log.LogExtentCollection> classes to add and emulate extents in a log sequence.  \n  \n [!code-cs[S_UELogRecordSequence#0](~/add/codesnippet/csharp/p-system.io.log.logexten_3_1.cs)]\n [!code-vb[S_UELogRecordSequence#0](~/add/codesnippet/visualbasic/p-system.io.log.logexten_3_1.vb)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "컬렉션에 있는 로그 범위의 수입니다."
  overload: System.IO.Log.LogExtentCollection.Count*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "로그 저장소의 삭제 되었습니다."
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.FreeCount
  id: FreeCount
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: FreeCount
  nameWithType: LogExtentCollection.FreeCount
  fullName: System.IO.Log.LogExtentCollection.FreeCount
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "무료의 수를 가져옵니다 <xref href=&quot;System.IO.Log.LogExtent&quot;> </xref> 컬렉션에서, 즉 수가 인스턴스 <xref href=&quot;System.IO.Log.LogExtent&quot;> </xref> 모든 데이터를 포함 하지 않는 인스턴스."
  remarks: ''
  example:
  - "This example shows how to use the <xref:System.IO.Log.LogExtent> and <xref:System.IO.Log.LogExtentCollection> classes to add and emulate extents in a log sequence.  \n  \n [!code-cs[S_UELogRecordSequence#0](~/add/codesnippet/csharp/p-system.io.log.logexten_2_1.cs)]\n [!code-vb[S_UELogRecordSequence#0](~/add/codesnippet/visualbasic/p-system.io.log.logexten_2_1.vb)]"
  syntax:
    content: public int FreeCount { get; }
    return:
      type: System.Int32
      description: "여유 <xref href=&quot;System.IO.Log.LogExtent&quot;> </xref> 인스턴스 컬렉션에 있습니다."
  overload: System.IO.Log.LogExtentCollection.FreeCount*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "로그 저장소의 삭제 되었습니다."
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.GetEnumerator
  id: GetEnumerator
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: LogExtentCollection.GetEnumerator()
  fullName: System.IO.Log.LogExtentCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "에 대 한 열거자를 가져옵니다는 <xref href=&quot;System.IO.Log.LogExtent&quot;> </xref> 이 컬렉션의 인스턴스. 이 메서드는 상속 될 수 없습니다."
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.IO.Log.LogExtent> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.IO.Log.LogExtent}
      description: "에 대 한 열거자는 <xref href=&quot;System.IO.Log.LogExtent&quot;> </xref> 이 컬렉션의 인스턴스."
  overload: System.IO.Log.LogExtentCollection.GetEnumerator*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "예기치 못한 I/O 예외 때문에 요청을 수행할 수 없습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "작업이 다음 이유 중 하나로 경로가 올바르지 않은 경우:-열거형이 끝난 경우.      -컬렉션이 수정 되었습니다.      -열거형 시작 되지 않았습니다. 에 대 한 호출 <xref:System.Collections.IEnumerator.MoveNext*>수 있어야 합니다.</xref:System.Collections.IEnumerator.MoveNext*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "시퀀스의 삭제 된 후 메서드가 호출 되었습니다."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "메모리가 부족 하 여 프로그램의 실행을 계속할 수 없습니다."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "레코드 시퀀스가 꽉 찼습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "지정된 된 로그 저장소에 대 한 액세스는 운영 체제에서 거부 됩니다."
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.Remove(System.IO.Log.LogExtent,System.Boolean)
  id: Remove(System.IO.Log.LogExtent,System.Boolean)
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: Remove(LogExtent,Boolean)
  nameWithType: LogExtentCollection.Remove(LogExtent,Boolean)
  fullName: System.IO.Log.LogExtentCollection.Remove(LogExtent,Boolean)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "지정 된 제거 <xref href=&quot;System.IO.Log.LogExtent&quot;> </xref> 컬렉션에서 인스턴스."
  remarks: "<xref:System.IO.Log.LogExtent> <xref:System.IO.Log.LogStore>.</xref:System.IO.Log.LogStore> 현재 영역의 일부가 아닌 경우에 컬렉션에서 인스턴스를 제거할 수 있습니다</xref:System.IO.Log.LogExtent> 경우는 `force` 매개 변수는 `true` 및 범위를 즉시 제거할 수 없으면, 예외가 throw 됩니다. 경우는 `force` 매개 변수는 `false` 및 범위를 즉시 제거할 수 없으면, 활성 영역에 속하지 않아 더 이상 될 때까지 제거가 지연 됩니다.       마지막 범위를 제거할 수 없습니다는 <xref:System.IO.Log.LogExtentCollection>, 즉는 <xref:System.IO.Log.LogExtentCollection.Count%2A>익스텐트 추가 되 면 속성이&0;이 될 수 없습니다.</xref:System.IO.Log.LogExtentCollection.Count%2A> </xref:System.IO.Log.LogExtentCollection>"
  syntax:
    content: public void Remove (System.IO.Log.LogExtent extent, bool force);
    parameters:
    - id: extent
      type: System.IO.Log.LogExtent
      description: "<xref href=&quot;System.IO.Log.LogExtent&quot;> </xref> 제거할 인스턴스입니다."
    - id: force
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>범위를 즉시 제거 해야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IO.Log.LogExtentCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>extent</code>or <code>force</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>extent</code>컬렉션에서 찾을 수 없습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>extent</code>제거할 수 없습니다. 여전히 활성 영역에 속해 있거나 되었거나 액세스가 거부 되었습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "예기치 못한 I/O 예외 때문에 요청을 수행할 수 없습니다.       -또는- <code> extent </code> 삭제할 수 없습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "시퀀스의 삭제 된 후 메서드가 호출 되었습니다."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "메모리가 부족 하 여 프로그램의 실행을 계속할 수 없습니다."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "레코드 시퀀스가 꽉 찼습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "지정된 된 로그 저장소에 대 한 액세스는 운영 체제에서 거부 됩니다."
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.Remove(System.String,System.Boolean)
  id: Remove(System.String,System.Boolean)
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: Remove(String,Boolean)
  nameWithType: LogExtentCollection.Remove(String,Boolean)
  fullName: System.IO.Log.LogExtentCollection.Remove(String,Boolean)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "제거는 <xref href=&quot;System.IO.Log.LogExtent&quot;> </xref> 컬렉션에서 지정된 된 경로 사용 하 여 인스턴스."
  remarks: "<xref:System.IO.Log.LogExtent> <xref:System.IO.Log.LogStore>.</xref:System.IO.Log.LogStore> 현재 영역의 일부가 아닌 경우에 컬렉션에서 인스턴스를 제거할 수 있습니다</xref:System.IO.Log.LogExtent> 경우는 `force` 매개 변수는 `true` 및 범위를 즉시 제거할 수 없으면, 예외가 throw 됩니다. 경우는 `force` 매개 변수는 `false` 및 범위를 즉시 제거할 수 없으면, 활성 영역에 속하지 않아 더 이상 될 때까지 제거가 지연 됩니다.       마지막 범위를 제거할 수 없습니다는 <xref:System.IO.Log.LogExtentCollection>, 즉는 <xref:System.IO.Log.LogExtentCollection.Count%2A>익스텐트 추가 되 면 속성이&0;이 될 수 없습니다.</xref:System.IO.Log.LogExtentCollection.Count%2A> </xref:System.IO.Log.LogExtentCollection>"
  syntax:
    content: public void Remove (string path, bool force);
    parameters:
    - id: path
      type: System.String
      description: "경로 <xref href=&quot;System.IO.Log.LogExtent&quot;> </xref> 제거할 인스턴스입니다."
    - id: force
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>범위를 즉시 제거 해야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IO.Log.LogExtentCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>force</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "로 지정 된 범위 <code> path </code> 컬렉션에서 찾을 수 없습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "로 지정 된 범위 <code> path </code> 제거할 수 없습니다. 여전히 활성 영역에 속해 있거나 되었거나 액세스가 거부 되었습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "예기치 못한 I/O 예외 때문에 요청을 수행할 수 없습니다.       -또는-로 지정 된 범위 <code> path </code> 삭제할 수 없습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "시퀀스의 삭제 된 후 메서드가 호출 되었습니다."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "메모리가 부족 하 여 프로그램의 실행을 계속할 수 없습니다."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "레코드 시퀀스가 꽉 찼습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "지정된 된 로그 저장소에 대 한 액세스는 운영 체제에서 거부 됩니다."
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: LogExtentCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.IO.Log.LogExtentCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "에 대 한 열거자를 가져옵니다는 <xref href=&quot;System.IO.Log.LogExtent&quot;> </xref> 이 컬렉션의 인스턴스. 이 메서드는 상속 될 수 없습니다."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "에 대 한 열거자는 <xref href=&quot;System.IO.Log.LogExtent&quot;> </xref> 이 컬렉션의 인스턴스."
  overload: System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.IO.Log.SequenceFullException
  parent: System.IO.Log
  isExternal: false
  name: SequenceFullException
  nameWithType: SequenceFullException
  fullName: System.IO.Log.SequenceFullException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.Log.LogExtentCollection.Add(System.String)
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Add(String)
  nameWithType: LogExtentCollection.Add(String)
  fullName: System.IO.Log.LogExtentCollection.Add(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Log.LogExtentCollection.Add(System.String,System.Int64)
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Add(String,Int64)
  nameWithType: LogExtentCollection.Add(String,Int64)
  fullName: System.IO.Log.LogExtentCollection.Add(String,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Log.LogExtentCollection.Count
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Count
  nameWithType: LogExtentCollection.Count
  fullName: System.IO.Log.LogExtentCollection.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Log.LogExtentCollection.FreeCount
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: FreeCount
  nameWithType: LogExtentCollection.FreeCount
  fullName: System.IO.Log.LogExtentCollection.FreeCount
- uid: System.IO.Log.LogExtentCollection.GetEnumerator
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: LogExtentCollection.GetEnumerator()
  fullName: System.IO.Log.LogExtentCollection.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.IO.Log.LogExtent}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<LogExtent>
  nameWithType: IEnumerator<LogExtent>
  fullName: System.Collections.Generic.IEnumerator<System.IO.Log.LogExtent>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.IO.Log.LogExtent>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Log.LogExtent
    name: LogExtent
    nameWithType: LogExtent
    fullName: LogExtent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Log.LogExtentCollection.Remove(System.IO.Log.LogExtent,System.Boolean)
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Remove(LogExtent,Boolean)
  nameWithType: LogExtentCollection.Remove(LogExtent,Boolean)
  fullName: System.IO.Log.LogExtentCollection.Remove(LogExtent,Boolean)
- uid: System.IO.Log.LogExtent
  parent: System.IO.Log
  isExternal: false
  name: LogExtent
  nameWithType: LogExtent
  fullName: System.IO.Log.LogExtent
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Log.LogExtentCollection.Remove(System.String,System.Boolean)
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Remove(String,Boolean)
  nameWithType: LogExtentCollection.Remove(String,Boolean)
  fullName: System.IO.Log.LogExtentCollection.Remove(String,Boolean)
- uid: System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: LogExtentCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.IO.Log.LogExtentCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.IO.Log.LogExtentCollection.Add*
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Add
  nameWithType: LogExtentCollection.Add
- uid: System.IO.Log.LogExtentCollection.Count*
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Count
  nameWithType: LogExtentCollection.Count
- uid: System.IO.Log.LogExtentCollection.FreeCount*
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: FreeCount
  nameWithType: LogExtentCollection.FreeCount
- uid: System.IO.Log.LogExtentCollection.GetEnumerator*
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: LogExtentCollection.GetEnumerator
- uid: System.IO.Log.LogExtentCollection.Remove*
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Remove
  nameWithType: LogExtentCollection.Remove
- uid: System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: LogExtentCollection.System.Collections.IEnumerable.GetEnumerator
