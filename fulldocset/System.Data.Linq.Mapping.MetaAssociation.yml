### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.Mapping.MetaAssociation
  id: MetaAssociation
  children:
  - System.Data.Linq.Mapping.MetaAssociation.#ctor
  - System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull
  - System.Data.Linq.Mapping.MetaAssociation.DeleteRule
  - System.Data.Linq.Mapping.MetaAssociation.IsForeignKey
  - System.Data.Linq.Mapping.MetaAssociation.IsMany
  - System.Data.Linq.Mapping.MetaAssociation.IsNullable
  - System.Data.Linq.Mapping.MetaAssociation.IsUnique
  - System.Data.Linq.Mapping.MetaAssociation.OtherKey
  - System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey
  - System.Data.Linq.Mapping.MetaAssociation.OtherMember
  - System.Data.Linq.Mapping.MetaAssociation.OtherType
  - System.Data.Linq.Mapping.MetaAssociation.ThisKey
  - System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey
  - System.Data.Linq.Mapping.MetaAssociation.ThisMember
  langs:
  - csharp
  name: MetaAssociation
  nameWithType: MetaAssociation
  fullName: System.Data.Linq.Mapping.MetaAssociation
  type: Class
  summary: "두 엔터티 형식 간의 연결 관계를 나타냅니다."
  syntax:
    content: public abstract class MetaAssociation
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaAssociation.#ctor
  id: '#ctor'
  parent: System.Data.Linq.Mapping.MetaAssociation
  langs:
  - csharp
  name: MetaAssociation()
  nameWithType: MetaAssociation.MetaAssociation()
  fullName: System.Data.Linq.Mapping.MetaAssociation.MetaAssociation()
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Linq.Mapping.MetaAssociation&quot;> </xref> 클래스입니다."
  syntax:
    content: protected MetaAssociation ();
    parameters: []
  overload: System.Data.Linq.Mapping.MetaAssociation.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull
  id: DeleteOnNull
  parent: System.Data.Linq.Mapping.MetaAssociation
  langs:
  - csharp
  name: DeleteOnNull
  nameWithType: MetaAssociation.DeleteOnNull
  fullName: System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "연결이 설정 된 경우 개체를 삭제할지 여부를 가져옵니다을 null로 합니다."
  syntax:
    content: public abstract bool DeleteOnNull { get; }
    return:
      type: System.Boolean
      description: "경우 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, 연결을 설정 하는 개체가 삭제 된 null로 합니다."
  overload: System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaAssociation.DeleteRule
  id: DeleteRule
  parent: System.Data.Linq.Mapping.MetaAssociation
  langs:
  - csharp
  name: DeleteRule
  nameWithType: MetaAssociation.DeleteRule
  fullName: System.Data.Linq.Mapping.MetaAssociation.DeleteRule
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "자식 삭제 될 때 동작을 가져옵니다."
  remarks: "규칙에는 &quot;CASCADE&quot;, &quot;NULL 설정&quot; 등이 있습니다."
  syntax:
    content: public abstract string DeleteRule { get; }
    return:
      type: System.String
      description: "규칙을 나타내는 문자열 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 삭제 시 작업을 지정 하는 경우."
  overload: System.Data.Linq.Mapping.MetaAssociation.DeleteRule*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaAssociation.IsForeignKey
  id: IsForeignKey
  parent: System.Data.Linq.Mapping.MetaAssociation
  langs:
  - csharp
  name: IsForeignKey
  nameWithType: MetaAssociation.IsForeignKey
  fullName: System.Data.Linq.Mapping.MetaAssociation.IsForeignKey
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "다른 형식이이 형식의 부모 인지를 가져옵니다."
  syntax:
    content: public abstract bool IsForeignKey { get; }
    return:
      type: System.Boolean
      description: "반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 다른 유형에이 형식의 부모입니다."
  overload: System.Data.Linq.Mapping.MetaAssociation.IsForeignKey*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaAssociation.IsMany
  id: IsMany
  parent: System.Data.Linq.Mapping.MetaAssociation
  langs:
  - csharp
  name: IsMany
  nameWithType: MetaAssociation.IsMany
  fullName: System.Data.Linq.Mapping.MetaAssociation.IsMany
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "연결에 일 대 다 관계를 나타내는지 여부를 가져옵니다."
  syntax:
    content: public abstract bool IsMany { get; }
    return:
      type: System.Boolean
      description: "반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 경우 연결 대 다 관계를 나타냅니다."
  overload: System.Data.Linq.Mapping.MetaAssociation.IsMany*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaAssociation.IsNullable
  id: IsNullable
  parent: System.Data.Linq.Mapping.MetaAssociation
  langs:
  - csharp
  name: IsNullable
  nameWithType: MetaAssociation.IsNullable
  fullName: System.Data.Linq.Mapping.MetaAssociation.IsNullable
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "연결이 null 일 수 있는지 여부를 가져옵니다."
  syntax:
    content: public abstract bool IsNullable { get; }
    return:
      type: System.Boolean
      description: "반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 연결 null이 될 수 있습니다."
  overload: System.Data.Linq.Mapping.MetaAssociation.IsNullable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaAssociation.IsUnique
  id: IsUnique
  parent: System.Data.Linq.Mapping.MetaAssociation
  langs:
  - csharp
  name: IsUnique
  nameWithType: MetaAssociation.IsUnique
  fullName: System.Data.Linq.Mapping.MetaAssociation.IsUnique
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "연결이 고유 여부를 가져옵니다."
  remarks: "이 속성에는 데이터베이스에 고유성 제약 조건을 나타냅니다."
  syntax:
    content: public abstract bool IsUnique { get; }
    return:
      type: System.Boolean
      description: "반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 연결이 고유 하는 경우."
  overload: System.Data.Linq.Mapping.MetaAssociation.IsUnique*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaAssociation.OtherKey
  id: OtherKey
  parent: System.Data.Linq.Mapping.MetaAssociation
  langs:
  - csharp
  name: OtherKey
  nameWithType: MetaAssociation.OtherKey
  fullName: System.Data.Linq.Mapping.MetaAssociation.OtherKey
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "연결의 다른 쪽에 있는 값을 나타내는 멤버의 목록을 가져옵니다."
  syntax:
    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaDataMember> OtherKey { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaDataMember}
      description: "연결의 다른 쪽에 값을 나타내는 컬렉션을 반환 합니다."
  overload: System.Data.Linq.Mapping.MetaAssociation.OtherKey*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey
  id: OtherKeyIsPrimaryKey
  parent: System.Data.Linq.Mapping.MetaAssociation
  langs:
  - csharp
  name: OtherKeyIsPrimaryKey
  nameWithType: MetaAssociation.OtherKeyIsPrimaryKey
  fullName: System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "가져옵니다 여부는 <xref:System.Data.Linq.Mapping.MetaAssociation.OtherKey*>다른 형식의 id를 형성 합니다.</xref:System.Data.Linq.Mapping.MetaAssociation.OtherKey*>"
  syntax:
    content: public abstract bool OtherKeyIsPrimaryKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.Data.Linq.Mapping.MetaAssociation.OtherKey*>다른 형식의 id (기본 키)를 형성 합니다.</xref:System.Data.Linq.Mapping.MetaAssociation.OtherKey*>"
  overload: System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaAssociation.OtherMember
  id: OtherMember
  parent: System.Data.Linq.Mapping.MetaAssociation
  langs:
  - csharp
  name: OtherMember
  nameWithType: MetaAssociation.OtherMember
  fullName: System.Data.Linq.Mapping.MetaAssociation.OtherMember
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "역방향 연결을 나타내는이 연결의 다른 쪽에 있는 멤버를 가져옵니다."
  remarks: "이 값은 null 일 수 있습니다."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaDataMember OtherMember { get; }
    return:
      type: System.Data.Linq.Mapping.MetaDataMember
      description: "다른 쪽에 대 한 멤버입니다."
  overload: System.Data.Linq.Mapping.MetaAssociation.OtherMember*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaAssociation.OtherType
  id: OtherType
  parent: System.Data.Linq.Mapping.MetaAssociation
  langs:
  - csharp
  name: OtherType
  nameWithType: MetaAssociation.OtherType
  fullName: System.Data.Linq.Mapping.MetaAssociation.OtherType
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "연결의 다른 쪽에 형식을 가져옵니다."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaType OtherType { get; }
    return:
      type: System.Data.Linq.Mapping.MetaType
      description: "유형"
  overload: System.Data.Linq.Mapping.MetaAssociation.OtherType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaAssociation.ThisKey
  id: ThisKey
  parent: System.Data.Linq.Mapping.MetaAssociation
  langs:
  - csharp
  name: ThisKey
  nameWithType: MetaAssociation.ThisKey
  fullName: System.Data.Linq.Mapping.MetaAssociation.ThisKey
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "연결의이 쪽에서 값을 나타내는 멤버의 목록을 가져옵니다."
  syntax:
    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaDataMember> ThisKey { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaDataMember}
      description: "컬렉션입니다."
  overload: System.Data.Linq.Mapping.MetaAssociation.ThisKey*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey
  id: ThisKeyIsPrimaryKey
  parent: System.Data.Linq.Mapping.MetaAssociation
  langs:
  - csharp
  name: ThisKeyIsPrimaryKey
  nameWithType: MetaAssociation.ThisKeyIsPrimaryKey
  fullName: System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "가져옵니다 여부 <xref:System.Data.Linq.Mapping.MetaAssociation.ThisKey*>이러한 종류의 id를 형성 합니다.</xref:System.Data.Linq.Mapping.MetaAssociation.ThisKey*>"
  syntax:
    content: public abstract bool ThisKeyIsPrimaryKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <xref:System.Data.Linq.Mapping.MetaAssociation.ThisKey*>연결의 id (기본 키)를 형성 합니다.</xref:System.Data.Linq.Mapping.MetaAssociation.ThisKey*>"
  overload: System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaAssociation.ThisMember
  id: ThisMember
  parent: System.Data.Linq.Mapping.MetaAssociation
  langs:
  - csharp
  name: ThisMember
  nameWithType: MetaAssociation.ThisMember
  fullName: System.Data.Linq.Mapping.MetaAssociation.ThisMember
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "연결을 나타내는이 쪽에서 멤버를 가져옵니다."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaDataMember ThisMember { get; }
    return:
      type: System.Data.Linq.Mapping.MetaDataMember
      description: "멤버입니다."
  overload: System.Data.Linq.Mapping.MetaAssociation.ThisMember*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Linq.Mapping.MetaAssociation.#ctor
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: MetaAssociation()
  nameWithType: MetaAssociation.MetaAssociation()
  fullName: System.Data.Linq.Mapping.MetaAssociation.MetaAssociation()
- uid: System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: DeleteOnNull
  nameWithType: MetaAssociation.DeleteOnNull
  fullName: System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.Mapping.MetaAssociation.DeleteRule
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: DeleteRule
  nameWithType: MetaAssociation.DeleteRule
  fullName: System.Data.Linq.Mapping.MetaAssociation.DeleteRule
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Linq.Mapping.MetaAssociation.IsForeignKey
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: IsForeignKey
  nameWithType: MetaAssociation.IsForeignKey
  fullName: System.Data.Linq.Mapping.MetaAssociation.IsForeignKey
- uid: System.Data.Linq.Mapping.MetaAssociation.IsMany
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: IsMany
  nameWithType: MetaAssociation.IsMany
  fullName: System.Data.Linq.Mapping.MetaAssociation.IsMany
- uid: System.Data.Linq.Mapping.MetaAssociation.IsNullable
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: IsNullable
  nameWithType: MetaAssociation.IsNullable
  fullName: System.Data.Linq.Mapping.MetaAssociation.IsNullable
- uid: System.Data.Linq.Mapping.MetaAssociation.IsUnique
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: IsUnique
  nameWithType: MetaAssociation.IsUnique
  fullName: System.Data.Linq.Mapping.MetaAssociation.IsUnique
- uid: System.Data.Linq.Mapping.MetaAssociation.OtherKey
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: OtherKey
  nameWithType: MetaAssociation.OtherKey
  fullName: System.Data.Linq.Mapping.MetaAssociation.OtherKey
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaDataMember}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<MetaDataMember>
  nameWithType: ReadOnlyCollection<MetaDataMember>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaDataMember>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Linq.Mapping.MetaDataMember>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Linq.Mapping.MetaDataMember
    name: MetaDataMember
    nameWithType: MetaDataMember
    fullName: MetaDataMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: OtherKeyIsPrimaryKey
  nameWithType: MetaAssociation.OtherKeyIsPrimaryKey
  fullName: System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey
- uid: System.Data.Linq.Mapping.MetaAssociation.OtherMember
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: OtherMember
  nameWithType: MetaAssociation.OtherMember
  fullName: System.Data.Linq.Mapping.MetaAssociation.OtherMember
- uid: System.Data.Linq.Mapping.MetaDataMember
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: MetaDataMember
  nameWithType: MetaDataMember
  fullName: System.Data.Linq.Mapping.MetaDataMember
- uid: System.Data.Linq.Mapping.MetaAssociation.OtherType
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: OtherType
  nameWithType: MetaAssociation.OtherType
  fullName: System.Data.Linq.Mapping.MetaAssociation.OtherType
- uid: System.Data.Linq.Mapping.MetaType
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: MetaType
  nameWithType: MetaType
  fullName: System.Data.Linq.Mapping.MetaType
- uid: System.Data.Linq.Mapping.MetaAssociation.ThisKey
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: ThisKey
  nameWithType: MetaAssociation.ThisKey
  fullName: System.Data.Linq.Mapping.MetaAssociation.ThisKey
- uid: System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: ThisKeyIsPrimaryKey
  nameWithType: MetaAssociation.ThisKeyIsPrimaryKey
  fullName: System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey
- uid: System.Data.Linq.Mapping.MetaAssociation.ThisMember
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: ThisMember
  nameWithType: MetaAssociation.ThisMember
  fullName: System.Data.Linq.Mapping.MetaAssociation.ThisMember
- uid: System.Data.Linq.Mapping.MetaAssociation.#ctor*
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: MetaAssociation
  nameWithType: MetaAssociation.MetaAssociation
- uid: System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull*
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: DeleteOnNull
  nameWithType: MetaAssociation.DeleteOnNull
- uid: System.Data.Linq.Mapping.MetaAssociation.DeleteRule*
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: DeleteRule
  nameWithType: MetaAssociation.DeleteRule
- uid: System.Data.Linq.Mapping.MetaAssociation.IsForeignKey*
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: IsForeignKey
  nameWithType: MetaAssociation.IsForeignKey
- uid: System.Data.Linq.Mapping.MetaAssociation.IsMany*
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: IsMany
  nameWithType: MetaAssociation.IsMany
- uid: System.Data.Linq.Mapping.MetaAssociation.IsNullable*
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: IsNullable
  nameWithType: MetaAssociation.IsNullable
- uid: System.Data.Linq.Mapping.MetaAssociation.IsUnique*
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: IsUnique
  nameWithType: MetaAssociation.IsUnique
- uid: System.Data.Linq.Mapping.MetaAssociation.OtherKey*
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: OtherKey
  nameWithType: MetaAssociation.OtherKey
- uid: System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey*
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: OtherKeyIsPrimaryKey
  nameWithType: MetaAssociation.OtherKeyIsPrimaryKey
- uid: System.Data.Linq.Mapping.MetaAssociation.OtherMember*
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: OtherMember
  nameWithType: MetaAssociation.OtherMember
- uid: System.Data.Linq.Mapping.MetaAssociation.OtherType*
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: OtherType
  nameWithType: MetaAssociation.OtherType
- uid: System.Data.Linq.Mapping.MetaAssociation.ThisKey*
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: ThisKey
  nameWithType: MetaAssociation.ThisKey
- uid: System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey*
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: ThisKeyIsPrimaryKey
  nameWithType: MetaAssociation.ThisKeyIsPrimaryKey
- uid: System.Data.Linq.Mapping.MetaAssociation.ThisMember*
  parent: System.Data.Linq.Mapping.MetaAssociation
  isExternal: false
  name: ThisMember
  nameWithType: MetaAssociation.ThisMember
