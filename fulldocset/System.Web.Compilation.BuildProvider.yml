### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.BuildProvider
  id: BuildProvider
  children:
  - System.Web.Compilation.BuildProvider.#ctor
  - System.Web.Compilation.BuildProvider.CodeCompilerType
  - System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)
  - System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)
  - System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)
  - System.Web.Compilation.BuildProvider.GetDefaultCompilerType
  - System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)
  - System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)
  - System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)
  - System.Web.Compilation.BuildProvider.OpenReader
  - System.Web.Compilation.BuildProvider.OpenReader(System.String)
  - System.Web.Compilation.BuildProvider.OpenStream
  - System.Web.Compilation.BuildProvider.OpenStream(System.String)
  - System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)
  - System.Web.Compilation.BuildProvider.ReferencedAssemblies
  - System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)
  - System.Web.Compilation.BuildProvider.VirtualPath
  - System.Web.Compilation.BuildProvider.VirtualPathDependencies
  langs:
  - csharp
  name: BuildProvider
  nameWithType: BuildProvider
  fullName: System.Web.Compilation.BuildProvider
  type: Class
  summary: "ASP.NET 빌드 환경에서 소스 코드를 생성 하기 위한 메서드와 속성의 집합을 정의 합니다. 이 클래스는 추상 클래스입니다."
  remarks: "ASP.NET 빌드 환경의 BuildProvider 개체를 사용 하 여 응용 프로그램 내에서 다른 파일 형식에 대 한 소스 코드를 생성 합니다. 주로 BuildProvider에서 파생 된 클래스 파일, 웹 페이지, 리소스 및 기타 사용자 지정 항목에 대 한 소스 코드를 제공 합니다.       일반적으로 BuildProvider 클래스의 인스턴스를 직접 만들지 않습니다. 대신, BuildProvider에서 파생 되는 클래스를 구현 하 고 ASP.NET 빌드 환경에서 사용 하기 위해 BuildProvider 구현을 구성 합니다.       BuildProvider 클래스의 인스턴스는 사용한 <xref:System.Web.Compilation.AssemblyBuilder>컴파일된 어셈블리에 하나 이상의 파일을 빌드해야 하는 개체입니다.</xref:System.Web.Compilation.AssemblyBuilder> 개별 파일에 대 한 적절 한 언어의 소스 코드를 생성 하는 BuildProvider 인스턴스 및 <xref:System.Web.Compilation.AssemblyBuilder>단일 어셈블리에 각 BuildProvider 인스턴스에서 제공 하는 소스를 결합 하는 개체입니다.</xref:System.Web.Compilation.AssemblyBuilder>       ASP.NET 빌드 환경 BuildProvider 클래스의 인스턴스를 사용 하 여 응용 프로그램 내에서 파일을 빌드할 수 있습니다. <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>BuildProvider 클래스의 속성을 빌드해야 파일의 경로 나타냅니다.</xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> 응용 프로그램 내에서 각 파일의 파일 확장명에 해당 하는 빌드 공급자가 매핑됩니다. ASP.NET 빌드 환경의 파일 확장명에 따라 각 파일에 대 한 BuildProvider 인스턴스를 초기화 하 고 BuildProvider 메서드를 사용 하 여 파일에 대 한 소스 코드를 생성 합니다. ASP.NET 빌드 환경은 <xref:System.Web.Compilation.AssemblyBuilder>개체에 따라 기본 컴파일러 언어와 BuildProvider 메서드 파일의 상황에 맞는 하나 이상의 파일에서 어셈블리를 빌드할 때 BuildProvider 인스턴스에서 전체 어셈블리에서 해당 파일에 대 한 소스 코드를 제공할 수 있도록 합니다.</xref:System.Web.Compilation.AssemblyBuilder>       사용자 지정 빌드를 정의 하는 파일에 대 한 작업 내 ASP.NET 응용 프로그램에서 입력 BuildProvider에서 클래스를 파생, 파일 형식을 작성 하기 위한 파생된 클래스 내에서 멤버를 구현 하 고 구성 해야 응용 프로그램 구성 파일에서 해당 파일 확장명에 대 한 빌드 공급자.       지원 되는 파일에 대 한 파일 확장명을 지정 하는 빌드 공급자 코드 파일, 웹 파일, 리소스 파일 또는 모든 파일을 지원 하는지 여부 및 합니다. 사용 하 여는 `type` 특성을 구현 하는 빌드 공급자의 정규화 된 형식 이름을 지정 합니다. 사용 하 여는 <xref:System.Web.Compilation.BuildProviderAppliesToAttribute>App_Code 디렉터리에 파일, 웹 콘텐츠 디렉터리에 전역 또는 로컬 리소스의 파일 또는 모든 파일에 빌드 공급자 적용 되는지 여부를 지정 하는 클래스입니다.</xref:System.Web.Compilation.BuildProviderAppliesToAttribute> 사용 하 여는 `extension` BuildProvider 클래스에서 지 원하는 파일을 식별 하는 데 사용 되는 파일 확장명을 지정 하는 특성입니다. 사용 하 여는 <xref:System.Web.Configuration.BuildProviderCollection>빌드 구성 파일에는 공급자를 검사 하는 클래스입니다.</xref:System.Web.Configuration.BuildProviderCollection> 빌드 공급자를 구성 하는 방법에 대 한 자세한 내용은 참조 [buildProviders 요소 (ASP.NET 설정 스키마) 컴파일에](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384)합니다.       사용자 지정 파일 형식용 소스 코드를 생성 하는 빌드 공급자를 구현 하려면 BuildProvider에서 클래스를 파생 하 고 재정의 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>메서드 지원 되는 파일 형식에 대 한 소스 코드를 생성 합니다.</xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 생성 된 소스에 추가 되는 <xref:System.Web.Compilation.AssemblyBuilder>개체 또는 실제 소스 코드 파일을 나타내는 콘텐츠로 CodeDOM 그래프의 형태로.</xref:System.Web.Compilation.AssemblyBuilder> 빌드 공급자 특정 프로그래밍 언어를 필요한 경우 재정의 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>반환 하는 <xref:System.Web.Compilation.CompilerType>지원 되는 프로그래밍 언어에 대 한 개체입니다.</xref:System.Web.Compilation.CompilerType> </xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> 빌드 공급자 특정 프로그래밍 언어에 필요 하지 않으면 경우 재정의 하지 않는 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>속성; 빌드 공급자 Visual Basic 또는 C# 같은.NET Framework 언어를 사용할 수 있는지 여부를 나타내는 기본 클래스 구현 사용 하 여.</xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>       웹 콘텐츠에 대 한 소스 코드를 생성 하는 빌드 공급자를 구현 하려면 BuildProvider 및 재정의에서 클래스를 파생 된 <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>반환 하는 메서드는 <xref:System.Type>BuildProvider에 의해 생성 된 클래스에 대 한.</xref:System.Type> </xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> 재정의 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>메서드는 지원 되는 파일에서 제공 되는 형식에 대 한 소스 코드를 생성 합니다.</xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>      > [!NOTE] > ASP.NET 웹 사이트에서 작동 하지만 ASP.NET 웹 응용 프로그램 프로젝트에서 작동 하지 않는 사용자 지정 된 BuildProvider 클래스의 Web.config 파일에 추가 합니다. 웹 응용 프로그램 프로젝트에서 응용 프로그램에는 BuildProvider 클래스에 의해 생성 되는 코드를 포함할 수 없습니다. 자세한 내용은 참조 [ASP.NET 웹 응용 프로그램 프로젝트 미리 컴파일 개요](http://msdn.microsoft.com/en-us/b940abbd-178d-4570-b441-52914fa7b887)합니다."
  example:
  - "The following code example illustrates a simple build provider implementation, inheriting from the abstract BuildProvider base class. The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class. The example does not include the implementation of the `SampleClassGenerator` class. For more information, see the <xref:System.CodeDom.CodeCompileUnit> class overview.  \n  \n [!code-cs[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/csharp/t-system.web.compilation_0_1.cs)]\n [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/visualbasic/t-system.web.compilation_0_1.vb)]"
  syntax:
    content: public abstract class BuildProvider
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.#ctor
  id: '#ctor'
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: BuildProvider()
  nameWithType: BuildProvider.BuildProvider()
  fullName: System.Web.Compilation.BuildProvider.BuildProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.Compilation.BuildProvider&quot;> </xref> 클래스입니다."
  remarks: "때문에 <xref:System.Web.Compilation.BuildProvider>클래스는 추상 클래스의 인스턴스를 만들 수 없습니다, <xref:System.Web.Compilation.BuildProvider>생성자를 사용 하 여 직접.</xref:System.Web.Compilation.BuildProvider> </xref:System.Web.Compilation.BuildProvider>       파생 된 경우는 <xref:System.Web.Compilation.BuildProvider>클래스 생성자를 재정의 하 여 빌드 공급자 구현에 대 한 사용자 지정 초기화 작업을 구현 합니다.</xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: protected BuildProvider ();
    parameters: []
  overload: System.Web.Compilation.BuildProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.CodeCompilerType
  id: CodeCompilerType
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: CodeCompilerType
  nameWithType: BuildProvider.CodeCompilerType
  fullName: System.Web.Compilation.BuildProvider.CodeCompilerType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "사용자 지정 파일 형식용 소스 코드를 생성 하는 빌드 공급자에서 사용 하는 컴파일러 형식을 나타냅니다."
  remarks: "CodeCompilerType 속성을 사용 하 여 <xref:System.Web.Compilation.BuildProvider>안내 하십시오.</xref:System.Web.Compilation.BuildProvider> 구현에 대 한 소스 코드 컴파일에 대 한 설정을 제공 하려면 CodeCompilerType 속성은 `null` 빌드 공급자 특정 코드 언어를 생성 하 고 소스 코드 컴파일 필요 하지 않은 합니다.       에 대 한 값을 설정 하는 <xref:System.Web.Compilation.CompilerType>는 빌드 공급자 구현 사용 하 여 내에서 개체는 <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>또는 <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>메서드.</xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> </xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> </xref:System.Web.Compilation.CompilerType>       <xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A>속성 지정는 <xref:System.CodeDom.Compiler.CodeDomProvider>생성 하 고 빌드 공급자에 대 한 소스 코드를 컴파일하는 데 사용 하는 구현.</xref:System.CodeDom.Compiler.CodeDomProvider> </xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A> <xref:System.Web.Compilation.CompilerType.CompilerParameters%2A>속성은 소스 코드를 어셈블리로 컴파일하는 데 사용 되는 설정을 정의 합니다.</xref:System.Web.Compilation.CompilerType.CompilerParameters%2A>"
  example:
  - "The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class. The build provider overrides the CodeCompilerType, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.  \n  \n [!code-cs[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/csharp/p-system.web.compilation_4_1.cs)]\n [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/visualbasic/p-system.web.compilation_4_1.vb)]"
  syntax:
    content: public virtual System.Web.Compilation.CompilerType CodeCompilerType { get; }
    return:
      type: System.Web.Compilation.CompilerType
      description: "읽기 전용 <xref href=&quot;System.Web.Compilation.CompilerType&quot;> </xref> 코드 생성기, 코드 컴파일러 및 가상 경로 대 한 소스 코드를 작성 하는 데 사용 되는 컴파일러 설정을 표시 합니다. 기본 클래스 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Compilation.BuildProvider.CodeCompilerType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)
  id: GenerateCode(System.Web.Compilation.AssemblyBuilder)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GenerateCode(AssemblyBuilder)
  nameWithType: BuildProvider.GenerateCode(AssemblyBuilder)
  fullName: System.Web.Compilation.BuildProvider.GenerateCode(AssemblyBuilder)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "빌드 공급자의 가상 경로 대 한 소스 코드를 생성 하 고 지정 된 어셈블리 작성기에 소스 코드를 추가 합니다."
  remarks: "사용자 지정 파일 형식용 소스 코드를 생성 하는 빌드 공급자를 구현 하려면에서 클래스를 파생 된 <xref:System.Web.Compilation.BuildProvider>클래스 하 고 지원 되는 파일 형식에 대 한 소스 코드를 생성 하려면 GenerateCode 메서드를 재정의 합니다.</xref:System.Web.Compilation.BuildProvider>       빌드 공급자의 GenerateCode 구현 읽고 일반적으로 <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>속성, 내용을 구문 분석 및 생성된 된 소스 코드를 지정 된 추가 <xref:System.Web.Compilation.AssemblyBuilder>개체입니다.</xref:System.Web.Compilation.AssemblyBuilder> </xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> 이러한 소스 코드의 형태로 어셈블리에는 <xref:System.IO.TextWriter>개체나 CodeDOM 그래프.</xref:System.IO.TextWriter> 소스 코드를 통해 어셈블리를 추가 하는 <xref:System.IO.TextWriter>개체를 가져오려면는 <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>메서드.</xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> </xref:System.IO.TextWriter> 어셈블리에 CodeDOM 그래프에서 소스 코드를 추가 하려면 사용 된 <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>메서드.</xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>       특정 프로그래밍 언어로 소스 코드를 생성 하는 빌드 공급자를 재정의 해야는 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>반환 하는 <xref:System.Web.Compilation.CompilerType>지원 되는 프로그래밍 언어에 대 한 개체입니다.</xref:System.Web.Compilation.CompilerType> </xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>"
  example:
  - "The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class. The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and GenerateCode members of the base class.  \n  \n [!code-cs[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/csharp/fc642c18-5414-4093-bd92-_1.cs)]\n [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/visualbasic/fc642c18-5414-4093-bd92-_1.vb)]"
  syntax:
    content: public virtual void GenerateCode (System.Web.Compilation.AssemblyBuilder assemblyBuilder);
    parameters:
    - id: assemblyBuilder
      type: System.Web.Compilation.AssemblyBuilder
      description: "빌드 공급자가 생성 한 소스 코드를 참조 하는 어셈블리 작성기입니다."
  overload: System.Web.Compilation.BuildProvider.GenerateCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)
  id: GetCodeCompileUnit(System.Collections.IDictionary@)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetCodeCompileUnit(IDictionary)
  nameWithType: BuildProvider.GetCodeCompileUnit(IDictionary)
  fullName: System.Web.Compilation.BuildProvider.GetCodeCompileUnit(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "생성에 대 한 컨테이너를 나타냅니다."
  remarks: "이 메서드를 통해 사용할 수는 <xref:System.Web.Compilation.ClientBuildManager>Visual Studio에서 구문 강조 및 디자이너 지원에 대 한 클래스입니다.</xref:System.Web.Compilation.ClientBuildManager>"
  syntax:
    content: protected virtual System.CodeDom.CodeCompileUnit GetCodeCompileUnit (out System.Collections.IDictionary linePragmasTable);
    parameters:
    - id: linePragmasTable
      type: System.Collections.IDictionary
      description: "이 메서드가 반환 될 때 모든 관련된 줄 번호와 소스 코드의 줄 pragma를 포함 하는 사전을 포함 합니다. 이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다."
    return:
      type: System.CodeDom.CodeCompileUnit
      description: "에 의해 생성 된 CodeDOM 그래프의 컨테이너는 <xref href=&quot;System.Web.Compilation.BuildProvider&quot;> </xref> 인스턴스."
  overload: System.Web.Compilation.BuildProvider.GetCodeCompileUnit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)
  id: GetCustomString(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetCustomString(CompilerResults)
  nameWithType: BuildProvider.GetCustomString(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetCustomString(CompilerResults)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "컴파일된 어셈블리에 유지 되어야 하는 문자열을 생성 합니다."
  remarks: "<xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A>의 메서드는 <xref:System.Web.Compilation.BuildManager>개체는 입력된 가상 경로 대 한 빌드 공급자의 인스턴스를 만들고 GetCustomString 메서드를 호출 하는 <xref:System.Web.Compilation.BuildProvider>개체입니다.</xref:System.Web.Compilation.BuildProvider> </xref:System.Web.Compilation.BuildManager> </xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A>       기본 <xref:System.Web.Compilation.BuildProvider>반환 클래스 `null` GetCustomString 구현 되지 않았음을 나타내는 GetCustomString 메서드에 대 한.</xref:System.Web.Compilation.BuildProvider>       일부 빌드 공급자에서는 대신 GetCustomString 구현할 수는 <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>메서드.</xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> <xref:System.Web.Compilation.BuildProvider>개체 <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> <xref:System.Type>가상 경로 대 한 개체</xref:System.Type> 를 반환 하려면</xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> 일반적으로 사용</xref:System.Web.Compilation.BuildProvider> 그러나 GetCustomString 메서드 데 사용할 수 있음을 <xref:System.Web.Compilation.BuildProvider>개체에는 가상 경로에서 여러 형식을 생성할 수 있습니다</xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: public virtual string GetCustomString (System.CodeDom.Compiler.CompilerResults results);
    parameters:
    - id: results
      type: System.CodeDom.Compiler.CompilerResults
      description: "빌드 공급자의 가상 경로 대 한 컴파일 결과입니다."
    return:
      type: System.String
      description: "빌드 환경에서 유지 되어야 하는 문자열 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 경우는 <xref href=&quot;System.Web.Compilation.BuildProvider&quot;> </xref> 인스턴스 GetCustomString를 구현 하지 않습니다."
  overload: System.Web.Compilation.BuildProvider.GetCustomString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerType
  id: GetDefaultCompilerType
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetDefaultCompilerType()
  nameWithType: BuildProvider.GetDefaultCompilerType()
  fullName: System.Web.Compilation.BuildProvider.GetDefaultCompilerType()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "응용 프로그램의 기본 언어에 대 한 컴파일러 설정을 반환합니다."
  remarks: "빌드 공급자에 대 한 기본 컴파일러 형식을 검사할 GetDefaultCompilerType 메서드를 사용 합니다. 사용 하 여는 <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>특정 언어 이름에 대 한 빌드 공급자에 구성 된 컴파일러 형식을 확인 합니다.</xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>       기본 <xref:System.Web.Compilation.BuildProvider>클래스를 사용 하 여 기본 컴파일러 형식을 결정는 `defaultLanguage` 특성 응용 프로그램 구성 파일의 섹션에는 값입니다.</xref:System.Web.Compilation.BuildProvider> 기본 컴파일러 형식을 사용 하 여 설정 컴파일 섹션에 기본 언어 설정이 없는 경우는 <xref:Microsoft.VisualBasic.VBCodeProvider>언어 공급자.</xref:Microsoft.VisualBasic.VBCodeProvider>       파생 된 경우는 <xref:System.Web.Compilation.BuildProvider>클래스를 설정 하려면 GetDefaultCompilerType를 사용할 수 있습니다는 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>구현 내에서 속성.</xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> </xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: protected System.Web.Compilation.CompilerType GetDefaultCompilerType ();
    parameters: []
    return:
      type: System.Web.Compilation.CompilerType
      description: "A <xref href=&quot;System.Web.Compilation.CompilerType&quot;> </xref> 응용 프로그램의 기본 언어에 대 한 컴파일러 설정을 나타내는입니다. 기본 클래스는 응용 프로그램 구성 파일에 따라 기본 컴파일러를 반환 합니다."
  overload: System.Web.Compilation.BuildProvider.GetDefaultCompilerType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)
  id: GetDefaultCompilerTypeForLanguage(System.String)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetDefaultCompilerTypeForLanguage(String)
  nameWithType: BuildProvider.GetDefaultCompilerTypeForLanguage(String)
  fullName: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "지정된 된 언어에 따라 빌드 공급자에 대 한 컴파일러 설정을 반환 합니다."
  remarks: "특정 언어 이름에 대 한 빌드 공급자에 구성 된 컴파일러 형식을 검사할 GetDefaultCompilerTypeForLanguage 메서드를 사용 합니다. 사용 하 여는 <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>빌드 공급자에 대 한 기본 컴파일러 형식을 확인 합니다.</xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>       기본 <xref:System.Web.Compilation.BuildProvider>클래스를 사용 하 여 기본 컴파일러 형식을 결정는 <xref:System.Web.Configuration.Compiler>의 요소는 <xref:System.Web.Configuration.CompilationSection.Compilers%2A>속성은 <xref:System.Web.Configuration.CompilationSection>구성 파일에 대 한 개체입니다.</xref:System.Web.Configuration.CompilationSection> </xref:System.Web.Configuration.CompilationSection.Compilers%2A> </xref:System.Web.Configuration.Compiler> </xref:System.Web.Compilation.BuildProvider> 구성 파일의 섹션에는 및 요소에 있는 요소를 검사 하는 것과 같습니다. 예를 들어는 `language` <xref:System.Web.Compilation.CompilerType> <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=fullName>안내 하십시오.</xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=fullName> 인스턴스에 대 한 구성된 된 설정에 해당 하는 개체</xref:System.Web.Compilation.CompilerType> 를 반환 하는 값 VB, 기본 클래스 메서드       파생 시키는 경우는 <xref:System.Web.Compilation.BuildProvider>클래스를 설정 하려면 GetDefaultCompilerTypeForLanguage를 사용할 수 있습니다는 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>구현에서 지 원하는 언어에 대 한 속성 값.</xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> </xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: protected System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage (string language);
    parameters:
    - id: language
      type: System.String
      description: "코드 언어 이름입니다."
    return:
      type: System.Web.Compilation.CompilerType
      description: "A <xref href=&quot;System.Web.Compilation.CompilerType&quot;> </xref> 지정된 된 언어에 따라 빌드 공급자에 대 한 컴파일러 설정을 나타내는입니다. 기본 클래스는 기본 응용 프로그램 구성 파일에 따라 언어에 대 한 컴파일러 설정을 반환 합니다."
  overload: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>language</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>language</code>빌드 공급자에 대 한 구성된 컴파일러는 일치 하지 않습니다."
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)
  id: GetGeneratedType(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetGeneratedType(CompilerResults)
  nameWithType: BuildProvider.GetGeneratedType(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetGeneratedType(CompilerResults)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "가상 경로에서 빌드 공급자가 생성 한 형식을 반환 합니다."
  remarks: "예:.aspx 파일 웹 콘텐츠에 대 한 소스 코드를 생성 하는 빌드 공급자를 구현 하려면에서 클래스를 파생는 <xref:System.Web.Compilation.BuildProvider>클래스 및 빌드 공급자에 의해 생성 된 형식을 반환 하도록 GetGeneratedType 메서드를 재정의 합니다.</xref:System.Web.Compilation.BuildProvider>       ASP.NET 빌드 시스템에서 각 빌드 공급자에 대 한 파일을 컴파일 및 생성 한 <xref:System.CodeDom.Compiler.CompilerResults>GetGeneratedType 메서드에 전달 되는 개체입니다.</xref:System.CodeDom.Compiler.CompilerResults> 빌드 공급자의 GetGeneratedType 구현을 사용 하 여 일반적으로 <xref:System.Reflection.Assembly.GetType%2A>에서 메서드는 <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A>입력의 속성 `results` 형식을 반환 하는 개체.</xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> </xref:System.Reflection.Assembly.GetType%2A>"
  syntax:
    content: public virtual Type GetGeneratedType (System.CodeDom.Compiler.CompilerResults results);
    parameters:
    - id: results
      type: System.CodeDom.Compiler.CompilerResults
      description: "빌드 공급자의 가상 경로 대 한 컴파일 결과입니다."
    return:
      type: System.Type
      description: "가상 경로 대 한 빌드 공급자가 생성 되는 형식입니다. 기본 클래스 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Compilation.BuildProvider.GetGeneratedType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)
  id: GetResultFlags(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetResultFlags(CompilerResults)
  nameWithType: BuildProvider.GetResultFlags(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetResultFlags(CompilerResults)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "가상 경로가 빌드될 때 필요한 작업을 나타내는 값을 반환 합니다."
  remarks: "GetResultFlags 메서드는 인스턴스를 사용 하는 경우 ASP.NET 빌드 환경에서 사용 된 <xref:System.Web.Compilation.BuildProvider>클래스에서 빌드 파일 및 컴파일된 어셈블리를 로드할 수 있습니다.</xref:System.Web.Compilation.BuildProvider>       기본 <xref:System.Web.Compilation.BuildProvider>클래스 메서드가 반환 되는 <xref:System.Web.Compilation.BuildProviderResultFlags>필드 값을 가상 경로가 빌드될 때 특별 한 작업이 없는 필수 항목 임을 나타내는.</xref:System.Web.Compilation.BuildProviderResultFlags> </xref:System.Web.Compilation.BuildProvider>       <xref:System.Web.Compilation.BuildProvider>클래스는 다른 <xref:System.Web.Compilation.BuildProviderResultFlags>사용자 지정 파일 형식이 나 가상 경로 대 한 값</xref:System.Web.Compilation.BuildProviderResultFlags> 을 반환할 GetResultFlags 메서드를 구현할 수</xref:System.Web.Compilation.BuildProvider> 에서 파생 된 경우 예를 들어 다시 가상 경로 필요한 경우 포함 하는 <xref:System.AppDomain>개체를 다시 로드를 반환할 수 있습니다는 <xref:System.Web.Compilation.BuildProviderResultFlags>GetResultFlags 메서드의 열거형 값입니다.</xref:System.Web.Compilation.BuildProviderResultFlags> </xref:System.AppDomain>"
  syntax:
    content: public virtual System.Web.Compilation.BuildProviderResultFlags GetResultFlags (System.CodeDom.Compiler.CompilerResults results);
    parameters:
    - id: results
      type: System.CodeDom.Compiler.CompilerResults
      description: "빌드 공급자의 가상 경로 대 한 컴파일 결과입니다."
    return:
      type: System.Web.Compilation.BuildProviderResultFlags
      description: "A <xref href=&quot;System.Web.Compilation.BuildProviderResultFlags&quot;> </xref> 빌드 환경 asp.net 가상 경로가 빌드된 후 필요한 동작을 나타내는 값입니다."
  overload: System.Web.Compilation.BuildProvider.GetResultFlags*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.OpenReader
  id: OpenReader
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: OpenReader()
  nameWithType: BuildProvider.OpenReader()
  fullName: System.Web.Compilation.BuildProvider.OpenReader()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "현재 빌드 공급자 개체의 가상 경로에서 읽기에 대 한 텍스트 판독기를 엽니다."
  remarks: "사용 하 여는 <xref:System.IO.TextReader.Read%2A>메서드 반환 된 <xref:System.IO.TextReader>개체의 내용을 읽을 수는 <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>속성에 대 한는 <xref:System.Web.Compilation.BuildProvider>개체입니다.</xref:System.Web.Compilation.BuildProvider> </xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> </xref:System.IO.TextReader> </xref:System.IO.TextReader.Read%2A>       OpenReader 메서드를 호출한 후 사용 해야 합니다는 <xref:System.IO.TextReader.Close%2A>을 닫는 메서드는 <xref:System.IO.TextReader>개체와 연결 된 시스템 리소스를 해제 합니다.</xref:System.IO.TextReader> </xref:System.IO.TextReader.Close%2A>"
  syntax:
    content: protected System.IO.TextReader OpenReader ();
    parameters: []
    return:
      type: System.IO.TextReader
      description: "열려 <xref:System.IO.TextReader>있는 <xref:System.Web.Compilation.BuildProvider.VirtualPath*>.</xref:System.Web.Compilation.BuildProvider.VirtualPath*> 내용을 읽는 데 사용할 수 있는</xref:System.IO.TextReader>"
  overload: System.Web.Compilation.BuildProvider.OpenReader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.OpenReader(System.String)
  id: OpenReader(System.String)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: OpenReader(String)
  nameWithType: BuildProvider.OpenReader(String)
  fullName: System.Web.Compilation.BuildProvider.OpenReader(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "지정 된 가상 경로에서 읽기에 대 한 텍스트 판독기를 엽니다."
  remarks: "<xref:System.IO.TextReader.Read%2A>메서드는 반환 된 <xref:System.IO.TextReader>가상 경로의 내용을 읽을 수 있는 개체</xref:System.IO.TextReader> 를</xref:System.IO.TextReader.Read%2A> 사용 하 여       호출한 후의 <xref:System.Web.Compilation.BuildProvider.OpenReader%2A>사용 해야 합니다는 <xref:System.IO.TextReader.Close%2A>을 닫는 메서드는 <xref:System.IO.TextReader>개체와 연결 된 시스템 리소스를 해제 합니다.</xref:System.IO.TextReader> </xref:System.IO.TextReader.Close%2A> </xref:System.Web.Compilation.BuildProvider.OpenReader%2A>"
  syntax:
    content: protected System.IO.TextReader OpenReader (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "읽을 가상 경로입니다."
    return:
      type: System.IO.TextReader
      description: "<xref:System.IO.TextReader>지정된 된 가상 경로 내용을 읽는 데 사용할 수 있는</xref:System.IO.TextReader> 는 열기"
  overload: System.Web.Compilation.BuildProvider.OpenReader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.OpenStream
  id: OpenStream
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: OpenStream()
  nameWithType: BuildProvider.OpenStream()
  fullName: System.Web.Compilation.BuildProvider.OpenStream()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "현재 빌드 공급자 개체의 가상 경로 읽기 위한 스트림을 엽니다."
  remarks: "사용 하 여는 <xref:System.IO.Stream.Read%2A>메서드 반환 된 <xref:System.IO.Stream>개체에 대 한 가상 경로의 내용을 읽을 수는 <xref:System.Web.Compilation.BuildProvider>개체입니다.</xref:System.Web.Compilation.BuildProvider> </xref:System.IO.Stream> </xref:System.IO.Stream.Read%2A>       OpenStream 메서드를 호출한 후 사용 해야 합니다는 <xref:System.IO.Stream.Close%2A>을 닫는 메서드는 <xref:System.IO.Stream>개체와 연결 된 시스템 리소스를 해제 합니다.</xref:System.IO.Stream> </xref:System.IO.Stream.Close%2A>"
  syntax:
    content: protected System.IO.Stream OpenStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "열려 <xref:System.IO.Stream>있는 <xref:System.Web.Compilation.BuildProvider.VirtualPath*>.</xref:System.Web.Compilation.BuildProvider.VirtualPath*> 내용을 읽는 데 사용할 수 있는</xref:System.IO.Stream>"
  overload: System.Web.Compilation.BuildProvider.OpenStream*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.OpenStream(System.String)
  id: OpenStream(System.String)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: OpenStream(String)
  nameWithType: BuildProvider.OpenStream(String)
  fullName: System.Web.Compilation.BuildProvider.OpenStream(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "지정된 된 가상 경로에서 읽기 위한 스트림을 엽니다."
  remarks: "<xref:System.IO.Stream.Read%2A>메서드는 반환 된 <xref:System.IO.Stream>가상 경로의 내용을 읽을 수 있는 개체</xref:System.IO.Stream> 를</xref:System.IO.Stream.Read%2A> 사용 하 여       호출한 후의 <xref:System.Web.Compilation.BuildProvider.OpenStream%2A>사용 해야 합니다는 <xref:System.IO.Stream.Close%2A>을 닫는 메서드는 <xref:System.IO.Stream>개체와 연결 된 시스템 리소스를 해제 합니다.</xref:System.IO.Stream> </xref:System.IO.Stream.Close%2A> </xref:System.Web.Compilation.BuildProvider.OpenStream%2A>"
  syntax:
    content: protected System.IO.Stream OpenStream (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "읽을 가상 경로입니다."
    return:
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>지정된 된 가상 경로 내용을 읽는 데 사용할 수 있는</xref:System.IO.Stream> 는 열기"
  overload: System.Web.Compilation.BuildProvider.OpenStream*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)
  id: ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: ProcessCompileErrors(CompilerResults)
  nameWithType: BuildProvider.ProcessCompileErrors(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.ProcessCompileErrors(CompilerResults)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "파생된 클래스에서 재정의 되 면 자세한 정보를 제공 하도록 비즈니스 프로세스를 수정할 수 있도록 컴파일러 오류 메시지를 검토할 수 있습니다."
  remarks: "오류 텍스트를 사용자에 게 더 유용 하 게 만들려면 표시 되기 전에 컴파일러 오류를 수정할 수 있도록 일반적으로이 메서드를 재정의 합니다. 마우스를 특정 오류의 컨텍스트를 알고 있으며 해결 방법에 대 한 사용자에 게 정보를 제공할 수 있는 시나리오에서 유용 합니다. 원래 컴파일러 오류 메시지는 대개 특정 언어 구조 및 수행할 수 없습니다 실제 원인을 또는 솔루션 확실 한 사용자에 게 합니다.       사용 하 여 오류에 액세스할 수 있습니다는 <xref:System.CodeDom.Compiler.CompilerResults>메서드에 전달 되는 개체입니다.</xref:System.CodeDom.Compiler.CompilerResults>"
  syntax:
    content: public virtual void ProcessCompileErrors (System.CodeDom.Compiler.CompilerResults results);
    parameters:
    - id: results
      type: System.CodeDom.Compiler.CompilerResults
      description: "컴파일러 결과입니다."
  overload: System.Web.Compilation.BuildProvider.ProcessCompileErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.ReferencedAssemblies
  id: ReferencedAssemblies
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: ReferencedAssemblies
  nameWithType: BuildProvider.ReferencedAssemblies
  fullName: System.Web.Compilation.BuildProvider.ReferencedAssemblies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "빌드 공급자가 생성 한 소스 코드로 컴파일할 어셈블리를를 나타냅니다."
  remarks: "ASP.NET 빌드 환경 빌드 공급자가 참조에 사용할 수 있는 어셈블리의 컬렉션입니다. 빌드 공급자가 생성 한 소스 코드 참조 된 어셈블리의 public 형식을 사용할 수 있습니다. 참조 된 어셈블리 컬렉션 다른 ASP.NET 응용 프로그램에서 빌드한 어셈블리와 구성 파일의 요소에 나열 된 어셈블리로 구성 됩니다.       빌드 공급자를 사용 하 여 추가 어셈블리 추가 빌드 공급자 추가 어셈블리를 참조 하는 소스 코드를 생성 하는 경우는 <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>메서드.</xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> ASP.NET 빌드 환경 외부 형식을 참조 어셈블리를 모두 추가 하 여 사용 하 여 어셈블리 컴파일 중에 빌드 공급자를 참조할 수 있는 어셈블리의 기본 컬렉션을 확인 합니다.       ReferencedAssemblies 컬렉션 참조에 대 한 다른 빌드 공급자에 의해 추가 된 어셈블리를 포함 하지 않습니다는 <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>메서드.</xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>"
  syntax:
    content: protected System.Collections.ICollection ReferencedAssemblies { get; }
    return:
      type: System.Collections.ICollection
      description: "빌드 공급자가 생성 한 소스 코드에서 참조할 수 있는 어셈블리의 읽기 전용 컬렉션입니다."
  overload: System.Web.Compilation.BuildProvider.ReferencedAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)
  id: RegisterBuildProvider(System.String,System.Type)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: RegisterBuildProvider(String,Type)
  nameWithType: BuildProvider.RegisterBuildProvider(String,Type)
  fullName: System.Web.Compilation.BuildProvider.RegisterBuildProvider(String,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "빌드 공급자를 등록합니다."
  remarks: "Web.config 파일에서 정의 하는 대신 빌드 공급자를 등록 하려면이 메서드를 사용할 수 있습니다. 빌드 공급자에 대 한 자세한 내용은 참조는 <xref:System.Web.Compilation.BuildProvider>클래스 및 [buildProviders 요소 (ASP.NET 설정 스키마) 컴파일에](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384).</xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: public static void RegisterBuildProvider (string extension, Type providerType);
    parameters:
    - id: extension
      type: System.String
      description: "빌드 공급자에 있는 파일 이름 확장명입니다."
    - id: providerType
      type: System.Type
      description: "빌드 공급자 클래스입니다."
  overload: System.Web.Compilation.BuildProvider.RegisterBuildProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.VirtualPath
  id: VirtualPath
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: VirtualPath
  nameWithType: BuildProvider.VirtualPath
  fullName: System.Web.Compilation.BuildProvider.VirtualPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "이 빌드 공급자 구현 하 여 작성할 파일을 나타냅니다."
  remarks: "가상 경로 <xref:System.Web.Compilation.BuildProvider>개체는 빌드 공급자가 컴파일되는 파일의 경로입니다.</xref:System.Web.Compilation.BuildProvider> 예를 들어, 사용자 지정을 구성한 경우 <xref:System.Web.Compilation.BuildProvider>.abc의 사용자 지정 확장을 사용 하 여 웹 사이트의 모든 파일을 만들려는 클래스, VirtualPath 속성 값이 들어 WebSite1, 웹 사이트 이름이 Example.abc 라는 파일을 포함 하는 웹 사이트를 `/WebSite1/Example.abc`.</xref:System.Web.Compilation.BuildProvider>       응용 프로그램 내의 각 파일의 파일 확장명, 파일 형식 및 파일 형식에 대 한 빌드 공급자를 결정합니다. ASP.NET 빌드 환경은 <xref:System.Web.Compilation.BuildProvider>각 파일 종류에 따라 파일과 사용에 대 한 개체는 <xref:System.Web.Compilation.BuildProvider>각 파일에 대 한 소스를 생성 하는 방법.</xref:System.Web.Compilation.BuildProvider> </xref:System.Web.Compilation.BuildProvider>       빌드 공급자를 구성 하는 방법에 대 한 자세한 내용은 참조 [buildProviders 요소 (ASP.NET 설정 스키마) 컴파일에](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384)합니다."
  syntax:
    content: protected string VirtualPath { get; }
    return:
      type: System.String
      description: "이 빌드 공급자가 컴파일되는 파일의 가상 경로 지정 하는 읽기 전용 문자열입니다."
  overload: System.Web.Compilation.BuildProvider.VirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.VirtualPathDependencies
  id: VirtualPathDependencies
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: VirtualPathDependencies
  nameWithType: BuildProvider.VirtualPathDependencies
  fullName: System.Web.Compilation.BuildProvider.VirtualPathDependencies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "빌드 공급자가 코드를 생성 하기 전에 빌드되어야 하는 가상 경로 컬렉션을 나타냅니다."
  remarks: "VirtualPathDependencies 속성은 하기 전에 컴파일되어야 하는 가상 경로 컬렉션을는 <xref:System.Web.Compilation.BuildProvider>인스턴스 소스 코드를 생성 합니다.</xref:System.Web.Compilation.BuildProvider> VirtualPathDependencies에서의 가상 경로에서 어셈블리에 대 한 컴파일에 참조로 추가 되는 <xref:System.Web.Compilation.BuildProvider>인스턴스.</xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: public virtual System.Collections.ICollection VirtualPathDependencies { get; }
    return:
      type: System.Collections.ICollection
      description: "빌드 공급자의이 인스턴스는에 의존 하는 가상 경로 나타내는 문자열의 읽기 전용 컬렉션입니다."
  overload: System.Web.Compilation.BuildProvider.VirtualPathDependencies*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Compilation.BuildProvider.#ctor
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: BuildProvider()
  nameWithType: BuildProvider.BuildProvider()
  fullName: System.Web.Compilation.BuildProvider.BuildProvider()
- uid: System.Web.Compilation.BuildProvider.CodeCompilerType
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: CodeCompilerType
  nameWithType: BuildProvider.CodeCompilerType
  fullName: System.Web.Compilation.BuildProvider.CodeCompilerType
- uid: System.Web.Compilation.CompilerType
  parent: System.Web.Compilation
  isExternal: false
  name: CompilerType
  nameWithType: CompilerType
  fullName: System.Web.Compilation.CompilerType
- uid: System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GenerateCode(AssemblyBuilder)
  nameWithType: BuildProvider.GenerateCode(AssemblyBuilder)
  fullName: System.Web.Compilation.BuildProvider.GenerateCode(AssemblyBuilder)
- uid: System.Web.Compilation.AssemblyBuilder
  parent: System.Web.Compilation
  isExternal: false
  name: AssemblyBuilder
  nameWithType: AssemblyBuilder
  fullName: System.Web.Compilation.AssemblyBuilder
- uid: System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetCodeCompileUnit(IDictionary)
  nameWithType: BuildProvider.GetCodeCompileUnit(IDictionary)
  fullName: System.Web.Compilation.BuildProvider.GetCodeCompileUnit(IDictionary)
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetCustomString(CompilerResults)
  nameWithType: BuildProvider.GetCustomString(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetCustomString(CompilerResults)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.Compiler.CompilerResults
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CompilerResults
  nameWithType: CompilerResults
  fullName: System.CodeDom.Compiler.CompilerResults
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerType
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetDefaultCompilerType()
  nameWithType: BuildProvider.GetDefaultCompilerType()
  fullName: System.Web.Compilation.BuildProvider.GetDefaultCompilerType()
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetDefaultCompilerTypeForLanguage(String)
  nameWithType: BuildProvider.GetDefaultCompilerTypeForLanguage(String)
  fullName: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(String)
- uid: System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetGeneratedType(CompilerResults)
  nameWithType: BuildProvider.GetGeneratedType(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetGeneratedType(CompilerResults)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetResultFlags(CompilerResults)
  nameWithType: BuildProvider.GetResultFlags(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetResultFlags(CompilerResults)
- uid: System.Web.Compilation.BuildProviderResultFlags
  parent: System.Web.Compilation
  isExternal: false
  name: BuildProviderResultFlags
  nameWithType: BuildProviderResultFlags
  fullName: System.Web.Compilation.BuildProviderResultFlags
- uid: System.Web.Compilation.BuildProvider.OpenReader
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenReader()
  nameWithType: BuildProvider.OpenReader()
  fullName: System.Web.Compilation.BuildProvider.OpenReader()
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Web.Compilation.BuildProvider.OpenReader(System.String)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenReader(String)
  nameWithType: BuildProvider.OpenReader(String)
  fullName: System.Web.Compilation.BuildProvider.OpenReader(String)
- uid: System.Web.Compilation.BuildProvider.OpenStream
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenStream()
  nameWithType: BuildProvider.OpenStream()
  fullName: System.Web.Compilation.BuildProvider.OpenStream()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.Compilation.BuildProvider.OpenStream(System.String)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenStream(String)
  nameWithType: BuildProvider.OpenStream(String)
  fullName: System.Web.Compilation.BuildProvider.OpenStream(String)
- uid: System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: ProcessCompileErrors(CompilerResults)
  nameWithType: BuildProvider.ProcessCompileErrors(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.ProcessCompileErrors(CompilerResults)
- uid: System.Web.Compilation.BuildProvider.ReferencedAssemblies
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: BuildProvider.ReferencedAssemblies
  fullName: System.Web.Compilation.BuildProvider.ReferencedAssemblies
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: RegisterBuildProvider(String,Type)
  nameWithType: BuildProvider.RegisterBuildProvider(String,Type)
  fullName: System.Web.Compilation.BuildProvider.RegisterBuildProvider(String,Type)
- uid: System.Web.Compilation.BuildProvider.VirtualPath
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: VirtualPath
  nameWithType: BuildProvider.VirtualPath
  fullName: System.Web.Compilation.BuildProvider.VirtualPath
- uid: System.Web.Compilation.BuildProvider.VirtualPathDependencies
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: VirtualPathDependencies
  nameWithType: BuildProvider.VirtualPathDependencies
  fullName: System.Web.Compilation.BuildProvider.VirtualPathDependencies
- uid: System.Web.Compilation.BuildProvider.#ctor*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: BuildProvider
  nameWithType: BuildProvider.BuildProvider
- uid: System.Web.Compilation.BuildProvider.CodeCompilerType*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: CodeCompilerType
  nameWithType: BuildProvider.CodeCompilerType
- uid: System.Web.Compilation.BuildProvider.GenerateCode*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GenerateCode
  nameWithType: BuildProvider.GenerateCode
- uid: System.Web.Compilation.BuildProvider.GetCodeCompileUnit*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetCodeCompileUnit
  nameWithType: BuildProvider.GetCodeCompileUnit
- uid: System.Web.Compilation.BuildProvider.GetCustomString*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetCustomString
  nameWithType: BuildProvider.GetCustomString
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerType*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetDefaultCompilerType
  nameWithType: BuildProvider.GetDefaultCompilerType
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetDefaultCompilerTypeForLanguage
  nameWithType: BuildProvider.GetDefaultCompilerTypeForLanguage
- uid: System.Web.Compilation.BuildProvider.GetGeneratedType*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetGeneratedType
  nameWithType: BuildProvider.GetGeneratedType
- uid: System.Web.Compilation.BuildProvider.GetResultFlags*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetResultFlags
  nameWithType: BuildProvider.GetResultFlags
- uid: System.Web.Compilation.BuildProvider.OpenReader*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenReader
  nameWithType: BuildProvider.OpenReader
- uid: System.Web.Compilation.BuildProvider.OpenStream*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenStream
  nameWithType: BuildProvider.OpenStream
- uid: System.Web.Compilation.BuildProvider.ProcessCompileErrors*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: ProcessCompileErrors
  nameWithType: BuildProvider.ProcessCompileErrors
- uid: System.Web.Compilation.BuildProvider.ReferencedAssemblies*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: BuildProvider.ReferencedAssemblies
- uid: System.Web.Compilation.BuildProvider.RegisterBuildProvider*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: RegisterBuildProvider
  nameWithType: BuildProvider.RegisterBuildProvider
- uid: System.Web.Compilation.BuildProvider.VirtualPath*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: VirtualPath
  nameWithType: BuildProvider.VirtualPath
- uid: System.Web.Compilation.BuildProvider.VirtualPathDependencies*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: VirtualPathDependencies
  nameWithType: BuildProvider.VirtualPathDependencies
