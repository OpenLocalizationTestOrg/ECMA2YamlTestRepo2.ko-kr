### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.EventDescriptor
  id: EventDescriptor
  children:
  - System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  - System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  - System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])
  - System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)
  - System.ComponentModel.EventDescriptor.ComponentType
  - System.ComponentModel.EventDescriptor.EventType
  - System.ComponentModel.EventDescriptor.IsMulticast
  - System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)
  langs:
  - csharp
  name: EventDescriptor
  nameWithType: EventDescriptor
  fullName: System.ComponentModel.EventDescriptor
  type: Class
  summary: "이벤트에 대 한 정보를 제공합니다."
  remarks: "EventDescriptor 구성 이름, 특성, 이벤트에 바인딩되는 구성 요소, 이벤트 대리자, 대리자, 형식 및 멀티 캐스트 대리자 인지 합니다.       EventDescriptor는 다음과 같은 장점이 `abstract` 속성 및 메서드:- <xref:System.ComponentModel.EventDescriptor.ComponentType%2A>이 이벤트가 선언 된 구성 요소의 유형을 포함 합니다.</xref:System.ComponentModel.EventDescriptor.ComponentType%2A>      - <xref:System.ComponentModel.EventDescriptor.EventType%2A>이벤트에 대 한 대리자의 형식을 포함 합니다.</xref:System.ComponentModel.EventDescriptor.EventType%2A>      - <xref:System.ComponentModel.EventDescriptor.IsMulticast%2A>이벤트 대리자는 멀티 캐스트 대리자 인지를 나타내는 값을 포함 합니다.</xref:System.ComponentModel.EventDescriptor.IsMulticast%2A>      - <xref:System.ComponentModel.EventDescriptor.AddEventHandler%2A>이벤트 구성 요소에 바인딩합니다.</xref:System.ComponentModel.EventDescriptor.AddEventHandler%2A>      - <xref:System.ComponentModel.EventDescriptor.RemoveEventHandler%2A>대리자는 구성 요소에서 이벤트를 더 이상 받을 수 있도록 구성 요소에서 대리자를 바인딩 해제 합니다.</xref:System.ComponentModel.EventDescriptor.RemoveEventHandler%2A>       이벤트에 대 한 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다. 리플렉션에 대 한 자세한 내용은 항목을 참조 [리플렉션](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example is built upon the example in the <xref:System.ComponentModel.EventDescriptorCollection> class. It prints the information (category, description, and display name) of each event on a button in a text box. It requires that `button1` and `textbox1` have been instantiated on a form.  \n  \n [!code-cpp[EventDescriptor#1](~/add/codesnippet/cpp/t-system.componentmodel._26_1.cpp)]\n [!code-cs[EventDescriptor#1](~/add/codesnippet/csharp/t-system.componentmodel._26_1.cs)]\n [!code-vb[EventDescriptor#1](~/add/codesnippet/visualbasic/t-system.componentmodel._26_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class EventDescriptor : System.ComponentModel.MemberDescriptor
  inheritance:
  - System.Object
  - System.ComponentModel.MemberDescriptor
  implements: []
  inheritedMembers:
  - System.ComponentModel.MemberDescriptor.AttributeArray
  - System.ComponentModel.MemberDescriptor.Attributes
  - System.ComponentModel.MemberDescriptor.Category
  - System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  - System.ComponentModel.MemberDescriptor.Description
  - System.ComponentModel.MemberDescriptor.DesignTimeOnly
  - System.ComponentModel.MemberDescriptor.DisplayName
  - System.ComponentModel.MemberDescriptor.Equals(System.Object)
  - System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  - System.ComponentModel.MemberDescriptor.GetHashCode
  - System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
  - System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)
  - System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  - System.ComponentModel.MemberDescriptor.IsBrowsable
  - System.ComponentModel.MemberDescriptor.Name
  - System.ComponentModel.MemberDescriptor.NameHashCode
  platform:
  - net462
- uid: System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  id: '#ctor(System.ComponentModel.MemberDescriptor)'
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  name: EventDescriptor(MemberDescriptor)
  nameWithType: EventDescriptor.EventDescriptor(MemberDescriptor)
  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(MemberDescriptor)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> 이름 및 지정 된 특성을 사용 하 여 클래스 <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref>합니다."
  syntax:
    content: protected EventDescriptor (System.ComponentModel.MemberDescriptor descr);
    parameters:
    - id: descr
      type: System.ComponentModel.MemberDescriptor
      description: "A <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> 이벤트 및 해당 특성의 이름이 들어 있는입니다."
  overload: System.ComponentModel.EventDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  id: '#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])'
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  name: EventDescriptor(MemberDescriptor,Attribute[])
  nameWithType: EventDescriptor.EventDescriptor(MemberDescriptor,Attribute[])
  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(MemberDescriptor,Attribute[])
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> 클래스에 지정 된 이름의 <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> 및 특성 둘 다에 <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> 및 <xref:System.Attribute>배열.</xref:System.Attribute>"
  remarks: "이 생성자는 <xref:System.Attribute>배열의 <xref:System.ComponentModel.MemberDescriptor>.</xref:System.ComponentModel.MemberDescriptor> 특성에</xref:System.Attribute> 에서 특성 추가"
  syntax:
    content: protected EventDescriptor (System.ComponentModel.MemberDescriptor descr, Attribute[] attrs);
    parameters:
    - id: descr
      type: System.ComponentModel.MemberDescriptor
      description: "A <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> 멤버와 해당 특성의 이름입니다."
    - id: attrs
      type: System.Attribute[]
      description: "<xref:System.Attribute>이 이벤트 설명에 추가 하려는 특성을 사용 하 여 배열.</xref:System.Attribute>"
  overload: System.ComponentModel.EventDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])
  id: '#ctor(System.String,System.Attribute[])'
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  name: EventDescriptor(String,Attribute[])
  nameWithType: EventDescriptor.EventDescriptor(String,Attribute[])
  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(String,Attribute[])
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> 지정한 이름 및 특성 배열 사용 하 여 클래스입니다."
  syntax:
    content: protected EventDescriptor (string name, Attribute[] attrs);
    parameters:
    - id: name
      type: System.String
      description: "이벤트의 이름입니다."
    - id: attrs
      type: System.Attribute[]
      description: "형식의 배열 <xref:System.Attribute>이벤트 특성이 들어 있는.</xref:System.Attribute>"
  overload: System.ComponentModel.EventDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)
  id: AddEventHandler(System.Object,System.Delegate)
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  name: AddEventHandler(Object,Delegate)
  nameWithType: EventDescriptor.AddEventHandler(Object,Delegate)
  fullName: System.ComponentModel.EventDescriptor.AddEventHandler(Object,Delegate)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "파생된 클래스에서 재정의 되 면 이벤트 구성 요소에 바인딩합니다."
  remarks: "일반적으로이 메서드는 리플렉션을 통해 구현 됩니다. 리플렉션에 대 한 자세한 내용은 항목을 참조 [리플렉션](~/add/includes/ajax-current-ext-md.md)합니다.       대리자에 대 한 자세한 내용은 참조 [NIB: 이벤트 및 대리자](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)합니다."
  syntax:
    content: public abstract void AddEventHandler (object component, Delegate value);
    parameters:
    - id: component
      type: System.Object
      description: "대리자에 게 이벤트를 제공 하는 구성 요소입니다."
    - id: value
      type: System.Delegate
      description: "이벤트를 처리 하는 메서드를 나타내는 대리자입니다."
  overload: System.ComponentModel.EventDescriptor.AddEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventDescriptor.ComponentType
  id: ComponentType
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  name: ComponentType
  nameWithType: EventDescriptor.ComponentType
  fullName: System.ComponentModel.EventDescriptor.ComponentType
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "파생된 클래스에서 재정의 하는 경우이 이벤트에 바인딩된 구성 요소의 형식을 가져옵니다."
  remarks: "일반적으로이 속성은 리플렉션을 통해 구현 됩니다."
  syntax:
    content: public abstract Type ComponentType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>이벤트에 바인딩된 구성 요소의 형식을 나타내는.</xref:System.Type>"
  overload: System.ComponentModel.EventDescriptor.ComponentType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventDescriptor.EventType
  id: EventType
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  name: EventType
  nameWithType: EventDescriptor.EventType
  fullName: System.ComponentModel.EventDescriptor.EventType
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "파생된 클래스에서 재정의 되 면 이벤트에 대 한 대리자의 형식을 가져옵니다."
  remarks: "일반적으로이 속성은 리플렉션을 통해 구현 됩니다."
  syntax:
    content: public abstract Type EventType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>이벤트에 대 한 대리자 형식을 나타내는.</xref:System.Type>"
  overload: System.ComponentModel.EventDescriptor.EventType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventDescriptor.IsMulticast
  id: IsMulticast
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  name: IsMulticast
  nameWithType: EventDescriptor.IsMulticast
  fullName: System.ComponentModel.EventDescriptor.IsMulticast
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "파생된 클래스에서 재정의 되 면 이벤트 대리자는 멀티 캐스트 대리자 인지를 나타내는 값을 가져옵니다."
  remarks: "일반적으로이 속성은 리플렉션을 통해 구현 됩니다.       멀티 캐스트 대리자는 하나 이상의 메서드에 대 한 참조를 포함할 수 있다는 점에서 일반적인 대리자에서 다릅니다. 멀티 캐스트 대리자의 메서드는 대리자가 호출 되는 순서 대로 때 동기적으로 실행 됩니다. 그런 다음 호출된 된 메서드 중 하나에서 예외가 발생 하는 경우 대리자가 중단 되 고 예외가 대리자 호출자에 게 전파 됩니다."
  syntax:
    content: public abstract bool IsMulticast { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이벤트 대리자가; 멀티 캐스트 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.EventDescriptor.IsMulticast*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)
  id: RemoveEventHandler(System.Object,System.Delegate)
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  name: RemoveEventHandler(Object,Delegate)
  nameWithType: EventDescriptor.RemoveEventHandler(Object,Delegate)
  fullName: System.ComponentModel.EventDescriptor.RemoveEventHandler(Object,Delegate)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "파생된 클래스에서 재정의 되 면 대리자는 구성 요소에서 이벤트를 더 이상 받지 것입니다 되도록 구성 요소에서 대리자를 바인딩 해제 합니다."
  remarks: "일반적으로이 메서드는 리플렉션을 통해 구현 됩니다. 자세한 내용은 참조 항목에서는 [리플렉션](~/add/includes/ajax-current-ext-md.md)합니다.       대리자에 대 한 자세한 내용은 참조 [NIB: 이벤트 및 대리자](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)합니다."
  syntax:
    content: public abstract void RemoveEventHandler (object component, Delegate value);
    parameters:
    - id: component
      type: System.Object
      description: "대리자가 바인딩되는 구성 요소입니다."
    - id: value
      type: System.Delegate
      description: "구성 요소에서 바인딩 해제 하는 대리자입니다."
  overload: System.ComponentModel.EventDescriptor.RemoveEventHandler*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: System.ComponentModel.MemberDescriptor
- uid: System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: EventDescriptor(MemberDescriptor)
  nameWithType: EventDescriptor.EventDescriptor(MemberDescriptor)
  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(MemberDescriptor)
- uid: System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: EventDescriptor(MemberDescriptor,Attribute[])
  nameWithType: EventDescriptor.EventDescriptor(MemberDescriptor,Attribute[])
  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(MemberDescriptor,Attribute[])
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: EventDescriptor(String,Attribute[])
  nameWithType: EventDescriptor.EventDescriptor(String,Attribute[])
  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(String,Attribute[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: AddEventHandler(Object,Delegate)
  nameWithType: EventDescriptor.AddEventHandler(Object,Delegate)
  fullName: System.ComponentModel.EventDescriptor.AddEventHandler(Object,Delegate)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.ComponentModel.EventDescriptor.ComponentType
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: ComponentType
  nameWithType: EventDescriptor.ComponentType
  fullName: System.ComponentModel.EventDescriptor.ComponentType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.EventDescriptor.EventType
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: EventType
  nameWithType: EventDescriptor.EventType
  fullName: System.ComponentModel.EventDescriptor.EventType
- uid: System.ComponentModel.EventDescriptor.IsMulticast
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: IsMulticast
  nameWithType: EventDescriptor.IsMulticast
  fullName: System.ComponentModel.EventDescriptor.IsMulticast
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: RemoveEventHandler(Object,Delegate)
  nameWithType: EventDescriptor.RemoveEventHandler(Object,Delegate)
  fullName: System.ComponentModel.EventDescriptor.RemoveEventHandler(Object,Delegate)
- uid: System.ComponentModel.EventDescriptor.#ctor*
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: EventDescriptor
  nameWithType: EventDescriptor.EventDescriptor
- uid: System.ComponentModel.EventDescriptor.AddEventHandler*
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: AddEventHandler
  nameWithType: EventDescriptor.AddEventHandler
- uid: System.ComponentModel.EventDescriptor.ComponentType*
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: ComponentType
  nameWithType: EventDescriptor.ComponentType
- uid: System.ComponentModel.EventDescriptor.EventType*
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: EventType
  nameWithType: EventDescriptor.EventType
- uid: System.ComponentModel.EventDescriptor.IsMulticast*
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: IsMulticast
  nameWithType: EventDescriptor.IsMulticast
- uid: System.ComponentModel.EventDescriptor.RemoveEventHandler*
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: RemoveEventHandler
  nameWithType: EventDescriptor.RemoveEventHandler
