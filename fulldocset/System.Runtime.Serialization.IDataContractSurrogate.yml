### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.IDataContractSurrogate
  id: IDataContractSurrogate
  children:
  - System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)
  - System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Type,System.Type)
  - System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)
  - System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)
  - System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})
  - System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)
  - System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)
  - System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)
  langs:
  - csharp
  name: IDataContractSurrogate
  nameWithType: IDataContractSurrogate
  fullName: System.Runtime.Serialization.IDataContractSurrogate
  type: Interface
  summary: "다른 형식으로 대체 하는 데 필요한 메서드를 제공는 <xref:System.Runtime.Serialization.DataContractSerializer>중 serialization, deserialization 및 스키마 XSD (XML 문서) 가져오기 및 내보내기.</xref:System.Runtime.Serialization.DataContractSerializer>"
  remarks: "사용 하는 경우는 IDataContractSurrogate를 사용 하 여는 <xref:System.Runtime.Serialization.DataContractSerializer>다음 중 하나를 수행 해야 할 경우: 유형임을 대체 하거나 또 다른 경우 또는 스키마 변형을 동적으로 생성 하는 개체입니다.</xref:System.Runtime.Serialization.DataContractSerializer> 샘플 응용 프로그램에 대 한 참조 [DataContract 서로게이트](~/add/includes/ajax-current-ext-md.md)합니다. 데이터 계약에 대 한 자세한 내용은 참조 [를 사용 하 여 데이터 계약](~/add/includes/ajax-current-ext-md.md)합니다.       실행 시 특정을 찾을 수 있습니다 <xref:System.Runtime.Serialization.DataContractSerializer>사용 하 여 서비스의 모든 작업에 대해는 <xref:System.ServiceModel.Description.OperationDescription>찾으려고는 <xref:System.ServiceModel.Description.DataContractSerializerOperationBehavior>인스턴스.</xref:System.ServiceModel.Description.DataContractSerializerOperationBehavior> </xref:System.ServiceModel.Description.OperationDescription> </xref:System.Runtime.Serialization.DataContractSerializer> 서로게이트를 만들려면 인터페이스를 구현 하는 방법에 대 한 자세한 내용은 참조 [데이터 계약 서로게이트](~/add/includes/ajax-current-ext-md.md)합니다.       가져오기 및 내보내기는 XML 스키마를 사용 하는 경우 영향을 줄의 IDataContractSurrogate을 사용할 수도 있습니다는 <xref:System.Runtime.Serialization.XsdDataContractExporter>및 <xref:System.Runtime.Serialization.XsdDataContractImporter>클래스.</xref:System.Runtime.Serialization.XsdDataContractImporter> </xref:System.Runtime.Serialization.XsdDataContractExporter> IDataContractSurrogate를 할당 하 여 그렇게 할 수는 <xref:System.Runtime.Serialization.ExportOptions.DataContractSurrogate%2A>의 속성은 <xref:System.Runtime.Serialization.ExportOptions>클래스 또는 <xref:System.Runtime.Serialization.ImportOptions.DataContractSurrogate%2A> <xref:System.Runtime.Serialization.ImportOptions>클래스</xref:System.Runtime.Serialization.ImportOptions> 의 속성</xref:System.Runtime.Serialization.ImportOptions.DataContractSurrogate%2A> 에</xref:System.Runtime.Serialization.ExportOptions> </xref:System.Runtime.Serialization.ExportOptions.DataContractSurrogate%2A>  자세한 내용은 참조 [스키마 가져오기 및 내보내기](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example shows an implementation of the IDataContractSurrogate interface. The code substitutes the serialization of the `Person` type for a `PersonSurrogated` class.  \n  \n [!code-vb[IDataContractSurrogate#0](~/add/codesnippet/visualbasic/t-system.runtime.seriali_6_1.vb)]\n [!code-cs[IDataContractSurrogate#0](~/add/codesnippet/csharp/t-system.runtime.seriali_6_1.cs)]"
  syntax:
    content: public interface IDataContractSurrogate
  implements: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)
  id: GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  langs:
  - csharp
  name: GetCustomDataToExport(MemberInfo,Type)
  nameWithType: IDataContractSurrogate.GetCustomDataToExport(MemberInfo,Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(MemberInfo,Type)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "스키마 내보내기 작업 중, null이 아닌 반환 값에 대 한 스키마에 주석을 삽입합니다."
  syntax:
    content: public object GetCustomDataToExport (System.Reflection.MemberInfo memberInfo, Type dataContractType);
    parameters:
    - id: memberInfo
      type: System.Reflection.MemberInfo
      description: "A <xref:System.Reflection.MemberInfo>멤버를 설명 하는.</xref:System.Reflection.MemberInfo>"
    - id: dataContractType
      type: System.Type
      description: "A <xref:System.Type>.</xref:System.Type>"
    return:
      type: System.Object
      description: "XML 스키마 정의에 삽입할 주석을 나타내는 개체입니다."
  overload: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Type,System.Type)
  id: GetCustomDataToExport(System.Type,System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  langs:
  - csharp
  name: GetCustomDataToExport(Type,Type)
  nameWithType: IDataContractSurrogate.GetCustomDataToExport(Type,Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(Type,Type)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "스키마 내보내기 작업 중, null이 아닌 반환 값에 대 한 스키마에 주석을 삽입합니다."
  syntax:
    content: public object GetCustomDataToExport (Type clrType, Type dataContractType);
    parameters:
    - id: clrType
      type: System.Type
      description: "바꿀 CLR 형식입니다."
    - id: dataContractType
      type: System.Type
      description: "주석을 추가할 데이터 계약 형식입니다."
    return:
      type: System.Object
      description: "XML 스키마 정의에 삽입할 주석을 나타내는 개체입니다."
  overload: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)
  id: GetDataContractType(System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  langs:
  - csharp
  name: GetDataContractType(Type)
  nameWithType: IDataContractSurrogate.GetDataContractType(Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(Type)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Serialization, deserialization 및 스키마 가져오기 및 내보내기 중에 지정한 형식을 대체 하는 데이터 계약 형식을 반환 합니다."
  remarks: ''
  example:
  - "The following example shows an implementation of the GetDataContractType method.  \n  \n [!code-vb[IDataContractSurrogate#1](~/add/codesnippet/visualbasic/90968a41-34e3-48fc-8e53-_1.vb)]\n [!code-cs[IDataContractSurrogate#1](~/add/codesnippet/csharp/90968a41-34e3-48fc-8e53-_1.cs)]"
  syntax:
    content: public Type GetDataContractType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "CLR 형식 <xref:System.Type>대체할.</xref:System.Type>"
    return:
      type: System.Type
      description: "<xref:System.Type>를 대체할는 <code> type </code> 값.</xref:System.Type> 이 형식에 <xref:System.Runtime.Serialization.DataContractSerializer>.</xref:System.Runtime.Serialization.DataContractSerializer> 직렬화 해야 합니다. 예를 들어으로 표시 되어야 합니다는 <xref:System.Runtime.Serialization.DataContractAttribute>특성 또는 serializer가 인식 하는 기타 메커니즘.</xref:System.Runtime.Serialization.DataContractAttribute>"
  overload: System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)
  id: GetDeserializedObject(System.Object,System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  langs:
  - csharp
  name: GetDeserializedObject(Object,Type)
  nameWithType: IDataContractSurrogate.GetDeserializedObject(Object,Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(Object,Type)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "역직렬화 하는 동안 지정된 된 개체에 대 한 대체 하는 개체를 반환 합니다."
  remarks: "간단한 구현을 사용 하 여 if... then... else 제어 구조를 테스트 하는지 여부를 `obj` 서로게이트 된 형식의 값은 합니다. 이 경우 필요한으로 반환에서 대체 된 개체를 변환 합니다. 새 인스턴스 또는 동일한 대체 된 개체 수 `obj` 인스턴스."
  example:
  - "The following example shows an implementation of the GetDeserializedObject method.  \n  \n [!code-vb[IDataContractSurrogate#3](~/add/codesnippet/visualbasic/98dab246-6ee5-4fc3-8a64-_1.vb)]\n [!code-cs[IDataContractSurrogate#3](~/add/codesnippet/csharp/98dab246-6ee5-4fc3-8a64-_1.cs)]"
  syntax:
    content: public object GetDeserializedObject (object obj, Type targetType);
    parameters:
    - id: obj
      type: System.Object
      description: "대체 되는 deserialize 된 개체입니다."
    - id: targetType
      type: System.Type
      description: "<xref:System.Type>에 대체 된 개체를 할당 해야 합니다.</xref:System.Type>"
    return:
      type: System.Object
      description: "대체 된 역직렬화 된 개체입니다. 이 개체에 <xref:System.Runtime.Serialization.DataContractSerializer>.</xref:System.Runtime.Serialization.DataContractSerializer> 직렬화 할 수 있는 형식 이어야 합니다. 예를 들어으로 표시 되어야 합니다는 <xref:System.Runtime.Serialization.DataContractAttribute>특성 또는 serializer가 인식 하는 기타 메커니즘.</xref:System.Runtime.Serialization.DataContractAttribute>"
  overload: System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})
  id: GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})
  parent: System.Runtime.Serialization.IDataContractSurrogate
  langs:
  - csharp
  name: GetKnownCustomDataTypes(Collection<Type>)
  nameWithType: IDataContractSurrogate.GetKnownCustomDataTypes(Collection<Type>)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(Collection<Type>)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Serialization에 사용할 알려진된 형식 컬렉션 및 사용자 지정 데이터 개체의 역직렬화를 설정 합니다."
  remarks: "이 메서드는 스키마 내보내기 또는 스키마 가져오기 중 경우에 사용 하 여 스키마에 주석을 삽입 하는 <xref:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport%2A>메서드.</xref:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport%2A>"
  syntax:
    content: public void GetKnownCustomDataTypes (System.Collections.ObjectModel.Collection<Type> customDataTypes);
    parameters:
    - id: customDataTypes
      type: System.Collections.ObjectModel.Collection{System.Type}
      description: "A &lt;xref:System.Collections.ObjectModel.Collection%601&gt; 의 <xref:System.Type>에 알려진된 형식을 추가 합니다.</xref:System.Type>"
  overload: System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)
  id: GetObjectToSerialize(System.Object,System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  langs:
  - csharp
  name: GetObjectToSerialize(Object,Type)
  nameWithType: IDataContractSurrogate.GetObjectToSerialize(Object,Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(Object,Type)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "직렬화 중에 지정된 된 개체를 대체 하는 개체를 반환 합니다."
  remarks: "이 메서드는 반환 하지 않아야 `null` deserialization 중에 데이터 형식으로 캐스팅 됩니다 <xref:System.Object>및 <xref:System.InvalidCastException>throw 됩니다.</xref:System.InvalidCastException> </xref:System.Object>"
  example:
  - "The following example shows an implementation of the GetObjectToSerialize method.  \n  \n [!code-vb[IDataContractSurrogate#2](~/add/codesnippet/visualbasic/5c78fc6a-caaf-4bc0-ab0d-_1.vb)]\n [!code-cs[IDataContractSurrogate#2](~/add/codesnippet/csharp/5c78fc6a-caaf-4bc0-ab0d-_1.cs)]"
  syntax:
    content: public object GetObjectToSerialize (object obj, Type targetType);
    parameters:
    - id: obj
      type: System.Object
      description: "대체할 개체입니다."
    - id: targetType
      type: System.Type
      description: "<xref:System.Type>에 대체 된 개체를 할당 해야 합니다.</xref:System.Type>"
    return:
      type: System.Object
      description: "Serialize 될 대체 된 개체입니다. 개체에 <xref:System.Runtime.Serialization.DataContractSerializer>.</xref:System.Runtime.Serialization.DataContractSerializer> 직렬화 해야 합니다. 예를 들어으로 표시 되어야 합니다는 <xref:System.Runtime.Serialization.DataContractAttribute>특성 또는 serializer가 인식 하는 기타 메커니즘.</xref:System.Runtime.Serialization.DataContractAttribute>"
  overload: System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)
  id: GetReferencedTypeOnImport(System.String,System.String,System.Object)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  langs:
  - csharp
  name: GetReferencedTypeOnImport(String,String,Object)
  nameWithType: IDataContractSurrogate.GetReferencedTypeOnImport(String,String,Object)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(String,String,Object)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "스키마 가져오기 중 스키마에서 참조 하는 형식을 반환 합니다."
  remarks: '`Null`반환 되어야 합니다는 CLR 형식 스키마 형식을 나타내기에 대 한 존재 하지 않는 경우. 이렇게 하면 새 형식을 스키마 가져오기 중에 생성 됩니다.'
  example:
  - "The following example shows an implementation of the GetReferencedTypeOnImport method.  \n  \n [!code-vb[IDataContractSurrogate#4](~/add/codesnippet/visualbasic/9ffa3127-8c36-42f6-862b-_1.vb)]\n [!code-cs[IDataContractSurrogate#4](~/add/codesnippet/csharp/9ffa3127-8c36-42f6-862b-_1.cs)]"
  syntax:
    content: public Type GetReferencedTypeOnImport (string typeName, string typeNamespace, object customData);
    parameters:
    - id: typeName
      type: System.String
      description: "스키마에서 유형 이름입니다."
    - id: typeNamespace
      type: System.String
      description: "네임 스페이스 스키마의 형식입니다."
    - id: customData
      type: System.Object
      description: "데이터는 참조 된 형식을 찾는 데 사용할 수 있는 XML 스키마 정의에 삽입할 주석을 나타내는 개체입니다."
    return:
      type: System.Type
      description: "<xref:System.Type>참조 된 형식에 대해 사용할.</xref:System.Type>"
  overload: System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)
  id: ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  langs:
  - csharp
  name: ProcessImportedType(CodeTypeDeclaration,CodeCompileUnit)
  nameWithType: IDataContractSurrogate.ProcessImportedType(CodeTypeDeclaration,CodeCompileUnit)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(CodeTypeDeclaration,CodeCompileUnit)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "가져온된 스키마에서 생성 된 형식을 처리 합니다."
  remarks: "입력 <xref:System.CodeDom.CodeTypeDeclaration>또는 기타 정보에는 <xref:System.CodeDom.CodeCompileUnit>이 방법에서는 사용자가 수정할 수 있습니다.</xref:System.CodeDom.CodeCompileUnit> </xref:System.CodeDom.CodeTypeDeclaration> 경우 `null` 형식이 생성 되지 하면 반환 됩니다. 새 <xref:System.CodeDom.CodeTypeDeclaration>반환 되 면 생성 된 원래 형식을 바뀝니다.</xref:System.CodeDom.CodeTypeDeclaration>"
  syntax:
    content: public System.CodeDom.CodeTypeDeclaration ProcessImportedType (System.CodeDom.CodeTypeDeclaration typeDeclaration, System.CodeDom.CodeCompileUnit compileUnit);
    parameters:
    - id: typeDeclaration
      type: System.CodeDom.CodeTypeDeclaration
      description: "A <xref href=&quot;System.CodeDom.CodeTypeDeclaration&quot;> </xref> 스키마 가져오기 중에 생성 된 형식 선언을 나타내는 프로세스입니다."
    - id: compileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "<xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> 스키마 가져오기 중에 생성 된 다른 코드를 포함 하는 합니다."
    return:
      type: System.CodeDom.CodeTypeDeclaration
      description: "A <xref href=&quot;System.CodeDom.CodeTypeDeclaration&quot;> </xref> 하는 처리 된 형식을 포함 합니다."
  overload: System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetCustomDataToExport(MemberInfo,Type)
  nameWithType: IDataContractSurrogate.GetCustomDataToExport(MemberInfo,Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(MemberInfo,Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Type,System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetCustomDataToExport(Type,Type)
  nameWithType: IDataContractSurrogate.GetCustomDataToExport(Type,Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(Type,Type)
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetDataContractType(Type)
  nameWithType: IDataContractSurrogate.GetDataContractType(Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(Type)
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetDeserializedObject(Object,Type)
  nameWithType: IDataContractSurrogate.GetDeserializedObject(Object,Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(Object,Type)
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetKnownCustomDataTypes(Collection<Type>)
  nameWithType: IDataContractSurrogate.GetKnownCustomDataTypes(Collection<Type>)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(Collection<Type>)
- uid: System.Collections.ObjectModel.Collection{System.Type}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Type>
  nameWithType: Collection<Type>
  fullName: System.Collections.ObjectModel.Collection<System.Type>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetObjectToSerialize(Object,Type)
  nameWithType: IDataContractSurrogate.GetObjectToSerialize(Object,Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(Object,Type)
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetReferencedTypeOnImport(String,String,Object)
  nameWithType: IDataContractSurrogate.GetReferencedTypeOnImport(String,String,Object)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(String,String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: ProcessImportedType(CodeTypeDeclaration,CodeCompileUnit)
  nameWithType: IDataContractSurrogate.ProcessImportedType(CodeTypeDeclaration,CodeCompileUnit)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(CodeTypeDeclaration,CodeCompileUnit)
- uid: System.CodeDom.CodeTypeDeclaration
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeDeclaration
  nameWithType: CodeTypeDeclaration
  fullName: System.CodeDom.CodeTypeDeclaration
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport*
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetCustomDataToExport
  nameWithType: IDataContractSurrogate.GetCustomDataToExport
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType*
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetDataContractType
  nameWithType: IDataContractSurrogate.GetDataContractType
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject*
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetDeserializedObject
  nameWithType: IDataContractSurrogate.GetDeserializedObject
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes*
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetKnownCustomDataTypes
  nameWithType: IDataContractSurrogate.GetKnownCustomDataTypes
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize*
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetObjectToSerialize
  nameWithType: IDataContractSurrogate.GetObjectToSerialize
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport*
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetReferencedTypeOnImport
  nameWithType: IDataContractSurrogate.GetReferencedTypeOnImport
- uid: System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType*
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: ProcessImportedType
  nameWithType: IDataContractSurrogate.ProcessImportedType
