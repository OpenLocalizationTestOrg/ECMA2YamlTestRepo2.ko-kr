### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.SignedInfo
  id: SignedInfo
  children:
  - System.Security.Cryptography.Xml.SignedInfo.#ctor
  - System.Security.Cryptography.Xml.SignedInfo.AddReference(System.Security.Cryptography.Xml.Reference)
  - System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod
  - System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject
  - System.Security.Cryptography.Xml.SignedInfo.CopyTo(System.Array,System.Int32)
  - System.Security.Cryptography.Xml.SignedInfo.Count
  - System.Security.Cryptography.Xml.SignedInfo.GetEnumerator
  - System.Security.Cryptography.Xml.SignedInfo.GetXml
  - System.Security.Cryptography.Xml.SignedInfo.Id
  - System.Security.Cryptography.Xml.SignedInfo.IsReadOnly
  - System.Security.Cryptography.Xml.SignedInfo.IsSynchronized
  - System.Security.Cryptography.Xml.SignedInfo.LoadXml(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.SignedInfo.References
  - System.Security.Cryptography.Xml.SignedInfo.SignatureLength
  - System.Security.Cryptography.Xml.SignedInfo.SignatureMethod
  - System.Security.Cryptography.Xml.SignedInfo.SyncRoot
  langs:
  - csharp
  name: SignedInfo
  nameWithType: SignedInfo
  fullName: System.Security.Cryptography.Xml.SignedInfo
  type: Class
  summary: "정형화 알고리즘 및 XML 서명에 사용 되는 서명 알고리즘에 대 한 정보가 포함 됩니다."
  remarks: "SignedInfo 클래스 나타냅니다는 `SignedInfo`> XML 디지털 서명 사양에 정의 된 XML 서명의 요소입니다. `SignedInfo`> 하위 요소를의 `Signature`> 요소를 서명, 서명 및 유효성 검사 및 디지털 서명을 설명 하는 참조에 사용 된 알고리즘에 사용 되는 정규화 메서드를 포함 합니다.       대부분의 시나리오에서 사용할 수 있는 SignedInfo 클래스를 사용 해야는 <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A>속성 서명 및 XML 디지털 서명 확인을.</xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A>       에 대 한 자세한 내용은 `SignedInfo`> 요소인 www.w3.org/TR/xmldsig-core/에서 World Wide Web Consortium (W3C) 사양을 참조 하십시오."
  syntax:
    content: 'public class SignedInfo : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedInfo.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.SignedInfo
  langs:
  - csharp
  name: SignedInfo()
  nameWithType: SignedInfo.SignedInfo()
  fullName: System.Security.Cryptography.Xml.SignedInfo.SignedInfo()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> 클래스입니다."
  syntax:
    content: public SignedInfo ();
    parameters: []
  overload: System.Security.Cryptography.Xml.SignedInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedInfo.AddReference(System.Security.Cryptography.Xml.Reference)
  id: AddReference(System.Security.Cryptography.Xml.Reference)
  parent: System.Security.Cryptography.Xml.SignedInfo
  langs:
  - csharp
  name: AddReference(Reference)
  nameWithType: SignedInfo.AddReference(Reference)
  fullName: System.Security.Cryptography.Xml.SignedInfo.AddReference(Reference)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "추가 <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref> 다이제스트와 기호에 대 한 참조의 목록에는 개체입니다."
  remarks: "AddReference 메서드 추가 <xref:System.Security.Cryptography.Xml.Reference>개체를 사용 하 여 액세스할 수 있는 컬렉션에는 <xref:System.Security.Cryptography.Xml.SignedInfo.References%2A>속성.</xref:System.Security.Cryptography.Xml.SignedInfo.References%2A> </xref:System.Security.Cryptography.Xml.Reference>"
  syntax:
    content: public void AddReference (System.Security.Cryptography.Xml.Reference reference);
    parameters:
    - id: reference
      type: System.Security.Cryptography.Xml.Reference
      description: "참조 목록에 추가에 대 한 참조입니다."
  overload: System.Security.Cryptography.Xml.SignedInfo.AddReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "참조 매개 변수는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod
  id: CanonicalizationMethod
  parent: System.Security.Cryptography.Xml.SignedInfo
  langs:
  - csharp
  name: CanonicalizationMethod
  nameWithType: SignedInfo.CanonicalizationMethod
  fullName: System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "현재 서명 하기 전에 사용 되는 정형화 알고리즘을 가져오거나 설정 합니다. <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> 개체입니다."
  remarks: "CanonicalizationMethod 속성을 나타내는 문자열 식별자 URI (Uniform Resource)를 사용 하 여는 `Canonicalization`> 요소의 XML 디지털 서명 합니다.       CanonicalizationMethod 속성을 사용 하 여 XML 출력에 적용 된 정형화 알고리즘을 지정 하는 <xref:System.Security.Cryptography.Xml.SignedInfo>서명을 계산을 수행 하기 전에 클래스.</xref:System.Security.Cryptography.Xml.SignedInfo>       이 속성을 다음 표에 나열 된 Uri 중 하나를 사용 합니다.      | 정규화 메서드 | 값 |   |-----------------------------|-----------|   | 정식 XML | http://www.w3.org/TR/2001/REC-xml-c14n-20010315<br /><br /> 이것이 기본 방법입니다. 또한 다음 정적 필드에 정의 된: <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl>|   | 주석 사용 하 여 정식 XML | http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl><br /><br /> 또한 다음 정적 필드에 정의 된: <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl>|   | 배타적 정식 XML | http://www.w3.org/2001/10/xml-exc-c14n</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl>#<br /><br /> 또한 다음 정적 필드에 정의 된: <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl>|   | 주석 사용 하 여 배타적 정식 XML | http://www.w3.org/2001/10/xml-exc-c14n#WithComments</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl><br /><br /> 또한 다음 정적 필드에 정의 된: <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl>|       XML 디지털 서명 하는 방법에 대 한 자세한 내용은 www.w3.org/TR/xmldsig-core/에서 World Wide Web Consortium (W3C) 사양을 참조 하십시오.</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl>"
  syntax:
    content: public string CanonicalizationMethod { get; set; }
    return:
      type: System.String
      description: "현재 서명 하기 전에 사용 되는 정형화 알고리즘 <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject
  id: CanonicalizationMethodObject
  parent: System.Security.Cryptography.Xml.SignedInfo
  langs:
  - csharp
  name: CanonicalizationMethodObject
  nameWithType: SignedInfo.CanonicalizationMethodObject
  fullName: System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "가져옵니다는 <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> 정규화에 사용 되는 개체입니다."
  remarks: "CanonicalizationMethodObject 속성 포함는 <xref:System.Security.Cryptography.Xml.Transform>에서 사용 하는 개체는 <xref:System.Security.Cryptography.Xml.SignedXml>서명 하거나 확인 하기 전에 XML 문서를 정식화 하는 클래스입니다.</xref:System.Security.Cryptography.Xml.SignedXml> </xref:System.Security.Cryptography.Xml.Transform>       CanonicalizationMethodObject 속성은 읽기 전용입니다. 수정할 수는 <xref:System.Security.Cryptography.Xml.Transform>원하는 변환 식별자 URI (Uniform Resource)을 전달 하 여이 속성 내에서 개체는 <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A>속성.</xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A> </xref:System.Security.Cryptography.Xml.Transform>"
  syntax:
    content: public System.Security.Cryptography.Xml.Transform CanonicalizationMethodObject { get; }
    return:
      type: System.Security.Cryptography.Xml.Transform
      description: "A <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> 정규화에 사용 되는 개체입니다."
  overload: System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;></xref>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedInfo.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Security.Cryptography.Xml.SignedInfo
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: SignedInfo.CopyTo(Array,Int32)
  fullName: System.Security.Cryptography.Xml.SignedInfo.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "이 인스턴스의 요소 복사는 <xref:System.Array>배열의 지정한 인덱스에서 시작 하는 개체입니다.</xref:System.Array>"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "<xref:System.Array>컬렉션의 요소를 포함 하는 개체입니다.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "요소가 복사 되는 배열의 시작 인덱스입니다."
  overload: System.Security.Cryptography.Xml.SignedInfo.CopyTo*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "이 메서드가 지원 되지 않습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedInfo.Count
  id: Count
  parent: System.Security.Cryptography.Xml.SignedInfo
  langs:
  - csharp
  name: Count
  nameWithType: SignedInfo.Count
  fullName: System.Security.Cryptography.Xml.SignedInfo.Count
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "현재에서 참조 수가 가져옵니다 <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> 개체입니다."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "현재에서 참조 수가 <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.Xml.SignedInfo.Count*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "이 속성은 지원 되지 않습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedInfo.GetEnumerator
  id: GetEnumerator
  parent: System.Security.Cryptography.Xml.SignedInfo
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: SignedInfo.GetEnumerator()
  fullName: System.Security.Cryptography.Xml.SignedInfo.GetEnumerator()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "참조의 컬렉션을 반복 하는 열거자를 반환 합니다."
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "참조의 컬렉션을 반복 하는 열거자입니다."
  overload: System.Security.Cryptography.Xml.SignedInfo.GetEnumerator*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "이 메서드가 지원 되지 않습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedInfo.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.SignedInfo
  langs:
  - csharp
  name: GetXml()
  nameWithType: SignedInfo.GetXml()
  fullName: System.Security.Cryptography.Xml.SignedInfo.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "XML 표현을 반환 된 <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> 개체입니다."
  syntax:
    content: public System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "XML 표현을 <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> 인스턴스."
  overload: System.Security.Cryptography.Xml.SignedInfo.GetXml*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는- <> </> *> 속성은 비어 있습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedInfo.Id
  id: Id
  parent: System.Security.Cryptography.Xml.SignedInfo
  langs:
  - csharp
  name: Id
  nameWithType: SignedInfo.Id
  fullName: System.Security.Cryptography.Xml.SignedInfo.Id
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "현재 ID를 가져오거나 설정 합니다. <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> 개체입니다."
  remarks: "Id 속성을 사용 하 여 현재의 XML 표현에 문자열 ID를 추가 하려면 <xref:System.Security.Cryptography.Xml.SignedInfo>요소.</xref:System.Security.Cryptography.Xml.SignedInfo> ID가 사용 참조에는 <xref:System.Security.Cryptography.Xml.SignedInfo>다른 위치에서.</xref:System.Security.Cryptography.Xml.SignedInfo>"
  syntax:
    content: public string Id { get; set; }
    return:
      type: System.String
      description: "현재 ID <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.Xml.SignedInfo.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedInfo.IsReadOnly
  id: IsReadOnly
  parent: System.Security.Cryptography.Xml.SignedInfo
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: SignedInfo.IsReadOnly
  fullName: System.Security.Cryptography.Xml.SignedInfo.IsReadOnly
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "컬렉션이 읽기 전용인 지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컬렉션이 읽기 전용인 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Cryptography.Xml.SignedInfo.IsReadOnly*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "이 속성은 지원 되지 않습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedInfo.IsSynchronized
  id: IsSynchronized
  parent: System.Security.Cryptography.Xml.SignedInfo
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: SignedInfo.IsSynchronized
  fullName: System.Security.Cryptography.Xml.SignedInfo.IsSynchronized
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "컬렉션이 동기화 되었는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컬렉션이 동기화 되는지를; 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Cryptography.Xml.SignedInfo.IsSynchronized*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "이 속성은 지원 되지 않습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedInfo.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.SignedInfo
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: SignedInfo.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.SignedInfo.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "로드 한 <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> XML 요소에서 상태입니다."
  syntax:
    content: public void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "로드할 XML 요소는 <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> 상태입니다."
  overload: System.Security.Cryptography.Xml.SignedInfo.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code> value </code> 매개 변수가 유효 하지 않거나 <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> 요소입니다.       -또는- <code> value </code> 매개 변수에 유효한 없는 <> </> *> 속성.       -또는- <code> value </code> 매개 변수에 유효한 없는 <> </> *> 속성."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedInfo.References
  id: References
  parent: System.Security.Cryptography.Xml.SignedInfo
  langs:
  - csharp
  name: References
  nameWithType: SignedInfo.References
  fullName: System.Security.Cryptography.Xml.SignedInfo.References
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "목록을 가져옵니다는 <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref> 현재 개체 <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> 개체입니다."
  remarks: "참조 속성 목록을 사용 하 여 <xref:System.Security.Cryptography.Xml.Reference>를 나타내는 개체는 `<Reference>` XML 디지털 서명의 요소입니다.</xref:System.Security.Cryptography.Xml.Reference>       참조 속성을 사용 하 여 변환, 다이제스트 알고리즘 및 XML 디지털 서명의 다이제스트 값에 설명 합니다.       XML 디지털 서명 하는 방법에 대 한 자세한 내용은 www.w3.org/TR/xmldsig-core/에서 World Wide Web Consortium (W3C) 사양을 참조 합니다."
  syntax:
    content: public System.Collections.ArrayList References { get; }
    return:
      type: System.Collections.ArrayList
      description: "목록은 <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref> 현재 요소의 <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.Xml.SignedInfo.References*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedInfo.SignatureLength
  id: SignatureLength
  parent: System.Security.Cryptography.Xml.SignedInfo
  langs:
  - csharp
  name: SignatureLength
  nameWithType: SignedInfo.SignatureLength
  fullName: System.Security.Cryptography.Xml.SignedInfo.SignatureLength
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "현재는 서명의 길이 가져오거나 설정 합니다. <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> 개체입니다."
  syntax:
    content: public string SignatureLength { get; set; }
    return:
      type: System.String
      description: "현재는 서명의 길이 <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.Xml.SignedInfo.SignatureLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedInfo.SignatureMethod
  id: SignatureMethod
  parent: System.Security.Cryptography.Xml.SignedInfo
  langs:
  - csharp
  name: SignatureMethod
  nameWithType: SignedInfo.SignatureMethod
  fullName: System.Security.Cryptography.Xml.SignedInfo.SignatureMethod
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "서명 생성 및 현재 유효성 검사에 사용 되는 알고리즘의 이름을 가져오거나 설정 합니다. <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> 개체입니다."
  remarks: "SignatureMethod 속성 사용을 나타내는 문자열 식별자 URI (Uniform Resource)는 `<SignatureMethod>` XML 디지털 서명의 요소입니다.       SignatureMethod 속성을 사용 하 여 서명 생성 및 확인에 사용할 알고리즘을 지정할 수 있습니다. 이 속성 해시, 공개 키 알고리즘, 메시지 인증 코드 (Mac) 및 안쪽 여백을 포함 하는 XML 디지털 서명을 만드는 데 관련 된 모든 암호화 기능을 식별 합니다.       이 속성을 다음 표의 Uri 중 하나를 사용 합니다.      | 서명 방법 | 값 |   |----------------------|-----------|   | HMAC SHA1 | http://www.w3.org/2000/09/xmldsig#hmac-sha1<br /><br /> 또한 다음 정적 필드에 정의 된: <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url>|   | S h a&1; | http://www.w3.org/2000/09/xmldsig#dsa-sha1</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url><br /><br /> 또한 다음 정적 필드에 정의 된: <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>|   | SHA1와 RSA | http://www.w3.org/2000/09/xmldsig#rsa-sha1</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl><br /><br /> 또한 다음 정적 필드에 정의 된: <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url>|       XML 디지털 서명 하는 방법에 대 한 자세한 내용은 World Wide Web Consortium (W3C)을 참조 하십시오. [XML 서명 구문 및 처리 사양](http://www.w3.org/TR/xmldsig-core/).</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url>"
  syntax:
    content: public string SignatureMethod { get; set; }
    return:
      type: System.String
      description: "서명 생성 및 현재 유효성 검사에 사용 되는 알고리즘의 이름 <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.Xml.SignedInfo.SignatureMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedInfo.SyncRoot
  id: SyncRoot
  parent: System.Security.Cryptography.Xml.SignedInfo
  langs:
  - csharp
  name: SyncRoot
  nameWithType: SignedInfo.SyncRoot
  fullName: System.Security.Cryptography.Xml.SignedInfo.SyncRoot
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "동기화에 사용할 개체를 가져옵니다."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "동기화에 사용할 개체입니다."
  overload: System.Security.Cryptography.Xml.SignedInfo.SyncRoot*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "이 속성은 지원 되지 않습니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Cryptography.Xml.SignedInfo.#ctor
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: SignedInfo()
  nameWithType: SignedInfo.SignedInfo()
  fullName: System.Security.Cryptography.Xml.SignedInfo.SignedInfo()
- uid: System.Security.Cryptography.Xml.SignedInfo.AddReference(System.Security.Cryptography.Xml.Reference)
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: AddReference(Reference)
  nameWithType: SignedInfo.AddReference(Reference)
  fullName: System.Security.Cryptography.Xml.SignedInfo.AddReference(Reference)
- uid: System.Security.Cryptography.Xml.Reference
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: Reference
  nameWithType: Reference
  fullName: System.Security.Cryptography.Xml.Reference
- uid: System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: CanonicalizationMethod
  nameWithType: SignedInfo.CanonicalizationMethod
  fullName: System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: CanonicalizationMethodObject
  nameWithType: SignedInfo.CanonicalizationMethodObject
  fullName: System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject
- uid: System.Security.Cryptography.Xml.Transform
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: Transform
  nameWithType: Transform
  fullName: System.Security.Cryptography.Xml.Transform
- uid: System.Security.Cryptography.Xml.SignedInfo.CopyTo(System.Array,System.Int32)
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: SignedInfo.CopyTo(Array,Int32)
  fullName: System.Security.Cryptography.Xml.SignedInfo.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.Xml.SignedInfo.Count
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: Count
  nameWithType: SignedInfo.Count
  fullName: System.Security.Cryptography.Xml.SignedInfo.Count
- uid: System.Security.Cryptography.Xml.SignedInfo.GetEnumerator
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: GetEnumerator()
  nameWithType: SignedInfo.GetEnumerator()
  fullName: System.Security.Cryptography.Xml.SignedInfo.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Security.Cryptography.Xml.SignedInfo.GetXml
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: GetXml()
  nameWithType: SignedInfo.GetXml()
  fullName: System.Security.Cryptography.Xml.SignedInfo.GetXml()
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.SignedInfo.Id
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: Id
  nameWithType: SignedInfo.Id
  fullName: System.Security.Cryptography.Xml.SignedInfo.Id
- uid: System.Security.Cryptography.Xml.SignedInfo.IsReadOnly
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: IsReadOnly
  nameWithType: SignedInfo.IsReadOnly
  fullName: System.Security.Cryptography.Xml.SignedInfo.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.Xml.SignedInfo.IsSynchronized
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: IsSynchronized
  nameWithType: SignedInfo.IsSynchronized
  fullName: System.Security.Cryptography.Xml.SignedInfo.IsSynchronized
- uid: System.Security.Cryptography.Xml.SignedInfo.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: SignedInfo.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.SignedInfo.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.SignedInfo.References
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: References
  nameWithType: SignedInfo.References
  fullName: System.Security.Cryptography.Xml.SignedInfo.References
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Security.Cryptography.Xml.SignedInfo.SignatureLength
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: SignatureLength
  nameWithType: SignedInfo.SignatureLength
  fullName: System.Security.Cryptography.Xml.SignedInfo.SignatureLength
- uid: System.Security.Cryptography.Xml.SignedInfo.SignatureMethod
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: SignatureMethod
  nameWithType: SignedInfo.SignatureMethod
  fullName: System.Security.Cryptography.Xml.SignedInfo.SignatureMethod
- uid: System.Security.Cryptography.Xml.SignedInfo.SyncRoot
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: SyncRoot
  nameWithType: SignedInfo.SyncRoot
  fullName: System.Security.Cryptography.Xml.SignedInfo.SyncRoot
- uid: System.Security.Cryptography.Xml.SignedInfo.#ctor*
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: SignedInfo
  nameWithType: SignedInfo.SignedInfo
- uid: System.Security.Cryptography.Xml.SignedInfo.AddReference*
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: AddReference
  nameWithType: SignedInfo.AddReference
- uid: System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod*
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: CanonicalizationMethod
  nameWithType: SignedInfo.CanonicalizationMethod
- uid: System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject*
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: CanonicalizationMethodObject
  nameWithType: SignedInfo.CanonicalizationMethodObject
- uid: System.Security.Cryptography.Xml.SignedInfo.CopyTo*
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: CopyTo
  nameWithType: SignedInfo.CopyTo
- uid: System.Security.Cryptography.Xml.SignedInfo.Count*
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: Count
  nameWithType: SignedInfo.Count
- uid: System.Security.Cryptography.Xml.SignedInfo.GetEnumerator*
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: GetEnumerator
  nameWithType: SignedInfo.GetEnumerator
- uid: System.Security.Cryptography.Xml.SignedInfo.GetXml*
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: GetXml
  nameWithType: SignedInfo.GetXml
- uid: System.Security.Cryptography.Xml.SignedInfo.Id*
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: Id
  nameWithType: SignedInfo.Id
- uid: System.Security.Cryptography.Xml.SignedInfo.IsReadOnly*
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: IsReadOnly
  nameWithType: SignedInfo.IsReadOnly
- uid: System.Security.Cryptography.Xml.SignedInfo.IsSynchronized*
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: IsSynchronized
  nameWithType: SignedInfo.IsSynchronized
- uid: System.Security.Cryptography.Xml.SignedInfo.LoadXml*
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: LoadXml
  nameWithType: SignedInfo.LoadXml
- uid: System.Security.Cryptography.Xml.SignedInfo.References*
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: References
  nameWithType: SignedInfo.References
- uid: System.Security.Cryptography.Xml.SignedInfo.SignatureLength*
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: SignatureLength
  nameWithType: SignedInfo.SignatureLength
- uid: System.Security.Cryptography.Xml.SignedInfo.SignatureMethod*
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: SignatureMethod
  nameWithType: SignedInfo.SignatureMethod
- uid: System.Security.Cryptography.Xml.SignedInfo.SyncRoot*
  parent: System.Security.Cryptography.Xml.SignedInfo
  isExternal: false
  name: SyncRoot
  nameWithType: SignedInfo.SyncRoot
