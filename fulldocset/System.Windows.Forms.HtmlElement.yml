### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.HtmlElement
  id: HtmlElement
  children:
  - System.Windows.Forms.HtmlElement.All
  - System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)
  - System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)
  - System.Windows.Forms.HtmlElement.CanHaveChildren
  - System.Windows.Forms.HtmlElement.Children
  - System.Windows.Forms.HtmlElement.Click
  - System.Windows.Forms.HtmlElement.ClientRectangle
  - System.Windows.Forms.HtmlElement.DetachEventHandler(System.String,System.EventHandler)
  - System.Windows.Forms.HtmlElement.Document
  - System.Windows.Forms.HtmlElement.DomElement
  - System.Windows.Forms.HtmlElement.DoubleClick
  - System.Windows.Forms.HtmlElement.Drag
  - System.Windows.Forms.HtmlElement.DragEnd
  - System.Windows.Forms.HtmlElement.DragLeave
  - System.Windows.Forms.HtmlElement.DragOver
  - System.Windows.Forms.HtmlElement.Enabled
  - System.Windows.Forms.HtmlElement.Equals(System.Object)
  - System.Windows.Forms.HtmlElement.FirstChild
  - System.Windows.Forms.HtmlElement.Focus
  - System.Windows.Forms.HtmlElement.Focusing
  - System.Windows.Forms.HtmlElement.GetAttribute(System.String)
  - System.Windows.Forms.HtmlElement.GetElementsByTagName(System.String)
  - System.Windows.Forms.HtmlElement.GetHashCode
  - System.Windows.Forms.HtmlElement.GotFocus
  - System.Windows.Forms.HtmlElement.Id
  - System.Windows.Forms.HtmlElement.InnerHtml
  - System.Windows.Forms.HtmlElement.InnerText
  - System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)
  - System.Windows.Forms.HtmlElement.InvokeMember(System.String)
  - System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])
  - System.Windows.Forms.HtmlElement.KeyDown
  - System.Windows.Forms.HtmlElement.KeyPress
  - System.Windows.Forms.HtmlElement.KeyUp
  - System.Windows.Forms.HtmlElement.LosingFocus
  - System.Windows.Forms.HtmlElement.LostFocus
  - System.Windows.Forms.HtmlElement.MouseDown
  - System.Windows.Forms.HtmlElement.MouseEnter
  - System.Windows.Forms.HtmlElement.MouseLeave
  - System.Windows.Forms.HtmlElement.MouseMove
  - System.Windows.Forms.HtmlElement.MouseOver
  - System.Windows.Forms.HtmlElement.MouseUp
  - System.Windows.Forms.HtmlElement.Name
  - System.Windows.Forms.HtmlElement.NextSibling
  - System.Windows.Forms.HtmlElement.OffsetParent
  - System.Windows.Forms.HtmlElement.OffsetRectangle
  - System.Windows.Forms.HtmlElement.op_Equality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)
  - System.Windows.Forms.HtmlElement.op_Inequality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)
  - System.Windows.Forms.HtmlElement.OuterHtml
  - System.Windows.Forms.HtmlElement.OuterText
  - System.Windows.Forms.HtmlElement.Parent
  - System.Windows.Forms.HtmlElement.RaiseEvent(System.String)
  - System.Windows.Forms.HtmlElement.RemoveFocus
  - System.Windows.Forms.HtmlElement.ScrollIntoView(System.Boolean)
  - System.Windows.Forms.HtmlElement.ScrollLeft
  - System.Windows.Forms.HtmlElement.ScrollRectangle
  - System.Windows.Forms.HtmlElement.ScrollTop
  - System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)
  - System.Windows.Forms.HtmlElement.Style
  - System.Windows.Forms.HtmlElement.TabIndex
  - System.Windows.Forms.HtmlElement.TagName
  langs:
  - csharp
  name: HtmlElement
  nameWithType: HtmlElement
  fullName: System.Windows.Forms.HtmlElement
  type: Class
  summary: "웹 페이지 내의 HTML 요소를 나타냅니다."
  remarks: "HtmlElement 모든 가능한 형식의 HTML 문서에서 요소를 같은 나타냅니다 `BODY`, `TABLE`, 및 `FORM`, 다른 규칙 으로부터 합니다. 클래스에서 모든 요소를 찾을 예상할 수 있는 가장 일반적인 속성을 노출 합니다.       대부분의 요소를 가질 수 있습니다 *자식 요소*:는 아래에 위치 하는 다른 HTML 요소입니다. 사용 하 여는 <xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A>지정된 된 요소에 자식 개체가 있는지 여부를 테스트 하는 속성 및 <xref:System.Windows.Forms.HtmlElement.Children%2A>반복 하는 컬렉션.</xref:System.Windows.Forms.HtmlElement.Children%2A> </xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A> <xref:System.Windows.Forms.HtmlElement.Parent%2A>속성은 현재 요소가 중첩 되어 HtmlElement를 반환 합니다.</xref:System.Windows.Forms.HtmlElement.Parent%2A>       특성, 속성 및 메서드는 기본 요소에 직접 노출 되지 않는 HtmlElement에서 같은에 액세스 해야 할 수는 `SRC` 특성에 `IMG` 요소 또는 `Submit` 에서 메서드는 `FORM`합니다. <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A>및 <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>메서드를 사용 하면 검색 한 특성이 나 특정 요소에 속성을 변경 하는 동안 <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A>액세스에는 관리 되는 DOM 문서 개체 모델 ()를 노출 되지 않는 모든 메서드를 제공 합니다.</xref:System.Windows.Forms.HtmlElement.InvokeMember%2A> </xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> </xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> 노출 되지 않은 속성 및 메서드를 액세스할 경우 응용 프로그램에 비관리 코드 권한는 <xref:System.Windows.Forms.HtmlElement.DomElement%2A>특성.</xref:System.Windows.Forms.HtmlElement.DomElement%2A>       사용 하 여는 <xref:System.Windows.Forms.HtmlElement.TagName%2A>요소가 특정 유형 인지를 테스트 하는 속성.</xref:System.Windows.Forms.HtmlElement.TagName%2A>       실행 시 모든 HTML 문서를 수정할 수 있습니다. 사용 하 여 새 HtmlElement 개체를 만들 수 있습니다는 <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A>방식의 <xref:System.Windows.Forms.HtmlDocument>, 사용 하 여 다른 요소에 추가 하는 <xref:System.Windows.Forms.HtmlElement.AppendChild%2A>또는 <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A>메서드.</xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> </xref:System.Windows.Forms.HtmlElement.AppendChild%2A> </xref:System.Windows.Forms.HtmlDocument> </xref:System.Windows.Forms.HtmlDocument.CreateElement%2A> HTML 태그로 요소를 만들 수 있고 기존 요소에 할당 하면 <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>속성.</xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>"
  example:
  - "The following code example shows how to examine an arbitrary HTML document and derive a string describing the HTML elements, with indentation and level numbers used to indicate how deeply nested the elements are in the document. This code example requires that your application hosts a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#1](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#1)]\n [!code-cs[System.Windows.Forms.HtmlElement#1](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#1)]"
  syntax:
    content: public sealed class HtmlElement
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.All
  id: All
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: All
  nameWithType: HtmlElement.All
  fullName: System.Windows.Forms.HtmlElement.All
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "가져옵니다는 <xref href=&quot;System.Windows.Forms.HtmlElementCollection&quot;> </xref> 현재 요소의 아래에 있는 모든 요소의 합니다."
  remarks: "직계 부모 요소가 현재 요소에만 액세스는 <xref:System.Windows.Forms.HtmlElement.Children%2A>컬렉션 대신.</xref:System.Windows.Forms.HtmlElement.Children%2A>       이 컬렉션의 요소 소스 순서 대로 반드시 반환 되지 않습니다."
  syntax:
    content: public System.Windows.Forms.HtmlElementCollection All { get; }
    return:
      type: System.Windows.Forms.HtmlElementCollection
      description: "현재 요소의 직접 또는 간접 자식인 모든 요소의 컬렉션입니다. 현재 요소가 `TABLE`, 예를 들어 모두 반환 됩니다 모든 `TH`, `TR`, 및 `TD` 와 같은 다른 요소 외에 테이블 `DIV` 및 `SPAN` 셀 내에 포함 된 요소입니다."
  overload: System.Windows.Forms.HtmlElement.All*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)
  id: AppendChild(System.Windows.Forms.HtmlElement)
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: AppendChild(HtmlElement)
  nameWithType: HtmlElement.AppendChild(HtmlElement)
  fullName: System.Windows.Forms.HtmlElement.AppendChild(HtmlElement)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "다른 요소의 하위 트리에 요소를 추가 합니다."
  remarks: "HTML 문서 개체 모델 (DOM)을 사용 하면 다양 한 방법으로 HTML 파일의 실행 시간 내용을 변경할 수 있습니다. AppendChild를 사용 하 여 페이지에서 요소를 이동 하거나 기존 문서에 새 요소를 추가 합니다.       요소가 이미 부모가 있으면, 요소가 다른 요소에 추가 됩니다 자동으로 제거 해당 요소 이전 부모에서.       런타임에 문서에 대 한 추가 AppendChild를 사용 하 여 유지 되지 것입니다 호출 하는 경우는 <xref:System.Windows.Forms.WebBrowser.ShowSaveAsDialog%2A>에서 메서드는 <xref:System.Windows.Forms.WebBrowser>컨트롤.</xref:System.Windows.Forms.WebBrowser> </xref:System.Windows.Forms.WebBrowser.ShowSaveAsDialog%2A>"
  example:
  - "The following code example creates a new hyperlink using the <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A> method and adds it to end of a page using `AppendChild` on the `BODY` element. The example requires that your application contains a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#8](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#8)]\n [!code-cs[System.Windows.Forms.HtmlElement#8](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#8)]"
  syntax:
    content: public System.Windows.Forms.HtmlElement AppendChild (System.Windows.Forms.HtmlElement newElement);
    parameters:
    - id: newElement
      type: System.Windows.Forms.HtmlElement
      description: "<xref href=&quot;System.Windows.Forms.HtmlElement&quot;> </xref> 트리의이 위치에 추가 합니다."
    return:
      type: System.Windows.Forms.HtmlElement
      description: "트리에 추가 된 후의 요소입니다."
  overload: System.Windows.Forms.HtmlElement.AppendChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)
  id: AttachEventHandler(System.String,System.EventHandler)
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: AttachEventHandler(String,EventHandler)
  nameWithType: HtmlElement.AttachEventHandler(String,EventHandler)
  fullName: System.Windows.Forms.HtmlElement.AttachEventHandler(String,EventHandler)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "HTML 문서 개체 모델 (DOM)에서 명명된 된 이벤트에 대 한 이벤트 처리기를 추가합니다."
  remarks: "관리 되는 문서 개체 모델 (DOM) 선택 된 수의 이벤트를 노출합니다. 대부분의 이벤트를 노출 되지 않은 특정 형식의 요소에 대해서만 정의 됩니다. 와 같은 `submit` 이벤트에 대해서만 사용할 수 있는 `FORM` 요소입니다. AttachEventHandler를 사용 하 여 노출 되지 않는 이러한 이벤트에 이벤트 처리기를 추가 합니다.       문서 로드가 완료 될 때까지 문서 또는 해당 개체 중 하나에 이벤트를 연결 해야 합니다. 이 메서드를 호출 해야 가장 빠른는 <xref:System.Windows.Forms.WebBrowser.DocumentCompleted>의 이벤트는 <xref:System.Windows.Forms.WebBrowser>컨트롤.</xref:System.Windows.Forms.WebBrowser> </xref:System.Windows.Forms.WebBrowser.DocumentCompleted>       사용 가능한 관리 되지 않는 이벤트에 대 한 자세한 내용은 참조 [관리 되는 HTML 문서 개체 모델에서 노출 되지 않은 멤버에 액세스](~/add/includes/ajax-current-ext-md.md) 및 주어진 인터페이스: [주어진](http://go.microsoft.com/fwlink/?LinkId=104876), [IHTMLElement2](http://go.microsoft.com/fwlink/?LinkId=104877), [IHTMLElement3](http://go.microsoft.com/fwlink/?LinkId=104878), [IHTMLElement4](http://go.microsoft.com/fwlink/?LinkId=104879)합니다."
  syntax:
    content: public void AttachEventHandler (string eventName, EventHandler eventHandler);
    parameters:
    - id: eventName
      type: System.String
      description: "처리할 이벤트의 이름입니다."
    - id: eventHandler
      type: System.EventHandler
      description: "이벤트를 처리 하는 관리 되는 코드입니다."
  overload: System.Windows.Forms.HtmlElement.AttachEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.CanHaveChildren
  id: CanHaveChildren
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: CanHaveChildren
  nameWithType: HtmlElement.CanHaveChildren
  fullName: System.Windows.Forms.HtmlElement.CanHaveChildren
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 요소의 자식 요소를 사용할 수 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "일부 요소와 같은 `IMG` 및 `SCRIPT`, 감추어진 자식을 가질 수 없습니다. 호출 하기 전에이 속성을 사용 하 여 <xref:System.Windows.Forms.HtmlElement.AppendChild%2A>또는 <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A>임의 요소에.</xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> </xref:System.Windows.Forms.HtmlElement.AppendChild%2A>"
  example:
  - "The following code example handles the <xref:System.Windows.Forms.HtmlElement.Click> event on <xref:System.Windows.Forms.HtmlDocument>. If an element was not previous selected using a mouse click, the code assigns the element to a private class variable named `MoveElement`. If an element was selected, the code attempts to append it to the element that was just clicked. This code example requires that your application hosts a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`, and that you have already added an event handler for the <xref:System.Windows.Forms.HtmlElement.Click> event on <xref:System.Windows.Forms.HtmlDocument>.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#2](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#2)]\n [!code-cs[System.Windows.Forms.HtmlElement#2](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#2)]"
  syntax:
    content: public bool CanHaveChildren { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>요소가 자식 요소를 가질 수 있으면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.HtmlElement.CanHaveChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.Children
  id: Children
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: Children
  nameWithType: HtmlElement.Children
  fullName: System.Windows.Forms.HtmlElement.Children
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "가져옵니다는 <xref href=&quot;System.Windows.Forms.HtmlElementCollection&quot;> </xref> 현재 요소의 모든 자식 항목입니다."
  remarks: "다양 한 HTML 파일 요소 별로 다른 HTML 요소를 가질 수 있습니다. 자식 컬렉션의 문서 트리 구조를 탐색 하기 위한 간단한 메커니즘을 제공 합니다.       자식 항목을 현재 요소의 직계 부모가 요소 노출 합니다. 있는 경우는 <xref:System.Windows.Forms.HtmlElement>에 대 한는 `TABLE` 요소인 자식 하면 모든는 `TR` (행) 요소 내에 `TABLE`.</xref:System.Windows.Forms.HtmlElement> 검색 하는 `TD` (셀) 요소 내에 포함 된는 `TR` 자식 컬렉션을 사용 하 여 각 개별 할 요소를 `TR` 요소나 <xref:System.Windows.Forms.HtmlElement.All%2A> <xref:System.Windows.Forms.HtmlElement>.</xref:System.Windows.Forms.HtmlElement> 컬렉션</xref:System.Windows.Forms.HtmlElement.All%2A> 사용       이 컬렉션의 요소는 원본 순서에 포함 되도록 보장 되지 않습니다.       경우 <xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A>은 `false`, `Children` 항상 비어 있게 됩니다.</xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A>"
  example:
  - "The following code example examines an arbitrary HTML document and derive a string describing the elements, with indentation and level numbers used to indicate how deeply nested the elements are in the document. It does this by searching the `Children` collection of all elements recursively, starting with the HTML element at the top of the document. This code example requires that your application has a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#1](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#1)]\n [!code-cs[System.Windows.Forms.HtmlElement#1](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#1)]"
  syntax:
    content: public System.Windows.Forms.HtmlElementCollection Children { get; }
    return:
      type: System.Windows.Forms.HtmlElementCollection
      description: "모든 컬렉션 <xref href=&quot;System.Windows.Forms.HtmlElement&quot;> </xref> 현재 요소가 부모인 개체입니다."
  overload: System.Windows.Forms.HtmlElement.Children*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.Click
  id: Click
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: Click
  nameWithType: HtmlElement.Click
  fullName: System.Windows.Forms.HtmlElement.Click
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "사용자가 왼쪽된 마우스 단추를 사용 하 여 요소를 클릭할 때 발생 합니다."
  remarks: "설정 하 여 요소에 대해 클릭 이벤트에 대 한 기본 동작을 취소할 수는 <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>의 속성은 <xref:System.Windows.Forms.HtmlElementEventArgs>클래스를 `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>       요소에 대해 클릭 이벤트에는 해당 요소의 부모 요소와도 발생 합니다는 <xref:System.Windows.Forms.HtmlDocument>설정 하지 않으면 클래스 자체는 <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>의 속성은 <xref:System.Windows.Forms.HtmlElementEventArgs>클래스를 `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       사용자가 않는 하지 현재 입력 포커스가 없는 하는 요소를 클릭 한 후 클릭 이벤트가 발생 합니다는 <xref:System.Windows.Forms.HtmlElement.Focusing>이벤트를 하기 전에 <xref:System.Windows.Forms.HtmlElement.LostFocus>해당 요소에 대 한 이벤트입니다.</xref:System.Windows.Forms.HtmlElement.LostFocus> </xref:System.Windows.Forms.HtmlElement.Focusing>       이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 [DHTML 개체 모델에 대 한](http://msdn.microsoft.com/library/ms533022.aspx)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Click event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the Click event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#432](~/add/codesnippet/csharp/e-system.windows.forms.h_5_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#432](~/add/codesnippet/visualbasic/e-system.windows.forms.h_5_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler Click;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.ClientRectangle
  id: ClientRectangle
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: ClientRectangle
  nameWithType: HtmlElement.ClientRectangle
  fullName: System.Windows.Forms.HtmlElement.ClientRectangle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "HTML 문서에서 요소 클라이언트 영역의 경계를 가져옵니다."
  remarks: "ClientRectangle 명시적 높이 너비를 지정 된 요소 또는 절대 위치를 사용 하는 요소에 대해서만 위치 데이터를 반환 합니다. 위치 스타일으로 설정 된 경우 문서는 절대 위치로 지정 `absolute`, 이후에 배치할 수 있습니다는 HTML 페이지에 어느 좌표입니다."
  example:
  - "Assume you have loaded the following HTML page into a hosted instance of the <xref:System.Windows.Forms.WebBrowser> control.  \n  \n```  \n<HTML>  \n  \n    <BODY>  \n  \n        <DIV id=\"div1\" style=\"position:absolute;top:100px;left:100px;border-      style:solid;border-width:1px;\">  \n            Edit this text.  \n        </DIV>  \n  \n    </BODY>  \n  \n</HTML>  \n```  \n  \n The following code example demonstrates retrieving this element and expanding its dimensions if the client area is less than 400 pixels wide by 50 pixels high, and also sets the `DIV` to the `contentEditable` state so that the user can input text.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#3](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#3)]\n [!code-cs[System.Windows.Forms.HtmlElement#3](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#3)]"
  syntax:
    content: public System.Drawing.Rectangle ClientRectangle { get; }
    return:
      type: System.Drawing.Rectangle
      description: "클라이언트 영역 경계와 스크롤 막대가 차지 하는 모든 영역에서 뺀 요소가 차지 합니다. 장식 포함 요소의 크기와 위치를 가져오려면 <xref:System.Windows.Forms.HtmlElement.OffsetRectangle*>대신.</xref:System.Windows.Forms.HtmlElement.OffsetRectangle*>"
  overload: System.Windows.Forms.HtmlElement.ClientRectangle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.DetachEventHandler(System.String,System.EventHandler)
  id: DetachEventHandler(System.String,System.EventHandler)
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: DetachEventHandler(String,EventHandler)
  nameWithType: HtmlElement.DetachEventHandler(String,EventHandler)
  fullName: System.Windows.Forms.HtmlElement.DetachEventHandler(String,EventHandler)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "HTML 문서 개체 모델 (DOM)에서 명명된 된 이벤트에서 이벤트 처리기를 제거합니다."
  syntax:
    content: public void DetachEventHandler (string eventName, EventHandler eventHandler);
    parameters:
    - id: eventName
      type: System.String
      description: "처리할 이벤트의 이름입니다."
    - id: eventHandler
      type: System.EventHandler
      description: "이벤트를 처리 하는 관리 되는 코드입니다."
  overload: System.Windows.Forms.HtmlElement.DetachEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.Document
  id: Document
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: Document
  nameWithType: HtmlElement.Document
  fullName: System.Windows.Forms.HtmlElement.Document
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "가져옵니다는 <xref href=&quot;System.Windows.Forms.HtmlDocument&quot;> </xref> 이 요소가 속한를 합니다."
  remarks: "일부 HTML 페이지를 사용 하 여 프레임을 호스트할 수는 `FRAMESET` 태그입니다. 이 경우, 각 개별 `FRAME` 요소 <xref:System.Windows.Forms.HtmlDocument>.</xref:System.Windows.Forms.HtmlDocument> 의 자체 인스턴스를 포함 합니다 이 속성은 요소에 대 한 참조에서 이벤트 처리기에서 받은 경우 가장 유용는 <xref:System.Windows.Forms.HtmlElementEventArgs>, 요소가 있는 문서에 작업을 수행 해야 합니다.</xref:System.Windows.Forms.HtmlElementEventArgs>"
  syntax:
    content: public System.Windows.Forms.HtmlDocument Document { get; }
    return:
      type: System.Windows.Forms.HtmlDocument
      description: "이 요소의 부모 문서입니다."
  overload: System.Windows.Forms.HtmlElement.Document*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.DomElement
  id: DomElement
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: DomElement
  nameWithType: HtmlElement.DomElement
  fullName: System.Windows.Forms.HtmlElement.DomElement
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 요소에 대 한 관리 되지 않는 인터페이스 포인터를 가져옵니다."
  remarks: "<xref:System.Windows.Forms.HtmlElement>래퍼에 대 한는 Internet Explorer DOM 문서 개체 모델 (), 구성 요소 개체 모델 (COM)를 사용 하 여 작성 됩니다.</xref:System.Windows.Forms.HtmlElement> 와 같은 내부 COM 인터페이스에서 노출 되지 않은 속성이 나 메서드에 액세스 해야 할 경우 `IHTMLElement`를 쿼리 하기 위해이 개체에 사용할 수 있습니다.       관리 되지 않는 인터페이스를 사용 하려면 응용 프로그램에 MSHTML 라이브러리 (mshtml.dll)를 가져올 해야 합니다. 그러나 실행할 수도 있습니다 노출 되지 않은 속성 및 메서드를 사용 하 여 `Invoke` 메서드."
  example:
  - "The following code example uses unmanaged interfaces to take the currently selected text and convert it into a hyperlink, with the URL chosen by the user. This code was written under the assumption that your form has a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`, and that you have added the unmanaged MSHTML library as a reference to your project.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#4](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#4)]\n [!code-cs[System.Windows.Forms.HtmlElement#4](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#4)]"
  syntax:
    content: public object DomElement { get; }
    return:
      type: System.Object
      description: "COM `IUnknown` HTML 요소 중 하나로 캐스팅할 수 있는 요소에 대 한 포인터와 같은 인터페이스 `IHTMLElement`합니다."
  overload: System.Windows.Forms.HtmlElement.DomElement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.DoubleClick
  id: DoubleClick
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: DoubleClick
  nameWithType: HtmlElement.DoubleClick
  fullName: System.Windows.Forms.HtmlElement.DoubleClick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "사용자가 클릭 마우스 왼쪽된 단추로 요소 위로 두 번 빠르게 연속적으로 발생 합니다."
  remarks: "두 번 클릭은 운영 체제의 마우스 설정에 따라 결정 됩니다. 사용자를 두 번 클릭 하지 않고 두 번 클릭을 고려할 수 있도록 마우스 단추 클릭 만으로 간격을 설정할 수 있습니다.       설정 하 여 요소에 DoubleClick 이벤트에 대 한 기본 동작을 취소할 수는 <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>의 속성은 <xref:System.Windows.Forms.HtmlElementEventArgs>클래스를 `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>       요소에 DoubleClick 이벤트에는 해당 요소의 부모 요소와도 발생 합니다는 <xref:System.Windows.Forms.HtmlDocument>설정 하지 않으면 클래스 자체는 <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>의 속성은 <xref:System.Windows.Forms.HtmlElementEventArgs>클래스를 `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 [DHTML 개체 모델에 대 한](http://msdn.microsoft.com/library/ms533022.aspx)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the DoubleClick event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the DoubleClick event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#433](~/add/codesnippet/csharp/e-system.windows.forms.h_26_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#433](~/add/codesnippet/visualbasic/e-system.windows.forms.h_26_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler DoubleClick;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.Drag
  id: Drag
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: Drag
  nameWithType: HtmlElement.Drag
  fullName: System.Windows.Forms.HtmlElement.Drag
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "사용자가 텍스트를 여러 위치로 끌 때 발생 합니다."
  remarks: "이 이벤트는 다음 위치에 텍스트를 끌 때 발생:-내 또는 저장소 간에 호스팅되는 HTML 페이지는 <xref:System.Windows.Forms.WebBrowser>제어 또는 다른 응용 프로그램--으로 Internet Explorer를 Windows 데스크톱을 설정 하 여 요소에 끌기 이벤트에 대 한 기본 동작을 취소할 수는 <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>의 속성은 <xref:System.Windows.Forms.HtmlElementEventArgs>클래스를 `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> </xref:System.Windows.Forms.WebBrowser>       요소에 끌기 이벤트에는 해당 요소의 부모 요소와도 발생 합니다는 <xref:System.Windows.Forms.HtmlDocument>설정 하지 않으면 클래스 자체는 <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>의 속성은 <xref:System.Windows.Forms.HtmlElementEventArgs>클래스를 `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 [DHTML 개체 모델에 대 한](http://msdn.microsoft.com/library/ms533022.aspx)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Drag event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the Drag event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#434](~/add/codesnippet/csharp/e-system.windows.forms.h_11_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#434](~/add/codesnippet/visualbasic/e-system.windows.forms.h_11_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler Drag;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.DragEnd
  id: DragEnd
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: DragEnd
  nameWithType: HtmlElement.DragEnd
  fullName: System.Windows.Forms.HtmlElement.DragEnd
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "사용자가 끌기 작업을 완료할 때 발생 합니다."
  remarks: "설정 하 여 요소에 DragEnd 이벤트에 대 한 기본 동작을 취소할 수는 <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>의 속성은 <xref:System.Windows.Forms.HtmlElementEventArgs>클래스를 `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>       요소에 DragEnd 이벤트에는 해당 요소의 부모 요소와도 발생 합니다는 <xref:System.Windows.Forms.HtmlDocument>설정 하지 않으면 클래스 자체는 <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>의 속성은 <xref:System.Windows.Forms.HtmlElementEventArgs>클래스를 `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 [DHTML 개체 모델에 대 한](http://msdn.microsoft.com/library/ms533022.aspx)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the DragEnd event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the DragEnd event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#435](~/add/codesnippet/csharp/e-system.windows.forms.h_35_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#435](~/add/codesnippet/visualbasic/e-system.windows.forms.h_35_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler DragEnd;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.DragLeave
  id: DragLeave
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: DragLeave
  nameWithType: HtmlElement.DragLeave
  fullName: System.Windows.Forms.HtmlElement.DragLeave
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "사용자가이 요소 위에 있는 항목을 더 이상 끌고 때 발생 합니다."
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the DragLeave event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the DragLeave event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#436](~/add/codesnippet/csharp/e-system.windows.forms.h_21_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#436](~/add/codesnippet/visualbasic/e-system.windows.forms.h_21_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler DragLeave;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.DragOver
  id: DragOver
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: DragOver
  nameWithType: HtmlElement.DragOver
  fullName: System.Windows.Forms.HtmlElement.DragOver
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "사용자가 텍스트를 요소 위로 끌 때 발생 합니다."
  remarks: "설정 하 여 요소에 끌기 이벤트에 대 한 기본 동작을 취소할 수는 <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>의 속성은 <xref:System.Windows.Forms.HtmlElementEventArgs>클래스를 `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>       요소에 대 한 끌기 이벤트에는 해당 요소의 부모 요소와도 발생 합니다는 <xref:System.Windows.Forms.HtmlDocument>설정 하지 않으면 클래스 자체는 <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>의 속성은 <xref:System.Windows.Forms.HtmlElementEventArgs>클래스를 `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 [DHTML 개체 모델에 대 한](http://msdn.microsoft.com/library/ms533022.aspx)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the DragOver event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the DragOver event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#437](~/add/codesnippet/csharp/e-system.windows.forms.h_31_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#437](~/add/codesnippet/visualbasic/e-system.windows.forms.h_31_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler DragOver;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.Enabled
  id: Enabled
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: Enabled
  nameWithType: HtmlElement.Enabled
  fullName: System.Windows.Forms.HtmlElement.Enabled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 요소에 사용자 데이터를 입력할 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "에 대 한 `FORM` Enabled로 설정 하는 라디오 단추, 텍스트 상자 등의 요소 `false` 이러한 양식 필드를 사용 하 여 사용자를 방지 합니다. 다른 요소에 대해 같은 `DIV` 또는 `SPAN`, Enabled 설정을 `false` 회색으로 표시 요소에서 모든 텍스트를 발생 합니다; 그러나 텍스트를 여전히 선택할 수 있는 합니다. 선택 영역을 취소 하려면 노출 되지 않은 항목에 대 한 이벤트 처리기를 추가 `onselectstart` 사용 하 여 이벤트는 <xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A>메서드.</xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A>"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>요소는 사용자 입력을 허용 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.HtmlElement.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: HtmlElement.Equals(Object)
  fullName: System.Windows.Forms.HtmlElement.Equals(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "제공 된 개체가 현재 요소와 같지 않은지 테스트 합니다."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "같은지 여부를 테스트할 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>obj</code> is an <xref href=&quot;System.Windows.Forms.HtmlElement&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.HtmlElement.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.FirstChild
  id: FirstChild
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: FirstChild
  nameWithType: HtmlElement.FirstChild
  fullName: System.Windows.Forms.HtmlElement.FirstChild
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "문서 트리에서이 요소 아래에 다음 요소를 가져옵니다."
  remarks: "FirstChild와 함께에서 사용 하 여 <xref:System.Windows.Forms.HtmlElement.NextSibling%2A>HTML 문서에 대 한 문서 트리를 탐색 하.</xref:System.Windows.Forms.HtmlElement.NextSibling%2A>"
  syntax:
    content: public System.Windows.Forms.HtmlElement FirstChild { get; }
    return:
      type: System.Windows.Forms.HtmlElement
      description: "<xref href=&quot;System.Windows.Forms.HtmlElement&quot;> </xref> 원본 순서에서 현재 요소의 아래에 포함 하는 첫 번째 요소를 나타내는입니다."
  overload: System.Windows.Forms.HtmlElement.FirstChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.Focus
  id: Focus
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: Focus()
  nameWithType: HtmlElement.Focus()
  fullName: System.Windows.Forms.HtmlElement.Focus()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "현재 요소에 사용자 입력된 포커스를 놓습니다."
  remarks: "요소에 포커스를 설정 합니다. 해당 요소가 포커스를 제공 하면는 활성 요소가 됩니다. 포커스가 있는 요소 <xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A> <xref:System.Windows.Forms.HtmlDocument>안내 하십시오.</xref:System.Windows.Forms.HtmlDocument> 속성</xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A> 에서 반환할 예를 들어       모든 키 입력 사용자가 포커스를 호출한 후에 해당 요소에 전송 됩니다."
  syntax:
    content: public void Focus ();
    parameters: []
  overload: System.Windows.Forms.HtmlElement.Focus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.Focusing
  id: Focusing
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: Focusing
  nameWithType: HtmlElement.Focusing
  fullName: System.Windows.Forms.HtmlElement.Focusing
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "요소는 먼저 사용자 입력된 포커스를 받을 때 발생 합니다."
  remarks: "작업 표시줄 또는 ALT + TAB 키를 사용 하 여 다른 응용 프로그램으로 전환 하는 사용자는 Focusing 받습니다 전에 포커스가 있던 하는 요소 및 <xref:System.Windows.Forms.HtmlElement.GotFocus>이벤트 다시 전환한 경우에 사용자 응용 프로그램으로 다시.</xref:System.Windows.Forms.HtmlElement.GotFocus>       이 이벤트의 기본 동작을 취소할 수 없습니다. 요소에서 포커스를 제거 하려면 호출 <xref:System.Windows.Forms.HtmlElement.Focus%2A>내에서 다른 요소에는 <xref:System.Windows.Forms.HtmlElement.GotFocus>이벤트.</xref:System.Windows.Forms.HtmlElement.GotFocus> </xref:System.Windows.Forms.HtmlElement.Focus%2A>       요소에 Focusing 이벤트는 해당 요소의 부모 및에 발생 합니다는 <xref:System.Windows.Forms.HtmlDocument>설정 하지 않으면 클래스 자체는 <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>의 속성은 <xref:System.Windows.Forms.HtmlElementEventArgs>클래스를 `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 [DHTML 개체 모델에 대 한](http://msdn.microsoft.com/library/ms533022.aspx)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Focusing event. This report helps you to learn when the event occurs and can assist you in debugging.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the Focusing event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#438](~/add/codesnippet/csharp/e-system.windows.forms.h_10_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#438](~/add/codesnippet/visualbasic/e-system.windows.forms.h_10_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler Focusing;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.GetAttribute(System.String)
  id: GetAttribute(System.String)
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: GetAttribute(String)
  nameWithType: HtmlElement.GetAttribute(String)
  fullName: System.Windows.Forms.HtmlElement.GetAttribute(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "요소에는 명명 된 특성의 값을 검색 합니다."
  remarks: "Html에서 특성에 해당 요소에 대 한 모든 유효한 이름/값 쌍입니다. <xref:System.Windows.Forms.HtmlElement>특정 유형의 요소에만 적용 되는 모든 요소에 공통 되는 특성에만 노출 `SRC` 에 대 한 미리 정의 된 특성이 `IMG` 예를 들어 태그에 대 한는 `DIV` 태그입니다.</xref:System.Windows.Forms.HtmlElement> GetAttribute를 사용 하 여 및 <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>에 관리 되는 DOM 문서 개체 모델 ()를 노출 되지 않은 특성을 조작 하기 위한.</xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>       GetAttribute 및 <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>대/소문자 구분.</xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>"
  example:
  - "The following code example retrieves all of the `META` tags within an HTML document, using GetAttribute to find the `META` tag with the name `Description`. The example requires that your application has a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.  \n  \n [!code-vb[System.Windows.Forms.HtmlDocument#6](~/add/codesnippet/visualbasic/HtmlDocumentProject/Form1.vb#6)]\n [!code-cs[System.Windows.Forms.HtmlDocument#6](~/add/codesnippet/csharp/HtmlDocumentProjectCSharp/Form1.cs#6)]"
  syntax:
    content: public string GetAttribute (string attributeName);
    parameters:
    - id: attributeName
      type: System.String
      description: "특성의 이름입니다. 이 인수는 대/소문자 구분."
    return:
      type: System.String
      description: "요소에이 특성의 값으로는 <xref:System.String>값.</xref:System.String> 이 요소에 지정 된 특성이 없으면 빈 문자열을 반환 합니다."
  overload: System.Windows.Forms.HtmlElement.GetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.GetElementsByTagName(System.String)
  id: GetElementsByTagName(System.String)
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: GetElementsByTagName(String)
  nameWithType: HtmlElement.GetElementsByTagName(String)
  fullName: System.Windows.Forms.HtmlElement.GetElementsByTagName(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정 된 HTML에 표시 되는 요소의 컬렉션을 검색 `HTML` 태그입니다."
  syntax:
    content: public System.Windows.Forms.HtmlElementCollection GetElementsByTagName (string tagName);
    parameters:
    - id: tagName
      type: System.String
      description: "태그의 이름을 가진 <xref href=&quot;System.Windows.Forms.HtmlElement&quot;> </xref> 검색할 개체입니다."
    return:
      type: System.Windows.Forms.HtmlElementCollection
      description: "<xref href=&quot;System.Windows.Forms.HtmlElementCollection&quot;> </xref> 모든 요소가 포함 된 해당 `HTML` 태그 이름이 같으면 <code> tagName </code>합니다."
  overload: System.Windows.Forms.HtmlElement.GetElementsByTagName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.GetHashCode
  id: GetHashCode
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: HtmlElement.GetHashCode()
  fullName: System.Windows.Forms.HtmlElement.GetHashCode()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "특정 유형에 대 한 해시 함수로 사용 됩니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "현재 <xref:System.Object>.</xref:System.Object> 에 대 한 해시 코드"
  overload: System.Windows.Forms.HtmlElement.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.GotFocus
  id: GotFocus
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: GotFocus
  nameWithType: HtmlElement.GotFocus
  fullName: System.Windows.Forms.HtmlElement.GotFocus
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "요소에서 사용자 입력된 포커스를 받았을 때 발생 합니다."
  remarks: "이 이벤트의 기본 동작을 취소 하거나 버블링에서 방지할 수 있습니다. 요소에서 포커스를 제거 하려면 호출 <xref:System.Windows.Forms.HtmlElement.Focus%2A>GotFocus 이벤트 내에서 다른 요소에 대해.</xref:System.Windows.Forms.HtmlElement.Focus%2A>       이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 [DHTML 개체 모델에 대 한](http://msdn.microsoft.com/library/ms533022.aspx)합니다."
  example:
  - "Save the following HTML code into a file, and load the file into a <xref:System.Windows.Forms.WebBrowser> control in a Windows Forms project.  \n  \n```  \n<HTML>  \n    <BODY>  \n        <FORM name=\"form1\">  \n            <INPUT type=\"text\" size=20 name=\"text1\">  \n            <INPUT type=\"text\" size=20 name=\"text2\">  \n            <INPUT type=\"text\" size=20 name=\"text3\">  \n        </FORM>  \n    </BODY>  \n</HTML>  \n```  \n  \n The following code example prevents the next `INPUT` element in the tab order from receiving user input focus if the previous element contains less than five characters. The example requires that the previously mentioned HTML file is loaded into an instance of the <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#15](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#15)]\n [!code-cs[System.Windows.Forms.HtmlElement#15](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#15)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler GotFocus;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.Id
  id: Id
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: Id
  nameWithType: HtmlElement.Id
  fullName: System.Windows.Forms.HtmlElement.Id
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "요소를 식별 하는 레이블을 가져오거나 설정 합니다."
  remarks: "Id는 고유 해야 합니다. 같은 문서 내에서 동일한 Id 가진 두 개의 요소를 사용할 수 없습니다. 사용 하 여는 <xref:System.Windows.Forms.HtmlElement.Name%2A>속성을 논리적으로 관련 된 요소 그룹에 동일한 식별자를 지정 합니다.</xref:System.Windows.Forms.HtmlElement.Name%2A>"
  syntax:
    content: public string Id { get; set; }
    return:
      type: System.String
      description: "요소에 대 한 고유 식별자입니다."
  overload: System.Windows.Forms.HtmlElement.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.InnerHtml
  id: InnerHtml
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: InnerHtml
  nameWithType: HtmlElement.InnerHtml
  fullName: System.Windows.Forms.HtmlElement.InnerHtml
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 요소 아래에 있는 HTML 태그를 가져오거나 설정 합니다."
  remarks: "와 같은 기존 HTML 페이지에 새 요소를 추가 하는 방법은 여러 가지가 <xref:System.Windows.Forms.HtmlElement.AppendChild%2A>및 <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A>메서드.</xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> </xref:System.Windows.Forms.HtmlElement.AppendChild%2A> InnerHtml를 사용 하 여 새 요소에 많은 특성 또는 스타일을 설정 하는 경우 새 콘텐츠를 추가 하는 가장 빠른 방법은 경우가 많습니다.       와 다른 InnerHtml <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A>점에서 InnerHtml 개체를 나타내는 HTML에 포함 되지 것입니다 호출 하는 것입니다.</xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> 참조 <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A>이러한 두 속성의 차이 대 한 자세한 내용은.</xref:System.Windows.Forms.HtmlElement.OuterHtml%2A>       InnerHtml 설정 이전에 요소에 추가 하는 모든 자식을 제거 합니다. DOM에서 요소를 검색 한 다음 새 HTML 부모 InnerHtml 속성을 할당 하는 경우 해당 요소에 참조를 쓸모 되며 해당 속성과 메서드를 호출할 때 해당 동작은 정의 되지 않습니다.       일부 요소에 대 한 설정 InnerHtml 것는 올바른 작업이 아닙니다. 일부 HTML 태그 등 닫는 태그가 포함 되어는 `IMG` 태그와 때문에 중첩 된 요소가 포함 될 수 없습니다. 와 같은 일부 태그는 `SCRIPT` 태그, 텍스트 콘텐츠; InnerHtml 설정 하면 오류가 발생 합니다만 포함할 수 있습니다. 두 가지 유형의 태그는 <xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A>속성은 반환 `false`.</xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A> 그러나도 설정할 수 없습니다 InnerHtml에 `TABLE` 및 `TR` 이러한 요소에 잘못 된 HTML 할당 요소는 문서의 렌더링 손상 될 수 있습니다. 사용 하 여 <xref:System.Windows.Forms.HtmlElement.AppendChild%2A>또는 `insertRow` 및 `insertCell` 에서 관리 되지 않는 메서드 `IHTMLTable` 추가할 인터페이스 행과 셀을 `TABLE`.</xref:System.Windows.Forms.HtmlElement.AppendChild%2A>       텍스트를 요소와 HTML 태그 되지 할당에 필요한 경우 사용 된 <xref:System.Windows.Forms.HtmlElement.InnerText%2A>속성 대신.</xref:System.Windows.Forms.HtmlElement.InnerText%2A>       이전에 사용 하 여 할당 된 텍스트 값 <xref:System.Windows.Forms.HtmlElement.InnerText%2A>.</xref:System.Windows.Forms.HtmlElement.InnerText%2A> 파기 InnerHtml에 값을 할당"
  syntax:
    content: public string InnerHtml { get; set; }
    return:
      type: System.String
      description: "현재 요소의 자식 요소를 정의 하는 HTML 태그입니다."
  overload: System.Windows.Forms.HtmlElement.InnerHtml*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "이 요소에 자식 요소를 만들 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.InnerText
  id: InnerText
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: InnerText
  nameWithType: HtmlElement.InnerText
  fullName: System.Windows.Forms.HtmlElement.InnerText
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "요소에 할당 된 텍스트를 가져오거나 설정 합니다."
  remarks: "HTML 요소 InnerText에 할당 하려고 하면 한 경우 처럼 텍스트 파일 내에서 HTML을 보는 HTML 코드는 문서에 리터럴로 표시 됩니다. HTML을 할당 하면 사용 하 여 요소는 <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>속성 InnerText 모든 반환 텍스트의 HTML 태그를 제거 한다는 점에서.</xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>       InnerText에 값을 할당 요소에 속하는 모든 자식 요소를 삭제 합니다."
  example:
  - "The following code creates a new hyperlink using <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A>, and assigns text to the link using the InnerText property.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#8](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#8)]\n [!code-cs[System.Windows.Forms.HtmlElement#8](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#8)]"
  syntax:
    content: public string InnerText { get; set; }
    return:
      type: System.String
      description: "HTML 태그 없음은 요소 텍스트 요소에 자식 요소가 있으면 그 자식 요소에 있는 텍스트만 유지 됩니다."
  overload: System.Windows.Forms.HtmlElement.InnerText*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "지정 된 요소에는 텍스트가 포함 될 수 없습니다 (예를 들어 한 `IMG` 요소)."
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)
  id: InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: InsertAdjacentElement(HtmlElementInsertionOrientation,HtmlElement)
  nameWithType: HtmlElement.InsertAdjacentElement(HtmlElementInsertionOrientation,HtmlElement)
  fullName: System.Windows.Forms.HtmlElement.InsertAdjacentElement(HtmlElementInsertionOrientation,HtmlElement)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "문서 개체 모델 (DOM)에 새 요소를 삽입 합니다."
  remarks: "후 때까지이 메서드를 호출 하지 마십시오는 <xref:System.Windows.Forms.WebBrowser.DocumentCompleted>이벤트에는 <xref:System.Windows.Forms.WebBrowser>컨트롤에서 발생 했습니다.</xref:System.Windows.Forms.WebBrowser> </xref:System.Windows.Forms.WebBrowser.DocumentCompleted> 그 전에이 메서드를 호출 처럼 문서 로드가 완료 되지 것입니다 예외가 발생할 수 있습니다.       값이 있는지 여부를 <xref:System.Windows.Forms.HtmlElementInsertionOrientation>유효한 요소 형식에 따라 달라 집니다.</xref:System.Windows.Forms.HtmlElementInsertionOrientation> 예를 들어 <xref:System.Windows.Forms.HtmlElementInsertionOrientation>요소가 유효는 `DIV`, 하지만 하지는 `SCRIPT` 또는 `IMG` 요소, 자식 요소를 포함할 수 있으며 둘 다.</xref:System.Windows.Forms.HtmlElementInsertionOrientation>"
  example:
  - "The following code example inserts a `DIV` element into the top of every page that users view outside of the ADatum.com server. The example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`. Your sample must also import the namespace <xref:System.Text.RegularExpressions>.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#9](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#9)]\n [!code-cs[System.Windows.Forms.HtmlElement#9](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#9)]"
  syntax:
    content: public System.Windows.Forms.HtmlElement InsertAdjacentElement (System.Windows.Forms.HtmlElementInsertionOrientation orient, System.Windows.Forms.HtmlElement newElement);
    parameters:
    - id: orient
      type: System.Windows.Forms.HtmlElementInsertionOrientation
      description: "현재 요소를 기준으로이 요소를 삽입할 위치입니다."
    - id: newElement
      type: System.Windows.Forms.HtmlElement
      description: "삽입할 새 요소입니다."
    return:
      type: System.Windows.Forms.HtmlElement
      description: "<xref href=&quot;System.Windows.Forms.HtmlElement&quot;> </xref> 방금 삽입 된 합니다. 삽입 실패 한 경우이 반환 됩니다 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.HtmlElement.InsertAdjacentElement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.InvokeMember(System.String)
  id: InvokeMember(System.String)
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: InvokeMember(String)
  nameWithType: HtmlElement.InvokeMember(String)
  fullName: System.Windows.Forms.HtmlElement.InvokeMember(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 요소의 내부 DOM 요소에서 노출 되지 않은 메서드를 실행합니다."
  remarks: "DOM 문서 개체 모델 ()가 없는 해당 하는 관리 코드에서 메서드를 호출 하이 메서드를 사용할 수 있습니다. 이 버전의 InvokeMember 사용 하 여 인수를 가져오지 않고 노출 되지 않은 메서드를 실행 합니다. 예를 들어 <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A>.</xref:System.Windows.Forms.HtmlElement.InvokeMember%2A> 을 참조 하십시오."
  syntax:
    content: public object InvokeMember (string methodName);
    parameters:
    - id: methodName
      type: System.String
      description: "속성이 나 호출할 메서드의 이름입니다."
    return:
      type: System.Object
      description: "이 메서드에서 반환 되는 요소 <xref:System.Object>.</xref:System.Object> 로 표시 이 경우 <xref:System.Object>가 다른 HTML 요소 및 참조를 프로젝트에 추가 되 고 관리 되지 않는 MSHTML 라이브러리에 캐스팅할 수 있습니다를 적절 한 관리 되지 않는 인터페이스에.</xref:System.Object>"
  overload: System.Windows.Forms.HtmlElement.InvokeMember*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])
  id: InvokeMember(System.String,System.Object[])
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: InvokeMember(String,Object[])
  nameWithType: HtmlElement.InvokeMember(String,Object[])
  fullName: System.Windows.Forms.HtmlElement.InvokeMember(String,Object[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "스크립트 언어로 현재 HTML 페이지에 정의 된 함수를 실행 합니다."
  remarks: "DOM 문서 개체 모델 ()가 없는 해당 하는 관리 코드에서 메서드를 호출 하이 메서드를 사용할 수 있습니다. InvokeMember에 제공 되는 모든 인수를 변환할 Win32 `VARIANT` 명명 된 스크립팅 함수에 전달 하기 전에 데이터 형식입니다."
  example:
  - "The following code example gets a `TABLE` called `dataTable` and uses the unexposed `moveRow` method to move a row from the end of the table to the beginning.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#11](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#11)]\n [!code-cs[System.Windows.Forms.HtmlElement#11](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#11)]"
  syntax:
    content: public object InvokeMember (string methodName, object[] parameter);
    parameters:
    - id: methodName
      type: System.String
      description: "속성이 나 호출할 메서드의 이름입니다."
    - id: parameter
      type: System.Object[]
      description: "전달할 매개 변수 목록입니다."
    return:
      type: System.Object
      description: "함수에서 반환 되는 요소 <xref:System.Object>.</xref:System.Object> 로 표시 이 경우 <xref:System.Object>가 다른 HTML 요소 및 참조를 프로젝트에 추가 되 고 관리 되지 않는 MSHTML 라이브러리에 캐스팅할 수 있습니다를 적절 한 관리 되지 않는 인터페이스에.</xref:System.Object>"
  overload: System.Windows.Forms.HtmlElement.InvokeMember*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.KeyDown
  id: KeyDown
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: KeyDown
  nameWithType: HtmlElement.KeyDown
  fullName: System.Windows.Forms.HtmlElement.KeyDown
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "사용자가 키보드의 키를 누를 때 발생 합니다."
  remarks: "KeyDown <xref:System.Windows.Forms.HtmlElement.KeyPress> <xref:System.Windows.Forms.HtmlElement.KeyUp>.</xref:System.Windows.Forms.HtmlElement.KeyUp> 앞에 오는 설정에서,</xref:System.Windows.Forms.HtmlElement.KeyPress> 앞에 오는       설정 하 여 요소에 KeyDown 이벤트에 대 한 기본 동작을 취소할 수는 <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>의 속성은 <xref:System.Windows.Forms.HtmlElementEventArgs>클래스를 `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>       요소에 KeyDown 이벤트에는 해당 요소의 부모 요소와도 발생 합니다는 <xref:System.Windows.Forms.HtmlDocument>설정 하지 않으면 클래스 자체는 <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>의 속성은 <xref:System.Windows.Forms.HtmlElementEventArgs>클래스를 `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 [DHTML 개체 모델에 대 한](http://msdn.microsoft.com/library/ms533022.aspx)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the KeyDown event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the KeyDown event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#442](~/add/codesnippet/csharp/e-system.windows.forms.h_1_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#442](~/add/codesnippet/visualbasic/e-system.windows.forms.h_1_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler KeyDown;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.KeyPress
  id: KeyPress
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: KeyPress
  nameWithType: HtmlElement.KeyPress
  fullName: System.Windows.Forms.HtmlElement.KeyPress
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "사용자가 키보드의 키를 놓을 때 발생 합니다."
  remarks: "KeyPress <xref:System.Windows.Forms.HtmlElement.KeyDown> <xref:System.Windows.Forms.HtmlElement.KeyUp>.</xref:System.Windows.Forms.HtmlElement.KeyUp> 하기 전에</xref:System.Windows.Forms.HtmlElement.KeyDown> 다음에 발생       설정 하 여 요소에서 KeyPress 이벤트에 대 한 기본 동작을 취소할 수는 <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>의 속성은 <xref:System.Windows.Forms.HtmlElementEventArgs>클래스를 `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>       요소에서 KeyPress 이벤트에는 해당 요소의 부모 요소와도 발생 합니다는 <xref:System.Windows.Forms.HtmlDocument>설정 하지 않으면 클래스 자체는 <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>의 속성은 <xref:System.Windows.Forms.HtmlElementEventArgs>클래스를 `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 [DHTML 개체 모델에 대 한](http://msdn.microsoft.com/library/ms533022.aspx)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the KeyPress event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the KeyPress event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#443](~/add/codesnippet/csharp/e-system.windows.forms.h_16_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#443](~/add/codesnippet/visualbasic/e-system.windows.forms.h_16_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler KeyPress;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.KeyUp
  id: KeyUp
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: KeyUp
  nameWithType: HtmlElement.KeyUp
  fullName: System.Windows.Forms.HtmlElement.KeyUp
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "키보드의 키를 놓을 때 발생 합니다."
  remarks: "KeyUp <xref:System.Windows.Forms.HtmlElement.KeyPress> <xref:System.Windows.Forms.HtmlElement.KeyDown>.</xref:System.Windows.Forms.HtmlElement.KeyDown> 후 발생 하는,</xref:System.Windows.Forms.HtmlElement.KeyPress> 뒤에 오는       이 이벤트를 취소할 수 없습니다.       요소에 KeyUp 이벤트에는 해당 요소의 부모 요소와도 발생 합니다는 <xref:System.Windows.Forms.HtmlDocument>설정 하지 않으면 클래스 자체는 <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>의 속성은 <xref:System.Windows.Forms.HtmlElementEventArgs>클래스를 `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 [DHTML 개체 모델에 대 한](http://msdn.microsoft.com/library/ms533022.aspx)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the KeyUp event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the KeyUp event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#444](~/add/codesnippet/csharp/e-system.windows.forms.h_3_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#444](~/add/codesnippet/visualbasic/e-system.windows.forms.h_3_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler KeyUp;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.LosingFocus
  id: LosingFocus
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: LosingFocus
  nameWithType: HtmlElement.LosingFocus
  fullName: System.Windows.Forms.HtmlElement.LosingFocus
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "요소는 사용자 입력된 포커스를 잃을 때 발생 합니다."
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the LosingFocus event. This report helps you to learn when the event occurs and can assist you in debugging.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the LosingFocus event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#440](~/add/codesnippet/csharp/e-system.windows.forms.h_12_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#440](~/add/codesnippet/visualbasic/e-system.windows.forms.h_12_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler LosingFocus;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.LostFocus
  id: LostFocus
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: LostFocus
  nameWithType: HtmlElement.LostFocus
  fullName: System.Windows.Forms.HtmlElement.LostFocus
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "요소는 사용자 입력된 포커스가 사라질 때 발생 합니다."
  remarks: "요소 키 입력 이벤트 LostFocus 지정 포커스 다시 페이지에서 선택 하는 사용자 또는 응용 프로그램 호출 될 때까지 발생 한 후에 더 이상 받지 것입니다는 <xref:System.Windows.Forms.HtmlElement.Focus%2A>해당 요소에 대해 메서드.</xref:System.Windows.Forms.HtmlElement.Focus%2A>       이 이벤트를 취소할 수 없습니다.       요소에 대 한 LostFocus 이벤트는 해당 요소의 부모 및에 발생 합니다는 <xref:System.Windows.Forms.HtmlDocument>설정 하지 않으면 클래스 자체는 <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>의 속성은 <xref:System.Windows.Forms.HtmlElementEventArgs>클래스를 `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 [DHTML 개체 모델에 대 한](http://msdn.microsoft.com/library/ms533022.aspx)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the LostFocus event. This report helps you to learn when the event occurs and can assist you in debugging.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the LostFocus event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#441](~/add/codesnippet/csharp/e-system.windows.forms.h_0_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#441](~/add/codesnippet/visualbasic/e-system.windows.forms.h_0_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler LostFocus;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.MouseDown
  id: MouseDown
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: MouseDown
  nameWithType: HtmlElement.MouseDown
  fullName: System.Windows.Forms.HtmlElement.MouseDown
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "사용자가 마우스 단추를 누를 때 발생 합니다."
  remarks: "설정 하 여 요소에 MouseDown 이벤트에 대 한 기본 동작을 취소할 수는 <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>의 속성은 <xref:System.Windows.Forms.HtmlElementEventArgs>클래스를 `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>       요소에 MouseDown 이벤트에는 해당 요소의 부모 요소와도 발생 합니다는 <xref:System.Windows.Forms.HtmlDocument>설정 하지 않으면 클래스 자체는 <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>의 속성은 <xref:System.Windows.Forms.HtmlElementEventArgs>클래스를 `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 [DHTML 개체 모델에 대 한](http://msdn.microsoft.com/library/ms533022.aspx)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseDown event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the MouseDown event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#446](~/add/codesnippet/csharp/e-system.windows.forms.h_32_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#446](~/add/codesnippet/visualbasic/e-system.windows.forms.h_32_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler MouseDown;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.MouseEnter
  id: MouseEnter
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: MouseEnter
  nameWithType: HtmlElement.MouseEnter
  fullName: System.Windows.Forms.HtmlElement.MouseEnter
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "현재 요소 위에 마우스 커서를 처음 이동 하면 발생 합니다."
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseEnter event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the MouseEnter event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#449](~/add/codesnippet/csharp/e-system.windows.forms.h_28_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#449](~/add/codesnippet/visualbasic/e-system.windows.forms.h_28_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler MouseEnter;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.MouseLeave
  id: MouseLeave
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: MouseLeave
  nameWithType: HtmlElement.MouseLeave
  fullName: System.Windows.Forms.HtmlElement.MouseLeave
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "마우스 커서가 현재 요소를 벗어나 이동할 때 발생 합니다."
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseLeave event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the MouseLeave event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#450](~/add/codesnippet/csharp/e-system.windows.forms.h_33_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#450](~/add/codesnippet/visualbasic/e-system.windows.forms.h_33_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler MouseLeave;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.MouseMove
  id: MouseMove
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: MouseMove
  nameWithType: HtmlElement.MouseMove
  fullName: System.Windows.Forms.HtmlElement.MouseMove
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "요소에서 마우스 커서를 이동할 때 발생 합니다."
  remarks: "이 이벤트를 취소할 수 없습니다.       요소에 MouseMove 이벤트에는 해당 요소의 부모 요소와도 발생 합니다는 <xref:System.Windows.Forms.HtmlDocument>설정 하지 않으면 클래스 자체는 <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>의 속성은 <xref:System.Windows.Forms.HtmlElementEventArgs>클래스를 `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 [DHTML 개체 모델에 대 한](http://msdn.microsoft.com/library/ms533022.aspx)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseMove event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the MouseMove event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#445](~/add/codesnippet/csharp/e-system.windows.forms.h_15_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#445](~/add/codesnippet/visualbasic/e-system.windows.forms.h_15_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler MouseMove;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.MouseOver
  id: MouseOver
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: MouseOver
  nameWithType: HtmlElement.MouseOver
  fullName: System.Windows.Forms.HtmlElement.MouseOver
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "마우스 커서가 요소의 영역 안으로 들어가면 발생 합니다."
  remarks: "설정 하 여 요소에 MouseOver 이벤트에 대 한 기본 동작을 취소할 수는 <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>의 속성은 <xref:System.Windows.Forms.HtmlElementEventArgs>클래스를 `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>       요소에 MouseOver 이벤트에는 해당 요소의 부모 요소와도 발생 합니다는 <xref:System.Windows.Forms.HtmlDocument>설정 하지 않으면 클래스 자체는 <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>의 속성은 <xref:System.Windows.Forms.HtmlElementEventArgs>클래스를 `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 [DHTML 개체 모델에 대 한](http://msdn.microsoft.com/library/ms533022.aspx)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseOver event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the MouseOver event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#447](~/add/codesnippet/csharp/e-system.windows.forms.h_29_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#447](~/add/codesnippet/visualbasic/e-system.windows.forms.h_29_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler MouseOver;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.MouseUp
  id: MouseUp
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: MouseUp
  nameWithType: HtmlElement.MouseUp
  fullName: System.Windows.Forms.HtmlElement.MouseUp
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "사용자가 마우스 단추를 놓을 때 발생 합니다."
  remarks: "설정 하 여 요소에 MouseUp 이벤트에 대 한 기본 동작을 취소할 수는 <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>의 속성은 <xref:System.Windows.Forms.HtmlElementEventArgs>클래스를 `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>       요소에 MouseUp 이벤트에는 해당 요소의 부모 요소와도 발생 합니다는 <xref:System.Windows.Forms.HtmlDocument>설정 하지 않으면 클래스 자체는 <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>의 속성은 <xref:System.Windows.Forms.HtmlElementEventArgs>클래스를 `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       이벤트에 대 한 기본 작업 취소와 이벤트 버블링 취소 차이점에 대 한 자세한 내용은 참조 [DHTML 개체 모델에 대 한](http://msdn.microsoft.com/library/ms533022.aspx)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseUp event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the MouseUp event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#448](~/add/codesnippet/csharp/e-system.windows.forms.h_17_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#448](~/add/codesnippet/visualbasic/e-system.windows.forms.h_17_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler MouseUp;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.Name
  id: Name
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: Name
  nameWithType: HtmlElement.Name
  fullName: System.Windows.Forms.HtmlElement.Name
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "요소의 이름을 가져오거나 설정 합니다."
  remarks: "Name 속성을 사용 하 여 <xref:System.Windows.Forms.HtmlElementCollection.GetElementsByName%2A> <xref:System.Windows.Forms.HtmlElement.All%2A> <xref:System.Windows.Forms.HtmlDocument>안내 하십시오.</xref:System.Windows.Forms.HtmlDocument> 속성</xref:System.Windows.Forms.HtmlElement.All%2A> 에서 메서드</xref:System.Windows.Forms.HtmlElementCollection.GetElementsByName%2A> 를 사용 하 여 문서에서 요소를 검색 하지       에 적용 될 때 `INPUT` 요소 이름은 정의 하는 해당 요소의 데이터에 대 한 변수 이름을 해당 폼이 서버에 전송 될 때입니다."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>요소의 이름을 나타내는.</xref:System.String>"
  overload: System.Windows.Forms.HtmlElement.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.NextSibling
  id: NextSibling
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: NextSibling
  nameWithType: HtmlElement.NextSibling
  fullName: System.Windows.Forms.HtmlElement.NextSibling
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "문서 트리에서이 요소와 동일한 수준의 다음 요소를 가져옵니다."
  remarks: "NextSibling와 함께에서 사용 하 여 <xref:System.Windows.Forms.HtmlElement.FirstChild%2A>HTML 요소에 대 한 문서 트리를 탐색 하.</xref:System.Windows.Forms.HtmlElement.FirstChild%2A>"
  syntax:
    content: public System.Windows.Forms.HtmlElement NextSibling { get; }
    return:
      type: System.Windows.Forms.HtmlElement
      description: "<xref href=&quot;System.Windows.Forms.HtmlElement&quot;> </xref> 현재 요소의 오른쪽에 요소를 나타내는입니다."
  overload: System.Windows.Forms.HtmlElement.NextSibling*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.OffsetParent
  id: OffsetParent
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: OffsetParent
  nameWithType: HtmlElement.OffsetParent
  fullName: System.Windows.Forms.HtmlElement.OffsetParent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "요소를 가져옵니다 <xref:System.Windows.Forms.HtmlElement.OffsetRectangle*>계산 됩니다.</xref:System.Windows.Forms.HtmlElement.OffsetRectangle*>"
  remarks: "요소는 다음 세 가지 방법 중 하나에서 HTML 페이지에 배치 될 수 있습니다: 기본 흐름 위치; 상대 위치 일정량; 부모에 상대적인 오프셋 되는 요소에 및 절대 위치는 요소가 지정 되는 고정 문서의 왼쪽 위 모퉁이 기준으로 위치를 조정 합니다.       문서 요소가 상대 또는 절대 위치를 사용 하는 경우 사용할 수 있습니다 `OffsetParent` 클라이언트 영역 내에서 요소의 좌표 위치를 계산 하 합니다.       요소에 대 한 자세한 내용은 참조 HTML의 위치 지정 [요소 위치 지정에 대 한](http://msdn.microsoft.com/library/ms533005.aspx)합니다."
  example:
  - "The following code example shows how OffsetParent and <xref:System.Windows.Forms.HtmlElement.OffsetRectangle%2A> differ for `span1`, `span2` and `span3`:  \n  \n```  \n<HTML>  \n    <BODY id=\"documentBody\">  \n  \n        <DIV id=\"div1\">  \n            <SPAN id=\"span1\">Placeholder text 1.</SPAN>  \n        </DIV>  \n  \n        <DIV id=\"div2\" style=\"position:relative;top:100px;left:100px;\">  \n            <SPAN id=\"span2\">Placeholder text 2.</SPAN>  \n        </DIV>  \n  \n        <DIV id=\"div3\" style=\"position:absolute;top:200px;left:200px;\">  \n            <DIV id=\"div4\" style=\"position:relative;top:100px;left:100px;\">  \n                <SPAN id=\"span3\">Placeholder text 3.</SPAN>  \n            </DIV>  \n        </DIV>  \n  \n    </BODY>  \n</HTML>  \n```  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#6](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#6)]\n [!code-cs[System.Windows.Forms.HtmlElement#6](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#6)]"
  syntax:
    content: public System.Windows.Forms.HtmlElement OffsetParent { get; }
    return:
      type: System.Windows.Forms.HtmlElement
      description: "오프셋이 계산 된 요소입니다.       요소의 부모 또는 요소의 계층에 다른 요소가 상대 또는 절대 위치를 사용 하는 경우 <xref uid=&quot;langword_csharp_OffsetParent&quot; name=&quot;OffsetParent&quot; href=&quot;&quot;> </xref> 현재 요소가 중첩 된 첫 번째 상대 위치 또는 절대 위치로 지정 된 요소 수 있습니다. 현재 요소 위에 요소는 절대적 또는 상대적으로 배치 되 면, <xref uid=&quot;langword_csharp_OffsetParent&quot; name=&quot;OffsetParent&quot; href=&quot;&quot;> </xref> 됩니다는 `BODY` 문서 태그입니다."
  overload: System.Windows.Forms.HtmlElement.OffsetParent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.OffsetRectangle
  id: OffsetRectangle
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: OffsetRectangle
  nameWithType: HtmlElement.OffsetRectangle
  fullName: System.Windows.Forms.HtmlElement.OffsetRectangle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "요소의 부모에 상대적인 위치를 가져옵니다."
  remarks: "요소는 다음 세 가지 방법 중 하나에서 HTML 페이지에 배치 될 수 있습니다.-기본 흐름 위치입니다.      -상대 위치 일정량 부모에 상대적인 오프셋 되는 요소에 있습니다.      -절대 위치는 요소가 지정 되는 고정 문서의 왼쪽 위 모퉁이 기준으로 위치를 조정 합니다.       요소에 대 한 자세한 내용은 참조 HTML의 위치 지정 [요소 위치 지정에 대 한](http://msdn.microsoft.com/library/ms533005.aspx)합니다."
  example:
  - "The following code example shows how <xref:System.Windows.Forms.HtmlElement.OffsetParent%2A> and OffsetRectangle differ for `span1`, `span2` and `span3`:  \n  \n```  \n<HTML>  \n    <BODY id=\"documentBody\">  \n  \n        <DIV id=\"div1\">  \n            <SPAN id=\"span1\">Placeholder text 1.</SPAN>  \n        </DIV>  \n  \n        <DIV id=\"div2\" style=\"position:relative;top:100px;left:100px;\">  \n            <SPAN id=\"span2\">Placeholder text 2.</SPAN>  \n        </DIV>  \n  \n        <DIV id=\"div3\" style=\"position:absolute;top:200px;left:200px;\">  \n            <DIV id=\"div4\" style=\"position:relative;top:100px;left:100px;\">  \n                <SPAN id=\"span3\">Placeholder text 3.</SPAN>  \n            </DIV>  \n        </DIV>  \n  \n    </BODY>  \n</HTML>  \n```  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#6](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#6)]\n [!code-cs[System.Windows.Forms.HtmlElement#6](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#6)]"
  syntax:
    content: public System.Drawing.Rectangle OffsetRectangle { get; }
    return:
      type: System.Drawing.Rectangle
      description: "요소 및 너비 및 높이가 해당 부모와 관련 하 여의 x 및 y 좌표 위치입니다.       요소의 부모가 상대 위치 또는 절대 등가 있을 경우 OffsetRectangle 부모 요소의 오프셋을 반환 합니다. 요소 자체가 상대적으로 해당 부모와 관련 하 여 위치, OffsetRectangle 부모에서 오프셋을 반환 합니다."
  overload: System.Windows.Forms.HtmlElement.OffsetRectangle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.op_Equality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)
  id: op_Equality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: op_Equality(HtmlElement,HtmlElement)
  nameWithType: HtmlElement.op_Equality(HtmlElement,HtmlElement)
  fullName: System.Windows.Forms.HtmlElement.op_Equality(HtmlElement,HtmlElement)
  type: Operator
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "두 요소가 같은지 비교합니다."
  remarks: "같음 연산자 테스트는 `IUnknown` 제공 된로 래핑된 내부 COM 개체의 포인터 <xref:System.Windows.Forms.HtmlElement>클래스.</xref:System.Windows.Forms.HtmlElement>"
  syntax:
    content: public static bool op_Equality (System.Windows.Forms.HtmlElement left, System.Windows.Forms.HtmlElement right);
    parameters:
    - id: left
      type: System.Windows.Forms.HtmlElement
      description: "첫 번째 <xref href=&quot;System.Windows.Forms.HtmlElement&quot;> </xref>합니다."
    - id: right
      type: System.Windows.Forms.HtmlElement
      description: "두 번째 <xref href=&quot;System.Windows.Forms.HtmlElement&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>매개 변수가 모두 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 아니면 두 요소 모두 같은 내부 COM 인터페이스가; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.HtmlElement.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.op_Inequality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)
  id: op_Inequality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: op_Inequality(HtmlElement,HtmlElement)
  nameWithType: HtmlElement.op_Inequality(HtmlElement,HtmlElement)
  fullName: System.Windows.Forms.HtmlElement.op_Inequality(HtmlElement,HtmlElement)
  type: Operator
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "두 <xref href=&quot;System.Windows.Forms.HtmlElement&quot;> </xref> 개체가 다른 지 비교 합니다."
  syntax:
    content: public static bool op_Inequality (System.Windows.Forms.HtmlElement left, System.Windows.Forms.HtmlElement right);
    parameters:
    - id: left
      type: System.Windows.Forms.HtmlElement
      description: "첫 번째 <xref href=&quot;System.Windows.Forms.HtmlElement&quot;> </xref>합니다."
    - id: right
      type: System.Windows.Forms.HtmlElement
      description: "두 번째 <xref href=&quot;System.Windows.Forms.HtmlElement&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>요소가 하나만 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 또는 두 개체가 같고, 그렇지 않으면 없는 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.HtmlElement.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.OuterHtml
  id: OuterHtml
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: OuterHtml
  nameWithType: HtmlElement.OuterHtml
  fullName: System.Windows.Forms.HtmlElement.OuterHtml
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "현재 요소의 HTML 코드를 가져오거나 설정 합니다."
  remarks: "OuterHtml 태그가 포함 된 HTML 뿐만 아니라 현재 요소의 태그 포함 <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>현재 요소의 주변 태그를 제외 하 고 현재 요소에 포함 된 모든 HTML를 다시 표시 하는 반면: `<HTML>` `<BODY>` `<DIV id=&quot;div1&quot;>` `Hello` `<DIV id=&quot;div2&quot;>` `World` `<DIV id=&quot;div3&quot;>` `How are you?` `</DIV>` `</DIV>` `</DIV>` `</BODY>` `</HTML>` OuterHtml에서 호출 하는이 예제에서는 `div2` 반환 합니다: `<DIV id=&quot;div2&quot;>` `World` `<DIV id=&quot;div3&quot;>` `How are you?` `</DIV>` `</DIV>` <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>호출 반환 합니다: `World` `<DIV id=&quot;div3&quot;>` `How are you?` `</DIV>` OuterHtml에 새 값을 할당 하는 경우 현재 요소 참조가 유효 하지 않게 됩니다; 이름을 반영 되지 것입니다 속성 및 자식 콘텐츠를 html 할당 했습니다.                     </xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>                                                                                                                        </xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>"
  syntax:
    content: public string OuterHtml { get; set; }
    return:
      type: System.String
      description: "현재 요소 및 자식 함수에 대 한 HTML 코드입니다."
  overload: System.Windows.Forms.HtmlElement.OuterHtml*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.OuterText
  id: OuterText
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: OuterText
  nameWithType: HtmlElement.OuterText
  fullName: System.Windows.Forms.HtmlElement.OuterText
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "현재 요소의 텍스트를 가져오거나 설정 합니다."
  remarks: "HTML 요소 OuterText에 할당 하려고 하면 한 경우 처럼 텍스트 파일 내에서 HTML을 보는 HTML 코드는 문서에 리터럴로 표시 됩니다. HTML을 할당 하면 사용 하 여 요소는 <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>속성 OuterText 모든 반환 텍스트의 HTML 태그를 제거 한다는 점에서.</xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>       OuterText에 값을 할당 요소에 속하는 모든 자식 요소를 삭제 합니다."
  syntax:
    content: public string OuterText { get; set; }
    return:
      type: System.String
      description: "현재 요소와 자식 요소에에서 텍스트를 사용 합니다."
  overload: System.Windows.Forms.HtmlElement.OuterText*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "이 요소 외부에서 텍스트를 설정할 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.Parent
  id: Parent
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: Parent
  nameWithType: HtmlElement.Parent
  fullName: System.Windows.Forms.HtmlElement.Parent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "현재 요소의 부모 요소를 가져옵니다."
  remarks: "부모 속성은 요소의 컨텍스트를 검색할 수 있도록 합니다. 가장 유용 이벤트 처리기 내에서 같은 <xref:System.Windows.Forms.HtmlElement.Click>, 문서의 개체 계층 구조에 있는 모든 요소에 대해 발생할 수 있는.</xref:System.Windows.Forms.HtmlElement.Click>       HTML 요소 (HTML 문서의 최상위)의 Parent 속성 자신에 게 다시 가리킵니다. 루프 내 부모를 호출 하는 경우 루프의 중단 조건 비교의 형식과 현재 요소의 형식이 있는지 확인은 `Parent` 코드 속성, 그렇지 않으면 무한 루프가 실행 될 수 있습니다."
  example:
  - "The following code example finds all of the `IMG` tags in a document, and uses the Parent property to test whether the `IMG` is hyperlinked to another page; if it is, the code assigns the URL to the `ALT` attribute of the `IMG` tag, so that users can mouse over the image to see where it will take them.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#7](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#7)]\n [!code-cs[System.Windows.Forms.HtmlElement#7](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#7)]"
  syntax:
    content: public System.Windows.Forms.HtmlElement Parent { get; }
    return:
      type: System.Windows.Forms.HtmlElement
      description: "HTML 문서의 계층의 현재 요소 위에 있는 요소입니다."
  overload: System.Windows.Forms.HtmlElement.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.RaiseEvent(System.String)
  id: RaiseEvent(System.String)
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: RaiseEvent(String)
  nameWithType: HtmlElement.RaiseEvent(String)
  fullName: System.Windows.Forms.HtmlElement.RaiseEvent(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "명명된 된 이벤트를 모든 등록 된 이벤트 처리기를 호출 하면 됩니다."
  remarks: "이 메서드는 HTML 문서 개체 모델 (DOM) 이벤트에 액세스 하는 합니다. 직접 호출 된 [IHTMLElement3::fireEvent](http://go.microsoft.com/fwlink/?LinkId=103189) 메서드. 통해 DOM을 사용 하는 방법에 대 한 자세한 내용은 <xref:System.Windows.Forms.HtmlElement>클래스를 참조 하십시오. [관리 되는 HTML 문서 개체 모델에서 노출 되지 않은 멤버에 액세스](~/add/includes/ajax-current-ext-md.md).</xref:System.Windows.Forms.HtmlElement>"
  syntax:
    content: public void RaiseEvent (string eventName);
    parameters:
    - id: eventName
      type: System.String
      description: "발생 시킬 이벤트의 이름입니다."
  overload: System.Windows.Forms.HtmlElement.RaiseEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.RemoveFocus
  id: RemoveFocus
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: RemoveFocus()
  nameWithType: HtmlElement.RemoveFocus()
  fullName: System.Windows.Forms.HtmlElement.RemoveFocus()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "해당 요소에 포커스가 있으면 현재 요소에서 제거 집중 합니다."
  remarks: "이 메서드 호출의 <xref:System.Windows.Forms.HtmlElement.LostFocus>요소에 대 한 이벤트입니다.</xref:System.Windows.Forms.HtmlElement.LostFocus>       이 메서드를 사용 하 여 요소에서 포커스를 지우면 하지를 탭 순서의 다음 요소로 요소를 포함 하는 문서에 제공 됩니다."
  syntax:
    content: public void RemoveFocus ();
    parameters: []
  overload: System.Windows.Forms.HtmlElement.RemoveFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.ScrollIntoView(System.Boolean)
  id: ScrollIntoView(System.Boolean)
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: ScrollIntoView(Boolean)
  nameWithType: HtmlElement.ScrollIntoView(Boolean)
  fullName: System.Windows.Forms.HtmlElement.ScrollIntoView(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 요소의 위쪽 또는 아래쪽 가장자리가 문서 창과 맞춰 될 때까지이 요소를 포함 하는 문서를 스크롤."
  remarks: ''
  example:
  - "The following code example finds an element by name and scrolls through the page so that the top of the element is aligned with the top of the visible page.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#12](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#12)]\n [!code-cs[System.Windows.Forms.HtmlElement#12](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#12)]"
  syntax:
    content: public void ScrollIntoView (bool alignWithTop);
    parameters:
    - id: alignWithTop
      type: System.Boolean
      description: "경우 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, 개체의 위쪽 창의 위쪽에 표시 됩니다. 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, 개체의 아래쪽 창의 맨 아래에 표시 됩니다."
  overload: System.Windows.Forms.HtmlElement.ScrollIntoView*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.ScrollLeft
  id: ScrollLeft
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: ScrollLeft
  nameWithType: HtmlElement.ScrollLeft
  fullName: System.Windows.Forms.HtmlElement.ScrollLeft
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "요소의 가장자리와 내용의 왼쪽된 가장자리 사이의 거리를 가져오거나 설정 합니다."
  remarks: "전체 크기 스크롤 영역에 <xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A>;를 사용 하 여 사용할 수 있습니다 `ScrollLeft` 및 <xref:System.Windows.Forms.HtmlElement.ScrollTop%2A>노출 됩니다 하지 독립적으로 이러한은 개발자가 설정할 수 있는 스크롤 영역의 두 개의 속성이.</xref:System.Windows.Forms.HtmlElement.ScrollTop%2A> </xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A>"
  syntax:
    content: public int ScrollLeft { get; set; }
    return:
      type: System.Int32
      description: "픽셀 내용의 왼쪽된 가장자리와 요소 내용의 왼쪽된 가장자리 사이의 거리입니다."
  overload: System.Windows.Forms.HtmlElement.ScrollLeft*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.ScrollRectangle
  id: ScrollRectangle
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: ScrollRectangle
  nameWithType: HtmlElement.ScrollRectangle
  fullName: System.Windows.Forms.HtmlElement.ScrollRectangle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "요소의 스크롤 가능한 영역의 크기를 가져옵니다."
  remarks: "요소는 요소에 대해 오버플로 스타일 렌더링 스크롤 막대를 금지 하지 않는 한 해당 차원의 크기를 초과 스크롤 가능한 영역을 포함할 합니다.       를 직접 스크롤 영역 크기를 수정할 수는 없지만 요소의 가장자리와 스크롤 영역 가장자리 사이의 거리를 수정할 수 있습니다. 사용 하 여는 <xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A>및 <xref:System.Windows.Forms.HtmlElement.ScrollTop%2A>이 작업을 수행할 속성.</xref:System.Windows.Forms.HtmlElement.ScrollTop%2A> </xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A>"
  syntax:
    content: public System.Drawing.Rectangle ScrollRectangle { get; }
    return:
      type: System.Drawing.Rectangle
      description: "요소의 스크롤 가능한 영역의 크기 및 좌표 위치입니다."
  overload: System.Windows.Forms.HtmlElement.ScrollRectangle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.ScrollTop
  id: ScrollTop
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: ScrollTop
  nameWithType: HtmlElement.ScrollTop
  fullName: System.Windows.Forms.HtmlElement.ScrollTop
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "요소의 가장자리와 해당 내용의 위쪽 가장자리 사이의 거리를 가져오거나 설정 합니다."
  remarks: "전체 크기 스크롤 영역에 <xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A>;를 사용 하 여 사용할 수 있습니다 <xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A>및 `ScrollTop` 노출 됩니다 하지 독립적으로 이러한은 개발자가 설정할 수 있는 스크롤 영역의 두 개의 속성이.</xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A> </xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A>"
  syntax:
    content: public int ScrollTop { get; set; }
    return:
      type: System.Int32
      description: "요소의 위쪽 가장자리와 해당 내용의 위쪽 가장자리 사이의 픽셀 거리입니다."
  overload: System.Windows.Forms.HtmlElement.ScrollTop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)
  id: SetAttribute(System.String,System.String)
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: SetAttribute(String,String)
  nameWithType: HtmlElement.SetAttribute(String,String)
  fullName: System.Windows.Forms.HtmlElement.SetAttribute(String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "요소에는 명명 된 특성의 값을 설정 합니다."
  remarks: "Html에서 특성에 해당 요소에 대 한 올바른 이름-값 쌍입니다. <xref:System.Windows.Forms.HtmlElement>특정 유형의 요소에만 적용 되는 모든 요소에 공통 되는 특성에만 노출 `SRC` 에 대 한 미리 정의 된 특성이 `IMG` 예를 들어 태그에 대 한는 `DIV` 태그입니다.</xref:System.Windows.Forms.HtmlElement> 사용 하 여 <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A>및에 관리 되는 DOM 문서 개체 모델 ()를 노출 되지 않은 특성을 조작 하는 SetAttribute.</xref:System.Windows.Forms.HtmlElement.GetAttribute%2A>       경우 `attributeName` 정의 된 특성이 없는 요소에 SetAttribute에 정의 합니다 요소에 새 특성으로 합니다.       <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A>및 SetAttribute 소문자를 구분 합니다.</xref:System.Windows.Forms.HtmlElement.GetAttribute%2A>       설정 하는 `class` 특성에 <xref:System.Windows.Forms.HtmlElement>, 특성으로 참조 해야 `className` SetAttribute 첫 번째 인수를 지정 하는 경우</xref:System.Windows.Forms.HtmlElement>"
  example:
  - "The following code example adds a new `IMG` element to the current document, using SetAttribute to set the `SRC` attribute for the image.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#13](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#13)]\n [!code-cs[System.Windows.Forms.HtmlElement#13](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#13)]"
  syntax:
    content: public void SetAttribute (string attributeName, string value);
    parameters:
    - id: attributeName
      type: System.String
      description: "설정할 특성의 이름입니다."
    - id: value
      type: System.String
      description: "이 특성의 새 값입니다."
  overload: System.Windows.Forms.HtmlElement.SetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.Style
  id: Style
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: Style
  nameWithType: HtmlElement.Style
  fullName: System.Windows.Forms.HtmlElement.Style
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "현재 요소에 대 한 스타일 세미콜론으로 구분 된 목록을 가져오거나 설정 합니다."
  remarks: "HTML 문서 개체 모델 (DOM)를 사용 하 여 스타일 World Wide Web 협회 연계 스타일 시트 사양에 정의 된 대로 요소의 표시를 제어 합니다. 스타일 속성에는 스타일 이름-값 쌍으로 구분 된 각 쌍이 다음과 같이 세미콜론으로 구분 된 큐인지: `style-name1:value1;...;[style-nameN:valueN;]` 에 대 한 글꼴을 설정 하는 `DIV` 14pt 바탕으로 굵게 표시 된 요소, 예를 들어 할당할 때 다음과 같은 문자열: `font-face:Times New Roman;font-size:14px;font-weight:bold;` HTML DOM에서 모든 사용 가능한 스타일의 전체 목록을 참조 하십시오. [스타일 특성](http://msdn.microsoft.com/library/ms534651.aspx)합니다."
  syntax:
    content: public string Style { get; set; }
    return:
      type: System.String
      description: "구성 된 모든 요소의 스타일 문자열"
  overload: System.Windows.Forms.HtmlElement.Style*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.TabIndex
  id: TabIndex
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: TabIndex
  nameWithType: HtmlElement.TabIndex
  fullName: System.Windows.Forms.HtmlElement.TabIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "탭 순서에서이 요소의 위치를 가져오거나 설정 합니다."
  remarks: "TabIndex 요소는 HTML 문서에는 TAB 키를 누를 때 포커스를 받을 다음 결정 합니다. 탭 순서에 포함 된 요소만 기본적으로 `INPUT` 요소는 `SELECT` 제어 및 모든 요소를 `contentEditable` 속성이로 설정 되어 `true`합니다. 탭 순서에서 같은 HTML 요소를 포함할 수는 `DIV`, 명시적 TabIndex을 할당 합니다.       32767 사이의 32767 TabIndex 범위에 대 한 유효한 값입니다."
  syntax:
    content: public short TabIndex { get; set; }
    return:
      type: System.Int16
      description: "탭 순서에 있는 요소의 숫자 인덱스입니다."
  overload: System.Windows.Forms.HtmlElement.TabIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.TagName
  id: TagName
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: TagName
  nameWithType: HtmlElement.TagName
  fullName: System.Windows.Forms.HtmlElement.TagName
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "HTML 태그의 이름을 가져옵니다."
  remarks: "HTML 문서 개체 모델의 많은 요소에는 특성, 속성 및 해당 요소에 고유한 메서드 와 같은 `HREF` 특성에 `A` 요소 또는 `Submit` 메서드를 `FORM`합니다. 임의 형식의 요소를 있고 특정 형식의 작업을 수행 해야 하는 경우에 TagName를 사용 합니다."
  example:
  - "The following code example finds all of the `IMG` tags in a document, and uses the `TagName` property to test whether the `IMG` is hyperlinked to another page; if it is, the code assigns the URL to the `ALT` attribute of the `IMG` tag, so that users can mouse over the image to see where it will take them.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#7](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#7)]\n [!code-cs[System.Windows.Forms.HtmlElement#7](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#7)]"
  syntax:
    content: public string TagName { get; }
    return:
      type: System.String
      description: "HTML 태그를 사용 하 여이 요소를 만드는 데 사용 되는 이름입니다."
  overload: System.Windows.Forms.HtmlElement.TagName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Windows.Forms.HtmlElement.All
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: All
  nameWithType: HtmlElement.All
  fullName: System.Windows.Forms.HtmlElement.All
- uid: System.Windows.Forms.HtmlElementCollection
  parent: System.Windows.Forms
  isExternal: false
  name: HtmlElementCollection
  nameWithType: HtmlElementCollection
  fullName: System.Windows.Forms.HtmlElementCollection
- uid: System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: AppendChild(HtmlElement)
  nameWithType: HtmlElement.AppendChild(HtmlElement)
  fullName: System.Windows.Forms.HtmlElement.AppendChild(HtmlElement)
- uid: System.Windows.Forms.HtmlElement
  parent: System.Windows.Forms
  isExternal: false
  name: HtmlElement
  nameWithType: HtmlElement
  fullName: System.Windows.Forms.HtmlElement
- uid: System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: AttachEventHandler(String,EventHandler)
  nameWithType: HtmlElement.AttachEventHandler(String,EventHandler)
  fullName: System.Windows.Forms.HtmlElement.AttachEventHandler(String,EventHandler)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.HtmlElement.CanHaveChildren
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: CanHaveChildren
  nameWithType: HtmlElement.CanHaveChildren
  fullName: System.Windows.Forms.HtmlElement.CanHaveChildren
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.HtmlElement.Children
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Children
  nameWithType: HtmlElement.Children
  fullName: System.Windows.Forms.HtmlElement.Children
- uid: System.Windows.Forms.HtmlElement.Click
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Click
  nameWithType: HtmlElement.Click
  fullName: System.Windows.Forms.HtmlElement.Click
- uid: System.Windows.Forms.HtmlElementEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: HtmlElementEventHandler
  nameWithType: HtmlElementEventHandler
  fullName: System.Windows.Forms.HtmlElementEventHandler
- uid: System.Windows.Forms.HtmlElement.ClientRectangle
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: ClientRectangle
  nameWithType: HtmlElement.ClientRectangle
  fullName: System.Windows.Forms.HtmlElement.ClientRectangle
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.HtmlElement.DetachEventHandler(System.String,System.EventHandler)
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: DetachEventHandler(String,EventHandler)
  nameWithType: HtmlElement.DetachEventHandler(String,EventHandler)
  fullName: System.Windows.Forms.HtmlElement.DetachEventHandler(String,EventHandler)
- uid: System.Windows.Forms.HtmlElement.Document
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Document
  nameWithType: HtmlElement.Document
  fullName: System.Windows.Forms.HtmlElement.Document
- uid: System.Windows.Forms.HtmlDocument
  parent: System.Windows.Forms
  isExternal: false
  name: HtmlDocument
  nameWithType: HtmlDocument
  fullName: System.Windows.Forms.HtmlDocument
- uid: System.Windows.Forms.HtmlElement.DomElement
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: DomElement
  nameWithType: HtmlElement.DomElement
  fullName: System.Windows.Forms.HtmlElement.DomElement
- uid: System.Windows.Forms.HtmlElement.DoubleClick
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: DoubleClick
  nameWithType: HtmlElement.DoubleClick
  fullName: System.Windows.Forms.HtmlElement.DoubleClick
- uid: System.Windows.Forms.HtmlElement.Drag
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Drag
  nameWithType: HtmlElement.Drag
  fullName: System.Windows.Forms.HtmlElement.Drag
- uid: System.Windows.Forms.HtmlElement.DragEnd
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: DragEnd
  nameWithType: HtmlElement.DragEnd
  fullName: System.Windows.Forms.HtmlElement.DragEnd
- uid: System.Windows.Forms.HtmlElement.DragLeave
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: DragLeave
  nameWithType: HtmlElement.DragLeave
  fullName: System.Windows.Forms.HtmlElement.DragLeave
- uid: System.Windows.Forms.HtmlElement.DragOver
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: DragOver
  nameWithType: HtmlElement.DragOver
  fullName: System.Windows.Forms.HtmlElement.DragOver
- uid: System.Windows.Forms.HtmlElement.Enabled
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Enabled
  nameWithType: HtmlElement.Enabled
  fullName: System.Windows.Forms.HtmlElement.Enabled
- uid: System.Windows.Forms.HtmlElement.Equals(System.Object)
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Equals(Object)
  nameWithType: HtmlElement.Equals(Object)
  fullName: System.Windows.Forms.HtmlElement.Equals(Object)
- uid: System.Windows.Forms.HtmlElement.FirstChild
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: FirstChild
  nameWithType: HtmlElement.FirstChild
  fullName: System.Windows.Forms.HtmlElement.FirstChild
- uid: System.Windows.Forms.HtmlElement.Focus
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Focus()
  nameWithType: HtmlElement.Focus()
  fullName: System.Windows.Forms.HtmlElement.Focus()
- uid: System.Windows.Forms.HtmlElement.Focusing
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Focusing
  nameWithType: HtmlElement.Focusing
  fullName: System.Windows.Forms.HtmlElement.Focusing
- uid: System.Windows.Forms.HtmlElement.GetAttribute(System.String)
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: GetAttribute(String)
  nameWithType: HtmlElement.GetAttribute(String)
  fullName: System.Windows.Forms.HtmlElement.GetAttribute(String)
- uid: System.Windows.Forms.HtmlElement.GetElementsByTagName(System.String)
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: GetElementsByTagName(String)
  nameWithType: HtmlElement.GetElementsByTagName(String)
  fullName: System.Windows.Forms.HtmlElement.GetElementsByTagName(String)
- uid: System.Windows.Forms.HtmlElement.GetHashCode
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: GetHashCode()
  nameWithType: HtmlElement.GetHashCode()
  fullName: System.Windows.Forms.HtmlElement.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.HtmlElement.GotFocus
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: GotFocus
  nameWithType: HtmlElement.GotFocus
  fullName: System.Windows.Forms.HtmlElement.GotFocus
- uid: System.Windows.Forms.HtmlElement.Id
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Id
  nameWithType: HtmlElement.Id
  fullName: System.Windows.Forms.HtmlElement.Id
- uid: System.Windows.Forms.HtmlElement.InnerHtml
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: InnerHtml
  nameWithType: HtmlElement.InnerHtml
  fullName: System.Windows.Forms.HtmlElement.InnerHtml
- uid: System.Windows.Forms.HtmlElement.InnerText
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: InnerText
  nameWithType: HtmlElement.InnerText
  fullName: System.Windows.Forms.HtmlElement.InnerText
- uid: System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: InsertAdjacentElement(HtmlElementInsertionOrientation,HtmlElement)
  nameWithType: HtmlElement.InsertAdjacentElement(HtmlElementInsertionOrientation,HtmlElement)
  fullName: System.Windows.Forms.HtmlElement.InsertAdjacentElement(HtmlElementInsertionOrientation,HtmlElement)
- uid: System.Windows.Forms.HtmlElementInsertionOrientation
  parent: System.Windows.Forms
  isExternal: false
  name: HtmlElementInsertionOrientation
  nameWithType: HtmlElementInsertionOrientation
  fullName: System.Windows.Forms.HtmlElementInsertionOrientation
- uid: System.Windows.Forms.HtmlElement.InvokeMember(System.String)
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: InvokeMember(String)
  nameWithType: HtmlElement.InvokeMember(String)
  fullName: System.Windows.Forms.HtmlElement.InvokeMember(String)
- uid: System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: InvokeMember(String,Object[])
  nameWithType: HtmlElement.InvokeMember(String,Object[])
  fullName: System.Windows.Forms.HtmlElement.InvokeMember(String,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.HtmlElement.KeyDown
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: KeyDown
  nameWithType: HtmlElement.KeyDown
  fullName: System.Windows.Forms.HtmlElement.KeyDown
- uid: System.Windows.Forms.HtmlElement.KeyPress
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: KeyPress
  nameWithType: HtmlElement.KeyPress
  fullName: System.Windows.Forms.HtmlElement.KeyPress
- uid: System.Windows.Forms.HtmlElement.KeyUp
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: KeyUp
  nameWithType: HtmlElement.KeyUp
  fullName: System.Windows.Forms.HtmlElement.KeyUp
- uid: System.Windows.Forms.HtmlElement.LosingFocus
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: LosingFocus
  nameWithType: HtmlElement.LosingFocus
  fullName: System.Windows.Forms.HtmlElement.LosingFocus
- uid: System.Windows.Forms.HtmlElement.LostFocus
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: LostFocus
  nameWithType: HtmlElement.LostFocus
  fullName: System.Windows.Forms.HtmlElement.LostFocus
- uid: System.Windows.Forms.HtmlElement.MouseDown
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: MouseDown
  nameWithType: HtmlElement.MouseDown
  fullName: System.Windows.Forms.HtmlElement.MouseDown
- uid: System.Windows.Forms.HtmlElement.MouseEnter
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: MouseEnter
  nameWithType: HtmlElement.MouseEnter
  fullName: System.Windows.Forms.HtmlElement.MouseEnter
- uid: System.Windows.Forms.HtmlElement.MouseLeave
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: MouseLeave
  nameWithType: HtmlElement.MouseLeave
  fullName: System.Windows.Forms.HtmlElement.MouseLeave
- uid: System.Windows.Forms.HtmlElement.MouseMove
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: MouseMove
  nameWithType: HtmlElement.MouseMove
  fullName: System.Windows.Forms.HtmlElement.MouseMove
- uid: System.Windows.Forms.HtmlElement.MouseOver
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: MouseOver
  nameWithType: HtmlElement.MouseOver
  fullName: System.Windows.Forms.HtmlElement.MouseOver
- uid: System.Windows.Forms.HtmlElement.MouseUp
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: MouseUp
  nameWithType: HtmlElement.MouseUp
  fullName: System.Windows.Forms.HtmlElement.MouseUp
- uid: System.Windows.Forms.HtmlElement.Name
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Name
  nameWithType: HtmlElement.Name
  fullName: System.Windows.Forms.HtmlElement.Name
- uid: System.Windows.Forms.HtmlElement.NextSibling
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: NextSibling
  nameWithType: HtmlElement.NextSibling
  fullName: System.Windows.Forms.HtmlElement.NextSibling
- uid: System.Windows.Forms.HtmlElement.OffsetParent
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: OffsetParent
  nameWithType: HtmlElement.OffsetParent
  fullName: System.Windows.Forms.HtmlElement.OffsetParent
- uid: System.Windows.Forms.HtmlElement.OffsetRectangle
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: OffsetRectangle
  nameWithType: HtmlElement.OffsetRectangle
  fullName: System.Windows.Forms.HtmlElement.OffsetRectangle
- uid: System.Windows.Forms.HtmlElement.op_Equality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: op_Equality(HtmlElement,HtmlElement)
  nameWithType: HtmlElement.op_Equality(HtmlElement,HtmlElement)
  fullName: System.Windows.Forms.HtmlElement.op_Equality(HtmlElement,HtmlElement)
- uid: System.Windows.Forms.HtmlElement.op_Inequality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: op_Inequality(HtmlElement,HtmlElement)
  nameWithType: HtmlElement.op_Inequality(HtmlElement,HtmlElement)
  fullName: System.Windows.Forms.HtmlElement.op_Inequality(HtmlElement,HtmlElement)
- uid: System.Windows.Forms.HtmlElement.OuterHtml
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: OuterHtml
  nameWithType: HtmlElement.OuterHtml
  fullName: System.Windows.Forms.HtmlElement.OuterHtml
- uid: System.Windows.Forms.HtmlElement.OuterText
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: OuterText
  nameWithType: HtmlElement.OuterText
  fullName: System.Windows.Forms.HtmlElement.OuterText
- uid: System.Windows.Forms.HtmlElement.Parent
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Parent
  nameWithType: HtmlElement.Parent
  fullName: System.Windows.Forms.HtmlElement.Parent
- uid: System.Windows.Forms.HtmlElement.RaiseEvent(System.String)
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: RaiseEvent(String)
  nameWithType: HtmlElement.RaiseEvent(String)
  fullName: System.Windows.Forms.HtmlElement.RaiseEvent(String)
- uid: System.Windows.Forms.HtmlElement.RemoveFocus
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: RemoveFocus()
  nameWithType: HtmlElement.RemoveFocus()
  fullName: System.Windows.Forms.HtmlElement.RemoveFocus()
- uid: System.Windows.Forms.HtmlElement.ScrollIntoView(System.Boolean)
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: ScrollIntoView(Boolean)
  nameWithType: HtmlElement.ScrollIntoView(Boolean)
  fullName: System.Windows.Forms.HtmlElement.ScrollIntoView(Boolean)
- uid: System.Windows.Forms.HtmlElement.ScrollLeft
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: ScrollLeft
  nameWithType: HtmlElement.ScrollLeft
  fullName: System.Windows.Forms.HtmlElement.ScrollLeft
- uid: System.Windows.Forms.HtmlElement.ScrollRectangle
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: ScrollRectangle
  nameWithType: HtmlElement.ScrollRectangle
  fullName: System.Windows.Forms.HtmlElement.ScrollRectangle
- uid: System.Windows.Forms.HtmlElement.ScrollTop
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: ScrollTop
  nameWithType: HtmlElement.ScrollTop
  fullName: System.Windows.Forms.HtmlElement.ScrollTop
- uid: System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: SetAttribute(String,String)
  nameWithType: HtmlElement.SetAttribute(String,String)
  fullName: System.Windows.Forms.HtmlElement.SetAttribute(String,String)
- uid: System.Windows.Forms.HtmlElement.Style
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Style
  nameWithType: HtmlElement.Style
  fullName: System.Windows.Forms.HtmlElement.Style
- uid: System.Windows.Forms.HtmlElement.TabIndex
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: TabIndex
  nameWithType: HtmlElement.TabIndex
  fullName: System.Windows.Forms.HtmlElement.TabIndex
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Windows.Forms.HtmlElement.TagName
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: TagName
  nameWithType: HtmlElement.TagName
  fullName: System.Windows.Forms.HtmlElement.TagName
- uid: System.Windows.Forms.HtmlElement.All*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: All
  nameWithType: HtmlElement.All
- uid: System.Windows.Forms.HtmlElement.AppendChild*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: AppendChild
  nameWithType: HtmlElement.AppendChild
- uid: System.Windows.Forms.HtmlElement.AttachEventHandler*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: AttachEventHandler
  nameWithType: HtmlElement.AttachEventHandler
- uid: System.Windows.Forms.HtmlElement.CanHaveChildren*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: CanHaveChildren
  nameWithType: HtmlElement.CanHaveChildren
- uid: System.Windows.Forms.HtmlElement.Children*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Children
  nameWithType: HtmlElement.Children
- uid: System.Windows.Forms.HtmlElement.ClientRectangle*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: ClientRectangle
  nameWithType: HtmlElement.ClientRectangle
- uid: System.Windows.Forms.HtmlElement.DetachEventHandler*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: DetachEventHandler
  nameWithType: HtmlElement.DetachEventHandler
- uid: System.Windows.Forms.HtmlElement.Document*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Document
  nameWithType: HtmlElement.Document
- uid: System.Windows.Forms.HtmlElement.DomElement*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: DomElement
  nameWithType: HtmlElement.DomElement
- uid: System.Windows.Forms.HtmlElement.Enabled*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Enabled
  nameWithType: HtmlElement.Enabled
- uid: System.Windows.Forms.HtmlElement.Equals*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Equals
  nameWithType: HtmlElement.Equals
- uid: System.Windows.Forms.HtmlElement.FirstChild*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: FirstChild
  nameWithType: HtmlElement.FirstChild
- uid: System.Windows.Forms.HtmlElement.Focus*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Focus
  nameWithType: HtmlElement.Focus
- uid: System.Windows.Forms.HtmlElement.GetAttribute*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: GetAttribute
  nameWithType: HtmlElement.GetAttribute
- uid: System.Windows.Forms.HtmlElement.GetElementsByTagName*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: GetElementsByTagName
  nameWithType: HtmlElement.GetElementsByTagName
- uid: System.Windows.Forms.HtmlElement.GetHashCode*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: GetHashCode
  nameWithType: HtmlElement.GetHashCode
- uid: System.Windows.Forms.HtmlElement.Id*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Id
  nameWithType: HtmlElement.Id
- uid: System.Windows.Forms.HtmlElement.InnerHtml*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: InnerHtml
  nameWithType: HtmlElement.InnerHtml
- uid: System.Windows.Forms.HtmlElement.InnerText*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: InnerText
  nameWithType: HtmlElement.InnerText
- uid: System.Windows.Forms.HtmlElement.InsertAdjacentElement*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: InsertAdjacentElement
  nameWithType: HtmlElement.InsertAdjacentElement
- uid: System.Windows.Forms.HtmlElement.InvokeMember*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: InvokeMember
  nameWithType: HtmlElement.InvokeMember
- uid: System.Windows.Forms.HtmlElement.Name*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Name
  nameWithType: HtmlElement.Name
- uid: System.Windows.Forms.HtmlElement.NextSibling*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: NextSibling
  nameWithType: HtmlElement.NextSibling
- uid: System.Windows.Forms.HtmlElement.OffsetParent*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: OffsetParent
  nameWithType: HtmlElement.OffsetParent
- uid: System.Windows.Forms.HtmlElement.OffsetRectangle*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: OffsetRectangle
  nameWithType: HtmlElement.OffsetRectangle
- uid: System.Windows.Forms.HtmlElement.op_Equality*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: op_Equality
  nameWithType: HtmlElement.op_Equality
- uid: System.Windows.Forms.HtmlElement.op_Inequality*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: op_Inequality
  nameWithType: HtmlElement.op_Inequality
- uid: System.Windows.Forms.HtmlElement.OuterHtml*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: OuterHtml
  nameWithType: HtmlElement.OuterHtml
- uid: System.Windows.Forms.HtmlElement.OuterText*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: OuterText
  nameWithType: HtmlElement.OuterText
- uid: System.Windows.Forms.HtmlElement.Parent*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Parent
  nameWithType: HtmlElement.Parent
- uid: System.Windows.Forms.HtmlElement.RaiseEvent*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: RaiseEvent
  nameWithType: HtmlElement.RaiseEvent
- uid: System.Windows.Forms.HtmlElement.RemoveFocus*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: RemoveFocus
  nameWithType: HtmlElement.RemoveFocus
- uid: System.Windows.Forms.HtmlElement.ScrollIntoView*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: ScrollIntoView
  nameWithType: HtmlElement.ScrollIntoView
- uid: System.Windows.Forms.HtmlElement.ScrollLeft*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: ScrollLeft
  nameWithType: HtmlElement.ScrollLeft
- uid: System.Windows.Forms.HtmlElement.ScrollRectangle*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: ScrollRectangle
  nameWithType: HtmlElement.ScrollRectangle
- uid: System.Windows.Forms.HtmlElement.ScrollTop*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: ScrollTop
  nameWithType: HtmlElement.ScrollTop
- uid: System.Windows.Forms.HtmlElement.SetAttribute*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: SetAttribute
  nameWithType: HtmlElement.SetAttribute
- uid: System.Windows.Forms.HtmlElement.Style*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Style
  nameWithType: HtmlElement.Style
- uid: System.Windows.Forms.HtmlElement.TabIndex*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: TabIndex
  nameWithType: HtmlElement.TabIndex
- uid: System.Windows.Forms.HtmlElement.TagName*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: TagName
  nameWithType: HtmlElement.TagName
