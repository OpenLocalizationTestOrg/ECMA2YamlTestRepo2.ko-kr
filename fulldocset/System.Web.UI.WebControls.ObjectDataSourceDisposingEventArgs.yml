### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  id: ObjectDataSourceDisposingEventArgs
  children:
  - System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor(System.Object)
  - System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance
  langs:
  - csharp
  name: ObjectDataSourceDisposingEventArgs
  nameWithType: ObjectDataSourceDisposingEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  type: Class
  summary: "에 대 한 데이터를 제공는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&quot;> </xref> 의 이벤트는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> 제어 합니다."
  remarks: "ObjectDataSourceDisposingEventArgs 클래스에서 사용 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A>메서드를 사용 하는 데이터 작업 후에 비즈니스 개체 인스턴스에 대 한 액세스를 제공는 <xref:System.Web.UI.WebControls.ObjectDataSource>제어 및 비즈니스 개체를 수행 하지만 개체가 소멸 되기 전에 비즈니스.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> 비즈니스 개체가 사용 하 여 액세스 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A>속성.</xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>이벤트를 정리 또는 최종 작업을 수행 하는 비즈니스 개체의 공개적으로 노출 된 모든 멤버에 액세스할 수 있습니다</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 를 처리 하는 대리자를 추가 하 여       <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A>메서드에 의해 호출 되지 않습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤이 메서드 데이터 작업을 수행 하는 경우는 `static` 메서드.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> 메서드가 정적이 때 비즈니스 개체 인스턴스가 생성 됩니다.       <xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤은 해당 수명 주기 전체에서 다양 한 시간에는 기본 비즈니스 개체와 작동 하도록 처리할 수 있는 많은 이벤트를 노출 합니다.</xref:System.Web.UI.WebControls.ObjectDataSource> 다음 표에서 이벤트와 연결 된 <xref:System.EventArgs>클래스와 이벤트 처리기 대리자.</xref:System.EventArgs>      | 이벤트 | EventArgs | 이벤트 처리기 |   |-----------|---------------|------------------|   | <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating><br /><br /> 비즈니스 개체의 인스턴스가 생성 되는 바로 전에 발생 합니다. | <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs><br /><br /> 비즈니스 개체의 인스턴스를 만든 직후에 발생 합니다. | <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Selecting></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs><br /><br /> 데이터를 검색 하기 전에 발생 합니다. | <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>, and <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleting></xref:System.Web.UI.WebControls.ObjectDataSource.Updating></xref:System.Web.UI.WebControls.ObjectDataSource.Inserting></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs><br /><br /> 업데이트 또는 삭제 작업이 수행 되는 삽입 하기 전에 발생 합니다. | <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Selected></xref:System.Web.UI.WebControls.ObjectDataSource.Selected></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs><br /><br /> 데이터를 검색 한 후에 발생 합니다. | <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, and <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted></xref:System.Web.UI.WebControls.ObjectDataSource.Updated></xref:System.Web.UI.WebControls.ObjectDataSource.Inserted></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs><br /><br /> 업데이트 또는 삭제 작업이 완료 되는 삽입 이후의 발생 합니다. | <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs><br /><br /> 비즈니스 개체를 제거 하기 전에 발생 합니다. | ObjectDataSourceDisposingEventArgs | <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|</xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information. The second code example provides the example middle-tier business object that the first code example uses.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information. You might work with a business object that is very expensive (in terms of time or resources) to create for every data operation that your Web page performs. One way to work with an expensive object might be to create an instance of it once, and then cache it for subsequent operations instead of creating and destroying it for every data operation. This example demonstrates this pattern. You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> event to check the cache for an object first, and then create an instance, only if one is not already cached. Then, handle the  <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event to cache the business object for future use, instead of destroying it. In this example, the <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=fullName> property of the ObjectDataSourceDisposingEventArgs object is set to `true`, to direct the <xref:System.Web.UI.WebControls.ObjectDataSource> to not call the <xref:System.IDisposable.Dispose%2A> method on the instance.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_16#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_349_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_349_1.aspx)]  \n  \n The following code example provides an example middle-tier business object that the preceding code example uses. The code example consists of a basic business object, defined by the `EmployeeLogic` class, which is a class that maintains state and encapsulates business logic. For a complete working example, you must compile this code as a library, and then use these classes from an ASP page.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_16#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_349_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_349_2.vb)]"
  syntax:
    content: 'public class ObjectDataSourceDisposingEventArgs : System.ComponentModel.CancelEventArgs'
  inheritance:
  - System.ComponentModel.CancelEventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  langs:
  - csharp
  name: ObjectDataSourceDisposingEventArgs(Object)
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectDataSourceDisposingEventArgs(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectDataSourceDisposingEventArgs(Object)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs&quot;> </xref> 클래스 지정된 된 개체를 사용 합니다."
  syntax:
    content: public ObjectDataSourceDisposingEventArgs (object objectInstance);
    parameters:
    - id: objectInstance
      type: System.Object
      description: "비즈니스 개체와 개체는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> 데이터 작업을 수행할 상호 작용 합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance
  id: ObjectInstance
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  langs:
  - csharp
  name: ObjectInstance
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "비즈니스 개체와 개체를 나타내는 개체를 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> 제어 데이터 작업을 수행 합니다."
  remarks: "하는 경우 데이터 작업 방법 (<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>, 및 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>) 인스턴스 메서드를 비즈니스의 인스턴스 개체는 메서드 실행 전에 만들어집니다.</xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 비즈니스 개체 ObjectInstance 속성에서 개체를 저장 하면 각 호출에 대해 만들어지지 않도록 방지할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>이벤트 처리기.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 후속 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>이벤트에서 비즈니스 개체를 검색할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>속성.</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information. You might work with a business object that is very expensive (in terms of time or resources) to create for every data operation that your Web page performs. One way to work with an expensive object might be to create an instance of it once, and then cache it for subsequent operations instead of creating and destroying it for every data operation. This example demonstrates this pattern. You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> event to check the cache for an object first, and then create an instance, only if one is not already cached. Then, handle the  <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event to cache the business object for future use, instead of destroying it. In this example, the <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=fullName> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> class is set to `true`, to direct the <xref:System.Web.UI.WebControls.ObjectDataSource> to not call <xref:System.IDisposable.Dispose%2A> on the instance.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_16#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_252_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_252_1.aspx)]"
  syntax:
    content: public object ObjectInstance { get; }
    return:
      type: System.Object
      description: "비즈니스 개체는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> 데이터 작업을 사용 하 여 그렇지 않은 경우 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>경우 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 에 전달 되는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.CancelEventArgs
  isExternal: false
  name: System.ComponentModel.CancelEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  isExternal: false
  name: ObjectDataSourceDisposingEventArgs(Object)
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectDataSourceDisposingEventArgs(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectDataSourceDisposingEventArgs(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor*
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  isExternal: false
  name: ObjectDataSourceDisposingEventArgs
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectDataSourceDisposingEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance*
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectInstance
