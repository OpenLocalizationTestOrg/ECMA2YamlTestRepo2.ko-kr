### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.DockPattern
  id: DockPattern
  children:
  - System.Windows.Automation.DockPattern.Cached
  - System.Windows.Automation.DockPattern.Current
  - System.Windows.Automation.DockPattern.DockPositionProperty
  - System.Windows.Automation.DockPattern.Pattern
  - System.Windows.Automation.DockPattern.SetDockPosition(System.Windows.Automation.DockPosition)
  langs:
  - csharp
  name: DockPattern
  nameWithType: DockPattern
  fullName: System.Windows.Automation.DockPattern
  type: Class
  summary: "도킹 컨테이너 내에서 해당 도킹 속성을 노출 하는 컨트롤을 나타냅니다."
  remarks: "도킹 컨테이너는 허용 하는 컨트롤 자식 요소를 가로 또는 세로로 도킹 컨테이너 및 컨테이너 내 다른 요소 경계를 기준으로 합니다.       컨트롤은 현재 z-순서;에 따라 도킹 됩니다. 더 높은 z-순서 배치가 더 많이 도킹 컨테이너의 지정된 된 가장자리에서 배치 됩니다.       참조 [UI 자동화 클라이언트에 대 한 컨트롤 패턴 매핑](~/add/includes/ajax-current-ext-md.md) 이 컨트롤 패턴을 구현할 수 있는 컨트롤의 예제입니다.       도킹 컨테이너 내에서 현재 컨트롤에 인접 한 도킹 될 수 있는 컨트롤의 속성 또는 도킹 컨테이너의 모든 속성 DockPattern 지원 하지 않습니다."
  syntax:
    content: 'public class DockPattern : System.Windows.Automation.BasePattern'
  inheritance:
  - System.Object
  - System.Windows.Automation.BasePattern
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Automation.DockPattern.Cached
  id: Cached
  parent: System.Windows.Automation.DockPattern
  langs:
  - csharp
  name: Cached
  nameWithType: DockPattern.Cached
  fullName: System.Windows.Automation.DockPattern.Cached
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "캐시 된 가져옵니다 [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 속성 값이 <xref href=&quot;System.Windows.Automation.DockPattern&quot;> </xref>합니다."
  remarks: "캐시 된 속성 값 해야 이전에 요청에 <xref:System.Windows.Automation.CacheRequest>.</xref:System.Windows.Automation.CacheRequest> 를 사용 하 여 사용 하 여 <xref:System.Windows.Automation.DockPattern.Current%2A>속성의 현재 값을 가져올 수 있습니다.</xref:System.Windows.Automation.DockPattern.Current%2A>       사용 가능한 속성 및 사용에 대 한 자세한 내용은 <xref:System.Windows.Automation.DockPattern.DockPatternInformation>.</xref:System.Windows.Automation.DockPattern.DockPatternInformation> 을 참조 하십시오."
  syntax:
    content: public System.Windows.Automation.DockPattern.DockPatternInformation Cached { get; }
    return:
      type: System.Windows.Automation.DockPattern.DockPatternInformation
      description: "캐시 된 포함 된 구조체 [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 의 컨트롤 패턴에 대 한 속성 값입니다."
  overload: System.Windows.Automation.DockPattern.Cached*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "요청한 속성이 캐시에 없는 경우"
  platform:
  - net462
- uid: System.Windows.Automation.DockPattern.Current
  id: Current
  parent: System.Windows.Automation.DockPattern
  langs:
  - csharp
  name: Current
  nameWithType: DockPattern.Current
  fullName: System.Windows.Automation.DockPattern.Current
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "현재 가져옵니다 [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 속성 값이 <xref href=&quot;System.Windows.Automation.DockPattern&quot;> </xref>합니다."
  remarks: "이 패턴에서 가져와야는 <xref:System.Windows.Automation.AutomationElement>와 <xref:System.Windows.Automation.AutomationElementMode>현재 값을 가져오기 위해 참조.</xref:System.Windows.Automation.AutomationElementMode> </xref:System.Windows.Automation.AutomationElement> 경우는 <xref:System.Windows.Automation.AutomationElement>사용 하 여 가져왔습니다 <xref:System.Windows.Automation.AutomationElementMode>만 캐시 데이터를 포함 하 고 모든 속성의 현재 값을 가져오려고 하면 예외가 발생 합니다.</xref:System.Windows.Automation.AutomationElementMode> </xref:System.Windows.Automation.AutomationElement> <xref:System.Windows.Automation.DockPattern.Cached%2A>캐시 된 값을 이전에 수행 된 지정 된 속성에 <xref:System.Windows.Automation.CacheRequest>.</xref:System.Windows.Automation.CacheRequest> 를 사용 하 여</xref:System.Windows.Automation.DockPattern.Cached%2A> 사용 합니다.       사용 가능한 속성 및 사용에 대 한 자세한 내용은 <xref:System.Windows.Automation.DockPattern.DockPatternInformation>.</xref:System.Windows.Automation.DockPattern.DockPatternInformation> 을 참조 하십시오."
  syntax:
    content: public System.Windows.Automation.DockPattern.DockPatternInformation Current { get; }
    return:
      type: System.Windows.Automation.DockPattern.DockPatternInformation
      description: "현재 포함 된 구조체 [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 의 컨트롤 패턴에 대 한 속성 값입니다."
  overload: System.Windows.Automation.DockPattern.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.DockPattern.DockPositionProperty
  id: DockPositionProperty
  parent: System.Windows.Automation.DockPattern
  langs:
  - csharp
  name: DockPositionProperty
  nameWithType: DockPattern.DockPositionProperty
  fullName: System.Windows.Automation.DockPattern.DockPositionProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "식별 된 <xref:System.Windows.Automation.DockPattern.DockPatternInformation.DockPosition*>속성.</xref:System.Windows.Automation.DockPattern.DockPatternInformation.DockPosition*>"
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.DockPatternIdentifiers>.</xref:System.Windows.Automation.DockPatternIdentifiers> 해당 필드를 사용 해야       이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.DockPattern.Current%2A>또는 <xref:System.Windows.Automation.DockPattern.Cached%2A>속성.</xref:System.Windows.Automation.DockPattern.Cached%2A> </xref:System.Windows.Automation.DockPattern.Current%2A>       기본값은 <xref:System.Windows.Automation.DockPosition>.</xref:System.Windows.Automation.DockPosition>"
  example:
  - "In the following example, a <xref:System.Windows.Automation.DockPosition> value is obtained representing the current dock position for a control that supports <xref:System.Windows.Automation.DockPattern>.  \n  \n [!code-cs[UIADockPattern_snip#100](~/add/codesnippet/csharp/UIADockPattern_snip/UIADockPattern_snippets.cs#100)]\n [!code-vb[UIADockPattern_snip#100](~/add/codesnippet/visualbasic/UIADockPattern_snip/UIADockPattern_snippets.vb#100)]  \n[!code-cs[UIADockPattern_snip#102](~/add/codesnippet/csharp/UIADockPattern_snip/UIADockPattern_snippets.cs#102)]\n[!code-vb[UIADockPattern_snip#102](~/add/codesnippet/visualbasic/UIADockPattern_snip/UIADockPattern_snippets.vb#102)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty DockPositionProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.DockPattern.Pattern
  id: Pattern
  parent: System.Windows.Automation.DockPattern
  langs:
  - csharp
  name: Pattern
  nameWithType: DockPattern.Pattern
  fullName: System.Windows.Automation.DockPattern.Pattern
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "식별 된 <xref href=&quot;System.Windows.Automation.DockPattern&quot;> </xref> 컨트롤 패턴."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.DockPatternIdentifiers>.</xref:System.Windows.Automation.DockPatternIdentifiers> 해당 필드를 사용 해야       패턴 [!INCLUDE[TLA#tla_id](~/add/includes/tlasharptla-id-md.md)] 같은 <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>지정 된 <xref:System.Windows.Automation.AutomationElement>.</xref:System.Windows.Automation.AutomationElement> 에서 필요한 컨트롤 패턴을 검색 하</xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> 는 메서드에 전달 됩니다"
  example:
  - "In the following example, a <xref:System.Windows.Automation.DockPattern>control pattern is obtained from an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIADockPattern_snip#101](~/add/codesnippet/csharp/UIADockPattern_snip/UIADockPattern_snippets.cs#101)]\n [!code-vb[UIADockPattern_snip#101](~/add/codesnippet/visualbasic/UIADockPattern_snip/UIADockPattern_snippets.vb#101)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationPattern Pattern;
    return:
      type: System.Windows.Automation.AutomationPattern
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.DockPattern.SetDockPosition(System.Windows.Automation.DockPosition)
  id: SetDockPosition(System.Windows.Automation.DockPosition)
  parent: System.Windows.Automation.DockPattern
  langs:
  - csharp
  name: SetDockPosition(DockPosition)
  nameWithType: DockPattern.SetDockPosition(DockPosition)
  fullName: System.Windows.Automation.DockPattern.SetDockPosition(DockPosition)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "도킹 된 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 에서 요청 된 <xref href=&quot;System.Windows.Automation.DockPosition&quot;> </xref> 도킹 컨테이너 내에서."
  remarks: "도킹 컨테이너는 허용 하는 컨트롤 자식 요소를 가로 또는 세로로 도킹 컨테이너 및 컨테이너 내 다른 요소 경계를 기준으로 합니다."
  example:
  - "In the following example, an <xref:System.Windows.Automation.AutomationElement> representing a control that supports the DockPattern control pattern has its `dockPosition` modified.  \n  \n [!code-cs[UIADockPattern_snip#101](~/add/codesnippet/csharp/UIADockPattern_snip/UIADockPattern_snippets.cs#101)]\n [!code-vb[UIADockPattern_snip#101](~/add/codesnippet/visualbasic/UIADockPattern_snip/UIADockPattern_snippets.vb#101)]  \n[!code-cs[UIADockPattern_snip#103](~/add/codesnippet/csharp/UIADockPattern_snip/UIADockPattern_snippets.cs#103)]\n[!code-vb[UIADockPattern_snip#103](~/add/codesnippet/visualbasic/UIADockPattern_snip/UIADockPattern_snippets.vb#103)]"
  syntax:
    content: public void SetDockPosition (System.Windows.Automation.DockPosition dockPosition);
    parameters:
    - id: dockPosition
      type: System.Windows.Automation.DockPosition
      description: "도킹 컨테이너 및 컨테이너 내 다른 요소 경계를 기준으로 도킹 위치입니다."
  overload: System.Windows.Automation.DockPattern.SetDockPosition*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "컨트롤 수 없는 경우 요청된 된 도킹 스타일을 실행할 수 있습니다."
  platform:
  - net462
references:
- uid: System.Windows.Automation.BasePattern
  isExternal: false
  name: System.Windows.Automation.BasePattern
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Automation.DockPattern.Cached
  parent: System.Windows.Automation.DockPattern
  isExternal: false
  name: Cached
  nameWithType: DockPattern.Cached
  fullName: System.Windows.Automation.DockPattern.Cached
- uid: System.Windows.Automation.DockPattern.DockPatternInformation
  parent: System.Windows.Automation
  isExternal: false
  name: DockPattern+DockPatternInformation
  nameWithType: DockPattern+DockPatternInformation
  fullName: System.Windows.Automation.DockPattern+DockPatternInformation
- uid: System.Windows.Automation.DockPattern.Current
  parent: System.Windows.Automation.DockPattern
  isExternal: false
  name: Current
  nameWithType: DockPattern.Current
  fullName: System.Windows.Automation.DockPattern.Current
- uid: System.Windows.Automation.DockPattern.DockPositionProperty
  parent: System.Windows.Automation.DockPattern
  isExternal: false
  name: DockPositionProperty
  nameWithType: DockPattern.DockPositionProperty
  fullName: System.Windows.Automation.DockPattern.DockPositionProperty
- uid: System.Windows.Automation.AutomationProperty
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationProperty
  nameWithType: AutomationProperty
  fullName: System.Windows.Automation.AutomationProperty
- uid: System.Windows.Automation.DockPattern.Pattern
  parent: System.Windows.Automation.DockPattern
  isExternal: false
  name: Pattern
  nameWithType: DockPattern.Pattern
  fullName: System.Windows.Automation.DockPattern.Pattern
- uid: System.Windows.Automation.AutomationPattern
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationPattern
  nameWithType: AutomationPattern
  fullName: System.Windows.Automation.AutomationPattern
- uid: System.Windows.Automation.DockPattern.SetDockPosition(System.Windows.Automation.DockPosition)
  parent: System.Windows.Automation.DockPattern
  isExternal: false
  name: SetDockPosition(DockPosition)
  nameWithType: DockPattern.SetDockPosition(DockPosition)
  fullName: System.Windows.Automation.DockPattern.SetDockPosition(DockPosition)
- uid: System.Windows.Automation.DockPosition
  parent: System.Windows.Automation
  isExternal: false
  name: DockPosition
  nameWithType: DockPosition
  fullName: System.Windows.Automation.DockPosition
- uid: System.Windows.Automation.DockPattern.Cached*
  parent: System.Windows.Automation.DockPattern
  isExternal: false
  name: Cached
  nameWithType: DockPattern.Cached
- uid: System.Windows.Automation.DockPattern.Current*
  parent: System.Windows.Automation.DockPattern
  isExternal: false
  name: Current
  nameWithType: DockPattern.Current
- uid: System.Windows.Automation.DockPattern.SetDockPosition*
  parent: System.Windows.Automation.DockPattern
  isExternal: false
  name: SetDockPosition
  nameWithType: DockPattern.SetDockPosition
