### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.TripleDESCng
  id: TripleDESCng
  children:
  - System.Security.Cryptography.TripleDESCng.#ctor
  - System.Security.Cryptography.TripleDESCng.#ctor(System.String)
  - System.Security.Cryptography.TripleDESCng.#ctor(System.String,System.Security.Cryptography.CngProvider)
  - System.Security.Cryptography.TripleDESCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  - System.Security.Cryptography.TripleDESCng.CreateDecryptor
  - System.Security.Cryptography.TripleDESCng.CreateDecryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.TripleDESCng.CreateEncryptor
  - System.Security.Cryptography.TripleDESCng.CreateEncryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.TripleDESCng.Dispose(System.Boolean)
  - System.Security.Cryptography.TripleDESCng.GenerateIV
  - System.Security.Cryptography.TripleDESCng.GenerateKey
  - System.Security.Cryptography.TripleDESCng.Key
  - System.Security.Cryptography.TripleDESCng.KeySize
  langs:
  - csharp
  name: TripleDESCng
  nameWithType: TripleDESCng
  fullName: System.Security.Cryptography.TripleDESCng
  type: Class
  summary: "Triple Data Encryption Standard (3DES) 알고리즘의 암호화 CNG (Next Generation) 구현을 제공합니다."
  syntax:
    content: 'public sealed class TripleDESCng : System.Security.Cryptography.TripleDES'
  inheritance:
  - System.Object
  - System.Security.Cryptography.SymmetricAlgorithm
  - System.Security.Cryptography.TripleDES
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Clear
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.IV
  - System.Security.Cryptography.SymmetricAlgorithm.IVValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.Mode
  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Padding
  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)
  - System.Security.Cryptography.TripleDES.Create
  - System.Security.Cryptography.TripleDES.Create(System.String)
  - System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCng.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.TripleDESCng
  langs:
  - csharp
  name: TripleDESCng()
  nameWithType: TripleDESCng.TripleDESCng()
  fullName: System.Security.Cryptography.TripleDESCng.TripleDESCng()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.TripleDESCng&quot;> </xref> 는 임시 키를 사용 하 여 클래스입니다."
  syntax:
    content: public TripleDESCng ();
    parameters: []
  overload: System.Security.Cryptography.TripleDESCng.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCng.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.TripleDESCng
  langs:
  - csharp
  name: TripleDESCng(String)
  nameWithType: TripleDESCng.TripleDESCng(String)
  fullName: System.Security.Cryptography.TripleDESCng.TripleDESCng(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.TripleDESCng&quot;> </xref> 기존 나타내는 지정한 키 이름 사용 하 여 클래스 3DES 키를 유지 합니다."
  remarks: "이 생성자는 기본 <xref:System.Security.Cryptography.CngKeyOpenOptions>값 <xref:System.Security.Cryptography.CngKeyOpenOptions>및 <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>기본 키 저장소 공급자 (KSP) 키를 열어야 합니다.</xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A> </xref:System.Security.Cryptography.CngKeyOpenOptions> </xref:System.Security.Cryptography.CngKeyOpenOptions>"
  syntax:
    content: public TripleDESCng (string keyName);
    parameters:
    - id: keyName
      type: System.String
      description: "키의 이름입니다."
  overload: System.Security.Cryptography.TripleDESCng.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "세대 CNG (cryptography Next)이이 시스템에서 지원 되지 않습니다."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "다른 모든 오류입니다."
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCng.#ctor(System.String,System.Security.Cryptography.CngProvider)
  id: '#ctor(System.String,System.Security.Cryptography.CngProvider)'
  parent: System.Security.Cryptography.TripleDESCng
  langs:
  - csharp
  name: TripleDESCng(String,CngProvider)
  nameWithType: TripleDESCng.TripleDESCng(String,CngProvider)
  fullName: System.Security.Cryptography.TripleDESCng.TripleDESCng(String,CngProvider)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.TripleDESCng&quot;> </xref> 기존 나타내는 지정한 키 이름 사용 하 여 클래스 3DES 키와 지정 된 키 저장소 공급자 KSP ()를 유지 합니다."
  remarks: "기본 <xref:System.Security.Cryptography.CngKeyOpenOptions>값 <xref:System.Security.Cryptography.CngKeyOpenOptions>키를 여는 데 사용 됩니다.</xref:System.Security.Cryptography.CngKeyOpenOptions> </xref:System.Security.Cryptography.CngKeyOpenOptions>"
  syntax:
    content: public TripleDESCng (string keyName, System.Security.Cryptography.CngProvider provider);
    parameters:
    - id: keyName
      type: System.String
      description: "키의 이름입니다."
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: "키를 포함 하는 KSP입니다."
  overload: System.Security.Cryptography.TripleDESCng.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>provider</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "세대 CNG (cryptography Next)이이 시스템에서 지원 되지 않습니다."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "다른 모든 오류입니다."
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  id: '#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)'
  parent: System.Security.Cryptography.TripleDESCng
  langs:
  - csharp
  name: TripleDESCng(String,CngProvider,CngKeyOpenOptions)
  nameWithType: TripleDESCng.TripleDESCng(String,CngProvider,CngKeyOpenOptions)
  fullName: System.Security.Cryptography.TripleDESCng.TripleDESCng(String,CngProvider,CngKeyOpenOptions)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.TripleDESCng&quot;> </xref> 지속형 3DES 키를 기존 나타내는 지정한 키 이름 사용 하 여 클래스, 지정 된 키 저장소 공급자 (KSP) 및 키 옵션을 엽니다."
  syntax:
    content: public TripleDESCng (string keyName, System.Security.Cryptography.CngProvider provider, System.Security.Cryptography.CngKeyOpenOptions openOptions);
    parameters:
    - id: keyName
      type: System.String
      description: "키의 이름입니다."
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: "키를 포함 하는 KSP입니다."
    - id: openOptions
      type: System.Security.Cryptography.CngKeyOpenOptions
      description: "(컴퓨터 또는 사용자 저장소)에서 키 열이 있는 UI 프롬프트 표시 여부와 같은 키를 여는 옵션을 지정 하는 열거형 값의 비트 조합입니다."
  overload: System.Security.Cryptography.TripleDESCng.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>provider</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "세대 CNG (cryptography Next)이이 시스템에서 지원 되지 않습니다."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "다른 모든 오류입니다."
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCng.CreateDecryptor
  id: CreateDecryptor
  parent: System.Security.Cryptography.TripleDESCng
  langs:
  - csharp
  name: CreateDecryptor()
  nameWithType: TripleDESCng.CreateDecryptor()
  fullName: System.Security.Cryptography.TripleDESCng.CreateDecryptor()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "현재 키 및 초기화 벡터도 3DES 대칭 암호 해독기 개체를 만듭니다 (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>).</xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>"
  remarks: "사용 하 여 생성 된 암호화 된 메시지를 해독 하는이 메서드는 <xref:System.Security.Cryptography.TripleDESCng.CreateEncryptor>동일한 서명으로 오버 로드.</xref:System.Security.Cryptography.TripleDESCng.CreateEncryptor>"
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor ();
    parameters: []
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "3DES 대칭 암호 해독기 개체입니다."
  overload: System.Security.Cryptography.TripleDESCng.CreateDecryptor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCng.CreateDecryptor(System.Byte[],System.Byte[])
  id: CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.TripleDESCng
  langs:
  - csharp
  name: CreateDecryptor(Byte[],Byte[])
  nameWithType: TripleDESCng.CreateDecryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.TripleDESCng.CreateDecryptor(Byte[],Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "지정 된 키와 IV (초기화 벡터) 3DES 대칭 암호 해독기 개체를 만듭니다."
  remarks: "This method decrypts an encrypted message created using the [CreateEncryptor(Byte\\[\\], Byte\\[\\])](assetId:///M:System.Security.Cryptography.TripleDESCng.CreateEncryptor(System.Byte[],System.Byte[])?qualifyHint=False&autoUpgrade=False) overload with the same signature.  \n  \n> [!NOTE]\n>  If you've created the <xref:System.Security.Cryptography.TripleDESCng> object using an existing persisted key and you want to make use of that key when decrypting the message, you want to set the <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property and then call the  parameterless <xref:System.Security.Cryptography.TripleDESCng.CreateDecryptor> overload instead; otherwise, using this method will create an ephemeral key as specified by the `rgbKey` parameter."
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "3DES 알고리즘에 사용할 비밀 키입니다. 키 크기는 192 비트 여야 합니다."
    - id: rgbIV
      type: System.Byte[]
      description: "3DES 알고리즘에 사용할 초기화 벡터입니다."
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "3DES 대칭 암호 해독기 개체입니다."
  overload: System.Security.Cryptography.TripleDESCng.CreateDecryptor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rgbKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rgbKey</code>이 알고리즘에 유효한 크기가 아닙니다.       -또는- <code>rgbIV</code> 크기가이 알고리즘에 대 한 블록 크기와 일치 하지 않습니다."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>rgbKey</code>이 알고리즘의 weak 키 이며 사용할 수 없습니다.       -or-       <code>rgbIV</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCng.CreateEncryptor
  id: CreateEncryptor
  parent: System.Security.Cryptography.TripleDESCng
  langs:
  - csharp
  name: CreateEncryptor()
  nameWithType: TripleDESCng.CreateEncryptor()
  fullName: System.Security.Cryptography.TripleDESCng.CreateEncryptor()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "현재 키 및 초기화 벡터를 사용 하 여 3DES 대칭 암호기 개체를 만듭니다 (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>).</xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>"
  remarks: "이 메서드를 사용 하 여 메시지를 암호화 한 다음 사용 하는 <xref:System.Security.Cryptography.TripleDESCng.CreateDecryptor%2A>이 메서드의 결과 암호를 해독 하려면 동일한 서명으로 오버 로드.</xref:System.Security.Cryptography.TripleDESCng.CreateDecryptor%2A>"
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor ();
    parameters: []
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "3DES 대칭 암호기 개체입니다."
  overload: System.Security.Cryptography.TripleDESCng.CreateEncryptor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCng.CreateEncryptor(System.Byte[],System.Byte[])
  id: CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.TripleDESCng
  langs:
  - csharp
  name: CreateEncryptor(Byte[],Byte[])
  nameWithType: TripleDESCng.CreateEncryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.TripleDESCng.CreateEncryptor(Byte[],Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "지정 된 키와 IV (초기화 벡터) 3DES 대칭 암호기 개체를 만듭니다."
  remarks: "이 메서드를 사용 하 여 메시지를 암호화 한 다음 사용 하는 <xref:System.Security.Cryptography.TripleDESCng.CreateDecryptor%2A>이 메서드의 결과 암호를 해독 하려면 동일한 서명으로 오버 로드.</xref:System.Security.Cryptography.TripleDESCng.CreateDecryptor%2A>      > [!NOTE] > 만든 경우는 <xref:System.Security.Cryptography.TripleDESCng>개체를 사용 하 여 기존의 지속형 키 만들려는 활용 하는 메시지를 암호화할 때 키를 설정 하려면는 <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>속성 및 매개 변수가 없는 호출 합니다 <xref:System.Security.Cryptography.TripleDESCng.CreateEncryptor>대신 고, 그렇지 않으면 오버 로드,이 메서드를 사용 하는 임시 키에 지정 된 대로 만들어집니다는 `rgbKey` 매개 변수.</xref:System.Security.Cryptography.TripleDESCng.CreateEncryptor> </xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> </xref:System.Security.Cryptography.TripleDESCng>"
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "3DES 알고리즘에 사용할 비밀 키입니다. 키 크기는 192 비트 여야 합니다."
    - id: rgbIV
      type: System.Byte[]
      description: "3DES 알고리즘에 사용할 초기화 벡터입니다."
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "3DES 대칭 암호기 개체입니다."
  overload: System.Security.Cryptography.TripleDESCng.CreateEncryptor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rgbKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rgbKey</code>이 알고리즘에 유효한 크기가 아닙니다.       -또는- <code>rgbIV</code> 크기가이 알고리즘에 대 한 블록 크기와 일치 하지 않습니다."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>rgbKey</code>이 알고리즘의 weak 키 이며 사용할 수 없습니다.       -or-       <code>rgbIV</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCng.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.TripleDESCng
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: TripleDESCng.Dispose(Boolean)
  fullName: System.Security.Cryptography.TripleDESCng.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "추가할 수 있습니다."
  overload: System.Security.Cryptography.TripleDESCng.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCng.GenerateIV
  id: GenerateIV
  parent: System.Security.Cryptography.TripleDESCng
  langs:
  - csharp
  name: GenerateIV()
  nameWithType: TripleDESCng.GenerateIV()
  fullName: System.Security.Cryptography.TripleDESCng.GenerateIV()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "임의 초기화 벡터 (IV) 3DES 알고리즘에 사용할를 생성 합니다."
  syntax:
    content: public override void GenerateIV ();
    parameters: []
  overload: System.Security.Cryptography.TripleDESCng.GenerateIV*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCng.GenerateKey
  id: GenerateKey
  parent: System.Security.Cryptography.TripleDESCng
  langs:
  - csharp
  name: GenerateKey()
  nameWithType: TripleDESCng.GenerateKey()
  fullName: System.Security.Cryptography.TripleDESCng.GenerateKey()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "3DES 알고리즘에 사용할 난수 키를 생성 합니다."
  syntax:
    content: public override void GenerateKey ();
    parameters: []
  overload: System.Security.Cryptography.TripleDESCng.GenerateKey*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCng.Key
  id: Key
  parent: System.Security.Cryptography.TripleDESCng
  langs:
  - csharp
  name: Key
  nameWithType: TripleDESCng.Key
  fullName: System.Security.Cryptography.TripleDESCng.Key
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "에 대 한 키를 가져오거나 설정 합니다.는 <xref href=&quot;System.Security.Cryptography.TripleDESCng&quot;> </xref> 알고리즘입니다."
  remarks: "만든 경우의 <xref:System.Security.Cryptography.TripleDESCng>개체를 사용 하 여 기존의 지속형 키, 키를 내보냅니다 하려고 한 경우 키 속성의 값을 지정할 수는 읽을 때.</xref:System.Security.Cryptography.TripleDESCng> 이 경우 키를 내보낼 수 없는 경우에 <xref:System.Security.Cryptography.CryptographicException>throw 됩니다.</xref:System.Security.Cryptography.CryptographicException>       , 키 속성의 값을 설정 하면 유지 되는 키 더 이상 사용 하 고 임시 키를 대신 사용 됩니다. 유지 되는 키를 다시의 새 인스턴스를 사용 해야 하는 경우 <xref:System.Security.Cryptography.TripleDESCng>클래스를 만들어야 합니다.</xref:System.Security.Cryptography.TripleDESCng>"
  syntax:
    content: public override byte[] Key { get; set; }
    return:
      type: System.Byte[]
      description: "에 대 한 키에서 <xref href=&quot;System.Security.Cryptography.TripleDESCng&quot;> </xref> 알고리즘입니다."
  overload: System.Security.Cryptography.TripleDESCng.Key*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDESCng.KeySize
  id: KeySize
  parent: System.Security.Cryptography.TripleDESCng
  langs:
  - csharp
  name: KeySize
  nameWithType: TripleDESCng.KeySize
  fullName: System.Security.Cryptography.TripleDESCng.KeySize
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "사용 하는 비밀 키의 비트에서 크기를 가져오거나는 <xref href=&quot;System.Security.Cryptography.TripleDESCng&quot;> </xref> 알고리즘입니다."
  remarks: "만든 경우의 <xref:System.Security.Cryptography.TripleDESCng>를 사용 하 여 개체 기존의 지속형 키 및 KeySize 속성의 값을 설정, 지속 되는 키를 사용할 수 없습니다 및 임시 키를 대신 사용 됩니다.</xref:System.Security.Cryptography.TripleDESCng> 유지 되는 키를 다시의 새 인스턴스를 사용 해야 하는 경우 <xref:System.Security.Cryptography.TripleDESCng>클래스를 만들어야 합니다.</xref:System.Security.Cryptography.TripleDESCng>"
  syntax:
    content: public override int KeySize { get; set; }
    return:
      type: System.Int32
      description: "사용 하는 비밀 키의 비트에서 크기는 <xref href=&quot;System.Security.Cryptography.TripleDESCng&quot;> </xref> 알고리즘입니다."
  overload: System.Security.Cryptography.TripleDESCng.KeySize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.TripleDES
  isExternal: false
  name: System.Security.Cryptography.TripleDES
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.TripleDESCng.#ctor
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: TripleDESCng()
  nameWithType: TripleDESCng.TripleDESCng()
  fullName: System.Security.Cryptography.TripleDESCng.TripleDESCng()
- uid: System.Security.Cryptography.TripleDESCng.#ctor(System.String)
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: TripleDESCng(String)
  nameWithType: TripleDESCng.TripleDESCng(String)
  fullName: System.Security.Cryptography.TripleDESCng.TripleDESCng(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.TripleDESCng.#ctor(System.String,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: TripleDESCng(String,CngProvider)
  nameWithType: TripleDESCng.TripleDESCng(String,CngProvider)
  fullName: System.Security.Cryptography.TripleDESCng.TripleDESCng(String,CngProvider)
- uid: System.Security.Cryptography.CngProvider
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProvider
  nameWithType: CngProvider
  fullName: System.Security.Cryptography.CngProvider
- uid: System.Security.Cryptography.TripleDESCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: TripleDESCng(String,CngProvider,CngKeyOpenOptions)
  nameWithType: TripleDESCng.TripleDESCng(String,CngProvider,CngKeyOpenOptions)
  fullName: System.Security.Cryptography.TripleDESCng.TripleDESCng(String,CngProvider,CngKeyOpenOptions)
- uid: System.Security.Cryptography.CngKeyOpenOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyOpenOptions
  nameWithType: CngKeyOpenOptions
  fullName: System.Security.Cryptography.CngKeyOpenOptions
- uid: System.Security.Cryptography.TripleDESCng.CreateDecryptor
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: CreateDecryptor()
  nameWithType: TripleDESCng.CreateDecryptor()
  fullName: System.Security.Cryptography.TripleDESCng.CreateDecryptor()
- uid: System.Security.Cryptography.ICryptoTransform
  parent: System.Security.Cryptography
  isExternal: false
  name: ICryptoTransform
  nameWithType: ICryptoTransform
  fullName: System.Security.Cryptography.ICryptoTransform
- uid: System.Security.Cryptography.TripleDESCng.CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: CreateDecryptor(Byte[],Byte[])
  nameWithType: TripleDESCng.CreateDecryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.TripleDESCng.CreateDecryptor(Byte[],Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.TripleDESCng.CreateEncryptor
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: CreateEncryptor()
  nameWithType: TripleDESCng.CreateEncryptor()
  fullName: System.Security.Cryptography.TripleDESCng.CreateEncryptor()
- uid: System.Security.Cryptography.TripleDESCng.CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: CreateEncryptor(Byte[],Byte[])
  nameWithType: TripleDESCng.CreateEncryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.TripleDESCng.CreateEncryptor(Byte[],Byte[])
- uid: System.Security.Cryptography.TripleDESCng.Dispose(System.Boolean)
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: TripleDESCng.Dispose(Boolean)
  fullName: System.Security.Cryptography.TripleDESCng.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.TripleDESCng.GenerateIV
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: GenerateIV()
  nameWithType: TripleDESCng.GenerateIV()
  fullName: System.Security.Cryptography.TripleDESCng.GenerateIV()
- uid: System.Security.Cryptography.TripleDESCng.GenerateKey
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: GenerateKey()
  nameWithType: TripleDESCng.GenerateKey()
  fullName: System.Security.Cryptography.TripleDESCng.GenerateKey()
- uid: System.Security.Cryptography.TripleDESCng.Key
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: Key
  nameWithType: TripleDESCng.Key
  fullName: System.Security.Cryptography.TripleDESCng.Key
- uid: System.Security.Cryptography.TripleDESCng.KeySize
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: KeySize
  nameWithType: TripleDESCng.KeySize
  fullName: System.Security.Cryptography.TripleDESCng.KeySize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.TripleDESCng.#ctor*
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: TripleDESCng
  nameWithType: TripleDESCng.TripleDESCng
- uid: System.Security.Cryptography.TripleDESCng.CreateDecryptor*
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: CreateDecryptor
  nameWithType: TripleDESCng.CreateDecryptor
- uid: System.Security.Cryptography.TripleDESCng.CreateEncryptor*
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: CreateEncryptor
  nameWithType: TripleDESCng.CreateEncryptor
- uid: System.Security.Cryptography.TripleDESCng.Dispose*
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: Dispose
  nameWithType: TripleDESCng.Dispose
- uid: System.Security.Cryptography.TripleDESCng.GenerateIV*
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: GenerateIV
  nameWithType: TripleDESCng.GenerateIV
- uid: System.Security.Cryptography.TripleDESCng.GenerateKey*
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: GenerateKey
  nameWithType: TripleDESCng.GenerateKey
- uid: System.Security.Cryptography.TripleDESCng.Key*
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: Key
  nameWithType: TripleDESCng.Key
- uid: System.Security.Cryptography.TripleDESCng.KeySize*
  parent: System.Security.Cryptography.TripleDESCng
  isExternal: false
  name: KeySize
  nameWithType: TripleDESCng.KeySize
