### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlDependency
  id: SqlDependency
  children:
  - System.Data.SqlClient.SqlDependency.#ctor
  - System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand)
  - System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)
  - System.Data.SqlClient.SqlDependency.AddCommandDependency(System.Data.SqlClient.SqlCommand)
  - System.Data.SqlClient.SqlDependency.HasChanges
  - System.Data.SqlClient.SqlDependency.Id
  - System.Data.SqlClient.SqlDependency.OnChange
  - System.Data.SqlClient.SqlDependency.Start(System.String)
  - System.Data.SqlClient.SqlDependency.Start(System.String,System.String)
  - System.Data.SqlClient.SqlDependency.Stop(System.String)
  - System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)
  langs:
  - csharp
  name: SqlDependency
  nameWithType: SqlDependency
  fullName: System.Data.SqlClient.SqlDependency
  type: Class
  summary: "SqlDependency 개체에는 응용 프로그램과 SQL Server의 인스턴스 간에 쿼리 알림 종속성을 나타냅니다. SqlDependency 개체 및 레지스터를 통해 알림을 수신 하는 응용 프로그램을 만들 수는 <xref href=&quot;System.Data.SqlClient.OnChangeEventHandler&quot;> </xref> 이벤트 처리기입니다."
  remarks: "SqlDependency 캐싱 시나리오 ASP.NET 응용 프로그램 또는 중간 계층 서비스를 메모리에 캐시 된 특정 정보를 유지 해야 하는 위치에 이상적입니다. SqlDependency를 사용 하면 캐시를 새로 고칠 수 있도록 데이터베이스의 원래 데이터가 변경 될 때 알림을 받을 수 있습니다.       종속성을 설정 하려면 하나 이상의 SqlDependency 개체를 연결 해야 <xref:System.Data.SqlClient.SqlCommand>개체입니다.</xref:System.Data.SqlClient.SqlCommand> 알림을 받으려는 구독할 필요는 <xref:System.Data.SqlClient.SqlDependency.OnChange>이벤트.</xref:System.Data.SqlClient.SqlDependency.OnChange> 알림에 대 한 쿼리를 만들기 위한 요구 사항에 대 한 자세한 내용은 SQL Server 온라인 설명서의 &quot;알림에 대 한 쿼리 만들기&quot;를 참조 합니다.      > [!NOTE] > SqlDependency ASP.NET 또는 중간 계층 서비스에서 사용할 수 있도록 설계 된 데이터베이스에 종속 하는 서버 수가 상대적으로 적은 경우. 클라이언트 응용 프로그램에서 수백 또는 수천 대의 클라이언트 컴퓨터는 있는 SqlDependency 개체를 단일 데이터베이스 서버에 대 한 설정에서 사용 하기 위해 설계 되지 않았습니다. 을 개발 하는 응용 프로그램 데이터가 변경 될 때 신뢰할 수 있는 하위 보조 알림이 필요한 경우 검토 섹션 **효율적인 쿼리 알림 방법 계획** 및 **쿼리 알림 대체 방법** 에 [알림 계획](http://go.microsoft.com/fwlink/?LinkId=211984) SQL Server 온라인 설명서의 항목입니다.       자세한 내용은 참조 [SQL Server에서 쿼리 알림을](~/add/includes/ajax-current-ext-md.md) 및 SQL Server 온라인 설명서의 &quot;알림 솔루션 구축&quot;입니다.      > [!NOTE] >는 <xref:System.Data.SqlClient.SqlDependency.OnChange>명령 실행을 시작한 스레드와에서 다른 스레드에서 이벤트를 생성 될 수 있습니다.</xref:System.Data.SqlClient.SqlDependency.OnChange>       쿼리 알림은 다음과 같은 요구 사항을 충족 하는 SELECT 문에 대해서만 지원 됩니다. 다음 표에서 SQL Server 온라인 설명서의 Service Broker 및 쿼리 알림 문서에 대 한 링크를 제공합니다.       **SQL Server 온라인 설명서**      -   [알림에 대 한 쿼리 만들기](http://msdn.microsoft.com/library/ms181122.aspx)      -   [Service Broker에 대 한 보안 고려 사항](http://msdn.microsoft.com/library/ms166059.aspx)      -   [보안 및 보호 (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)      -   [Notifications Services에 대 한 보안 고려 사항](http://msdn.microsoft.com/library/ms172604.aspx)      -   [쿼리 알림 사용 권한](http://msdn.microsoft.com/library/ms188311.aspx)      -   [Service Broker에 대 한 국가별 고려 사항](http://msdn.microsoft.com/library/ms166028.aspx)      -   [솔루션 디자인 고려 사항 (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)      -   [Service Broker 개발자 정보 센터](http://msdn.microsoft.com/library/ms166100.aspx)      -   [개발자 가이드 (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)"
  syntax:
    content: public sealed class SqlDependency
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: SqlDependency()
  nameWithType: SqlDependency.SqlDependency()
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref> 기본 설정 사용 합니다."
  remarks: "생성자가 초기화 하는 <xref:System.Data.SqlClient.SqlDependency>개체 기본 Service Broker 서비스 이름 및 제한 시간을 사용 하 여.</xref:System.Data.SqlClient.SqlDependency> 사용 해야 생성 한 후 특정 시점에서 <xref:System.Data.SqlClient.SqlDependency.AddCommandDependency%2A>이 명령을 하나 이상 연결 하는 방법이 <xref:System.Data.SqlClient.SqlDependency>개체.</xref:System.Data.SqlClient.SqlDependency> </xref:System.Data.SqlClient.SqlDependency.AddCommandDependency%2A>       쿼리 알림은 다음과 같은 요구 사항을 충족 하는 SELECT 문에 대해서만 지원 됩니다. 다음 표에서 SQL Server 온라인 설명서의 Service Broker 및 쿼리 알림 문서에 대 한 링크를 제공합니다.       **SQL Server 온라인 설명서**      -   [알림에 대 한 쿼리 만들기](http://msdn.microsoft.com/library/ms181122.aspx)      -   [Service Broker에 대 한 보안 고려 사항](http://msdn.microsoft.com/library/ms166059.aspx)      -   [보안 및 보호 (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)      -   [Notifications Services에 대 한 보안 고려 사항](http://msdn.microsoft.com/library/ms172604.aspx)      -   [쿼리 알림 사용 권한](http://msdn.microsoft.com/library/ms188311.aspx)      -   [Service Broker에 대 한 국가별 고려 사항](http://msdn.microsoft.com/library/ms166028.aspx)      -   [솔루션 디자인 고려 사항 (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)      -   [Service Broker 개발자 정보 센터](http://msdn.microsoft.com/library/ms166100.aspx)      -   [개발자 가이드 (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)"
  syntax:
    content: public SqlDependency ();
    parameters: []
  overload: System.Data.SqlClient.SqlDependency.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand)
  id: '#ctor(System.Data.SqlClient.SqlCommand)'
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: SqlDependency(SqlCommand)
  nameWithType: SqlDependency.SqlDependency(SqlCommand)
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency(SqlCommand)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref> 에 연결 하 고 클래스는 <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> 매개 변수입니다."
  remarks: "이 생성자의 인스턴스를 만들고 내부적으로 <xref:System.Data.Sql.SqlNotificationRequest>클래스와에 바인딩합니다는 <xref:System.Data.SqlClient.SqlCommand>개체.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.Sql.SqlNotificationRequest>       쿼리 알림은 다음과 같은 요구 사항을 충족 하는 SELECT 문에 대해서만 지원 됩니다. 다음 표에서 SQL Server 온라인 설명서의 Service Broker 및 쿼리 알림 문서에 대 한 링크를 제공합니다.       **SQL Server 온라인 설명서**      -   [알림에 대 한 쿼리 만들기](http://msdn.microsoft.com/library/ms181122.aspx)      -   [Service Broker에 대 한 보안 고려 사항](http://msdn.microsoft.com/library/ms166059.aspx)      -   [보안 및 보호 (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)      -   [Notifications Services에 대 한 보안 고려 사항](http://msdn.microsoft.com/library/ms172604.aspx)      -   [쿼리 알림 사용 권한](http://msdn.microsoft.com/library/ms188311.aspx)      -   [Service Broker에 대 한 국가별 고려 사항](http://msdn.microsoft.com/library/ms166028.aspx)      -   [솔루션 디자인 고려 사항 (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)      -   [Service Broker 개발자 정보 센터](http://msdn.microsoft.com/library/ms166100.aspx)      -   [개발자 가이드 (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)"
  syntax:
    content: public SqlDependency (System.Data.SqlClient.SqlCommand command);
    parameters:
    - id: command
      type: System.Data.SqlClient.SqlCommand
      description: "<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> 이 연결할 개체 <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref> 개체입니다. 생성자를 설정 합니다는 <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;> </xref> 개체 및 명령에 바인딩합니다."
  overload: System.Data.SqlClient.SqlDependency.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> command </code> 매개 변수는 NULL입니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> 개체에 이미는 <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;> </xref> 개체에 할당 된 해당 <xref:System.Data.SqlClient.SqlCommand.Notification*>속성과 <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;> </xref> 이 종속성에 연결 되어 있지 않습니다.</xref:System.Data.SqlClient.SqlCommand.Notification*>"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)
  id: '#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)'
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: SqlDependency(SqlCommand,String,Int32)
  nameWithType: SqlDependency.SqlDependency(SqlCommand,String,Int32)
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency(SqlCommand,String,Int32)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref> 클래스를 사용 하 여 연결 된 <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> 매개 변수를 및 알림 옵션 및 제한 시간 값을 지정 합니다."
  remarks: "쿼리 알림은 다음과 같은 요구 사항을 충족 하는 SELECT 문에 대해서만 지원 됩니다. 다음 표에서 SQL Server 온라인 설명서의 Service Broker 및 쿼리 알림 문서에 대 한 링크를 제공합니다.       **SQL Server 온라인 설명서**      -   [알림에 대 한 쿼리 만들기](http://msdn.microsoft.com/library/ms181122.aspx)      -   [Service Broker에 대 한 보안 고려 사항](http://msdn.microsoft.com/library/ms166059.aspx)      -   [보안 및 보호 (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)      -   [Notifications Services에 대 한 보안 고려 사항](http://msdn.microsoft.com/library/ms172604.aspx)      -   [쿼리 알림 사용 권한](http://msdn.microsoft.com/library/ms188311.aspx)      -   [Service Broker에 대 한 국가별 고려 사항](http://msdn.microsoft.com/library/ms166028.aspx)      -   [솔루션 디자인 고려 사항 (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)      -   [Service Broker 개발자 정보 센터](http://msdn.microsoft.com/library/ms166100.aspx)      -   [개발자 가이드 (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)"
  syntax:
    content: public SqlDependency (System.Data.SqlClient.SqlCommand command, string options, int timeout);
    parameters:
    - id: command
      type: System.Data.SqlClient.SqlCommand
      description: "<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> 이 연결할 개체 <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref> 개체입니다. 생성자를 설정 하는 <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;> </xref> 개체 및 명령에 바인딩합니다."
    - id: options
      type: System.String
      description: "이 종속성에서 사용할 알림 요청 옵션입니다.  `null`기본 서비스를 사용 합니다."
    - id: timeout
      type: System.Int32
      description: "초 후에이 알림에 대 한 제한 시간입니다. 기본값은 0, 서버 제한 시간을 사용 해야 함을 나타내는입니다."
  overload: System.Data.SqlClient.SqlDependency.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> command </code> 매개 변수는 NULL입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "제한 시간 값이&0; 보다 작습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> 개체에 이미는 <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;> </xref> 개체에 할당 된 해당 <> </> *> 속성과 <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;> </xref> 이 종속성에 연결 되어 있지 않습니다.       만들 하려고 한 * *SqlDependency** SQLCLR 내에서 인스턴스."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.AddCommandDependency(System.Data.SqlClient.SqlCommand)
  id: AddCommandDependency(System.Data.SqlClient.SqlCommand)
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: AddCommandDependency(SqlCommand)
  nameWithType: SqlDependency.AddCommandDependency(SqlCommand)
  fullName: System.Data.SqlClient.SqlDependency.AddCommandDependency(SqlCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "연결 된 <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> 개체를이 <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref> 인스턴스."
  remarks: "쿼리 알림은 다음과 같은 요구 사항을 충족 하는 SELECT 문에 대해서만 지원 됩니다. 다음 표에서 SQL Server 온라인 설명서의 Service Broker 및 쿼리 알림 문서에 대 한 링크를 제공합니다.       **SQL Server 온라인 설명서**      -   [알림에 대 한 쿼리 만들기](http://msdn.microsoft.com/library/ms181122.aspx)      -   [Service Broker에 대 한 보안 고려 사항](http://msdn.microsoft.com/library/ms166059.aspx)      -   [보안 및 보호 (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)      -   [Notifications Services에 대 한 보안 고려 사항](http://msdn.microsoft.com/library/ms172604.aspx)      -   [쿼리 알림 사용 권한](http://msdn.microsoft.com/library/ms188311.aspx)      -   [Service Broker에 대 한 국가별 고려 사항](http://msdn.microsoft.com/library/ms166028.aspx)      -   [솔루션 디자인 고려 사항 (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)      -   [Service Broker 개발자 정보 센터](http://msdn.microsoft.com/library/ms166100.aspx)      -   [개발자 가이드 (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)"
  syntax:
    content: public void AddCommandDependency (System.Data.SqlClient.SqlCommand command);
    parameters:
    - id: command
      type: System.Data.SqlClient.SqlCommand
      description: "A <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> 알림에 대 한 유효한 문이 포함 된 개체입니다."
  overload: System.Data.SqlClient.SqlDependency.AddCommandDependency*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> command </code> 매개 변수가 null입니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> 개체에 이미는 <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;> </xref> 개체에 할당 된 해당 <xref:System.Data.SqlClient.SqlCommand.Notification*>속성과 <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;> </xref> 이 종속성에 연결 되어 있지 않습니다.</xref:System.Data.SqlClient.SqlCommand.Notification*>"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.HasChanges
  id: HasChanges
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: HasChanges
  nameWithType: SqlDependency.HasChanges
  fullName: System.Data.SqlClient.SqlDependency.HasChanges
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "종속성이 있는 연결 된 결과 집합 중 하나 변경 되었는지 여부를 나타내는 값을 가져옵니다."
  remarks: "사용 하지 않는 경우는 <xref:System.Data.SqlClient.SqlDependency.OnChange>이벤트를 쿼리 결과 변경 되었는지 여부를 확인 하려면 HasChanges 속성을 확인할 수 있습니다.</xref:System.Data.SqlClient.SqlDependency.OnChange>       HasChanges 속성 데이터의 변경을 반드시 의미 하지는 않습니다. 만료 시간 제한 등의 상황 및 알림 요청을 설정 하지 않으면 변경 이벤트를 생성할 수도 있습니다."
  syntax:
    content: public bool HasChanges { get; }
    return:
      type: System.Boolean
      description: "집합 결과 중 하나를 나타내는 부울 값을 변경 되었습니다."
  overload: System.Data.SqlClient.SqlDependency.HasChanges*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.Id
  id: Id
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: Id
  nameWithType: SqlDependency.Id
  fullName: System.Data.SqlClient.SqlDependency.Id
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "이 인스턴스를 고유 하 게 식별 하는 값을 가져옵니다는 <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref> 클래스입니다."
  remarks: "Id 속성은 고유 하 게 식별 하는 데 사용 되는 주어진 <xref:System.Data.SqlClient.SqlDependency>인스턴스.</xref:System.Data.SqlClient.SqlDependency>"
  syntax:
    content: public string Id { get; }
    return:
      type: System.String
      description: "각 인스턴스에 대해 생성 되는 GUID의 문자열 표현을 <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref> 클래스입니다."
  overload: System.Data.SqlClient.SqlDependency.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.OnChange
  id: OnChange
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: OnChange
  nameWithType: SqlDependency.OnChange
  fullName: System.Data.SqlClient.SqlDependency.OnChange
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "이 연결 된 명령 중 하나에 대 한 알림의 받을 때 발생 <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref> 개체입니다."
  remarks: "OnChange 관련된 명령에 대 한 결과가 변경 될 경우 발생 합니다. OnChange를 사용 하지 않는 경우 확인할 수 있습니다는 <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A>속성을 쿼리 결과가 변경 되었는지 여부를 확인 합니다.</xref:System.Data.SqlClient.SqlDependency.HasChanges%2A>       OnChange 이벤트 데이터의 변경을 반드시 의미 하지는 않습니다. 만료 시간 제한 등의 상황 및 알림 요청을 설정 하지 못하면 OnChange를 생성할 수도 있습니다."
  syntax:
    content: public event System.Data.SqlClient.OnChangeEventHandler OnChange;
    return:
      type: System.Data.SqlClient.OnChangeEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.Start(System.String)
  id: Start(System.String)
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: Start(String)
  nameWithType: SqlDependency.Start(String)
  fullName: System.Data.SqlClient.SqlDependency.Start(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "연결 문자열에서 지정 된 SQL server 인스턴스에서 종속성 변경 알림을 수신 하기 위한 수신기를 시작 합니다."
  remarks: "에 대 한 수신기를 시작 하는이 메서드는 <xref:System.AppDomain>인스턴스의 종속성 알림을 받기 위해 [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] 에 지정 된는 `connectionString` 매개 변수.</xref:System.AppDomain> 이 메서드는 여러 서버에 서로 다른 연결 문자열로 두 번 이상 호출할 수 있습니다.       추가적인 주의 사항은 <xref:System.Data.SqlClient.SqlDependency.Start%2A>.</xref:System.Data.SqlClient.SqlDependency.Start%2A> 을 참조 하십시오."
  syntax:
    content: public static bool Start (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "인스턴스에 대 한 연결 문자열 [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] 를 가져올 변경 알림입니다."
    return:
      type: System.Boolean
      description: '**true 이면** 수신기 성공적으로 초기화 하는 경우 **false** 호환 수신기가 이미 있는 경우.'
  overload: System.Data.SqlClient.SqlDependency.Start*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> connectionString </code> 매개 변수는 NULL입니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code> connectionString </code> 매개 변수는이 메서드에 대 한 이전 호출에서와 동일 하지만 매개 변수는 다양 합니다.       CLR 내에서 메서드가 호출 되었습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출자에 게 필요한 없는 <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> 코드 액세스 보안 (CA) 권한입니다."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "이후에 호출 된 메서드에 동일한 이루어졌을 <code> connectionString </code> 매개 변수는 다른 사용자와 동일한 스키마를 기본값으로 사용 하지 않은 사용자입니다.       또한 모든 기본 **SqlClient** 예외입니다."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.Start(System.String,System.String)
  id: Start(System.String,System.String)
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: Start(String,String)
  nameWithType: SqlDependency.Start(String,String)
  fullName: System.Data.SqlClient.SqlDependency.Start(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "지정 된 SQL Server Service Broker 큐를 사용 하 여 연결 문자열에 지정 된 SQL Server의 인스턴스에서 종속성 변경 알림을 수신 하기 위한 수신기를 시작 합니다."
  remarks: "에 대 한 수신기를 시작 하는이 메서드는 <xref:System.AppDomain>지정 된 SQL Server의 인스턴스에서 종속성 알림을 받기 위해는 `connectionString` 매개 변수.</xref:System.AppDomain> 이 메서드는 여러 서버에 서로 다른 연결 문자열로 두 번 이상 호출할 수 있습니다.       이름이 없는 큐를 지정 하는 경우 <xref:System.Data.SqlClient.SqlDependency>임시 큐를 만들고 작업을 둘 이상의 <xref:System.AppDomain>.</xref:System.AppDomain> 해야 하는 경우에 전체 프로세스에 사용 되는 서버에서 서비스</xref:System.Data.SqlClient.SqlDependency> 큐와 서비스 응용 프로그램 종료 시 자동으로 제거 됩니다.       추가적인 주의 사항은 <xref:System.Data.SqlClient.SqlDependency.Start%2A>.</xref:System.Data.SqlClient.SqlDependency.Start%2A> 을 참조 하십시오."
  syntax:
    content: public static bool Start (string connectionString, string queue);
    parameters:
    - id: connectionString
      type: System.String
      description: "연결 문자열을 가져올 SQL Server의 인스턴스에 대 한 변경 알림입니다."
    - id: queue
      type: System.String
      description: "사용할 기존 SQL Server Service Broker 큐입니다. 경우 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 기본 큐를 사용 합니다."
    return:
      type: System.Boolean
      description: '**true 이면** 수신기 성공적으로 초기화 하는 경우 **false** 호환 수신기가 이미 있는 경우.'
  overload: System.Data.SqlClient.SqlDependency.Start*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> connectionString </code> 매개 변수는 NULL입니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code> connectionString </code> 매개 변수는이 메서드에 대 한 이전 호출에서와 동일 하지만 매개 변수는 다양 합니다.       CLR 내에서 메서드가 호출 되었습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출자에 게 필요한 없는 <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> 코드 액세스 보안 (CA) 권한입니다."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "이후에 호출 된 메서드에 동일한 이루어졌을 <code> connectionString </code> 매개 변수 이지만 다른 사용자 또는 동일한 스키마를 기본값으로 사용 하지 않은 사용자입니다.       또한 모든 기본 **SqlClient** 예외입니다."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.Stop(System.String)
  id: Stop(System.String)
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: Stop(String)
  nameWithType: SqlDependency.Stop(String)
  fullName: System.Data.SqlClient.SqlDependency.Stop(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "이전에 지정 된 연결에 대 한 수신기를 중지 <xref:System.Data.SqlClient.SqlDependency.Start*>호출.</xref:System.Data.SqlClient.SqlDependency.Start*>"
  remarks: "<xref:System.Data.SqlClient.SqlDependency.Stop%2A>각각에 대해 메서드를 호출 해야 <xref:System.Data.SqlClient.SqlDependency.Start%2A>호출.</xref:System.Data.SqlClient.SqlDependency.Start%2A> </xref:System.Data.SqlClient.SqlDependency.Stop%2A> 지정 된 수신기만 동일한 수의 받는 경우 완전 하 게 종료 <xref:System.Data.SqlClient.SqlDependency.Stop%2A>요청으로 <xref:System.Data.SqlClient.SqlDependency.Start%2A>요청.</xref:System.Data.SqlClient.SqlDependency.Start%2A> </xref:System.Data.SqlClient.SqlDependency.Stop%2A>"
  syntax:
    content: public static bool Stop (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "이전에 사용 된 SQL Server의 인스턴스에 대 한 연결 문자열 <xref:System.Data.SqlClient.SqlDependency.Start*>호출.</xref:System.Data.SqlClient.SqlDependency.Start*>"
    return:
      type: System.Boolean
      description: '**true 이면** 경우 수신기 완전히 중지 되었습니다. **false** 경우는 <xref href=&quot;System.AppDomain&quot;> </xref> 수신기 로부터 언바운드 없습니다 하지만 하나 이상의 다른 <xref href=&quot;System.AppDomain&quot;> </xref> 동일한 수신기를 사용 합니다.'
  overload: System.Data.SqlClient.SqlDependency.Stop*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> connectionString </code> 매개 변수는 NULL입니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "메서드는 SQLCLR 내에서 호출 되었습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출자에 게 필요한 없는 <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> 코드 액세스 보안 (CA) 권한입니다."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "기본 **SqlClient** 예외가 발생 했습니다."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)
  id: Stop(System.String,System.String)
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: Stop(String,String)
  nameWithType: SqlDependency.Stop(String,String)
  fullName: System.Data.SqlClient.SqlDependency.Stop(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "이전에 지정 된 연결에 대 한 수신기를 중지 <xref:System.Data.SqlClient.SqlDependency.Start*>호출.</xref:System.Data.SqlClient.SqlDependency.Start*>"
  remarks: "<xref:System.Data.SqlClient.SqlDependency.Stop%2A>각각에 대해 메서드를 호출 해야 <xref:System.Data.SqlClient.SqlDependency.Start%2A>호출.</xref:System.Data.SqlClient.SqlDependency.Start%2A> </xref:System.Data.SqlClient.SqlDependency.Stop%2A> 지정 된 수신기만 동일한 수의 받는 경우 완전 하 게 종료 <xref:System.Data.SqlClient.SqlDependency.Stop%2A>요청으로 <xref:System.Data.SqlClient.SqlDependency.Start%2A>요청.</xref:System.Data.SqlClient.SqlDependency.Start%2A> </xref:System.Data.SqlClient.SqlDependency.Stop%2A>"
  syntax:
    content: public static bool Stop (string connectionString, string queue);
    parameters:
    - id: connectionString
      type: System.String
      description: "이전에 사용 된 SQL Server의 인스턴스에 대 한 연결 문자열 <xref:System.Data.SqlClient.SqlDependency.Start*>호출.</xref:System.Data.SqlClient.SqlDependency.Start*>"
    - id: queue
      type: System.String
      description: "이전에 사용 된 SQL Server Service Broker 큐 <xref:System.Data.SqlClient.SqlDependency.Start*>호출.</xref:System.Data.SqlClient.SqlDependency.Start*>"
    return:
      type: System.Boolean
      description: '**true 이면** 경우 수신기 완전히 중지 되었습니다. **false** 경우는 <xref href=&quot;System.AppDomain&quot;> </xref> 수신기 로부터 언바운드 없습니다 하지만 적어도 하나의 다른 <xref href=&quot;System.AppDomain&quot;> </xref> 동일한 수신기를 사용 합니다.'
  overload: System.Data.SqlClient.SqlDependency.Stop*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> connectionString </code> 매개 변수는 NULL입니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "메서드는 SQLCLR 내에서 호출 되었습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출자에 게 필요한 없는 <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> 코드 액세스 보안 (CA) 권한입니다."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "기본 및 **SqlClient** 예외가 발생 했습니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Data.SqlClient.SqlException
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlException
  nameWithType: SqlException
  fullName: System.Data.SqlClient.SqlException
- uid: System.Data.SqlClient.SqlDependency.#ctor
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: SqlDependency()
  nameWithType: SqlDependency.SqlDependency()
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency()
- uid: System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: SqlDependency(SqlCommand)
  nameWithType: SqlDependency.SqlDependency(SqlCommand)
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency(SqlCommand)
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
- uid: System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: SqlDependency(SqlCommand,String,Int32)
  nameWithType: SqlDependency.SqlDependency(SqlCommand,String,Int32)
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency(SqlCommand,String,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlDependency.AddCommandDependency(System.Data.SqlClient.SqlCommand)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: AddCommandDependency(SqlCommand)
  nameWithType: SqlDependency.AddCommandDependency(SqlCommand)
  fullName: System.Data.SqlClient.SqlDependency.AddCommandDependency(SqlCommand)
- uid: System.Data.SqlClient.SqlDependency.HasChanges
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: HasChanges
  nameWithType: SqlDependency.HasChanges
  fullName: System.Data.SqlClient.SqlDependency.HasChanges
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlDependency.Id
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Id
  nameWithType: SqlDependency.Id
  fullName: System.Data.SqlClient.SqlDependency.Id
- uid: System.Data.SqlClient.SqlDependency.OnChange
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: OnChange
  nameWithType: SqlDependency.OnChange
  fullName: System.Data.SqlClient.SqlDependency.OnChange
- uid: System.Data.SqlClient.OnChangeEventHandler
  parent: System.Data.SqlClient
  isExternal: false
  name: OnChangeEventHandler
  nameWithType: OnChangeEventHandler
  fullName: System.Data.SqlClient.OnChangeEventHandler
- uid: System.Data.SqlClient.SqlDependency.Start(System.String)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Start(String)
  nameWithType: SqlDependency.Start(String)
  fullName: System.Data.SqlClient.SqlDependency.Start(String)
- uid: System.Data.SqlClient.SqlDependency.Start(System.String,System.String)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Start(String,String)
  nameWithType: SqlDependency.Start(String,String)
  fullName: System.Data.SqlClient.SqlDependency.Start(String,String)
- uid: System.Data.SqlClient.SqlDependency.Stop(System.String)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Stop(String)
  nameWithType: SqlDependency.Stop(String)
  fullName: System.Data.SqlClient.SqlDependency.Stop(String)
- uid: System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Stop(String,String)
  nameWithType: SqlDependency.Stop(String,String)
  fullName: System.Data.SqlClient.SqlDependency.Stop(String,String)
- uid: System.Data.SqlClient.SqlDependency.#ctor*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: SqlDependency
  nameWithType: SqlDependency.SqlDependency
- uid: System.Data.SqlClient.SqlDependency.AddCommandDependency*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: AddCommandDependency
  nameWithType: SqlDependency.AddCommandDependency
- uid: System.Data.SqlClient.SqlDependency.HasChanges*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: HasChanges
  nameWithType: SqlDependency.HasChanges
- uid: System.Data.SqlClient.SqlDependency.Id*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Id
  nameWithType: SqlDependency.Id
- uid: System.Data.SqlClient.SqlDependency.Start*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Start
  nameWithType: SqlDependency.Start
- uid: System.Data.SqlClient.SqlDependency.Stop*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Stop
  nameWithType: SqlDependency.Stop
