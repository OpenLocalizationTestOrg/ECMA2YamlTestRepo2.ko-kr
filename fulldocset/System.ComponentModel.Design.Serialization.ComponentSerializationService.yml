### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService
  id: ComponentSerializationService
  children:
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(System.IO.Stream)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  langs:
  - csharp
  name: ComponentSerializationService
  nameWithType: ComponentSerializationService
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService
  type: Class
  summary: "구성 요소 또는 직렬화 가능 개체 집합을 serialization 저장소로 직렬화 하는 작업에 대 한 기본 클래스를 제공 합니다."
  remarks: "ComponentSerializationService serialization 저장소에 구성 요소 또는 직렬화 가능 개체 집합을 serialize합니다. 저장소 나중에 다음 역직렬화 수 있습니다. ComponentSerializationService 클래스 serialization 형식을 불투명 하며, 개체의 부분 serialization에 대 한 허용 한다는 점에서 다른 serialization 스키마에서 다릅니다. 예를 들어 개체에 대해 선택한 속성만 직렬화 할 수 있습니다.       이 클래스는 `abstract`합니다. 일반적으로는 <xref:System.ComponentModel.Design.Serialization.DesignerLoader>이 클래스의 구체적 구현을 제공 되며 해당 <xref:System.ComponentModel.Design.DesignSurface>.</xref:System.ComponentModel.Design.DesignSurface> 서비스로 추가</xref:System.ComponentModel.Design.Serialization.DesignerLoader> 이 개체를에 가장 적합 한 형식에서 serialize 할 수 있습니다.       ComponentSerializationService 클래스 대체는 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>있지만 인터페이스가 유지 이전 버전과 호환성에 대 한.NET Framework 버전 1.0에서에서 인터페이스.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>"
  syntax:
    content: public abstract class ComponentSerializationService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: ComponentSerializationService()
  nameWithType: ComponentSerializationService.ComponentSerializationService()
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.ComponentSerializationService()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.Design.Serialization.ComponentSerializationService&quot;> </xref> 클래스입니다."
  syntax:
    content: protected ComponentSerializationService ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore
  id: CreateStore
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: CreateStore()
  nameWithType: ComponentSerializationService.CreateStore()
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "새 <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref>합니다."
  remarks: "동일한 serialization 저장소에 여러 개체를 serialize 할 수 있습니다. 호출할 수 있습니다 때 저장소와 함께 완료 되 면 해당 <xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A>또는 <xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A>메서드.</xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A> </xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A> Serialization 저장소를 닫은 후 deserialization에 사용할 수 있습니다 또는 스트림으로 저장할 수 있습니다.       Serialization 저장소 개체의 그룹에 대 한 serialization 상태를 생성 하는 다양 한 직렬화 메서드 중 하나에 전달할 수 있습니다."
  syntax:
    content: public abstract System.ComponentModel.Design.Serialization.SerializationStore CreateStore ();
    parameters: []
    return:
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "새로 생성된 된 serialization 저장소입니다."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)
  id: Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: Deserialize(SerializationStore)
  nameWithType: ComponentSerializationService.Deserialize(SerializationStore)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(SerializationStore)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "개체의 컬렉션을 생성 하기 위해 지정된 된 저장소를 역직렬화 합니다."
  remarks: "이 메서드를 역직렬화 `store` 그 안에 포함 된 개체의 컬렉션을 생성 합니다. 개체는 직렬화 된 동일한 순서로 deserialize 됩니다."
  syntax:
    content: public abstract System.Collections.ICollection Deserialize (System.ComponentModel.Design.Serialization.SerializationStore store);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> 를 역직렬화 합니다."
    return:
      type: System.Collections.ICollection
      description: "저장 된 상태에 따라 생성 된 개체의 컬렉션입니다."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>데이터를 형식 serialization 컨테이너를 처리할 수 없습니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  id: Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: Deserialize(SerializationStore,IContainer)
  nameWithType: ComponentSerializationService.Deserialize(SerializationStore,IContainer)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(SerializationStore,IContainer)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "특정된 매장을 deserialize 하 고 채웁니다는 주어진 <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> 역직렬화와 <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> 개체입니다."
  remarks: "이 메서드를 역직렬화 `store` 그 안에 포함 된 개체의 컬렉션을 생성 합니다. 개체는 직렬화 된 동일한 순서로 deserialize 됩니다.       구현 하는 개체를 만든 <xref:System.ComponentModel.IComponent>에 추가 `container`.</xref:System.ComponentModel.IComponent>"
  syntax:
    content: public abstract System.Collections.ICollection Deserialize (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> 를 역직렬화 합니다."
    - id: container
      type: System.ComponentModel.IContainer
      description: "<xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> 를 <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> 개체가 추가 됩니다."
    return:
      type: System.Collections.ICollection
      description: "저장 된 상태에 따라 생성 된 개체의 컬렉션입니다."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>container</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>데이터를 형식 serialization 컨테이너를 처리할 수 없습니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  id: DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: DeserializeTo(SerializationStore,IContainer)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "역직렬화는 주어진 <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> 지정된 된 컨테이너에 있습니다."
  remarks: "DeserializeTo 메서드 역직렬화 `store`, 새 개체를 생성 하는 대신에 적용 됩니다 저장소에서 데이터는 기존 개체 집합을 제공된 된 컨테이너에서 가져옵니다. 하지만 결과적으로, 호출자에 게 개체를 만들 수 미리 적절 합니다. 개체의 deserialization 상태 개체가 기존 개체의 집합에 이름이 지정 되지 않은 경우 새 개체가 생성 됩니다. 해당 개체도 구현 하는 경우 <xref:System.ComponentModel.IComponent>에 추가 됩니다 `container`.</xref:System.ComponentModel.IComponent> 컨테이너의 개체 이름, 기존 개체를 사용할 수 있는 순서로 serialization 저장소 개체에에서 일치 하는 형식이 있어야 합니다."
  syntax:
    content: public void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> 를 역직렬화 합니다."
    - id: container
      type: System.ComponentModel.IContainer
      description: "컨테이너를 <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> 개체가 추가 됩니다."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>container</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>데이터를 형식 serialization 컨테이너를 처리할 수 없습니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)
  id: DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: DeserializeTo(SerializationStore,IContainer,Boolean)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "역직렬화는 주어진 <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> 지정된 된 컨테이너에 형식 재활용 필요에 따라 유효성을 검사 합니다."
  remarks: "<xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A>메서드 역직렬화 `store`, 새 개체를 생성 하는 대신 제공된 된 컨테이너에서 가져온 개체의 기존 집합에 데이터를 저장소에 적용 되지만.</xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> 하지만 결과적으로, 호출자에 게 개체를 만들 수 미리 적절 합니다. 개체의 deserialization 상태 개체가 기존 개체의 집합에 이름이 지정 되지 않은 경우 새 개체가 생성 됩니다. 해당 개체도 구현 하는 경우 <xref:System.ComponentModel.IComponent>에 추가 됩니다 `container`.</xref:System.ComponentModel.IComponent> 컨테이너의 개체 이름, 기존 개체를 사용할 수 있는 순서로 serialization 저장소 개체에에서 일치 하는 형식이 있어야 합니다."
  syntax:
    content: public void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container, bool validateRecycledTypes);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> 를 역직렬화 합니다."
    - id: container
      type: System.ComponentModel.IContainer
      description: "컨테이너를 <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> 개체가 추가 됩니다."
    - id: validateRecycledTypes
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>같은 형식의 개체에 적용 된 경우 deserialization만 적용 됩니다 되도록 합니다."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>container</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>데이터를 형식 serialization 컨테이너를 처리할 수 없습니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)
  id: DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "역직렬화는 주어진 <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> 지정된 된 컨테이너를 필요에 따라 기본 속성 값 적용 합니다."
  remarks: "<xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A>메서드 역직렬화 `store`, 새 개체를 생성 하는 대신 제공된 된 컨테이너에서 가져온 개체의 기존 집합에 데이터를 저장소에 적용 되지만.</xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> 하지만 결과적으로, 호출자에 게 개체를 만들 수 미리 적절 합니다. 개체의 deserialization 상태 개체가 기존 개체의 집합에 이름이 지정 되지 않은 경우 새 개체가 생성 됩니다. 해당 개체도 구현 하는 경우 <xref:System.ComponentModel.IComponent>에 추가 됩니다 `container`.</xref:System.ComponentModel.IComponent> 컨테이너의 개체 이름, 기존 개체를 사용할 수 있는 순서로 serialization 저장소 개체에에서 일치 하는 형식이 있어야 합니다."
  syntax:
    content: public abstract void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container, bool validateRecycledTypes, bool applyDefaults);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> 를 역직렬화 합니다."
    - id: container
      type: System.ComponentModel.IContainer
      description: "컨테이너를 <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> 개체가 추가 됩니다."
    - id: validateRecycledTypes
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>같은 형식의 개체에 적용 된 경우 deserialization만 적용 됩니다 되도록 합니다."
    - id: applyDefaults
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>기본 속성 값을 적용 해야 하는지 지정 합니다."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>container</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>데이터를 형식 serialization 컨테이너를 처리할 수 없습니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(System.IO.Stream)
  id: LoadStore(System.IO.Stream)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: LoadStore(Stream)
  nameWithType: ComponentSerializationService.LoadStore(Stream)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(Stream)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "로드 한 <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> 스트림에서 합니다."
  remarks: "반환 된 저장소를 사용 하 여 중 하나에 전달 하 여 개체를 deserialize 하는 <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A>메서드.</xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A>"
  syntax:
    content: public abstract System.ComponentModel.Design.Serialization.SerializationStore LoadStore (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>저장소 로드 됩니다.</xref:System.IO.Stream>"
    return:
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "새 <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> 인스턴스."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>stream</code>에 대 한 이전 호출에 의해 저장 되는 데이터가 포함 되지 않은 <xref:System.ComponentModel.Design.Serialization.SerializationStore.Save*>합니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  id: Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: Serialize(SerializationStore,Object)
  nameWithType: ComponentSerializationService.Serialize(SerializationStore,Object)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(SerializationStore,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "지정 된 개체를 serialize 된 지정 <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref>합니다."
  remarks: "이 메서드를 두 번 이상 호출 하 여 둘 이상의 개체를 serialize 하는 저장소를 사용할 수 있습니다."
  syntax:
    content: public abstract void Serialize (System.ComponentModel.Design.Serialization.SerializationStore store, object value);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> 있는 상태의 `value` 기록 됩니다."
    - id: value
      type: System.Object
      description: "직렬화 할 개체입니다."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>가 닫힌 경우 또는 <code>store</code> serialization 저장소의 지원 되는 형식이 아닙니다. 반환 된 저장소를 사용 하 여 <xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*>합니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  id: SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: SerializeAbsolute(SerializationStore,Object)
  nameWithType: ComponentSerializationService.SerializeAbsolute(SerializationStore,Object)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(SerializationStore,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "기본 속성 값을 고려 하 여 지정된 된 개체를 serialize 합니다."
  remarks: "표준 serialization을 통해 구현 되는 <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A>메서드, 구성 요소의 기본 상태에서 다른 값을 serialize 합니다.</xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A> 이 가장 간단한 serialization 메커니즘을 제공 하지만 새로 만든된 개체를 역직렬화 하는 동안 사용할 수 있다고 가정 합니다. Deserialize 된 결과 개체는 직렬화 된 개체의 원래 상태를 복제 하는 불가능할 기존 개체를 사용 하는 경우 역직렬화 하는 동안 직렬화 하는 동안 기본값을 포함 하는 속성을 기본값으로 재설정 되지 됩니다.       SerializeAbsolute 메서드는이 바로 가기이 키를 사용 하지 않습니다. Deserialization에는 기본 상태에 관계 없이 모든 개체의 속성을 복원할 수 있도록 원본 개체의 모든 속성을 serialize 합니다.       컬렉션 내에서 구성 항목의 순서를 변경할 수 있으므로이 메서드는 컬렉션을 직렬화 하는 데 특히 유용 합니다. 이 경우에는 전체 컬렉션의 원래 상태로 복원 하는 가장 안전한 프로세스에는 원래 모든 속성 값을 가진 모든 항목을 덮어쓰게 됩니다."
  syntax:
    content: public abstract void SerializeAbsolute (System.ComponentModel.Design.Serialization.SerializationStore store, object value);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> 있는 상태의 `value` 직렬화 됩니다."
    - id: value
      type: System.Object
      description: "직렬화 할 개체입니다."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>가 닫힌 경우 또는 <code>store</code> serialization 저장소의 지원 되는 형식이 아닙니다. 반환 된 저장소를 사용 하 여 <xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*>합니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  id: SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: SerializeMember(SerializationStore,Object,MemberDescriptor)
  nameWithType: ComponentSerializationService.SerializeMember(SerializationStore,Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(SerializationStore,Object,MemberDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "지정된 된 개체에 지정된 된 멤버를 serialize합니다."
  remarks: "SerializeMember 메서드는 serialization 저장소 내에서 serialize 된 멤버의 목록을 작성 하는 동일한 개체에 대 한 여러 번 호출할 수 있습니다. 일반적으로 속성 또는 이벤트의 멤버 여야 합니다."
  syntax:
    content: public abstract void SerializeMember (System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, System.ComponentModel.MemberDescriptor member);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> 있는 상태의 `member` 직렬화 됩니다."
    - id: owningObject
      type: System.Object
      description: "개체 `member` 연결 됩니다."
    - id: member
      type: System.ComponentModel.MemberDescriptor
      description: "A <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> serialize 할 멤버를 지정 합니다."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>가 닫힌 경우 또는 <code>store</code> serialization 저장소의 지원 되는 형식이 아닙니다. 반환 된 저장소를 사용 하 여 <xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*>합니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  id: SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  nameWithType: ComponentSerializationService.SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "기본 속성 값을 지정된 된 개체에 지정된 된 멤버를 serialize 합니다."
  remarks: "SerializeMemberAbsolute 메서드는 직렬화는 `member` 에 `owningObject`경우에 `member` 기본 속성 값을 포함 합니다.       Note는 일부 구성원에 대해 기본값을 포함 하 고 멤버에 같은 값의 설정 복원은 서로 다른 개념입니다. 예를 들어 지역 값이 설정 된 경우 부모 개체에서 해당 값을 상속 하는 속성을 경우 속성 값으로 다시 설정 아니어야 원하는 방식으로 동작 합니다. SerializeMemberAbsolute 메서드는이를 고려 하 고 속성의 상태가 경우 선택을 취소 합니다."
  syntax:
    content: public abstract void SerializeMemberAbsolute (System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, System.ComponentModel.MemberDescriptor member);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> 있는 상태의 `member` 직렬화 됩니다."
    - id: owningObject
      type: System.Object
      description: "개체 `member` 연결 됩니다."
    - id: member
      type: System.ComponentModel.MemberDescriptor
      description: "Serialize 할 멤버입니다."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>가 닫힌 경우 또는 <code>store</code> serialization 저장소의 지원 되는 형식이 아닙니다. 반환 된 저장소를 사용 하 여 <xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*>합니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: ComponentSerializationService()
  nameWithType: ComponentSerializationService.ComponentSerializationService()
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.ComponentSerializationService()
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: CreateStore()
  nameWithType: ComponentSerializationService.CreateStore()
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore()
- uid: System.ComponentModel.Design.Serialization.SerializationStore
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: SerializationStore
  nameWithType: SerializationStore
  fullName: System.ComponentModel.Design.Serialization.SerializationStore
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Deserialize(SerializationStore)
  nameWithType: ComponentSerializationService.Deserialize(SerializationStore)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(SerializationStore)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Deserialize(SerializationStore,IContainer)
  nameWithType: ComponentSerializationService.Deserialize(SerializationStore,IContainer)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(SerializationStore,IContainer)
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: DeserializeTo(SerializationStore,IContainer)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: DeserializeTo(SerializationStore,IContainer,Boolean)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(System.IO.Stream)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: LoadStore(Stream)
  nameWithType: ComponentSerializationService.LoadStore(Stream)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Serialize(SerializationStore,Object)
  nameWithType: ComponentSerializationService.Serialize(SerializationStore,Object)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(SerializationStore,Object)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeAbsolute(SerializationStore,Object)
  nameWithType: ComponentSerializationService.SerializeAbsolute(SerializationStore,Object)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(SerializationStore,Object)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeMember(SerializationStore,Object,MemberDescriptor)
  nameWithType: ComponentSerializationService.SerializeMember(SerializationStore,Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(SerializationStore,Object,MemberDescriptor)
- uid: System.ComponentModel.MemberDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: MemberDescriptor
  nameWithType: MemberDescriptor
  fullName: System.ComponentModel.MemberDescriptor
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  nameWithType: ComponentSerializationService.SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: ComponentSerializationService
  nameWithType: ComponentSerializationService.ComponentSerializationService
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: CreateStore
  nameWithType: ComponentSerializationService.CreateStore
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Deserialize
  nameWithType: ComponentSerializationService.Deserialize
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: DeserializeTo
  nameWithType: ComponentSerializationService.DeserializeTo
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: LoadStore
  nameWithType: ComponentSerializationService.LoadStore
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Serialize
  nameWithType: ComponentSerializationService.Serialize
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeAbsolute
  nameWithType: ComponentSerializationService.SerializeAbsolute
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeMember
  nameWithType: ComponentSerializationService.SerializeMember
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeMemberAbsolute
  nameWithType: ComponentSerializationService.SerializeMemberAbsolute
