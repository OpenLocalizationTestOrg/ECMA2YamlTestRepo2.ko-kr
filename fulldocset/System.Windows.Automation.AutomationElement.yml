### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.AutomationElement
  id: AutomationElement
  children:
  - System.Windows.Automation.AutomationElement.AcceleratorKeyProperty
  - System.Windows.Automation.AutomationElement.AccessKeyProperty
  - System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent
  - System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent
  - System.Windows.Automation.AutomationElement.AutomationIdProperty
  - System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent
  - System.Windows.Automation.AutomationElement.BoundingRectangleProperty
  - System.Windows.Automation.AutomationElement.Cached
  - System.Windows.Automation.AutomationElement.CachedChildren
  - System.Windows.Automation.AutomationElement.CachedParent
  - System.Windows.Automation.AutomationElement.ClassNameProperty
  - System.Windows.Automation.AutomationElement.ClickablePointProperty
  - System.Windows.Automation.AutomationElement.ControlTypeProperty
  - System.Windows.Automation.AutomationElement.CultureProperty
  - System.Windows.Automation.AutomationElement.Current
  - System.Windows.Automation.AutomationElement.Equals(System.Object)
  - System.Windows.Automation.AutomationElement.Finalize
  - System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  - System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  - System.Windows.Automation.AutomationElement.FocusedElement
  - System.Windows.Automation.AutomationElement.FrameworkIdProperty
  - System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)
  - System.Windows.Automation.AutomationElement.FromLocalProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)
  - System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)
  - System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)
  - System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty)
  - System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  - System.Windows.Automation.AutomationElement.GetClickablePoint
  - System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)
  - System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty)
  - System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  - System.Windows.Automation.AutomationElement.GetHashCode
  - System.Windows.Automation.AutomationElement.GetRuntimeId
  - System.Windows.Automation.AutomationElement.GetSupportedPatterns
  - System.Windows.Automation.AutomationElement.GetSupportedProperties
  - System.Windows.Automation.AutomationElement.GetUpdatedCache(System.Windows.Automation.CacheRequest)
  - System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty
  - System.Windows.Automation.AutomationElement.HelpTextProperty
  - System.Windows.Automation.AutomationElement.IsContentElementProperty
  - System.Windows.Automation.AutomationElement.IsControlElementProperty
  - System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsEnabledProperty
  - System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty
  - System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsOffscreenProperty
  - System.Windows.Automation.AutomationElement.IsPasswordProperty
  - System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsRequiredForFormProperty
  - System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.ItemStatusProperty
  - System.Windows.Automation.AutomationElement.ItemTypeProperty
  - System.Windows.Automation.AutomationElement.LabeledByProperty
  - System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent
  - System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty
  - System.Windows.Automation.AutomationElement.MenuClosedEvent
  - System.Windows.Automation.AutomationElement.MenuOpenedEvent
  - System.Windows.Automation.AutomationElement.NameProperty
  - System.Windows.Automation.AutomationElement.NativeWindowHandleProperty
  - System.Windows.Automation.AutomationElement.NotSupported
  - System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  - System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  - System.Windows.Automation.AutomationElement.OrientationProperty
  - System.Windows.Automation.AutomationElement.ProcessIdProperty
  - System.Windows.Automation.AutomationElement.RootElement
  - System.Windows.Automation.AutomationElement.RuntimeIdProperty
  - System.Windows.Automation.AutomationElement.SetFocus
  - System.Windows.Automation.AutomationElement.StructureChangedEvent
  - System.Windows.Automation.AutomationElement.ToolTipClosedEvent
  - System.Windows.Automation.AutomationElement.ToolTipOpenedEvent
  - System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  - System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)
  - System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  langs:
  - csharp
  name: AutomationElement
  nameWithType: AutomationElement
  fullName: System.Windows.Automation.AutomationElement
  type: Class
  summary: "나타냅니다는 [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 요소에는 [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 트리를 선택한 UI 자동화 클라이언트 응용 프로그램에서 식별자로 사용 되는 값을 포함 합니다."
  remarks: "AutomationElement의 특정 부분에 해당 [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]기본 구현에 관계 없이 (예: [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] 또는 [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)])."
  syntax:
    content: public sealed class AutomationElement
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.AcceleratorKeyProperty
  id: AcceleratorKeyProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: AcceleratorKeyProperty
  nameWithType: AutomationElement.AcceleratorKeyProperty
  fullName: System.Windows.Automation.AutomationElement.AcceleratorKeyProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "식별 된 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey*>속성.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey*>"
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A>또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A>속성.</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       액셀러레이터 키 조합 작업을 호출 합니다. 예를 들어 CTRL + O는 대개를 호출 하 여 **열려** 파일 일반 대화 상자. <xref:System.Windows.Automation.AutomationElement>액셀러레이터 키 속성이 <xref:System.Windows.Automation.InvokePattern>클래스</xref:System.Windows.Automation.InvokePattern> 구현 항상 설정 되어 있는</xref:System.Windows.Automation.AutomationElement>       속성의 반환 값은 <xref:System.String>.</xref:System.String> 형식의 속성의 기본값은 빈 문자열입니다."
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#124](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#124)]\n [!code-vb[UIAClient_snip#124](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#124)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#125](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#125)]\n [!code-vb[UIAClient_snip#125](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#125)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty AcceleratorKeyProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.AccessKeyProperty
  id: AccessKeyProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: AccessKeyProperty
  nameWithType: AutomationElement.AccessKeyProperty
  fullName: System.Windows.Automation.AutomationElement.AccessKeyProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "식별 된 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey*>속성.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey*>"
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A>또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A>속성.</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       선택 키는 메뉴, 메뉴 항목 또는 연결된 된 메뉴 기능을 활성화 하는 단추와 같은 컨트롤의 레이블 텍스트에는 문자입니다. 예를 들어 문자 &quot;O&quot;는 대개를 호출 하 여 **파일 열기** 에서 일반 대화 상자는 **파일** 메뉴.       액세스 키 값이 형식의 <xref:System.String>요소에 대 한 선택 키로 등록 된 문자를 포함 합니다.</xref:System.String> 문자열에 대 한 기본값은 빈 문자열입니다."
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#127](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#127)]\n [!code-vb[UIAClient_snip#127](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#127)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#128](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#128)]\n [!code-vb[UIAClient_snip#128](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#128)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty AccessKeyProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent
  id: AsyncContentLoadedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: AsyncContentLoadedEvent
  nameWithType: AutomationElement.AsyncContentLoadedEvent
  fullName: System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "비동기 콘텐츠 로드 중 발생 하는 이벤트를 식별 합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       이 이벤트는 비동기 콘텐츠 로드 이벤트가 발생 했음을 나타낼를 공급자에서 주로 사용 됩니다."
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent AsyncContentLoadedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent
  id: AutomationFocusChangedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: AutomationFocusChangedEvent
  nameWithType: AutomationElement.AutomationFocusChangedEvent
  fullName: System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "포커스가 변경 될 때 발생 하는 이벤트를 식별 합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent AutomationFocusChangedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.AutomationIdProperty
  id: AutomationIdProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: AutomationIdProperty
  nameWithType: AutomationElement.AutomationIdProperty
  fullName: System.Windows.Automation.AutomationElement.AutomationIdProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "식별 된 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId*>요소를 식별 하는 데 사용 되는 속성.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId*>"
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A>또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A>속성.</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       속성의 반환 값은 <xref:System.String>.</xref:System.String> 형식의 속성의 기본값은 빈 문자열입니다.       사용 가능한 경우 항상 동일 해야 로컬 언어에 관계 없이 응용 프로그램의 모든 인스턴스에서 요소의 AutomationIdProperty 사용할 수 있습니다. 값 바탕 화면 전체 전체 형제 요소 중에서 고유 하지만 반드시 고유 해야 합니다. 예를 들어 응용 프로그램의 여러 인스턴스 또는 Microsoft Windows 탐색기에서 여러 폴더 보기 &quot;인스턴스나&quot;와 같은 동일한 AutomationIdProperty를 사용 하 여 요소를 포함할 수 있습니다.       지원이 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>항상 좋습니다 더 나은 테스트 가능성에 대 한이 속성은 필수 없습니다.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> Where은 지원는 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>UI 언어에 관계 없이 실행 하는 스크립트 테스트 자동화에 대 한 유용 합니다.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> 클라이언트는 어떠한가 정도 하지 확인 해야 관련 항목은 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>다른 응용 프로그램에 의해 노출 되.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>응용 프로그램의 빌드에 사용되는지와 반드시 서로 다른 릴리스 안정적인 되도록 보장 되지 않습니다.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>       인스턴스 [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] 요소에서 바탕 화면에서 고유 하 게 식별 자신의 <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>속성.</xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>      > [!NOTE] > AutomationIdProperty 최상위 응용 프로그램 창 제외 하 고 컨트롤 보기에 모든 UI 자동화 요소에서 사용할 수, UI 자동화 요소에서 파생 된 [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] ID 또는 X:uid 및 UI 자동화 요소에서 파생 되지 않은 컨트롤 [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] 컨트롤 ID가 없습니다. 컨트롤"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#129](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#129)]\n [!code-vb[UIAClient_snip#129](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#129)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#130](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#130)]\n [!code-vb[UIAClient_snip#130](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#130)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty AutomationIdProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent
  id: AutomationPropertyChangedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: AutomationPropertyChangedEvent
  nameWithType: AutomationElement.AutomationPropertyChangedEvent
  fullName: System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "속성 변경 이벤트를 식별합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent AutomationPropertyChangedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.BoundingRectangleProperty
  id: BoundingRectangleProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: BoundingRectangleProperty
  nameWithType: AutomationElement.BoundingRectangleProperty
  fullName: System.Windows.Automation.AutomationElement.BoundingRectangleProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "식별 된 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle*>속성.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle*>"
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A>또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A>속성.</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       이름 필드에 <xref:System.Windows.Rect>.</xref:System.Windows.Rect> 의 경계 사각형은 반환 된 사각형은 실제 화면 좌표입니다. 기본값은 <xref:System.Windows.Rect.Empty%2A>.</xref:System.Windows.Rect.Empty%2A> <xref:System.Windows.Rect.Empty%2A>항목이 현재 표시 되지 않는 경우 반환 되는 [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]합니다.</xref:System.Windows.Rect.Empty%2A>       반환 된 사각형 클릭할 수 없는 요소를 포함할 수 있습니다. 인스턴스가 발생할 수를 포함 하는 경우는 [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] 항목의 모양은 불규칙적 나 클릭할 수 있는 영역 또는 다른 가려져 [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] 요소입니다."
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#131](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#131)]\n [!code-vb[UIAClient_snip#131](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#131)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#132](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#132)]\n [!code-vb[UIAClient_snip#132](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#132)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty BoundingRectangleProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.Cached
  id: Cached
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: Cached
  nameWithType: AutomationElement.Cached
  fullName: System.Windows.Automation.AutomationElement.Cached
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "캐시 된 가져옵니다 [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 속성 값이 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 개체입니다."
  remarks: "에 대 한 접근자 [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 속성 Cached에서 반환 된 구조 속성으로 표시 됩니다. 구조를 검색할 필요가 없습니다. 아래 예와 같이 해당 멤버에 직접 액세스할 수 있습니다. 사용 가능한 속성 및 해당 용도에 대 한 자세한 내용은 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation> 을 참조 하십시오.       현재 값을 가져오는 [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 속성 요소 사용에는 <xref:System.Windows.Automation.AutomationElement.Current%2A>속성.</xref:System.Windows.Automation.AutomationElement.Current%2A>"
  example:
  - "The following example shows how the <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> property can be cached and then retrieved by using the Cached property.  \n  \n [!code-vb[UIAClient_snip#119](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#119)]\n [!code-cs[UIAClient_snip#119](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#119)]"
  syntax:
    content: public System.Windows.Automation.AutomationElement.AutomationElementInformation Cached { get; }
    return:
      type: System.Windows.Automation.AutomationElement.AutomationElementInformation
      description: "캐시 된 속성을 포함 하는 구조체에 대 한 값은 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  overload: System.Windows.Automation.AutomationElement.Cached*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "캐시 된 속성이 없는 합니다."
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "에 대 한 UI는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 더 이상 없습니다."
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.CachedChildren
  id: CachedChildren
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: CachedChildren
  nameWithType: AutomationElement.CachedChildren
  fullName: System.Windows.Automation.AutomationElement.CachedChildren
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "이 요소의 캐시 된 자식 가져옵니다 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  remarks: "반환된 된 컬렉션의 보기에 의해 결정 됩니다는 <xref:System.Windows.Automation.CacheRequest.TreeFilter%2A>의 상태는 <xref:System.Windows.Automation.CacheRequest>활성화 되었던 경우이 <xref:System.Windows.Automation.AutomationElement>개체를 가져온.</xref:System.Windows.Automation.AutomationElement> </xref:System.Windows.Automation.CacheRequest> </xref:System.Windows.Automation.CacheRequest.TreeFilter%2A>       경우에 자식 캐시의 범위는 <xref:System.Windows.Automation.CacheRequest>포함 <xref:System.Windows.Automation.TreeScope>, <xref:System.Windows.Automation.TreeScope>, 또는 <xref:System.Windows.Automation.TreeScope>.</xref:System.Windows.Automation.TreeScope> </xref:System.Windows.Automation.TreeScope> </xref:System.Windows.Automation.TreeScope> </xref:System.Windows.Automation.CacheRequest>       경우는 <xref:System.Windows.Automation.CacheRequest>지정는이 수준에서 캐시 된 자식 있지만 자식이 없는 않으면이 속성의 값은 0입니다.</xref:System.Windows.Automation.CacheRequest> 그러나이 수준에서 캐시 자식을 요청 된 속성을 검색 하는 예외가 발생 합니다."
  example:
  - "In the following example, a list box element is obtained from the parent window element while a <xref:System.Windows.Automation.CacheRequest> is active and <xref:System.Windows.Automation.CacheRequest.TreeScope%2A> is <xref:System.Windows.Automation.TreeScope>. The specified properties of the child elements (that is, the list items) are stored in the cache and can be retrieved from the CachedChildren of the list box.  \n  \n [!code-vb[UIAClient_snip#119](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#119)]\n [!code-cs[UIAClient_snip#119](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#119)]"
  syntax:
    content: public System.Windows.Automation.AutomationElementCollection CachedChildren { get; }
    return:
      type: System.Windows.Automation.AutomationElementCollection
      description: "자식 요소의 컬렉션입니다. 이 컬렉션의 요소에 자식이 없는 경우에 비어 있을 수 있습니다."
  overload: System.Windows.Automation.AutomationElement.CachedChildren*
  exceptions:
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "에 대 한 UI는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 더 이상 없습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 요소의 자식 항목을 캐시 하지 요청 했습니다."
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.CachedParent
  id: CachedParent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: CachedParent
  nameWithType: AutomationElement.CachedParent
  fullName: System.Windows.Automation.AutomationElement.CachedParent
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "이 캐시 된 부모를 가져옵니다 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  remarks: ''
  example:
  - "In the following example, the <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> properties of a list box and its list items are cached. The list box element is available in the CachedParent property of each list item element.  \n  \n [!code-vb[UIAClient_snip#119](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#119)]\n [!code-cs[UIAClient_snip#119](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#119)]"
  syntax:
    content: public System.Windows.Automation.AutomationElement CachedParent { get; }
    return:
      type: System.Windows.Automation.AutomationElement
      description: "부모 요소입니다. 반환 값일 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 지정된 된 요소에 부모가 없는 경우-예를 들어,이 요소는 루트 노드입니다."
  overload: System.Windows.Automation.AutomationElement.CachedParent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "부모 요소가 없는 캐시 됩니다."
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "에 대 한 UI는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 더 이상 없습니다."
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ClassNameProperty
  id: ClassNameProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ClassNameProperty
  nameWithType: AutomationElement.ClassNameProperty
  fullName: System.Windows.Automation.AutomationElement.ClassNameProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "식별 된 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName*>속성.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName*>"
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A>또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A>속성.</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       클래스 이름 UI 자동화 공급자 구현에 따라 및 다르므로 시 표준 형식 이어야 합니다. 그러나 클래스 이름을 알고 있는 경우 사용할 수 있습니다 응용 프로그램에서 정상적인 작동 하는지 확인 하려면 [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 요소입니다.       속성의 반환 값은 <xref:System.String>.</xref:System.String> 형식의 기본값은 빈 문자열입니다."
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#133](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#133)]\n [!code-vb[UIAClient_snip#133](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#133)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#134](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#134)]\n [!code-vb[UIAClient_snip#134](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#134)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty ClassNameProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ClickablePointProperty
  id: ClickablePointProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ClickablePointProperty
  nameWithType: AutomationElement.ClickablePointProperty
  fullName: System.Windows.Automation.AutomationElement.ClickablePointProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "클릭 가능 지점 속성을 식별합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       <xref:System.Windows.Automation.AutomationElement>완전히 다른 창으로 가려진 경우 클릭 가능한있지 않습니다.</xref:System.Windows.Automation.AutomationElement>       속성의 반환 값은 <xref:System.Windows.Point>.</xref:System.Windows.Point> 형식의 기본값은 `null`입니다.       반환 값은 실제 화면 좌표에 있습니다."
  example:
  - "The following example retrieves the current value of the property.  \n  \n [!code-cs[UIAClient_snip#135](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#135)]\n [!code-vb[UIAClient_snip#135](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#135)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#166](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#166)]\n [!code-vb[UIAClient_snip#166](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#166)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty ClickablePointProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ControlTypeProperty
  id: ControlTypeProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ControlTypeProperty
  nameWithType: AutomationElement.ControlTypeProperty
  fullName: System.Windows.Automation.AutomationElement.ControlTypeProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "식별 된 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType*>속성.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType*>"
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A>또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A>속성.</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       속성에 대 한 기본값은<xref:System.Windows.Automation.ControlType.Custom></xref:System.Windows.Automation.ControlType.Custom>"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#136](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#136)]\n [!code-vb[UIAClient_snip#136](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#136)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#137](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#137)]\n [!code-vb[UIAClient_snip#137](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#137)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty ControlTypeProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.CultureProperty
  id: CultureProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: CultureProperty
  nameWithType: AutomationElement.CultureProperty
  fullName: System.Windows.Automation.AutomationElement.CultureProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "문화권 속성을 식별 합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       내에서 [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] 프레임 워크, 보고 되는 기본 값은 항상 `en-US` 때문에 [!INCLUDE[TLA#tla_winfx](~/add/includes/ajax-current-ext-md.md)] 프레임 워크 영어로 자동으로 기본 설정입니다. 다른 [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] 프레임 워크가이 속성이 명시적으로 설정 되거나 표시 되지 것입니다.       이 속성 컨트롤 당 기준 존재할 수 있지만 일반적으로 에서만 사용 가능 응용 프로그램 수준에서 합니다.       속성의 반환 값은 <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> 형식의"
  example:
  - "The following example retrieves the current value of the property.  \n  \n [!code-cs[UIAClient_snip#138](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#138)]\n [!code-vb[UIAClient_snip#138](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#138)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty CultureProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.Current
  id: Current
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: Current
  nameWithType: AutomationElement.Current
  fullName: System.Windows.Automation.AutomationElement.Current
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "현재 속성 값을 가져옵니다는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  remarks: "에 대 한 접근자 [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 속성은 현재 반환 되는 구조체의 속성으로 표시 됩니다. 구조를 검색할 필요가 없습니다. 아래 예와 같이 해당 멤버에 직접 액세스할 수 있습니다. 사용 가능한 속성 및 해당 용도에 대 한 자세한 내용은 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation> 을 참조 하십시오.       캐시 된 값을 가져오는 [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 사용이 요소에 대 한 속성의 <xref:System.Windows.Automation.AutomationElement.Cached%2A>속성.</xref:System.Windows.Automation.AutomationElement.Cached%2A>"
  example:
  - "The following example shows how the Current property is used to retrieve the name of an item that has been selected in a list.  \n  \n [!code-vb[UIAClient_snip#106](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#106)]\n [!code-cs[UIAClient_snip#106](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#106)]"
  syntax:
    content: public System.Windows.Automation.AutomationElement.AutomationElementInformation Current { get; }
    return:
      type: System.Windows.Automation.AutomationElement.AutomationElementInformation
      description: "현재 속성 값을 포함 하는 구조입니다."
  overload: System.Windows.Automation.AutomationElement.Current*
  exceptions:
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "에 대 한 UI는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 더 이상 없습니다."
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: AutomationElement.Equals(Object)
  fullName: System.Windows.Automation.AutomationElement.Equals(Object)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "확인 여부를 지정 된 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 이와 같은 값을 가진 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  remarks: "두 요소가 같은 것으로 비교 하는 시간상에서 다른 지점에서 다른 캐시 된 정보를 포함할 수 있습니다. 동등성만 검사만 하는 테스트는 <xref:System.Windows.Automation.AutomationElement>개체가 동일한 내부 사용자 인터페이스 요소를 참조 합니다; 즉, 동일한 런타임 식별자 수 있는.</xref:System.Windows.Automation.AutomationElement>       이 메서드는 또한 런타임 식별자를 비교 하는 같음 연산자와 같습니다."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 을 비교 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우 지정 된 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 이 같으면 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>고, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Automation.AutomationElement.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.Finalize
  id: Finalize
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: Finalize()
  nameWithType: AutomationElement.Finalize()
  fullName: System.Windows.Automation.AutomationElement.Finalize()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "개체가를 리소스를 해제 하 고 가비지 수집에서 회수 하기 전에 다른 정리 작업을 수행할 수 있습니다."
  syntax:
    content: ~AutomationElement ();
    parameters: []
  overload: System.Windows.Automation.AutomationElement.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  id: FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FindAll(TreeScope,Condition)
  nameWithType: AutomationElement.FindAll(TreeScope,Condition)
  fullName: System.Windows.Automation.AutomationElement.FindAll(TreeScope,Condition)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "모든 반환 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 지정 된 조건을 만족 하는 개체입니다."
  remarks: "메서드는 요소를 기준으로 검색의 범위가입니다. 요소 트리에서 발생 된 순서 대로 반환 됩니다.       바탕 화면에서 최상위 창을 검색할 때 지정 해야 <xref:System.Windows.Automation.TreeScope>에 `scope`이 아니라 <xref:System.Windows.Automation.TreeScope>.</xref:System.Windows.Automation.TreeScope> </xref:System.Windows.Automation.TreeScope> 데스크톱의 전체 하위 트리를 통해 검색을 개의 항목을 반복 하 고 스택 오버플로가 발생할 수 없습니다.       모든 확인 해야 하는 경우 클라이언트 응용 프로그램에서 자체 사용자 인터페이스 요소를 찾으려고, [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 별도 스레드에서 호출 합니다."
  example:
  - "The following example shows how to use FindAll to locate all enabled buttons in a window.  \n  \n [!code-vb[UIAClient_snip#116](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#116)]\n [!code-cs[UIAClient_snip#116](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#116)]"
  syntax:
    content: public System.Windows.Automation.AutomationElementCollection FindAll (System.Windows.Automation.TreeScope scope, System.Windows.Automation.Condition condition);
    parameters:
    - id: scope
      type: System.Windows.Automation.TreeScope
      description: "검색 범위를 지정 하는 값의 비트 조합입니다."
    - id: condition
      type: System.Windows.Automation.Condition
      description: "일치 하는 조건을 포함 하는 개체입니다."
    return:
      type: System.Windows.Automation.AutomationElementCollection
      description: "지정 된 조건을 충족 하는 개체의 컬렉션입니다. 일치 하는 항목이 없으면 빈 컬렉션이 반환 됩니다."
  overload: System.Windows.Automation.AutomationElement.FindAll*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  id: FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FindFirst(TreeScope,Condition)
  nameWithType: AutomationElement.FindFirst(TreeScope,Condition)
  fullName: System.Windows.Automation.AutomationElement.FindFirst(TreeScope,Condition)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "지정된 된 조건과 일치 하는 첫 번째 자식 또는 하위 항목 요소를 반환 합니다."
  remarks: "메서드는 요소를 기준으로 검색의 범위가입니다.       바탕 화면에서 최상위 창을 검색할 때 지정 해야 <xref:System.Windows.Automation.TreeScope>에 `scope`이 아니라 <xref:System.Windows.Automation.TreeScope>.</xref:System.Windows.Automation.TreeScope> </xref:System.Windows.Automation.TreeScope> 데스크톱의 전체 하위 트리를 통해 검색을 개의 항목을 반복 하 고 스택 오버플로가 발생할 수 없습니다.       모든 확인 해야 하는 경우 클라이언트 응용 프로그램에서 자체 사용자 인터페이스 요소를 찾으려고, [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 별도 스레드에서 호출 합니다."
  example:
  - "The following example shows how to find a child window from its identifier.  \n  \n [!code-vb[UIAClient_snip#110](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#110)]\n [!code-cs[UIAClient_snip#110](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#110)]"
  syntax:
    content: public System.Windows.Automation.AutomationElement FindFirst (System.Windows.Automation.TreeScope scope, System.Windows.Automation.Condition condition);
    parameters:
    - id: scope
      type: System.Windows.Automation.TreeScope
      description: "검색 범위를 지정 하는 값의 비트 조합입니다."
    - id: condition
      type: System.Windows.Automation.Condition
      description: "일치 하는 조건을 포함 하는 개체입니다."
    return:
      type: System.Windows.Automation.AutomationElement
      description: "조건을 만족 하는 첫 번째 요소 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 일치 항목이 없는 경우."
  overload: System.Windows.Automation.AutomationElement.FindFirst*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FocusedElement
  id: FocusedElement
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FocusedElement
  nameWithType: AutomationElement.FocusedElement
  fullName: System.Windows.Automation.AutomationElement.FocusedElement
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "가져옵니다는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 현재 포커스가 있는 합니다."
  remarks: "모든 확인 해야 하는 경우 클라이언트 응용 프로그램에서 자체 사용자 인터페이스 요소를 찾으려고, [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 별도 스레드에서 호출 합니다."
  syntax:
    content: public static System.Windows.Automation.AutomationElement FocusedElement { get; }
    return:
      type: System.Windows.Automation.AutomationElement
      description: "포커스가 [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] 요소입니다."
  overload: System.Windows.Automation.AutomationElement.FocusedElement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FrameworkIdProperty
  id: FrameworkIdProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FrameworkIdProperty
  nameWithType: AutomationElement.FrameworkIdProperty
  fullName: System.Windows.Automation.AutomationElement.FrameworkIdProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "식별 된 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId*>속성.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId*>"
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       속성의 반환 값은 <xref:System.String>.</xref:System.String> 형식의 기본값은 빈 문자열입니다.       이 속성에는 특별 한 경우 전체 UI 프레임 워크에 적용할 응용 프로그램이 있습니다. 속성 값의 예로 &quot;Win32&quot;, &quot;WinForm&quot; 및 &quot;DirectUI&quot;입니다."
  example:
  - "The following example retrieves the current value of the property.  \n  \n [!code-cs[UIAClient_snip#139](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#139)]\n [!code-vb[UIAClient_snip#139](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#139)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty FrameworkIdProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)
  id: FromHandle(System.IntPtr)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FromHandle(IntPtr)
  nameWithType: AutomationElement.FromHandle(IntPtr)
  fullName: System.Windows.Automation.AutomationElement.FromHandle(IntPtr)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "새 검색 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 개체에 대 한는 [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] 지정된 된 창 핸들에서 참조 하는 항목입니다."
  syntax:
    content: public static System.Windows.Automation.AutomationElement FromHandle (IntPtr hwnd);
    parameters:
    - id: hwnd
      type: System.IntPtr
      description: "핸들은 [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] 요소입니다."
    return:
      type: System.Windows.Automation.AutomationElement
      description: "An <xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref> for the [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] item identified by <code>hwnd</code>."
  overload: System.Windows.Automation.AutomationElement.FromHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FromLocalProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)
  id: FromLocalProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FromLocalProvider(IRawElementProviderSimple)
  nameWithType: AutomationElement.FromLocalProvider(IRawElementProviderSimple)
  fullName: System.Windows.Automation.AutomationElement.FromLocalProvider(IRawElementProviderSimple)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "새 검색 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 로컬에서 개체 <xref href=&quot;System.Windows.Automation.Provider.IRawElementProviderSimple&quot;> </xref> 구현 합니다."
  remarks: "이 메서드는 호출자에 게 고유한 네이티브 요소 유형에 액세스할 수 있도록 클라이언트 도우미 라이브러리에서 사용할 수 있습니다. 예를 들어 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 반환 될 수 있도록 내부적으로이 메서드를 사용 하는 <xref:System.Windows.Automation.AutomationElement>확인 하고자 하는 클라이언트에는 [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement> 에서 직접 요소</xref:System.Windows.Automation.AutomationElement>"
  syntax:
    content: public static System.Windows.Automation.AutomationElement FromLocalProvider (System.Windows.Automation.Provider.IRawElementProviderSimple localImpl);
    parameters:
    - id: localImpl
      type: System.Windows.Automation.Provider.IRawElementProviderSimple
      description: "공급자 개체입니다."
    return:
      type: System.Windows.Automation.AutomationElement
      description: "<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 공급자 개체에서 제공 하는 요소를 나타내는입니다."
  overload: System.Windows.Automation.AutomationElement.FromLocalProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)
  id: FromPoint(System.Windows.Point)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FromPoint(Point)
  nameWithType: AutomationElement.FromPoint(Point)
  fullName: System.Windows.Automation.AutomationElement.FromPoint(Point)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "새 검색 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 개체에 대 한는 [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] 바탕 화면에 지정 된 지점에 있습니다."
  remarks: "FromPoint 루트 요소에 가장 가까운 논리적 트리에서 요소를 반환 합니다.       모든 확인 해야 하는 경우 클라이언트 응용 프로그램에서 자체 사용자 인터페이스 요소를 찾으려고, [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 별도 스레드에서 호출 합니다.       반환 된 경계 사각형 안에 점이 있지만 <xref:System.Windows.Automation.AutomationElement>에 없으면, 반드시 컨트롤의 클릭 가능한 부분.</xref:System.Windows.Automation.AutomationElement> 예를 들어 원형 단추는 경계 사각형의 모서리 중 하나를 클릭할 수 있습니다."
  example:
  - "The following example retrieves the <xref:System.Windows.Automation.AutomationElement> at the system cursor location.  \n  \n [!code-vb[UIAClient_snip#181](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#181)]\n [!code-cs[UIAClient_snip#181](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#181)]"
  syntax:
    content: public static System.Windows.Automation.AutomationElement FromPoint (System.Windows.Point pt);
    parameters:
    - id: pt
      type: System.Windows.Point
      description: "데스크톱에서 찾을 실제 화면 좌표는 [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] 요소입니다."
    return:
      type: System.Windows.Automation.AutomationElement
      description: "[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] 지정된 된 지점에 대 한 항목입니다."
  overload: System.Windows.Automation.AutomationElement.FromPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)
  id: GetCachedPattern(System.Windows.Automation.AutomationPattern)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetCachedPattern(AutomationPattern)
  nameWithType: AutomationElement.GetCachedPattern(AutomationPattern)
  fullName: System.Windows.Automation.AutomationElement.GetCachedPattern(AutomationPattern)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "이 캐시에서 지정된 된 패턴을 검색 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  remarks: "GetCachedPattern 캐시에서 지정된 된 패턴을 검색합니다. 지정된 된 패턴에 대 한 현재 개체를 검색 하려면 <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>.</xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> 호출       요청 된 패턴 이전에 캐시 되지 않았으면 예외를 throw 합니다."
  example:
  - "The following example shows how to cache and retrieve a pattern.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public object GetCachedPattern (System.Windows.Automation.AutomationPattern pattern);
    parameters:
    - id: pattern
      type: System.Windows.Automation.AutomationPattern
      description: "검색할 패턴의 식별자입니다."
    return:
      type: System.Object
      description: "지정된 된 패턴을 나타내는 개체입니다. 일치 하는 패턴이 없는 경우 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 반환 됩니다."
  overload: System.Windows.Automation.AutomationElement.GetCachedPattern*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "요청한 패턴이 캐시에 없거나 요소에서 지원 되지 않습니다."
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "에 대 한 UI는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 더 이상 없습니다."
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty)
  id: GetCachedPropertyValue(System.Windows.Automation.AutomationProperty)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetCachedPropertyValue(AutomationProperty)
  nameWithType: AutomationElement.GetCachedPropertyValue(AutomationProperty)
  fullName: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(AutomationProperty)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "이 컴퓨터의 캐시에서 지정된 된 속성의 값을 검색 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다. 대상에서 명시적으로 지 원하는 속성에 대 한 속성 유형에 대 한 적절 한 기본값이 반환 됩니다 [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] 요소입니다."
  remarks: "요소 자체에 대 한 UI 자동화 공급자의 속성을 지 원하는 속성의 값이 반환 됩니다. 기본 속성으로 지정 하는 그렇지 않은 경우 [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 반환 됩니다. 기본 속성에 대 한 자세한 내용은 속성 식별자 필드의 참조 <xref:System.Windows.Automation.AutomationElement>, <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>.</xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty> 같은</xref:System.Windows.Automation.AutomationElement>       GetCachedPropertyValue 검색에서 지정된 된 속성의 <xref:System.Windows.Automation.AutomationElement>의 캐시.</xref:System.Windows.Automation.AutomationElement> 지정 된 속성 호출 <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>.</xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> 에 대 한 현재 개체를 검색 하려면       요청된 된 속성이 이전에 캐시 되지 않았으면 예외를 throw 합니다."
  example:
  - "The following shows how this method can be used to retrieve a cached property.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public object GetCachedPropertyValue (System.Windows.Automation.AutomationProperty property);
    parameters:
    - id: property
      type: System.Windows.Automation.AutomationProperty
      description: "검색할 속성의 식별자입니다."
    return:
      type: System.Object
      description: "지정된 된 속성의 값을 포함 하는 개체입니다."
  overload: System.Windows.Automation.AutomationElement.GetCachedPropertyValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "요청한 속성이 캐시에 없는 경우"
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] 에 대 한는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 더 이상 없습니다."
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  id: GetCachedPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetCachedPropertyValue(AutomationProperty,Boolean)
  nameWithType: AutomationElement.GetCachedPropertyValue(AutomationProperty,Boolean)
  fullName: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(AutomationProperty,Boolean)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "이 컴퓨터의 캐시에서 지정된 된 속성의 값을 검색 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>, 선택적으로 기본 속성을 무시 합니다."
  remarks: "<xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A><xref:System.Windows.Automation.AutomationElement>.</xref:System.Windows.Automation.AutomationElement> 캐시에서 지정된 된 속성을 검색합니다.</xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> 현재 속성을 검색 하려면 <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>.</xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> 호출       전달 `false` 에 `ignoreDefaultValue` <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=fullName>.</xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=fullName> 하는 것       요소 자체에 대 한 UI 자동화 공급자의 속성을 지 원하는 속성의 값이 반환 됩니다. 그렇지 않은 경우, `ignoreDefaultValue` 은 `false`, 기본 속성으로 지정 된 [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 반환 됩니다. 기본 속성에 대 한 자세한 내용은 속성 식별자 필드의 참조 <xref:System.Windows.Automation.AutomationElement>, <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>.</xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty> 같은</xref:System.Windows.Automation.AutomationElement>       요청된 된 속성이 이전에 캐시 되지 않았으면 예외를 throw 합니다."
  example:
  - "The following example shows how this method can be used to retrieve a cached property.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public object GetCachedPropertyValue (System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue);
    parameters:
    - id: property
      type: System.Windows.Automation.AutomationProperty
      description: "검색할 속성의 식별자입니다."
    - id: ignoreDefaultValue
      type: System.Boolean
      description: "지정된 된 속성이 지원 되지 않는 경우 기본값을 무시할지 여부를 지정 하는 값입니다."
    return:
      type: System.Object
      description: "지정된 된 속성의 값을 포함 하는 개체 또는 <xref href=&quot;System.Windows.Automation.AutomationElement.NotSupported&quot;> </xref> 요소 값을 제공 하지 않는 경우 및 <code> ignoreDefaultValue </code> 은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Automation.AutomationElement.GetCachedPropertyValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "요청한 속성이 캐시에 없는 경우"
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "에 대 한 UI는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 더 이상 없습니다."
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetClickablePoint
  id: GetClickablePoint
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetClickablePoint()
  nameWithType: AutomationElement.GetClickablePoint()
  fullName: System.Windows.Automation.AutomationElement.GetClickablePoint()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "에 지점 검색의 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 클릭할 수 있는 합니다."
  remarks: "<xref:System.Windows.Automation.AutomationElement>완전히 다른 창으로 가려진 경우 클릭 가능한있지 않습니다.</xref:System.Windows.Automation.AutomationElement>       <xref:System.Windows.Automation.AutomationElement>는 다음 조건이 모두 충족 하는 경우 클릭 가능한:-프로그래밍 방식으로 볼 수 있고 사용할 수는 [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 트리.</xref:System.Windows.Automation.AutomationElement>      -스크롤해서 완벽 하 게 보기의 부모 컨테이너에 있는 경우. 잘린 요소는 다 클릭할 수 있습니다.      -요소는 다른 UI 요소에 의해 숨겨지지 않습니다. 상위 이외의 UI 요소에 의해 가려진는 요소는 클릭할 수 있는 아닐 수 있습니다.      -창이 요소를 포함 하는 자체 클릭할 수 있어야 합니다. 예를 들어 윈도우는 완전히 투명 하 게 하는 경우 창 클릭 가능 하지 않습니다. 마우스 클릭은 클릭을 통해 창, 투명 한 창 내에서 모든 컨트롤에 클릭 가능한 지점만 반환 하지 것입니다.      -지점이 있어야 해당 요소가 컨테이너 (예: 목록 또는 트리 뷰) 이면 때 클릭 포커스 컨트롤의 배경을 발생 합니다. 컨테이너 컨트롤의 모든 부분 자식 요소에서 이미 사용 되 면 하는 경우 클릭 가능한있지 않습니다.       UI 자동화 공급자가 같이 클릭할 수 없는 컨트롤은 아무 작업도 수행 정의 되는 위치를 클릭할 때 있습니다. 대신 컨트롤 패턴을 사용 하 여 컨트롤에서 작업을 수행 하는 것이 좋습니다."
  example:
  - "The following code retrieves a clickable point for a control and moves the system cursor to that point.  \n  \n [!code-vb[UIAClient_snip#179](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#179)]\n [!code-cs[UIAClient_snip#179](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#179)]"
  syntax:
    content: public System.Windows.Point GetClickablePoint ();
    parameters: []
    return:
      type: System.Windows.Point
      description: "이 요소에 클릭 하 여 클라이언트에서 사용할 수 있는 지점의 실제 화면 좌표입니다."
  overload: System.Windows.Automation.AutomationElement.GetClickablePoint*
  exceptions:
  - type: System.Windows.Automation.NoClickablePointException
    commentId: T:System.Windows.Automation.NoClickablePointException
    description: "클릭할 수 있는 위치가 없습니다."
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "에 대 한 UI는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 더 이상 없습니다."
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)
  id: GetCurrentPattern(System.Windows.Automation.AutomationPattern)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetCurrentPattern(AutomationPattern)
  nameWithType: AutomationElement.GetCurrentPattern(AutomationPattern)
  fullName: System.Windows.Automation.AutomationElement.GetCurrentPattern(AutomationPattern)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "이 지정 된 패턴 개체를 검색 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  remarks: "GetCurrentPattern에서 메서드를 호출할 때 해당 가용성에 따라 지정된 된 패턴을 가져옵니다.       몇 가지 형태에 대 한 [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)], 프로세스 간 성능 오버 헤드가 발생이 발생 합니다.이 메서드. 응용 프로그램 패턴을 캐시 하 고 다음 <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>.</xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A> 를 사용 하 여 검색 하 여 오버 헤드 집중할 수 있습니다."
  example:
  - "The following example shows how to use this method to retrieve a <xref:System.Windows.Automation.SelectionItemPattern>, which is then used to select an item in a list box.  \n  \n [!code-vb[UIAClient_snip#103](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#103)]\n [!code-cs[UIAClient_snip#103](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#103)]  \n  \n> [!NOTE]\n>  For often-repeated tasks such as the one in the example, it would be more efficient to cache the pattern and use <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>."
  syntax:
    content: public object GetCurrentPattern (System.Windows.Automation.AutomationPattern pattern);
    parameters:
    - id: pattern
      type: System.Windows.Automation.AutomationPattern
      description: "검색할 패턴의 식별자입니다."
    return:
      type: System.Object
      description: "지정된 된 패턴에서 현재 지원 되는 경우 해당 패턴 개체는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  overload: System.Windows.Automation.AutomationElement.GetCurrentPattern*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "패턴 요소에서 지원 되지 않습니다."
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "에 대 한 UI는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 더 이상 없습니다."
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty)
  id: GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetCurrentPropertyValue(AutomationProperty)
  nameWithType: AutomationElement.GetCurrentPropertyValue(AutomationProperty)
  fullName: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(AutomationProperty)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "이 지정된 된 속성의 값을 검색 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다. 대상에서 명시적으로 지 원하는 속성에 대 한 속성 유형에 대 한 적절 한 기본값이 반환 됩니다 [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] 요소입니다."
  remarks: "GetCurrentPropertyValue 메서드에 의해 반환 된 값은 호출 시 최신 이었던입니다. 값 수와 상호 작용 하는 다른 응용 프로그램에서 이후에 변경 된 [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]합니다.       요소 자체에 대 한 UI 자동화 공급자의 속성을 지 원하는 속성의 값이 반환 됩니다. 기본 속성으로 지정 하는 그렇지 않은 경우 [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 반환 됩니다. 기본 속성에 대 한 자세한 내용은 속성 식별자 필드의 참조 <xref:System.Windows.Automation.AutomationElement>, <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>.</xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty> 같은</xref:System.Windows.Automation.AutomationElement>       몇 가지 형태에 대 한 [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)], 프로세스 간 성능 오버 헤드가 발생이 발생 합니다.이 메서드. 속성을 캐시 한 다음 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>.</xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> 를 사용 하 여 검색 하 여 오버 헤드를 줄일합니다"
  example:
  - "The following example retrieves the current value of the <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText%2A> property. The default value is returned if the element does not provide one.  \n  \n [!code-vb[UIAClient_snip#126](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#126)]\n [!code-cs[UIAClient_snip#126](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#126)]"
  syntax:
    content: public object GetCurrentPropertyValue (System.Windows.Automation.AutomationProperty property);
    parameters:
    - id: property
      type: System.Windows.Automation.AutomationProperty
      description: "[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 검색할 속성을 지정 하는 속성 식별자입니다."
    return:
      type: System.Object
      description: "지정된 된 속성의 값을 포함 하는 개체입니다."
  overload: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue*
  exceptions:
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "에 대 한 UI는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 더 이상 없습니다."
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  id: GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetCurrentPropertyValue(AutomationProperty,Boolean)
  nameWithType: AutomationElement.GetCurrentPropertyValue(AutomationProperty,Boolean)
  fullName: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(AutomationProperty,Boolean)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "이 지정된 된 속성의 값을 검색 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>, 선택적으로 기본 속성을 무시 합니다."
  remarks: "전달 `false` 에 `ignoreDefaultValue` <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=fullName>.</xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=fullName> 하는 것       요소 자체에 대 한 UI 자동화 공급자의 속성을 지 원하는 속성의 값이 반환 됩니다. 그렇지 않은 경우, `ignoreDefaultValue` 은 `false`, 기본 속성으로 지정 된 [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 반환 됩니다. 기본 속성에 대 한 자세한 내용은 속성 식별자 필드의 참조 <xref:System.Windows.Automation.AutomationElement>, <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>.</xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty> 같은</xref:System.Windows.Automation.AutomationElement>       GetCurrentPropertyValue 메서드에 의해 반환 된 값은 호출 시 최신 이었던입니다. 값 수와 상호 작용 하는 다른 응용 프로그램에서 이후에 변경 된 [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]합니다.       몇 가지 형태에 대 한 [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)], 프로세스 간 성능 오버 헤드가 발생이 발생 합니다.이 메서드. 응용 프로그램 속성을 캐시 한 다음 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>.</xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> 를 사용 하 여 검색 하 여 오버 헤드 집중할 수 있습니다."
  example:
  - "The following example retrieves the current value of the <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText%2A> property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-vb[UIAClient_snip#123](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#123)]\n [!code-cs[UIAClient_snip#123](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#123)]"
  syntax:
    content: public object GetCurrentPropertyValue (System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue);
    parameters:
    - id: property
      type: System.Windows.Automation.AutomationProperty
      description: "[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 검색할 속성을 지정 하는 속성 식별자입니다."
    - id: ignoreDefaultValue
      type: System.Boolean
      description: "지정된 된 속성은 지원 되는 경우 기본값을 무시할지 여부를 지정 하는 값입니다."
    return:
      type: System.Object
      description: "지정된 된 속성의 값을 포함 하는 개체 또는 <xref href=&quot;System.Windows.Automation.AutomationElement.NotSupported&quot;> </xref> 요소 값을 제공 하지 않는 경우 및 <code> ignoreDefaultValue </code> 은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue*
  exceptions:
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "에 대 한 UI는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 더 이상 없습니다."
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetHashCode
  id: GetHashCode
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: AutomationElement.GetHashCode()
  fullName: System.Windows.Automation.AutomationElement.GetHashCode()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "이 대 한 해시 코드를 검색 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "부호 있는 32 비트 정수 해시 코드입니다."
  overload: System.Windows.Automation.AutomationElement.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetRuntimeId
  id: GetRuntimeId
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetRuntimeId()
  nameWithType: AutomationElement.GetRuntimeId()
  fullName: System.Windows.Automation.AutomationElement.GetRuntimeId()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "에 할당 된 고유 식별자를 검색 된 [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] 항목입니다."
  remarks: "식별자를 고유 하 게 보장 됩니다는 [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] 생성 된 데스크톱의 합니다. 시간이 지남에 따라 식별자를 재사용할 수 있습니다.       런타임 식별자 형식에는 이후 릴리스에서 변경 될 수 있습니다. 반환 된 id는 불투명 값으로 처리 되 고 캐시에 사용 되어야 예를 들어, 확인 하려면 여부는 <xref:System.Windows.Automation.AutomationElement>캐시에.</xref:System.Windows.Automation.AutomationElement>"
  example:
  - "The following example shows how to retrieve the run-time identifier of an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-vb[UIAClient_snip#111](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#111)]\n [!code-cs[UIAClient_snip#111](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#111)]"
  syntax:
    content: public int[] GetRuntimeId ();
    parameters: []
    return:
      type: System.Int32[]
      description: "배열 런타임 식별자를 나타내는 정수입니다."
  overload: System.Windows.Automation.AutomationElement.GetRuntimeId*
  exceptions:
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "에 대 한 UI는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 더 이상 없습니다."
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetSupportedPatterns
  id: GetSupportedPatterns
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetSupportedPatterns()
  nameWithType: AutomationElement.GetSupportedPatterns()
  fullName: System.Windows.Automation.AutomationElement.GetSupportedPatterns()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "검색이 컨트롤 패턴 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 지원 합니다."
  remarks: "일반적으로 디버깅을 위해이 메서드를 사용 합니다. 메서드를 호출 하면 상당한 처리, 쿼리하므로 <xref:System.Windows.Automation.AutomationElement>가능한 모든 패턴에 대 한.</xref:System.Windows.Automation.AutomationElement> <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> <xref:System.Windows.Automation.AutomationElement>.</xref:System.Windows.Automation.AutomationElement> 에서 특정 컨트롤 패턴을 검색 하 여</xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> 사용 하면 일반적으로 특정 패턴 지원 되는지 여부를 확인합니다 하려면 적절 한 속성; 확인 예를 들어 <xref:System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty>.</xref:System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty>"
  example:
  - "The following example shows how to retrieve the control patterns supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-vb[UIAClient_snip#114](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#114)]\n [!code-cs[UIAClient_snip#114](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#114)]"
  syntax:
    content: public System.Windows.Automation.AutomationPattern[] GetSupportedPatterns ();
    parameters: []
    return:
      type: System.Windows.Automation.AutomationPattern[]
      description: "배열을 <xref href=&quot;System.Windows.Automation.AutomationPattern&quot;> </xref> 지원 되는 컨트롤 패턴을 나타내는 개체입니다."
  overload: System.Windows.Automation.AutomationElement.GetSupportedPatterns*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetSupportedProperties
  id: GetSupportedProperties
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetSupportedProperties()
  nameWithType: AutomationElement.GetSupportedProperties()
  fullName: System.Windows.Automation.AutomationElement.GetSupportedProperties()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "요소에서 지원 되는 속성의 식별자를 검색 합니다."
  remarks: "이 요소에서 지 원하는 모든 속성을 식별 하는 반환된 된 배열 그러나 집합이 중복 항목이 나 포함 된 속성 `null` 또는 빈 값입니다. 대부분의 용도 대 한 사용 하 여이 <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>속성이 현재 지원 되는지 여부를 확인 하 고 해당 현재 값을 가져옵니다.</xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>"
  example:
  - "The following example shows how to retrieve the properties supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-vb[UIAClient_snip#115](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#115)]\n [!code-cs[UIAClient_snip#115](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#115)]"
  syntax:
    content: public System.Windows.Automation.AutomationProperty[] GetSupportedProperties ();
    parameters: []
    return:
      type: System.Windows.Automation.AutomationProperty[]
      description: "지원 되는 속성 식별자의 배열입니다."
  overload: System.Windows.Automation.AutomationElement.GetSupportedProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetUpdatedCache(System.Windows.Automation.CacheRequest)
  id: GetUpdatedCache(System.Windows.Automation.CacheRequest)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetUpdatedCache(CacheRequest)
  nameWithType: AutomationElement.GetUpdatedCache(CacheRequest)
  fullName: System.Windows.Automation.AutomationElement.GetUpdatedCache(CacheRequest)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "새 검색 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 캐시가 업데이트 된 합니다."
  remarks: "원래 <xref:System.Windows.Automation.AutomationElement>는 변경 되지 않습니다.</xref:System.Windows.Automation.AutomationElement> GetUpdatedCache 반환 새 <xref:System.Windows.Automation.AutomationElement>, 참조 하는 동일한 [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] 동일한 <xref:System.Windows.Automation.AutomationElement>.</xref:System.Windows.Automation.AutomationElement> 및</xref:System.Windows.Automation.AutomationElement>"
  example:
  - "The following example demonstrates how a cache might be updated whenever the selection in a combo box changes.  \n  \n [!code-vb[UIAClient_snip#109](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#109)]\n [!code-cs[UIAClient_snip#109](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#109)]"
  syntax:
    content: public System.Windows.Automation.AutomationElement GetUpdatedCache (System.Windows.Automation.CacheRequest request);
    parameters:
    - id: request
      type: System.Windows.Automation.CacheRequest
      description: "패턴 및 속성을 업데이트 된 캐시에 포함 합니다."
    return:
      type: System.Windows.Automation.AutomationElement
      description: "새 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 캐시가 업데이트 된입니다."
  overload: System.Windows.Automation.AutomationElement.GetUpdatedCache*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty
  id: HasKeyboardFocusProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: HasKeyboardFocusProperty
  nameWithType: AutomationElement.HasKeyboardFocusProperty
  fullName: System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "식별 된 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus*>속성.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus*>"
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A>또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A>속성.</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       속성의 반환 값은 <xref:System.Boolean>.</xref:System.Boolean> 형식의 속성에 대 한 기본값은 `false`합니다."
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#140](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#140)]\n [!code-vb[UIAClient_snip#140](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#140)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty HasKeyboardFocusProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.HelpTextProperty
  id: HelpTextProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: HelpTextProperty
  nameWithType: AutomationElement.HelpTextProperty
  fullName: System.Windows.Automation.AutomationElement.HelpTextProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "식별 된 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText*>속성.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText*>"
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A>또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A>속성.</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       이 정보는 일반적으로 공급자에 의해 지정 된 도구 설명에서 가져옵니다.       속성의 반환 값은 <xref:System.String>.</xref:System.String> 형식의 속성의 기본값은 빈 문자열입니다."
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-vb[UIAClient_snip#126](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#126)]\n [!code-cs[UIAClient_snip#126](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#126)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-vb[UIAClient_snip#123](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#123)]\n [!code-cs[UIAClient_snip#123](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#123)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty HelpTextProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsContentElementProperty
  id: IsContentElementProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsContentElementProperty
  nameWithType: AutomationElement.IsContentElementProperty
  fullName: System.Windows.Automation.AutomationElement.IsContentElementProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "식별 된 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement*>속성.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement*>"
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A>또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A>속성.</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       콘텐츠 뷰는 [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 트리 보기를 제공 된 [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] 만 내에서 데이터를 나타내는 요소를 포함 하는 [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]합니다.       요소는 콘텐츠를 저장할 수는 컨트롤 이어야 합니다.       속성의 반환 값은 <xref:System.Boolean>.</xref:System.Boolean> 형식의 속성에 대 한 기본값은 `true`합니다."
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#141](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#141)]\n [!code-vb[UIAClient_snip#141](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#141)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#142](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#142)]\n [!code-vb[UIAClient_snip#142](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#142)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsContentElementProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsControlElementProperty
  id: IsControlElementProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsControlElementProperty
  nameWithType: AutomationElement.IsControlElementProperty
  fullName: System.Windows.Automation.AutomationElement.IsControlElementProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "식별 된 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement*>속성.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement*>"
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A>또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A>속성.</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       컨트롤은 사용자에 게 대화형 또는 포함 된 정보에는 [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]합니다.       속성의 반환 값은 <xref:System.Boolean>.</xref:System.Boolean> 형식의 속성에 대 한 기본값은 `true`합니다."
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#143](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#143)]\n [!code-vb[UIAClient_snip#143](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#143)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#144](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#144)]\n [!code-vb[UIAClient_snip#144](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#144)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsControlElementProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty
  id: IsDockPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsDockPatternAvailableProperty
  nameWithType: AutomationElement.IsDockPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "나타내는 속성을 식별 여부는 <xref href=&quot;System.Windows.Automation.DockPattern&quot;> </xref> 컨트롤 패턴은이 사용할 수 있는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       속성의 반환 값은 <xref:System.Boolean>.</xref:System.Boolean> 형식의 속성에 대 한 기본값은 `false`합니다."
  example:
  - "The following example  ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsDockPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsEnabledProperty
  id: IsEnabledProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsEnabledProperty
  nameWithType: AutomationElement.IsEnabledProperty
  fullName: System.Windows.Automation.AutomationElement.IsEnabledProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "식별는 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled*>속성을 지정 하는 여부는 [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] 항목에서 참조는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 사용 됨.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled*>"
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A>또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A>속성.</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       속성의 반환 값은 <xref:System.Boolean>.</xref:System.Boolean> 형식의 속성에 대 한 기본값은 `false`합니다.       컨트롤의 활성화 상태 경우 `false`는 자식 컨트롤은 사용할 수 없는 것으로 간주 됩니다. 부모 상태 변경 내용을 제어 하는 경우 자식 요소에서 속성 변경 이벤트 기대 하지 있습니다."
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#146](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#146)]\n [!code-vb[UIAClient_snip#146](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#146)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsEnabledProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty
  id: IsExpandCollapsePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsExpandCollapsePatternAvailableProperty
  nameWithType: AutomationElement.IsExpandCollapsePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "나타내는 속성을 식별 여부는 <xref href=&quot;System.Windows.Automation.ExpandCollapsePattern&quot;> </xref> 컨트롤 패턴은이 사용할 수 있는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       속성의 반환 값은 <xref:System.Boolean>.</xref:System.Boolean> 형식의 속성에 대 한 기본값은 `false`합니다."
  example:
  - "The following example retrieves a value that specifies whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsExpandCollapsePatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty
  id: IsGridItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsGridItemPatternAvailableProperty
  nameWithType: AutomationElement.IsGridItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "나타내는 속성을 식별 여부는 <xref href=&quot;System.Windows.Automation.GridItemPattern&quot;> </xref> 컨트롤 패턴은이 사용할 수 있는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       속성의 반환 값은 <xref:System.Boolean>.</xref:System.Boolean> 형식의 속성에 대 한 기본값은 `false`합니다."
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsGridItemPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty
  id: IsGridPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsGridPatternAvailableProperty
  nameWithType: AutomationElement.IsGridPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "나타내는 속성을 식별 여부는 <xref href=&quot;System.Windows.Automation.GridPattern&quot;> </xref> 컨트롤 패턴은이 사용할 수 있는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       속성의 반환 값은 <xref:System.Boolean>.</xref:System.Boolean> 형식의 속성에 대 한 기본값은 `false`합니다."
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsGridPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty
  id: IsInvokePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsInvokePatternAvailableProperty
  nameWithType: AutomationElement.IsInvokePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "나타내는 속성을 식별 여부는 <xref href=&quot;System.Windows.Automation.InvokePattern&quot;> </xref> 컨트롤 패턴은이 사용할 수 있는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       속성의 반환 값은 <xref:System.Boolean>.</xref:System.Boolean> 형식의 속성에 대 한 기본값은 `false`합니다."
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsInvokePatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty
  id: IsItemContainerPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsItemContainerPatternAvailableProperty
  nameWithType: AutomationElement.IsItemContainerPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "나타내는 속성을 식별 여부는 <xref href=&quot;System.Windows.Automation.ItemContainerPattern&quot;> </xref> 컨트롤 패턴은이 사용할 수 있는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsItemContainerPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty
  id: IsKeyboardFocusableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsKeyboardFocusableProperty
  nameWithType: AutomationElement.IsKeyboardFocusableProperty
  fullName: System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "식별 된 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable*>속성.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable*>"
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A>또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A>속성.</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       적절 하 게 작동 하는 데 필요한 정보를 제공 하는 속성은 <xref:System.Windows.Automation.AutomationElement.SetFocus%2A>메서드.</xref:System.Windows.Automation.AutomationElement.SetFocus%2A>       속성의 반환 값은 <xref:System.Boolean>.</xref:System.Boolean> 형식의 속성에 대 한 기본값은 `false`합니다."
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#147](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#147)]\n [!code-vb[UIAClient_snip#147](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#147)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsKeyboardFocusableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty
  id: IsMultipleViewPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsMultipleViewPatternAvailableProperty
  nameWithType: AutomationElement.IsMultipleViewPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "나타내는 속성을 식별 여부는 <xref href=&quot;System.Windows.Automation.MultipleViewPattern&quot;> </xref> 컨트롤 패턴은이 사용할 수 있는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       속성의 반환 값은 <xref:System.Boolean>.</xref:System.Boolean> 형식의 속성에 대 한 기본값은 `false`합니다."
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsMultipleViewPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsOffscreenProperty
  id: IsOffscreenProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsOffscreenProperty
  nameWithType: AutomationElement.IsOffscreenProperty
  fullName: System.Windows.Automation.AutomationElement.IsOffscreenProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "식별 된 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen*>을 나타내는 속성 여부는 [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] 항목이 화면에 표시 되는지.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen*>"
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A>또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A>속성.</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       형식의 반환 값은 <xref:System.Boolean>, 기본값은 및 `false`.</xref:System.Boolean>       이 속성은 경우에 대 한 자세한 내용은 `true`, <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen%2A>.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen%2A> 를 참조 하세요."
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#148](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#148)]\n [!code-vb[UIAClient_snip#148](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#148)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#149](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#149)]\n [!code-vb[UIAClient_snip#149](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#149)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsOffscreenProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsPasswordProperty
  id: IsPasswordProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsPasswordProperty
  nameWithType: AutomationElement.IsPasswordProperty
  fullName: System.Windows.Automation.AutomationElement.IsPasswordProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "식별 된 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword*>속성.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword*>"
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A>또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A>속성.</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       이 속성에 대 한 반환 값은에 <xref:System.Boolean>.</xref:System.Boolean> 반환 `true` 콘텐츠 보호 되 고, 그렇지 않으면 임을 나타내려면 `false`합니다."
  example:
  - "The following example retrieves the current value of the property.  \n  \n [!code-cs[UIAClient_snip#150](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#150)]\n [!code-vb[UIAClient_snip#150](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#150)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsPasswordProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty
  id: IsRangeValuePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsRangeValuePatternAvailableProperty
  nameWithType: AutomationElement.IsRangeValuePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "나타내는 속성을 식별 여부는 <xref href=&quot;System.Windows.Automation.RangeValuePattern&quot;> </xref> 컨트롤 패턴은이 사용할 수 있는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       속성의 반환 값은 <xref:System.Boolean>.</xref:System.Boolean> 형식의 속성에 대 한 기본값은 `false`합니다."
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsRangeValuePatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsRequiredForFormProperty
  id: IsRequiredForFormProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsRequiredForFormProperty
  nameWithType: AutomationElement.IsRequiredForFormProperty
  fullName: System.Windows.Automation.AutomationElement.IsRequiredForFormProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "식별 된 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm*>속성.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm*>"
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A>또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A>속성.</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       이 속성에 대 한 반환 값은 형식의 <xref:System.Boolean>, 기본값은 및 `false`.</xref:System.Boolean>"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#151](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#151)]\n [!code-vb[UIAClient_snip#151](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#151)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsRequiredForFormProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty
  id: IsScrollItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsScrollItemPatternAvailableProperty
  nameWithType: AutomationElement.IsScrollItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "나타내는 속성을 식별 여부는 <xref href=&quot;System.Windows.Automation.ScrollItemPattern&quot;> </xref> 컨트롤 패턴은이에 사용할 수 있는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       속성의 반환 값은 <xref:System.Boolean>.</xref:System.Boolean> 형식의 속성에 대 한 기본값은 `false`합니다."
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsScrollItemPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty
  id: IsScrollPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsScrollPatternAvailableProperty
  nameWithType: AutomationElement.IsScrollPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "나타내는 속성을 식별 여부는 <xref href=&quot;System.Windows.Automation.ScrollPattern&quot;> </xref> 컨트롤 패턴은이 사용할 수 있는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       속성의 반환 값은 <xref:System.Boolean>.</xref:System.Boolean> 형식의 속성에 대 한 기본값은 `false`합니다."
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsScrollPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty
  id: IsSelectionItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsSelectionItemPatternAvailableProperty
  nameWithType: AutomationElement.IsSelectionItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "나타내는 속성을 식별 여부는 <xref href=&quot;System.Windows.Automation.SelectionItemPattern&quot;> </xref> 컨트롤 패턴은이 사용할 수 있는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       속성의 반환 값은 <xref:System.Boolean>.</xref:System.Boolean> 형식의 속성에 대 한 기본값은 `false`합니다."
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsSelectionItemPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty
  id: IsSelectionPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsSelectionPatternAvailableProperty
  nameWithType: AutomationElement.IsSelectionPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "나타내는 속성을 식별 여부는 <xref href=&quot;System.Windows.Automation.SelectionPattern&quot;> </xref> 컨트롤 패턴은이 사용할 수 있는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       속성의 반환 값은 <xref:System.Boolean>.</xref:System.Boolean> 형식의 속성에 대 한 기본값은 `false`합니다."
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsSelectionPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty
  id: IsSynchronizedInputPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsSynchronizedInputPatternAvailableProperty
  nameWithType: AutomationElement.IsSynchronizedInputPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "나타내는 속성을 식별 여부는 <xref href=&quot;System.Windows.Automation.SynchronizedInputPattern&quot;> </xref> 컨트롤 패턴은이 사용할 수 있는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsSynchronizedInputPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty
  id: IsTableItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsTableItemPatternAvailableProperty
  nameWithType: AutomationElement.IsTableItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "나타내는 속성을 식별 여부는 <xref href=&quot;System.Windows.Automation.TableItemPattern&quot;> </xref> 컨트롤 패턴은이 사용할 수 있는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       속성의 반환 값은 <xref:System.Boolean>.</xref:System.Boolean> 형식의 속성에 대 한 기본값은 `false`합니다."
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsTableItemPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty
  id: IsTablePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsTablePatternAvailableProperty
  nameWithType: AutomationElement.IsTablePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "나타내는 속성을 식별 여부는 <xref href=&quot;System.Windows.Automation.TablePattern&quot;> </xref> 컨트롤 패턴은이 사용할 수 있는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       속성의 반환 값은 <xref:System.Boolean>.</xref:System.Boolean> 형식의 속성에 대 한 기본값은 `false`합니다."
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsTablePatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty
  id: IsTextPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsTextPatternAvailableProperty
  nameWithType: AutomationElement.IsTextPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "나타내는 속성을 식별 여부는 <xref href=&quot;System.Windows.Automation.TextPattern&quot;> </xref> 컨트롤 패턴은이 사용할 수 있는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       속성의 반환 값은 <xref:System.Boolean>.</xref:System.Boolean> 형식의 속성에 대 한 기본값은 `false`합니다."
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsTextPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty
  id: IsTogglePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsTogglePatternAvailableProperty
  nameWithType: AutomationElement.IsTogglePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "나타내는 속성을 식별 여부는 <xref href=&quot;System.Windows.Automation.TogglePattern&quot;> </xref> 컨트롤 패턴은이 사용할 수 있는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       속성의 반환 값은 <xref:System.Boolean>.</xref:System.Boolean> 형식의 속성에 대 한 기본값은 `false`합니다."
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsTogglePatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty
  id: IsTransformPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsTransformPatternAvailableProperty
  nameWithType: AutomationElement.IsTransformPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "나타내는 속성을 식별 여부는 <xref href=&quot;System.Windows.Automation.TransformPattern&quot;> </xref> 컨트롤 패턴은이 사용할 수 있는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       속성의 반환 값은 <xref:System.Boolean>.</xref:System.Boolean> 형식의 속성에 대 한 기본값은 `false`합니다."
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsTransformPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty
  id: IsValuePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsValuePatternAvailableProperty
  nameWithType: AutomationElement.IsValuePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "나타내는 속성을 식별 여부는 <xref href=&quot;System.Windows.Automation.ValuePattern&quot;> </xref> 컨트롤 패턴은이 사용할 수 있는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       속성의 반환 값은 <xref:System.Boolean>.</xref:System.Boolean> 형식의 속성에 대 한 기본값은 `false`합니다."
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsValuePatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty
  id: IsVirtualizedItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsVirtualizedItemPatternAvailableProperty
  nameWithType: AutomationElement.IsVirtualizedItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "나타내는 속성을 식별 여부는 <xref href=&quot;System.Windows.Automation.VirtualizedItemPattern&quot;> </xref> 컨트롤 패턴은이 사용할 수 있는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsVirtualizedItemPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty
  id: IsWindowPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsWindowPatternAvailableProperty
  nameWithType: AutomationElement.IsWindowPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "나타내는 속성을 식별 여부는 <xref href=&quot;System.Windows.Automation.WindowPattern&quot;> </xref> 컨트롤 패턴은이 사용할 수 있는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       속성의 반환 값은 <xref:System.Boolean>.</xref:System.Boolean> 형식의 속성에 대 한 기본값은 `false`합니다."
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsWindowPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ItemStatusProperty
  id: ItemStatusProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ItemStatusProperty
  nameWithType: AutomationElement.ItemStatusProperty
  fullName: System.Windows.Automation.AutomationElement.ItemStatusProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "식별 된 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus*>속성은 복합 항목의 시각적 표시 상태를 지정 합니다.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus*>"
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       반환 값은에 컨트롤이 정의 <xref:System.String>.</xref:System.String> 기본값은 빈 문자열입니다."
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#152](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#152)]\n [!code-vb[UIAClient_snip#152](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#152)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#153](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#153)]\n [!code-vb[UIAClient_snip#153](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#153)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty ItemStatusProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ItemTypeProperty
  id: ItemTypeProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ItemTypeProperty
  nameWithType: AutomationElement.ItemTypeProperty
  fullName: System.Windows.Automation.AutomationElement.ItemTypeProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "식별 된 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType*>속성.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType*>"
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A>또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A>속성.</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       반환 값은에 컨트롤이 정의 <xref:System.String>.</xref:System.String> 기본값은 빈 문자열입니다."
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#154](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#154)]\n [!code-vb[UIAClient_snip#154](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#154)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, an application-defined string is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#155](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#155)]\n [!code-vb[UIAClient_snip#155](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#155)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty ItemTypeProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.LabeledByProperty
  id: LabeledByProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: LabeledByProperty
  nameWithType: AutomationElement.LabeledByProperty
  fullName: System.Windows.Automation.AutomationElement.LabeledByProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "식별 된 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy*>컨트롤과 연결 된 레이블을 식별 하는 속성.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy*>"
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A>또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A>속성.</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       속성의 반환 값은 <xref:System.Windows.Automation.AutomationElement>.</xref:System.Windows.Automation.AutomationElement> 형식의 속성에 대 한 기본값은 `null`합니다."
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#156](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#156)]\n [!code-vb[UIAClient_snip#156](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#156)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#157](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#157)]\n [!code-vb[UIAClient_snip#157](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#157)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty LabeledByProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent
  id: LayoutInvalidatedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: LayoutInvalidatedEvent
  nameWithType: AutomationElement.LayoutInvalidatedEvent
  fullName: System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "레이아웃이 무효화 될 때 발생 하는 이벤트를 식별 합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       이 이벤트는 많은 요소 표시 유형 정보 변경 될 때마다 요소 컨테이너에 의해 발생 합니다.  이 이벤트는 사용 하는 클라이언트에서 새로 고침 하는 데 필요한 표시기로는 <xref:System.Windows.Automation.AutomationElement.BoundingRectangleProperty>및 <xref:System.Windows.Automation.AutomationElement.IsOffscreenProperty>트리 내에서 요소에 대 한 캐시 한 정보.</xref:System.Windows.Automation.AutomationElement.IsOffscreenProperty> </xref:System.Windows.Automation.AutomationElement.BoundingRectangleProperty> 이 이벤트를 트리거하는 권장된 변경 내용 수는 25입니다."
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent LayoutInvalidatedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty
  id: LocalizedControlTypeProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: LocalizedControlTypeProperty
  nameWithType: AutomationElement.LocalizedControlTypeProperty
  fullName: System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "식별 된 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType*>해당 언어로 속성.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType*>"
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A>또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A>속성.</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       공급자는 잘 정의 된 컨트롤 형식을 가지 지 않는 사용자 지정 컨트롤을 나타내는 경우이 속성을 노출 해야 합니다.       속성의 반환 값은 <xref:System.String>.</xref:System.String> 형식의 속성의 기본값은 빈 문자열입니다."
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#158](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#158)]\n [!code-vb[UIAClient_snip#158](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#158)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#159](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#159)]\n [!code-vb[UIAClient_snip#159](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#159)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty LocalizedControlTypeProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.MenuClosedEvent
  id: MenuClosedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: MenuClosedEvent
  nameWithType: AutomationElement.MenuClosedEvent
  fullName: System.Windows.Automation.AutomationElement.MenuClosedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "메뉴가 닫힐 때 발생 하는 이벤트를 식별 합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent MenuClosedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.MenuOpenedEvent
  id: MenuOpenedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: MenuOpenedEvent
  nameWithType: AutomationElement.MenuOpenedEvent
  fullName: System.Windows.Automation.AutomationElement.MenuOpenedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "메뉴가 열릴 때 발생 하는 이벤트를 식별 합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent MenuOpenedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.NameProperty
  id: NameProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: NameProperty
  nameWithType: AutomationElement.NameProperty
  fullName: System.Windows.Automation.AutomationElement.NameProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "식별 된 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name*>속성.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name*>"
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A>또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A>속성.</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       속성의 반환 값은 <xref:System.String>.</xref:System.String> 형식의 속성의 기본값은 빈 문자열입니다."
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#160](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#160)]\n [!code-vb[UIAClient_snip#160](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#160)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#161](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#161)]\n [!code-vb[UIAClient_snip#161](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#161)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty NameProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.NativeWindowHandleProperty
  id: NativeWindowHandleProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: NativeWindowHandleProperty
  nameWithType: AutomationElement.NativeWindowHandleProperty
  fullName: System.Windows.Automation.AutomationElement.NativeWindowHandleProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "식별 된 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle*>속성.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle*>"
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A>또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A>속성.</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       속성의 반환 값은 <xref:System.Int32>.</xref:System.Int32> 형식의 속성의 기본값은 0입니다."
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#162](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#162)]\n [!code-vb[UIAClient_snip#162](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#162)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#163](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#163)]\n [!code-vb[UIAClient_snip#163](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#163)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty NativeWindowHandleProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.NotSupported
  id: NotSupported
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: NotSupported
  nameWithType: AutomationElement.NotSupported
  fullName: System.Windows.Automation.AutomationElement.NotSupported
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "속성이 지원 되지 않음을 나타냅니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야"
  example:
  - "The following example retrieves the help text property for an <xref:System.Windows.Automation.AutomationElement>, specifying that NotSupported should be returned if the control does not support that property.  \n  \n [!code-vb[UIAClient_snip#123](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#123)]\n [!code-cs[UIAClient_snip#123](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#123)]"
  syntax:
    content: public static readonly object NotSupported;
    return:
      type: System.Object
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  id: op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: op_Equality(AutomationElement,AutomationElement)
  nameWithType: AutomationElement.op_Equality(AutomationElement,AutomationElement)
  fullName: System.Windows.Automation.AutomationElement.op_Equality(AutomationElement,AutomationElement)
  type: Operator
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "나타내는 값을 반환 하는지 여부를 지정 된 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 동일 하 게 개체가 참조 [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] 요소입니다."
  remarks: "두 개의 <xref:System.Windows.Automation.AutomationElement>것으로 간주 하는 개체 시간상에서 다른 지점에서 다른 캐시 된 정보를 포함 될 수 있습니다.</xref:System.Windows.Automation.AutomationElement> 같음 개체가 동일한 기본 참조만 테스트 [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] 요소입니다."
  syntax:
    content: public static bool op_Equality (System.Windows.Automation.AutomationElement left, System.Windows.Automation.AutomationElement right);
    parameters:
    - id: left
      type: System.Windows.Automation.AutomationElement
      description: "첫 번째 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 을 비교 합니다."
    - id: right
      type: System.Windows.Automation.AutomationElement
      description: "두 번째 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 을 비교 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우 두 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 동일 하 게 개체가 참조 [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] 요소 고, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Automation.AutomationElement.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  id: op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: op_Inequality(AutomationElement,AutomationElement)
  nameWithType: AutomationElement.op_Inequality(AutomationElement,AutomationElement)
  fullName: System.Windows.Automation.AutomationElement.op_Inequality(AutomationElement,AutomationElement)
  type: Operator
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "나타내는 값을 반환 하는지 여부를 지정 된 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 개체가 참조에 서로 다른 [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] 요소입니다."
  syntax:
    content: public static bool op_Inequality (System.Windows.Automation.AutomationElement left, System.Windows.Automation.AutomationElement right);
    parameters:
    - id: left
      type: System.Windows.Automation.AutomationElement
      description: "첫 번째 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 을 비교 합니다."
    - id: right
      type: System.Windows.Automation.AutomationElement
      description: "두 번째 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 을 비교 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>두 개체 참조에 서로 다른 경우 [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] 요소 고, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Automation.AutomationElement.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.OrientationProperty
  id: OrientationProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: OrientationProperty
  nameWithType: AutomationElement.OrientationProperty
  fullName: System.Windows.Automation.AutomationElement.OrientationProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "식별 된 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation*>속성.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation*>"
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A>또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A>속성.</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       이름 필드에 <xref:System.Windows.Automation.OrientationType>.</xref:System.Windows.Automation.OrientationType> 속성의 값은 기본값은 <xref:System.Windows.Automation.OrientationType>.</xref:System.Windows.Automation.OrientationType>"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#164](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#164)]\n [!code-vb[UIAClient_snip#164](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#164)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#165](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#165)]\n [!code-vb[UIAClient_snip#165](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#165)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty OrientationProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ProcessIdProperty
  id: ProcessIdProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ProcessIdProperty
  nameWithType: AutomationElement.ProcessIdProperty
  fullName: System.Windows.Automation.AutomationElement.ProcessIdProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "식별 된 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId*>속성.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId*>"
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A>또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A>속성.</xref:System.Windows.Automation.AutomationElement.Cached%2A> </xref:System.Windows.Automation.AutomationElement.Current%2A>       속성의 반환 값은 <xref:System.Int32>.</xref:System.Int32> 형식의 속성의 기본값은 0입니다."
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#167](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#167)]\n [!code-vb[UIAClient_snip#167](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#167)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported>is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#168](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#168)]\n [!code-vb[UIAClient_snip#168](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#168)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty ProcessIdProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.RootElement
  id: RootElement
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: RootElement
  nameWithType: AutomationElement.RootElement
  fullName: System.Windows.Automation.AutomationElement.RootElement
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "루트를 가져옵니다 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 에 현재 데스크톱에 대 한 합니다."
  remarks: "으로 사용할 수 있습니다 루트 요소 시작점을 다른 요소를 찾는 데 사용 하는 <xref:System.Windows.Automation.AutomationElement.FindAll%2A>및 <xref:System.Windows.Automation.AutomationElement.FindFirst%2A>메서드.</xref:System.Windows.Automation.AutomationElement.FindFirst%2A> </xref:System.Windows.Automation.AutomationElement.FindAll%2A>       루트 요소를 검색할 때 지정 해야 <xref:System.Windows.Automation.TreeScope>검색의 범위에 있지 <xref:System.Windows.Automation.TreeScope>.</xref:System.Windows.Automation.TreeScope> </xref:System.Windows.Automation.TreeScope> 데스크톱의 전체 하위 트리를 통해 검색을 개의 항목을 반복 하 고 스택 오버플로가 발생할 수 없습니다."
  example:
  - "The following example code retrieves a collection of all the immediate children of the desktop.  \n  \n [!code-vb[UIAClient_snip#201](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#201)]\n [!code-cs[UIAClient_snip#201](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#201)]"
  syntax:
    content: public static System.Windows.Automation.AutomationElement RootElement { get; }
    return:
      type: System.Windows.Automation.AutomationElement
      description: "루트 요소입니다."
  overload: System.Windows.Automation.AutomationElement.RootElement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.RuntimeIdProperty
  id: RuntimeIdProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: RuntimeIdProperty
  nameWithType: AutomationElement.RuntimeIdProperty
  fullName: System.Windows.Automation.AutomationElement.RuntimeIdProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "요소의 런타임 식별자를 포함 하는 속성을 식별 합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       런타임에 [!INCLUDE[TLA2#tla_id](~/add/includes/tla2sharptla-id-md.md)] 속성 지정는 [!INCLUDE[TLA2#tla_id](~/add/includes/tla2sharptla-id-md.md)] 에 대 한 프로그램 <xref:System.Windows.Automation.AutomationElement>바탕 화면에서 고유 합니다.</xref:System.Windows.Automation.AutomationElement>       속성의 반환 값은 <xref:System.Int32>.</xref:System.Int32> 형식의 배열 기본값을 갖지 있습니다."
  example:
  - "The following example retrieves the current value of the property.  \n  \n [!code-cs[UIAClient_snip#169](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#169)]\n [!code-vb[UIAClient_snip#169](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#169)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty RuntimeIdProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.SetFocus
  id: SetFocus
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: SetFocus()
  nameWithType: AutomationElement.SetFocus()
  fullName: System.Windows.Automation.AutomationElement.SetFocus()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "에 집중 된 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>합니다."
  remarks: "이 메서드의 동작은 요소에 대 한 UI 자동화 공급자 구현에 따라 달라 집니다. 포커스를 설정 해도 요소를 포그라운드로 전환 하거나 표시 하지 않을 수도 있음 않습니다."
  syntax:
    content: public void SetFocus ();
    parameters: []
  overload: System.Windows.Automation.AutomationElement.SetFocus*
  exceptions:
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "에 대 한 UI는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 더 이상 없습니다."
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.StructureChangedEvent
  id: StructureChangedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: StructureChangedEvent
  nameWithType: AutomationElement.StructureChangedEvent
  fullName: System.Windows.Automation.AutomationElement.StructureChangedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "하는 이벤트를 식별 될 때 발생 하는 [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 트리 구조가 변경 됩니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent StructureChangedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ToolTipClosedEvent
  id: ToolTipClosedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ToolTipClosedEvent
  nameWithType: AutomationElement.ToolTipClosedEvent
  fullName: System.Windows.Automation.AutomationElement.ToolTipClosedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "도구 설명이 닫힐 때 발생 하는 이벤트를 식별 합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent ToolTipClosedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ToolTipOpenedEvent
  id: ToolTipOpenedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ToolTipOpenedEvent
  nameWithType: AutomationElement.ToolTipOpenedEvent
  fullName: System.Windows.Automation.AutomationElement.ToolTipOpenedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "도구 설명이 열릴 때 발생 하는 이벤트를 식별 합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.AutomationElementIdentifiers>.</xref:System.Windows.Automation.AutomationElementIdentifiers> 에 해당 하는 식별자를 사용 해야       도구 설명의 바탕 화면에서 일시적으로 유지 되며 클라이언트에서 이벤트를 수신할 때 도구 설명을 닫았을 수 있습니다."
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent ToolTipOpenedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  id: TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: TryGetCachedPattern(AutomationPattern,Object)
  nameWithType: AutomationElement.TryGetCachedPattern(AutomationPattern,Object)
  fullName: System.Windows.Automation.AutomationElement.TryGetCachedPattern(AutomationPattern,Object)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "캐시에서 컨트롤 패턴을 검색 합니다."
  remarks: ''
  example:
  - "The following example shows how to cache and retrieve a control pattern.  \n  \n [!code-vb[UIAClient_snip#107](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#107)]\n [!code-cs[UIAClient_snip#107](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#107)]"
  syntax:
    content: public bool TryGetCachedPattern (System.Windows.Automation.AutomationPattern pattern, out object patternObject);
    parameters:
    - id: pattern
      type: System.Windows.Automation.AutomationPattern
      description: "검색할 컨트롤 패턴의 식별자입니다."
    - id: patternObject
      type: System.Object
      description: "반환 시 패턴이 들어 있는 캐시에 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>패턴이 캐시에이 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 없으면 캐시에 여부 지원 합니다."
  overload: System.Windows.Automation.AutomationElement.TryGetCachedPattern*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)
  id: TryGetClickablePoint(System.Windows.Point@)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: TryGetClickablePoint(Point)
  nameWithType: AutomationElement.TryGetClickablePoint(Point)
  fullName: System.Windows.Automation.AutomationElement.TryGetClickablePoint(Point)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "클릭할 수 있는 요소 내의 지점을 검색 합니다."
  remarks: "<xref:System.Windows.Automation.AutomationElement>완전히 다른 창으로 가려진 경우 클릭 가능한있지 않습니다.</xref:System.Windows.Automation.AutomationElement>"
  example:
  - "The following example attempts to retrieve a clickable point on an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-vb[UIAClient_snip#112](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#112)]\n [!code-cs[UIAClient_snip#112](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#112)]"
  syntax:
    content: public bool TryGetClickablePoint (out System.Windows.Point pt);
    parameters:
    - id: pt
      type: System.Windows.Point
      description: "이 메서드가 반환 될 때 클릭할 수 있는 지점의 실제 화면 좌표를 포함 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>클릭할 수 있는 지점이 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Automation.AutomationElement.TryGetClickablePoint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  id: TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: TryGetCurrentPattern(AutomationPattern,Object)
  nameWithType: AutomationElement.TryGetCurrentPattern(AutomationPattern,Object)
  fullName: System.Windows.Automation.AutomationElement.TryGetCurrentPattern(AutomationPattern,Object)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "컨트롤 패턴을 구현 하는 개체를 검색 합니다."
  remarks: "몇 가지 형태에 대 한 [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)], 프로세스 간 성능 오버 헤드가 발생이 발생 합니다.이 메서드. 응용 프로그램 패턴을 캐시 하 고 다음 <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>.</xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A> 를 사용 하 여 검색 하 여 오버 헤드 집중할 수 있습니다."
  example:
  - "The following example shows how to use this method to retrieve a control pattern.  \n  \n [!code-vb[UIAClient_snip#113](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#113)]\n [!code-cs[UIAClient_snip#113](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#113)]"
  syntax:
    content: public bool TryGetCurrentPattern (System.Windows.Automation.AutomationPattern pattern, out object patternObject);
    parameters:
    - id: pattern
      type: System.Windows.Automation.AutomationPattern
      description: "검색할 컨트롤 패턴의 식별자입니다."
    - id: patternObject
      type: System.Object
      description: "반환 시, 지원 되는 경우 컨트롤 패턴 그렇지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>패턴이 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Automation.AutomationElement.TryGetCurrentPattern*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Automation.ElementNotAvailableException
  parent: System.Windows.Automation
  isExternal: false
  name: ElementNotAvailableException
  nameWithType: ElementNotAvailableException
  fullName: System.Windows.Automation.ElementNotAvailableException
- uid: System.Windows.Automation.NoClickablePointException
  parent: System.Windows.Automation
  isExternal: false
  name: NoClickablePointException
  nameWithType: NoClickablePointException
  fullName: System.Windows.Automation.NoClickablePointException
- uid: System.Windows.Automation.AutomationElement.AcceleratorKeyProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: AcceleratorKeyProperty
  nameWithType: AutomationElement.AcceleratorKeyProperty
  fullName: System.Windows.Automation.AutomationElement.AcceleratorKeyProperty
- uid: System.Windows.Automation.AutomationProperty
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationProperty
  nameWithType: AutomationProperty
  fullName: System.Windows.Automation.AutomationProperty
- uid: System.Windows.Automation.AutomationElement.AccessKeyProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: AccessKeyProperty
  nameWithType: AutomationElement.AccessKeyProperty
  fullName: System.Windows.Automation.AutomationElement.AccessKeyProperty
- uid: System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: AsyncContentLoadedEvent
  nameWithType: AutomationElement.AsyncContentLoadedEvent
  fullName: System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent
- uid: System.Windows.Automation.AutomationEvent
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationEvent
  nameWithType: AutomationEvent
  fullName: System.Windows.Automation.AutomationEvent
- uid: System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: AutomationFocusChangedEvent
  nameWithType: AutomationElement.AutomationFocusChangedEvent
  fullName: System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent
- uid: System.Windows.Automation.AutomationElement.AutomationIdProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: AutomationIdProperty
  nameWithType: AutomationElement.AutomationIdProperty
  fullName: System.Windows.Automation.AutomationElement.AutomationIdProperty
- uid: System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: AutomationPropertyChangedEvent
  nameWithType: AutomationElement.AutomationPropertyChangedEvent
  fullName: System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent
- uid: System.Windows.Automation.AutomationElement.BoundingRectangleProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: BoundingRectangleProperty
  nameWithType: AutomationElement.BoundingRectangleProperty
  fullName: System.Windows.Automation.AutomationElement.BoundingRectangleProperty
- uid: System.Windows.Automation.AutomationElement.Cached
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Cached
  nameWithType: AutomationElement.Cached
  fullName: System.Windows.Automation.AutomationElement.Cached
- uid: System.Windows.Automation.AutomationElement.AutomationElementInformation
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationElement+AutomationElementInformation
  nameWithType: AutomationElement+AutomationElementInformation
  fullName: System.Windows.Automation.AutomationElement+AutomationElementInformation
- uid: System.Windows.Automation.AutomationElement.CachedChildren
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: CachedChildren
  nameWithType: AutomationElement.CachedChildren
  fullName: System.Windows.Automation.AutomationElement.CachedChildren
- uid: System.Windows.Automation.AutomationElementCollection
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationElementCollection
  nameWithType: AutomationElementCollection
  fullName: System.Windows.Automation.AutomationElementCollection
- uid: System.Windows.Automation.AutomationElement.CachedParent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: CachedParent
  nameWithType: AutomationElement.CachedParent
  fullName: System.Windows.Automation.AutomationElement.CachedParent
- uid: System.Windows.Automation.AutomationElement
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationElement
  nameWithType: AutomationElement
  fullName: System.Windows.Automation.AutomationElement
- uid: System.Windows.Automation.AutomationElement.ClassNameProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ClassNameProperty
  nameWithType: AutomationElement.ClassNameProperty
  fullName: System.Windows.Automation.AutomationElement.ClassNameProperty
- uid: System.Windows.Automation.AutomationElement.ClickablePointProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ClickablePointProperty
  nameWithType: AutomationElement.ClickablePointProperty
  fullName: System.Windows.Automation.AutomationElement.ClickablePointProperty
- uid: System.Windows.Automation.AutomationElement.ControlTypeProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ControlTypeProperty
  nameWithType: AutomationElement.ControlTypeProperty
  fullName: System.Windows.Automation.AutomationElement.ControlTypeProperty
- uid: System.Windows.Automation.AutomationElement.CultureProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: CultureProperty
  nameWithType: AutomationElement.CultureProperty
  fullName: System.Windows.Automation.AutomationElement.CultureProperty
- uid: System.Windows.Automation.AutomationElement.Current
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Current
  nameWithType: AutomationElement.Current
  fullName: System.Windows.Automation.AutomationElement.Current
- uid: System.Windows.Automation.AutomationElement.Equals(System.Object)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Equals(Object)
  nameWithType: AutomationElement.Equals(Object)
  fullName: System.Windows.Automation.AutomationElement.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Automation.AutomationElement.Finalize
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Finalize()
  nameWithType: AutomationElement.Finalize()
  fullName: System.Windows.Automation.AutomationElement.Finalize()
- uid: System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FindAll(TreeScope,Condition)
  nameWithType: AutomationElement.FindAll(TreeScope,Condition)
  fullName: System.Windows.Automation.AutomationElement.FindAll(TreeScope,Condition)
- uid: System.Windows.Automation.TreeScope
  parent: System.Windows.Automation
  isExternal: false
  name: TreeScope
  nameWithType: TreeScope
  fullName: System.Windows.Automation.TreeScope
- uid: System.Windows.Automation.Condition
  parent: System.Windows.Automation
  isExternal: false
  name: Condition
  nameWithType: Condition
  fullName: System.Windows.Automation.Condition
- uid: System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FindFirst(TreeScope,Condition)
  nameWithType: AutomationElement.FindFirst(TreeScope,Condition)
  fullName: System.Windows.Automation.AutomationElement.FindFirst(TreeScope,Condition)
- uid: System.Windows.Automation.AutomationElement.FocusedElement
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FocusedElement
  nameWithType: AutomationElement.FocusedElement
  fullName: System.Windows.Automation.AutomationElement.FocusedElement
- uid: System.Windows.Automation.AutomationElement.FrameworkIdProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FrameworkIdProperty
  nameWithType: AutomationElement.FrameworkIdProperty
  fullName: System.Windows.Automation.AutomationElement.FrameworkIdProperty
- uid: System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FromHandle(IntPtr)
  nameWithType: AutomationElement.FromHandle(IntPtr)
  fullName: System.Windows.Automation.AutomationElement.FromHandle(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Automation.AutomationElement.FromLocalProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FromLocalProvider(IRawElementProviderSimple)
  nameWithType: AutomationElement.FromLocalProvider(IRawElementProviderSimple)
  fullName: System.Windows.Automation.AutomationElement.FromLocalProvider(IRawElementProviderSimple)
- uid: System.Windows.Automation.Provider.IRawElementProviderSimple
  parent: System.Windows.Automation.Provider
  isExternal: false
  name: IRawElementProviderSimple
  nameWithType: IRawElementProviderSimple
  fullName: System.Windows.Automation.Provider.IRawElementProviderSimple
- uid: System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FromPoint(Point)
  nameWithType: AutomationElement.FromPoint(Point)
  fullName: System.Windows.Automation.AutomationElement.FromPoint(Point)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCachedPattern(AutomationPattern)
  nameWithType: AutomationElement.GetCachedPattern(AutomationPattern)
  fullName: System.Windows.Automation.AutomationElement.GetCachedPattern(AutomationPattern)
- uid: System.Windows.Automation.AutomationPattern
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationPattern
  nameWithType: AutomationPattern
  fullName: System.Windows.Automation.AutomationPattern
- uid: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCachedPropertyValue(AutomationProperty)
  nameWithType: AutomationElement.GetCachedPropertyValue(AutomationProperty)
  fullName: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(AutomationProperty)
- uid: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCachedPropertyValue(AutomationProperty,Boolean)
  nameWithType: AutomationElement.GetCachedPropertyValue(AutomationProperty,Boolean)
  fullName: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(AutomationProperty,Boolean)
- uid: System.Windows.Automation.AutomationElement.GetClickablePoint
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetClickablePoint()
  nameWithType: AutomationElement.GetClickablePoint()
  fullName: System.Windows.Automation.AutomationElement.GetClickablePoint()
- uid: System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCurrentPattern(AutomationPattern)
  nameWithType: AutomationElement.GetCurrentPattern(AutomationPattern)
  fullName: System.Windows.Automation.AutomationElement.GetCurrentPattern(AutomationPattern)
- uid: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCurrentPropertyValue(AutomationProperty)
  nameWithType: AutomationElement.GetCurrentPropertyValue(AutomationProperty)
  fullName: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(AutomationProperty)
- uid: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCurrentPropertyValue(AutomationProperty,Boolean)
  nameWithType: AutomationElement.GetCurrentPropertyValue(AutomationProperty,Boolean)
  fullName: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(AutomationProperty,Boolean)
- uid: System.Windows.Automation.AutomationElement.GetHashCode
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetHashCode()
  nameWithType: AutomationElement.GetHashCode()
  fullName: System.Windows.Automation.AutomationElement.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Automation.AutomationElement.GetRuntimeId
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetRuntimeId()
  nameWithType: AutomationElement.GetRuntimeId()
  fullName: System.Windows.Automation.AutomationElement.GetRuntimeId()
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Automation.AutomationElement.GetSupportedPatterns
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetSupportedPatterns()
  nameWithType: AutomationElement.GetSupportedPatterns()
  fullName: System.Windows.Automation.AutomationElement.GetSupportedPatterns()
- uid: System.Windows.Automation.AutomationPattern[]
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationPattern
  nameWithType: AutomationPattern
  fullName: System.Windows.Automation.AutomationPattern[]
  spec.csharp:
  - uid: System.Windows.Automation.AutomationPattern
    name: AutomationPattern
    nameWithType: AutomationPattern
    fullName: AutomationPattern[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Automation.AutomationElement.GetSupportedProperties
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetSupportedProperties()
  nameWithType: AutomationElement.GetSupportedProperties()
  fullName: System.Windows.Automation.AutomationElement.GetSupportedProperties()
- uid: System.Windows.Automation.AutomationProperty[]
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationProperty
  nameWithType: AutomationProperty
  fullName: System.Windows.Automation.AutomationProperty[]
  spec.csharp:
  - uid: System.Windows.Automation.AutomationProperty
    name: AutomationProperty
    nameWithType: AutomationProperty
    fullName: AutomationProperty[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Automation.AutomationElement.GetUpdatedCache(System.Windows.Automation.CacheRequest)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetUpdatedCache(CacheRequest)
  nameWithType: AutomationElement.GetUpdatedCache(CacheRequest)
  fullName: System.Windows.Automation.AutomationElement.GetUpdatedCache(CacheRequest)
- uid: System.Windows.Automation.CacheRequest
  parent: System.Windows.Automation
  isExternal: false
  name: CacheRequest
  nameWithType: CacheRequest
  fullName: System.Windows.Automation.CacheRequest
- uid: System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: HasKeyboardFocusProperty
  nameWithType: AutomationElement.HasKeyboardFocusProperty
  fullName: System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty
- uid: System.Windows.Automation.AutomationElement.HelpTextProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: HelpTextProperty
  nameWithType: AutomationElement.HelpTextProperty
  fullName: System.Windows.Automation.AutomationElement.HelpTextProperty
- uid: System.Windows.Automation.AutomationElement.IsContentElementProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsContentElementProperty
  nameWithType: AutomationElement.IsContentElementProperty
  fullName: System.Windows.Automation.AutomationElement.IsContentElementProperty
- uid: System.Windows.Automation.AutomationElement.IsControlElementProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsControlElementProperty
  nameWithType: AutomationElement.IsControlElementProperty
  fullName: System.Windows.Automation.AutomationElement.IsControlElementProperty
- uid: System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsDockPatternAvailableProperty
  nameWithType: AutomationElement.IsDockPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsEnabledProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsEnabledProperty
  nameWithType: AutomationElement.IsEnabledProperty
  fullName: System.Windows.Automation.AutomationElement.IsEnabledProperty
- uid: System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsExpandCollapsePatternAvailableProperty
  nameWithType: AutomationElement.IsExpandCollapsePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsGridItemPatternAvailableProperty
  nameWithType: AutomationElement.IsGridItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsGridPatternAvailableProperty
  nameWithType: AutomationElement.IsGridPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsInvokePatternAvailableProperty
  nameWithType: AutomationElement.IsInvokePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsItemContainerPatternAvailableProperty
  nameWithType: AutomationElement.IsItemContainerPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsKeyboardFocusableProperty
  nameWithType: AutomationElement.IsKeyboardFocusableProperty
  fullName: System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty
- uid: System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsMultipleViewPatternAvailableProperty
  nameWithType: AutomationElement.IsMultipleViewPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsOffscreenProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsOffscreenProperty
  nameWithType: AutomationElement.IsOffscreenProperty
  fullName: System.Windows.Automation.AutomationElement.IsOffscreenProperty
- uid: System.Windows.Automation.AutomationElement.IsPasswordProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsPasswordProperty
  nameWithType: AutomationElement.IsPasswordProperty
  fullName: System.Windows.Automation.AutomationElement.IsPasswordProperty
- uid: System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsRangeValuePatternAvailableProperty
  nameWithType: AutomationElement.IsRangeValuePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsRequiredForFormProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsRequiredForFormProperty
  nameWithType: AutomationElement.IsRequiredForFormProperty
  fullName: System.Windows.Automation.AutomationElement.IsRequiredForFormProperty
- uid: System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsScrollItemPatternAvailableProperty
  nameWithType: AutomationElement.IsScrollItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsScrollPatternAvailableProperty
  nameWithType: AutomationElement.IsScrollPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsSelectionItemPatternAvailableProperty
  nameWithType: AutomationElement.IsSelectionItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsSelectionPatternAvailableProperty
  nameWithType: AutomationElement.IsSelectionPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsSynchronizedInputPatternAvailableProperty
  nameWithType: AutomationElement.IsSynchronizedInputPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsTableItemPatternAvailableProperty
  nameWithType: AutomationElement.IsTableItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsTablePatternAvailableProperty
  nameWithType: AutomationElement.IsTablePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsTextPatternAvailableProperty
  nameWithType: AutomationElement.IsTextPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsTogglePatternAvailableProperty
  nameWithType: AutomationElement.IsTogglePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsTransformPatternAvailableProperty
  nameWithType: AutomationElement.IsTransformPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsValuePatternAvailableProperty
  nameWithType: AutomationElement.IsValuePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsVirtualizedItemPatternAvailableProperty
  nameWithType: AutomationElement.IsVirtualizedItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsWindowPatternAvailableProperty
  nameWithType: AutomationElement.IsWindowPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.ItemStatusProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ItemStatusProperty
  nameWithType: AutomationElement.ItemStatusProperty
  fullName: System.Windows.Automation.AutomationElement.ItemStatusProperty
- uid: System.Windows.Automation.AutomationElement.ItemTypeProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ItemTypeProperty
  nameWithType: AutomationElement.ItemTypeProperty
  fullName: System.Windows.Automation.AutomationElement.ItemTypeProperty
- uid: System.Windows.Automation.AutomationElement.LabeledByProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: LabeledByProperty
  nameWithType: AutomationElement.LabeledByProperty
  fullName: System.Windows.Automation.AutomationElement.LabeledByProperty
- uid: System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: LayoutInvalidatedEvent
  nameWithType: AutomationElement.LayoutInvalidatedEvent
  fullName: System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent
- uid: System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: LocalizedControlTypeProperty
  nameWithType: AutomationElement.LocalizedControlTypeProperty
  fullName: System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty
- uid: System.Windows.Automation.AutomationElement.MenuClosedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: MenuClosedEvent
  nameWithType: AutomationElement.MenuClosedEvent
  fullName: System.Windows.Automation.AutomationElement.MenuClosedEvent
- uid: System.Windows.Automation.AutomationElement.MenuOpenedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: MenuOpenedEvent
  nameWithType: AutomationElement.MenuOpenedEvent
  fullName: System.Windows.Automation.AutomationElement.MenuOpenedEvent
- uid: System.Windows.Automation.AutomationElement.NameProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: NameProperty
  nameWithType: AutomationElement.NameProperty
  fullName: System.Windows.Automation.AutomationElement.NameProperty
- uid: System.Windows.Automation.AutomationElement.NativeWindowHandleProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: NativeWindowHandleProperty
  nameWithType: AutomationElement.NativeWindowHandleProperty
  fullName: System.Windows.Automation.AutomationElement.NativeWindowHandleProperty
- uid: System.Windows.Automation.AutomationElement.NotSupported
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: NotSupported
  nameWithType: AutomationElement.NotSupported
  fullName: System.Windows.Automation.AutomationElement.NotSupported
- uid: System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: op_Equality(AutomationElement,AutomationElement)
  nameWithType: AutomationElement.op_Equality(AutomationElement,AutomationElement)
  fullName: System.Windows.Automation.AutomationElement.op_Equality(AutomationElement,AutomationElement)
- uid: System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: op_Inequality(AutomationElement,AutomationElement)
  nameWithType: AutomationElement.op_Inequality(AutomationElement,AutomationElement)
  fullName: System.Windows.Automation.AutomationElement.op_Inequality(AutomationElement,AutomationElement)
- uid: System.Windows.Automation.AutomationElement.OrientationProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: OrientationProperty
  nameWithType: AutomationElement.OrientationProperty
  fullName: System.Windows.Automation.AutomationElement.OrientationProperty
- uid: System.Windows.Automation.AutomationElement.ProcessIdProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ProcessIdProperty
  nameWithType: AutomationElement.ProcessIdProperty
  fullName: System.Windows.Automation.AutomationElement.ProcessIdProperty
- uid: System.Windows.Automation.AutomationElement.RootElement
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: RootElement
  nameWithType: AutomationElement.RootElement
  fullName: System.Windows.Automation.AutomationElement.RootElement
- uid: System.Windows.Automation.AutomationElement.RuntimeIdProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: RuntimeIdProperty
  nameWithType: AutomationElement.RuntimeIdProperty
  fullName: System.Windows.Automation.AutomationElement.RuntimeIdProperty
- uid: System.Windows.Automation.AutomationElement.SetFocus
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: SetFocus()
  nameWithType: AutomationElement.SetFocus()
  fullName: System.Windows.Automation.AutomationElement.SetFocus()
- uid: System.Windows.Automation.AutomationElement.StructureChangedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: StructureChangedEvent
  nameWithType: AutomationElement.StructureChangedEvent
  fullName: System.Windows.Automation.AutomationElement.StructureChangedEvent
- uid: System.Windows.Automation.AutomationElement.ToolTipClosedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ToolTipClosedEvent
  nameWithType: AutomationElement.ToolTipClosedEvent
  fullName: System.Windows.Automation.AutomationElement.ToolTipClosedEvent
- uid: System.Windows.Automation.AutomationElement.ToolTipOpenedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ToolTipOpenedEvent
  nameWithType: AutomationElement.ToolTipOpenedEvent
  fullName: System.Windows.Automation.AutomationElement.ToolTipOpenedEvent
- uid: System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: TryGetCachedPattern(AutomationPattern,Object)
  nameWithType: AutomationElement.TryGetCachedPattern(AutomationPattern,Object)
  fullName: System.Windows.Automation.AutomationElement.TryGetCachedPattern(AutomationPattern,Object)
- uid: System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: TryGetClickablePoint(Point)
  nameWithType: AutomationElement.TryGetClickablePoint(Point)
  fullName: System.Windows.Automation.AutomationElement.TryGetClickablePoint(Point)
- uid: System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: TryGetCurrentPattern(AutomationPattern,Object)
  nameWithType: AutomationElement.TryGetCurrentPattern(AutomationPattern,Object)
  fullName: System.Windows.Automation.AutomationElement.TryGetCurrentPattern(AutomationPattern,Object)
- uid: System.Windows.Automation.AutomationElement.Cached*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Cached
  nameWithType: AutomationElement.Cached
- uid: System.Windows.Automation.AutomationElement.CachedChildren*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: CachedChildren
  nameWithType: AutomationElement.CachedChildren
- uid: System.Windows.Automation.AutomationElement.CachedParent*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: CachedParent
  nameWithType: AutomationElement.CachedParent
- uid: System.Windows.Automation.AutomationElement.Current*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Current
  nameWithType: AutomationElement.Current
- uid: System.Windows.Automation.AutomationElement.Equals*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Equals
  nameWithType: AutomationElement.Equals
- uid: System.Windows.Automation.AutomationElement.Finalize*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Finalize
  nameWithType: AutomationElement.Finalize
- uid: System.Windows.Automation.AutomationElement.FindAll*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FindAll
  nameWithType: AutomationElement.FindAll
- uid: System.Windows.Automation.AutomationElement.FindFirst*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FindFirst
  nameWithType: AutomationElement.FindFirst
- uid: System.Windows.Automation.AutomationElement.FocusedElement*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FocusedElement
  nameWithType: AutomationElement.FocusedElement
- uid: System.Windows.Automation.AutomationElement.FromHandle*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FromHandle
  nameWithType: AutomationElement.FromHandle
- uid: System.Windows.Automation.AutomationElement.FromLocalProvider*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FromLocalProvider
  nameWithType: AutomationElement.FromLocalProvider
- uid: System.Windows.Automation.AutomationElement.FromPoint*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FromPoint
  nameWithType: AutomationElement.FromPoint
- uid: System.Windows.Automation.AutomationElement.GetCachedPattern*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCachedPattern
  nameWithType: AutomationElement.GetCachedPattern
- uid: System.Windows.Automation.AutomationElement.GetCachedPropertyValue*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCachedPropertyValue
  nameWithType: AutomationElement.GetCachedPropertyValue
- uid: System.Windows.Automation.AutomationElement.GetClickablePoint*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetClickablePoint
  nameWithType: AutomationElement.GetClickablePoint
- uid: System.Windows.Automation.AutomationElement.GetCurrentPattern*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCurrentPattern
  nameWithType: AutomationElement.GetCurrentPattern
- uid: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCurrentPropertyValue
  nameWithType: AutomationElement.GetCurrentPropertyValue
- uid: System.Windows.Automation.AutomationElement.GetHashCode*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetHashCode
  nameWithType: AutomationElement.GetHashCode
- uid: System.Windows.Automation.AutomationElement.GetRuntimeId*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetRuntimeId
  nameWithType: AutomationElement.GetRuntimeId
- uid: System.Windows.Automation.AutomationElement.GetSupportedPatterns*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetSupportedPatterns
  nameWithType: AutomationElement.GetSupportedPatterns
- uid: System.Windows.Automation.AutomationElement.GetSupportedProperties*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetSupportedProperties
  nameWithType: AutomationElement.GetSupportedProperties
- uid: System.Windows.Automation.AutomationElement.GetUpdatedCache*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetUpdatedCache
  nameWithType: AutomationElement.GetUpdatedCache
- uid: System.Windows.Automation.AutomationElement.op_Equality*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: op_Equality
  nameWithType: AutomationElement.op_Equality
- uid: System.Windows.Automation.AutomationElement.op_Inequality*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: op_Inequality
  nameWithType: AutomationElement.op_Inequality
- uid: System.Windows.Automation.AutomationElement.RootElement*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: RootElement
  nameWithType: AutomationElement.RootElement
- uid: System.Windows.Automation.AutomationElement.SetFocus*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: SetFocus
  nameWithType: AutomationElement.SetFocus
- uid: System.Windows.Automation.AutomationElement.TryGetCachedPattern*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: TryGetCachedPattern
  nameWithType: AutomationElement.TryGetCachedPattern
- uid: System.Windows.Automation.AutomationElement.TryGetClickablePoint*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: TryGetClickablePoint
  nameWithType: AutomationElement.TryGetClickablePoint
- uid: System.Windows.Automation.AutomationElement.TryGetCurrentPattern*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: TryGetCurrentPattern
  nameWithType: AutomationElement.TryGetCurrentPattern
