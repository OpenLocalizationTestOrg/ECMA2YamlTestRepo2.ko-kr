### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.CommandEventArgs
  id: CommandEventArgs
  children:
  - System.Web.UI.WebControls.CommandEventArgs.#ctor(System.Web.UI.WebControls.CommandEventArgs)
  - System.Web.UI.WebControls.CommandEventArgs.#ctor(System.String,System.Object)
  - System.Web.UI.WebControls.CommandEventArgs.CommandArgument
  - System.Web.UI.WebControls.CommandEventArgs.CommandName
  langs:
  - csharp
  name: CommandEventArgs
  nameWithType: CommandEventArgs
  fullName: System.Web.UI.WebControls.CommandEventArgs
  type: Class
  summary: "에 대 한 데이터를 제공는 <xref uid=&quot;langword_csharp_Command&quot; name=&quot;Command&quot; href=&quot;&quot;> </xref> 이벤트입니다."
  remarks: "`Command` 이벤트가 발생할 때는 <xref:System.Web.UI.WebControls.Button>또는 <xref:System.Web.UI.WebControls.ImageButton>컨트롤을 클릭 합니다.</xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.WebControls.Button>       CommandEventArgs 개체에 대 한 데이터가 들어는 `Command` 수 있는 이벤트에 처리기 이벤트에 액세스 합니다. CommandEventArgs 클래스에서 사용할 수 있는 속성을 사용 하 여 같은 수행할 명령의 이름을 확인할 수 있습니다 `Sort`와 같은 명령을 보완 하는 선택적 인수 뿐 아니라 `Ascending`합니다.       목록이 CommandEventArgs의 인스턴스에 대 한 초기 속성 값에 대 한 참조는 <xref:System.Web.UI.WebControls.CommandEventArgs.%23ctor%2A>생성자.</xref:System.Web.UI.WebControls.CommandEventArgs.%23ctor%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to access the properties in CommandEventArgs to determine the command to perform. This example specifies the event handler declaratively, using the <xref:System.Web.UI.WebControls.Button.OnClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_199_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_199_1.aspx)]  \n  \n The following code example demonstrates how to specify the event handler and programmatically add it to the event in the `Page_Load` method.  \n  \n [!code-cs[ButtonCommand#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_199_2.aspx)]\n [!code-vb[ButtonCommand#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_199_2.aspx)]"
  syntax:
    content: 'public class CommandEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandEventArgs.#ctor(System.Web.UI.WebControls.CommandEventArgs)
  id: '#ctor(System.Web.UI.WebControls.CommandEventArgs)'
  parent: System.Web.UI.WebControls.CommandEventArgs
  langs:
  - csharp
  name: CommandEventArgs(CommandEventArgs)
  nameWithType: CommandEventArgs.CommandEventArgs(CommandEventArgs)
  fullName: System.Web.UI.WebControls.CommandEventArgs.CommandEventArgs(CommandEventArgs)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.CommandEventArgs&quot;> </xref> 다른 클래스 <xref href=&quot;System.Web.UI.WebControls.CommandEventArgs&quot;> </xref> 개체입니다."
  remarks: "이 생성자를 사용 하 여 만들고의 새 인스턴스를 초기화 하는 <xref:System.Web.UI.WebControls.CommandEventArgs>사용 하 여 지정 된 클래스 <xref:System.Web.UI.WebControls.CommandEventArgs>개체입니다.</xref:System.Web.UI.WebControls.CommandEventArgs> </xref:System.Web.UI.WebControls.CommandEventArgs>       인스턴스가 <xref:System.Web.UI.WebControls.CommandEventArgs>만들어집니다이 생성자를 호출한 다음 속성이 지정된 된 값으로 초기화 됩니다.</xref:System.Web.UI.WebControls.CommandEventArgs>      | 속성 | 초기 값 |   |--------------|-------------------|   | CommandName | `e.CommandName` 매개 변수입니다. |   | CommandArgument | `e.CommandArgument` 매개 변수입니다. |"
  example:
  - "The following example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.CommandEventArgs> class using the specified <xref:System.Web.UI.WebControls.CommandEventArgs> object.  \n  \n [!code-cs[Classic CommandEventArgs.CommandEventArgs Example#1](~/add/codesnippet/csharp/8cddd133-08a0-42ee-824a-_1.cs)]\n [!code-vb[Classic CommandEventArgs.CommandEventArgs Example#1](~/add/codesnippet/visualbasic/8cddd133-08a0-42ee-824a-_1.vb)]"
  syntax:
    content: public CommandEventArgs (System.Web.UI.WebControls.CommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.CommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.CommandEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.CommandEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandEventArgs.#ctor(System.String,System.Object)
  id: '#ctor(System.String,System.Object)'
  parent: System.Web.UI.WebControls.CommandEventArgs
  langs:
  - csharp
  name: CommandEventArgs(String,Object)
  nameWithType: CommandEventArgs.CommandEventArgs(String,Object)
  fullName: System.Web.UI.WebControls.CommandEventArgs.CommandEventArgs(String,Object)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.CommandEventArgs&quot;> </xref> 지정된 명령 이름 및 인수를 사용 하 여 클래스입니다."
  remarks: "이 생성자를 사용 하 여 만들고의 새 인스턴스를 초기화 하는 <xref:System.Web.UI.WebControls.CommandEventArgs>클래스 지정된 명령 이름 및 인수를 사용 합니다.</xref:System.Web.UI.WebControls.CommandEventArgs>       인스턴스가 <xref:System.Web.UI.WebControls.CommandEventArgs>만들어집니다이 생성자를 호출한 다음 속성이 지정된 된 값으로 초기화 됩니다.</xref:System.Web.UI.WebControls.CommandEventArgs>      | 속성 | 초기 값 |   |--------------|-------------------|   | CommandName | 값은 `commandName` 매개 변수입니다. |   | CommandArgument | 값은 `argument` 매개 변수입니다. |"
  example:
  - "The following example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.CommandEventArgs> class using the specified command name and argument.  \n  \n [!code-vb[Classic CommandEventArgs.CommandEventArgs1 Example#1](~/add/codesnippet/visualbasic/227f8d74-47ad-48c3-92e3-_1.vb)]\n [!code-cs[Classic CommandEventArgs.CommandEventArgs1 Example#1](~/add/codesnippet/csharp/227f8d74-47ad-48c3-92e3-_1.cs)]"
  syntax:
    content: public CommandEventArgs (string commandName, object argument);
    parameters:
    - id: commandName
      type: System.String
      description: "명령 이름입니다."
    - id: argument
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt; 명령에 대 한 인수를 포함 하 합니다."
  overload: System.Web.UI.WebControls.CommandEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandEventArgs.CommandArgument
  id: CommandArgument
  parent: System.Web.UI.WebControls.CommandEventArgs
  langs:
  - csharp
  name: CommandArgument
  nameWithType: CommandEventArgs.CommandArgument
  fullName: System.Web.UI.WebControls.CommandEventArgs.CommandArgument
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "명령에 대 한 인수를 가져옵니다."
  remarks: "CommandArgument 프로그래머는 설정한 문자열이 포함 될 수 있습니다. CommandArgument 속성 보완은 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>명령에 대 한 추가 정보를 제공 하는 속성.</xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> 예를 들어, 설정할 수는 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>속성을 `Sort` CommandArgument 속성을 설정 하 고 `Ascending` 오름차순으로 정렬 하려면 명령을 지정 하려면.</xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>"
  example:
  - "The following example demonstrates how to use the CommandArgument property to determine supplemental information for the command to perform.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1082_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1082_1.aspx)]"
  syntax:
    content: public object CommandArgument { get; }
    return:
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt; 명령에 대 한 인수를 포함 하 합니다."
  overload: System.Web.UI.WebControls.CommandEventArgs.CommandArgument*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandEventArgs.CommandName
  id: CommandName
  parent: System.Web.UI.WebControls.CommandEventArgs
  langs:
  - csharp
  name: CommandName
  nameWithType: CommandEventArgs.CommandName
  fullName: System.Web.UI.WebControls.CommandEventArgs.CommandName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "명령의 이름을 가져옵니다."
  remarks: "CommandName 속성을 사용 하 여 수행할 명령을 확인 하려면. CommandName 속성에서 프로그래머가 설정 된 모든 문자열을 포함할 수 있습니다. 다음 프로그래머는 코드에서 명령 이름을 식별 하 고 적절 한 작업을 수행할 수 있습니다."
  example:
  - "The following example demonstrates how to use the CommandName property to programmatically determine the command to perform.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_858_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_858_1.aspx)]"
  syntax:
    content: public string CommandName { get; }
    return:
      type: System.String
      description: "이름 수행 하기 위한 명령입니다."
  overload: System.Web.UI.WebControls.CommandEventArgs.CommandName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.CommandEventArgs.#ctor(System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.CommandEventArgs
  isExternal: false
  name: CommandEventArgs(CommandEventArgs)
  nameWithType: CommandEventArgs.CommandEventArgs(CommandEventArgs)
  fullName: System.Web.UI.WebControls.CommandEventArgs.CommandEventArgs(CommandEventArgs)
- uid: System.Web.UI.WebControls.CommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: CommandEventArgs
  nameWithType: CommandEventArgs
  fullName: System.Web.UI.WebControls.CommandEventArgs
- uid: System.Web.UI.WebControls.CommandEventArgs.#ctor(System.String,System.Object)
  parent: System.Web.UI.WebControls.CommandEventArgs
  isExternal: false
  name: CommandEventArgs(String,Object)
  nameWithType: CommandEventArgs.CommandEventArgs(String,Object)
  fullName: System.Web.UI.WebControls.CommandEventArgs.CommandEventArgs(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.CommandEventArgs.CommandArgument
  parent: System.Web.UI.WebControls.CommandEventArgs
  isExternal: false
  name: CommandArgument
  nameWithType: CommandEventArgs.CommandArgument
  fullName: System.Web.UI.WebControls.CommandEventArgs.CommandArgument
- uid: System.Web.UI.WebControls.CommandEventArgs.CommandName
  parent: System.Web.UI.WebControls.CommandEventArgs
  isExternal: false
  name: CommandName
  nameWithType: CommandEventArgs.CommandName
  fullName: System.Web.UI.WebControls.CommandEventArgs.CommandName
- uid: System.Web.UI.WebControls.CommandEventArgs.#ctor*
  parent: System.Web.UI.WebControls.CommandEventArgs
  isExternal: false
  name: CommandEventArgs
  nameWithType: CommandEventArgs.CommandEventArgs
- uid: System.Web.UI.WebControls.CommandEventArgs.CommandArgument*
  parent: System.Web.UI.WebControls.CommandEventArgs
  isExternal: false
  name: CommandArgument
  nameWithType: CommandEventArgs.CommandArgument
- uid: System.Web.UI.WebControls.CommandEventArgs.CommandName*
  parent: System.Web.UI.WebControls.CommandEventArgs
  isExternal: false
  name: CommandName
  nameWithType: CommandEventArgs.CommandName
