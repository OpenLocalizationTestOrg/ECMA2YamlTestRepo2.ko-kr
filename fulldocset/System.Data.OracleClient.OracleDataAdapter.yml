### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleDataAdapter
  id: OracleDataAdapter
  children:
  - System.Data.OracleClient.OracleDataAdapter.#ctor
  - System.Data.OracleClient.OracleDataAdapter.#ctor(System.Data.OracleClient.OracleCommand)
  - System.Data.OracleClient.OracleDataAdapter.#ctor(System.String,System.Data.OracleClient.OracleConnection)
  - System.Data.OracleClient.OracleDataAdapter.#ctor(System.String,System.String)
  - System.Data.OracleClient.OracleDataAdapter.AddToBatch(System.Data.IDbCommand)
  - System.Data.OracleClient.OracleDataAdapter.ClearBatch
  - System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.OracleClient.OracleDataAdapter.DeleteCommand
  - System.Data.OracleClient.OracleDataAdapter.ExecuteBatch
  - System.Data.OracleClient.OracleDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  - System.Data.OracleClient.OracleDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  - System.Data.OracleClient.OracleDataAdapter.InitializeBatching
  - System.Data.OracleClient.OracleDataAdapter.InsertCommand
  - System.Data.OracleClient.OracleDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  - System.Data.OracleClient.OracleDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.OracleClient.OracleDataAdapter.RowUpdated
  - System.Data.OracleClient.OracleDataAdapter.RowUpdating
  - System.Data.OracleClient.OracleDataAdapter.SelectCommand
  - System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  - System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  - System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  - System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  - System.Data.OracleClient.OracleDataAdapter.System#ICloneable#Clone
  - System.Data.OracleClient.OracleDataAdapter.TerminateBatching
  - System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize
  - System.Data.OracleClient.OracleDataAdapter.UpdateCommand
  langs:
  - csharp
  name: OracleDataAdapter
  nameWithType: OracleDataAdapter
  fullName: System.Data.OracleClient.OracleDataAdapter
  type: Class
  summary: "채우는 데 사용 되는 데이터베이스에 연결 및 데이터 명령 집합을 나타냅니다는 <xref href=&quot;System.Data.DataSet&quot;> </xref> 데이터베이스를 업데이트 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "이 형식은 사용 되지 않으며.NET Framework의 이후 버전에서 제거 됩니다. 자세한 내용은 참조 [Oracle 및 ADO.NET](~/add/includes/ajax-current-ext-md.md)합니다.       OracleDataAdapter 사이의 브리지 역할을 **데이터 집합** 및 데이터베이스를 검색 하 고 데이터를 저장 합니다. OracleDataAdapter이이 연결을 사용 하 여 제공 <xref:System.Data.Common.DbDataAdapter.Fill%2A>의 데이터베이스에서 데이터를 로드 하는 <xref:System.Data.DataSet>, 사용 하 고 <xref:System.Data.Common.DbDataAdapter.Update%2A>에서 변경 내용을 보낼는 <xref:System.Data.DataSet>데이터 소스에 다시.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Fill%2A>       OracleDataAdapter 채우는 경우는 <xref:System.Data.DataSet>, 존재 하지 않을 경우 필요한 테이블 및 반환된 된 데이터에 대 한 열을 만듭니다.</xref:System.Data.DataSet> 그러나 기본 키 정보에에서 없는 암시적으로 만든된 스키마 하지 않는 한 <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> <xref:System.Data.MissingSchemaAction>.</xref:System.Data.MissingSchemaAction> 속성</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> <xref:System.Data.DataSet>포함 하 여 기본 키 정보, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 를 사용 하 여 데이터를 채우기 전에</xref:System.Data.DataSet> 스키마를 만들 OracleDataAdapter 할 수도 있습니다. 자세한 내용은 참조 [기존 제약 조건 데이터 집합에 추가](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > 기본적으로 숫자 필드를 가져옵니다는 <xref:System.Data.DataTable>와 <xref:System.Data.Common.DbDataAdapter.Fill%2A>에 매핑된 <xref:System.Data.OracleClient.OracleNumber>개체.</xref:System.Data.OracleClient.OracleNumber> </xref:System.Data.Common.DbDataAdapter.Fill%2A> </xref:System.Data.DataTable> 오버플로 수는 <xref:System.Data.OracleClient.OracleNumber>, 정수가 아닌 숫자 값을 너무 크거나 너무 높은 정밀도를 가져와서 Oracle 예외를 throw 하 고는 <xref:System.Data.OracleClient.OracleNumber>의 정밀도 제한.</xref:System.Data.OracleClient.OracleNumber> </xref:System.Data.OracleClient.OracleNumber> 설명을 참조 <xref:System.Data.OracleClient.OracleNumber>자세한 내용은.</xref:System.Data.OracleClient.OracleNumber>       OracleDataAdapter도 포함 되어는 <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>, <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A>, <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A>, <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A>, 및 `TableMappings` 속성을 로드 하 고 데이터의 업데이트를 용이 하 게.</xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A> </xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A> </xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> </xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>       .NET Framework Data Provider for Oracle에는 일괄 처리 된 SQL 문을 지원 하지 않습니다. 그러나 것은 허용 여러 개 사용할 수 있습니다 `REF CURSOR` 출력 매개 변수를 채우는 한 **데이터 집합**, 각 해당 <xref:System.Data.DataTable>.</xref:System.Data.DataTable> 소유 매개 변수를 정의 출력 매개 변수로 표시 하며 된다는 `REF CURSOR` 데이터 형식입니다. 사용할 수 없는 참고는 <xref:System.Data.Common.DbDataAdapter.Update%2A>메서드를 사용 하 여 OracleDataAdapter 채워질 때 `REF CURSOR` Oracle에서 SQL 문이 실행 될 때 테이블 이름과 열 이름을 확인 하는 데 필요한 정보를 제공 하지 않으므로 저장된 프로시저에서 반환 된 매개 변수.</xref:System.Data.Common.DbDataAdapter.Update%2A> 다음 C# 예제에서는이 저장된 프로시저 만들었다고 가정 합니다.       Oracle 서버에 다음과 같은 Oracle 패키지를 만듭니다.      ```   CREATE OR REPLACE PACKAGE CURSPKG AS       TYPE T_CURSOR IS REF CURSOR;       PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,          IO_CURSOR OUT T_CURSOR);       PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,          DEPTCURSOR OUT T_CURSOR);   END CURSPKG;   /   ```Oracle 서버에 다음 Oracle 패키지 본문을 만듭니다.      ```   CREATE OR REPLACE PACKAGE BODY CURSPKG AS        PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,                                   IO_CURSOR OUT T_CURSOR)        IS            V_CURSOR T_CURSOR;        BEGIN            IF N_EMPNO <> 0 THEN                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO                            AND EMP.EMPNO = N_EMPNO;            ELSE                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO;            END IF;            IO_CURSOR := V_CURSOR;        END OPEN_ONE_CURSOR;        PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,                                    DEPTCURSOR OUT T_CURSOR)        IS            V_CURSOR1 T_CURSOR;            V_CURSOR2 T_CURSOR;        BEGIN            OPEN V_CURSOR1 FOR SELECT * FROM EMP;            OPEN V_CURSOR2 FOR SELECT * FROM DEPT;            EMPCURSOR  := V_CURSOR1;            DEPTCURSOR := V_CURSOR2;        END OPEN_TWO_CURSORS;    END CURSPKG;    /   ```다음 C# 예제에서는 저장된 프로시저를 사용 하 여 테이블 및 열 정보를 가져오는 방법을 보여 줍니다.      ```c#   // GetConnectionString() returns a connection string for   // the data source.      string connString = GetConnectionString();   DataSet ds = new DataSet();   OracleConnection conn = new OracleConnection(connString);   OracleCommand cmd = conn.CreateCommand();      cmd.CommandText = &quot;CURSPKG.OPEN_TWO_CURSORS&quot;;   cmd.CommandType = CommandType.StoredProcedure;   cmd.Parameters.Add(&quot;EMPCURSOR&quot;, OracleType.Cursor).Direction =           ParameterDirection.Output;   cmd.Parameters.Add(&quot;DEPTCURSOR&quot;, OracleType.Cursor).Direction =           ParameterDirection.Output;      OracleDataAdapter da = new OracleDataAdapter(cmd);   da.TableMappings.Add(&quot;Table&quot;, &quot;Emp&quot;);   da.TableMappings.Add(&quot;Table1&quot;, &quot;Dept&quot;);   da.Fill(ds);      ds.Relations.Add(&quot;EmpDept&quot;, ds.Tables[&quot;Dept&quot;].Columns[&quot;Deptno&quot;],          ds.Tables[&quot;Emp&quot;].Columns[&quot;Deptno&quot;], false);   ```다음 Visual Basic 예제에서는를 사용 하는 OracleDataAdapter 채우는 <xref:System.Data.DataSet>는 Oracle을 사용 하 여 `REF CURSOR`.</xref:System.Data.DataSet> 이 예에서는 Oracle Scott/Tiger 스키마에 정의 된 하 고 다음 PL/SQL 패키지 및 패키지 본문을 요구 하는 테이블을 사용 합니다. 예를 사용 하 여 서버에서 만들어야 합니다.       Oracle 서버에 다음과 같은 Oracle 패키지를 만듭니다.      ```   CREATE OR REPLACE PACKAGE CURSPKG AS       TYPE T_CURSOR IS REF CURSOR;       PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,          IO_CURSOR OUT T_CURSOR);       PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,          DEPTCURSOR OUT T_CURSOR);   END CURSPKG;   /   ```Oracle 서버에 다음 Oracle 패키지 본문을 만듭니다.      ```   CREATE OR REPLACE PACKAGE BODY CURSPKG AS        PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,                                   IO_CURSOR OUT T_CURSOR)        IS            V_CURSOR T_CURSOR;        BEGIN            IF N_EMPNO <> 0 THEN                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO                            AND EMP.EMPNO = N_EMPNO;            ELSE                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO;            END IF;            IO_CURSOR := V_CURSOR;        END OPEN_ONE_CURSOR;        PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,                                    DEPTCURSOR OUT T_CURSOR)        IS            V_CURSOR1 T_CURSOR;            V_CURSOR2 T_CURSOR;        BEGIN            OPEN V_CURSOR1 FOR SELECT * FROM EMP;            OPEN V_CURSOR2 FOR SELECT * FROM DEPT;            EMPCURSOR  := V_CURSOR1;            DEPTCURSOR := V_CURSOR2;        END OPEN_TWO_CURSORS;    END CURSPKG;    /   ```두 개를 반환 하는 PL/SQL 저장 프로시저를 실행 하는 Visual Basic 예제 `REF CURSOR` 매개 변수 및 채우기는 <xref:System.Data.DataSet>반환 되는 행이 있는.</xref:System.Data.DataSet>      ```vb#      &quot; GetConnectionString() returns a connection string for   &quot; the data source.          Dim connString As New String(GetConnectionString())       Dim ds As New DataSet()       Dim conn As New OracleConnection(connString)       Dim cmd As OracleCommand = conn.CreateCommand()          cmd.CommandText = &quot;CURSPKG.OPEN_TWO_CURSORS&quot;       cmd.CommandType = CommandType.StoredProcedure       cmd.Parameters.Add(&quot;EMPCURSOR&quot;, OracleType.Cursor).Direction = _          ParameterDirection.Output       cmd.Parameters.Add(&quot;DEPTCURSOR&quot;, OracleType.Cursor).Direction = _          ParameterDirection.Output          Dim da As New OracleDataAdapter(cmd)       da.TableMappings.Add(&quot;Table&quot;, &quot;Emp&quot;)       da.TableMappings.Add(&quot;Table1&quot;, &quot;Dept&quot;)       da.Fill(ds)          ds.Relations.Add(&quot;EmpDept&quot;, ds.Tables(&quot;Dept&quot;).Columns(&quot;Deptno&quot;), _         ds.Tables(&quot;Emp&quot;).Columns(&quot;Deptno&quot;), False)   ```OracleDataAdapter을 사용 하 여 수행 된 `Fill` 또는 `FillSchema` 작업을는 `DataColumn.ReadOnly` 속성은 항상 열 업데이트 가능 여부를 Oracle 서버는이 정보를 반환 하지 않으므로 관계 없이 false를 반환 합니다."
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RowUpdated")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleDataAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OracleDataAdapterToolboxItem, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Obsolete("OracleDataAdapter has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)]

      public sealed class OracleDataAdapter : System.Data.Common.DbDataAdapter, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DataAdapter
  - System.Data.Common.DbDataAdapter
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DataAdapter.AcceptChangesDuringFill
  - System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  - System.Data.Common.DataAdapter.CloneInternals
  - System.Data.Common.DataAdapter.ContinueUpdateOnError
  - System.Data.Common.DataAdapter.CreateTableMappings
  - System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.FillError
  - System.Data.Common.DataAdapter.FillLoadOption
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.HasTableMappings
  - System.Data.Common.DataAdapter.MissingMappingAction
  - System.Data.Common.DataAdapter.MissingSchemaAction
  - System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  - System.Data.Common.DataAdapter.ResetFillLoadOption
  - System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  - System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  - System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  - System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  - System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  - System.Data.Common.DataAdapter.TableMappings
  - System.Data.Common.DbDataAdapter.DefaultSourceTableName
  - System.Data.Common.DbDataAdapter.Dispose(System.Boolean)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])
  - System.Data.Common.DbDataAdapter.FillCommandBehavior
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.GetFillParameters
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.#ctor
  id: '#ctor'
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: OracleDataAdapter()
  nameWithType: OracleDataAdapter.OracleDataAdapter()
  fullName: System.Data.OracleClient.OracleDataAdapter.OracleDataAdapter()
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.OracleClient.OracleDataAdapter&quot;> </xref> 클래스입니다."
  remarks: "인스턴스를 만들 때 <xref:System.Data.OracleClient.OracleDataAdapter>, 테이블에 표시 된 대로 다음 읽기/쓰기 속성이 해당 기본값으로 설정 됩니다.</xref:System.Data.OracleClient.OracleDataAdapter>      | 속성 | 기본 값 |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       속성에 대 한 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets some of its properties.  \n  \n [Visual Basic]  \n  \n```  \nPublic Sub CreateOracleDataAdapter()  \n    Dim myOracleConnection As OracleConnection = New OracleConnection(\"Data Source=Oracle8i;Integrated Security=yes\")  \n    Dim custDA As OracleDataAdapter = New OracleDataAdapter  \n    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey  \n  \n    custDA.SelectCommand = New OracleCommand(\"SELECT DeptNo, DName FROM Dept\", myOracleConnection)  \n    custDA.InsertCommand = New OracleCommand(\"INSERT INTO Dept (DeptNo, DName) \" & _  \n                                            \"VALUES (:pDeptNo, :pDName)\", myOracleConnection)  \n    custDA.UpdateCommand = New OracleCommand(\"UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName \" & _  \n                                            \"WHERE DeptNo = :pDeptNo\", myOracleConnection)  \n    custDA.DeleteCommand = New OracleCommand(\"DELETE FROM Dept WHERE DeptNo = :pDeptNo\", myOracleConnection)  \n  \n    custDA.InsertCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\")  \n    custDA.InsertCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\")  \n  \n    custDA.UpdateCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\")  \n    custDA.UpdateCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\")  \n    custDA.UpdateCommand.Parameters.Add(\"poldDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original  \n  \n    custDA.DeleteCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \npublic static void CreateOracleDataAdapter()   \n{  \n    OracleConnection myOracleConnection = new OracleConnection(\"Data Source=Oracle8i;Integrated Security=yes\");  \n    OracleDataAdapter custDA = new OracleDataAdapter();  \n    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey;  \n  \n    custDA.SelectCommand = new OracleCommand(\"SELECT DeptNo, CompanyName FROM Dept\", myOracleConnection);  \n    custDA.InsertCommand = new OracleCommand(\"INSERT INTO Dept (DeptNo, CompanyName) \" +  \n                                            \"VALUES (:pDeptNo, :pCompanyName)\", myOracleConnection);  \n    custDA.UpdateCommand = new OracleCommand(\"UPDATE Dept SET DeptNo = :pDeptNo, CompanyName = :pCompanyName \" +  \n                                            \"WHERE DeptNo = :pDeptNo\", myOracleConnection);  \n    custDA.DeleteCommand = new OracleCommand(\"DELETE FROM Dept WHERE DeptNo = :pDeptNo\", myOracleConnection);  \n  \n    custDA.InsertCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\");  \n    custDA.InsertCommand.Parameters.Add(\"pCompanyName\", OracleType.VarChar, 14, \"CompanyName\");  \n  \n    custDA.UpdateCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\");  \n    custDA.UpdateCommand.Parameters.Add(\"pCompanyName\", OracleType.VarChar, 14, \"CompanyName\");  \n    custDA.UpdateCommand.Parameters.Add(\"poldDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original;  \n  \n    custDA.DeleteCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original;  \n}  \n```"
  syntax:
    content: public OracleDataAdapter ();
    parameters: []
  overload: System.Data.OracleClient.OracleDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.#ctor(System.Data.OracleClient.OracleCommand)
  id: '#ctor(System.Data.OracleClient.OracleCommand)'
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: OracleDataAdapter(OracleCommand)
  nameWithType: OracleDataAdapter.OracleDataAdapter(OracleCommand)
  fullName: System.Data.OracleClient.OracleDataAdapter.OracleDataAdapter(OracleCommand)
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.OracleClient.OracleDataAdapter&quot;> </xref> 지정 된 SQL SELECT 문 사용 하 여 클래스입니다."
  remarks: "이 구현에서 <xref:System.Data.OracleClient.OracleDataAdapter>생성자는 <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>속성에 지정 된 값을는 `selectCommand` 매개 변수.</xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> </xref:System.Data.OracleClient.OracleDataAdapter>       인스턴스를 만들 때 <xref:System.Data.OracleClient.OracleDataAdapter>, 테이블에 표시 된 대로 다음 읽기/쓰기 속성이 해당 기본값으로 설정 됩니다.</xref:System.Data.OracleClient.OracleDataAdapter>      | 속성 | 초기 값 |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       속성에 대 한 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets some of its properties.  \n  \n [Visual Basic]  \n  \n```  \nPublic Sub CreateOracleDataAdapter()  \n    Dim myOracleConnection As OracleConnection = New OracleConnection(\"Data Source=Oracle8i;Integrated Security=yes\")  \n    Dim myOracleCommand As OracleCommand = New OracleCommand(\"SELECT DeptNo, DName FROM Dept\", myOracleConnection)  \n    Dim custDA As OracleDataAdapter = New OracleDataAdapter(myOracleCommand)  \n    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey  \n  \n    custDA.InsertCommand = New OracleCommand(\"INSERT INTO Dept (DeptNo, DName) \" & _  \n                                            \"VALUES (:pDeptNo, :pDName)\", myOracleConnection)  \n    custDA.UpdateCommand = New OracleCommand(\"UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName \" & _  \n                                            \"WHERE DeptNo = :pDeptNo\", myOracleConnection)  \n    custDA.DeleteCommand = New OracleCommand(\"DELETE FROM Dept WHERE DeptNo = :pDeptNo\", myOracleConnection)  \n  \n    custDA.InsertCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\")  \n    custDA.InsertCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\")  \n  \n    custDA.UpdateCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\")  \n    custDA.UpdateCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\")  \n    custDA.UpdateCommand.Parameters.Add(\"poldDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original  \n  \n    custDA.DeleteCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \npublic static void CreateOracleDataAdapter()   \n{  \n    OracleConnection myOracleConnection = new OracleConnection(\"Data Source=Oracle8i;Integrated Security=yes\");  \n    OracleCommand myOracleCommand = new OracleCommand(\"SELECT DeptNo, DName FROM Dept\", myOracleConnection);  \n    OracleDataAdapter custDA = new OracleDataAdapter(myOracleCommand);  \n    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey;  \n  \n    custDA.InsertCommand = new OracleCommand(\"INSERT INTO Dept (DeptNo, DName) \" +  \n                                            \"VALUES (:pDeptNo, :pDName)\", myOracleConnection);  \n    custDA.UpdateCommand = new OracleCommand(\"UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName \" +  \n                                            \"WHERE DeptNo = :pDeptNo\", myOracleConnection);  \n    custDA.DeleteCommand = new OracleCommand(\"DELETE FROM Dept WHERE DeptNo = :pDeptNo\", myOracleConnection);  \n  \n    custDA.InsertCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\");  \n    custDA.InsertCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\");  \n  \n    custDA.UpdateCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\");  \n    custDA.UpdateCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\");  \n    custDA.UpdateCommand.Parameters.Add(\"poldDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original;  \n  \n    custDA.DeleteCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original;  \n}  \n```"
  syntax:
    content: public OracleDataAdapter (System.Data.OracleClient.OracleCommand selectCommand);
    parameters:
    - id: selectCommand
      type: System.Data.OracleClient.OracleCommand
      description: "<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> 는 SQL SELECT 문 또는 저장된 프로시저를이 고로 설정 하는 <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*>의 속성은 <xref href=&quot;System.Data.OracleClient.OracleDataAdapter&quot;> </xref>.</xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*>"
  overload: System.Data.OracleClient.OracleDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.#ctor(System.String,System.Data.OracleClient.OracleConnection)
  id: '#ctor(System.String,System.Data.OracleClient.OracleConnection)'
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: OracleDataAdapter(String,OracleConnection)
  nameWithType: OracleDataAdapter.OracleDataAdapter(String,OracleConnection)
  fullName: System.Data.OracleClient.OracleDataAdapter.OracleDataAdapter(String,OracleConnection)
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.OracleClient.OracleDataAdapter&quot;> </xref> SQL SELECT 문 사용 하 여 클래스 및 <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref>합니다."
  remarks: "이 구현에서 <xref:System.Data.OracleClient.OracleDataAdapter>호출 해야 하는 응용 프로그램에 유용할 수는 `Fill` 둘 이상에 대 한 메서드 <xref:System.Data.OracleClient.OracleDataAdapter>개체.</xref:System.Data.OracleClient.OracleDataAdapter> </xref:System.Data.OracleClient.OracleDataAdapter>"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets some of its properties.  \n  \n [Visual Basic]  \n  \n```  \nPublic Sub CreateOracleDataAdapter()  \n    Dim myOracleConnection As OracleConnection = New OracleConnection(\"Data Source=Oracle8i;Integrated Security=yes\")  \n    Dim mySelectText As String = \"SELECT DeptNo, DName FROM Dept\"  \n    Dim custDA As OracleDataAdapter = New OracleDataAdapter(mySelectText, myOracleConnection)   \n    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey  \n  \n    custDA.InsertCommand = New OracleCommand(\"INSERT INTO Dept (DeptNo, DName) \" & _  \n                                            \"VALUES (:pDeptNo, :pDName)\", myOracleConnection)  \n    custDA.UpdateCommand = New OracleCommand(\"UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName \" & _  \n                                            \"WHERE DeptNo = :pDeptNo\", myOracleConnection)  \n    custDA.DeleteCommand = New OracleCommand(\"DELETE FROM Dept WHERE DeptNo = :pDeptNo\", myOracleConnection)  \n  \n    custDA.InsertCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\")  \n    custDA.InsertCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\")  \n  \n    custDA.UpdateCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\")  \n    custDA.UpdateCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\")  \n    custDA.UpdateCommand.Parameters.Add(\"poldDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original  \n  \n    custDA.DeleteCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \npublic static void CreateOracleDataAdapter()   \n{  \n    OracleConnection myOracleConnection = new OracleConnection(\"Data Source=Oracle8i;Integrated Security=yes\");  \n  \n    string mySelectText = \"SELECT DeptNo, DName FROM Dept\";  \n  \n    OracleDataAdapter custDA = new OracleDataAdapter(mySelectText, myOracleConnection );  \n    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey;  \n  \n    custDA.InsertCommand = new OracleCommand(\"INSERT INTO Dept (DeptNo, DName) \" +  \n                                            \"VALUES (:pDeptNo, :pDName)\", myOracleConnection);  \n    custDA.UpdateCommand = new OracleCommand(\"UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName \" +  \n                                            \"WHERE DeptNo = :pDeptNo\", myOracleConnection);  \n    custDA.DeleteCommand = new OracleCommand(\"DELETE FROM Dept WHERE DeptNo = :pDeptNo\", myOracleConnection);  \n  \n    custDA.InsertCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\");  \n    custDA.InsertCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\");  \n  \n    custDA.UpdateCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\");  \n    custDA.UpdateCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\");  \n    custDA.UpdateCommand.Parameters.Add(\"poldDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original;  \n  \n    custDA.DeleteCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original;  \n}  \n```"
  syntax:
    content: public OracleDataAdapter (string selectCommandText, System.Data.OracleClient.OracleConnection selectConnection);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "SQL SELECT 문 또는 저장된 프로시저에서 사용 되는 문자열은 <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*>의 속성은 <xref href=&quot;System.Data.OracleClient.OracleDataAdapter&quot;> </xref>.</xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*>"
    - id: selectConnection
      type: System.Data.OracleClient.OracleConnection
      description: "<xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> 연결을 나타내는입니다."
  overload: System.Data.OracleClient.OracleDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: OracleDataAdapter(String,String)
  nameWithType: OracleDataAdapter.OracleDataAdapter(String,String)
  fullName: System.Data.OracleClient.OracleDataAdapter.OracleDataAdapter(String,String)
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.OracleClient.OracleDataAdapter&quot;> </xref> SQL SELECT 문 및 연결 문자열을 사용 하 여 클래스입니다."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets some of its properties.  \n  \n [Visual Basic]  \n  \n```  \nPublic Sub CreateOracleDataAdapter()  \n    Dim myConnectionText As String = \"Data Source=Oracle8i;Integrated Security=yes\"  \n    Dim mySelectText As String = \"SELECT DeptNo, DName FROM Dept\"  \n    Dim custDA As OracleDataAdapter = New OracleDataAdapter(mySelectText, myConnectionText )   \n    Dim myOracleConnection As OracleConnection = custDA.SelectCommand.Connection  \n  \n    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey     \n  \n    custDA.InsertCommand = New OracleCommand(\"INSERT INTO Dept (DeptNo, DName) \" & _  \n                                            \"VALUES (:pDeptNo, :pDName)\", myOracleConnection)  \n    custDA.UpdateCommand = New OracleCommand(\"UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName \" & _  \n                                            \"WHERE DeptNo = :pDeptNo\", myOracleConnection)  \n    custDA.DeleteCommand = New OracleCommand(\"DELETE FROM Dept WHERE DeptNo = :pDeptNo\", myOracleConnection)  \n  \n    custDA.InsertCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\")  \n    custDA.InsertCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\")  \n  \n    custDA.UpdateCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\")  \n    custDA.UpdateCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\")  \n    custDA.UpdateCommand.Parameters.Add(\"poldDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original  \n  \n    custDA.DeleteCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \npublic static void CreateOracleDataAdapter()   \n{  \n    string myConnectionText = \"Data Source=Oracle8i;Integrated Security=yes\";  \n  \n    string mySelectText = \"SELECT DeptNo, DName FROM Dept\";  \n  \n    OracleDataAdapter custDA = new OracleDataAdapter(mySelectText, myConnectionText );  \n   OracleConnection myOracleConnection = custDA.SelectCommand.Connection;  \n  \n    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey;  \n  \n    custDA.InsertCommand = new OracleCommand(\"INSERT INTO Dept (DeptNo, DName) \" +  \n                                            \"VALUES (:pDeptNo, :pDName)\", myOracleConnection);  \n    custDA.UpdateCommand = new OracleCommand(\"UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName \" +  \n                                            \"WHERE DeptNo = :pDeptNo\", myOracleConnection);  \n    custDA.DeleteCommand = new OracleCommand(\"DELETE FROM Dept WHERE DeptNo = :pDeptNo\", myOracleConnection);  \n  \n    custDA.InsertCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\");  \n    custDA.InsertCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\");  \n  \n    custDA.UpdateCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\");  \n    custDA.UpdateCommand.Parameters.Add(\"pDName\", OracleType.VarChar, 14, \"DName\");  \n    custDA.UpdateCommand.Parameters.Add(\"poldDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original;  \n  \n    custDA.DeleteCommand.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\").SourceVersion = DataRowVersion.Original;  \n}  \n```"
  syntax:
    content: public OracleDataAdapter (string selectCommandText, string selectConnectionString);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "SQL SELECT 문 또는 저장된 프로시저에서 사용 되는 문자열은 <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*>의 속성은 <xref href=&quot;System.Data.OracleClient.OracleDataAdapter&quot;> </xref>.</xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand*>"
    - id: selectConnectionString
      type: System.String
      description: "연결 문자열입니다."
  overload: System.Data.OracleClient.OracleDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.AddToBatch(System.Data.IDbCommand)
  id: AddToBatch(System.Data.IDbCommand)
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: AddToBatch(IDbCommand)
  nameWithType: OracleDataAdapter.AddToBatch(IDbCommand)
  fullName: System.Data.OracleClient.OracleDataAdapter.AddToBatch(IDbCommand)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override int AddToBatch (System.Data.IDbCommand command);
    parameters:
    - id: command
      type: System.Data.IDbCommand
      description: "추가할 수 있습니다."
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  overload: System.Data.OracleClient.OracleDataAdapter.AddToBatch*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.ClearBatch
  id: ClearBatch
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: ClearBatch()
  nameWithType: OracleDataAdapter.ClearBatch()
  fullName: System.Data.OracleClient.OracleDataAdapter.ClearBatch()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void ClearBatch ();
    parameters: []
  overload: System.Data.OracleClient.OracleDataAdapter.ClearBatch*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OracleDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "추가할 수 있습니다."
    - id: command
      type: System.Data.IDbCommand
      description: "추가할 수 있습니다."
    - id: statementType
      type: System.Data.StatementType
      description: "추가할 수 있습니다."
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "추가할 수 있습니다."
    return:
      type: System.Data.Common.RowUpdatedEventArgs
      description: "추가할 수 있습니다."
  overload: System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OracleDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "추가할 수 있습니다."
    - id: command
      type: System.Data.IDbCommand
      description: "추가할 수 있습니다."
    - id: statementType
      type: System.Data.StatementType
      description: "추가할 수 있습니다."
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "추가할 수 있습니다."
    return:
      type: System.Data.Common.RowUpdatingEventArgs
      description: "추가할 수 있습니다."
  overload: System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatingEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.DeleteCommand
  id: DeleteCommand
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: OracleDataAdapter.DeleteCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "SQL 문이나 저장된 프로시저는 데이터베이스의 레코드를 삭제 하는 데 사용 된 값을 가져오거나 설정 합니다."
  remarks: "DeleteCommand 속성 할당 된 경우에 이전에 만든 <xref:System.Data.OracleClient.OracleCommand>, <xref:System.Data.OracleClient.OracleCommand>가 복제 되지 않습니다.</xref:System.Data.OracleClient.OracleCommand> </xref:System.Data.OracleClient.OracleCommand> DeleteCommand에 이전에 만든된 <xref:System.Data.OracleClient.OracleCommand>.</xref:System.Data.OracleClient.OracleCommand> 에 대 한 참조를 유지 하는 대신,       DeleteCommand를 설정 하지 않으면, 기본 키 정보에 존재 하는 경우에 업데이트 작업 중의 <xref:System.Data.DataSet>를 사용할 수 있습니다는 <xref:System.Data.OracleClient.OracleCommandBuilder>클래스는 DeleteCommand를 자동으로 생성 하 고 조정 하는 데 필요한 추가 명령을 <xref:System.Data.DataSet>데이터베이스에.</xref:System.Data.DataSet> </xref:System.Data.OracleClient.OracleCommandBuilder> </xref:System.Data.DataSet> 이 작업을 수행 하려면 <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> <xref:System.Data.OracleClient.OracleDataAdapter>.</xref:System.Data.OracleClient.OracleDataAdapter> 속성</xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> 설정 생성 논리는 또한 <xref:System.Data.DataSet>.</xref:System.Data.DataSet> 에 키 열 정보 필요 자세한 내용은 참조 [commandbuilder 생성 명령을](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> and DeleteCommand properties. It assumes you have already created an <xref:System.Data.OracleClient.OracleConnection> object.  \n  \n [Visual Basic]  \n  \n```  \nPublic Shared Function CreateCustomerAdapter(conn As OracleConnection) As OracleDataAdapter   \n  \n  Dim da As OracleDataAdapter = New OracleDataAdapter()  \n  Dim cmd As OracleCommand  \n  Dim parm As OracleParameter  \n  \n  ' Create the SelectCommand.  \n  \n  cmd = New OracleCommand(\"SELECT * FROM Dept \" & _  \n                       \"WHERE DName = :pDName AND Loc = :pLoc\", conn)  \n  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14)  \n  cmd.Parameters.Add(\"pLoc\", OracleType.NVarChar, 13)  \n  \n  da.SelectCommand = cmd  \n  \n  ' Create the DeleteCommand.  \n  \n  cmd = New OracleCommand(\"DELETE FROM Dept WHERE DeptNo = :pDeptNo\", conn)  \n  \n  parm = cmd.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\")  \n  parm.SourceVersion = DataRowVersion.Original  \n  \n  da.DeleteCommand = cmd  \n  \n  Return da  \nEnd Function  \n```  \n  \n [C#]  \n  \n```  \npublic static OracleDataAdapter CreateCustomerAdapter(OracleConnection conn)  \n{  \n  OracleDataAdapter da = new OracleDataAdapter();  \n  OracleCommand cmd;  \n  OracleParameter parm;  \n  \n  // Create the SelectCommand.  \n  \n  cmd = new OracleCommand(\"SELECT * FROM Dept \" +  \n                       \"WHERE DName = :pDName AND Loc = :pLoc\", conn);  \n  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14);  \n  cmd.Parameters.Add(\"pLoc\", OracleType.NVarChar, 13);  \n  \n  da.SelectCommand = cmd;  \n  \n  // Create the DeleteCommand.  \n  \n  cmd = new OracleCommand(\"DELETE FROM Dept WHERE DeptNo = :pDeptNo\", conn);  \n  \n  parm = cmd.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\");  \n  parm.SourceVersion = DataRowVersion.Original;  \n  \n  da.DeleteCommand = cmd;  \n  \n  return da;  \n}  \n```"
  syntax:
    content: public System.Data.OracleClient.OracleCommand DeleteCommand { get; set; }
    return:
      type: System.Data.OracleClient.OracleCommand
      description: "<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> 의 삭제 된 행에 해당 하는 데이터베이스의 레코드를 삭제 하는 업데이트 작업 중에 사용 된 <xref uid=&quot;langword_csharp_DataSet&quot; name=&quot;DataSet&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.OracleClient.OracleDataAdapter.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.ExecuteBatch
  id: ExecuteBatch
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: ExecuteBatch()
  nameWithType: OracleDataAdapter.ExecuteBatch()
  fullName: System.Data.OracleClient.OracleDataAdapter.ExecuteBatch()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override int ExecuteBatch ();
    parameters: []
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  overload: System.Data.OracleClient.OracleDataAdapter.ExecuteBatch*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  id: GetBatchedParameter(System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: GetBatchedParameter(Int32,Int32)
  nameWithType: OracleDataAdapter.GetBatchedParameter(Int32,Int32)
  fullName: System.Data.OracleClient.OracleDataAdapter.GetBatchedParameter(Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);
    parameters:
    - id: commandIdentifier
      type: System.Int32
      description: "추가할 수 있습니다."
    - id: parameterIndex
      type: System.Int32
      description: "추가할 수 있습니다."
    return:
      type: System.Data.IDataParameter
      description: "추가할 수 있습니다."
  overload: System.Data.OracleClient.OracleDataAdapter.GetBatchedParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  id: GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: GetBatchedRecordsAffected(Int32,Int32,Exception)
  nameWithType: OracleDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
  fullName: System.Data.OracleClient.OracleDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);
    parameters:
    - id: commandIdentifier
      type: System.Int32
      description: "추가할 수 있습니다."
    - id: recordsAffected
      type: System.Int32
      description: "추가할 수 있습니다."
    - id: error
      type: System.Exception
      description: "추가할 수 있습니다."
    return:
      type: System.Boolean
      description: "추가할 수 있습니다."
  overload: System.Data.OracleClient.OracleDataAdapter.GetBatchedRecordsAffected*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.InitializeBatching
  id: InitializeBatching
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: InitializeBatching()
  nameWithType: OracleDataAdapter.InitializeBatching()
  fullName: System.Data.OracleClient.OracleDataAdapter.InitializeBatching()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void InitializeBatching ();
    parameters: []
  overload: System.Data.OracleClient.OracleDataAdapter.InitializeBatching*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.InsertCommand
  id: InsertCommand
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: InsertCommand
  nameWithType: OracleDataAdapter.InsertCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "SQL 문이나 저장된 프로시저는 데이터베이스에 새 레코드를 삽입 하는 데 사용 된 값을 가져오거나 설정 합니다."
  remarks: "InsertCommand 속성 할당 된 경우에 이전에 만든 <xref:System.Data.OracleClient.OracleCommand>개체는 <xref:System.Data.OracleClient.OracleCommand>가 복제 되지 않습니다.</xref:System.Data.OracleClient.OracleCommand> </xref:System.Data.OracleClient.OracleCommand> InsertCommand에 이전에 만든된 <xref:System.Data.OracleClient.OracleCommand>.</xref:System.Data.OracleClient.OracleCommand> 에 대 한 참조를 유지 하는 대신,       InsertCommand 설정 하지 않으면, 기본 키 정보에 존재 하는 경우에 업데이트 작업 중의 <xref:System.Data.DataSet>를 사용할 수 있습니다는 <xref:System.Data.OracleClient.OracleCommandBuilder>InsertCommand를 자동으로 생성 하는 클래스 및 조정 하는 데 필요한 추가 명령을 <xref:System.Data.DataSet>데이터베이스에.</xref:System.Data.DataSet> </xref:System.Data.OracleClient.OracleCommandBuilder> </xref:System.Data.DataSet> 이 작업을 수행 하려면 <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> <xref:System.Data.OracleClient.OracleDataAdapter>.</xref:System.Data.OracleClient.OracleDataAdapter> 속성</xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> 설정 생성 논리는 또한 <xref:System.Data.DataSet>.</xref:System.Data.DataSet> 에 키 열 정보 필요 자세한 내용은 참조 [commandbuilder 생성 명령을](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > 행을 반환 하는이 명령 실행 하는 경우 이러한 행에 추가할 수 있습니다는 <xref:System.Data.DataSet>설정 하는 방법에 따라는 <xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A>의 속성은 <xref:System.Data.OracleClient.OracleCommand>개체입니다.</xref:System.Data.OracleClient.OracleCommand> </xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A> </xref:System.Data.DataSet>       지정 된 열을 업데이트 하는 경우는 `LONG RAW` 데이터 형식 값을 입력 하면 예외가 throw 됩니다 `NULL` 열에 있습니다. Oracle `LONG RAW` 데이터 형식은 Oracle 버전 8.0의에서 사용 되지 않는 형식입니다. 이 오류를 방지 하려면 사용 된 `BLOB` 데이터 형식 대신 `LONG RAW`합니다."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> and InsertCommand properties. It assumes you have already created an <xref:System.Data.OracleClient.OracleConnection> object.  \n  \n [Visual Basic]  \n  \n```  \nPublic Shared Function CreateCustomerAdapter(conn As OracleConnection) As OracleDataAdapter   \n  \n  Dim da As OracleDataAdapter = New OracleDataAdapter()  \n  Dim cmd As OracleCommand  \n  \n  ' Create the SelectCommand.  \n  \n  cmd = New OracleCommand(\"SELECT * FROM Dept \" & _  \n                       \"WHERE DName = :pDName AND Loc = :pLoc\", conn)  \n  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14)  \n  cmd.Parameters.Add(\"pLoc\", OracleType.NVarChar, 13)  \n  \n  da.SelectCommand = cmd  \n  \n  ' Create the InsertCommand.  \n  \n  cmd = New OracleCommand(\"INSERT INTO Dept (DeptNo, DName) \" & _  \n                       \"VALUES (:pDeptNo, :pDName)\", conn)  \n  \n  cmd.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\")  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14, \"DName\")  \n  \n  da.InsertCommand = cmd  \n  \n  Return da  \nEnd Function  \n```  \n  \n [C#]  \n  \n```  \npublic static OracleDataAdapter CreateCustomerAdapter(OracleConnection conn)  \n{  \n  OracleDataAdapter da = new OracleDataAdapter();  \n  OracleCommand cmd;  \n  \n  // Create the SelectCommand.  \n  \n  cmd = new OracleCommand(\"SELECT * FROM Dept \" +  \n                       \"WHERE DName = :pDName AND Loc = :pLoc\", conn);  \n  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14);  \n  cmd.Parameters.Add(\"pLoc\", OracleType.NVarChar, 13);  \n  \n  da.SelectCommand = cmd;  \n  \n  // Create the InsertCommand.  \n  \n  cmd = new OracleCommand(\"INSERT INTO Dept (DeptNo, DName) \" +  \n                       \"VALUES (:pDeptNo, :pDName)\", conn);  \n  \n  cmd.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\");  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14, \"DName\");  \n  \n  da.InsertCommand = cmd;  \n  \n  return da;  \n}  \n```"
  syntax:
    content: public System.Data.OracleClient.OracleCommand InsertCommand { get; set; }
    return:
      type: System.Data.OracleClient.OracleCommand
      description: "<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> 레코드를 삽입 하는 새 행에 해당 하는 데이터베이스에서 업데이트 작업 중에 사용 된 <xref href=&quot;System.Data.DataSet&quot;> </xref>합니다."
  overload: System.Data.OracleClient.OracleDataAdapter.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  id: OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: OracleDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.OracleClient.OracleDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatedEventArgs
      description: "추가할 수 있습니다."
  overload: System.Data.OracleClient.OracleDataAdapter.OnRowUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  id: OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: OracleDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.OracleClient.OracleDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatingEventArgs
      description: "추가할 수 있습니다."
  overload: System.Data.OracleClient.OracleDataAdapter.OnRowUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.RowUpdated
  id: RowUpdated
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: RowUpdated
  nameWithType: OracleDataAdapter.RowUpdated
  fullName: System.Data.OracleClient.OracleDataAdapter.RowUpdated
  type: Event
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "데이터베이스에 대해 명령이 실행 된 후 업데이트 작업 중 발생 합니다."
  remarks: "사용 하는 경우는 `Update` 메서드를 업데이트 하는 데이터 행 단위로 발생 하는 두 가지 이벤트가 있습니다. 실행 순서는 다음과 같습니다: 1.  값은 <xref:System.Data.DataRow>매개 변수 값으로 이동 됩니다.</xref:System.Data.DataRow>      2.  `OnRowUpdating` 이벤트가 발생 합니다.      3.  명령을 실행합니다.      4.  경우는 `UpdateRowSource` 열거형으로 설정 되어 `FirstReturnedRecord`, 첫 번째 반환 결과에 배치 되는 **DataRow**합니다.      5.  에 지정 되므로 출력 매개 변수가 있는 경우는 **DataRow**합니다.      6.  `OnRowUpdated` 이벤트가 발생 합니다.      7.  `AcceptChanges`가 호출 됩니다."
  syntax:
    content: public event System.Data.OracleClient.OracleRowUpdatedEventHandler RowUpdated;
    return:
      type: System.Data.OracleClient.OracleRowUpdatedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.RowUpdating
  id: RowUpdating
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: RowUpdating
  nameWithType: OracleDataAdapter.RowUpdating
  fullName: System.Data.OracleClient.OracleDataAdapter.RowUpdating
  type: Event
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "중에 발생 <xref:System.Data.Common.DbDataAdapter.Update*>데이터 원본에 대해 명령을 실행 하기 전에.</xref:System.Data.Common.DbDataAdapter.Update*>"
  remarks: "사용 하는 경우는 `Update` 메서드를 업데이트 하는 데이터 행 단위로 발생 하는 두 가지 이벤트가 있습니다. 실행 순서는 다음과 같습니다: 1.  값은 <xref:System.Data.DataRow>매개 변수 값으로 이동 됩니다.</xref:System.Data.DataRow>      2.  `OnRowUpdating` 이벤트가 발생 합니다.      3.  명령을 실행합니다.      4.  경우는 `UpdateRowSource` 열거형으로 설정 되어 `FirstReturnedRecord`, 첫 번째 반환 결과에 배치 되는 **DataRow**합니다.      5.  에 지정 되므로 출력 매개 변수가 있는 경우는 **DataRow**합니다.      6.  `OnRowUpdated` 이벤트가 발생 합니다.      7.  `AcceptChanges`가 호출 됩니다."
  syntax:
    content: public event System.Data.OracleClient.OracleRowUpdatingEventHandler RowUpdating;
    return:
      type: System.Data.OracleClient.OracleRowUpdatingEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.SelectCommand
  id: SelectCommand
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: SelectCommand
  nameWithType: OracleDataAdapter.SelectCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "SQL 문이나 저장된 프로시저는 데이터베이스에서 레코드를 선택 하는 데 사용 된 값을 가져오거나 설정 합니다."
  remarks: "SelectCommand 할당 된 경우에 이전에 만든 <xref:System.Data.OracleClient.OracleCommand>, <xref:System.Data.OracleClient.OracleCommand>가 복제 되지 않습니다.</xref:System.Data.OracleClient.OracleCommand> </xref:System.Data.OracleClient.OracleCommand> SelectCommand 이전에 만든에 대 한 참조를 유지 하는 대신, <xref:System.Data.OracleClient.OracleCommand>개체입니다.</xref:System.Data.OracleClient.OracleCommand>       에 테이블이 추가 된 SelectCommand 모든 행을 반환 하지 않는 경우는 **DataSet**, 예외가 발생 하지 않습니다."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets the SelectCommand and <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> properties. It assumes you have already created an <xref:System.Data.OracleClient.OracleConnection> object.  \n  \n [Visual Basic]  \n  \n```  \nPublic Shared Function CreateCustomerAdapter(conn As OracleConnection) As OracleDataAdapter   \n  \n  Dim da As OracleDataAdapter = New OracleDataAdapter()  \n  Dim cmd As OracleCommand  \n  \n  ' Create the SelectCommand.  \n  \n  cmd = New OracleCommand(\"SELECT * FROM Dept \" & _  \n                       \"WHERE DName = :pDName AND Loc = :pLoc\", conn)  \n  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14)  \n  cmd.Parameters.Add(\"pLoc\", OracleType.NVarChar, 13)  \n  \n  da.SelectCommand = cmd  \n  \n  ' Create the InsertCommand.  \n  \n  cmd = New OracleCommand(\"INSERT INTO Dept (DeptNo, DName) \" & _  \n                       \"VALUES (pDeptNo, pDName)\", conn)  \n  \n  cmd.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\")  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14, \"DName\")  \n  \n  da.InsertCommand = cmd  \n  \n  Return da  \nEnd Function  \n```  \n  \n [C#]  \n  \n```  \npublic static OracleDataAdapter CreateCustomerAdapter(OracleConnection conn)  \n{  \n  OracleDataAdapter da = new OracleDataAdapter();  \n  OracleCommand cmd;  \n  \n  // Create the SelectCommand.  \n  \n  cmd = new OracleCommand(\"SELECT * FROM Dept \" +  \n                       \"WHERE DName = :pDName AND Loc = :pLoc\", conn);  \n  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14);  \n  cmd.Parameters.Add(\"pLoc\", OracleType.NVarChar, 13);  \n  \n  da.SelectCommand = cmd;  \n  \n  // Create the InsertCommand.  \n  \n  cmd = new OracleCommand(\"INSERT INTO Dept (DeptNo, DName) \" +  \n                       \"VALUES (:pDeptNo, :pDName)\", conn);  \n  \n  cmd.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\");  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14, \"DName\");  \n  \n  da.InsertCommand = cmd;  \n  \n  return da;  \n}  \n```"
  syntax:
    content: public System.Data.OracleClient.OracleCommand SelectCommand { get; set; }
    return:
      type: System.Data.OracleClient.OracleCommand
      description: "<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> 에 배치 하기 위해 데이터베이스에서 레코드를 선택 하는 데 채우기 작업 중 사용 되는 <xref href=&quot;System.Data.DataSet&quot;> </xref>합니다."
  overload: System.Data.OracleClient.OracleDataAdapter.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  id: System#Data#IDbDataAdapter#DeleteCommand
  isEii: true
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OracleDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "이 멤버에 대 한 참조 <xref:System.Data.IDbDataAdapter.DeleteCommand*>.</xref:System.Data.IDbDataAdapter.DeleteCommand*>"
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.OracleClient.OracleDataAdapter>인스턴스로 캐스팅 되는 <xref:System.Data.IDbDataAdapter>인터페이스.</xref:System.Data.IDbDataAdapter> </xref:System.Data.OracleClient.OracleDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "명령을 나타내는 문자열입니다."
  overload: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  id: System#Data#IDbDataAdapter#InsertCommand
  isEii: true
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OracleDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "이 멤버에 대 한 참조 <xref:System.Data.IDbDataAdapter.InsertCommand*>.</xref:System.Data.IDbDataAdapter.InsertCommand*>"
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.OracleClient.OracleDataAdapter>인스턴스로 캐스팅 되는 <xref:System.Data.IDbDataAdapter>인터페이스.</xref:System.Data.IDbDataAdapter> </xref:System.Data.OracleClient.OracleDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "명령을 나타내는 문자열입니다."
  overload: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  id: System#Data#IDbDataAdapter#SelectCommand
  isEii: true
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OracleDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "이 멤버에 대 한 참조 <xref:System.Data.IDbDataAdapter.SelectCommand*>.</xref:System.Data.IDbDataAdapter.SelectCommand*>"
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.OracleClient.OracleDataAdapter>인스턴스로 캐스팅 되는 <xref:System.Data.IDbDataAdapter>인터페이스.</xref:System.Data.IDbDataAdapter> </xref:System.Data.OracleClient.OracleDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "명령을 나타내는 문자열입니다."
  overload: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  id: System#Data#IDbDataAdapter#UpdateCommand
  isEii: true
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OracleDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "이 멤버에 대 한 참조 <xref:System.Data.IDbDataAdapter.UpdateCommand*>.</xref:System.Data.IDbDataAdapter.UpdateCommand*>"
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.OracleClient.OracleDataAdapter>인스턴스로 캐스팅 되는 <xref:System.Data.IDbDataAdapter>인터페이스.</xref:System.Data.IDbDataAdapter> </xref:System.Data.OracleClient.OracleDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "명령을 나타내는 문자열입니다."
  overload: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OracleDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.OracleClient.OracleDataAdapter.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "이 멤버에 대 한 참조 &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.OracleClient.OracleDataAdapter>인스턴스로 캐스팅 되는 <xref:System.ICloneable>인터페이스.</xref:System.ICloneable> </xref:System.Data.OracleClient.OracleDataAdapter>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "이 인스턴스의 복사본 인 새 개체입니다."
  overload: System.Data.OracleClient.OracleDataAdapter.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.TerminateBatching
  id: TerminateBatching
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: TerminateBatching()
  nameWithType: OracleDataAdapter.TerminateBatching()
  fullName: System.Data.OracleClient.OracleDataAdapter.TerminateBatching()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void TerminateBatching ();
    parameters: []
  overload: System.Data.OracleClient.OracleDataAdapter.TerminateBatching*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize
  id: UpdateBatchSize
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: UpdateBatchSize
  nameWithType: OracleDataAdapter.UpdateBatchSize
  fullName: System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "가져옵니다 또는 일괄 처리 지원을 사용 하지 않도록 설정 하거나 사용 하는 값을 설정 하 고 일괄 처리에서 실행 될 수 있는 명령 수를 지정 합니다."
  remarks: "UpdateBatchSize 속성을 사용 하 여 데이터 소스에 <xref:System.Data.DataSet>.</xref:System.Data.DataSet> 변경 내용으로 업데이트 하려면 서버에 왕복 횟수를 줄여 응용 프로그램 성능을 향상 시킬 수이 있습니다.       너무 큰 배치를 실행 하면 성능이 저하 될 수 없습니다. 따라서 응용 프로그램을 구현 하기 전에 최적의 배치 크기를 설정 하기 위한 테스트 해야 합니다.       <xref:System.ArgumentOutOfRangeException>값 수로 설정 된 경우 throw 되&0; 보다 작은.</xref:System.ArgumentOutOfRangeException>"
  syntax:
    content: public override int UpdateBatchSize { get; set; }
    return:
      type: System.Int32
      description: "처리할 일괄 처리당 행 수입니다.       <table><thead><tr><th> Value:       </th><th> 영향:       </th></tr></thead><tbody><tr><td> 0       </td><td> 일괄 처리 크기에는 제한이 없습니다.       </td></tr><tr><td> 1       </td><td> 일괄 처리 업데이트를 사용 하지 않습니다.       </td></tr><tr><td> &gt; 1       </td><td> UpdateBatchSize 작업의 일괄 처리를 사용 하 여 한 번에 변경 내용이 보내집니다.       </td></tr></tbody></table>       연결 된 모든 명령 1이 아닌 값으로 설정 하는 경우는 <xref href=&quot;System.Data.OracleClient.OracleDataAdapter&quot;> </xref> 있어야 해당 <xref:System.Data.IDbCommand.UpdatedRowSource*>속성이로 설정 <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref> 또는 <xref uid=&quot;langword_csharp_OutputParameters&quot; name=&quot;OutputParameters&quot; href=&quot;&quot;> </xref>.</xref:System.Data.IDbCommand.UpdatedRowSource*> 그렇지 않은 경우에 예외가 throw 됩니다."
  overload: System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataAdapter.UpdateCommand
  id: UpdateCommand
  parent: System.Data.OracleClient.OracleDataAdapter
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: OracleDataAdapter.UpdateCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "SQL 문이나 저장된 프로시저는 데이터베이스의 레코드를 업데이트 하는 데 사용 된 값을 가져오거나 설정 합니다."
  remarks: "UpdateCommand 할당 된 경우에 이전에 만든 <xref:System.Data.OracleClient.OracleCommand>, <xref:System.Data.OracleClient.OracleCommand>가 복제 되지 않습니다.</xref:System.Data.OracleClient.OracleCommand> </xref:System.Data.OracleClient.OracleCommand> UpdateCommand 이전에 만든에 대 한 참조를 유지 하는 대신, <xref:System.Data.OracleClient.OracleCommand>개체입니다.</xref:System.Data.OracleClient.OracleCommand>       업데이트 작업을 하는 동안 경우 <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A>설정 되어 있지 않고 기본 키 정보에는 **데이터 집합**를 사용할 수 있습니다는 <xref:System.Data.OracleClient.OracleCommandBuilder>자동으로 생성 하는 클래스 <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A>를 조정 하는 데 필요한 추가 명령을 <xref:System.Data.DataSet>데이터베이스에.</xref:System.Data.DataSet> </xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> </xref:System.Data.OracleClient.OracleCommandBuilder> </xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> 이 작업을 수행 하려면 <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> <xref:System.Data.OracleClient.OracleDataAdapter>.</xref:System.Data.OracleClient.OracleDataAdapter> 속성</xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> 설정 생성 논리는 또한 <xref:System.Data.DataSet>.</xref:System.Data.DataSet> 에 키 열 정보 필요 자세한 내용은 참조 [commandbuilder 생성 명령을](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > 행을 반환 하는이 명령 실행 하는 경우 이러한 행으로 병합 될 수 있습니다는 <xref:System.Data.DataSet>설정 하는 방법에 따라는 <xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A>의 속성은 <xref:System.Data.OracleClient.OracleCommand>개체입니다.</xref:System.Data.OracleClient.OracleCommand> </xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A> </xref:System.Data.DataSet>       지정 된 열을 업데이트 하는 경우는 `LONG RAW` 데이터 형식 값을 입력 하면 예외가 throw 됩니다 `NULL` 열에 있습니다. Oracle `LONG RAW` 데이터 형식은 Oracle 버전 8.0의에서 사용 되지 않는 형식입니다. 이 오류를 방지 하려면 사용 된 `BLOB` 데이터 형식 대신 `LONG RAW`합니다."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> and UpdateCommand properties. It assumes you have already created an <xref:System.Data.OracleClient.OracleConnection> object.  \n  \n [Visual Basic]  \n  \n```  \nPublic Shared Function CreateCustomerAdapter(conn As OracleConnection) As OracleDataAdapter   \n  \n  Dim da As OracleDataAdapter = New OracleDataAdapter()  \n  Dim cmd As OracleCommand  \n  Dim parm As OracleParameter  \n  \n  ' Create the SelectCommand.  \n  \n  cmd = New OracleCommand(\"SELECT * FROM Dept \" & _  \n                       \"WHERE DName = pDName AND Loc = pLoc\", conn)  \n  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14)  \n  cmd.Parameters.Add(\"pLoc\", OracleType.NVarChar, 13)  \n  \n  da.SelectCommand = cmd  \n  \n  ' Create the UpdateCommand.  \n  \n  cmd = New OracleCommand(\"UPDATE Dept SET DeptNo = pDeptNo, DName = pDName \" & _  \n                       \"WHERE DeptNo = poldDeptNo\", conn)  \n  \n  cmd.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\")  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14, \"DName\")  \n  \n  parm = cmd.Parameters.Add(\"poldDeptNo\", OracleType.Number, 2, \"DeptNo\")  \n  parm.SourceVersion = DataRowVersion.Original  \n  \n  da.UpdateCommand = cmd  \n  \n  Return da  \nEnd Function  \n```  \n  \n [C#]  \n  \n```  \npublic static OracleDataAdapter CreateCustomerAdapter(OracleConnection conn)  \n{  \n  OracleDataAdapter da = new OracleDataAdapter();  \n  OracleCommand cmd;  \n  OracleParameter parm;  \n  \n  // Create the SelectCommand.  \n  \n  cmd = new OracleCommand(\"SELECT * FROM Dept \" +  \n                       \"WHERE DName = pDName AND Loc = pLoc\", conn);  \n  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14);  \n  cmd.Parameters.Add(\"pLoc\", OracleType.NVarChar, 13);  \n  \n  da.SelectCommand = cmd;  \n  \n  // Create the UpdateCommand.  \n  \n  cmd = new OracleCommand(\"UPDATE Dept SET DeptNo = pDeptNo, DName = pDName \" +  \n                       \"WHERE DeptNo = poldDeptNo\", conn);  \n  \n  cmd.Parameters.Add(\"pDeptNo\", OracleType.Number, 2, \"DeptNo\");  \n  cmd.Parameters.Add(\"pDName\", OracleType.NVarChar, 14, \"DName\");  \n  \n  parm = cmd.Parameters.Add(\"poldDeptNo\", OracleType.Number, 2, \"DeptNo\");  \n  parm.SourceVersion = DataRowVersion.Original;  \n  \n  da.UpdateCommand = cmd;  \n  \n  return da;  \n}  \n```"
  syntax:
    content: public System.Data.OracleClient.OracleCommand UpdateCommand { get; set; }
    return:
      type: System.Data.OracleClient.OracleCommand
      description: "<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> 업데이트 작업 중에 수정 된 행에 해당 하는 데이터베이스의 레코드를 업데이트 하는 데 사용 된 <xref href=&quot;System.Data.DataSet&quot;> </xref>합니다."
  overload: System.Data.OracleClient.OracleDataAdapter.UpdateCommand*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataAdapter
  isExternal: false
  name: System.Data.Common.DbDataAdapter
- uid: System.Data.OracleClient.OracleDataAdapter.#ctor
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: OracleDataAdapter()
  nameWithType: OracleDataAdapter.OracleDataAdapter()
  fullName: System.Data.OracleClient.OracleDataAdapter.OracleDataAdapter()
- uid: System.Data.OracleClient.OracleDataAdapter.#ctor(System.Data.OracleClient.OracleCommand)
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: OracleDataAdapter(OracleCommand)
  nameWithType: OracleDataAdapter.OracleDataAdapter(OracleCommand)
  fullName: System.Data.OracleClient.OracleDataAdapter.OracleDataAdapter(OracleCommand)
- uid: System.Data.OracleClient.OracleCommand
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleCommand
  nameWithType: OracleCommand
  fullName: System.Data.OracleClient.OracleCommand
- uid: System.Data.OracleClient.OracleDataAdapter.#ctor(System.String,System.Data.OracleClient.OracleConnection)
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: OracleDataAdapter(String,OracleConnection)
  nameWithType: OracleDataAdapter.OracleDataAdapter(String,OracleConnection)
  fullName: System.Data.OracleClient.OracleDataAdapter.OracleDataAdapter(String,OracleConnection)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OracleClient.OracleConnection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
- uid: System.Data.OracleClient.OracleDataAdapter.#ctor(System.String,System.String)
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: OracleDataAdapter(String,String)
  nameWithType: OracleDataAdapter.OracleDataAdapter(String,String)
  fullName: System.Data.OracleClient.OracleDataAdapter.OracleDataAdapter(String,String)
- uid: System.Data.OracleClient.OracleDataAdapter.AddToBatch(System.Data.IDbCommand)
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: AddToBatch(IDbCommand)
  nameWithType: OracleDataAdapter.AddToBatch(IDbCommand)
  fullName: System.Data.OracleClient.OracleDataAdapter.AddToBatch(IDbCommand)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.IDbCommand
  parent: System.Data
  isExternal: false
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: System.Data.OracleClient.OracleDataAdapter.ClearBatch
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: ClearBatch()
  nameWithType: OracleDataAdapter.ClearBatch()
  fullName: System.Data.OracleClient.OracleDataAdapter.ClearBatch()
- uid: System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OracleDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatedEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatedEventArgs
  nameWithType: RowUpdatedEventArgs
  fullName: System.Data.Common.RowUpdatedEventArgs
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Data.Common.DataTableMapping
  parent: System.Data.Common
  isExternal: false
  name: DataTableMapping
  nameWithType: DataTableMapping
  fullName: System.Data.Common.DataTableMapping
- uid: System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OracleDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatingEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatingEventArgs
  nameWithType: RowUpdatingEventArgs
  fullName: System.Data.Common.RowUpdatingEventArgs
- uid: System.Data.OracleClient.OracleDataAdapter.DeleteCommand
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: OracleDataAdapter.DeleteCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.DeleteCommand
- uid: System.Data.OracleClient.OracleDataAdapter.ExecuteBatch
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: ExecuteBatch()
  nameWithType: OracleDataAdapter.ExecuteBatch()
  fullName: System.Data.OracleClient.OracleDataAdapter.ExecuteBatch()
- uid: System.Data.OracleClient.OracleDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: GetBatchedParameter(Int32,Int32)
  nameWithType: OracleDataAdapter.GetBatchedParameter(Int32,Int32)
  fullName: System.Data.OracleClient.OracleDataAdapter.GetBatchedParameter(Int32,Int32)
- uid: System.Data.IDataParameter
  parent: System.Data
  isExternal: false
  name: IDataParameter
  nameWithType: IDataParameter
  fullName: System.Data.IDataParameter
- uid: System.Data.OracleClient.OracleDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: GetBatchedRecordsAffected(Int32,Int32,Exception)
  nameWithType: OracleDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
  fullName: System.Data.OracleClient.OracleDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Data.OracleClient.OracleDataAdapter.InitializeBatching
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: InitializeBatching()
  nameWithType: OracleDataAdapter.InitializeBatching()
  fullName: System.Data.OracleClient.OracleDataAdapter.InitializeBatching()
- uid: System.Data.OracleClient.OracleDataAdapter.InsertCommand
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: OracleDataAdapter.InsertCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.InsertCommand
- uid: System.Data.OracleClient.OracleDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: OracleDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.OracleClient.OracleDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
- uid: System.Data.OracleClient.OracleDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: OracleDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.OracleClient.OracleDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
- uid: System.Data.OracleClient.OracleDataAdapter.RowUpdated
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: RowUpdated
  nameWithType: OracleDataAdapter.RowUpdated
  fullName: System.Data.OracleClient.OracleDataAdapter.RowUpdated
- uid: System.Data.OracleClient.OracleRowUpdatedEventHandler
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleRowUpdatedEventHandler
  nameWithType: OracleRowUpdatedEventHandler
  fullName: System.Data.OracleClient.OracleRowUpdatedEventHandler
- uid: System.Data.OracleClient.OracleDataAdapter.RowUpdating
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: RowUpdating
  nameWithType: OracleDataAdapter.RowUpdating
  fullName: System.Data.OracleClient.OracleDataAdapter.RowUpdating
- uid: System.Data.OracleClient.OracleRowUpdatingEventHandler
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleRowUpdatingEventHandler
  nameWithType: OracleRowUpdatingEventHandler
  fullName: System.Data.OracleClient.OracleRowUpdatingEventHandler
- uid: System.Data.OracleClient.OracleDataAdapter.SelectCommand
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: OracleDataAdapter.SelectCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.SelectCommand
- uid: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OracleDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OracleDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OracleDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OracleDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.OracleClient.OracleDataAdapter.System#ICloneable#Clone
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OracleDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.OracleClient.OracleDataAdapter.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleDataAdapter.TerminateBatching
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: TerminateBatching()
  nameWithType: OracleDataAdapter.TerminateBatching()
  fullName: System.Data.OracleClient.OracleDataAdapter.TerminateBatching()
- uid: System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: UpdateBatchSize
  nameWithType: OracleDataAdapter.UpdateBatchSize
  fullName: System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize
- uid: System.Data.OracleClient.OracleDataAdapter.UpdateCommand
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: OracleDataAdapter.UpdateCommand
  fullName: System.Data.OracleClient.OracleDataAdapter.UpdateCommand
- uid: System.Data.OracleClient.OracleDataAdapter.#ctor*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: OracleDataAdapter
  nameWithType: OracleDataAdapter.OracleDataAdapter
- uid: System.Data.OracleClient.OracleDataAdapter.AddToBatch*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: AddToBatch
  nameWithType: OracleDataAdapter.AddToBatch
- uid: System.Data.OracleClient.OracleDataAdapter.ClearBatch*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: ClearBatch
  nameWithType: OracleDataAdapter.ClearBatch
- uid: System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatedEvent*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent
  nameWithType: OracleDataAdapter.CreateRowUpdatedEvent
- uid: System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatingEvent*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent
  nameWithType: OracleDataAdapter.CreateRowUpdatingEvent
- uid: System.Data.OracleClient.OracleDataAdapter.DeleteCommand*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: OracleDataAdapter.DeleteCommand
- uid: System.Data.OracleClient.OracleDataAdapter.ExecuteBatch*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: ExecuteBatch
  nameWithType: OracleDataAdapter.ExecuteBatch
- uid: System.Data.OracleClient.OracleDataAdapter.GetBatchedParameter*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: GetBatchedParameter
  nameWithType: OracleDataAdapter.GetBatchedParameter
- uid: System.Data.OracleClient.OracleDataAdapter.GetBatchedRecordsAffected*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: GetBatchedRecordsAffected
  nameWithType: OracleDataAdapter.GetBatchedRecordsAffected
- uid: System.Data.OracleClient.OracleDataAdapter.InitializeBatching*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: InitializeBatching
  nameWithType: OracleDataAdapter.InitializeBatching
- uid: System.Data.OracleClient.OracleDataAdapter.InsertCommand*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: OracleDataAdapter.InsertCommand
- uid: System.Data.OracleClient.OracleDataAdapter.OnRowUpdated*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: OnRowUpdated
  nameWithType: OracleDataAdapter.OnRowUpdated
- uid: System.Data.OracleClient.OracleDataAdapter.OnRowUpdating*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: OnRowUpdating
  nameWithType: OracleDataAdapter.OnRowUpdating
- uid: System.Data.OracleClient.OracleDataAdapter.SelectCommand*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: OracleDataAdapter.SelectCommand
- uid: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OracleDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OracleDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OracleDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OracleDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.OracleClient.OracleDataAdapter.System#ICloneable#Clone*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OracleDataAdapter.System.ICloneable.Clone
- uid: System.Data.OracleClient.OracleDataAdapter.TerminateBatching*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: TerminateBatching
  nameWithType: OracleDataAdapter.TerminateBatching
- uid: System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: UpdateBatchSize
  nameWithType: OracleDataAdapter.UpdateBatchSize
- uid: System.Data.OracleClient.OracleDataAdapter.UpdateCommand*
  parent: System.Data.OracleClient.OracleDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: OracleDataAdapter.UpdateCommand
