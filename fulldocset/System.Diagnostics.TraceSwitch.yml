### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.TraceSwitch
  id: TraceSwitch
  children:
  - System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)
  - System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)
  - System.Diagnostics.TraceSwitch.Level
  - System.Diagnostics.TraceSwitch.OnSwitchSettingChanged
  - System.Diagnostics.TraceSwitch.OnValueChanged
  - System.Diagnostics.TraceSwitch.TraceError
  - System.Diagnostics.TraceSwitch.TraceInfo
  - System.Diagnostics.TraceSwitch.TraceVerbose
  - System.Diagnostics.TraceSwitch.TraceWarning
  langs:
  - csharp
  name: TraceSwitch
  nameWithType: TraceSwitch
  fullName: System.Diagnostics.TraceSwitch
  type: Class
  summary: "코드를 다시 컴파일하지 않고 제어 추적 및 디버그 출력에는 여러 수준의 스위치를 제공 합니다."
  remarks: "추적 스위치를 사용 하 여 중요도에 따라 메시지 필터링 할 수 있습니다. TraceSwitch 클래스를 제공 된 <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, 및 <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>스위치의 수준을 테스트 하는 속성.</xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A> <xref:System.Diagnostics.TraceSwitch.Level%2A>속성 스위치의 <xref:System.Diagnostics.TraceLevel>.</xref:System.Diagnostics.TraceLevel> 를 가져오거나 설정 합니다.</xref:System.Diagnostics.TraceSwitch.Level%2A>       응용 프로그램 구성 파일을 통해 TraceSwitch 수준을 설정할 수 있으며 다음 구성 된 TraceSwitch 수준을 사용 하 여 응용 프로그램에 있습니다. 또는 코드에서 TraceSwitch 만들고 수준을 계측 코드의 특정 섹션으로 직접 설정 수 있습니다.       TraceSwitch를 구성 하려면 편집는 응용 프로그램에 대 한 합니다. 이 파일에 추가 또는 제거 하는 스위치, 스위치의 값을 설정 하거나 지울 수 스위치 응용 프로그램에서 이전에 설정한 모든 합니다. 다음 예제와 같은 구성 파일의 형식은 같아야: ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;1&quot; />       </switches>     </system.diagnostics>   </configuration>   ``` 이 구성 섹션 정의 된 TraceSwitch는 <xref:System.Diagnostics.Switch.DisplayName%2A>로 설정 `mySwitch`, <xref:System.Diagnostics.TraceSwitch.Level%2A> <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> 열거형 값에 해당 하는 1로 설정</xref:System.Diagnostics.TraceSwitch.Level%2A> 하 고</xref:System.Diagnostics.Switch.DisplayName%2A>      > [!NOTE] >.NET Framework 버전 2.0, 스위치에 대 한 값을 지정 하려면 텍스트를 사용할 수 있습니다. 예를 들어 `true` 에 대 한는 <xref:System.Diagnostics.BooleanSwitch>또는 열거형 값을 나타내는 텍스트 `Error` TraceSwitch에 대 한.</xref:System.Diagnostics.BooleanSwitch> 줄 `<add name=&quot;mySwitch&quot; value=&quot;Error&quot; />` 같습니다 `<add name=&quot;mySwitch&quot; value=&quot;1&quot; />`합니다.       응용 프로그램에서 수준을 사용할 수 있습니다는 구성 된 스위치 같은 이름의 TraceSwitch를 만들어 다음 예제와 같이: [!code-vb [클래식 TraceSwitch.TraceError 예제&#3;](~/add/codesnippet/visualbasic/t-system.diagnostics.tra_0_1.vb)][!code-cpp[클래식 TraceSwitch.TraceError 예제&#3;](~/add/codesnippet/cpp/t-system.diagnostics.tra_0_1.cpp)][!code-cs[클래식 TraceSwitch.TraceError 예제&#3;](~/add/codesnippet/csharp/t-system.diagnostics.tra_0_1.cs) ] 기본적으로 스위치 <xref:System.Diagnostics.TraceSwitch.Level%2A>구성 파일에 지정 된 값을 사용 하 여 속성을 설정 합니다.</xref:System.Diagnostics.TraceSwitch.Level%2A>     하는 경우 <xref:System.Diagnostics.TraceSwitch.%23ctor%2A>생성자는 <xref:System.Diagnostics.TraceSwitch.Level%2A>새 스위치 기본값으로 <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> 의</xref:System.Diagnostics.TraceSwitch.Level%2A> 구성 파일에서 초기 스위치 설정을 찾을 수 없습니다</xref:System.Diagnostics.TraceSwitch.%23ctor%2A>       스위치를 사용 하려면 추적 또는 디버깅 사용 하도록 설정 해야 합니다. 다음 구문은 특정 컴파일러입니다. 이외의 C# 또는 Visual Basic 컴파일러를 사용 하는 경우 컴파일러에 대 한 설명서를 참조 하십시오.      -C#에서 디버깅을 사용 하려면 추가 `/d:DEBUG` 플래그를 추가 하거나 코드를 컴파일할 때 컴파일러 명령줄 `#define DEBUG` 파일의 맨 위로 이동 합니다. Visual Basic의 추가 `/d:DEBUG=True` 컴파일러 명령줄을 플래그 합니다.      -C#에서 추적을 사용 하도록 설정 하려면 추가 `/d:TRACE` 플래그를 추가 하거나 코드를 컴파일할 때 컴파일러 명령줄 `#define TRACE` 파일의 맨 위로 이동 합니다. Visual Basic의 추가 `/d:TRACE=True` 컴파일러 명령줄을 플래그 합니다.      > [!NOTE] > 이러한 디버그 및 격리 된 상태에서 TraceSwitch 클래스를 사용 하는 경우 추적 컴파일러 스위치 필요 하지 않습니다. 와 함께에서 필요 <xref:System.Diagnostics.Trace>또는 <xref:System.Diagnostics.Debug>메서드는 조건부로 컴파일됩니다.</xref:System.Diagnostics.Debug> </xref:System.Diagnostics.Trace>       응용 프로그램을 계측에 대 한 자세한 내용은 <xref:System.Diagnostics.Debug>및 <xref:System.Diagnostics.Trace>.</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> 를 참조 하십시오. 구성 및 추적 스위치를 사용 하는 방법에 대 한 자세한 내용은 참조 [추적 스위치](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > 성능을 향상 시키기 위해 TraceSwitch 멤버를 만들 수 있습니다 `static` 클래스에 있습니다."
  example:
  - "The following code example creates a new TraceSwitch and uses the switch to determine whether to print error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cs[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/csharp/t-system.diagnostics.tra_0_2.cs)]\n [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/cpp/t-system.diagnostics.tra_0_2.cpp)]\n [!code-vb[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.tra_0_2.vb)]"
  syntax:
    content: >-
      [System.Diagnostics.SwitchLevel(typeof(System.Diagnostics.TraceLevel))]

      public class TraceSwitch : System.Diagnostics.Switch
  inheritance:
  - System.Object
  - System.Diagnostics.Switch
  implements: []
  inheritedMembers:
  - System.Diagnostics.Switch.Attributes
  - System.Diagnostics.Switch.Description
  - System.Diagnostics.Switch.DisplayName
  - System.Diagnostics.Switch.GetSupportedAttributes
  - System.Diagnostics.Switch.SwitchSetting
  - System.Diagnostics.Switch.Value
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceSwitch(String,String)
  nameWithType: TraceSwitch.TraceSwitch(String,String)
  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Diagnostics.TraceSwitch&quot;> </xref> 클래스, 지정 된 표시 이름 및 설명을 사용 합니다."
  remarks: "수준을 설정 하려면 프로그램 <xref:System.Diagnostics.TraceSwitch>, 응용 프로그램의 이름에 해당 하는 구성 파일을 편집 합니다.</xref:System.Diagnostics.TraceSwitch> 이 파일에서 스위치를 추가 하 고 해당 값을 설정, 스위치를 제거 하거나 지울 수 스위치 응용 프로그램에서 이전에 설정한 모든 합니다. 다음 예제와 같은 구성 파일의 형식은 같아야: ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;1&quot; />       </switches>     </system.diagnostics>   </configuration>   ```       >  [!NOTE] >.NET Framework 버전 2.0, 스위치에 대 한 값을 지정 하려면 텍스트를 사용할 수 있습니다. 예를 들어 `true` 에 대 한는 <xref:System.Diagnostics.BooleanSwitch>또는 열거형 값을 나타내는 텍스트 `Error` <xref:System.Diagnostics.TraceSwitch>.</xref:System.Diagnostics.TraceSwitch> </xref:System.Diagnostics.BooleanSwitch> 줄 `<add name=&quot;mySwitch&quot; value=&quot;Error&quot; />` 같습니다 `<add name=&quot;mySwitch&quot; value=&quot;1&quot; />`합니다.       응용 프로그램에서 구성 된 스위치 수준에서 만들어 사용할 수 있습니다는 <xref:System.Diagnostics.TraceSwitch>다음 예제에서와 같이 동일한 이름의: [!code-vb [클래식 TraceSwitch.TraceError 예제&#3;](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_27_1.vb)][!code-cpp[클래식 TraceSwitch.TraceError 예제&#3;](~/add/codesnippet/cpp/m-system.diagnostics.tra_27_1.cpp)][!code-cs[클래식 TraceSwitch.TraceError 예제&#3;](~/add/codesnippet/csharp/m-system.diagnostics.tra_27_1.cs) ] 경우 <xref:System.Diagnostics.TraceSwitch.%23ctor%2A>생성자는 <xref:System.Diagnostics.TraceSwitch.Level%2A>새 스위치의 속성이 <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> 로 설정 되어</xref:System.Diagnostics.TraceSwitch.Level%2A> 구성 파일에서 초기 스위치 설정을 찾을 수 없습니다</xref:System.Diagnostics.TraceSwitch.%23ctor%2A>     </xref:System.Diagnostics.TraceSwitch>       <xref:System.Diagnostics.TraceSwitch>클래스를 제공는 <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, 및 <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>테스트 하는 속성의 <xref:System.Diagnostics.TraceSwitch.Level%2A>스위치.</xref:System.Diagnostics.TraceSwitch.Level%2A> </xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A> </xref:System.Diagnostics.TraceSwitch> <xref:System.Diagnostics.TraceSwitch.Level%2A>속성 스위치의 <xref:System.Diagnostics.TraceLevel>.</xref:System.Diagnostics.TraceLevel> 를 가져오거나 설정 합니다.</xref:System.Diagnostics.TraceSwitch.Level%2A>      > [!NOTE] > 성능을 향상 시키기 위해 만들 수 있습니다 <xref:System.Diagnostics.TraceSwitch>멤버 `static` 프로그램 클래스에</xref:System.Diagnostics.TraceSwitch>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to print error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cs[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_27_2.cs)]\n [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_27_2.cpp)]\n [!code-vb[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_27_2.vb)]"
  syntax:
    content: public TraceSwitch (string displayName, string description);
    parameters:
    - id: displayName
      type: System.String
      description: "사용자 인터페이스에 표시할 이름입니다."
    - id: description
      type: System.String
      description: "스위치의 설명입니다."
  overload: System.Diagnostics.TraceSwitch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceSwitch(String,String,String)
  nameWithType: TraceSwitch.TraceSwitch(String,String,String)
  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(String,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Diagnostics.TraceSwitch&quot;> </xref> 클래스, 스위치에 대해 지정 된 표시 이름, 설명 및 기본값을 사용 합니다."
  remarks: "`displayName` 의 값을 설정 하려면 매개 변수를 사용 하는 <xref:System.Diagnostics.Switch.DisplayName%2A>속성을는 `description` 매개 변수 값을 설정 하는 데 사용 되며는 <xref:System.Diagnostics.Switch.Description%2A>속성 및 `defaultSwitchValue` 매개 변수를 필드로 저장 하 고 초기화 하는 데는 <xref:System.Diagnostics.Switch.Value%2A>첫 번째 참조에서 속성.</xref:System.Diagnostics.Switch.Value%2A> </xref:System.Diagnostics.Switch.Description%2A> </xref:System.Diagnostics.Switch.DisplayName%2A> 참조는 <xref:System.Diagnostics.TraceSwitch.%23ctor%28System.String%2CSystem.String%29>자세한 내용 및 코드 예제에 대 한 생성자입니다.</xref:System.Diagnostics.TraceSwitch.%23ctor%28System.String%2CSystem.String%29>"
  syntax:
    content: public TraceSwitch (string displayName, string description, string defaultSwitchValue);
    parameters:
    - id: displayName
      type: System.String
      description: "사용자 인터페이스에 표시할 이름입니다."
    - id: description
      type: System.String
      description: "스위치의 설명입니다."
    - id: defaultSwitchValue
      type: System.String
      description: "스위치의 기본값입니다."
  overload: System.Diagnostics.TraceSwitch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.Level
  id: Level
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: Level
  nameWithType: TraceSwitch.Level
  fullName: System.Diagnostics.TraceSwitch.Level
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "스위치를 허용 하는 메시지를 결정 하는 추적 수준을 설정 하거나 가져옵니다."
  remarks: "수준을 설정 하려면 프로그램 <xref:System.Diagnostics.TraceSwitch>, 응용 프로그램의 이름에 해당 하는 구성 파일을 편집 합니다.</xref:System.Diagnostics.TraceSwitch> 이 파일에서 스위치를 추가 하 고 해당 값을 설정, 스위치를 제거 하거나 지울 수 스위치 응용 프로그램에서 이전에 설정한 모든 합니다. 다음 예제와 같은 구성 파일의 형식은 같아야: ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;0&quot; />         <add name=&quot;myNewSwitch&quot; value=&quot;3&quot; />         <remove name=&quot;mySwitch&quot; />         <clear/>       </switches>     </system.diagnostics>   </configuration>   ```       >  [!NOTE] >.NET Framework 버전 2.0, 스위치에 대 한 값을 지정 하려면 텍스트를 사용할 수 있습니다. 예를 들어 `true` 에 대 한는 <xref:System.Diagnostics.BooleanSwitch>또는 열거형 값을 나타내는 텍스트 `Error` <xref:System.Diagnostics.TraceSwitch>.</xref:System.Diagnostics.TraceSwitch> </xref:System.Diagnostics.BooleanSwitch> 줄 `<add name=&quot;mySwitch&quot; value=&quot;Error&quot; />` 같습니다 `<add name=&quot;mySwitch&quot; value=&quot;1&quot; />`합니다.       때의 <xref:System.Diagnostics.TraceSwitch.%23ctor%2A>생성자에는 구성 파일에서 초기 스위치 설정을 찾을 수 없습니다, 새 스위치의 수준 속성 <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> 으로 설정 됩니다</xref:System.Diagnostics.TraceSwitch.%23ctor%2A>       이 속성을 업데이트 하는 설정의 <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, 및 <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>속성을 새 값을 반영 합니다.</xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to print error messages. The switch is created at the class level. `MyMethod` writes the first error message if the Level property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the Level is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cpp[Classic TraceSwitch.Level Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_1_1.cpp)]\n [!code-cs[Classic TraceSwitch.Level Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_1_1.cs)]\n [!code-vb[Classic TraceSwitch.Level Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_1_1.vb)]"
  syntax:
    content: public System.Diagnostics.TraceLevel Level { get; set; }
    return:
      type: System.Diagnostics.TraceLevel
      description: "중 하나는 <xref href=&quot;System.Diagnostics.TraceLevel&quot;> </xref> 스위치에서 허용 되는 메시지의 수준을 지정 하는 값입니다."
  overload: System.Diagnostics.TraceSwitch.Level*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "수준이 아닌 값으로 설정 된는 <xref href=&quot;System.Diagnostics.TraceLevel&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged
  id: OnSwitchSettingChanged
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: OnSwitchSettingChanged()
  nameWithType: TraceSwitch.OnSwitchSettingChanged()
  fullName: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "업데이트 하 고이 스위치에 대 한 수준을 수정 합니다."
  remarks: "OnSwitchSettingChanged 메서드는 유효성을 검사 하 여 구성 파일을 통해 초기화 스위치의 값을 수정.NET framework에서 사용 됩니다. 구성 파일에 지정 된 스위치 값으로 정의 되어 있지 않으면 모든 추적 수신기에 메시지가 기록 됩니다는 <xref:System.Diagnostics.TraceLevel>열거형 스위치 정의 된 값으로 설정 됩니다.</xref:System.Diagnostics.TraceLevel>       설정 하기 위해 코드에 사용 하려는 경우는 <xref:System.Diagnostics.TraceSwitch.Level%2A>속성으로 정의 되지 않은 값으로는 <xref:System.Diagnostics.TraceLevel>열거형은 <xref:System.ArgumentException>예외가 throw 됩니다.</xref:System.ArgumentException> </xref:System.Diagnostics.TraceLevel> </xref:System.Diagnostics.TraceSwitch.Level%2A>"
  syntax:
    content: protected override void OnSwitchSettingChanged ();
    parameters: []
  overload: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.OnValueChanged
  id: OnValueChanged
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: OnValueChanged()
  nameWithType: TraceSwitch.OnValueChanged()
  fullName: System.Diagnostics.TraceSwitch.OnValueChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "설정의 <> </> *> 속성을 해당 하는 정수는 <> </> *> 속성."
  remarks: "이 메서드는 내부적으로 때는 <xref:System.Diagnostics.Switch.Value%2A>속성이 스위치 변경.</xref:System.Diagnostics.Switch.Value%2A> 메서드를 사용 하면 스위치의 값과 관련 된 속성의 새 값을 반영 합니다."
  syntax:
    content: protected override void OnValueChanged ();
    parameters: []
  overload: System.Diagnostics.TraceSwitch.OnValueChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.TraceError
  id: TraceError
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceError
  nameWithType: TraceSwitch.TraceError
  fullName: System.Diagnostics.TraceSwitch.TraceError
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "스위치 오류 처리 메시지를 허용 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: "TraceError, 사용할 수 있습니다 <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, 및 <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>와 함께에서 속성은 <xref:System.Diagnostics.Debug>및 <xref:System.Diagnostics.Trace>클래스를 지정 된 중요도 이상 모든 메시지를 내보냅니다.</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> </xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> 경우는 <xref:System.Diagnostics.TraceSwitch.Level%2A>중요성이 가장 높은 속성이 <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, <xref:System.Diagnostics.TraceLevel>만 오류 처리 메시지를 내보냅니다.</xref:System.Diagnostics.TraceLevel> </xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to emit error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cs[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_5_1.cs)]\n [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_5_1.cpp)]\n [!code-vb[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_5_1.vb)]"
  syntax:
    content: public bool TraceError { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref:System.Diagnostics.TraceSwitch.Level*> property is set to <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>, <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>, <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>, or <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.Diagnostics.TraceSwitch.Level*>"
  overload: System.Diagnostics.TraceSwitch.TraceError*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.TraceInfo
  id: TraceInfo
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceInfo
  nameWithType: TraceSwitch.TraceInfo
  fullName: System.Diagnostics.TraceSwitch.TraceInfo
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "스위치 정보 메시지를 허용 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: "사용할 수는 <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, TraceInfo, 및 <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>와 함께에서 속성은 <xref:System.Diagnostics.Debug>및 <xref:System.Diagnostics.Trace>클래스를 지정 된 중요도 이상 모든 메시지를 내보냅니다.</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> </xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A> 경우는 <xref:System.Diagnostics.TraceSwitch.Level%2A>속성이 <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, 정보 메시지, 경고 및 오류 처리 메시지 내보내집니다.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to emit error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-vb[Classic TraceSwitch.TraceInfo Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_8_1.vb)]\n [!code-cs[Classic TraceSwitch.TraceInfo Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_8_1.cs)]\n [!code-cpp[Classic TraceSwitch.TraceInfo Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_8_1.cpp)]"
  syntax:
    content: public bool TraceInfo { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.Diagnostics.TraceSwitch.Level*>속성이 <xref href=&quot;System.Diagnostics.TraceLevel&quot;> </xref> 또는 <xref href=&quot;System.Diagnostics.TraceLevel&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Diagnostics.TraceSwitch.Level*>"
  overload: System.Diagnostics.TraceSwitch.TraceInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.TraceVerbose
  id: TraceVerbose
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceVerbose
  nameWithType: TraceSwitch.TraceVerbose
  fullName: System.Diagnostics.TraceSwitch.TraceVerbose
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "스위치 모든 메시지를 허용 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: "사용할 수 있습니다는 <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, 및와 함께에서 TraceVerbose 속성은 <xref:System.Diagnostics.Debug>및 <xref:System.Diagnostics.Trace>클래스를 지정 된 중요도 이상 모든 메시지를 내보냅니다.</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A> 경우는 <xref:System.Diagnostics.TraceSwitch.Level%2A>속성이 <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, 모든 디버깅 및 추적 메시지를 전송 합니다.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to emit error messages. The switch is created at the class level. `MyMethod` writes both error messages when the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cs[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_4_1.cs)]\n [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_4_1.cpp)]\n [!code-vb[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_4_1.vb)]"
  syntax:
    content: public bool TraceVerbose { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.Diagnostics.TraceSwitch.Level*>속성이 <xref href=&quot;System.Diagnostics.TraceLevel&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Diagnostics.TraceSwitch.Level*>"
  overload: System.Diagnostics.TraceSwitch.TraceVerbose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.TraceWarning
  id: TraceWarning
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceWarning
  nameWithType: TraceSwitch.TraceWarning
  fullName: System.Diagnostics.TraceSwitch.TraceWarning
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "스위치 경고 메시지를 허용 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: "사용할 수는 <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, TraceWarning, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, 및 <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>와 함께에서 속성은 <xref:System.Diagnostics.Debug>및 <xref:System.Diagnostics.Trace>클래스를 지정 된 중요도 이상 모든 메시지를 내보냅니다.</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> </xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A> 경우는 <xref:System.Diagnostics.TraceSwitch.Level%2A>속성이 <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, 경고 및 오류 처리 메시지가 출력 됩니다.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to emit error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message when the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cs[Classic TraceSwitch.TraceWarning Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_3_1.cs)]\n [!code-cpp[Classic TraceSwitch.TraceWarning Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_3_1.cpp)]\n [!code-vb[Classic TraceSwitch.TraceWarning Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_3_1.vb)]"
  syntax:
    content: public bool TraceWarning { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref:System.Diagnostics.TraceSwitch.Level*> property is set to <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>, <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>, or <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.Diagnostics.TraceSwitch.Level*>"
  overload: System.Diagnostics.TraceSwitch.TraceWarning*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.Switch
  isExternal: false
  name: System.Diagnostics.Switch
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceSwitch(String,String)
  nameWithType: TraceSwitch.TraceSwitch(String,String)
  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceSwitch(String,String,String)
  nameWithType: TraceSwitch.TraceSwitch(String,String,String)
  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(String,String,String)
- uid: System.Diagnostics.TraceSwitch.Level
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: Level
  nameWithType: TraceSwitch.Level
  fullName: System.Diagnostics.TraceSwitch.Level
- uid: System.Diagnostics.TraceLevel
  parent: System.Diagnostics
  isExternal: false
  name: TraceLevel
  nameWithType: TraceLevel
  fullName: System.Diagnostics.TraceLevel
- uid: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: OnSwitchSettingChanged()
  nameWithType: TraceSwitch.OnSwitchSettingChanged()
  fullName: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged()
- uid: System.Diagnostics.TraceSwitch.OnValueChanged
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: OnValueChanged()
  nameWithType: TraceSwitch.OnValueChanged()
  fullName: System.Diagnostics.TraceSwitch.OnValueChanged()
- uid: System.Diagnostics.TraceSwitch.TraceError
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceError
  nameWithType: TraceSwitch.TraceError
  fullName: System.Diagnostics.TraceSwitch.TraceError
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.TraceSwitch.TraceInfo
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceInfo
  nameWithType: TraceSwitch.TraceInfo
  fullName: System.Diagnostics.TraceSwitch.TraceInfo
- uid: System.Diagnostics.TraceSwitch.TraceVerbose
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceVerbose
  nameWithType: TraceSwitch.TraceVerbose
  fullName: System.Diagnostics.TraceSwitch.TraceVerbose
- uid: System.Diagnostics.TraceSwitch.TraceWarning
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceWarning
  nameWithType: TraceSwitch.TraceWarning
  fullName: System.Diagnostics.TraceSwitch.TraceWarning
- uid: System.Diagnostics.TraceSwitch.#ctor*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceSwitch
  nameWithType: TraceSwitch.TraceSwitch
- uid: System.Diagnostics.TraceSwitch.Level*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: Level
  nameWithType: TraceSwitch.Level
- uid: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: OnSwitchSettingChanged
  nameWithType: TraceSwitch.OnSwitchSettingChanged
- uid: System.Diagnostics.TraceSwitch.OnValueChanged*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: OnValueChanged
  nameWithType: TraceSwitch.OnValueChanged
- uid: System.Diagnostics.TraceSwitch.TraceError*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceError
  nameWithType: TraceSwitch.TraceError
- uid: System.Diagnostics.TraceSwitch.TraceInfo*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceInfo
  nameWithType: TraceSwitch.TraceInfo
- uid: System.Diagnostics.TraceSwitch.TraceVerbose*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceVerbose
  nameWithType: TraceSwitch.TraceVerbose
- uid: System.Diagnostics.TraceSwitch.TraceWarning*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceWarning
  nameWithType: TraceSwitch.TraceWarning
