### YamlMime:ManagedReference
items:
- uid: System.Windows.RequestBringIntoViewEventHandler
  id: RequestBringIntoViewEventHandler
  langs:
  - csharp
  name: RequestBringIntoViewEventHandler
  nameWithType: RequestBringIntoViewEventHandler
  fullName: System.Windows.RequestBringIntoViewEventHandler
  type: Delegate
  summary: "처리 하는 메서드를 나타냅니다는 <xref href=&quot;System.Windows.FrameworkElement.RequestBringIntoView&quot;> </xref> 라우트된 이벤트입니다."
  remarks: "이 이벤트를 처리 합니다. 일반적으로 스크롤 가능한 영역을 지 원하는 또는 일치 하지 않으면 의도적으로 설정 하며, 렌더링 크기 자식 요소 콘텐츠를 원하는 크기 보다 작은 요소 내에 수행 됩니다 및 의도적으로 요소 트리에 있는 위쪽으로 라우팅 했습니다 하 고 스크롤 영역 지원에서 제공 하는 첫 번째 부모에 도달한 후 이벤트를 처리 하 여만 수행 됩니다. 일반적으로 필요한 사용자 컨트롤에 대 한 방법으로 스크롤 영역을 처리 하는 기존 구현을 <xref:System.Windows.Controls.ScrollViewer>.</xref:System.Windows.Controls.ScrollViewer> 파생 하는 경우 <xref:System.Windows.Controls.ScrollViewer>에 대 한 클래스 처리기를 등록할 수 있습니다 <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>이벤트의 기본 클래스 처리를 보완 하 고.</xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> </xref:System.Windows.Controls.ScrollViewer> 또는 클래스 정의 <xref:System.Windows.Controls.ScrollViewer.ScrollChanged>이벤트 <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>.</xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> 대신</xref:System.Windows.Controls.ScrollViewer.ScrollChanged> 한 클래스 처리를 사용 하 여 고려해 야 또는 완전 한 사용자 지정 클래스에서 파생 되지 않은 경우 만들 <xref:System.Windows.Controls.ScrollViewer>, 클래스를 호출 하 여 처리를 추가할 수 있습니다 <xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=fullName>클래스 인스턴스화할에서.</xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=fullName> </xref:System.Windows.Controls.ScrollViewer>  클래스 처리에 대 한 자세한 내용은 참조 하십시오. [표시 라우트된 이벤트로 클래스를 처리 하 고,](~/add/includes/ajax-current-ext-md.md)합니다.       콘텐츠 요소는 이벤트를 콘텐츠 호스트에 의해 발생 될 수 있습니다 (호출을 통해 <xref:System.Windows.FrameworkContentElement.BringIntoView%2A>및 발생 <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>는 콘텐츠 호스트에서).</xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement.BringIntoView%2A> 마찬가지로, 논리적 트리 도우미 메서드로 <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName>.</xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName> 보기에 맞게 수정할 수 요소를 요청할 수 있습니다.       <xref:System.Windows.Controls.ListBox> <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>.</xref:System.Windows.Controls.ListBox.ScrollIntoView%2A> 관련 하지만 서로 다른 메서드를 구현 하</xref:System.Windows.Controls.ListBox> 는"
  syntax:
    content: public delegate void RequestBringIntoViewEventHandler(object sender, RequestBringIntoViewEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
