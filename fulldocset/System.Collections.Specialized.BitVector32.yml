### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.BitVector32
  id: BitVector32
  children:
  - System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)
  - System.Collections.Specialized.BitVector32.#ctor(System.Int32)
  - System.Collections.Specialized.BitVector32.CreateMask
  - System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  - System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  - System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  - System.Collections.Specialized.BitVector32.Data
  - System.Collections.Specialized.BitVector32.Equals(System.Object)
  - System.Collections.Specialized.BitVector32.GetHashCode
  - System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  - System.Collections.Specialized.BitVector32.Item(System.Int32)
  - System.Collections.Specialized.BitVector32.ToString
  - System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  langs:
  - csharp
  name: BitVector32
  nameWithType: BitVector32
  fullName: System.Collections.Specialized.BitVector32
  type: Struct
  summary: "32 비트 메모리에에서 부울 값과 small 정수를 저장 하는 간단한 구조를 제공 합니다."
  remarks: "BitVector32 보다 더 효율적입니다. <xref:System.Collections.BitArray>부울 값과 내부적으로 사용 되는 작은 정수에 대 한.</xref:System.Collections.BitArray> A <xref:System.Collections.BitArray>필요에 따라 무한정 증가할 수 있지만 클래스 인스턴스를 필요로 하는 메모리 및 성능 오버 헤드.</xref:System.Collections.BitArray> 반면, 한 BitVector32만 32 비트를 사용 합니다.       BitVector32 구조 섹션에서 작은 정수 또는 부울의 비트 플래그를 포함 하도록 중 하나만 설정할 수 있습니다. <xref:System.Collections.Specialized.BitVector32.Section>BitVector32에 창이 고이 연속 된 비트 <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>.</xref:System.Collections.Specialized.BitVector32.CreateSection%2A> 에 지정 된 최대 값을 포함할 수 있는 가장 작은 수의 구성</xref:System.Collections.Specialized.BitVector32.Section> 예를 들어 1의 최대 값을 가진 섹션 5의 최대 값을 가진 섹션은 세 개의 비트로 구성 하는 반면 1 비트만 구성 됩니다. 만들 수는 <xref:System.Collections.Specialized.BitVector32.Section>1 부울 값을 토대로 최대값이 적용 된 되므로 동일한 BitVector32에 정수 및 부울 값을 저장할 수 있습니다.</xref:System.Collections.Specialized.BitVector32.Section>       설정 된 섹션으로 비트 플래그를 설정 하는 하나에 대해 다른 멤버를 사용할 수 있지만 BitVector32에 대 한 일부 구성원을 사용할 수 있습니다. 예를 들어는 <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName>속성은 섹션으로 설정 된 BitVector32 인덱서입니다 및 <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName>속성은 비트 플래그 설정 된 BitVector32 인덱서입니다.</xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName> </xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName> <xref:System.Collections.Specialized.BitVector32.CreateMask%2A>일련의 개별 비트에 비트 플래그 설정 된 BitVector32에 액세스를 사용할 수 있는 마스크를 만듭니다.</xref:System.Collections.Specialized.BitVector32.CreateMask%2A>       섹션에는 예기치 않은 결과가 발생할 수 있습니다으로 설정 된 BitVector32에서 마스크를 사용 합니다."
  example:
  - "The following code example uses a BitVector32 as a collection of bit flags.  \n  \n [!code-cs[System.Collections.Specialized.BitVector32_BitFlags#1](~/add/codesnippet/csharp/t-system.collections.spe_10_1.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32_BitFlags#1](~/add/codesnippet/visualbasic/t-system.collections.spe_10_1.vb)]\n [!code-cpp[System.Collections.Specialized.BitVector32_BitFlags#1](~/add/codesnippet/cpp/t-system.collections.spe_10_1.cpp)]  \n  \n The following code example uses a BitVector32 as a collection of sections.  \n  \n [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/cpp/t-system.collections.spe_10_2.cpp)]\n [!code-cs[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/csharp/t-system.collections.spe_10_2.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/visualbasic/t-system.collections.spe_10_2.vb)]"
  syntax:
    content: public struct BitVector32
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)
  id: '#ctor(System.Collections.Specialized.BitVector32)'
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: BitVector32(BitVector32)
  nameWithType: BitVector32.BitVector32(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(BitVector32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> 가 기존 표현 되는 데이터를 포함 하는 구조 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> 구조입니다."
  remarks: "이 생성자는 o (1) 연산입니다."
  syntax:
    content: public BitVector32 (System.Collections.Specialized.BitVector32 value);
    parameters:
    - id: value
      type: System.Collections.Specialized.BitVector32
      description: "A <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> 복사할 데이터가 포함 된 구조입니다."
  overload: System.Collections.Specialized.BitVector32.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: BitVector32(Int32)
  nameWithType: BitVector32.BitVector32(Int32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> 정수로 표현 되는 데이터를 포함 하는 구조입니다."
  remarks: "이 생성자는 o (1) 연산입니다."
  syntax:
    content: public BitVector32 (int data);
    parameters:
    - id: data
      type: System.Int32
      description: "새 데이터를 나타내는 정수 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>합니다."
  overload: System.Collections.Specialized.BitVector32.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateMask
  id: CreateMask
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateMask()
  nameWithType: BitVector32.CreateMask()
  fullName: System.Collections.Specialized.BitVector32.CreateMask()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "일련의 개별 비트를 검색 하는 데 사용할 수 있는 마스크의 첫 번째 마스크 만듭니다는 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> 에 비트 플래그 설정 된 합니다."
  remarks: "사용 하 여 `CreateMask()` 계열의 첫 번째 마스크를 만들려고 하 고 `CreateMask(int)` 모든 후속 마스크에 대 한 합니다.       동일한 비트 플래그를 참조 하도록 여러 마스크를 만들 수 있습니다.       결과 마스크 격리 <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32> 만&1; 비트 플래그 비트 OR 연산을 사용 하 여 <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32> 여러 비트 플래그를 격리 하는 마스크를 만들 마스크를 결합할 수 있습니다.       마스크를 사용 하는 <xref:System.Collections.Specialized.BitVector32>있는으로 설정 된 섹션에는 예기치 않은 결과가 발생할 수 있습니다.</xref:System.Collections.Specialized.BitVector32>       이 메서드는 o (1) 작업."
  example:
  - "The following code example shows how to create and use masks.  \n  \n [!code-cs[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/csharp/m-system.collections.spe_3_1.cs)]\n [!code-cpp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/cpp/m-system.collections.spe_3_1.cpp)]\n [!code-vb[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/visualbasic/m-system.collections.spe_3_1.vb)]"
  syntax:
    content: public static int CreateMask ();
    parameters: []
    return:
      type: System.Int32
      description: "첫 번째 비트 플래그를 격리 하는 마스크는 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>합니다."
  overload: System.Collections.Specialized.BitVector32.CreateMask*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  id: CreateMask(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateMask(Int32)
  nameWithType: BitVector32.CreateMask(Int32)
  fullName: System.Collections.Specialized.BitVector32.CreateMask(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "일련의 개별 비트를 검색 하는 데 사용할 수 있는 마스크의 지정 된 마스크에 따라 마스크를 추가로 만듭니다는 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> 비트 플래그로 설정 됩니다."
  remarks: "사용 하 여 `CreateMask()` 계열의 첫 번째 마스크를 만들려고 하 고 `CreateMask(int)` 모든 후속 마스크에 대 한 합니다.       동일한 비트 플래그를 참조 하도록 여러 마스크를 만들 수 있습니다.       결과 마스크 격리 <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32> 만&1; 비트 플래그 비트 OR 연산을 사용 하 여 <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32> 여러 비트 플래그를 격리 하는 마스크를 만들 마스크를 결합할 수 있습니다.       마스크를 사용 하는 <xref:System.Collections.Specialized.BitVector32>있는으로 설정 된 섹션에는 예기치 않은 결과가 발생할 수 있습니다.</xref:System.Collections.Specialized.BitVector32>       이 메서드는 o (1) 작업."
  example:
  - "The following code example shows how to create and use masks.  \n  \n [!code-cs[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/csharp/m-system.collections.spe_5_1.cs)]\n [!code-cpp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/cpp/m-system.collections.spe_5_1.cpp)]\n [!code-vb[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/visualbasic/m-system.collections.spe_5_1.vb)]"
  syntax:
    content: public static int CreateMask (int previous);
    parameters:
    - id: previous
      type: System.Int32
      description: "이전 비트 플래그를 나타내는 마스크입니다."
    return:
      type: System.Int32
      description: "비트를 격리 하는 마스크는 다음의 플래그 <code> previous </code> 에 결과를 가리키는 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>합니다."
  overload: System.Collections.Specialized.BitVector32.CreateMask*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>previous</code>마지막 비트 플래그를 나타내는 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  id: CreateSection(System.Int16)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateSection(Int16)
  nameWithType: BitVector32.CreateSection(Int16)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "첫 번째 만듭니다 <xref:System.Collections.Specialized.BitVector32.Section>일련의 작은 정수를 포함 하는 섹션.</xref:System.Collections.Specialized.BitVector32.Section>"
  remarks: "A <xref:System.Collections.Specialized.BitVector32.Section>는 창에는 <xref:System.Collections.Specialized.BitVector32>CreateSection에 지정 된 최대 값을 포함할 수 있는 연속 된 비트 수가 가장 작은으로 구성 됩니다.</xref:System.Collections.Specialized.BitVector32> </xref:System.Collections.Specialized.BitVector32.Section> 예를 들어 1의 최대 값을 가진 섹션 5의 최대 값을 가진 섹션은 세 개의 비트로 구성 하는 반면 1 비트만 구성 됩니다. <xref:System.Collections.Specialized.BitVector32.Section>Boolean, 역할을 하는 1의 최대값이 적용 된 되므로 저장소 정수 및 부울 <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32> 같은 수</xref:System.Collections.Specialized.BitVector32.Section> 를 만들 수 있습니다.       하지만 섹션이 이미 있는 경우는 <xref:System.Collections.Specialized.BitVector32>, 해당 섹션에 액세스할 수는; 섹션에서는 겹치는 예기치 않은 결과 발생할 수 있습니다는.</xref:System.Collections.Specialized.BitVector32>       이 메서드는 o (1) 작업."
  example:
  - "The following code example uses a <xref:System.Collections.Specialized.BitVector32> as a collection of sections.  \n  \n [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/cpp/m-system.collections.spe_18_1.cpp)]\n [!code-cs[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/csharp/m-system.collections.spe_18_1.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/visualbasic/m-system.collections.spe_18_1.vb)]"
  syntax:
    content: public static System.Collections.Specialized.BitVector32.Section CreateSection (short maxValue);
    parameters:
    - id: maxValue
      type: System.Int16
      description: "새 <xref:System.Collections.Specialized.BitVector32.Section>.</xref:System.Collections.Specialized.BitVector32.Section> 에 대 한 최대 값을 지정 하는 16 비트 부호 있는 정수"
    return:
      type: System.Collections.Specialized.BitVector32.Section
      description: "A <xref:System.Collections.Specialized.BitVector32.Section>0에서 숫자를 포함 될 수 있는 <code> maxValue </code>.</xref:System.Collections.Specialized.BitVector32.Section>"
  overload: System.Collections.Specialized.BitVector32.CreateSection*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>maxValue</code>가 1 보다 작습니다."
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  id: CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateSection(Int16,BitVector32+Section)
  nameWithType: BitVector32.CreateSection(Int16,BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16,BitVector32+Section)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  syntax:
    content: public static System.Collections.Specialized.BitVector32.Section CreateSection (short maxValue, System.Collections.Specialized.BitVector32.Section previous);
    parameters:
    - id: maxValue
      type: System.Int16
      description: "추가할 수 있습니다."
    - id: previous
      type: System.Collections.Specialized.BitVector32.Section
      description: "추가할 수 있습니다."
    return:
      type: System.Collections.Specialized.BitVector32.Section
      description: "추가할 수 있습니다."
  overload: System.Collections.Specialized.BitVector32.CreateSection*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Data
  id: Data
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Data
  nameWithType: BitVector32.Data
  fullName: System.Collections.Specialized.BitVector32.Data
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "값을 가져옵니다는 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> 나타내는 정수입니다."
  remarks: "개별 섹션의 값에 액세스 또는 비트 플래그를 사용 하 여 <xref:System.Collections.Specialized.BitVector32.Item%2A>속성.</xref:System.Collections.Specialized.BitVector32.Item%2A>       이 속성의 값을 검색 하는 것은 o (1) 작업입니다."
  syntax:
    content: public int Data { get; }
    return:
      type: System.Int32
      description: "값은 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> 나타내는 정수입니다."
  overload: System.Collections.Specialized.BitVector32.Data*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: BitVector32.Equals(Object)
  fullName: System.Collections.Specialized.BitVector32.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "지정된 된 개체가 같은지 여부를 결정은 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>합니다."
  remarks: "개체 `o` 같은 것으로 간주 되는 <xref:System.Collections.Specialized.BitVector32>경우 유형의 `o` 와 호환 되는 <xref:System.Collections.Specialized.BitVector32>유형 경우의 값 `o` <xref:System.Collections.Specialized.BitVector32.Data%2A>.</xref:System.Collections.Specialized.BitVector32.Data%2A> 값과 같은</xref:System.Collections.Specialized.BitVector32> </xref:System.Collections.Specialized.BitVector32>       이 메서드는 o (1) 작업."
  example:
  - "The following code example compares a <xref:System.Collections.Specialized.BitVector32> with another <xref:System.Collections.Specialized.BitVector32> and with an <xref:System.Int32>.  \n  \n [!code-cpp[System.Collections.Specialized.BitVector32.Equals#1](~/add/codesnippet/cpp/m-system.collections.spe_34_1.cpp)]\n [!code-cs[System.Collections.Specialized.BitVector32.Equals#1](~/add/codesnippet/csharp/m-system.collections.spe_34_1.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32.Equals#1](~/add/codesnippet/visualbasic/m-system.collections.spe_34_1.vb)]"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "현재와 비교할 개체 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정한 개체가 같으면는 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Collections.Specialized.BitVector32.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.GetHashCode
  id: GetHashCode
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: BitVector32.GetHashCode()
  fullName: System.Collections.Specialized.BitVector32.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "에 대 한 해시 함수 역할을 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>합니다."
  remarks: "<xref:System.Collections.Specialized.BitVector32> <xref:System.Collections.Specialized.BitVector32.Data%2A>.</xref:System.Collections.Specialized.BitVector32.Data%2A> 값에 기반</xref:System.Collections.Specialized.BitVector32> 의 해시 코드 두 인스턴스 <xref:System.Collections.Specialized.BitVector32>에 대해 같은 값으로 <xref:System.Collections.Specialized.BitVector32.Data%2A>동일한 해시 코드를 생성할 수도 됩니다.</xref:System.Collections.Specialized.BitVector32.Data%2A> </xref:System.Collections.Specialized.BitVector32>       이 메서드는 o (1) 작업."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "에 대 한 해시 코드는 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>합니다."
  overload: System.Collections.Specialized.BitVector32.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  id: Item(System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Item(BitVector32+Section)
  nameWithType: BitVector32.Item(BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.Item(BitVector32+Section)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  syntax:
    content: public int this[System.Collections.Specialized.BitVector32.Section section] { get; set; }
    parameters:
    - id: section
      type: System.Collections.Specialized.BitVector32.Section
      description: "추가할 수 있습니다."
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  overload: System.Collections.Specialized.BitVector32.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: BitVector32.Item(Int32)
  fullName: System.Collections.Specialized.BitVector32.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "지정 된 마스크가 나타내는 비트 플래그의 상태를 가져오거나 설정 합니다."
  remarks: "항목 [섹션] 속성은에 대 한 인덱서는 <xref:System.Collections.Specialized.BitVector32>섹션으로 설정 된 이며 항목 [int] 속성에 대 한 인덱서는 <xref:System.Collections.Specialized.BitVector32>에 비트 플래그 설정 된.</xref:System.Collections.Specialized.BitVector32> </xref:System.Collections.Specialized.BitVector32>       이 속성을 사용 하면 한 <xref:System.Collections.Specialized.BitVector32>를으로 설정 된 섹션에는 예기치 않은 결과가 발생할 수 있습니다.</xref:System.Collections.Specialized.BitVector32>       C# 언어는 키워드를 사용 하 여 항목 속성을 구현 하는 대신 인덱서를 정의 합니다. Visual Basic에서는 동일한 인덱싱 기능을 기본 속성으로 항목을 구현 합니다.       이 속성의 값을 검색 하 하는 것은 o (1) 연산입니다. o (1) 작업 이기도 속성을 설정 합니다."
  syntax:
    content: public bool this[int bit] { get; set; }
    parameters:
    - id: bit
      type: System.Int32
      description: "가져오거나 설정할 비트를 지정 하는 마스크입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정한 비트 플래그 (1); 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Collections.Specialized.BitVector32.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.ToString
  id: ToString
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: ToString()
  nameWithType: BitVector32.ToString()
  fullName: System.Collections.Specialized.BitVector32.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "현재를 나타내는 문자열을 반환 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>합니다."
  remarks: "이 메서드를 재정의 <xref:System.Object.ToString%2A?displayProperty=fullName>.</xref:System.Object.ToString%2A?displayProperty=fullName>       이 메서드는 o (1) 작업."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "현재 나타내는 string <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>합니다."
  overload: System.Collections.Specialized.BitVector32.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  id: ToString(System.Collections.Specialized.BitVector32)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: ToString(BitVector32)
  nameWithType: BitVector32.ToString(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.ToString(BitVector32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "지정 된을 나타내는 문자열을 반환 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>합니다."
  remarks: "이 메서드는 o (1) 작업."
  syntax:
    content: public static string ToString (System.Collections.Specialized.BitVector32 value);
    parameters:
    - id: value
      type: System.Collections.Specialized.BitVector32
      description: "<xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> 를 나타내는입니다."
    return:
      type: System.String
      description: "지정 된 나타내는 string <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>합니다."
  overload: System.Collections.Specialized.BitVector32.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: BitVector32(BitVector32)
  nameWithType: BitVector32.BitVector32(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(BitVector32)
- uid: System.Collections.Specialized.BitVector32
  parent: System.Collections.Specialized
  isExternal: false
  name: BitVector32
  nameWithType: BitVector32
  fullName: System.Collections.Specialized.BitVector32
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: BitVector32(Int32)
  nameWithType: BitVector32.BitVector32(Int32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Specialized.BitVector32.CreateMask
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateMask()
  nameWithType: BitVector32.CreateMask()
  fullName: System.Collections.Specialized.BitVector32.CreateMask()
- uid: System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateMask(Int32)
  nameWithType: BitVector32.CreateMask(Int32)
  fullName: System.Collections.Specialized.BitVector32.CreateMask(Int32)
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateSection(Int16)
  nameWithType: BitVector32.CreateSection(Int16)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16)
- uid: System.Collections.Specialized.BitVector32.Section
  parent: System.Collections.Specialized
  isExternal: false
  name: BitVector32+Section
  nameWithType: BitVector32+Section
  fullName: System.Collections.Specialized.BitVector32+Section
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateSection(Int16,BitVector32+Section)
  nameWithType: BitVector32.CreateSection(Int16,BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16,BitVector32+Section)
- uid: System.Collections.Specialized.BitVector32.Data
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Data
  nameWithType: BitVector32.Data
  fullName: System.Collections.Specialized.BitVector32.Data
- uid: System.Collections.Specialized.BitVector32.Equals(System.Object)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Equals(Object)
  nameWithType: BitVector32.Equals(Object)
  fullName: System.Collections.Specialized.BitVector32.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Specialized.BitVector32.GetHashCode
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: GetHashCode()
  nameWithType: BitVector32.GetHashCode()
  fullName: System.Collections.Specialized.BitVector32.GetHashCode()
- uid: System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Item(BitVector32+Section)
  nameWithType: BitVector32.Item(BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.Item(BitVector32+Section)
- uid: System.Collections.Specialized.BitVector32.Item(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Item(Int32)
  nameWithType: BitVector32.Item(Int32)
  fullName: System.Collections.Specialized.BitVector32.Item(Int32)
- uid: System.Collections.Specialized.BitVector32.ToString
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: ToString()
  nameWithType: BitVector32.ToString()
  fullName: System.Collections.Specialized.BitVector32.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: ToString(BitVector32)
  nameWithType: BitVector32.ToString(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.ToString(BitVector32)
- uid: System.Collections.Specialized.BitVector32.#ctor*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: BitVector32
  nameWithType: BitVector32.BitVector32
- uid: System.Collections.Specialized.BitVector32.CreateMask*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateMask
  nameWithType: BitVector32.CreateMask
- uid: System.Collections.Specialized.BitVector32.CreateSection*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateSection
  nameWithType: BitVector32.CreateSection
- uid: System.Collections.Specialized.BitVector32.Data*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Data
  nameWithType: BitVector32.Data
- uid: System.Collections.Specialized.BitVector32.Equals*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Equals
  nameWithType: BitVector32.Equals
- uid: System.Collections.Specialized.BitVector32.GetHashCode*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: GetHashCode
  nameWithType: BitVector32.GetHashCode
- uid: System.Collections.Specialized.BitVector32.Item*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Item
  nameWithType: BitVector32.Item
- uid: System.Collections.Specialized.BitVector32.ToString*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: ToString
  nameWithType: BitVector32.ToString
