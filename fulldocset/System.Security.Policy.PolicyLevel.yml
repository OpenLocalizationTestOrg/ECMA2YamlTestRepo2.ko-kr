### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.PolicyLevel
  id: PolicyLevel
  children:
  - System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongName)
  - System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)
  - System.Security.Policy.PolicyLevel.AddNamedPermissionSet(System.Security.NamedPermissionSet)
  - System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(System.String,System.Security.PermissionSet)
  - System.Security.Policy.PolicyLevel.CreateAppDomainLevel
  - System.Security.Policy.PolicyLevel.FromXml(System.Security.SecurityElement)
  - System.Security.Policy.PolicyLevel.FullTrustAssemblies
  - System.Security.Policy.PolicyLevel.GetNamedPermissionSet(System.String)
  - System.Security.Policy.PolicyLevel.Label
  - System.Security.Policy.PolicyLevel.NamedPermissionSets
  - System.Security.Policy.PolicyLevel.Recover
  - System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongName)
  - System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)
  - System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.Security.NamedPermissionSet)
  - System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.String)
  - System.Security.Policy.PolicyLevel.Reset
  - System.Security.Policy.PolicyLevel.Resolve(System.Security.Policy.Evidence)
  - System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  - System.Security.Policy.PolicyLevel.RootCodeGroup
  - System.Security.Policy.PolicyLevel.StoreLocation
  - System.Security.Policy.PolicyLevel.ToXml
  - System.Security.Policy.PolicyLevel.Type
  langs:
  - csharp
  name: PolicyLevel
  nameWithType: PolicyLevel
  fullName: System.Security.Policy.PolicyLevel
  type: Class
  summary: "공용 언어 런타임에 대 한 보안 정책 수준을 나타냅니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "> [!IMPORTANT]>&0;부터 [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], 컴퓨터에 대 한 보안 정책을 제공 하지는 공용 언어 런타임 (CLR). 사용 하는 것이 좋습니다 [Windows 소프트웨어 제한 정책 (SRP)](http://go.microsoft.com/fwlink/?LinkId=178101) 또는 [AppLocker](http://go.microsoft.com/fwlink/?LinkId=178102) CLR 보안 정책에 대 한 대체 값으로. 이 항목의 정보는.NET Framework 3.5 및 이전; 버전에 적용 됩니다. 에 적용 되지 않습니다는 [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] 이상. 변경 내용과 기타 변경 내용에 대 한 자세한 내용은 참조 [보안 변경 내용](~/add/includes/ajax-current-ext-md.md)합니다.       가장 높은 수준의 보안 정책에는 엔터프라이즈 수준입니다. 계층의 하위 수준 정책 제한 사항을 세부적 있지만 상위 수준에서 허용 하는 보다 많은 권한을 부여 하지 않을 수 있습니다. 다음 정책 수준 구현 됩니다. 1.  엔터프라이즈: 엔터프라이즈 내에서 모든 관리 되는 코드에 대 한 보안 정책입니다.      2.  컴퓨터: 컴퓨터에서 실행 되는 모든 관리 코드에 대 한 보안 정책입니다.      3.  사용자: 사용자가 모든 관리 코드에 대 한 보안 정책을 실행 합니다.      4.  응용 프로그램 도메인: 응용 프로그램에서 모든 관리 코드에 대 한 보안 정책입니다.       정책 수준은 코드 그룹을 단일 루트 트리로 구성 된 집합으로 구성 (참조 <xref:System.Security.Policy.CodeGroup>), 코드 그룹에 속한 코드에 부여할 사용 권한을 지정 하기 위해 코드 그룹에서 참조 되는 명명 된 권한 집합의 집합 및 완전 신뢰 어셈블리 목록입니다.</xref:System.Security.Policy.CodeGroup>       사용 하 여 <xref:System.Security.SecurityManager.PolicyHierarchy%2A?displayProperty=fullName>정책 수준을 열거 합니다.</xref:System.Security.SecurityManager.PolicyHierarchy%2A?displayProperty=fullName>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class PolicyLevel
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongName)
  id: AddFullTrustAssembly(System.Security.Policy.StrongName)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: AddFullTrustAssembly(StrongName)
  nameWithType: PolicyLevel.AddFullTrustAssembly(StrongName)
  fullName: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(StrongName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "추가 <xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> 에 해당 하는 지정 된 <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref> 목록이 <xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> 평가 해야 하는 어셈블리의 그룹의 구성원 인지 여부를 확인 하는 데 사용 되는 개체입니다."
  remarks: "이러한 버전에서 완전 신뢰 어셈블리 목록 사용 되지 않으므로 AddFullTrustAssembly 메서드 버전의.NET Framework 2.0 이상에서는 지원 되지 않습니다."
  syntax:
    content: public void AddFullTrustAssembly (System.Security.Policy.StrongName sn);
    parameters:
    - id: sn
      type: System.Security.Policy.StrongName
      description: "<xref href=&quot;System.Security.Policy.StrongName&quot;> </xref> 만드는 데는 <xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> 의 목록에 추가할 <xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> 평가 해야 하는 어셈블리의 그룹의 구성원 인지 여부를 확인 하는 데 사용 되는 개체입니다."
  overload: System.Security.Policy.PolicyLevel.AddFullTrustAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>sn</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Security.Policy.StrongName&quot;> </xref> 에 지정 된는 <code> sn </code> 매개 변수를 이미 완전히 신뢰 합니다."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)
  id: AddFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: AddFullTrustAssembly(StrongNameMembershipCondition)
  nameWithType: PolicyLevel.AddFullTrustAssembly(StrongNameMembershipCondition)
  fullName: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(StrongNameMembershipCondition)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "지정 된 추가 <xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> 목록이 <xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> 평가 해야 하는 어셈블리의 그룹의 구성원 인지 여부를 확인 하는 데 사용 되는 개체입니다."
  remarks: "이러한 버전에서 완전 신뢰 어셈블리 목록 사용 되지 않으므로 AddFullTrustAssembly 메서드 버전의.NET Framework 2.0 이상에서는 지원 되지 않습니다."
  syntax:
    content: public void AddFullTrustAssembly (System.Security.Policy.StrongNameMembershipCondition snMC);
    parameters:
    - id: snMC
      type: System.Security.Policy.StrongNameMembershipCondition
      description: "<xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> 의 목록에 추가할 <xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> 평가 해야 하는 어셈블리의 그룹의 구성원 인지 여부를 확인 하는 데 사용 되는 개체입니다."
  overload: System.Security.Policy.PolicyLevel.AddFullTrustAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>snMC</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> 에 지정 된는 <code> snMC </code> 매개 변수를 이미 완전히 신뢰 합니다."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.AddNamedPermissionSet(System.Security.NamedPermissionSet)
  id: AddNamedPermissionSet(System.Security.NamedPermissionSet)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: AddNamedPermissionSet(NamedPermissionSet)
  nameWithType: PolicyLevel.AddNamedPermissionSet(NamedPermissionSet)
  fullName: System.Security.Policy.PolicyLevel.AddNamedPermissionSet(NamedPermissionSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "추가 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 현재 정책 수준에 있습니다."
  remarks: "명명 된 권한 집합 범위 수준 정책 수준입니다."
  syntax:
    content: public void AddNamedPermissionSet (System.Security.NamedPermissionSet permSet);
    parameters:
    - id: permSet
      type: System.Security.NamedPermissionSet
      description: "<xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 현재 정책 수준에 추가 합니다."
  overload: System.Security.Policy.PolicyLevel.AddNamedPermissionSet*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>permSet</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> permSet </code> 매개 변수 이름이 같은 기존 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 에 <xref href=&quot;System.Security.Policy.PolicyLevel&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(System.String,System.Security.PermissionSet)
  id: ChangeNamedPermissionSet(System.String,System.Security.PermissionSet)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: ChangeNamedPermissionSet(String,PermissionSet)
  nameWithType: PolicyLevel.ChangeNamedPermissionSet(String,PermissionSet)
  fullName: System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(String,PermissionSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "대체는 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 지정 된 현재 정책 수준에서 <xref href=&quot;System.Security.PermissionSet&quot;> </xref>합니다."
  syntax:
    content: public System.Security.NamedPermissionSet ChangeNamedPermissionSet (string name, System.Security.PermissionSet pSet);
    parameters:
    - id: name
      type: System.String
      description: "이름에서 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 교체할 수 있습니다."
    - id: pSet
      type: System.Security.PermissionSet
      description: "<xref href=&quot;System.Security.PermissionSet&quot;> </xref> 대체 하는 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 에 지정 된는 `name` 매개 변수입니다."
    return:
      type: System.Security.NamedPermissionSet
      description: "복사본은 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 하는 대체 되었습니다."
  overload: System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <code>pSet</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> name </code> 매개 변수는 예약된 된 권한 집합의 이름과 동일 하기.       -또는- <xref href=&quot;System.Security.PermissionSet&quot;> </xref> 에 지정 된는 <code> pSet </code> 매개 변수를 찾을 수 없습니다."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.CreateAppDomainLevel
  id: CreateAppDomainLevel
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: CreateAppDomainLevel()
  nameWithType: PolicyLevel.CreateAppDomainLevel()
  fullName: System.Security.Policy.PolicyLevel.CreateAppDomainLevel()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "응용 프로그램 도메인 정책 수준에서 사용 하기 위해 새 정책 수준을 만듭니다."
  remarks: "이 메서드가 만드는 새 <xref:System.Security.Policy.PolicyLevel>와 <xref:System.Security.Policy.PolicyLevel.Label%2A>&quot;AppDomain&quot;.</xref:System.Security.Policy.PolicyLevel.Label%2A> </xref:System.Security.Policy.PolicyLevel> 새 <xref:System.Security.Policy.PolicyLevel>동일에 처음 포함 될 <xref:System.Security.NamedPermissionSet>기본 컴퓨터 정책 및 됩니다 처럼 개체가 부여 하는 단일 루트 코드 그룹 `FullTrust` 모든 코드에.</xref:System.Security.NamedPermissionSet> </xref:System.Security.Policy.PolicyLevel>"
  syntax:
    content: public static System.Security.Policy.PolicyLevel CreateAppDomainLevel ();
    parameters: []
    return:
      type: System.Security.Policy.PolicyLevel
      description: "새로 만든 <xref href=&quot;System.Security.Policy.PolicyLevel&quot;> </xref>합니다."
  overload: System.Security.Policy.PolicyLevel.CreateAppDomainLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: PolicyLevel.FromXml(SecurityElement)
  fullName: System.Security.Policy.PolicyLevel.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "XML 인코딩에서 특정된 상태와 보안 개체를 다시 만듭니다."
  syntax:
    content: public void FromXml (System.Security.SecurityElement e);
    parameters:
    - id: e
      type: System.Security.SecurityElement
      description: "XML은 보안 개체를 다시 만드는 데 사용할 인코딩입니다."
  overload: System.Security.Policy.PolicyLevel.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>e</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Security.SecurityElement&quot;> </xref> 에 지정 된는 <code> e </code> 매개 변수가 올바르지 않습니다."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.FullTrustAssemblies
  id: FullTrustAssemblies
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: FullTrustAssemblies
  nameWithType: PolicyLevel.FullTrustAssemblies
  fullName: System.Security.Policy.PolicyLevel.FullTrustAssemblies
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "목록을 가져옵니다 <xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> 보안 정책을 확인 하는 데 사용 되는 어셈블리의 그룹의 구성원 인지 여부를 확인 하는 데 사용 되는 개체입니다."
  remarks: "FullTrustAssemblies 목록에 없는 어셈블리의 보안 정책 확인 하는 동안 완전 신뢰 수준 부여 되지만 보안 정책 시스템에서 직접 확인할 때 완전 신뢰를 자동으로 부여 되지 않습니다.       이러한 버전에서 완전 신뢰 어셈블리 목록 사용 되지 않으므로 FullTrustAssemblies 속성의.NET Framework 2.0 이상 버전에서 지원 되지 않습니다."
  syntax:
    content: public System.Collections.IList FullTrustAssemblies { get; }
    return:
      type: System.Collections.IList
      description: "목록이 <xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> 보안 정책을 확인 하는 데 사용 되는 어셈블리의 그룹의 구성원 인지 여부를 확인 하는 데 사용 되는 개체입니다. 이러한 어셈블리 목록에 없는 어셈블리의 보안 정책 확인 하는 동안 완전 신뢰를 부여 됩니다."
  overload: System.Security.Policy.PolicyLevel.FullTrustAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.GetNamedPermissionSet(System.String)
  id: GetNamedPermissionSet(System.String)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: GetNamedPermissionSet(String)
  nameWithType: PolicyLevel.GetNamedPermissionSet(String)
  fullName: System.Security.Policy.PolicyLevel.GetNamedPermissionSet(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "반환 된 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 지정 된 이름의 현재 정책 수준에 있습니다."
  syntax:
    content: public System.Security.NamedPermissionSet GetNamedPermissionSet (string name);
    parameters:
    - id: name
      type: System.String
      description: "이름에서 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 찾으려고 합니다."
    return:
      type: System.Security.NamedPermissionSet
      description: "<xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 검색 되지 않으면, 지정 된 이름으로 현재 정책 수준에서 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Policy.PolicyLevel.GetNamedPermissionSet*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.Label
  id: Label
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: Label
  nameWithType: PolicyLevel.Label
  fullName: System.Security.Policy.PolicyLevel.Label
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "정책 수준에 대 한 설명 레이블을 가져옵니다."
  remarks: "레이블은 정책 수준을 식별 하는 관리자가 사용 됩니다."
  syntax:
    content: public string Label { get; }
    return:
      type: System.String
      description: "정책 수준과 관련 된 레이블입니다."
  overload: System.Security.Policy.PolicyLevel.Label*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.NamedPermissionSets
  id: NamedPermissionSets
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: NamedPermissionSets
  nameWithType: PolicyLevel.NamedPermissionSets
  fullName: System.Security.Policy.PolicyLevel.NamedPermissionSets
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "정책 수준에 대해 정의 된 명명 된 권한 집합의 목록을 가져옵니다."
  syntax:
    content: public System.Collections.IList NamedPermissionSets { get; }
    return:
      type: System.Collections.IList
      description: "목록 정책 수준에 대해 정의 된 명명 된 권한 집합입니다."
  overload: System.Security.Policy.PolicyLevel.NamedPermissionSets*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.Recover
  id: Recover
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: Recover()
  nameWithType: PolicyLevel.Recover()
  fullName: System.Security.Policy.PolicyLevel.Recover()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "이 구성 파일을 대체 <xref href=&quot;System.Security.Policy.PolicyLevel&quot;> </xref> 마지막 상태에 저장 된 마지막 백업 (마지막으로 저장 하기 전에 정책의 상태를 반영 하며) 및 반환 합니다."
  remarks: "이 메서드가 현재 <xref:System.Security.Policy.PolicyLevel>.</xref:System.Security.Policy.PolicyLevel> 를 수정할 수 없습니다. 업데이트는 <xref:System.Security.Policy.PolicyLevel>개체의 파일 및 <xref:System.Security.Policy.PolicyLevel>보안 시스템에서 정책 평가를 사용 하 여.</xref:System.Security.Policy.PolicyLevel> </xref:System.Security.Policy.PolicyLevel>       caspol에서이 메서드는 사용-복구 옵션 (참조 [Caspol.exe (코드 액세스 보안 정책 도구)](~/add/includes/ajax-current-ext-md.md))."
  syntax:
    content: public void Recover ();
    parameters: []
  overload: System.Security.Policy.PolicyLevel.Recover*
  exceptions:
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "정책 수준에 유효한 구성 파일을 않아도 됩니다."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongName)
  id: RemoveFullTrustAssembly(System.Security.Policy.StrongName)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: RemoveFullTrustAssembly(StrongName)
  nameWithType: PolicyLevel.RemoveFullTrustAssembly(StrongName)
  fullName: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(StrongName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "지정 된 어셈블리를 제거 <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref> 어셈블리의 목록에서 정책 수준을 사용 하 여 정책을 평가 합니다."
  remarks: "이러한 버전에서 완전 신뢰 어셈블리 목록 사용 되지 않으므로 RemoveFullTrustAssembly 메서드 버전의.NET Framework 2.0 이상에서는 지원 되지 않습니다."
  syntax:
    content: public void RemoveFullTrustAssembly (System.Security.Policy.StrongName sn);
    parameters:
    - id: sn
      type: System.Security.Policy.StrongName
      description: "<xref href=&quot;System.Security.Policy.StrongName&quot;> </xref> 정책을 평가 하는 데 사용 되는 어셈블리의 목록에서 제거할 어셈블리의 합니다."
  overload: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>sn</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "사용 하 여 어셈블리는 <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref> 에 지정 된는 <code> sn </code> 매개 변수 완전 신뢰가 부여 되지 않습니다."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)
  id: RemoveFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: RemoveFullTrustAssembly(StrongNameMembershipCondition)
  nameWithType: PolicyLevel.RemoveFullTrustAssembly(StrongNameMembershipCondition)
  fullName: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(StrongNameMembershipCondition)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "지정 된 어셈블리를 제거 <xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> 어셈블리의 목록에서 정책 수준을 사용 하 여 정책을 평가 합니다."
  remarks: "이러한 버전에서 완전 신뢰 어셈블리 목록 사용 되지 않으므로 RemoveFullTrustAssembly 메서드 버전의.NET Framework 2.0 이상에서는 지원 되지 않습니다."
  syntax:
    content: public void RemoveFullTrustAssembly (System.Security.Policy.StrongNameMembershipCondition snMC);
    parameters:
    - id: snMC
      type: System.Security.Policy.StrongNameMembershipCondition
      description: "<xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> 정책을 평가 하는 데 사용 되는 어셈블리의 목록에서 제거할 어셈블리의 합니다."
  overload: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>snMC</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> 에 지정 된는 <code> snMC </code> 매개 변수 완전 신뢰가 부여 되지 않습니다."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.Security.NamedPermissionSet)
  id: RemoveNamedPermissionSet(System.Security.NamedPermissionSet)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: RemoveNamedPermissionSet(NamedPermissionSet)
  nameWithType: PolicyLevel.RemoveNamedPermissionSet(NamedPermissionSet)
  fullName: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(NamedPermissionSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "지정 된 제거 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 현재 정책 수준에서 합니다."
  syntax:
    content: public System.Security.NamedPermissionSet RemoveNamedPermissionSet (System.Security.NamedPermissionSet permSet);
    parameters:
    - id: permSet
      type: System.Security.NamedPermissionSet
      description: "<xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 현재 정책 수준에서 제거 하려면."
    return:
      type: System.Security.NamedPermissionSet
      description: "<xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 는 제거 되었습니다."
  overload: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 에 지정 된는 <code> permSet </code> 매개 변수를 찾을 수 없습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>permSet</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.String)
  id: RemoveNamedPermissionSet(System.String)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: RemoveNamedPermissionSet(String)
  nameWithType: PolicyLevel.RemoveNamedPermissionSet(String)
  fullName: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "제거는 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 현재 정책 수준에서 지정된 된 이름을 사용 합니다."
  syntax:
    content: public System.Security.NamedPermissionSet RemoveNamedPermissionSet (string name);
    parameters:
    - id: name
      type: System.String
      description: "이름을 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 를 제거 합니다."
    return:
      type: System.Security.NamedPermissionSet
      description: "<xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 는 제거 되었습니다."
  overload: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> name </code> 매개 변수는 예약된 된 권한 집합의 이름과 동일 하기.       -또는-는 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 지정 된 이름의 찾을 수 없습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.Reset
  id: Reset
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: Reset()
  nameWithType: PolicyLevel.Reset()
  fullName: System.Security.Policy.PolicyLevel.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "현재 정책 수준을 기본 상태로 돌아갑니다."
  remarks: "기본 상태는 각 정책 수준은 서로 다릅니다."
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Security.Policy.PolicyLevel.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.Resolve(System.Security.Policy.Evidence)
  id: Resolve(System.Security.Policy.Evidence)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: Resolve(Evidence)
  nameWithType: PolicyLevel.Resolve(Evidence)
  fullName: System.Security.Policy.PolicyLevel.Resolve(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "정책 수준에 대 한 증거에 따라 정책을 확인 하 고 결과 반환 <xref href=&quot;System.Security.Policy.PolicyStatement&quot;> </xref>합니다."
  remarks: "해결 정책 수준에 대 한 기본 정책 확인 작업입니다. 입력으로 증명 정보 집합을 지정 된 경우이 메서드는 루트에서 시작 하 고 일치 하는 코드 그룹의 멤버 자격 조건 테스트 합니다. 일치 하는 코드에서 발생 하는 사용 권한 조합 그룹화를 생성 한 <xref:System.Security.Policy.PolicyStatement>반환 되는.</xref:System.Security.Policy.PolicyStatement>       코드에 권한을 부여할 보안 정책을 사용 권한에 대 한 코드 요청과 함께 모든 적용 가능한 정책 수준에 대해 확인 된 정책 문을 사용 합니다."
  example:
  - "The following code shows the use of the Resolve method. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyLevel> class.  \n  \n [!code-cpp[system.Security.policy.policylevel#13](~/add/codesnippet/cpp/m-system.security.policy_27_1.cpp)]\n [!code-cs[system.Security.policy.policylevel#13](~/add/codesnippet/csharp/m-system.security.policy_27_1.cs)]\n [!code-vb[system.Security.policy.policylevel#13](~/add/codesnippet/visualbasic/m-system.security.policy_27_1.vb)]"
  syntax:
    content: public System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "<xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> 확인 하는 데는 <xref href=&quot;System.Security.Policy.PolicyLevel&quot;> </xref>합니다."
    return:
      type: System.Security.Policy.PolicyStatement
      description: "그 결과 <xref href=&quot;System.Security.Policy.PolicyStatement&quot;> </xref>합니다."
  overload: System.Security.Policy.PolicyLevel.Resolve*
  exceptions:
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "정책 수준 단독으로 표시 된 여러 개의 일치 하는 코드 그룹을 포함 합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>evidence</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  id: ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: ResolveMatchingCodeGroups(Evidence)
  nameWithType: PolicyLevel.ResolveMatchingCodeGroups(Evidence)
  fullName: System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "정책 수준에서 정책을 확인 하 고 증거와 일치 하는 코드 그룹 트리의 루트를 반환 합니다."
  remarks: "증명 정보는 특정 집합에 대 한 정책 수준에서 코드 그룹의 효과 분석 하려면이 메서드를 사용할 수 있습니다. 예를 들어 보안 정책 어셈블리 필요한 최소한의 코드 요청 권한을 부여 하지 않으면, 하는 경우 문제는 여기서 정확 하 게 코드 그룹을 검사 하 여 하기가 어려울 수 있습니다.       이 메서드는 자식 코드 그룹을 가질 수 있는 코드 그룹을 반환 하므로 관리자 코드 그룹 및 해당 자식 코드 그룹을 검토 하 고 일치 하는 코드 그룹을 결정 하는 불가능 합니다."
  syntax:
    content: public System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "<xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> 정책을 확인 하는 데 사용 합니다."
    return:
      type: System.Security.Policy.CodeGroup
      description: "A <xref href=&quot;System.Security.Policy.CodeGroup&quot;> </xref> 지정한 증명 정보를 일치 하는 코드 그룹 트리의 루트를 나타내는입니다."
  overload: System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups*
  exceptions:
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "정책 수준 단독으로 표시 된 여러 개의 일치 하는 코드 그룹을 포함 합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>evidence</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.RootCodeGroup
  id: RootCodeGroup
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: RootCodeGroup
  nameWithType: PolicyLevel.RootCodeGroup
  fullName: System.Security.Policy.PolicyLevel.RootCodeGroup
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "정책 수준의 루트 코드 그룹을 가져오거나 설정 합니다."
  remarks: "모든 정책 수준에 하나의 루트 <xref:System.Security.Policy.CodeGroup>.</xref:System.Security.Policy.CodeGroup>"
  syntax:
    content: public System.Security.Policy.CodeGroup RootCodeGroup { get; set; }
    return:
      type: System.Security.Policy.CodeGroup
      description: "<xref href=&quot;System.Security.Policy.CodeGroup&quot;> </xref> 정책 수준의 코드 그룹 트리의 루트입니다."
  overload: System.Security.Policy.PolicyLevel.RootCodeGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "RootCodeGroup에 대 한 값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.StoreLocation
  id: StoreLocation
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: StoreLocation
  nameWithType: PolicyLevel.StoreLocation
  fullName: System.Security.Policy.PolicyLevel.StoreLocation
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "정책 파일이 저장 된 경로 가져옵니다."
  remarks: ''
  example:
  - "The following code shows how to display the store location for a policy level. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyLevel> class.  \n  \n [!code-cpp[system.Security.policy.policylevel#15](~/add/codesnippet/cpp/p-system.security.policy_12_1.cpp)]\n [!code-cs[system.Security.policy.policylevel#15](~/add/codesnippet/csharp/p-system.security.policy_12_1.cs)]\n [!code-vb[system.Security.policy.policylevel#15](~/add/codesnippet/visualbasic/p-system.security.policy_12_1.vb)]"
  syntax:
    content: public string StoreLocation { get; }
    return:
      type: System.String
      description: "정책 파일이 저장 된 경로 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 경우는 <xref href=&quot;System.Security.Policy.PolicyLevel&quot;> </xref> 저장 위치에는 없습니다."
  overload: System.Security.Policy.PolicyLevel.StoreLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.ToXml
  id: ToXml
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: ToXml()
  nameWithType: PolicyLevel.ToXml()
  fullName: System.Security.Policy.PolicyLevel.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "보안 개체 및 현재 상태에 대 한 XML 인코딩을 만듭니다."
  syntax:
    content: public System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "모든 상태 정보를 포함 하는 보안 개체의 XML 인코딩입니다."
  overload: System.Security.Policy.PolicyLevel.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.Type
  id: Type
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: Type
  nameWithType: PolicyLevel.Type
  fullName: System.Security.Policy.PolicyLevel.Type
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "정책 수준의의 형식을 가져옵니다."
  remarks: "가장 높은 수준의 보안 정책에는 엔터프라이즈 수준입니다. 계층의 하위 수준 정책 제한 사항을 세부적 있지만 상위 수준에서 허용 하는 보다 많은 권한을 부여 하지 않을 수 있습니다. 순서로 정책 수준은 다음과 같습니다.      1.  엔터프라이즈 2입니다.  컴퓨터 3입니다.  사용자 4입니다.  자세한 내용은 응용 프로그램 도메인 <xref:System.Security.PolicyLevelType>.</xref:System.Security.PolicyLevelType> 를 참조 하세요."
  syntax:
    content: public System.Security.PolicyLevelType Type { get; }
    return:
      type: System.Security.PolicyLevelType
      description: "중 하나는 <xref href=&quot;System.Security.PolicyLevelType&quot;> </xref> 값입니다."
  overload: System.Security.Policy.PolicyLevel.Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Policy.PolicyException
  parent: System.Security.Policy
  isExternal: false
  name: PolicyException
  nameWithType: PolicyException
  fullName: System.Security.Policy.PolicyException
- uid: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongName)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: AddFullTrustAssembly(StrongName)
  nameWithType: PolicyLevel.AddFullTrustAssembly(StrongName)
  fullName: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(StrongName)
- uid: System.Security.Policy.StrongName
  parent: System.Security.Policy
  isExternal: false
  name: StrongName
  nameWithType: StrongName
  fullName: System.Security.Policy.StrongName
- uid: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: AddFullTrustAssembly(StrongNameMembershipCondition)
  nameWithType: PolicyLevel.AddFullTrustAssembly(StrongNameMembershipCondition)
  fullName: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(StrongNameMembershipCondition)
- uid: System.Security.Policy.StrongNameMembershipCondition
  parent: System.Security.Policy
  isExternal: false
  name: StrongNameMembershipCondition
  nameWithType: StrongNameMembershipCondition
  fullName: System.Security.Policy.StrongNameMembershipCondition
- uid: System.Security.Policy.PolicyLevel.AddNamedPermissionSet(System.Security.NamedPermissionSet)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: AddNamedPermissionSet(NamedPermissionSet)
  nameWithType: PolicyLevel.AddNamedPermissionSet(NamedPermissionSet)
  fullName: System.Security.Policy.PolicyLevel.AddNamedPermissionSet(NamedPermissionSet)
- uid: System.Security.NamedPermissionSet
  parent: System.Security
  isExternal: false
  name: NamedPermissionSet
  nameWithType: NamedPermissionSet
  fullName: System.Security.NamedPermissionSet
- uid: System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(System.String,System.Security.PermissionSet)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: ChangeNamedPermissionSet(String,PermissionSet)
  nameWithType: PolicyLevel.ChangeNamedPermissionSet(String,PermissionSet)
  fullName: System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(String,PermissionSet)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Security.Policy.PolicyLevel.CreateAppDomainLevel
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: CreateAppDomainLevel()
  nameWithType: PolicyLevel.CreateAppDomainLevel()
  fullName: System.Security.Policy.PolicyLevel.CreateAppDomainLevel()
- uid: System.Security.Policy.PolicyLevel
  parent: System.Security.Policy
  isExternal: false
  name: PolicyLevel
  nameWithType: PolicyLevel
  fullName: System.Security.Policy.PolicyLevel
- uid: System.Security.Policy.PolicyLevel.FromXml(System.Security.SecurityElement)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: PolicyLevel.FromXml(SecurityElement)
  fullName: System.Security.Policy.PolicyLevel.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Policy.PolicyLevel.FullTrustAssemblies
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: FullTrustAssemblies
  nameWithType: PolicyLevel.FullTrustAssemblies
  fullName: System.Security.Policy.PolicyLevel.FullTrustAssemblies
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Security.Policy.PolicyLevel.GetNamedPermissionSet(System.String)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: GetNamedPermissionSet(String)
  nameWithType: PolicyLevel.GetNamedPermissionSet(String)
  fullName: System.Security.Policy.PolicyLevel.GetNamedPermissionSet(String)
- uid: System.Security.Policy.PolicyLevel.Label
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Label
  nameWithType: PolicyLevel.Label
  fullName: System.Security.Policy.PolicyLevel.Label
- uid: System.Security.Policy.PolicyLevel.NamedPermissionSets
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: NamedPermissionSets
  nameWithType: PolicyLevel.NamedPermissionSets
  fullName: System.Security.Policy.PolicyLevel.NamedPermissionSets
- uid: System.Security.Policy.PolicyLevel.Recover
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Recover()
  nameWithType: PolicyLevel.Recover()
  fullName: System.Security.Policy.PolicyLevel.Recover()
- uid: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongName)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: RemoveFullTrustAssembly(StrongName)
  nameWithType: PolicyLevel.RemoveFullTrustAssembly(StrongName)
  fullName: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(StrongName)
- uid: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: RemoveFullTrustAssembly(StrongNameMembershipCondition)
  nameWithType: PolicyLevel.RemoveFullTrustAssembly(StrongNameMembershipCondition)
  fullName: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(StrongNameMembershipCondition)
- uid: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.Security.NamedPermissionSet)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: RemoveNamedPermissionSet(NamedPermissionSet)
  nameWithType: PolicyLevel.RemoveNamedPermissionSet(NamedPermissionSet)
  fullName: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(NamedPermissionSet)
- uid: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.String)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: RemoveNamedPermissionSet(String)
  nameWithType: PolicyLevel.RemoveNamedPermissionSet(String)
  fullName: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(String)
- uid: System.Security.Policy.PolicyLevel.Reset
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Reset()
  nameWithType: PolicyLevel.Reset()
  fullName: System.Security.Policy.PolicyLevel.Reset()
- uid: System.Security.Policy.PolicyLevel.Resolve(System.Security.Policy.Evidence)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Resolve(Evidence)
  nameWithType: PolicyLevel.Resolve(Evidence)
  fullName: System.Security.Policy.PolicyLevel.Resolve(Evidence)
- uid: System.Security.Policy.PolicyStatement
  parent: System.Security.Policy
  isExternal: false
  name: PolicyStatement
  nameWithType: PolicyStatement
  fullName: System.Security.Policy.PolicyStatement
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: ResolveMatchingCodeGroups(Evidence)
  nameWithType: PolicyLevel.ResolveMatchingCodeGroups(Evidence)
  fullName: System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(Evidence)
- uid: System.Security.Policy.CodeGroup
  parent: System.Security.Policy
  isExternal: false
  name: CodeGroup
  nameWithType: CodeGroup
  fullName: System.Security.Policy.CodeGroup
- uid: System.Security.Policy.PolicyLevel.RootCodeGroup
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: RootCodeGroup
  nameWithType: PolicyLevel.RootCodeGroup
  fullName: System.Security.Policy.PolicyLevel.RootCodeGroup
- uid: System.Security.Policy.PolicyLevel.StoreLocation
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: StoreLocation
  nameWithType: PolicyLevel.StoreLocation
  fullName: System.Security.Policy.PolicyLevel.StoreLocation
- uid: System.Security.Policy.PolicyLevel.ToXml
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: ToXml()
  nameWithType: PolicyLevel.ToXml()
  fullName: System.Security.Policy.PolicyLevel.ToXml()
- uid: System.Security.Policy.PolicyLevel.Type
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Type
  nameWithType: PolicyLevel.Type
  fullName: System.Security.Policy.PolicyLevel.Type
- uid: System.Security.PolicyLevelType
  parent: System.Security
  isExternal: false
  name: PolicyLevelType
  nameWithType: PolicyLevelType
  fullName: System.Security.PolicyLevelType
- uid: System.Security.Policy.PolicyLevel.AddFullTrustAssembly*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: AddFullTrustAssembly
  nameWithType: PolicyLevel.AddFullTrustAssembly
- uid: System.Security.Policy.PolicyLevel.AddNamedPermissionSet*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: AddNamedPermissionSet
  nameWithType: PolicyLevel.AddNamedPermissionSet
- uid: System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: ChangeNamedPermissionSet
  nameWithType: PolicyLevel.ChangeNamedPermissionSet
- uid: System.Security.Policy.PolicyLevel.CreateAppDomainLevel*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: CreateAppDomainLevel
  nameWithType: PolicyLevel.CreateAppDomainLevel
- uid: System.Security.Policy.PolicyLevel.FromXml*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: FromXml
  nameWithType: PolicyLevel.FromXml
- uid: System.Security.Policy.PolicyLevel.FullTrustAssemblies*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: FullTrustAssemblies
  nameWithType: PolicyLevel.FullTrustAssemblies
- uid: System.Security.Policy.PolicyLevel.GetNamedPermissionSet*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: GetNamedPermissionSet
  nameWithType: PolicyLevel.GetNamedPermissionSet
- uid: System.Security.Policy.PolicyLevel.Label*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Label
  nameWithType: PolicyLevel.Label
- uid: System.Security.Policy.PolicyLevel.NamedPermissionSets*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: NamedPermissionSets
  nameWithType: PolicyLevel.NamedPermissionSets
- uid: System.Security.Policy.PolicyLevel.Recover*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Recover
  nameWithType: PolicyLevel.Recover
- uid: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: RemoveFullTrustAssembly
  nameWithType: PolicyLevel.RemoveFullTrustAssembly
- uid: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: RemoveNamedPermissionSet
  nameWithType: PolicyLevel.RemoveNamedPermissionSet
- uid: System.Security.Policy.PolicyLevel.Reset*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Reset
  nameWithType: PolicyLevel.Reset
- uid: System.Security.Policy.PolicyLevel.Resolve*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Resolve
  nameWithType: PolicyLevel.Resolve
- uid: System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: ResolveMatchingCodeGroups
  nameWithType: PolicyLevel.ResolveMatchingCodeGroups
- uid: System.Security.Policy.PolicyLevel.RootCodeGroup*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: RootCodeGroup
  nameWithType: PolicyLevel.RootCodeGroup
- uid: System.Security.Policy.PolicyLevel.StoreLocation*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: StoreLocation
  nameWithType: PolicyLevel.StoreLocation
- uid: System.Security.Policy.PolicyLevel.ToXml*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: ToXml
  nameWithType: PolicyLevel.ToXml
- uid: System.Security.Policy.PolicyLevel.Type*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Type
  nameWithType: PolicyLevel.Type
