### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.IWebEditable
  id: IWebEditable
  children:
  - System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts
  - System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject
  langs:
  - csharp
  name: IWebEditable
  nameWithType: IWebEditable
  fullName: System.Web.UI.WebControls.WebParts.IWebEditable
  type: Interface
  summary: "연관 된 사용자 지정 편집 컨트롤을 지정 하는 개발자를 위한 인터페이스를 제공는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 제어 합니다."
  remarks: "IWebEditable 인터페이스를 사용 하면 사용자 지정 연결할 수 <xref:System.Web.UI.WebControls.WebParts.EditorPart>-서버 컨트롤과 같은 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤, 사용자 정의 컨트롤 또는 사용자 지정 서버 컨트롤.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.EditorPart> <xref:System.Web.UI.WebControls.WebParts.EditorPart>와 포함 된 컨트롤이 <xref:System.Web.UI.WebControls.WebParts.EditorZone>컨트롤과이 영역 편집 컨트롤이 있는 속성, 모양 및 연관 된 동작을 수정 하기 위한 사용자 인터페이스 (UI)를 최종 사용자가 제공 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.EditorZone> </xref:System.Web.UI.WebControls.WebParts.EditorPart>       IWebEditable 인터페이스는 두 명의 노출 된 멤버를 포함합니다. <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A>속성에 대 한 방법을 제공 <xref:System.Web.UI.WebControls.WebParts.EditorPart>컨트롤 관련된 서버 컨트롤에 대 한 참조를 얻으려고 합니다.</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A>메서드는 각 사용자 지정의 인스턴스를 만드는 데 <xref:System.Web.UI.WebControls.WebParts.EditorPart>제어 서버 컨트롤과 관련 된 및 컬렉션으로 반환 합니다.</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A>       IWebEditable 인터페이스 기본 <xref:System.Web.UI.WebControls.WebParts.WebPart>클래스를 기본적으로이 구현은 자동 연결 하지 않고 사용자 지정 <xref:System.Web.UI.WebControls.WebParts.EditorPart> <xref:System.Web.UI.WebControls.WebParts.WebPart>클래스</xref:System.Web.UI.WebControls.WebParts.WebPart> 를 사용 하 여 컨트롤</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> 에서 이미 구현 파생 된 연결할 <xref:System.Web.UI.WebControls.WebParts.WebPart>사용자 지정 컨트롤 <xref:System.Web.UI.WebControls.WebParts.EditorPart>컨트롤을 재정의할 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A>메서드.</xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> </xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to override the methods of the IWebEditable interface in a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, which then creates an instance of a custom <xref:System.Web.UI.WebControls.WebParts.EditorPart> control when the <xref:System.Web.UI.WebControls.WebParts.WebPart> control enters edit mode.  \n  \n This example has four parts:  \n  \n-   The code for the custom class.  \n  \n-   The Web page that hosts the custom control.  \n  \n-   A user control that switches the page into edit mode.  \n  \n-   A description of how the example works in a browser.  \n  \n The first part of the code example is the custom `TextDisplayWebPart` class. Notice that the class derives from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class and implements the IWebEditable interface, providing specific implementations for the <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> method and the <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> property. Notice also that nested within the `TextDisplayWebPart` class is a private, custom `TextDisplayEditorPart` class that derives from the base <xref:System.Web.UI.WebControls.WebParts.EditorPart> class. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_IWebEditable_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_204_1.vb)]\n [!code-cs[WebParts_IWebEditable_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_204_1.cs)]  \n  \n The second part of the code example is a Web page that hosts the custom control. Notice that although an <xref:System.Web.UI.WebControls.WebParts.EditorZone> control is declared in the markup of the page, the custom <xref:System.Web.UI.WebControls.WebParts.EditorPart> control need not be referenced there, because it can be added programmatically at run time.  \n  \n [!code-vb[WebParts_IWebEditable_Overview#7](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_204_2.aspx)]\n [!code-cs[WebParts_IWebEditable_Overview#7](~/add/codesnippet/csharp/t-system.web.ui.webcontr_204_2.aspx)]  \n  \n The third part of the code example is a user control that enables a user to switch the page into edit mode. Notice that the user control is referenced in the hosting Web page. For a full description of how to create this user control, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebEditable_Overview#8](~/add/codesnippet/csharp/t-system.web.ui.webcontr_204_3.ascx)]\n [!code-vb[WebParts_IWebEditable_Overview#8](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_204_3.ascx)]  \n  \n To run the code example, load the hosting Web page in a browser, add some text to the text box, and click the **Set Label Content** button to update the label in the control. To switch the page into edit mode, select **Edit** from the drop-down list containing the display modes. To display the UI from the custom `TextDisplayEditorPart` control, click the verbs menu drop-down arrow on the `TextDisplayWebPart` control, and select **Edit**. In the editing UI, you can use the drop-down list containing the font styles to update the text style for the label in the `TextDisplayWebPart` control. You must click **Browse Mode** in the display modes drop-down list to return the page to normal view and confirm that the text in the label now has the font style you selected while in edit mode."
  syntax:
    content: public interface IWebEditable
  implements: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts
  id: CreateEditorParts
  parent: System.Web.UI.WebControls.WebParts.IWebEditable
  langs:
  - csharp
  name: CreateEditorParts()
  nameWithType: IWebEditable.CreateEditorParts()
  fullName: System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "사용자 지정의 컬렉션을 반환 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> 구현 하는 서버 컨트롤와 연관 된 컨트롤의 <xref href=&quot;System.Web.UI.WebControls.WebParts.IWebEditable&quot;> </xref> 인터페이스입니다."
  remarks: "CreateEditorParts 메서드를 사용 하면 모든 사용자 지정 컬렉션을 만들 <xref:System.Web.UI.WebControls.WebParts.EditorPart>사용자 지정 컨트롤와 연관 된 컨트롤 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤 또는 컨트롤을 반환 하는 사용자는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>개체입니다.</xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.EditorPart> <xref:System.Web.UI.WebControls.WebParts.WebPartManager>컨트롤 컬렉션을 사용 하며 모든 인스턴스를 만드는 <xref:System.Web.UI.WebControls.WebParts.EditorPart>서버 컨트롤 전환 될 때마다 컨트롤 편집 모드.</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>       일반적으로이 메서드는 사용자 지정에 구현 <xref:System.Web.UI.WebControls.WebParts.WebPart>재정의 하 여 컨트롤의 <xref:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts%2A>메서드.</xref:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> 메서드에서 사용자 지정의 인스턴스를 만들 <xref:System.Web.UI.WebControls.WebParts.EditorPart>사용자 컨트롤에 연결 하 고 원하는 컨트롤을 추가 하는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>개체를 해당 개체를 반환 합니다.</xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> </xref:System.Web.UI.WebControls.WebParts.EditorPart> 컬렉션 <xref:System.Web.UI.WebControls.WebParts.EditorPart>컨트롤에 할당 됩니다는 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>의 속성은 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>영역.</xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> </xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> </xref:System.Web.UI.WebControls.WebParts.EditorPart>      > [!NOTE] > 모든 <xref:System.Web.UI.WebControls.WebParts.EditorPart>의 컬렉션에 추가 된 <xref:System.Web.UI.WebControls.WebParts.EditorPart>CreateEditorParts 메서드의 구현에서 컨트롤의 ID 속성에 할당 된 값이 있어야 합니다, 컬렉션에 할당 된 경우 예외가 throw 됩니다는 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>속성.</xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> </xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.EditorPart>"
  example:
  - "The following code example demonstrates an override of the CreateEditorParts method in a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. The complete source code required to run the sample is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebEditable> class overview topic.  \n  \n The code example contains both members of the <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface. Note that the override of the CreateEditorParts method creates an <xref:System.Collections.ArrayList> to collect one or more custom <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls, and then uses the list to create the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object.  \n  \n [!code-vb[WebParts_IWebEditable_Overview#4](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_112_1.vb)]\n [!code-cs[WebParts_IWebEditable_Overview#4](~/add/codesnippet/csharp/m-system.web.ui.webcontr_112_1.cs)]"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.EditorPartCollection
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPartCollection&quot;> </xref> 사용자 지정 컬렉션을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> 서버 컨트롤과 연결 된 컨트롤입니다."
  overload: System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject
  id: WebBrowsableObject
  parent: System.Web.UI.WebControls.WebParts.IWebEditable
  langs:
  - csharp
  name: WebBrowsableObject
  nameWithType: IWebEditable.WebBrowsableObject
  fullName: System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 컨트롤, 사용자 정의 컨트롤 또는 편집할 수 있는 사용자 지정 컨트롤 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> 컨트롤입니다."
  remarks: "WebBrowsableObject 속성에 대 한 방법을 제공 <xref:System.Web.UI.WebControls.WebParts.EditorPart>연결 된 서버 컨트롤에 대 한 참조를 가져오려면 컨트롤.</xref:System.Web.UI.WebControls.WebParts.EditorPart>       반환 되는 개체 참조를 사용 하면 속성 자체 읽기 전용 이더라도 <xref:System.Web.UI.WebControls.WebParts.EditorPart>서버 컨트롤에서 값을 변경 하는 컨트롤입니다.</xref:System.Web.UI.WebControls.WebParts.EditorPart>"
  example:
  - "The following code example demonstrates how the WebBrowsableObject property can be overridden in a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. The complete source code required to run the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebEditable> class overview topic.  \n  \n The code example overrides both members of the <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface.  \n  \n [!code-vb[WebParts_IWebEditable_Overview#4](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_329_1.vb)]\n [!code-cs[WebParts_IWebEditable_Overview#4](~/add/codesnippet/csharp/p-system.web.ui.webcontr_329_1.cs)]"
  syntax:
    content: public object WebBrowsableObject { get; }
    return:
      type: System.Object
      description: "연결 된 컨트롤에 대 한 개체 참조는 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts
  parent: System.Web.UI.WebControls.WebParts.IWebEditable
  isExternal: false
  name: CreateEditorParts()
  nameWithType: IWebEditable.CreateEditorParts()
  fullName: System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts()
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: EditorPartCollection
  nameWithType: EditorPartCollection
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection
- uid: System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject
  parent: System.Web.UI.WebControls.WebParts.IWebEditable
  isExternal: false
  name: WebBrowsableObject
  nameWithType: IWebEditable.WebBrowsableObject
  fullName: System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts*
  parent: System.Web.UI.WebControls.WebParts.IWebEditable
  isExternal: false
  name: CreateEditorParts
  nameWithType: IWebEditable.CreateEditorParts
- uid: System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject*
  parent: System.Web.UI.WebControls.WebParts.IWebEditable
  isExternal: false
  name: WebBrowsableObject
  nameWithType: IWebEditable.WebBrowsableObject
