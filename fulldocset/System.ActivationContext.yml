### YamlMime:ManagedReference
items:
- uid: System.ActivationContext
  id: ActivationContext
  children:
  - System.ActivationContext.ApplicationManifestBytes
  - System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)
  - System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])
  - System.ActivationContext.DeploymentManifestBytes
  - System.ActivationContext.Dispose
  - System.ActivationContext.Finalize
  - System.ActivationContext.Form
  - System.ActivationContext.Identity
  - System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  langs:
  - csharp
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
  type: Class
  summary: "현재 응용 프로그램에 대 한 활성화 컨텍스트를 식별합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "ActivationContext 클래스를 포함 한 <xref:System.ApplicationIdentity>고 응용 프로그램 매니페스트를 내부 전용 액세스를 제공 합니다.</xref:System.ApplicationIdentity> 활성화 컨텍스트를 설정 하는 도메인 정책을 고 응용 프로그램 기반 보안 모델을 제공 매니페스트 기반 활성화 하는 동안 사용 됩니다. 자세한 내용은 <xref:System.Security.Policy.ApplicationSecurityManager>클래스</xref:System.Security.Policy.ApplicationSecurityManager> 를 참조 하십시오.      > [!IMPORTANT] >이 형식이 구현 하는 <xref:System.IDisposable>인터페이스.</xref:System.IDisposable> 형식을 사용 하 여 마쳤으면는 삭제 해야의 직접 또는 간접적으로 합니다. 직접 형식의 삭제 하려면 해당 <xref:System.IDisposable.Dispose%2A>에서 메서드는 `try` / `catch` 블록.</xref:System.IDisposable.Dispose%2A> 작업을 삭제할 하지 직접,를 사용 하 여 언어 구문와 같은 `using` (C#에서) 또는 `Using` (Visual Basic)에서는 합니다. 자세한 내용은의 &quot;를 사용 하는 개체는 구현 IDisposable&quot; 섹션을 참조 하십시오.는 <xref:System.IDisposable>인터페이스 항목.</xref:System.IDisposable>"
  example:
  - "The following code example demonstrates the use of an ActivationContext object to obtain the <xref:System.ApplicationIdentity> for a manifest-based application. For correct results, execute this code example as a manifest-based application.  \n  \n [!code-vb[System.ActivationContext#1](~/add/codesnippet/visualbasic/t-system.activationcontext_1.vb)]\n [!code-cs[System.ActivationContext#1](~/add/codesnippet/csharp/t-system.activationcontext_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class ActivationContext : IDisposable, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ActivationContext.ApplicationManifestBytes
  id: ApplicationManifestBytes
  parent: System.ActivationContext
  langs:
  - csharp
  name: ApplicationManifestBytes
  nameWithType: ActivationContext.ApplicationManifestBytes
  fullName: System.ActivationContext.ApplicationManifestBytes
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "현재 응용 프로그램에 대 한 ClickOnce 응용 프로그램 매니페스트를 가져옵니다."
  remarks: "활성화 컨텍스트가 <xref:System.ActivationContext.ContextForm>, 응용 프로그램이 설치 되지 않았음을 의미 ClickOnce 저장소에 배포 매니페스트를 임시 다운로드 폴더에서 읽습니다.</xref:System.ActivationContext.ContextForm> 활성화 컨텍스트가 <xref:System.ActivationContext.ContextForm>, ClickOnce에서 응용 프로그램이 설치 되어 있는지를 나타내는 배포 매니페스트에 저장소에서 읽은 ClickOnce 저장소.</xref:System.ActivationContext.ContextForm> 배포 매니페스트에 대 한 자세한 내용은 참조 하십시오. [ClickOnce 배포 매니페스트](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public byte[] ApplicationManifestBytes { get; }
    return:
      type: System.Byte[]
      description: "과 관련 된 응용 프로그램에 대 한 ClickOnce 응용 프로그램 매니페스트를 포함 하는 바이트 배열 <xref href=&quot;System.ActivationContext&quot;> </xref>합니다."
  overload: System.ActivationContext.ApplicationManifestBytes*
  exceptions: []
  platform:
  - net462
- uid: System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)
  id: CreatePartialActivationContext(System.ApplicationIdentity)
  parent: System.ActivationContext
  langs:
  - csharp
  name: CreatePartialActivationContext(ApplicationIdentity)
  nameWithType: ActivationContext.CreatePartialActivationContext(ApplicationIdentity)
  fullName: System.ActivationContext.CreatePartialActivationContext(ApplicationIdentity)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ActivationContext&quot;> </xref> 클래스 지정 된 응용 프로그램 id를 사용 합니다."
  remarks: "CreatePartialActivationContext 메서드는 새 활성화 컨텍스트를 만들지는 내부 생성자를 호출 합니다. 구현에서 <xref:System.ActivationContext>되지 않았거나 열려 있는 저장소에 완전히 설치 폴더에 완전히 포함 된 응용 프로그램을 위한.NET Framework 버전 2.0의에서 클래스.</xref:System.ActivationContext> 이 메서드는 공용 생성자는 완전 한 활성화 컨텍스트를 제공 하는 이후 릴리스에 대 한 이전 버전과 호환성을 제공 합니다."
  syntax:
    content: public static ActivationContext CreatePartialActivationContext (ApplicationIdentity identity);
    parameters:
    - id: identity
      type: System.ApplicationIdentity
      description: "응용 프로그램을 식별 하는 개체입니다."
    return:
      type: System.ActivationContext
      description: "지정 된 응용 프로그램 id 가진 개체입니다."
  overload: System.ActivationContext.CreatePartialActivationContext*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "배포 또는 응용 프로그램 id에 지정 된 <code> identity </code>합니다."
  platform:
  - net462
- uid: System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])
  id: CreatePartialActivationContext(System.ApplicationIdentity,System.String[])
  parent: System.ActivationContext
  langs:
  - csharp
  name: CreatePartialActivationContext(ApplicationIdentity,String[])
  nameWithType: ActivationContext.CreatePartialActivationContext(ApplicationIdentity,String[])
  fullName: System.ActivationContext.CreatePartialActivationContext(ApplicationIdentity,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ActivationContext&quot;> </xref> 클래스 지정된 응용 프로그램 id 및 매니페스트 경로 배열을 사용 합니다."
  remarks: "CreatePartialActivationContext 메서드는 새 활성화 컨텍스트를 만들지는 내부 생성자를 호출 합니다. 구현에서 <xref:System.ActivationContext>되지 않았거나 열려 있는 저장소에 완전히 설치 폴더에 완전히 포함 된 응용 프로그램을 위한.NET Framework 버전 2.0의에서 클래스.</xref:System.ActivationContext> 이 메서드는 공용 생성자는 완전 한 활성화 컨텍스트를 제공 하는 이후 릴리스에 대 한 이전 버전과 호환성을 제공 합니다."
  syntax:
    content: public static ActivationContext CreatePartialActivationContext (ApplicationIdentity identity, string[] manifestPaths);
    parameters:
    - id: identity
      type: System.ApplicationIdentity
      description: "응용 프로그램을 식별 하는 개체입니다."
    - id: manifestPaths
      type: System.String[]
      description: "응용 프로그램에 대 한 매니페스트 경로의 문자열 배열입니다."
    return:
      type: System.ActivationContext
      description: "지정 된 응용 프로그램 id 및 매니페스트 경로 배열을 사용 하 여 개체입니다."
  overload: System.ActivationContext.CreatePartialActivationContext*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>manifestPaths</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "배포 또는 응용 프로그램 id에 지정 된 <code> identity </code>합니다.       -또는- <code> identity </code> 매니페스트의 id와 일치 하지 않습니다.       -또는- <code> identity </code> 매니페스트 경로와 동일한 수의 구성 요소가 없습니다."
  platform:
  - net462
- uid: System.ActivationContext.DeploymentManifestBytes
  id: DeploymentManifestBytes
  parent: System.ActivationContext
  langs:
  - csharp
  name: DeploymentManifestBytes
  nameWithType: ActivationContext.DeploymentManifestBytes
  fullName: System.ActivationContext.DeploymentManifestBytes
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "현재 응용 프로그램에 대 한 ClickOnce 배포 매니페스트를 가져옵니다."
  remarks: "활성화 컨텍스트가 <xref:System.ActivationContext.ContextForm>, 응용 프로그램이 설치 되지 않았음을 의미 ClickOnce 저장소에 배포 매니페스트를 임시 다운로드 폴더에서 읽습니다.</xref:System.ActivationContext.ContextForm> 활성화 컨텍스트가 <xref:System.ActivationContext.ContextForm>, ClickOnce에서 응용 프로그램이 설치 되어 있는지를 나타내는 배포 매니페스트에 저장소에서 읽은 ClickOnce 저장소.</xref:System.ActivationContext.ContextForm> 배포 매니페스트에 대 한 자세한 내용은 참조 하십시오. [ClickOnce 배포 매니페스트](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public byte[] DeploymentManifestBytes { get; }
    return:
      type: System.Byte[]
      description: "과 관련 된 응용 프로그램에 대 한 ClickOnce 배포 매니페스트를 포함 하는 바이트 배열 <xref href=&quot;System.ActivationContext&quot;> </xref>합니다."
  overload: System.ActivationContext.DeploymentManifestBytes*
  exceptions: []
  platform:
  - net462
- uid: System.ActivationContext.Dispose
  id: Dispose
  parent: System.ActivationContext
  langs:
  - csharp
  name: Dispose()
  nameWithType: ActivationContext.Dispose()
  fullName: System.ActivationContext.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "사용 하는 모든 리소스를 해제는 <xref href=&quot;System.ActivationContext&quot;> </xref>합니다."
  remarks: "<xref:System.ActivationContext>.</xref:System.ActivationContext> 를 사용 하 여 작업을 마쳤으면 Dispose를 호출 합니다. Dispose 메서드는 <xref:System.ActivationContext>불안정 한 상태가.</xref:System.ActivationContext> Dispose를 호출한 후에 대 한 모든 참조를 해제 해야는 <xref:System.ActivationContext>가비지 수집기는 메모리를 회수할 수 있도록 하는 <xref:System.ActivationContext>차지한.</xref:System.ActivationContext> </xref:System.ActivationContext> 자세한 내용은 참조 [관리 되지 않는 리소스 정리](~/add/includes/ajax-current-ext-md.md) 및 [Dispose 메서드를 구현](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > <xref:System.ActivationContext>.</xref:System.ActivationContext> 에 대 한 마지막 참조를 해제 하기 전에 항상 호출 삭제 사용 중인 리소스가 가비지 수집기 호출할 때까지 해제 되지 것입니다 그렇지 않은 경우는 <xref:System.ActivationContext>개체의 `Finalize` 메서드.</xref:System.ActivationContext>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ActivationContext.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ActivationContext.Finalize
  id: Finalize
  parent: System.ActivationContext
  langs:
  - csharp
  name: Finalize()
  nameWithType: ActivationContext.Finalize()
  fullName: System.ActivationContext.Finalize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "수 있도록는 <xref href=&quot;System.ActivationContext&quot;> </xref> 리소스를 해제 하 고 다른 정리 작업 하기 전에 수행할 하려고 하는 개체는 <xref href=&quot;System.ActivationContext&quot;> </xref> 가비지 수집에서 회수 합니다."
  syntax:
    content: ~ActivationContext ();
    parameters: []
  overload: System.ActivationContext.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.ActivationContext.Form
  id: Form
  parent: System.ActivationContext
  langs:
  - csharp
  name: Form
  nameWithType: ActivationContext.Form
  fullName: System.ActivationContext.Form
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "현재 응용 프로그램에 대 한 폼 또는 저장소 컨텍스트를 가져옵니다."
  remarks: "매니페스트 기반 응용 프로그램을 설치할 수 없는 ClickOnce 저장소에 있습니다. 응용 프로그램에서 응용 프로그램 매니페스트 활성 실행과 같은 저장소에 없는 [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)], <xref:System.ActivationContext.ContextForm>.</xref:System.ActivationContext.ContextForm> 로 분류 됩니다 저장소에 포함 하는 응용 프로그램은 <xref:System.ActivationContext.ContextForm>.</xref:System.ActivationContext.ContextForm> 으로 분류 됩니다."
  syntax:
    content: public ActivationContext.ContextForm Form { get; }
    return:
      type: System.ActivationContext.ContextForm
      description: "열거형 값 중 하나입니다."
  overload: System.ActivationContext.Form*
  exceptions: []
  platform:
  - net462
- uid: System.ActivationContext.Identity
  id: Identity
  parent: System.ActivationContext
  langs:
  - csharp
  name: Identity
  nameWithType: ActivationContext.Identity
  fullName: System.ActivationContext.Identity
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "현재 응용 프로그램에 대 한 응용 프로그램 id를 가져옵니다."
  remarks: "<xref:System.ApplicationIdentity>전체 이름 및 위치에 따라 응용 프로그램을 고유 하 게 식별 합니다.</xref:System.ApplicationIdentity>"
  example:
  - "The following code example demonstrates the use of an <xref:System.ActivationContext> object to obtain the <xref:System.ApplicationIdentity> for a manifest-based application. This code example is part of a larger example provided for the <xref:System.ActivationContext> class.  \n  \n [!code-vb[System.ActivationContext#2](~/add/codesnippet/visualbasic/p-system.activationconte_1.vb)]\n [!code-cs[System.ActivationContext#2](~/add/codesnippet/csharp/p-system.activationconte_1.cs)]"
  syntax:
    content: public ApplicationIdentity Identity { get; }
    return:
      type: System.ApplicationIdentity
      description: "<xref href=&quot;System.ApplicationIdentity&quot;> </xref> 현재 응용 프로그램을 식별 하는 개체입니다."
  overload: System.ActivationContext.Identity*
  exceptions: []
  platform:
  - net462
- uid: System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.ActivationContext
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ActivationContext.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.ActivationContext.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "정보를 표시 한 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 대상 개체를 직렬화 하는 데 필요한 데이터를 사용 합니다."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "데이터로 채울 개체입니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "이 serialization에 대 한 구조입니다."
  overload: System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ActivationContext.ApplicationManifestBytes
  parent: System.ActivationContext
  isExternal: false
  name: ApplicationManifestBytes
  nameWithType: ActivationContext.ApplicationManifestBytes
  fullName: System.ActivationContext.ApplicationManifestBytes
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)
  parent: System.ActivationContext
  isExternal: false
  name: CreatePartialActivationContext(ApplicationIdentity)
  nameWithType: ActivationContext.CreatePartialActivationContext(ApplicationIdentity)
  fullName: System.ActivationContext.CreatePartialActivationContext(ApplicationIdentity)
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.ApplicationIdentity
  parent: System
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ApplicationIdentity
  fullName: System.ApplicationIdentity
- uid: System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])
  parent: System.ActivationContext
  isExternal: false
  name: CreatePartialActivationContext(ApplicationIdentity,String[])
  nameWithType: ActivationContext.CreatePartialActivationContext(ApplicationIdentity,String[])
  fullName: System.ActivationContext.CreatePartialActivationContext(ApplicationIdentity,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ActivationContext.DeploymentManifestBytes
  parent: System.ActivationContext
  isExternal: false
  name: DeploymentManifestBytes
  nameWithType: ActivationContext.DeploymentManifestBytes
  fullName: System.ActivationContext.DeploymentManifestBytes
- uid: System.ActivationContext.Dispose
  parent: System.ActivationContext
  isExternal: false
  name: Dispose()
  nameWithType: ActivationContext.Dispose()
  fullName: System.ActivationContext.Dispose()
- uid: System.ActivationContext.Finalize
  parent: System.ActivationContext
  isExternal: false
  name: Finalize()
  nameWithType: ActivationContext.Finalize()
  fullName: System.ActivationContext.Finalize()
- uid: System.ActivationContext.Form
  parent: System.ActivationContext
  isExternal: false
  name: Form
  nameWithType: ActivationContext.Form
  fullName: System.ActivationContext.Form
- uid: System.ActivationContext.ContextForm
  parent: System
  isExternal: false
  name: ActivationContext+ContextForm
  nameWithType: ActivationContext+ContextForm
  fullName: System.ActivationContext+ContextForm
- uid: System.ActivationContext.Identity
  parent: System.ActivationContext
  isExternal: false
  name: Identity
  nameWithType: ActivationContext.Identity
  fullName: System.ActivationContext.Identity
- uid: System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.ActivationContext
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ActivationContext.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.ActivationContext.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.ActivationContext.ApplicationManifestBytes*
  parent: System.ActivationContext
  isExternal: false
  name: ApplicationManifestBytes
  nameWithType: ActivationContext.ApplicationManifestBytes
- uid: System.ActivationContext.CreatePartialActivationContext*
  parent: System.ActivationContext
  isExternal: false
  name: CreatePartialActivationContext
  nameWithType: ActivationContext.CreatePartialActivationContext
- uid: System.ActivationContext.DeploymentManifestBytes*
  parent: System.ActivationContext
  isExternal: false
  name: DeploymentManifestBytes
  nameWithType: ActivationContext.DeploymentManifestBytes
- uid: System.ActivationContext.Dispose*
  parent: System.ActivationContext
  isExternal: false
  name: Dispose
  nameWithType: ActivationContext.Dispose
- uid: System.ActivationContext.Finalize*
  parent: System.ActivationContext
  isExternal: false
  name: Finalize
  nameWithType: ActivationContext.Finalize
- uid: System.ActivationContext.Form*
  parent: System.ActivationContext
  isExternal: false
  name: Form
  nameWithType: ActivationContext.Form
- uid: System.ActivationContext.Identity*
  parent: System.ActivationContext
  isExternal: false
  name: Identity
  nameWithType: ActivationContext.Identity
- uid: System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.ActivationContext
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: ActivationContext.System.Runtime.Serialization.ISerializable.GetObjectData
