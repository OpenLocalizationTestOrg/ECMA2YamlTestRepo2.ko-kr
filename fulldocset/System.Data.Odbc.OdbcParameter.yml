### YamlMime:ManagedReference
items:
- uid: System.Data.Odbc.OdbcParameter
  id: OdbcParameter
  children:
  - System.Data.Odbc.OdbcParameter.#ctor
  - System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType)
  - System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Object)
  - System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32)
  - System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.String)
  - System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)
  - System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)
  - System.Data.Odbc.OdbcParameter.DbType
  - System.Data.Odbc.OdbcParameter.Direction
  - System.Data.Odbc.OdbcParameter.IsNullable
  - System.Data.Odbc.OdbcParameter.OdbcType
  - System.Data.Odbc.OdbcParameter.ParameterName
  - System.Data.Odbc.OdbcParameter.Precision
  - System.Data.Odbc.OdbcParameter.ResetDbType
  - System.Data.Odbc.OdbcParameter.ResetOdbcType
  - System.Data.Odbc.OdbcParameter.Scale
  - System.Data.Odbc.OdbcParameter.Size
  - System.Data.Odbc.OdbcParameter.SourceColumn
  - System.Data.Odbc.OdbcParameter.SourceColumnNullMapping
  - System.Data.Odbc.OdbcParameter.SourceVersion
  - System.Data.Odbc.OdbcParameter.System#ICloneable#Clone
  - System.Data.Odbc.OdbcParameter.ToString
  - System.Data.Odbc.OdbcParameter.Value
  langs:
  - csharp
  name: OdbcParameter
  nameWithType: OdbcParameter
  fullName: System.Data.Odbc.OdbcParameter
  type: Class
  summary: "매개 변수를 나타내는 <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> 에 대 한 매핑도 필요에 따라는 <xref href=&quot;System.Data.DataColumn&quot;> </xref>합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "매개 변수 이름은 대/소문자 구분 하지 않습니다.       Microsoft OLE DB Provider를 사용 하 여 Oracle MSDAORA () 및.NET Framework ODBC Data Provider는 Oracle 데이터베이스를 쿼리할 때 사용 하는 `LIKE` 절 쿼리 고정 길이 필드 값을 일치 하는 모든 필요한 항목을 반환할 수 없습니다. Oracle의 고정 길이 필드 값을 일치 하는 경우는 이유는는 `LIKE` 절 뒤쪽 채움 공백을 포함 하 여 문자열의 전체 길이 일치 합니다. 예를 들어 테이블에 Oracle 데이터베이스 필드가 &quot;Field1&quot;으로 정의 된 `char(3)`, 값을 입력 하 고 다음 코드를 해당 테이블의 행에 &quot;a&quot;는 행을 반환 하지 합니다.      ```vb#   Dim queryString As String = &quot;SELECT * FROM Table1 WHERE Field1 LIKE ?&quot;   Dim command As OleDbCommand = New OleDbCommand(queryString, connection)   command.Parameters.Add(&quot;@p1&quot;, OleDbType.Char, 3).Value = &quot;a&quot;   Dim reader As OleDbDataReader = command.ExecuteReader()   ```      ```c#   string queryString = &quot;SELECT * FROM Table1 WHERE Field1 LIKE ?&quot;;   OleDbCommand command = new OleDbCommand(queryString, connection);   command.Parameters.Add(&quot;@p1&quot;, OleDbType.Char, 3).Value = &quot;a&quot;;   OleDbDataReader reader = command.ExecuteReader();   ```Oracle &quot;a&quot;로 서의 열 값을 저장 하기 때문에 이것이 (패딩 &quot;a&quot;와 후행 공백 3의 고정된 필드 길이), Oracle의 경우 &quot;a&quot;의 매개 변수 값에 대 한 일치 하는 항목으로 처리 하지 않습니다는 `LIKE` 고정 길이 필드의 비교 합니다.       이 문제를 해결 하려면 매개 변수 값에 백분율 (&quot;%&quot;) 와일드 카드 문자를 추가 (`&quot;a%&quot;`), 하거나 SQL을 사용 하 여 `=` 비교 대신 합니다."
  example:
  - "The following example creates multiple instances of OdbcParameter through the <xref:System.Data.Odbc.OdbcParameterCollection> within the <xref:System.Data.Odbc.OdbcDataAdapter>. These parameters are used to select data from the data source and place the data in the <xref:System.Data.DataSet>. This example assumes that a <xref:System.Data.DataSet> and an <xref:System.Data.Odbc.OdbcDataAdapter> have already been created by using the appropriate schema, commands, and connection.  \n  \n [!code-cs[Classic WebData OdbcParameter#1](~/add/codesnippet/csharp/t-system.data.odbc.odbcp_1_1.cs)]\n [!code-vb[Classic WebData OdbcParameter#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbcp_1_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Data.Odbc.OdbcParameter/OdbcParameterConverter))]

      public sealed class OdbcParameter : System.Data.Common.DbParameter, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbParameter
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision
  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.#ctor
  id: '#ctor'
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: OdbcParameter()
  nameWithType: OdbcParameter.OdbcParameter()
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> 클래스입니다."
  remarks: "기본 생성자는 모든 필드를를 기본값으로 초기화합니다."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OdbcParameter.OdbcParameter#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcp_1_1.cs)]\n [!code-vb[Classic WebData OdbcParameter.OdbcParameter#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcp_1_1.vb)]"
  syntax:
    content: public OdbcParameter ();
    parameters: []
  overload: System.Data.Odbc.OdbcParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType)
  id: '#ctor(System.String,System.Data.Odbc.OdbcType)'
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: OdbcParameter(String,OdbcType)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> 매개 변수 이름과 데이터 형식을 사용 하는 클래스입니다."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OdbcParameter.OdbcParameter1#1](~/add/codesnippet/visualbasic/dcf1840c-d8ee-4878-9114-_1.vb)]\n [!code-cs[Classic WebData OdbcParameter.OdbcParameter1#1](~/add/codesnippet/csharp/dcf1840c-d8ee-4878-9114-_1.cs)]"
  syntax:
    content: public OdbcParameter (string name, System.Data.Odbc.OdbcType type);
    parameters:
    - id: name
      type: System.String
      description: "매개 변수의 이름입니다."
    - id: type
      type: System.Data.Odbc.OdbcType
      description: "중 하나는 <xref href=&quot;System.Data.Odbc.OdbcType&quot;> </xref> 값입니다."
  overload: System.Data.Odbc.OdbcParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "제공 된 값이 고 <code> type </code> 매개 변수는 올바르지 않은 백 엔드 데이터 형식입니다."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Object)
  id: '#ctor(System.String,System.Object)'
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: OdbcParameter(String,Object)
  nameWithType: OdbcParameter.OdbcParameter(String,Object)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,Object)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> 매개 변수 이름을 사용 하는 클래스 및 <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> 개체입니다."
  remarks: "이 오버 로드를 사용 하는 경우 주의 해야는 <xref:System.Data.Odbc.OdbcParameter>정수 매개 변수 값을 지정 하는 생성자입니다.</xref:System.Data.Odbc.OdbcParameter> 이 오버 로드 때문에 `value` 형식의 <xref:System.Object>, 정수 값을 변환 해야는 <xref:System.Object>다음 C# 예제에서 보여 주듯이 값이&0; 인 경우을 입력 합니다.</xref:System.Object> </xref:System.Object>      ```   Parameter = new OdbcParameter(&quot;@pname&quot;, Convert.ToInt32(0));   ```이 변환을 수행 하지 않으면 컴파일러를 호출 하는 것을 가정은 <xref:System.Data.Odbc.OdbcParameter.%23ctor%2A?displayProperty=fullName>생성자 오버 로드.</xref:System.Data.Odbc.OdbcParameter.%23ctor%2A?displayProperty=fullName>"
  syntax:
    content: public OdbcParameter (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "매개 변수의 이름입니다."
    - id: value
      type: System.Object
      description: "<xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> 개체입니다."
  overload: System.Data.Odbc.OdbcParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32)
  id: '#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32)'
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: OdbcParameter(String,OdbcType,Int32)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> 매개 변수 이름, 데이터 형식 및 길이 사용 하는 클래스입니다."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OdbcParameter.OdbcParameter2#1](~/add/codesnippet/csharp/7ed6d552-f3e9-4f28-af5c-_1.cs)]\n [!code-vb[Classic WebData OdbcParameter.OdbcParameter2#1](~/add/codesnippet/visualbasic/7ed6d552-f3e9-4f28-af5c-_1.vb)]"
  syntax:
    content: public OdbcParameter (string name, System.Data.Odbc.OdbcType type, int size);
    parameters:
    - id: name
      type: System.String
      description: "매개 변수의 이름입니다."
    - id: type
      type: System.Data.Odbc.OdbcType
      description: "중 하나는 <xref href=&quot;System.Data.Odbc.OdbcType&quot;> </xref> 값입니다."
    - id: size
      type: System.Int32
      description: "매개 변수의 길이입니다."
  overload: System.Data.Odbc.OdbcParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "제공 된 값이 고 <code> type </code> 매개 변수는 올바르지 않은 백 엔드 데이터 형식입니다."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.String)
  id: '#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.String)'
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: OdbcParameter(String,OdbcType,Int32,String)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32,String)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32,String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> 매개 변수 이름, 데이터 형식, 길이 및 소스 열 이름을 사용 하는 클래스입니다."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OdbcParameter.OdbcParameter3#1](~/add/codesnippet/csharp/6bdbd90e-e8bb-418c-bf3d-_1.cs)]\n [!code-vb[Classic WebData OdbcParameter.OdbcParameter3#1](~/add/codesnippet/visualbasic/6bdbd90e-e8bb-418c-bf3d-_1.vb)]"
  syntax:
    content: public OdbcParameter (string name, System.Data.Odbc.OdbcType type, int size, string sourcecolumn);
    parameters:
    - id: name
      type: System.String
      description: "매개 변수의 이름입니다."
    - id: type
      type: System.Data.Odbc.OdbcType
      description: "중 하나는 <xref href=&quot;System.Data.Odbc.OdbcType&quot;> </xref> 값입니다."
    - id: size
      type: System.Int32
      description: "매개 변수의 길이입니다."
    - id: sourcecolumn
      type: System.String
      description: "원본 열의 이름입니다."
  overload: System.Data.Odbc.OdbcParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "제공 된 값이 고 <code> type </code> 매개 변수는 올바르지 않은 백 엔드 데이터 형식입니다."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)
  id: '#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)'
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: OdbcParameter(String,OdbcType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> 매개 변수 이름, 데이터 형식, 길이, 원본 열 이름, 매개 변수 방향, 전체 자릿수, 및 기타 속성을 사용 하는 클래스입니다."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and displays the <xref:System.Data.Odbc.OdbcParameter.ParameterName%2A>.  \n  \n [!code-cs[Classic WebData OdbcParameter.OdbcParameter4#1](~/add/codesnippet/csharp/46568e54-ed99-4cb1-9dd6-_1.cs)]\n [!code-vb[Classic WebData OdbcParameter.OdbcParameter4#1](~/add/codesnippet/visualbasic/46568e54-ed99-4cb1-9dd6-_1.vb)]"
  syntax:
    content: public OdbcParameter (string parameterName, System.Data.Odbc.OdbcType odbcType, int size, System.Data.ParameterDirection parameterDirection, bool isNullable, byte precision, byte scale, string srcColumn, System.Data.DataRowVersion srcVersion, object value);
    parameters:
    - id: parameterName
      type: System.String
      description: "매개 변수의 이름입니다."
    - id: odbcType
      type: System.Data.Odbc.OdbcType
      description: "중 하나는 <xref href=&quot;System.Data.Odbc.OdbcType&quot;> </xref> 값입니다."
    - id: size
      type: System.Int32
      description: "매개 변수의 길이입니다."
    - id: parameterDirection
      type: System.Data.ParameterDirection
      description: "중 하나는 <xref href=&quot;System.Data.ParameterDirection&quot;> </xref> 값입니다."
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>필드의 값을 null; 허용 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: precision
      type: System.Byte
      description: "부분 왼쪽과 하는 소수점 오른쪽의 총 수 <xref:System.Data.Odbc.OdbcParameter.Value*>확인 됩니다.</xref:System.Data.Odbc.OdbcParameter.Value*>"
    - id: scale
      type: System.Byte
      description: "되는 소수 자릿수의 총 <xref:System.Data.Odbc.OdbcParameter.Value*>확인 됩니다.</xref:System.Data.Odbc.OdbcParameter.Value*>"
    - id: srcColumn
      type: System.String
      description: "원본 열의 이름입니다."
    - id: srcVersion
      type: System.Data.DataRowVersion
      description: "중 하나는 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> 값입니다."
    - id: value
      type: System.Object
      description: "<xref:System.Object>변수의 값인은 <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref>.</xref:System.Object>"
  overload: System.Data.Odbc.OdbcParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "제공 된 값이 고 <code> type </code> 매개 변수는 올바르지 않은 백 엔드 데이터 형식입니다."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)
  id: '#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)'
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: OdbcParameter(String,OdbcType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> 매개 변수 이름, 데이터 형식, 길이, 원본 열 이름, 매개 변수 방향, 전체 자릿수, 및 기타 속성을 사용 하는 클래스입니다."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and displays the <xref:System.Data.Odbc.OdbcParameter.ParameterName%2A>.  \n  \n```vb#  \nPublic Sub CreateOdbcParameter()  \n  Dim parameter As New OdbcParameter(\"Description\", OdbcType.VarChar, 11, ParameterDirection.Output, True, 0, 0, \"Description\", DataRowVersion.Current, False, \"garden hose\")  \n  MessageBox.Show(parameter.ToString())  \nEnd Sub  \n```  \n  \n```c#  \npublic void CreateOdbcParameter()   \n{  \n  OdbcParameter parameter = new OdbcParameter(\"Description\",OdbcType.VarChar,  \n              11,ParameterDirection.Output,true,0,0,\"Description\",  \n              DataRowVersion.Current, false, \"garden hose\");  \n  MessageBox.Show(parameter.ToString());  \n}  \n```"
  syntax:
    content: public OdbcParameter (string parameterName, System.Data.Odbc.OdbcType odbcType, int size, System.Data.ParameterDirection parameterDirection, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value);
    parameters:
    - id: parameterName
      type: System.String
      description: "매개 변수의 이름입니다."
    - id: odbcType
      type: System.Data.Odbc.OdbcType
      description: "중 하나는 <xref:System.Data.Odbc.OdbcParameter.OdbcType*>값.</xref:System.Data.Odbc.OdbcParameter.OdbcType*>"
    - id: size
      type: System.Int32
      description: "매개 변수의 길이입니다."
    - id: parameterDirection
      type: System.Data.ParameterDirection
      description: "중 하나는 <xref href=&quot;System.Data.ParameterDirection&quot;> </xref> 값입니다."
    - id: precision
      type: System.Byte
      description: "부분 왼쪽과 하는 소수점 오른쪽의 총 수 <xref:System.Data.Odbc.OdbcParameter.Value*>확인 됩니다.</xref:System.Data.Odbc.OdbcParameter.Value*>"
    - id: scale
      type: System.Byte
      description: "되는 소수 자릿수의 총 <xref:System.Data.Odbc.OdbcParameter.Value*>확인 됩니다.</xref:System.Data.Odbc.OdbcParameter.Value*>"
    - id: sourceColumn
      type: System.String
      description: "원본 열의 이름입니다."
    - id: sourceVersion
      type: System.Data.DataRowVersion
      description: "중 하나는 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> 값입니다."
    - id: sourceColumnNullMapping
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>해당 원본 열이 null을 허용 하는 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 없는 경우."
    - id: value
      type: System.Object
      description: "<xref:System.Object>변수의 값인은 <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref>.</xref:System.Object>"
  overload: System.Data.Odbc.OdbcParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "제공 된 값이 고 <code> type </code> 매개 변수는 올바르지 않은 백 엔드 데이터 형식입니다."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.DbType
  id: DbType
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: DbType
  nameWithType: OdbcParameter.DbType
  fullName: System.Data.Odbc.OdbcParameter.DbType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "가져오거나는 <xref href=&quot;System.Data.DbType&quot;> </xref> 매개 변수입니다."
  remarks: "<xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>고 연결 된 DbType.</xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> 따라서 DbType 설정 <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>지원 <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>.</xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> </xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> 변경       지원 되는 데이터 형식의 목록에 대 한 적절 한 참조 <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>멤버.</xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> 자세한 내용은 참조 [DataAdapter 매개 변수](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > <xref:System.Data.DbType>ODBC 용 Microsoft.NET Framework Data Provider에서 지원 되지 않습니다.</xref:System.Data.DbType>"
  example:
  - "The following example calls a **Stored Procedure** with three parameters using the ODBC managed provider.  \n  \n [!code-vb[Classic WebData OdbcParameter.DbType#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcp_1_1.vb)]\n [!code-cs[Classic WebData OdbcParameter.DbType#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcp_1_1.cs)]"
  syntax:
    content: public override System.Data.DbType DbType { get; set; }
    return:
      type: System.Data.DbType
      description: "중 하나는 <xref href=&quot;System.Data.DbType&quot;> </xref> 값입니다. 기본값은 <xref:System.String>.</xref:System.String>"
  overload: System.Data.Odbc.OdbcParameter.DbType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "속성을 유효한 설정 되지 않았습니다 <xref href=&quot;System.Data.DbType&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.Direction
  id: Direction
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: Direction
  nameWithType: OdbcParameter.Direction
  fullName: System.Data.Odbc.OdbcParameter.Direction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "여부는 매개 변수는 입력 전용, 출력 전용, 양방향 또는 저장된 프로시저 반환 값 매개 변수를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "경우는 <xref:System.Data.ParameterDirection>은 `Output`, 및 관련 된 실행 <xref:System.Data.Odbc.OdbcCommand>는 값을 반환 하지 않습니다는 <xref:System.Data.Odbc.OdbcParameter>null 값이 포함 됩니다.</xref:System.Data.Odbc.OdbcParameter> </xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.ParameterDirection> <xref:System.DBNull>클래스</xref:System.DBNull> 를 사용 하 여 null 값 처리       `Output``InputOut`, 및 `ReturnValue` 매개 변수를 호출 하 여 반환 된 <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>호출할 때까지 액세스할 수 없습니다 <xref:System.Data.Odbc.OdbcDataReader.Close%2A>또는 `Dispose` <xref:System.Data.Odbc.OdbcDataReader>.</xref:System.Data.Odbc.OdbcDataReader> </xref:System.Data.Odbc.OdbcDataReader.Close%2A> </xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n```vb#  \nPublic Sub CreateMyProc(connection As OdbcConnection)  \n  \n   Dim command As OdbcCommand = connection.CreateCommand()  \n   command.CommandText = \"{ call MyProc(?,?,?) }\"  \n   command.Parameters.Add(\"\", OdbcType.Int).Value = 1  \n   command.Parameters.Add(\"\", OdbcType.Decimal).Value = 2  \n   command.Parameters.Add(\"\", OdbcType.Decimal).Value = 3  \n  \nEnd Sub  \n```  \n  \n```c#  \npublic void CreateMyProc(OdbcConnection connection)   \n{  \n   OdbcCommand command = connection.CreateCommand();  \n   command.CommandText = \"{ call MyProc(?,?,?) }\";  \n   command.Parameters.Add(\"\", OdbcType.Int).Value = 1;  \n   command.Parameters.Add(\"\", OdbcType.Decimal).Value = 2;  \n   command.Parameters.Add(\"\", OdbcType.Decimal).Value = 3;  \n}  \n```"
  syntax:
    content: public override System.Data.ParameterDirection Direction { get; set; }
    return:
      type: System.Data.ParameterDirection
      description: "중 하나는 <xref href=&quot;System.Data.ParameterDirection&quot;> </xref> 값입니다. 기본값은 <xref uid=&quot;langword_csharp_Input&quot; name=&quot;Input&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Odbc.OdbcParameter.Direction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "유효 기간 중 하나에 속성이 설정 되지 않았습니다 <xref href=&quot;System.Data.ParameterDirection&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.IsNullable
  id: IsNullable
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: IsNullable
  nameWithType: OdbcParameter.IsNullable
  fullName: System.Data.Odbc.OdbcParameter.IsNullable
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "매개 변수가 null 값을 허용 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "<xref:System.DBNull>클래스</xref:System.DBNull> 를 사용 하 여 null 값 처리"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n```vb#  \nPublic Sub CreateOdbcParameter()  \n   Dim parameter As New OdbcParameter(\"Description\", OdbcType.VarChar, 88)  \n   parameter.IsNullable = True  \n   parameter.Direction = ParameterDirection.Output  \nEnd Sub  \n```  \n  \n```c#  \npublic void CreateOdbcParameter()   \n{  \n   OdbcParameter parameter = new OdbcParameter(\"Description\", OdbcType.VarChar, 88);  \n   parameter.IsNullable = true;  \n   parameter.Direction = ParameterDirection.Output;  \n}  \n```"
  syntax:
    content: public override bool IsNullable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>null 값이 허용 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Odbc.OdbcParameter.IsNullable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.OdbcType
  id: OdbcType
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: OdbcType
  nameWithType: OdbcParameter.OdbcType
  fullName: System.Data.Odbc.OdbcParameter.OdbcType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "가져오거나는 <xref href=&quot;System.Data.Odbc.OdbcType&quot;> </xref> 매개 변수입니다."
  remarks: "OdbcType 및 <xref:System.Data.Odbc.OdbcParameter.DbType%2A>연결 됩니다.</xref:System.Data.Odbc.OdbcParameter.DbType%2A> <xref:System.Data.Odbc.OdbcParameter.DbType%2A>변경 내용을 지원 <xref:System.Data.Odbc.OdbcType>.</xref:System.Data.Odbc.OdbcType> OdbcType</xref:System.Data.Odbc.OdbcParameter.DbType%2A> 설정       지원 되는 데이터 형식의 목록에 대 한 적절 한 참조 <xref:System.Data.Odbc.OdbcType>멤버.</xref:System.Data.Odbc.OdbcType> 자세한 내용은 참조 [DataAdapter 매개 변수](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public System.Data.Odbc.OdbcType OdbcType { get; set; }
    return:
      type: System.Data.Odbc.OdbcType
      description: "<xref href=&quot;System.Data.Odbc.OdbcType&quot;> </xref> 값이 고 <xref href=&quot;System.Data.Odbc.OdbcType&quot;> </xref> 매개 변수입니다. 기본값은 <xref uid=&quot;langword_csharp_Nchar&quot; name=&quot;Nchar&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Odbc.OdbcParameter.OdbcType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.ParameterName
  id: ParameterName
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: ParameterName
  nameWithType: OdbcParameter.ParameterName
  fullName: System.Data.Odbc.OdbcParameter.ParameterName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "이름을 가져오거나 설정 합니다.는 <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref>합니다."
  remarks: "명명 된 매개 변수 대신 ODBC.NET 공급자는 명령 텍스트 구문에서 물음표 (?)로 표시 된 위치 매개 변수를 사용 합니다. 매개 변수 개체는 <xref:System.Data.Odbc.OdbcParameterCollection>및 저장된 프로시저에 의해 허용 되는 실제 매개 변수 또는 매개 변수가 있는 SQL 문을 해당 하는 순서에 따라 서로 <xref:System.Data.Odbc.OdbcParameter>개체 매개 변수 이름 대신 컬렉션에 삽입 됩니다.</xref:System.Data.Odbc.OdbcParameter> </xref:System.Data.Odbc.OdbcParameterCollection> 매개 변수 이름은 지정할 수 있지만 매개 변수 개체 바인딩 중에 무시 됩니다."
  example:
  - "The following example assumes that the data source has a table name **MyTable** and a stored procedure named MyProc that is defined as:  \n  \n```  \nCREATE TABLE MyTable (col1 int, col2 smallmoney, col3 decimal)  \nCREATE PROC MyProc (@p1 int, @p2 smallmoney, @p3 decimal) AS INSERT INTO MyTable VALUES (@p1, @p2, @p3)  \n```  \n  \n The following example creates parameters and calls the MyProc stored procedure:  \n  \n```vb#  \nPublic Sub CreateMyProc(connection As OdbcConnection)  \n  \n   Dim command As OdbcCommand = connection.CreateCommand()  \n  \n   command.CommandText = \"{ call MyProc(?,?,?) }\"  \n   command.Parameters.Add(\"\", OdbcType.Int).Value = 1  \n   command.Parameters.Add(\"\", OdbcType.Decimal).Value = 2  \n   command.Parameters.Add(\"\", OdbcType.Decimal).Value = 3  \n  \nEnd Sub  \n```  \n  \n```c#  \npublic void CreateMyProc(OdbcConnection connection)   \n{  \n   OdbcCommand command = myConnection.CreateCommand();  \n  \n   command.CommandText = \"{ call MyProc(?,?,?) }\";  \n   command.Parameters.Add(\"\", OdbcType.Int).Value = 1;  \n   command.Parameters.Add(\"\", OdbcType.Decimal).Value = 2;  \n   command.Parameters.Add(\"\", OdbcType.Decimal).Value = 3;  \n}  \n```"
  syntax:
    content: public override string ParameterName { get; set; }
    return:
      type: System.String
      description: "이름에서 <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref>합니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Data.Odbc.OdbcParameter.ParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.Precision
  id: Precision
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: Precision
  nameWithType: OdbcParameter.Precision
  fullName: System.Data.Odbc.OdbcParameter.Precision
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "나타내는 데 사용 되는 자릿수를 가져오거나 설정 합니다.는 <xref:System.Data.Odbc.OdbcParameter.Value*>속성.</xref:System.Data.Odbc.OdbcParameter.Value*>"
  remarks: "데이터베이스의 값이 아닌 값으로이 속성을 설정 합니다. 데이터 공급자의 구현에 따라 및 오류 코드, truncate, 또는 라운드 데이터를 반환할 수 있습니다.       매개 변수는 전체 자릿수 속성에만 영향을 가진 <xref:System.Data.Odbc.OdbcType>은 `Decimal` 또는 `Numeric`.</xref:System.Data.Odbc.OdbcType> 다른 데이터 형식의 전체 자릿수는 무시 됩니다.      > [!NOTE] > 데이터베이스에 전달 되는 데이터를 강제 변환할이 속성의 사용은 지원 되지 않습니다. 반올림 하거나 그렇지 않으면 데이터베이스에 전달 하기 전에 데이터를 강제를 사용 하 여는 <xref:System.Math>의 일부인 클래스는 `System` 네임 스페이스에 매개 변수의 값을 할당 하기 전에 `Value` 속성.</xref:System.Math>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n```vb#  \nPublic Sub CreateOdbcParameter()  \n    Dim parameter As New OdbcParameter(\"Price\", OdbcType.Decimal)  \n    parameter.Value = 3.1416  \n    parameter.Precision = 8  \n    parameter.Scale = 4  \nEnd Sub   \n```  \n  \n```c#  \npublic void CreateOdbcParameter()   \n {  \n    OdbcParameter parameter = new OdbcParameter(\"Price\", OdbcType.Decimal);  \n    parameter.Value = 3.1416;  \n    parameter.Precision = 8;  \n    parameter.Scale = 4;  \n }  \n```"
  syntax:
    content: public byte Precision { get; set; }
    return:
      type: System.Byte
      description: "나타내는 데 사용 하는 최대 자릿수는 <> </> *> 속성. 기본값은 0으로,이 데이터 공급자에 대 한 전체 자릿수 <> </> *> 합니다."
  overload: System.Data.Odbc.OdbcParameter.Precision*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.ResetDbType
  id: ResetDbType
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: ResetDbType()
  nameWithType: OdbcParameter.ResetDbType()
  fullName: System.Data.Odbc.OdbcParameter.ResetDbType()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "이 연결 된 형식을 다시 설정 <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref>합니다."
  remarks: "명령을 실행할 때 매개 변수 값을 포함 하는 코드 형식의 매개 변수를 명시적으로 설정 하거나 수 또는 매개 변수 값에서 형식을 유추할 수 있습니다. 이 메서드를 호출 하 여 다시 매개 변수에 전달 된 값에서 해당 형식을 유추할 수 있는 매개 변수 다시 설정 합니다. 이 메서드를 호출 영향을 두는 <xref:System.Data.Odbc.OdbcParameter.DbType%2A>및 <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> <xref:System.Data.Odbc.OdbcParameter>.</xref:System.Data.Odbc.OdbcParameter> 속성</xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> </xref:System.Data.Odbc.OdbcParameter.DbType%2A>       ResetDbType 재설정 호출 <xref:System.Data.Odbc.OdbcParameter.DbType%2A>기본값으로 (String).</xref:System.Data.Odbc.OdbcParameter.DbType%2A>"
  syntax:
    content: public override void ResetDbType ();
    parameters: []
  overload: System.Data.Odbc.OdbcParameter.ResetDbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.ResetOdbcType
  id: ResetOdbcType
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: ResetOdbcType()
  nameWithType: OdbcParameter.ResetOdbcType()
  fullName: System.Data.Odbc.OdbcParameter.ResetOdbcType()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "이 연결 된 형식을 다시 설정 <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref>합니다."
  remarks: "명령을 실행할 때 매개 변수 값을 포함 하는 코드 형식의 매개 변수를 명시적으로 설정 하거나 수 또는 매개 변수 값에서 형식을 유추할 수 있습니다. 이 메서드를 호출 하 여 다시 매개 변수에 전달 된 값에서 해당 형식을 유추할 수 있는 매개 변수 다시 설정 합니다. 이 메서드를 호출 영향을 두는 <xref:System.Data.Odbc.OdbcParameter.DbType%2A>및 <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> <xref:System.Data.Odbc.OdbcParameter>.</xref:System.Data.Odbc.OdbcParameter> 속성</xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> </xref:System.Data.Odbc.OdbcParameter.DbType%2A>"
  syntax:
    content: public void ResetOdbcType ();
    parameters: []
  overload: System.Data.Odbc.OdbcParameter.ResetOdbcType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.Scale
  id: Scale
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: Scale
  nameWithType: OdbcParameter.Scale
  fullName: System.Data.Odbc.OdbcParameter.Scale
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "소수 자릿수를 가져오거나 <xref:System.Data.Odbc.OdbcParameter.Value*>확인 됩니다.</xref:System.Data.Odbc.OdbcParameter.Value*>"
  remarks: "눈금 속성은&10; 진수 및 숫자 입력된 매개 변수에 대해서만 사용 됩니다.       데이터베이스의 값이 아닌 값으로이 속성을 설정할 때의 결과 데이터 공급자의 구현에 따라 및 오류 코드는 반환 또는 truncate 수도 있습니다 반올림 데이터.       매개 변수 소수 자릿수 속성에만 영향을 가진 <xref:System.Data.Odbc.OdbcType>은 `Decimal` 또는 `Numeric`.</xref:System.Data.Odbc.OdbcType> 다른 데이터 형식의 소수 자릿수는 무시 됩니다.       SQL Server Native Client 10 (또는 이후 버전)를 사용 하는 경우 형식이 Decimal, Numeric, VarNumeric, DBDate, 또는 DBTimeStamp 변수인 매개 변수를 바인딩하려면 수동으로 적절 한 배율 값을 지정 해야 합니다.      > [!NOTE] > 데이터베이스에 전달 되는 데이터를 강제 변환할이 속성의 사용은 지원 되지 않습니다. 반올림 하거나 그렇지 않으면 데이터베이스에 전달 하기 전에 데이터를 강제를 사용 하 여는 <xref:System.Math>의 일부인 클래스는 `System` 네임 스페이스에 매개 변수의 값을 할당 하기 전에 `Value` 속성.</xref:System.Math>      > [!NOTE] >.NET Framework 버전 1.0에 포함 된.NET framework 데이터 공급자를 확인 하지 않습니다는 `scale` 의 <xref:System.Decimal>매개 변수 값.</xref:System.Decimal> 이 인해 데이터 소스에 삽입 되는 수정 된 데이터가 있습니다. .NET Framework 버전 1.0 사용 하는 경우 유효성 검사는 s`cale` d`ecimal` 매개 변수 값을 설정 하기 전에 값입니다. .NET Framework 버전 1.1 또는 이상 버전에서 사용 하 여 `scale` 초과 하는 값은 `decimal` 매개 변수 소수 자릿수가 잘릴 수 있습니다, 규모에 맞게 기본 ODBC 드라이버의 동작입니다."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n```vb#  \nPublic Sub CreateOdbcParameter()  \n    Dim parameter As New OdbcParameter(\"Price\", OdbcType.Decimal)  \n    parameter.Value = 3.1416  \n    parameter.Precision = 8  \n    parameter.Scale = 4  \nEnd Sub   \n```  \n  \n```c#  \npublic void CreateOdbcParameter()   \n {  \n    OdbcParameter parameter = new OdbcParameter(\"Price\", OdbcType.Decimal);  \n    parameter.Value = 3.1416;  \n    parameter.Precision = 8;  \n    parameter.Scale = 4;  \n }  \n```"
  syntax:
    content: public byte Scale { get; set; }
    return:
      type: System.Byte
      description: "에 소수 자릿수 <xref:System.Data.Odbc.OdbcParameter.Value*>확인 됩니다.</xref:System.Data.Odbc.OdbcParameter.Value*> 기본값은 0입니다."
  overload: System.Data.Odbc.OdbcParameter.Scale*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.Size
  id: Size
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: Size
  nameWithType: OdbcParameter.Size
  fullName: System.Data.Odbc.OdbcParameter.Size
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "열에 데이터의 최대 크기를 가져오거나 설정 합니다."
  remarks: "Size 속성 이진 및 문자열 형식에 사용 됩니다.       문자열이 아닌 데이터 형식 및 ANSI 문자열 데이터의 크기 속성이 바이트 수를 의미합니다. 유니코드 문자열 데이터에 대 한 크기는 문자 수를 나타냅니다. 문자열에 대 한 개수 종결 문자를 포함 하지 않습니다.       가변 길이 데이터 형식에 대 한 `Size` 서버에 전송할 데이터의 최대 양에 대해 설명 합니다. 유니코드 문자열 값에 대 한 예를 들어 `Size` 하나 백 먼저 자로 서버에 전송 되는 데이터의 양을 제한 하기 위해 사용할 수 있습니다.       양방향 및 출력 매개 변수 및 반환 값에 대 한 값을 설정 해야 `Size`합니다. 이 입력된 매개 변수에 대 한 명시적으로 설정의 값에서에서 유추 됩니다 지정된 된 매개 변수의 실제 크기 매개 변수가 있는 문을 실행 하 고 있습니다.       <xref:System.Data.Common.DbParameter.DbType%2A>, <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>, <xref:System.Data.Odbc.OdbcParameter.Value%2A>.</xref:System.Data.Odbc.OdbcParameter.Value%2A> 를 설정 하 여 매개 변수 크기 속성을 유추할 수</xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> </xref:System.Data.Common.DbParameter.DbType%2A> 따라서는 지정할 필요가 없습니다. 그러나에 노출 되지 않습니다 <xref:System.Data.Odbc.OdbcParameter>속성 설정을.</xref:System.Data.Odbc.OdbcParameter> 예를 들어, 매개 변수의 크기 유추 된 경우 `Size` 문이 실행 된 다음 유추 된 값이 포함 되지 않습니다.      > [!NOTE] >에 대 한 프로그램 `OdbcParameter` 와 <xref:System.Data.Odbc.OdbcParameter.Direction%2A>의 `ParameterDirection.Output`, `ParameterDirection.InputOutput`, 또는 `ParameterDirection.ReturnValue`, 지정 된 데이터 원본에 의해 반환 되는 값의 크기를 초과 하는 경우에 명령이 실행 되 면 예외가 throw 됩니다 `Size` <xref:System.Data.Odbc.OdbcParameter>.</xref:System.Data.Odbc.OdbcParameter> </xref:System.Data.Odbc.OdbcParameter.Direction%2A>       고정 길이 데이터 형식, 값에 대 한 `Size` 는 무시 됩니다. 정보 제공 목적으로 검색할 수 있습니다 하 고 공급자 서버에 매개 변수 값을 전송할 때 사용 하는 바이트의 최대 크기를 반환 합니다."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n```vb#  \nPublic Sub CreateOdbcParameter()  \n    Dim myValue As String = \"12 foot scarf - multiple colors, one previous owner\"  \n    Dim parameter As New OdbcParameter(\"Description\", OdbcType.VarChar)  \n    parameter.Direction = ParameterDirection.Output  \n    parameter.Size = myValue.Length  \n    parameter.Value = myValue  \nEnd Sub   \n```  \n  \n```c#  \npublic void CreateOdbcParameter()   \n {  \n    string myValue = \"12 foot scarf - multiple colors, one previous owner\";  \n    OdbcParameter parameter = new OdbcParameter(\"Description\", OdbcType.VarChar);  \n    parameter.Direction = ParameterDirection.Output;  \n    parameter.Size = myValue.Length;  \n    parameter.Value = myValue;  \n }  \n```"
  syntax:
    content: public override int Size { get; set; }
    return:
      type: System.Int32
      description: "열에 데이터의 최대 크기입니다. 기본값은 매개 변수 값에서 유추 됩니다."
  overload: System.Data.Odbc.OdbcParameter.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.SourceColumn
  id: SourceColumn
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: SourceColumn
  nameWithType: OdbcParameter.SourceColumn
  fullName: System.Data.Odbc.OdbcParameter.SourceColumn
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "에 매핑되는 원본 열의 이름을 가져오거나 설정 합니다.는 <xref href=&quot;System.Data.DataSet&quot;> </xref> 를 로드 하거나 반환 <xref:System.Data.Odbc.OdbcParameter.Value*>.</xref:System.Data.Odbc.OdbcParameter.Value*> 사용"
  remarks: "매개 변수의 값이 인 열에서 검색 SourceColumn은 빈 문자열 이외의 값으로 설정 되 면는 `SourceColumn` 이름입니다. 경우 <xref:System.Data.Odbc.OdbcParameter.Direction%2A>로 설정 된 `Input`, <xref:System.Data.DataSet>.</xref:System.Data.DataSet> 값을 가져옵니다</xref:System.Data.Odbc.OdbcParameter.Direction%2A> 경우 `Direction` 로 설정 된 `Output`, 데이터 원본에서 값을 가져옵니다. A `Direction` 의 `InputOutput` 둘의 조합입니다.       SourceColumn 속성을 사용 하는 방법에 대 한 자세한 내용은 참조 [DataAdapter 매개 변수](~/add/includes/ajax-current-ext-md.md) 및 [Dataadapter로 데이터 원본 업데이트](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n```vb#  \nPublic Sub CreateOdbcParameter()  \n    Dim parameter As New OdbcParameter(\"Description\", OdbcType.VarChar, 88)  \n    parameter.SourceColumn = \"Description\"  \nEnd Sub   \n```  \n  \n```c#  \npublic void CreateOdbcParameter()   \n {  \n    OdbcParameter parameter = new OdbcParameter(\"Description\", OdbcType.VarChar, 88);  \n    parameter.SourceColumn = \"Description\";  \n }  \n```"
  syntax:
    content: public override string SourceColumn { get; set; }
    return:
      type: System.String
      description: "이 매개 변수 값을 설정 하는 원본 열의 이름입니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Data.Odbc.OdbcParameter.SourceColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.SourceColumnNullMapping
  id: SourceColumnNullMapping
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: SourceColumnNullMapping
  nameWithType: OdbcParameter.SourceColumnNullMapping
  fullName: System.Data.Odbc.OdbcParameter.SourceColumnNullMapping
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "원본 열이 null을 허용 하는지 여부를 나타내는 값을 가져오거나 설정 합니다. 이렇게 하면 <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> null 허용 열에 대 한 Update 문을 올바르게 생성할 합니다."
  remarks: "SourceColumnNullMapping에서 사용 되는 <xref:System.Data.Common.DbCommandBuilder>null 허용 열을 다룰 때 제대로 업데이트 명령을 생성 합니다.</xref:System.Data.Common.DbCommandBuilder> 일반적으로 SourceColumnNullMapping의 사용이 <xref:System.Data.Common.DbCommandBuilder>.</xref:System.Data.Common.DbCommandBuilder> 으로 제한       <xref:System.Data.Common.DbCommandBuilder>원본 열이 null을 허용 하 고이 속성을 설정 하는지 여부를 확인 하려면이 속성을 사용 하 여 `true` 은 null을 허용 하는 경우 및 `false` 없는 경우.</xref:System.Data.Common.DbCommandBuilder> 때 <xref:System.Data.Common.DbCommandBuilder>은 각 매개 변수에 대해 SourceColumnNullMapping 검사는 Update 문을 생성 합니다.</xref:System.Data.Common.DbCommandBuilder> 속성이 `true`, <xref:System.Data.Common.DbCommandBuilder>다음 예제와 같은 WHERE 절을 생성 합니다.</xref:System.Data.Common.DbCommandBuilder> 이 쿼리 식은 &quot;FieldName&quot; 필드의 이름을 나타냅니다.: ```   ((@IsNull_FieldName = 1 AND FieldName IS NULL) OR      (FieldName = @Original_FieldName))   ``` 필드에 대 한 경우 SourceColumnNullMapping이 false 이면 <xref:System.Data.Common.DbCommandBuilder>다음 WHERE 절을 생성: ```   FieldName = @OriginalFieldName   ``` 또한 @IsNull_FieldName 원본 필드 및 포함 된 경우 null, 0 그렇지 않은 경우 1을 포함 합니다.</xref:System.Data.Common.DbCommandBuilder> 이 메커니즘의 SQL Server 성능 최적화 기능을 허용 하 고 여러 공급자 들 간에 작동 하는 일반적인 코드에 대 한 제공 합니다."
  syntax:
    content: public override bool SourceColumnNullMapping { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>원본 열이 null을 허용 하는 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 없는 경우."
  overload: System.Data.Odbc.OdbcParameter.SourceColumnNullMapping*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.SourceVersion
  id: SourceVersion
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: SourceVersion
  nameWithType: OdbcParameter.SourceVersion
  fullName: System.Data.Odbc.OdbcParameter.SourceVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "가져오거나는 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> <xref:System.Data.Odbc.OdbcParameter.Value*>.</xref:System.Data.Odbc.OdbcParameter.Value*> 를 로드할 때 사용할"
  remarks: "`SourceVersion` ´ â <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>중는 <xref:System.Data.DbDataAdapter.Common.Update%2A>매개 변수 값은 현재 버전 또는 원래 설정 되는지 여부를 결정 하는 작업.</xref:System.Data.DbDataAdapter.Common.Update%2A> </xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> 이렇게 하면 기본 키를 업데이트할 수 있습니다.       이 속성의 버전에는 <xref:System.Data.DataRow>중 하나에서 사용 하는 `Item` 속성 (`DataRow` 인덱서), 또는 <xref:System.Data.DataRow.GetChildRows%2A>메서드.</xref:System.Data.DataRow.GetChildRows%2A> </xref:System.Data.DataRow>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n```vb#  \nPublic Sub CreateOdbcParameter()  \n    Dim parameter As New OdbcParameter(\"Description\", OdbcType.VarChar, 88)  \n    parameter.SourceColumn = \"Description\"  \n    parameter.SourceVersion = DataRowVersion.Current  \nEnd Sub   \n```  \n  \n```c#  \npublic void CreateOdbcParameter()   \n {  \n    OdbcParameter parameter = new OdbcParameter(\"Description\", OdbcType.VarChar, 88);  \n    parameter.SourceColumn = \"Description\";  \n    parameter.SourceVersion = DataRowVersion.Current;  \n }  \n```"
  syntax:
    content: public override System.Data.DataRowVersion SourceVersion { get; set; }
    return:
      type: System.Data.DataRowVersion
      description: "중 하나는 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> 값입니다. 기본값은 현재 합니다."
  overload: System.Data.Odbc.OdbcParameter.SourceVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OdbcParameter.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcParameter.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "이 멤버에 대 한 참조 &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.Odbc.OdbcParameter>인스턴스로 캐스팅 되는 <xref:System.ICloneable>인터페이스.</xref:System.ICloneable> </xref:System.Data.Odbc.OdbcParameter>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "새 <xref:System.Object>이 인스턴스의 복사본입니다.</xref:System.Object>"
  overload: System.Data.Odbc.OdbcParameter.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.ToString
  id: ToString
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: ToString()
  nameWithType: OdbcParameter.ToString()
  fullName: System.Data.Odbc.OdbcParameter.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "<xref:System.Data.Odbc.OdbcParameter.ParameterName*>.</xref:System.Data.Odbc.OdbcParameter.ParameterName*> 를 포함 하는 문자열을 가져옵니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "<xref:System.Data.Odbc.OdbcParameter.ParameterName*>.</xref:System.Data.Odbc.OdbcParameter.ParameterName*> 를 포함 하는 문자열"
  overload: System.Data.Odbc.OdbcParameter.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.Value
  id: Value
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: Value
  nameWithType: OdbcParameter.Value
  fullName: System.Data.Odbc.OdbcParameter.Value
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "매개 변수의 값을 가져오거나 설정 합니다."
  remarks: "에 바인딩된 값에 대 한 입력된 매개 변수는 <xref:System.Data.Odbc.OdbcCommand>서버로 보내집니다.</xref:System.Data.Odbc.OdbcCommand> 완료에는 값이 설정 출력 및 반환 값 매개 변수는 <xref:System.Data.Odbc.OdbcCommand>후의 <xref:System.Data.Odbc.OdbcDataReader>닫혀.</xref:System.Data.Odbc.OdbcDataReader> </xref:System.Data.Odbc.OdbcCommand>       서버에 null 매개 변수 값을 보낼 때 사용자를 지정 해야 <xref:System.DBNull>, null이 아닌.</xref:System.DBNull> 시스템에서 null 값은 값이 없는 빈 개체입니다. <xref:System.DBNull>null 값을 나타내는 데 사용 됩니다.</xref:System.DBNull> 기본값을 사용할 수 값을 null로 설정 하는 기본값이 지정 된 매개 변수가 있는 저장된 프로시저를 호출 하는 매개 변수를 사용 합니다.       응용 프로그램 데이터베이스 형식을 지정 하는 경우 바인딩된 값 공급자가 서버에 데이터를 보낼 때 해당 형식으로 변환 됩니다. 공급자가 지 원하는 경우 모든 유형의 값을 변환 하는 <xref:System.IConvertible>인터페이스.</xref:System.IConvertible> 지정된 된 형식의 값과 호환 되지 않는 경우 변환 오류가 발생할 수 있습니다.       둘 다는 <xref:System.Data.Odbc.OdbcParameter.DbType%2A>및 <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>속성 값을 설정 하 여 유추할 수 있습니다.</xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> </xref:System.Data.Odbc.OdbcParameter.DbType%2A> 해당 하는 경우 크기, 전체 자릿수 및 소수 자릿수에서에서 유추 값 매개 변수가 있는 문을 실행 합니다. 그러나 유추 된 값은 사용자에 게 노출 되지 않습니다.       Value 속성을 덮어씁니다는 `Update` 메서드."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n```vb#  \nPublic Sub CreateOdbcParameter()  \n    Dim parameter As New OdbcParameter(\"Description\", OdbcType.VarChar, 88)  \n    parameter.Value = \"garden hose\"  \nEnd Sub   \n```  \n  \n```c#  \npublic void CreateOdbcParameter()   \n {  \n    OdbcParameter parameter = new OdbcParameter(\"Description\", OdbcType.VarChar, 88);  \n    parameter.Value = \"garden hose\";  \n }  \n```"
  syntax:
    content: public override object Value { get; set; }
    return:
      type: System.Object
      description: "<xref:System.Object>매개 변수 값.</xref:System.Object> 기본값은 null입니다."
  overload: System.Data.Odbc.OdbcParameter.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbParameter
  isExternal: false
  name: System.Data.Common.DbParameter
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Data.Odbc.OdbcParameter.#ctor
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcParameter()
  nameWithType: OdbcParameter.OdbcParameter()
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter()
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType)
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcParameter(String,OdbcType)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Odbc.OdbcType
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcType
  nameWithType: OdbcType
  fullName: System.Data.Odbc.OdbcType
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Object)
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcParameter(String,Object)
  nameWithType: OdbcParameter.OdbcParameter(String,Object)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32)
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcParameter(String,OdbcType,Int32)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.String)
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcParameter(String,OdbcType,Int32,String)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32,String)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32,String)
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcParameter(String,OdbcType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
- uid: System.Data.ParameterDirection
  parent: System.Data
  isExternal: false
  name: ParameterDirection
  nameWithType: ParameterDirection
  fullName: System.Data.ParameterDirection
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.DataRowVersion
  parent: System.Data
  isExternal: false
  name: DataRowVersion
  nameWithType: DataRowVersion
  fullName: System.Data.DataRowVersion
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcParameter(String,OdbcType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)
- uid: System.Data.Odbc.OdbcParameter.DbType
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: DbType
  nameWithType: OdbcParameter.DbType
  fullName: System.Data.Odbc.OdbcParameter.DbType
- uid: System.Data.DbType
  parent: System.Data
  isExternal: false
  name: DbType
  nameWithType: DbType
  fullName: System.Data.DbType
- uid: System.Data.Odbc.OdbcParameter.Direction
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Direction
  nameWithType: OdbcParameter.Direction
  fullName: System.Data.Odbc.OdbcParameter.Direction
- uid: System.Data.Odbc.OdbcParameter.IsNullable
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: IsNullable
  nameWithType: OdbcParameter.IsNullable
  fullName: System.Data.Odbc.OdbcParameter.IsNullable
- uid: System.Data.Odbc.OdbcParameter.OdbcType
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcType
  nameWithType: OdbcParameter.OdbcType
  fullName: System.Data.Odbc.OdbcParameter.OdbcType
- uid: System.Data.Odbc.OdbcParameter.ParameterName
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: ParameterName
  nameWithType: OdbcParameter.ParameterName
  fullName: System.Data.Odbc.OdbcParameter.ParameterName
- uid: System.Data.Odbc.OdbcParameter.Precision
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Precision
  nameWithType: OdbcParameter.Precision
  fullName: System.Data.Odbc.OdbcParameter.Precision
- uid: System.Data.Odbc.OdbcParameter.ResetDbType
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: ResetDbType()
  nameWithType: OdbcParameter.ResetDbType()
  fullName: System.Data.Odbc.OdbcParameter.ResetDbType()
- uid: System.Data.Odbc.OdbcParameter.ResetOdbcType
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: ResetOdbcType()
  nameWithType: OdbcParameter.ResetOdbcType()
  fullName: System.Data.Odbc.OdbcParameter.ResetOdbcType()
- uid: System.Data.Odbc.OdbcParameter.Scale
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Scale
  nameWithType: OdbcParameter.Scale
  fullName: System.Data.Odbc.OdbcParameter.Scale
- uid: System.Data.Odbc.OdbcParameter.Size
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Size
  nameWithType: OdbcParameter.Size
  fullName: System.Data.Odbc.OdbcParameter.Size
- uid: System.Data.Odbc.OdbcParameter.SourceColumn
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: SourceColumn
  nameWithType: OdbcParameter.SourceColumn
  fullName: System.Data.Odbc.OdbcParameter.SourceColumn
- uid: System.Data.Odbc.OdbcParameter.SourceColumnNullMapping
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: SourceColumnNullMapping
  nameWithType: OdbcParameter.SourceColumnNullMapping
  fullName: System.Data.Odbc.OdbcParameter.SourceColumnNullMapping
- uid: System.Data.Odbc.OdbcParameter.SourceVersion
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: SourceVersion
  nameWithType: OdbcParameter.SourceVersion
  fullName: System.Data.Odbc.OdbcParameter.SourceVersion
- uid: System.Data.Odbc.OdbcParameter.System#ICloneable#Clone
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OdbcParameter.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcParameter.System.ICloneable.Clone()
- uid: System.Data.Odbc.OdbcParameter.ToString
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: ToString()
  nameWithType: OdbcParameter.ToString()
  fullName: System.Data.Odbc.OdbcParameter.ToString()
- uid: System.Data.Odbc.OdbcParameter.Value
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Value
  nameWithType: OdbcParameter.Value
  fullName: System.Data.Odbc.OdbcParameter.Value
- uid: System.Data.Odbc.OdbcParameter.#ctor*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcParameter
  nameWithType: OdbcParameter.OdbcParameter
- uid: System.Data.Odbc.OdbcParameter.DbType*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: DbType
  nameWithType: OdbcParameter.DbType
- uid: System.Data.Odbc.OdbcParameter.Direction*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Direction
  nameWithType: OdbcParameter.Direction
- uid: System.Data.Odbc.OdbcParameter.IsNullable*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: IsNullable
  nameWithType: OdbcParameter.IsNullable
- uid: System.Data.Odbc.OdbcParameter.OdbcType*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcType
  nameWithType: OdbcParameter.OdbcType
- uid: System.Data.Odbc.OdbcParameter.ParameterName*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: ParameterName
  nameWithType: OdbcParameter.ParameterName
- uid: System.Data.Odbc.OdbcParameter.Precision*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Precision
  nameWithType: OdbcParameter.Precision
- uid: System.Data.Odbc.OdbcParameter.ResetDbType*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: ResetDbType
  nameWithType: OdbcParameter.ResetDbType
- uid: System.Data.Odbc.OdbcParameter.ResetOdbcType*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: ResetOdbcType
  nameWithType: OdbcParameter.ResetOdbcType
- uid: System.Data.Odbc.OdbcParameter.Scale*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Scale
  nameWithType: OdbcParameter.Scale
- uid: System.Data.Odbc.OdbcParameter.Size*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Size
  nameWithType: OdbcParameter.Size
- uid: System.Data.Odbc.OdbcParameter.SourceColumn*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: SourceColumn
  nameWithType: OdbcParameter.SourceColumn
- uid: System.Data.Odbc.OdbcParameter.SourceColumnNullMapping*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: SourceColumnNullMapping
  nameWithType: OdbcParameter.SourceColumnNullMapping
- uid: System.Data.Odbc.OdbcParameter.SourceVersion*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: SourceVersion
  nameWithType: OdbcParameter.SourceVersion
- uid: System.Data.Odbc.OdbcParameter.System#ICloneable#Clone*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OdbcParameter.System.ICloneable.Clone
- uid: System.Data.Odbc.OdbcParameter.ToString*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: ToString
  nameWithType: OdbcParameter.ToString
- uid: System.Data.Odbc.OdbcParameter.Value*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Value
  nameWithType: OdbcParameter.Value
