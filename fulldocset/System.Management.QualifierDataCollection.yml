### YamlMime:ManagedReference
items:
- uid: System.Management.QualifierDataCollection
  id: QualifierDataCollection
  children:
  - System.Management.QualifierDataCollection.Add(System.String,System.Object)
  - System.Management.QualifierDataCollection.Add(System.String,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - System.Management.QualifierDataCollection.CopyTo(System.Array,System.Int32)
  - System.Management.QualifierDataCollection.CopyTo(System.Management.QualifierData[],System.Int32)
  - System.Management.QualifierDataCollection.Count
  - System.Management.QualifierDataCollection.GetEnumerator
  - System.Management.QualifierDataCollection.IsSynchronized
  - System.Management.QualifierDataCollection.Item(System.String)
  - System.Management.QualifierDataCollection.Remove(System.String)
  - System.Management.QualifierDataCollection.SyncRoot
  - System.Management.QualifierDataCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: QualifierDataCollection
  nameWithType: QualifierDataCollection
  fullName: System.Management.QualifierDataCollection
  type: Class
  summary: "컬렉션을 나타냅니다 <xref href=&quot;System.Management.QualifierData&quot;> </xref> 개체입니다."
  remarks: ''
  example:
  - "The following example lists qualifier information about the **Win32_Service** class using the <xref:System.Management.QualifierData> class. For more information about **Win32_Service**, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.  \n  \n [!code-vb[wminet_QualifierDataCollection#1](~/add/codesnippet/visualbasic/t-system.management.qual_0_1.vb)]\n [!code-cs[wminet_QualifierDataCollection#1](~/add/codesnippet/csharp/t-system.management.qual_0_1.cs)]"
  syntax:
    content: 'public class QualifierDataCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Management.QualifierDataCollection.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: System.Management.QualifierDataCollection
  langs:
  - csharp
  name: Add(String,Object)
  nameWithType: QualifierDataCollection.Add(String,Object)
  fullName: System.Management.QualifierDataCollection.Add(String,Object)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Adds a <xref href=&quot;System.Management.QualifierData&quot;></xref> to the <xref href=&quot;System.Management.QualifierDataCollection&quot;></xref>. 이 오버 로드는 한정자 이름 및 값을 지정 합니다."
  remarks: "##직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public virtual void Add (string qualifierName, object qualifierValue);
    parameters:
    - id: qualifierName
      type: System.String
      description: "이름에서 <xref href=&quot;System.Management.QualifierData&quot;> </xref> 에 추가할 수는 <xref href=&quot;System.Management.QualifierDataCollection&quot;> </xref>합니다."
    - id: qualifierValue
      type: System.Object
      description: "새 한정자에 대 한 값입니다."
  overload: System.Management.QualifierDataCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Management.QualifierDataCollection.Add(System.String,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: Add(System.String,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: System.Management.QualifierDataCollection
  langs:
  - csharp
  name: Add(String,Object,Boolean,Boolean,Boolean,Boolean)
  nameWithType: QualifierDataCollection.Add(String,Object,Boolean,Boolean,Boolean,Boolean)
  fullName: System.Management.QualifierDataCollection.Add(String,Object,Boolean,Boolean,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Adds a <xref href=&quot;System.Management.QualifierData&quot;></xref> to the <xref href=&quot;System.Management.QualifierDataCollection&quot;></xref>. 이 오버 로드에 대 한 모든 속성 값을 지정 된 <xref href=&quot;System.Management.QualifierData&quot;> </xref>합니다."
  remarks: "##직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public virtual void Add (string qualifierName, object qualifierValue, bool isAmended, bool propagatesToInstance, bool propagatesToSubclass, bool isOverridable);
    parameters:
    - id: qualifierName
      type: System.String
      description: "한정자 이름입니다."
    - id: qualifierValue
      type: System.Object
      description: "한정자 값입니다."
    - id: isAmended
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 한정자가 수정 지정 하려면 (`flavor`), 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: propagatesToInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 한정자를 인스턴스; 전파 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: propagatesToSubclass
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 한정자를 서브 클래스로; 전파 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: isOverridable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 한정자의이 값이; 서브 클래스의 인스턴스에서 재정의 될 수 있도록 지정 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Management.QualifierDataCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Management.QualifierDataCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Management.QualifierDataCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: QualifierDataCollection.CopyTo(Array,Int32)
  fullName: System.Management.QualifierDataCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "복사본의 <xref href=&quot;System.Management.QualifierDataCollection&quot;> </xref> 를 배열에 있습니다."
  remarks: "##직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "복사할 대상 배열에서 <xref href=&quot;System.Management.QualifierDataCollection&quot;> </xref>합니다."
    - id: index
      type: System.Int32
      description: "복사를 시작할 인덱스입니다."
  overload: System.Management.QualifierDataCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Management.QualifierDataCollection.CopyTo(System.Management.QualifierData[],System.Int32)
  id: CopyTo(System.Management.QualifierData[],System.Int32)
  parent: System.Management.QualifierDataCollection
  langs:
  - csharp
  name: CopyTo(QualifierData[],Int32)
  nameWithType: QualifierDataCollection.CopyTo(QualifierData[],Int32)
  fullName: System.Management.QualifierDataCollection.CopyTo(QualifierData[],Int32)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "복사본의 <xref href=&quot;System.Management.QualifierDataCollection&quot;> </xref> 에 특수 한 <xref href=&quot;System.Management.QualifierData&quot;> </xref> 배열입니다."
  remarks: "##직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public void CopyTo (System.Management.QualifierData[] qualifierArray, int index);
    parameters:
    - id: qualifierArray
      type: System.Management.QualifierData[]
      description: "특수 한 배열 <xref href=&quot;System.Management.QualifierData&quot;> </xref> 를 복사할 대상 개체는 <xref href=&quot;System.Management.QualifierDataCollection&quot;> </xref>합니다."
    - id: index
      type: System.Int32
      description: "복사를 시작할 인덱스입니다."
  overload: System.Management.QualifierDataCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Management.QualifierDataCollection.Count
  id: Count
  parent: System.Management.QualifierDataCollection
  langs:
  - csharp
  name: Count
  nameWithType: QualifierDataCollection.Count
  fullName: System.Management.QualifierDataCollection.Count
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "개수를 가져옵니다 <xref href=&quot;System.Management.QualifierData&quot;> </xref> 개체에 <xref href=&quot;System.Management.QualifierDataCollection&quot;> </xref>합니다."
  remarks: "##속성 값 컬렉션의 개체 수입니다.      ## 직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "반환 된 <xref:System.Int32>컬렉션의 개체 수를 나타내는 값입니다.</xref:System.Int32>"
  overload: System.Management.QualifierDataCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Management.QualifierDataCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Management.QualifierDataCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: QualifierDataCollection.GetEnumerator()
  fullName: System.Management.QualifierDataCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "에 대 한 열거자를 반환 합니다.는 <xref href=&quot;System.Management.QualifierDataCollection&quot;> </xref>합니다. 이 메서드는 강력한 형식입니다."
  remarks: "만 반복할 수 (Visual Basic.NET에서와 같이 `For Each` 문 또는 C# `For` 문)을 통해 앞 으로만 이동 가능한 열거자를 한 번입니다. 인스턴스가 포함 된 메모리는 하는 열거자를 되감을 수 없기 WMI가 해제 됩니다. 따라서는 <xref:System.Management.QualifierDataCollection.Count%2A>되감기를 열거자 요구 하므로 메서드를 사용할 수 없습니다.</xref:System.Management.QualifierDataCollection.Count%2A>       앞 으로만 이동 가능한 열거자는 일반적으로 더 빨리 기본 열거자 보다 적은 메모리를 사용 하 여 적지만 <xref:System.Management.QualifierDataCollection.QualifierDataEnumerator.Reset%2A>.</xref:System.Management.QualifierDataCollection.QualifierDataEnumerator.Reset%2A> 에 대 한 호출을 허용 하지 않습니다.       열거자를 되감아 컬렉션의 개체 여러 열거할 수 있는 유지 됩니다.      ## 직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public System.Management.QualifierDataCollection.QualifierDataEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Management.QualifierDataCollection.QualifierDataEnumerator
      description: "<xref:System.Collections.IEnumerator>컬렉션을 반복에 사용할 수 있는.</xref:System.Collections.IEnumerator>"
  overload: System.Management.QualifierDataCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Management.QualifierDataCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Management.QualifierDataCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: QualifierDataCollection.IsSynchronized
  fullName: System.Management.QualifierDataCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "개체가 동기화 되는지 여부를 나타내는 값을 가져옵니다."
  remarks: "##속성 값 `true` 고, 그렇지 않으면 동기화 된 개체가 있으면 `false`합니다.      ## 직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "반환 된 <xref:System.Boolean>개체가 동기화 되는지 여부를 나타내는 값입니다.</xref:System.Boolean>"
  overload: System.Management.QualifierDataCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Management.QualifierDataCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Management.QualifierDataCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: QualifierDataCollection.Item(String)
  fullName: System.Management.QualifierDataCollection.Item(String)
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "지정 된 가져옵니다 <xref href=&quot;System.Management.QualifierData&quot;> </xref> 에서 <xref href=&quot;System.Management.QualifierDataCollection&quot;> </xref>합니다."
  remarks: "##속성 값 A <xref:System.Management.QualifierData>, 지정 된 이름에 따라.</xref:System.Management.QualifierData>      ## 직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public virtual System.Management.QualifierData this[string qualifierName] { get; }
    parameters:
    - id: qualifierName
      type: System.String
      description: "이름에서 <xref href=&quot;System.Management.QualifierData&quot;> </xref> 에서 액세스 하는 <xref href=&quot;System.Management.QualifierDataCollection&quot;> </xref>합니다."
    return:
      type: System.Management.QualifierData
      description: "반환 된 <xref href=&quot;System.Management.QualifierData&quot;> </xref> 컬렉션의 지정된 된 한정자에 대 한 데이터가 들어 있는입니다."
  overload: System.Management.QualifierDataCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Management.QualifierDataCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Management.QualifierDataCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: QualifierDataCollection.Remove(String)
  fullName: System.Management.QualifierDataCollection.Remove(String)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "제거는 <xref href=&quot;System.Management.QualifierData&quot;> </xref> 에서 <xref href=&quot;System.Management.QualifierDataCollection&quot;> </xref> 이름별 합니다."
  remarks: "##직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public virtual void Remove (string qualifierName);
    parameters:
    - id: qualifierName
      type: System.String
      description: "이름을 <xref href=&quot;System.Management.QualifierData&quot;> </xref> 를 제거 합니다."
  overload: System.Management.QualifierDataCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Management.QualifierDataCollection.SyncRoot
  id: SyncRoot
  parent: System.Management.QualifierDataCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: QualifierDataCollection.SyncRoot
  fullName: System.Management.QualifierDataCollection.SyncRoot
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "동기화에 사용할 개체를 가져옵니다."
  remarks: "##속성 개체를 동기화에 사용할 값입니다.      ## 직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "반환 된 <xref:System.Object>동기화에 사용할 값입니다.</xref:System.Object>"
  overload: System.Management.QualifierDataCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Management.QualifierDataCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Management.QualifierDataCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: QualifierDataCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Management.QualifierDataCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "반환 된 <xref:System.Collections.IEnumerator>반복 하는 <xref href=&quot;System.Management.QualifierDataCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  remarks: "[Visual Basic, C#]       `foreach` C# 언어의 (`for each` Visual basic에서)은 열거자의 복잡성을 숨깁니다.  따라서 사용 하 여 `foreach` 열거자를 직접 조작 하는 대신이 좋습니다.       열거자는 컬렉션의에서 데이터를 읽는 데 사용할 수 있지만 기본 컬렉션을 수정 하는 사용할 수 없습니다.       처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치 됩니다. <xref:System.Collections.IEnumerator.Reset%2A>또한이 위치로 복원 열거자를 가져옵니다.</xref:System.Collections.IEnumerator.Reset%2A> 이 위치에서, 호출 <xref:System.Collections.IEnumerator.Current%2A>예외를 throw 합니다.</xref:System.Collections.IEnumerator.Current%2A> 따라서 <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> 의 값을 읽기 전에 컬렉션의 첫 번째 요소로 열거자를</xref:System.Collections.IEnumerator.MoveNext%2A> 호출 해야 합니다.       <xref:System.Collections.IEnumerator.Current%2A>될 때까지 동일한 개체를 반환 <xref:System.Collections.IEnumerator.MoveNext%2A>또는 <xref:System.Collections.IEnumerator.Reset%2A>호출 됩니다.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>설정 <xref:System.Collections.IEnumerator.Current%2A>를 다음 요소로.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       경우 <xref:System.Collections.IEnumerator.MoveNext%2A>전달 컬렉션의 마지막 요소 뒤에 열거자는 컬렉션의 끝에 배치 되 고 <xref:System.Collections.IEnumerator.MoveNext%2A>반환 `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> 열거자가 있는 경우이 위치에 대 한 후속 호출에서 <xref:System.Collections.IEnumerator.MoveNext%2A>반환할 수도 `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> 마지막으로 호출 하는 경우 <xref:System.Collections.IEnumerator.MoveNext%2A>반환 `false`호출, <xref:System.Collections.IEnumerator.Current%2A>예외를 throw 합니다.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Current%2A>다시, 컬렉션의 첫 번째 요소를 호출할 수 있습니다 <xref:System.Collections.IEnumerator.Reset%2A>그 뒤 <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A> 설정 하려면       열거자는 컬렉션이 변경 되지으로 유효한 상태를 유지 합니다. 예: 추가, 수정 또는 요소를 삭제, 열거자가 복구할 수 없게 무효화 및 <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A> <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> throw</xref:System.Collections.IEnumerator.Reset%2A> 또는</xref:System.Collections.IEnumerator.MoveNext%2A> 을 다음에 호출할 컬렉션 변경 될 경우 사이 컬렉션이 수정 되는 경우 <xref:System.Collections.IEnumerator.MoveNext%2A>및 <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>열거자가 이미 무효로 되 었 하는 경우에 설정 하는 요소를 반환 합니다.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       열거자는 컬렉션에 배타적으로 액세스가 없습니다. 따라서 컬렉션을 열거지 않습니다 본질적으로 스레드로부터 안전한 프로시저가 합니다. 컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다. 열거 동안 스레드 보안을 보장 하려면 전체 열거 동안 컬렉션을 잠글 하거나 다른 스레드에서 변경 된 내용으로 인해 발생 한 예외를 catch 합니다.       이 메서드는 o (1) 작업."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> for the <xref href=&quot;System.Management.QualifierDataCollection&quot;></xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Management.QualifierDataCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Management.QualifierDataCollection.Add(System.String,System.Object)
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: Add(String,Object)
  nameWithType: QualifierDataCollection.Add(String,Object)
  fullName: System.Management.QualifierDataCollection.Add(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Management.QualifierDataCollection.Add(System.String,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: Add(String,Object,Boolean,Boolean,Boolean,Boolean)
  nameWithType: QualifierDataCollection.Add(String,Object,Boolean,Boolean,Boolean,Boolean)
  fullName: System.Management.QualifierDataCollection.Add(String,Object,Boolean,Boolean,Boolean,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Management.QualifierDataCollection.CopyTo(System.Array,System.Int32)
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: QualifierDataCollection.CopyTo(Array,Int32)
  fullName: System.Management.QualifierDataCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Management.QualifierDataCollection.CopyTo(System.Management.QualifierData[],System.Int32)
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: CopyTo(QualifierData[],Int32)
  nameWithType: QualifierDataCollection.CopyTo(QualifierData[],Int32)
  fullName: System.Management.QualifierDataCollection.CopyTo(QualifierData[],Int32)
- uid: System.Management.QualifierData[]
  parent: System.Management
  isExternal: false
  name: QualifierData
  nameWithType: QualifierData
  fullName: System.Management.QualifierData[]
  spec.csharp:
  - uid: System.Management.QualifierData
    name: QualifierData
    nameWithType: QualifierData
    fullName: QualifierData[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Management.QualifierDataCollection.Count
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: Count
  nameWithType: QualifierDataCollection.Count
  fullName: System.Management.QualifierDataCollection.Count
- uid: System.Management.QualifierDataCollection.GetEnumerator
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: QualifierDataCollection.GetEnumerator()
  fullName: System.Management.QualifierDataCollection.GetEnumerator()
- uid: System.Management.QualifierDataCollection.QualifierDataEnumerator
  parent: System.Management
  isExternal: false
  name: QualifierDataCollection+QualifierDataEnumerator
  nameWithType: QualifierDataCollection+QualifierDataEnumerator
  fullName: System.Management.QualifierDataCollection+QualifierDataEnumerator
- uid: System.Management.QualifierDataCollection.IsSynchronized
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: QualifierDataCollection.IsSynchronized
  fullName: System.Management.QualifierDataCollection.IsSynchronized
- uid: System.Management.QualifierDataCollection.Item(System.String)
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: Item(String)
  nameWithType: QualifierDataCollection.Item(String)
  fullName: System.Management.QualifierDataCollection.Item(String)
- uid: System.Management.QualifierData
  parent: System.Management
  isExternal: false
  name: QualifierData
  nameWithType: QualifierData
  fullName: System.Management.QualifierData
- uid: System.Management.QualifierDataCollection.Remove(System.String)
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: Remove(String)
  nameWithType: QualifierDataCollection.Remove(String)
  fullName: System.Management.QualifierDataCollection.Remove(String)
- uid: System.Management.QualifierDataCollection.SyncRoot
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: SyncRoot
  nameWithType: QualifierDataCollection.SyncRoot
  fullName: System.Management.QualifierDataCollection.SyncRoot
- uid: System.Management.QualifierDataCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: QualifierDataCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Management.QualifierDataCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Management.QualifierDataCollection.Add*
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: Add
  nameWithType: QualifierDataCollection.Add
- uid: System.Management.QualifierDataCollection.CopyTo*
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: CopyTo
  nameWithType: QualifierDataCollection.CopyTo
- uid: System.Management.QualifierDataCollection.Count*
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: Count
  nameWithType: QualifierDataCollection.Count
- uid: System.Management.QualifierDataCollection.GetEnumerator*
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: QualifierDataCollection.GetEnumerator
- uid: System.Management.QualifierDataCollection.IsSynchronized*
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: QualifierDataCollection.IsSynchronized
- uid: System.Management.QualifierDataCollection.Item*
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: Item
  nameWithType: QualifierDataCollection.Item
- uid: System.Management.QualifierDataCollection.Remove*
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: Remove
  nameWithType: QualifierDataCollection.Remove
- uid: System.Management.QualifierDataCollection.SyncRoot*
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: SyncRoot
  nameWithType: QualifierDataCollection.SyncRoot
- uid: System.Management.QualifierDataCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Management.QualifierDataCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: QualifierDataCollection.System.Collections.IEnumerable.GetEnumerator
