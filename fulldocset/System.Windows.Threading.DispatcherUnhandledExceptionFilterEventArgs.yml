### YamlMime:ManagedReference
items:
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  id: DispatcherUnhandledExceptionFilterEventArgs
  children:
  - System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception
  - System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
  langs:
  - csharp
  name: DispatcherUnhandledExceptionFilterEventArgs
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs
  fullName: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  type: Class
  summary: "에 대 한 데이터를 제공는 <xref href=&quot;System.Windows.Threading.Dispatcher&quot;> </xref> <xref href=&quot;System.Windows.Threading.Dispatcher.UnhandledExceptionFilter&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>이벤트가 발생할 때 통해 실행 되는 코드는 <xref:System.Windows.Threading.Dispatcher>처리할 수 없는 예외를 throw 합니다.</xref:System.Windows.Threading.Dispatcher> </xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>       <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>이벤트 발생 시 키 지를 통해는 <xref:System.Windows.Threading.Dispatcher.UnhandledException>이벤트.</xref:System.Windows.Threading.Dispatcher.UnhandledException> </xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>  <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>이벤트 발생과 <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A>는 DispatcherUnhandledExceptionFilterEventArgs로 설정 됩니다 `false`, <xref:System.Windows.Threading.Dispatcher.UnhandledException>이벤트 발생 하지 것입니다.</xref:System.Windows.Threading.Dispatcher.UnhandledException> </xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> </xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>"
  syntax:
    content: 'public sealed class DispatcherUnhandledExceptionFilterEventArgs : System.Windows.Threading.DispatcherEventArgs'
  inheritance:
  - System.EventArgs
  - System.Windows.Threading.DispatcherEventArgs
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherEventArgs.Dispatcher
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception
  id: Exception
  parent: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs.Exception
  fullName: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "디스패처로 코드를 실행할 때 발생 하는 예외를 가져옵니다."
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "예외입니다."
  overload: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
  id: RequestCatch
  parent: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  langs:
  - csharp
  name: RequestCatch
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
  fullName: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "예외를 발생 해야 하 고 이벤트 처리기가 호출 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "<xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>이벤트 발생 시 키 지를 통해는 <xref:System.Windows.Threading.Dispatcher.UnhandledException>이벤트.</xref:System.Windows.Threading.Dispatcher.UnhandledException> </xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>  <xref:System.Windows.Threading.Dispatcher.UnhandledException>켜져 발생 끈 경우 RequestCatch는 <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs>로 설정 된 `false`, <xref:System.Windows.Threading.Dispatcher.UnhandledException>이벤트 발생 하지 것입니다.</xref:System.Windows.Threading.Dispatcher.UnhandledException> </xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> </xref:System.Windows.Threading.Dispatcher.UnhandledException>       이전 처리기 멀티 캐스트 이벤트 수는 이미이 속성을 설정 `false`, 나타내는 예외가 발견 되지 것입니다.  &quot;Catch&quot; 동작 가능성이 가장 높은 디버깅 시나리오를 의미 하기 때문에 다른 모든 항목을 재정의 합니다."
  syntax:
    content: public bool RequestCatch { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Windows.Threading.Dispatcher.UnhandledException&quot;> </xref> 발생 건너뛸 필요가 없으면; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.  기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Threading.DispatcherEventArgs
  isExternal: false
  name: System.Windows.Threading.DispatcherEventArgs
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception
  parent: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  isExternal: false
  name: Exception
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs.Exception
  fullName: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
  parent: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  isExternal: false
  name: RequestCatch
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
  fullName: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception*
  parent: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  isExternal: false
  name: Exception
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs.Exception
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch*
  parent: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  isExternal: false
  name: RequestCatch
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
