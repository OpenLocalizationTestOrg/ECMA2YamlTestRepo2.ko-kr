### YamlMime:ManagedReference
items:
- uid: System.Activities.XamlIntegration.TypeConverterBase
  id: TypeConverterBase
  children:
  - System.Activities.XamlIntegration.TypeConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Activities.XamlIntegration.TypeConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Activities.XamlIntegration.TypeConverterBase.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Activities.XamlIntegration.TypeConverterBase.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: TypeConverterBase
  nameWithType: TypeConverterBase
  fullName: System.Activities.XamlIntegration.TypeConverterBase
  type: Class
  summary: "다양 한 표현에서 개체를 변환에 대 한 사용할 수 있는 형식 변환기 클래스를 파생 하는 메서드를 제공 합니다."
  syntax:
    content: 'public abstract class TypeConverterBase : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Activities.XamlIntegration.TypeConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Activities.XamlIntegration.TypeConverterBase
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: TypeConverterBase.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Activities.XamlIntegration.TypeConverterBase.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.XamlIntegration
  summary: "파생된 클래스에서 재정의 되 면 시스템에서 지정된 된 형식으로 변환할 수 있는지 확인 합니다."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "변환에 사용 되는 컨텍스트 정보입니다."
    - id: sourceType
      type: System.Type
      description: "변환할 원본 형식입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정된 된 형식;에서 변환할 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Activities.XamlIntegration.TypeConverterBase.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.XamlIntegration.TypeConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Activities.XamlIntegration.TypeConverterBase
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: TypeConverterBase.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Activities.XamlIntegration.TypeConverterBase.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.XamlIntegration
  summary: "파생된 클래스에서 재정의 되 면 시스템에 지정된 된 형식으로 변환할 수 있는지 확인 합니다."
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "변환에 사용 되는 컨텍스트 정보입니다."
    - id: destinationType
      type: System.Type
      description: "변환할 대상 형식입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정된 된 형식; 변환할 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Activities.XamlIntegration.TypeConverterBase.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.XamlIntegration.TypeConverterBase.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Activities.XamlIntegration.TypeConverterBase
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: TypeConverterBase.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Activities.XamlIntegration.TypeConverterBase.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.XamlIntegration
  summary: "파생된 클래스에서 재정의 되 면 지정된 된 값을 파생된 클래스에서 지정한 새 표현으로 변환 합니다."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "변환에 사용 되는 컨텍스트 정보입니다."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "선택적 <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> 이 제공 되지 않으면 현재 문화권이 사용 됩니다."
    - id: value
      type: System.Object
      description: "변환할 개체입니다."
    return:
      type: System.Object
      description: "변환 된 값입니다."
  overload: System.Activities.XamlIntegration.TypeConverterBase.ConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.XamlIntegration.TypeConverterBase.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Activities.XamlIntegration.TypeConverterBase
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: TypeConverterBase.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Activities.XamlIntegration.TypeConverterBase.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.XamlIntegration
  summary: "파생된 클래스에서 재정의 되 면 지정된 된 값을 지정한 표현으로 변환 합니다."
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "변환에 사용 되는 컨텍스트 정보입니다."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "선택적 <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> 이 제공 되지 않으면 현재 문화권이 사용 됩니다."
    - id: value
      type: System.Object
      description: "변환할 개체입니다."
    - id: destinationType
      type: System.Type
      description: "변환할 대상 형식입니다."
    return:
      type: System.Object
      description: "변환 된 값입니다."
  overload: System.Activities.XamlIntegration.TypeConverterBase.ConvertTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.Activities.XamlIntegration.TypeConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Activities.XamlIntegration.TypeConverterBase
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: TypeConverterBase.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Activities.XamlIntegration.TypeConverterBase.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.XamlIntegration.TypeConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Activities.XamlIntegration.TypeConverterBase
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: TypeConverterBase.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Activities.XamlIntegration.TypeConverterBase.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Activities.XamlIntegration.TypeConverterBase.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Activities.XamlIntegration.TypeConverterBase
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: TypeConverterBase.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Activities.XamlIntegration.TypeConverterBase.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Activities.XamlIntegration.TypeConverterBase.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Activities.XamlIntegration.TypeConverterBase
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: TypeConverterBase.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Activities.XamlIntegration.TypeConverterBase.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Activities.XamlIntegration.TypeConverterBase.CanConvertFrom*
  parent: System.Activities.XamlIntegration.TypeConverterBase
  isExternal: false
  name: CanConvertFrom
  nameWithType: TypeConverterBase.CanConvertFrom
- uid: System.Activities.XamlIntegration.TypeConverterBase.CanConvertTo*
  parent: System.Activities.XamlIntegration.TypeConverterBase
  isExternal: false
  name: CanConvertTo
  nameWithType: TypeConverterBase.CanConvertTo
- uid: System.Activities.XamlIntegration.TypeConverterBase.ConvertFrom*
  parent: System.Activities.XamlIntegration.TypeConverterBase
  isExternal: false
  name: ConvertFrom
  nameWithType: TypeConverterBase.ConvertFrom
- uid: System.Activities.XamlIntegration.TypeConverterBase.ConvertTo*
  parent: System.Activities.XamlIntegration.TypeConverterBase
  isExternal: false
  name: ConvertTo
  nameWithType: TypeConverterBase.ConvertTo
