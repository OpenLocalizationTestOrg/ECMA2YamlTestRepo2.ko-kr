### YamlMime:ManagedReference
items:
- uid: System.Web.Handlers.ScriptResourceHandler
  id: ScriptResourceHandler
  children:
  - System.Web.Handlers.ScriptResourceHandler.#ctor
  - System.Web.Handlers.ScriptResourceHandler.IsReusable
  - System.Web.Handlers.ScriptResourceHandler.ProcessRequest(System.Web.HttpContext)
  - System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#IsReusable
  - System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
  langs:
  - csharp
  name: ScriptResourceHandler
  nameWithType: ScriptResourceHandler
  fullName: System.Web.Handlers.ScriptResourceHandler
  type: Class
  summary: "어셈블리에 리소스로 포함 되어 있는 스크립트 파일에 대 한 요청을 처리 하는 HTTP 처리기를 제공 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "<xref:System.Web.UI.ScriptManager>클래스</xref:System.Web.UI.ScriptManager> 를 통해 참조 되는 포함 된 스크립트 파일에 대 한 모든 요청을 처리 하는 ScriptResourceHandler 클래스는 ScriptResourceHandler 개체가 포함된 된 스크립트 라이브러리 및 스크립트 라이브러리에 대 한 모든 지역화 된 리소스를 검색합니다. 경우는 <xref:System.Web.UI.ScriptReference.NotifyScriptLoaded%2A>속성이 `true`, ScriptResourceHandler 개체 스크립트 파일의 끝에 개체의 메서드에 대 한 호출을 추가 합니다.</xref:System.Web.UI.ScriptReference.NotifyScriptLoaded%2A>       기본적으로 ScriptResourceHandler 클래스를 압축 하 고 Internet Explorer 7에 대 한 포함 된 스크립트 파일을 캐시 합니다. 압축 및 캐시를 통해 <xref:System.Web.Configuration.ScriptingScriptResourceHandlerSection.EnableCompression%2A>및 <xref:System.Web.Configuration.ScriptingScriptResourceHandlerSection.EnableCaching%2A> <xref:System.Web.Configuration.ScriptingScriptResourceHandlerSection>클래스</xref:System.Web.Configuration.ScriptingScriptResourceHandlerSection> 의 속성</xref:System.Web.Configuration.ScriptingScriptResourceHandlerSection.EnableCaching%2A> </xref:System.Web.Configuration.ScriptingScriptResourceHandlerSection.EnableCompression%2A> 을 설정할 수 있습니다. Web.config 파일에서 이러한 속성을 설정 합니다.      > [!NOTE] > Web.config 파일의 섹션에서 Internet Explorer 7에 대 한 별칭을 만들어 이전 버전의 Internet Explorer에 대 한 압축을 설정 켤 수 있습니다. 그런 다음 프로그래밍 방식으로 설정한 값은 <xref:System.Web.UI.Page.ClientTarget%2A>속성을 해당 별칭.</xref:System.Web.UI.Page.ClientTarget%2A> 그러나 권장 하지는 않습니다이 방법으로 성능이 저하 하면 오류의 위험 수준이 높은 도입 하기 때문에 있습니다.       AJAX 사용 ASP.NET 웹 응용 프로그램에 대 한 기본 Web.config 파일 처리기로는 ScriptResourceHandler를 추가합니다. 수동으로 응용 프로그램에 Web.config 파일에 다음 요소를 포함 하 여 처리기를 추가할 수 있습니다.```   <httpHandlers>     <add verb=&quot;GET,HEAD&quot; path=&quot;ScriptResource.axd&quot;        type=&quot;System.Web.Handlers.ScriptResourceHandler,        System.Web.Extensions, Version=1.0.61025.0, Culture=neutral,        PublicKeyToken=31bf3856ad364e35&quot; validate=&quot;false&quot; />   </httpHandlers>   ```"
  syntax:
    content: 'public class ScriptResourceHandler : System.Web.IHttpHandler'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpHandler
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Handlers.ScriptResourceHandler.#ctor
  id: '#ctor'
  parent: System.Web.Handlers.ScriptResourceHandler
  langs:
  - csharp
  name: ScriptResourceHandler()
  nameWithType: ScriptResourceHandler.ScriptResourceHandler()
  fullName: System.Web.Handlers.ScriptResourceHandler.ScriptResourceHandler()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Handlers
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.Handlers.ScriptResourceHandler&quot;> </xref> 클래스입니다."
  syntax:
    content: public ScriptResourceHandler ();
    parameters: []
  overload: System.Web.Handlers.ScriptResourceHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Handlers.ScriptResourceHandler.IsReusable
  id: IsReusable
  parent: System.Web.Handlers.ScriptResourceHandler
  langs:
  - csharp
  name: IsReusable
  nameWithType: ScriptResourceHandler.IsReusable
  fullName: System.Web.Handlers.ScriptResourceHandler.IsReusable
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Handlers
  summary: "파생된 클래스에서 재정의 되 면 다른 요청에서 클래스의 인스턴스를 사용할 수 있는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: protected virtual bool IsReusable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>모든 경우"
  overload: System.Web.Handlers.ScriptResourceHandler.IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Handlers.ScriptResourceHandler.ProcessRequest(System.Web.HttpContext)
  id: ProcessRequest(System.Web.HttpContext)
  parent: System.Web.Handlers.ScriptResourceHandler
  langs:
  - csharp
  name: ProcessRequest(HttpContext)
  nameWithType: ScriptResourceHandler.ProcessRequest(HttpContext)
  fullName: System.Web.Handlers.ScriptResourceHandler.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Handlers
  summary: "파생된 클래스에서 재정의 되 면 HTTP 웹 프로세스 어셈블리에 리소스로 포함 하는 스크립트 파일에 대 한 요청 합니다."
  syntax:
    content: protected virtual void ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> 내장 서버 개체에 대 한 참조를 제공 하는 개체 (예를 들어 <xref uid=&quot;langword_csharp_Request&quot; name=&quot;Request&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Response&quot; name=&quot;Response&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Session&quot; name=&quot;Session&quot; href=&quot;&quot;> </xref>, 및 <xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;> </xref>) HTTP 요청을 처리 하는 데 사용 되는 합니다."
  overload: System.Web.Handlers.ScriptResourceHandler.ProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#IsReusable
  id: System#Web#IHttpHandler#IsReusable
  isEii: true
  parent: System.Web.Handlers.ScriptResourceHandler
  langs:
  - csharp
  name: System.Web.IHttpHandler.IsReusable
  nameWithType: ScriptResourceHandler.System.Web.IHttpHandler.IsReusable
  fullName: System.Web.Handlers.ScriptResourceHandler.System.Web.IHttpHandler.IsReusable
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Handlers
  summary: "다른 요청을 사용할 수 있는지 여부를 나타내는 값을 가져옵니다는 <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> 인스턴스."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.Handlers.ScriptResourceHandler>인스턴스로 캐스팅 되는 <xref:System.Web.IHttpHandler>인터페이스.</xref:System.Web.IHttpHandler> </xref:System.Web.Handlers.ScriptResourceHandler>"
  syntax:
    content: bool System.Web.IHttpHandler.IsReusable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>모든 경우"
  overload: System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
  id: System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
  isEii: true
  parent: System.Web.Handlers.ScriptResourceHandler
  langs:
  - csharp
  name: System.Web.IHttpHandler.ProcessRequest(HttpContext)
  nameWithType: ScriptResourceHandler.System.Web.IHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.Handlers.ScriptResourceHandler.System.Web.IHttpHandler.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Handlers
  summary: "어셈블리에 리소스로 포함 하는 스크립트 파일에 대 한 HTTP 웹 요청을 처리 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.Handlers.ScriptResourceHandler>인스턴스로 캐스팅 되는 <xref:System.Web.IHttpHandler>인터페이스.</xref:System.Web.IHttpHandler> </xref:System.Web.Handlers.ScriptResourceHandler>"
  syntax:
    content: void IHttpHandler.ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> 내장 서버 개체에 대 한 참조를 제공 하는 개체 (예를 들어 <xref uid=&quot;langword_csharp_Request&quot; name=&quot;Request&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Response&quot; name=&quot;Response&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Session&quot; name=&quot;Session&quot; href=&quot;&quot;> </xref>, 및 <xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;> </xref>) HTTP 요청을 처리 하는 데 사용 되는 합니다."
  overload: System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#ProcessRequest*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "포함된 된 스크립트의 디버그 및 릴리스 버전에 대 한 형식 이름이 일치 하지 않습니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Handlers.ScriptResourceHandler.#ctor
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: ScriptResourceHandler()
  nameWithType: ScriptResourceHandler.ScriptResourceHandler()
  fullName: System.Web.Handlers.ScriptResourceHandler.ScriptResourceHandler()
- uid: System.Web.Handlers.ScriptResourceHandler.IsReusable
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: IsReusable
  nameWithType: ScriptResourceHandler.IsReusable
  fullName: System.Web.Handlers.ScriptResourceHandler.IsReusable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Handlers.ScriptResourceHandler.ProcessRequest(System.Web.HttpContext)
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: ProcessRequest(HttpContext)
  nameWithType: ScriptResourceHandler.ProcessRequest(HttpContext)
  fullName: System.Web.Handlers.ScriptResourceHandler.ProcessRequest(HttpContext)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#IsReusable
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: System.Web.IHttpHandler.IsReusable
  nameWithType: ScriptResourceHandler.System.Web.IHttpHandler.IsReusable
  fullName: System.Web.Handlers.ScriptResourceHandler.System.Web.IHttpHandler.IsReusable
- uid: System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: System.Web.IHttpHandler.ProcessRequest(HttpContext)
  nameWithType: ScriptResourceHandler.System.Web.IHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.Handlers.ScriptResourceHandler.System.Web.IHttpHandler.ProcessRequest(HttpContext)
- uid: System.Web.Handlers.ScriptResourceHandler.#ctor*
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: ScriptResourceHandler
  nameWithType: ScriptResourceHandler.ScriptResourceHandler
- uid: System.Web.Handlers.ScriptResourceHandler.IsReusable*
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: IsReusable
  nameWithType: ScriptResourceHandler.IsReusable
- uid: System.Web.Handlers.ScriptResourceHandler.ProcessRequest*
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: ProcessRequest
  nameWithType: ScriptResourceHandler.ProcessRequest
- uid: System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#IsReusable*
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: System.Web.IHttpHandler.IsReusable
  nameWithType: ScriptResourceHandler.System.Web.IHttpHandler.IsReusable
- uid: System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#ProcessRequest*
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: System.Web.IHttpHandler.ProcessRequest
  nameWithType: ScriptResourceHandler.System.Web.IHttpHandler.ProcessRequest
