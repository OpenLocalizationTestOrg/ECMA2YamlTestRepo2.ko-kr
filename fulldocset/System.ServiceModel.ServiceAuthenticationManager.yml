### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ServiceAuthenticationManager
  id: ServiceAuthenticationManager
  children:
  - System.ServiceModel.ServiceAuthenticationManager.#ctor
  - System.ServiceModel.ServiceAuthenticationManager.Authenticate(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.Uri,System.ServiceModel.Channels.Message@)
  langs:
  - csharp
  name: ServiceAuthenticationManager
  nameWithType: ServiceAuthenticationManager
  fullName: System.ServiceModel.ServiceAuthenticationManager
  type: Class
  summary: "서비스 인증 관리자를 나타냅니다."
  syntax:
    content: public class ServiceAuthenticationManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceAuthenticationManager.#ctor
  id: '#ctor'
  parent: System.ServiceModel.ServiceAuthenticationManager
  langs:
  - csharp
  name: ServiceAuthenticationManager()
  nameWithType: ServiceAuthenticationManager.ServiceAuthenticationManager()
  fullName: System.ServiceModel.ServiceAuthenticationManager.ServiceAuthenticationManager()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "새 인스턴스를 만듭니다 <xref href=&quot;System.ServiceModel.ServiceAuthenticationManager&quot;> </xref>합니다."
  syntax:
    content: public ServiceAuthenticationManager ();
    parameters: []
  overload: System.ServiceModel.ServiceAuthenticationManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceAuthenticationManager.Authenticate(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.Uri,System.ServiceModel.Channels.Message@)
  id: Authenticate(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.Uri,System.ServiceModel.Channels.Message@)
  parent: System.ServiceModel.ServiceAuthenticationManager
  langs:
  - csharp
  name: Authenticate(ReadOnlyCollection<IAuthorizationPolicy>,Uri,Message)
  nameWithType: ServiceAuthenticationManager.Authenticate(ReadOnlyCollection<IAuthorizationPolicy>,Uri,Message)
  fullName: System.ServiceModel.ServiceAuthenticationManager.Authenticate(ReadOnlyCollection<IAuthorizationPolicy>,Uri,Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "지정된 된 메시지를 인증합니다."
  syntax:
    content: public virtual System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> Authenticate (System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> authPolicy, Uri listenUri, ref System.ServiceModel.Channels.Message message);
    parameters:
    - id: authPolicy
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "권한 부여 정책입니다."
    - id: listenUri
      type: System.Uri
      description: "메시지를 받은 URI입니다."
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "메시지를 인증할 수 있습니다."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "반환 &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;합니다."
  overload: System.ServiceModel.ServiceAuthenticationManager.Authenticate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.ServiceAuthenticationManager.#ctor
  parent: System.ServiceModel.ServiceAuthenticationManager
  isExternal: false
  name: ServiceAuthenticationManager()
  nameWithType: ServiceAuthenticationManager.ServiceAuthenticationManager()
  fullName: System.ServiceModel.ServiceAuthenticationManager.ServiceAuthenticationManager()
- uid: System.ServiceModel.ServiceAuthenticationManager.Authenticate(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.Uri,System.ServiceModel.Channels.Message@)
  parent: System.ServiceModel.ServiceAuthenticationManager
  isExternal: false
  name: Authenticate(ReadOnlyCollection<IAuthorizationPolicy>,Uri,Message)
  nameWithType: ServiceAuthenticationManager.Authenticate(ReadOnlyCollection<IAuthorizationPolicy>,Uri,Message)
  fullName: System.ServiceModel.ServiceAuthenticationManager.Authenticate(ReadOnlyCollection<IAuthorizationPolicy>,Uri,Message)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: IAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.ServiceAuthenticationManager.#ctor*
  parent: System.ServiceModel.ServiceAuthenticationManager
  isExternal: false
  name: ServiceAuthenticationManager
  nameWithType: ServiceAuthenticationManager.ServiceAuthenticationManager
- uid: System.ServiceModel.ServiceAuthenticationManager.Authenticate*
  parent: System.ServiceModel.ServiceAuthenticationManager
  isExternal: false
  name: Authenticate
  nameWithType: ServiceAuthenticationManager.Authenticate
