### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.FieldTemplateFactory
  id: FieldTemplateFactory
  children:
  - System.Web.DynamicData.FieldTemplateFactory.#ctor
  - System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  - System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  - System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  - System.Web.DynamicData.FieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  - System.Web.DynamicData.FieldTemplateFactory.Model
  - System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  - System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath
  langs:
  - csharp
  name: FieldTemplateFactory
  nameWithType: FieldTemplateFactory
  fullName: System.Web.DynamicData.FieldTemplateFactory
  type: Class
  summary: "필드 템플릿을 만듭니다."
  remarks: "기본적으로이 클래스가 구현 하는 <xref:System.Web.DynamicData.IFieldTemplateFactory>인터페이스를 사용 하 여는 <xref:System.Web.UI.UserControl>필드 템플릿을 만드는 클래스입니다.</xref:System.Web.UI.UserControl> </xref:System.Web.DynamicData.IFieldTemplateFactory>"
  syntax:
    content: 'public class FieldTemplateFactory : System.Web.DynamicData.IFieldTemplateFactory'
  inheritance:
  - System.Object
  implements:
  - System.Web.DynamicData.IFieldTemplateFactory
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: FieldTemplateFactory()
  nameWithType: FieldTemplateFactory.FieldTemplateFactory()
  fullName: System.Web.DynamicData.FieldTemplateFactory.FieldTemplateFactory()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "인스턴스를 초기화는 <xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;> </xref> 클래스입니다."
  syntax:
    content: public FieldTemplateFactory ();
    parameters: []
  overload: System.Web.DynamicData.FieldTemplateFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  id: BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: BuildVirtualPath(String,MetaColumn,DataBoundControlMode)
  nameWithType: FieldTemplateFactory.BuildVirtualPath(String,MetaColumn,DataBoundControlMode)
  fullName: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(String,MetaColumn,DataBoundControlMode)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "필드 템플릿 이름 및 모드에 따라 필드 템플릿에 가상 경로 구성 합니다."
  remarks: "기본적으로이 메서드는을 사용 하 여 템플릿 이름을 추가 하는 모드.ascx 확장을 추가 하는 다음 필드 템플릿에 대 한 가상 경로 작성 합니다. 예를 들어 경우 `templateName` MyFieldTemplate은 및 `mode` 는 편집, 가상 경로 MyFieldTemplate_Edit.ascx 템플릿 폴더 가상 경로에서 지정한 폴더에이 됩니다."
  syntax:
    content: public virtual string BuildVirtualPath (string templateName, System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode);
    parameters:
    - id: templateName
      type: System.String
      description: "사용할 서식 파일의 이름입니다."
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "필드 템플릿이 적용 되는 데이터 열을 지정 합니다."
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "서식 파일 필드의 표시 모드를 지정합니다."
    return:
      type: System.String
      description: "필드 템플릿에 가상 경로입니다."
  overload: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>templateName</code>null입니다."
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  id: CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  nameWithType: FieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "사용 하 여 필드 서식 파일의 인스턴스를 만듭니다는 <xref href=&quot;System.Web.DynamicData.MetaColumn&quot;> </xref> 클래스는 <xref href=&quot;System.Web.UI.WebControls.DataBoundControlMode&quot;> </xref> 클래스 및 <xref:System.Web.DynamicData.MetaColumn.UIHint*>속성.</xref:System.Web.DynamicData.MetaColumn.UIHint*>"
  syntax:
    content: public virtual System.Web.DynamicData.IFieldTemplate CreateFieldTemplate (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "필드 템플릿이 적용 되는 데이터 열을 지정 합니다."
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "서식 파일 필드의 표시 모드를 지정합니다."
    - id: uiHint
      type: System.String
      description: "사용할 필드 템플릿을 지정 합니다."
    return:
      type: System.Web.DynamicData.IFieldTemplate
      description: "인터페이스의 인스턴스는는 <xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;> </xref> 클래스 구현 합니다."
  overload: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  id: GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)
  nameWithType: FieldTemplateFactory.GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "필드 서식 파일의 가상 경로 결정합니다."
  remarks: "동적 데이터 필드 템플릿은 DynamicData/FieldTemplates에 생성 되어/폴더 필드 템플릿에 대 한 새 폴더를 만들 수 있습니다. 이 메서드는 지정된 된 매개 변수를 사용 하 여 필드 템플릿을 포함 된 폴더에 대 한 가상 경로 확인 합니다."
  syntax:
    content: public virtual string GetFieldTemplateVirtualPath (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "필드 템플릿이 적용 되는 데이터 열을 지정 합니다."
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "필드 템플릿-읽기 전용의 디스플레이 모드, 편집 또는 Insert를 지정합니다."
    - id: uiHint
      type: System.String
      description: "사용할 필드 템플릿을 지정 합니다. 이 매개 변수 영향을 줌 필드 서식 파일을 조회 합니다."
    return:
      type: System.String
      description: "서식 파일 필드의 가상 경로입니다."
  overload: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  id: Initialize(System.Web.DynamicData.MetaModel)
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: Initialize(MetaModel)
  nameWithType: FieldTemplateFactory.Initialize(MetaModel)
  fullName: System.Web.DynamicData.FieldTemplateFactory.Initialize(MetaModel)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "연결 된 <xref href=&quot;System.Web.DynamicData.MetaModel&quot;> </xref> 와 <xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;> </xref>합니다."
  syntax:
    content: public virtual void Initialize (System.Web.DynamicData.MetaModel model);
    parameters:
    - id: model
      type: System.Web.DynamicData.MetaModel
      description: "연결할 데이터 모델을 지정 된 <xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;> </xref>합니다."
  overload: System.Web.DynamicData.FieldTemplateFactory.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.Model
  id: Model
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: Model
  nameWithType: FieldTemplateFactory.Model
  fullName: System.Web.DynamicData.FieldTemplateFactory.Model
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "가져오거나는 <xref href=&quot;System.Web.DynamicData.MetaModel&quot;> </xref> 연관 된는 <xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;> </xref> 클래스"
  remarks: "<xref:System.Web.DynamicData.MetaModel>클래스는 데이터베이스와 도메인 개체 간의 매핑을 나타내는 추상 클래스입니다.</xref:System.Web.DynamicData.MetaModel> 동적 데이터 모델을 나타내는 클래스 (데이터 모델)의 집합을 제공 합니다. 클래스가 개체 관계형 디자이너 (O/R 디자이너)를 통해 생성 됩니다. 이러한 클래스를 생성 하는 LINQ to SQL 클래스 템플릿 사용할 수 있습니다. 이 속성은 가져오기 및 <xref:System.Web.DynamicData.FieldTemplateFactory>클래스</xref:System.Web.DynamicData.FieldTemplateFactory> 와 연결 된 데이터 모델 설정 사용"
  syntax:
    content: public System.Web.DynamicData.MetaModel Model { get; }
    return:
      type: System.Web.DynamicData.MetaModel
      description: "연관 된 모델은 <xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;> </xref>합니다."
  overload: System.Web.DynamicData.FieldTemplateFactory.Model*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  id: PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: PreprocessMode(MetaColumn,DataBoundControlMode)
  nameWithType: FieldTemplateFactory.PreprocessMode(MetaColumn,DataBoundControlMode)
  fullName: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(MetaColumn,DataBoundControlMode)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "데이터 열의 모드를 변경합니다."
  remarks: "동적 데이터의 읽기 전용 이면 삽입, 데이터를 렌더링 하거나 모드를 편집 합니다. 이 메서드는 열에 렌더링 되는 모드를 제어 합니다. 예를 들어 편집 모드 요청이 열이 기본 키 열을 읽기 전용으로 변경 합니다. 기본 키의 일부인 자동으로 생성 되 고 외래 키가 열을 편집할 수 없습니다."
  syntax:
    content: public virtual System.Web.UI.WebControls.DataBoundControlMode PreprocessMode (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "필드 템플릿에 필요한 열입니다."
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "하는 모드 (읽기 전용, 편집 또는 삽입)로 변경 합니다."
    return:
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "열이 렌더링 되는 모드입니다."
  overload: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath
  id: TemplateFolderVirtualPath
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: TemplateFolderVirtualPath
  nameWithType: FieldTemplateFactory.TemplateFolderVirtualPath
  fullName: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "필드 서식 파일을 만들 폴더를 가져오거나 설정 합니다."
  remarks: "필드 템플릿을 생성 하는 기본 폴더는 /DynamicData/FieldTemplates /. 기본 필드 템플릿과 사용자 지정 필드 템플릿을 만들면이 폴더에 포함 되어 있습니다. 만들고 필드 서식 파일에 대 한 다른 폴더를 지정 하는 경우 동적 데이터에 지정한 폴더에 필드 템플릿을 만들어집니다. 필드 템플릿에 대 한 자세한 내용은 참조 [ASP.NET 동적 데이터 스 캐 폴딩](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public string TemplateFolderVirtualPath { get; set; }
    return:
      type: System.String
      description: "경로 필드 서식 파일을 포함 하는 폴더입니다."
  overload: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.DynamicData.FieldTemplateFactory.#ctor
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: FieldTemplateFactory()
  nameWithType: FieldTemplateFactory.FieldTemplateFactory()
  fullName: System.Web.DynamicData.FieldTemplateFactory.FieldTemplateFactory()
- uid: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: BuildVirtualPath(String,MetaColumn,DataBoundControlMode)
  nameWithType: FieldTemplateFactory.BuildVirtualPath(String,MetaColumn,DataBoundControlMode)
  fullName: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(String,MetaColumn,DataBoundControlMode)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.UI.WebControls.DataBoundControlMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataBoundControlMode
  nameWithType: DataBoundControlMode
  fullName: System.Web.UI.WebControls.DataBoundControlMode
- uid: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  nameWithType: FieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
- uid: System.Web.DynamicData.IFieldTemplate
  parent: System.Web.DynamicData
  isExternal: false
  name: IFieldTemplate
  nameWithType: IFieldTemplate
  fullName: System.Web.DynamicData.IFieldTemplate
- uid: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)
  nameWithType: FieldTemplateFactory.GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)
- uid: System.Web.DynamicData.FieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: Initialize(MetaModel)
  nameWithType: FieldTemplateFactory.Initialize(MetaModel)
  fullName: System.Web.DynamicData.FieldTemplateFactory.Initialize(MetaModel)
- uid: System.Web.DynamicData.MetaModel
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Web.DynamicData.MetaModel
- uid: System.Web.DynamicData.FieldTemplateFactory.Model
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: Model
  nameWithType: FieldTemplateFactory.Model
  fullName: System.Web.DynamicData.FieldTemplateFactory.Model
- uid: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: PreprocessMode(MetaColumn,DataBoundControlMode)
  nameWithType: FieldTemplateFactory.PreprocessMode(MetaColumn,DataBoundControlMode)
  fullName: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(MetaColumn,DataBoundControlMode)
- uid: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: TemplateFolderVirtualPath
  nameWithType: FieldTemplateFactory.TemplateFolderVirtualPath
  fullName: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath
- uid: System.Web.DynamicData.FieldTemplateFactory.#ctor*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: FieldTemplateFactory
  nameWithType: FieldTemplateFactory.FieldTemplateFactory
- uid: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: BuildVirtualPath
  nameWithType: FieldTemplateFactory.BuildVirtualPath
- uid: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: CreateFieldTemplate
  nameWithType: FieldTemplateFactory.CreateFieldTemplate
- uid: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: GetFieldTemplateVirtualPath
  nameWithType: FieldTemplateFactory.GetFieldTemplateVirtualPath
- uid: System.Web.DynamicData.FieldTemplateFactory.Initialize*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: Initialize
  nameWithType: FieldTemplateFactory.Initialize
- uid: System.Web.DynamicData.FieldTemplateFactory.Model*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: Model
  nameWithType: FieldTemplateFactory.Model
- uid: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: PreprocessMode
  nameWithType: FieldTemplateFactory.PreprocessMode
- uid: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: TemplateFolderVirtualPath
  nameWithType: FieldTemplateFactory.TemplateFolderVirtualPath
