### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe
  id: PeerNearMe
  children:
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager(System.String,System.String,System.Net.Mail.MailAddress)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.CreateFromPeerEndPoint(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.Dispose(System.Boolean)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Net.PeerToPeer.Collaboration.PeerNearMe)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Object)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Object,System.Object)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.GetHashCode
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.InternalRefreshData(System.Object)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(System.Object)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.OnRefreshDataCompleted(System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.PeerNearMeChanged
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(System.Object)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.ToString
  langs:
  - csharp
  name: PeerNearMe
  nameWithType: PeerNearMe
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe
  type: Class
  summary: "&quot;주변 사람 찾기&quot; 인프라가 있는 피어를 나타냅니다."
  remarks: "이 클래스의 인스턴스를 직접 만들 수 없습니다.  대신, &quot;근처&quot; 호출 피어 피어에 대 한 참조를 정적을 사용 하 여 가져온 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe%2A>가까운 동료의 컬렉션을 반환 하는 메서드.</xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe%2A>       PeerNearMe 개체가 나타내는 피어에에서 없는 경우 반드시 호출 피어 주소록"
  syntax:
    content: 'public class PeerNearMe : System.Net.PeerToPeer.Collaboration.Peer, IEquatable<System.Net.PeerToPeer.Collaboration.PeerNearMe>, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  - System.Net.PeerToPeer.Collaboration.Peer
  implements:
  - System.IEquatable<System.Net.PeerToPeer.Collaboration.PeerNearMe>
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Net.PeerToPeer.Collaboration.Peer.Dispose
  - System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)
  - System.Net.PeerToPeer.Collaboration.Peer.GetObjects
  - System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)
  - System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  - System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)
  - System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted
  - System.Net.PeerToPeer.Collaboration.Peer.IsOnline
  - System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)
  - System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints
  - System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor
  id: '#ctor'
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: PeerNearMe()
  nameWithType: PeerNearMe.PeerNearMe()
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.PeerNearMe()
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "새로운 기본 인스턴스를 초기화는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 클래스입니다."
  syntax:
    content: public PeerNearMe ();
    parameters: []
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: PeerNearMe(SerializationInfo,StreamingContext)
  nameWithType: PeerNearMe.PeerNearMe(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.PeerNearMe(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "새 초기화 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 직렬화에 필요한 관련된 매개 변수를 사용 하 여 인스턴스."
  syntax:
    content: protected PeerNearMe (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 연관 된 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>합니다."
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: "와 연결 된 직렬화 대상은 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>합니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager
  id: AddToContactManager
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: AddToContactManager()
  nameWithType: PeerNearMe.AddToContactManager()
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "생성 한 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref> 에서 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 개체를 사용 하 여 연결의 <xref href=&quot;System.Net.PeerToPeer.Collaboration.ContactManager&quot;> </xref>합니다."
  syntax:
    content: public System.Net.PeerToPeer.Collaboration.PeerContact AddToContactManager ();
    parameters: []
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerContact
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;></xref>와 연결 된 개체는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;> </xref>합니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager*
  exceptions:
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "만들고 연결 하는 공동 작업 인프라 못한는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref> 와 <xref href=&quot;System.Net.PeerToPeer.Collaboration.ContactManager&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager(System.String,System.String,System.Net.Mail.MailAddress)
  id: AddToContactManager(System.String,System.String,System.Net.Mail.MailAddress)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: AddToContactManager(String,String,MailAddress)
  nameWithType: PeerNearMe.AddToContactManager(String,String,MailAddress)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager(String,String,MailAddress)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "생성 한 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref> 관련된 설명 매개 변수를 사용는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 개체를 사용 하 여 연결의 <xref href=&quot;System.Net.PeerToPeer.Collaboration.ContactManager&quot;> </xref>합니다."
  syntax:
    content: public System.Net.PeerToPeer.Collaboration.PeerContact AddToContactManager (string displayName, string nickname, System.Net.Mail.MailAddress emailAddress);
    parameters:
    - id: displayName
      type: System.String
      description: "새로 만든된 대화 상대에 할당 된 표시 이름입니다."
    - id: nickname
      type: System.String
      description: "`nickname` 새로 만든된 연락처를 할당할 수 있습니다."
    - id: emailAddress
      type: System.Net.Mail.MailAddress
      description: "<xref href=&quot;System.Net.Mail.MailAddress&quot;></xref>새로 만든된 연락처를 지정할 전자 메일 주소를 지정 하는 개체입니다."
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerContact
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;></xref>와 연결 된 개체는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 설명 매개 변수를 포함 합니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager*
  exceptions:
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "공동 작업 인프라에서 만들기 또는 업데이트 하지는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref> 와 <xref href=&quot;System.Net.PeerToPeer.Collaboration.ContactManager&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.CreateFromPeerEndPoint(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  id: CreateFromPeerEndPoint(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: CreateFromPeerEndPoint(PeerEndPoint)
  nameWithType: PeerNearMe.CreateFromPeerEndPoint(PeerEndPoint)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.CreateFromPeerEndPoint(PeerEndPoint)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "생성 된 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 개체에서 제공 된 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;> </xref>합니다."
  remarks: "경우 제공 된 <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint>동일한 서브넷에 로그인 피어에 매핑되지 않는 `null` 반환 됩니다.</xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint>"
  syntax:
    content: public static System.Net.PeerToPeer.Collaboration.PeerNearMe CreateFromPeerEndPoint (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);
    parameters:
    - id: peerEndPoint
      type: System.Net.PeerToPeer.Collaboration.PeerEndPoint
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;></xref>피어와 연결 된 끝점을 지정 하는 개체입니다."
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerNearMe
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;></xref>와 연결 된 개체는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;> </xref>합니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.CreateFromPeerEndPoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>peerEndPoint</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "참조 된 <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint*>지정 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint*>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: PeerNearMe.Dispose(Boolean)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "사용 하는 관리 되지 않는 리소스를 해제는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 개체를 선택적으로 관리 되는 리소스를 해제 합니다."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "로 설정 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 와 관리 되지 않는 리소스만 해제 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Net.PeerToPeer.Collaboration.PeerNearMe)
  id: Equals(System.Net.PeerToPeer.Collaboration.PeerNearMe)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: Equals(PeerNearMe)
  nameWithType: PeerNearMe.Equals(PeerNearMe)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(PeerNearMe)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "비교는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 지정 된 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 인스턴스."
  syntax:
    content: public bool Equals (System.Net.PeerToPeer.Collaboration.PeerNearMe other);
    parameters:
    - id: other
      type: System.Net.PeerToPeer.Collaboration.PeerNearMe
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 같은지 여부를 테스트할 인스턴스."
    return:
      type: System.Boolean
      description: "반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 경우는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 인스턴스 공급자에 데이터를 다른 일치 하는 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>other</code> argument is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: PeerNearMe.Equals(Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "비교는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 인스턴스 지정 된 개체입니다."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "같은지 여부를 테스트할 개체입니다."
    return:
      type: System.Boolean
      description: "반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 경우는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 인스턴스 공급자에 데이터를 다른 일치 하는 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Object,System.Object)
  id: Equals(System.Object,System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: Equals(Object,Object)
  nameWithType: PeerNearMe.Equals(Object,Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(Object,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "확인 여부를 지정 된 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 인스턴스가 동일한 지 합니다."
  syntax:
    content: public static bool Equals (object objA, object objB);
    parameters:
    - id: objA
      type: System.Object
      description: "첫 번째 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 을 비교 합니다."
    - id: objB
      type: System.Object
      description: "두 번째 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 을 비교 합니다."
    return:
      type: System.Boolean
      description: "반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 경우는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 제공 하는 인스턴스 데이터를 다른를 일치 하는 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.GetHashCode
  id: GetHashCode
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: PeerNearMe.GetHashCode()
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.GetHashCode()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "에 대 한 해시 코드를 반환 하는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 인스턴스."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "이 형식의 인스턴스를 비교 하는 데 사용 하는 정수 해시 코드는 부호 있는 32 비트 합니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.GetHashCode*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNearMe.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "정보를 표시 한 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 지정 된 직렬화 하는 데 필요한 데이터로 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>합니다. 파생된 된 형식을 기본 형식을 호출 해야 <xref:System.Runtime.Serialization.ISerializable.GetObjectData*>메서드.</xref:System.Runtime.Serialization.ISerializable.GetObjectData*>"
  syntax:
    content: protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 데이터로 채울 합니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "serialization에 대 한 대상입니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.InternalRefreshData(System.Object)
  id: InternalRefreshData(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: InternalRefreshData(Object)
  nameWithType: PeerNearMe.InternalRefreshData(Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.InternalRefreshData(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "관련 응용 프로그램, 개체 및 현재 상태 데이터를 검색 하는 네트워크 작업이 시작 된 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 인스턴스."
  remarks: "검색 되는 데이터 액세스 하 여 캐시에 저장 되는 <xref:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications%2A>및 <xref:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects%2A>메서드도 <xref:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.PresenceStatus%2A>속성.</xref:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.PresenceStatus%2A> </xref:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects%2A> </xref:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications%2A> 호출자가 사용할 하기만 InternalRefreshData 메서드를 지정 된 <xref:System.Net.PeerToPeer.Collaboration.Peer>, <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>, 또는 <xref:System.Net.PeerToPeer.Collaboration.PeerContact>.</xref:System.Net.PeerToPeer.Collaboration.PeerContact> </xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> </xref:System.Net.PeerToPeer.Collaboration.Peer>       이 메서드는 네트워크 작업이 완료 되 고 캐시를 업데이트할 때까지 추가 호출을 차단 합니다.       호출자에 게 로그인 하는 데 필요 하지는 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A>메서드 또는 사용자 인터페이스를 통해이 작업을 성공적으로 완료할 수 있습니다.</xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A>"
  syntax:
    content: protected void InternalRefreshData (object state);
    parameters:
    - id: state
      type: System.Object
      description: "와 관련 된 응용 프로그램, 개체 및 현재 상태 데이터를 지정 된 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 인스턴스."
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.InternalRefreshData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite
  id: Invite
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: Invite()
  nameWithType: PeerNearMe.Invite()
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "원격 피어에 피어 공동 작업 응용 프로그램에 참여 하기 위한 초대를 보냅니다."
  syntax:
    content: public override System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite ();
    parameters: []
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerInvitationResponse&quot;></xref>포함 된 관련 개체 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType&quot;> </xref> 원격 피어가 지정 된 값입니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 개체가 삭제 되었습니다."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;> </xref> 연관는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 에 지정 된는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPointCollection&quot;> </xref> 은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 값 횟수는 연결 된 끝점을 &quot;0&quot; 또는 합니다.      -A <xref:System.Guid>현재 피어 투 피어 응용 프로그램과 연결 되어 있지 않습니다.</xref:System.Guid>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  id: Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: Invite(PeerApplication,String,Byte[])
  nameWithType: PeerNearMe.Invite(PeerApplication,String,Byte[])
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite(PeerApplication,String,Byte[])
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "피어 공동 작업 응용 프로그램 또는 응용 프로그램 초대 지정에 대해 설명 하는 데이터를 포함 하는 원격 피어에 참여 하기 위한 초대를 보냅니다."
  syntax:
    content: public override System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData);
    parameters:
    - id: applicationToInvite
      type: System.Net.PeerToPeer.Collaboration.PeerApplication
      description: "가 나타내는 피어 공동 작업 관련 응용 프로그램을 지정 된 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 인스턴스."
    - id: message
      type: System.String
      description: "응용 프로그램 초대와 함께 원격 피어에 보낼 메시지입니다.  메시지에는 최대 255 자의 유니코드 문자 수 있습니다."
    - id: invitationData
      type: System.Byte[]
      description: "사용자는 초대와 연결할 데이터 blob를 정의 합니다.  크기는 16k (16384 바이트)로 제한 됩니다."
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerInvitationResponse&quot;></xref>포함 된 관련 개체 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType&quot;> </xref> 원격 피어가 지정 된 값입니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 개체가 삭제 되었습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> applicationToInvite </code> 인수 지정 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-<code> applicationToInvite </code> 인수는 빈 <xref:System.Guid>.</xref:System.Guid> 지정      - <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;> </xref> 연관는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 에 지정 된는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPointCollection&quot;> </xref> 은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 값 횟수는 연결 된 끝점을 &quot;0&quot; 또는 합니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(System.Object)
  id: InviteAsync(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: InviteAsync(Object)
  nameWithType: PeerNearMe.InviteAsync(Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "피어에서 초대 응답을 수신 피어 공동 작업 응용 프로그램 참여와 관련 됩니다."
  syntax:
    content: public override void InviteAsync (object userToken);
    parameters:
    - id: userToken
      type: System.Object
      description: "사용자 정의 개체를 식별 하기 위해 비동기 작업의 콜백에 전달 합니다. 이 필수 매개 변수는 모든 비동기 초대 진행 중인 작업에 대해 고유 해야 합니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 개체가 삭제 되었습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> userToken </code> 인수 지정 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "이 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 개체에 유효한 <xref:System.Guid>.</xref:System.Guid> 를 지정 하지 않습니다"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  id: InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: InviteAsync(PeerApplication,String,Byte[],Object)
  nameWithType: PeerNearMe.InviteAsync(PeerApplication,String,Byte[],Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(PeerApplication,String,Byte[],Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "피어 공동 작업 응용 프로그램에 초대에 대 한 피어 로부터 초대 응답을 수신 합니다."
  syntax:
    content: public override void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData, object userToken);
    parameters:
    - id: applicationToInvite
      type: System.Net.PeerToPeer.Collaboration.PeerApplication
      description: "가 나타내는 관련 된 피어 공동 작업 응용 프로그램 정보를 지정 된 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 개체입니다."
    - id: message
      type: System.String
      description: "응용 프로그램 초대와 함께 원격 피어에 보낼 메시지입니다. 메시지에는 최대 255 자의 유니코드 문자 수 있습니다."
    - id: invitationData
      type: System.Byte[]
      description: "사용자는 초대와 연결할 데이터 blob를 정의 합니다.  크기는 16k로 제한 됩니다."
    - id: userToken
      type: System.Object
      description: "사용자 정의 개체를 식별 하기 위해 비동기 작업의 콜백에 전달 합니다. 이 필수 매개 변수는 모든 비동기 초대 진행 중인 작업에 대해 고유 해야 합니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 개체가 삭제 되었습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> applicationToInvite </code> 인수 지정 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> userToken </code> 인수 지정 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-로 지정 된 끝점 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 찾을 수 없습니다.      - <code> applicationToInvite </code> 인수는 빈 <xref:System.Guid>.</xref:System.Guid> 지정"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname
  id: Nickname
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: Nickname
  nameWithType: PeerNearMe.Nickname
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "가져오거나는 <xref:System.String>의 애칭을 나타내는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 개체입니다.</xref:System.String>"
  remarks: "연락처에서 생성 한 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>개체, 관련된 된 대화 상대의 애칭은이 속성 값으로 채워집니다.</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>"
  syntax:
    content: public string Nickname { get; }
    return:
      type: System.String
      description: "<xref:System.String>애칭 나타내는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 개체입니다.</xref:System.String>"
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.OnRefreshDataCompleted(System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs)
  id: OnRefreshDataCompleted(System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: OnRefreshDataCompleted(RefreshDataCompletedEventArgs)
  nameWithType: PeerNearMe.OnRefreshDataCompleted(RefreshDataCompletedEventArgs)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.OnRefreshDataCompleted(RefreshDataCompletedEventArgs)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "신호는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted&quot;> </xref> 이벤트입니다."
  remarks: "이 클래스에서 상속 된 클래스는이 설정을 재정의할 수 경우 메서드를 추가 작업은 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted>이벤트가 발생 합니다.</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted>       또한이 메서드를 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected void OnRefreshDataCompleted (System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs e);
    parameters:
    - id: e
      type: System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs
      description: "에 포함 된 이벤트 데이터는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs&quot;> </xref> 인스턴스."
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.OnRefreshDataCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.PeerNearMeChanged
  id: PeerNearMeChanged
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: PeerNearMeChanged
  nameWithType: PeerNearMe.PeerNearMeChanged
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.PeerNearMeChanged
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "새 때 신호를 받는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 인스턴스가 발견 되 면 더 이상 사용할 수 있는, 관련 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;> </xref> 개체 정보를 변경 합니다."
  syntax:
    content: public static event EventHandler<System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs> PeerNearMeChanged;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData
  id: RefreshData
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: RefreshData()
  nameWithType: PeerNearMe.RefreshData()
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "관련 응용 프로그램, 개체 및 현재 상태 데이터를 검색 하는 네트워크 작업이 시작 된 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 인스턴스."
  remarks: "검색 되는 데이터 액세스 하 여 캐시에 저장 되는 <xref:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications%2A>및 <xref:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects%2A>메서드도 <xref:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.PresenceStatus%2A>속성.</xref:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.PresenceStatus%2A> </xref:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects%2A> </xref:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications%2A> 호출자가 사용할 하기만이 메서드를 지정 된 <xref:System.Net.PeerToPeer.Collaboration.Peer>, <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>, 또는 <xref:System.Net.PeerToPeer.Collaboration.PeerContact>.</xref:System.Net.PeerToPeer.Collaboration.PeerContact> </xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> </xref:System.Net.PeerToPeer.Collaboration.Peer>       이 메서드는 네트워크 작업이 완료 되 고 캐시가 업데이트 될 때까지 추가 호출을 차단 합니다.       호출자에 게 로그인 하는 데 필요 하지는 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A>메서드 또는 사용자 인터페이스를 통해이 작업을 성공적으로 완료할 수 있습니다.</xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A>"
  syntax:
    content: public void RefreshData ();
    parameters: []
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(System.Object)
  id: RefreshDataAsync(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: RefreshDataAsync(Object)
  nameWithType: PeerNearMe.RefreshDataAsync(Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "관련 응용 프로그램, 개체 및 현재 상태 데이터를 검색 하는 네트워크 작업이 시작 된 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 인스턴스."
  remarks: "검색 되는 데이터 액세스 하 여 캐시에 저장 되는 <xref:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications%2A>및 <xref:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects%2A>메서드도 <xref:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.PresenceStatus%2A>속성.</xref:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.PresenceStatus%2A> </xref:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects%2A> </xref:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications%2A>  <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.InternalRefreshData%2A>메서드만 호출자가 경우에 사용 하면 지정 된 <xref:System.Net.PeerToPeer.Collaboration.Peer>, <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>, 또는 <xref:System.Net.PeerToPeer.Collaboration.PeerContact>.</xref:System.Net.PeerToPeer.Collaboration.PeerContact> </xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> </xref:System.Net.PeerToPeer.Collaboration.Peer> </xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.InternalRefreshData%2A>       이 메서드는 네트워크 작업이 완료 되 고 캐시가 업데이트 될 때까지 추가 호출을 차단 합니다.       호출자에 게 로그인 하는 데 필요 하지는 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A>메서드 또는 사용자 인터페이스를 통해이 작업을 성공적으로 완료할 수 있습니다.</xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A>"
  syntax:
    content: public void RefreshDataAsync (object userToken);
    parameters:
    - id: userToken
      type: System.Object
      description: "이 메서드는 작업을 완료 하는 경우 대리자에 전달 되는 사용자 지정 상태 개체입니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 개체가 삭제 되었습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> userToken </code> 인수 지정 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "이전 RefreshDataAsync 호출 아직 완료 되지 않았습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted
  id: RefreshDataCompleted
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: RefreshDataCompleted
  nameWithType: PeerNearMe.RefreshDataCompleted
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "때 발생는 <> </> *> 또는 <> </> *>에 대 한 작업이 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 인스턴스가 완료 되었습니다."
  syntax:
    content: public event EventHandler<System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs> RefreshDataCompleted;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs}
      description: "추가할 수 있습니다."
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNearMe.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "현재 채웁니다 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> serialize 된 원본에서 가져온 데이터를 사용 하 여 인스턴스."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 데이터로 채울 합니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "serialization에 대 한 대상입니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.ToString
  id: ToString
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: ToString()
  nameWithType: PeerNearMe.ToString()
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.ToString()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "반환 <xref:System.String>나타내는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 인스턴스.</xref:System.String>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "<xref:System.String>나타내는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObject&quot;> </xref>합니다.</xref:System.String>"
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.ToString*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref> 개체가 삭제 되었습니다."
  platform:
  - net462
references:
- uid: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: System.Net.PeerToPeer.Collaboration.Peer
- uid: System.Net.PeerToPeer.PeerToPeerException
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerToPeerException
  nameWithType: PeerToPeerException
  fullName: System.Net.PeerToPeer.PeerToPeerException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: PeerNearMe()
  nameWithType: PeerNearMe.PeerNearMe()
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.PeerNearMe()
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: PeerNearMe(SerializationInfo,StreamingContext)
  nameWithType: PeerNearMe.PeerNearMe(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.PeerNearMe(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: AddToContactManager()
  nameWithType: PeerNearMe.AddToContactManager()
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager()
- uid: System.Net.PeerToPeer.Collaboration.PeerContact
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerContact
  nameWithType: PeerContact
  fullName: System.Net.PeerToPeer.Collaboration.PeerContact
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager(System.String,System.String,System.Net.Mail.MailAddress)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: AddToContactManager(String,String,MailAddress)
  nameWithType: PeerNearMe.AddToContactManager(String,String,MailAddress)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager(String,String,MailAddress)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Mail.MailAddress
  parent: System.Net.Mail
  isExternal: false
  name: MailAddress
  nameWithType: MailAddress
  fullName: System.Net.Mail.MailAddress
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.CreateFromPeerEndPoint(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: CreateFromPeerEndPoint(PeerEndPoint)
  nameWithType: PeerNearMe.CreateFromPeerEndPoint(PeerEndPoint)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.CreateFromPeerEndPoint(PeerEndPoint)
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerNearMe
  nameWithType: PeerNearMe
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe
- uid: System.Net.PeerToPeer.Collaboration.PeerEndPoint
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerEndPoint
  nameWithType: PeerEndPoint
  fullName: System.Net.PeerToPeer.Collaboration.PeerEndPoint
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Dispose(System.Boolean)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: PeerNearMe.Dispose(Boolean)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Net.PeerToPeer.Collaboration.PeerNearMe)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: Equals(PeerNearMe)
  nameWithType: PeerNearMe.Equals(PeerNearMe)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(PeerNearMe)
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: Equals(Object)
  nameWithType: PeerNearMe.Equals(Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Object,System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: Equals(Object,Object)
  nameWithType: PeerNearMe.Equals(Object,Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(Object,Object)
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.GetHashCode
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: GetHashCode()
  nameWithType: PeerNearMe.GetHashCode()
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNearMe.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.InternalRefreshData(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: InternalRefreshData(Object)
  nameWithType: PeerNearMe.InternalRefreshData(Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.InternalRefreshData(Object)
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: Invite()
  nameWithType: PeerNearMe.Invite()
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite()
- uid: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerInvitationResponse
  nameWithType: PeerInvitationResponse
  fullName: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: Invite(PeerApplication,String,Byte[])
  nameWithType: PeerNearMe.Invite(PeerApplication,String,Byte[])
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite(PeerApplication,String,Byte[])
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerApplication
  nameWithType: PeerApplication
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: InviteAsync(Object)
  nameWithType: PeerNearMe.InviteAsync(Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(Object)
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: InviteAsync(PeerApplication,String,Byte[],Object)
  nameWithType: PeerNearMe.InviteAsync(PeerApplication,String,Byte[],Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(PeerApplication,String,Byte[],Object)
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: Nickname
  nameWithType: PeerNearMe.Nickname
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.OnRefreshDataCompleted(System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: OnRefreshDataCompleted(RefreshDataCompletedEventArgs)
  nameWithType: PeerNearMe.OnRefreshDataCompleted(RefreshDataCompletedEventArgs)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.OnRefreshDataCompleted(RefreshDataCompletedEventArgs)
- uid: System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: RefreshDataCompletedEventArgs
  nameWithType: RefreshDataCompletedEventArgs
  fullName: System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.PeerNearMeChanged
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: PeerNearMeChanged
  nameWithType: PeerNearMe.PeerNearMeChanged
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.PeerNearMeChanged
- uid: System.EventHandler{System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<PeerNearMeChangedEventArgs>
  nameWithType: EventHandler<PeerNearMeChangedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs
    name: PeerNearMeChangedEventArgs
    nameWithType: PeerNearMeChangedEventArgs
    fullName: PeerNearMeChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: RefreshData()
  nameWithType: PeerNearMe.RefreshData()
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData()
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: RefreshDataAsync(Object)
  nameWithType: PeerNearMe.RefreshDataAsync(Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(Object)
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: RefreshDataCompleted
  nameWithType: PeerNearMe.RefreshDataCompleted
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted
- uid: System.EventHandler{System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<RefreshDataCompletedEventArgs>
  nameWithType: EventHandler<RefreshDataCompletedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs
    name: RefreshDataCompletedEventArgs
    nameWithType: RefreshDataCompletedEventArgs
    fullName: RefreshDataCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNearMe.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.ToString
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: ToString()
  nameWithType: PeerNearMe.ToString()
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.ToString()
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: PeerNearMe
  nameWithType: PeerNearMe.PeerNearMe
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: AddToContactManager
  nameWithType: PeerNearMe.AddToContactManager
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.CreateFromPeerEndPoint*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: CreateFromPeerEndPoint
  nameWithType: PeerNearMe.CreateFromPeerEndPoint
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Dispose*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: Dispose
  nameWithType: PeerNearMe.Dispose
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: Equals
  nameWithType: PeerNearMe.Equals
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.GetHashCode*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: GetHashCode
  nameWithType: PeerNearMe.GetHashCode
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.GetObjectData*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: GetObjectData
  nameWithType: PeerNearMe.GetObjectData
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.InternalRefreshData*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: InternalRefreshData
  nameWithType: PeerNearMe.InternalRefreshData
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: Invite
  nameWithType: PeerNearMe.Invite
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: InviteAsync
  nameWithType: PeerNearMe.InviteAsync
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: Nickname
  nameWithType: PeerNearMe.Nickname
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.OnRefreshDataCompleted*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: OnRefreshDataCompleted
  nameWithType: PeerNearMe.OnRefreshDataCompleted
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: RefreshData
  nameWithType: PeerNearMe.RefreshData
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: RefreshDataAsync
  nameWithType: PeerNearMe.RefreshDataAsync
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: PeerNearMe.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.ToString*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: ToString
  nameWithType: PeerNearMe.ToString
