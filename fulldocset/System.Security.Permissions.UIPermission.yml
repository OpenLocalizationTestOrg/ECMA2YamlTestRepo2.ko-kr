### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.UIPermission
  id: UIPermission
  children:
  - System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionClipboard)
  - System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow)
  - System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow,System.Security.Permissions.UIPermissionClipboard)
  - System.Security.Permissions.UIPermission.Clipboard
  - System.Security.Permissions.UIPermission.Copy
  - System.Security.Permissions.UIPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.UIPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.UIPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.UIPermission.IsUnrestricted
  - System.Security.Permissions.UIPermission.ToXml
  - System.Security.Permissions.UIPermission.Union(System.Security.IPermission)
  - System.Security.Permissions.UIPermission.Window
  langs:
  - csharp
  name: UIPermission
  nameWithType: UIPermission
  fullName: System.Security.Permissions.UIPermission
  type: Class
  summary: "사용자 인터페이스 및 클립보드에 관련 된 사용 권한을 제어 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "Windows의 그리기 및 사용자 입력된 이벤트는 사용자 인터페이스입니다.       Windows를 사용할 수 있는 권한을 다음 중 하나일 수 있습니다: 무제한, <xref:System.Security.Permissions.UIPermissionWindow>만 <xref:System.Security.Permissions.UIPermissionWindow>, 없습니다 그리기 창 또는 사용자 입력 이벤트 액세스 허용 또는.</xref:System.Security.Permissions.UIPermissionWindow> </xref:System.Security.Permissions.UIPermissionWindow> <xref:System.Security.Permissions.UIPermissionWindow>및 <xref:System.Security.Permissions.UIPermissionWindow>제목과 문제가 될 수 있는 코드에 의해 스푸핑을 방지 하기 위해 크기가 제한 됩니다.</xref:System.Security.Permissions.UIPermissionWindow></xref:System.Security.Permissions.UIPermissionWindow>       클립보드를 사용할 수 있는 권한을 다음 중 하나일 수 있습니다: 무제한 쓰기 전용 또는 클립보드 액세스 허용 합니다. 잠재적으로 위험한 응용 프로그램에서 잘라내기, 복사 및 붙여넣기 작업 키보드 명령을 통해 사용자가을 시작 하는 경우 허용 하면서 사용자의 동의 없이 클립보드의 데이터를 가져와 방지 하는 붙여넣기를 제한 합니다."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class UIPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.UIPermission
  langs:
  - csharp
  name: UIPermission(PermissionState)
  nameWithType: UIPermission.UIPermission(PermissionState)
  fullName: System.Security.Permissions.UIPermission.UIPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Permissions.UIPermission&quot;> </xref> 지정 된 대로 완전 제한 또는 무제한 액세스를 사용 하 여 클래스입니다."
  remarks: "이 생성자 중 하나를 생성 합니다. 완전 제한 (`None`) 또는 `Unrestricted` 사용 권한의 형식입니다."
  example:
  - "The following code example shows the use of the UIPermission constructor. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \n  \n [!code-cs[System.Security.Permissions.UIPermission#7](~/add/codesnippet/csharp/e990e3fe-cf11-4eb4-a027-_1.cs)]\n [!code-cpp[System.Security.Permissions.UIPermission#7](~/add/codesnippet/cpp/e990e3fe-cf11-4eb4-a027-_1.cpp)]\n [!code-vb[System.Security.Permissions.UIPermission#7](~/add/codesnippet/visualbasic/e990e3fe-cf11-4eb4-a027-_1.vb)]"
  syntax:
    content: public UIPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "열거형 값 중 하나입니다."
  overload: System.Security.Permissions.UIPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> state </code> 매개 변수가 유효 하지 않거나 <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionClipboard)
  id: '#ctor(System.Security.Permissions.UIPermissionClipboard)'
  parent: System.Security.Permissions.UIPermission
  langs:
  - csharp
  name: UIPermission(UIPermissionClipboard)
  nameWithType: UIPermission.UIPermission(UIPermissionClipboard)
  fullName: System.Security.Permissions.UIPermission.UIPermission(UIPermissionClipboard)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Permissions.UIPermission&quot;> </xref> 클립보드, 및 windows에 액세스할 수 없음에 대 한 사용 권한이 있는 클래스입니다."
  remarks: "클립보드와 창 권한을 설정할 모두에 대 한 매개 변수를 사용 하는 생성자를 사용 합니다."
  example:
  - "The following code example shows the use of the UIPermission constructor. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \n  \n [!code-cs[System.Security.Permissions.UIPermission#9](~/add/codesnippet/csharp/519c51a2-48d5-4ed4-b336-_1.cs)]\n [!code-cpp[System.Security.Permissions.UIPermission#9](~/add/codesnippet/cpp/519c51a2-48d5-4ed4-b336-_1.cpp)]\n [!code-vb[System.Security.Permissions.UIPermission#9](~/add/codesnippet/visualbasic/519c51a2-48d5-4ed4-b336-_1.vb)]"
  syntax:
    content: public UIPermission (System.Security.Permissions.UIPermissionClipboard clipboardFlag);
    parameters:
    - id: clipboardFlag
      type: System.Security.Permissions.UIPermissionClipboard
      description: "열거형 값 중 하나입니다."
  overload: System.Security.Permissions.UIPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> clipboardFlag </code> 매개 변수가 유효 하지 않거나 <xref href=&quot;System.Security.Permissions.UIPermissionClipboard&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow)
  id: '#ctor(System.Security.Permissions.UIPermissionWindow)'
  parent: System.Security.Permissions.UIPermission
  langs:
  - csharp
  name: UIPermission(UIPermissionWindow)
  nameWithType: UIPermission.UIPermission(UIPermissionWindow)
  fullName: System.Security.Permissions.UIPermission.UIPermission(UIPermissionWindow)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Permissions.UIPermission&quot;> </xref> 창 및 클립보드에 액세스할 수 없음에 대 한 사용 권한이 있는 클래스입니다."
  remarks: "클립보드와 창 권한을 설정할 모두에 대 한 매개 변수를 사용 하는 생성자를 사용 합니다."
  example:
  - "The following code example shows the use of the UIPermission constructor. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \n  \n [!code-cs[System.Security.Permissions.UIPermission#8](~/add/codesnippet/csharp/ba800fdb-6254-4e0e-86c5-_1.cs)]\n [!code-cpp[System.Security.Permissions.UIPermission#8](~/add/codesnippet/cpp/ba800fdb-6254-4e0e-86c5-_1.cpp)]\n [!code-vb[System.Security.Permissions.UIPermission#8](~/add/codesnippet/visualbasic/ba800fdb-6254-4e0e-86c5-_1.vb)]"
  syntax:
    content: public UIPermission (System.Security.Permissions.UIPermissionWindow windowFlag);
    parameters:
    - id: windowFlag
      type: System.Security.Permissions.UIPermissionWindow
      description: "열거형 값 중 하나입니다."
  overload: System.Security.Permissions.UIPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> windowFlag </code> 매개 변수가 유효 하지 않거나 <xref href=&quot;System.Security.Permissions.UIPermissionWindow&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow,System.Security.Permissions.UIPermissionClipboard)
  id: '#ctor(System.Security.Permissions.UIPermissionWindow,System.Security.Permissions.UIPermissionClipboard)'
  parent: System.Security.Permissions.UIPermission
  langs:
  - csharp
  name: UIPermission(UIPermissionWindow,UIPermissionClipboard)
  nameWithType: UIPermission.UIPermission(UIPermissionWindow,UIPermissionClipboard)
  fullName: System.Security.Permissions.UIPermission.UIPermission(UIPermissionWindow,UIPermissionClipboard)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Permissions.UIPermission&quot;> </xref> 창 및 클립보드에 지정된 된 권한 사용 하 여 클래스입니다."
  remarks: ''
  example:
  - "The following code example shows the use of the UIPermission constructor. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \n  \n [!code-cs[System.Security.Permissions.UIPermission#10](~/add/codesnippet/csharp/14bd8a50-0977-45af-9b3a-_1.cs)]\n [!code-cpp[System.Security.Permissions.UIPermission#10](~/add/codesnippet/cpp/14bd8a50-0977-45af-9b3a-_1.cpp)]\n [!code-vb[System.Security.Permissions.UIPermission#10](~/add/codesnippet/visualbasic/14bd8a50-0977-45af-9b3a-_1.vb)]"
  syntax:
    content: public UIPermission (System.Security.Permissions.UIPermissionWindow windowFlag, System.Security.Permissions.UIPermissionClipboard clipboardFlag);
    parameters:
    - id: windowFlag
      type: System.Security.Permissions.UIPermissionWindow
      description: "열거형 값 중 하나입니다."
    - id: clipboardFlag
      type: System.Security.Permissions.UIPermissionClipboard
      description: "열거형 값 중 하나입니다."
  overload: System.Security.Permissions.UIPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> windowFlag </code> 매개 변수가 유효 하지 않거나 <xref href=&quot;System.Security.Permissions.UIPermissionWindow&quot;> </xref> 값입니다.       -또는- <code> clipboardFlag </code> 매개 변수가 유효 하지 않거나 <xref href=&quot;System.Security.Permissions.UIPermissionClipboard&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Security.Permissions.UIPermission.Clipboard
  id: Clipboard
  parent: System.Security.Permissions.UIPermission
  langs:
  - csharp
  name: Clipboard
  nameWithType: UIPermission.Clipboard
  fullName: System.Security.Permissions.UIPermission.Clipboard
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "사용 권한이 나타내는 클립보드 액세스를 가져오거나 설정 합니다."
  syntax:
    content: public System.Security.Permissions.UIPermissionClipboard Clipboard { get; set; }
    return:
      type: System.Security.Permissions.UIPermissionClipboard
      description: "중 하나는 <xref href=&quot;System.Security.Permissions.UIPermissionClipboard&quot;> </xref> 값입니다."
  overload: System.Security.Permissions.UIPermission.Clipboard*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.UIPermission.Copy
  id: Copy
  parent: System.Security.Permissions.UIPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: UIPermission.Copy()
  fullName: System.Security.Permissions.UIPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "만들고 현재 사용 권한의 동일한 복사본을 반환 합니다."
  remarks: "사용 권한의 복사본은 원래 사용 권한과 리소스에 동일한 액세스를 권한을 나타냅니다."
  example:
  - "The following code example shows the behavior of the Copy method. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-cs[System.Security.Permissions.UIPermission#5](~/add/codesnippet/csharp/m-system.security.permis_19_1.cs)]\n [!code-cpp[System.Security.Permissions.UIPermission#5](~/add/codesnippet/cpp/m-system.security.permis_19_1.cpp)]\n [!code-vb[System.Security.Permissions.UIPermission#5](~/add/codesnippet/visualbasic/m-system.security.permis_19_1.vb)]"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "현재 사용 권한의 복사본입니다."
  overload: System.Security.Permissions.UIPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.UIPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.UIPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: UIPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.UIPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "지정 된 상태의 XML 인코딩을 사용 권한을 다시 만듭니다."
  remarks: ''
  example:
  - "The following code example shows the behavior of the FromXml method. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-cs[System.Security.Permissions.UIPermission#6](~/add/codesnippet/csharp/b4e05dbf-6e29-4076-9efb-_1.cs)]\n [!code-cpp[System.Security.Permissions.UIPermission#6](~/add/codesnippet/cpp/b4e05dbf-6e29-4076-9efb-_1.cpp)]\n [!code-vb[System.Security.Permissions.UIPermission#6](~/add/codesnippet/visualbasic/b4e05dbf-6e29-4076-9efb-_1.vb)]"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "XML 인코딩이 권한을 다시 생성 하는 데 사용 합니다."
  overload: System.Security.Permissions.UIPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>esd</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> esd </code> 매개 변수가 올바른 권한 요소가 아닙니다.       -또는- <code> esd </code> 매개 변수의 버전 번호가 잘못 되었습니다."
  platform:
  - net462
- uid: System.Security.Permissions.UIPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.UIPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: UIPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.UIPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "만들고 있는 현재 사용 권한 및 지정한 사용 권한의 공통 사용 권한을 반환 합니다."
  remarks: "두 사용 권한의 공통 사항에는 모두 공통으로 설명 하는 작업 집합을 설명 하는 권한입니다. 특히,의 최소 허용 값을 나타내는 <xref:System.Security.Permissions.UIPermissionWindow>및 <xref:System.Security.Permissions.UIPermissionClipboard>의 현재 사용 권한 및 지정한 사용 권한의.</xref:System.Security.Permissions.UIPermissionClipboard> </xref:System.Security.Permissions.UIPermissionWindow>"
  example:
  - "The following code example shows the behavior of the Intersect method. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-cs[System.Security.Permissions.UIPermission#4](~/add/codesnippet/csharp/b36c2eae-237a-4f19-b255-_1.cs)]\n [!code-cpp[System.Security.Permissions.UIPermission#4](~/add/codesnippet/cpp/b36c2eae-237a-4f19-b255-_1.cpp)]\n [!code-vb[System.Security.Permissions.UIPermission#4](~/add/codesnippet/visualbasic/b36c2eae-237a-4f19-b255-_1.vb)]"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "현재 사용 권한 집합과 교차 하는 사용 권한입니다. 현재 사용 권한과 동일한 형식 이어야 합니다."
    return:
      type: System.Security.IPermission
      description: "현재 사용 권한 및 지정한 사용 권한의의 교차 부분을 나타내는 새 사용 권한. 이 새로운 사용 권한은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 교집합이 비어 있는 경우."
  overload: System.Security.Permissions.UIPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code> 매개 변수가 않습니다 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 아니고 현재 사용 권한과 동일한 형식이 있습니다."
  platform:
  - net462
- uid: System.Security.Permissions.UIPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.UIPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: UIPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.UIPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "현재 사용 권한이 지정된 된 사용 권한의 하위 집합 인지 확인 합니다."
  remarks: "현재 권한은 현재 사용 권한에 대 한 성공 하는 모든 요구 사항에 대 한 지정한 사용 권한에 성공 하는 경우 지정된 된 사용 권한의 하위 집합입니다. 즉, 지정한 사용 권한의 하위 집합에 포함 된 권한이 이상 포함 됩니다. 반환할 IsSubsetOf에 대 한 `true`모두는 <xref:System.Security.Permissions.UIPermissionWindow>및 <xref:System.Security.Permissions.UIPermissionClipboard>현재 사용 권한과의 값과 같거나 지정된 된 사용 권한의 값 보다 작거나 허용 되어야 합니다.</xref:System.Security.Permissions.UIPermissionClipboard> </xref:System.Security.Permissions.UIPermissionWindow>"
  example:
  - "The following code example shows the behavior of the IsSubsetOf method. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-cs[System.Security.Permissions.UIPermission#2](~/add/codesnippet/csharp/5bb99814-2dd0-4b32-a4d5-_1.cs)]\n [!code-cpp[System.Security.Permissions.UIPermission#2](~/add/codesnippet/cpp/5bb99814-2dd0-4b32-a4d5-_1.cpp)]\n [!code-vb[System.Security.Permissions.UIPermission#2](~/add/codesnippet/visualbasic/5bb99814-2dd0-4b32-a4d5-_1.vb)]"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "하위 집합 관계를 테스트 하는 사용 권한입니다. 이 사용 권한은 현재 권한과 동일한 형식 이어야 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>현재 사용 권한이 지정 된 사용 권한의 하위 집합이 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Permissions.UIPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code> 매개 변수가 않습니다 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 아니고 현재 사용 권한과 동일한 형식이 있습니다."
  platform:
  - net462
- uid: System.Security.Permissions.UIPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Security.Permissions.UIPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: UIPermission.IsUnrestricted()
  fullName: System.Security.Permissions.UIPermission.IsUnrestricted()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "현재 사용 권한이 제한 되지 않았는지 여부를 나타내는 값을 반환 합니다."
  remarks: "무제한 권한 권한으로 보호 하는 모든 리소스에 대 한 액세스를 나타냅니다."
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>현재 사용 권한이 제한 된; 없는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Permissions.UIPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.UIPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.UIPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: UIPermission.ToXml()
  fullName: System.Security.Permissions.UIPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "사용 권한 및 현재 상태의 XML 인코딩을 만듭니다."
  remarks: ''
  example:
  - "The following code example shows the behavior of the ToXml method. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-cs[System.Security.Permissions.UIPermission#6](~/add/codesnippet/csharp/m-system.security.permis_27_1.cs)]\n [!code-cpp[System.Security.Permissions.UIPermission#6](~/add/codesnippet/cpp/m-system.security.permis_27_1.cpp)]\n [!code-vb[System.Security.Permissions.UIPermission#6](~/add/codesnippet/visualbasic/m-system.security.permis_27_1.vb)]"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "모든 상태 정보를 포함 하는 권한의 XML 인코딩입니다."
  overload: System.Security.Permissions.UIPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.UIPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.UIPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: UIPermission.Union(IPermission)
  fullName: System.Security.Permissions.UIPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "사용 권한 및 지정된 된 사용 권한을 합한 사용 권한을 만듭니다."
  remarks: "Union에 대 한 호출의 결과 지정 된 사용 권한이 나타내는 모든 작업 뿐만 아니라 현재 사용 권한이 나타내는 모든 작업을 나타내는 권한입니다. 특히,의 최대 허용 값을 나타내는 <xref:System.Security.Permissions.UIPermissionWindow>및 <xref:System.Security.Permissions.UIPermissionClipboard>의 현재 사용 권한 및 지정한 사용 권한의.</xref:System.Security.Permissions.UIPermissionClipboard> </xref:System.Security.Permissions.UIPermissionWindow>"
  example:
  - "The following code example shows the behavior of the Union method. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-cs[System.Security.Permissions.UIPermission#3](~/add/codesnippet/csharp/m-system.security.permis_4_1.cs)]\n [!code-cpp[System.Security.Permissions.UIPermission#3](~/add/codesnippet/cpp/m-system.security.permis_4_1.cpp)]\n [!code-vb[System.Security.Permissions.UIPermission#3](~/add/codesnippet/visualbasic/m-system.security.permis_4_1.vb)]"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "현재 사용 권한과 결합할 사용 권한 현재 사용 권한과 동일한 형식 이어야 합니다."
    return:
      type: System.Security.IPermission
      description: "현재 사용 권한 및 지정한 사용 권한의 합집합을 나타내는 새 사용 권한."
  overload: System.Security.Permissions.UIPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code> 매개 변수가 않습니다 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 아니고 현재 사용 권한과 동일한 형식이 있습니다."
  platform:
  - net462
- uid: System.Security.Permissions.UIPermission.Window
  id: Window
  parent: System.Security.Permissions.UIPermission
  langs:
  - csharp
  name: Window
  nameWithType: UIPermission.Window
  fullName: System.Security.Permissions.UIPermission.Window
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "사용 권한이 나타내는 창 액세스를 가져오거나 설정 합니다."
  remarks: ''
  example:
  - "The following code example shows the use of the Window property. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \n  \n [!code-cs[System.Security.Permissions.UIPermission#2](~/add/codesnippet/csharp/p-system.security.permis_25_1.cs)]\n [!code-cpp[System.Security.Permissions.UIPermission#2](~/add/codesnippet/cpp/p-system.security.permis_25_1.cpp)]\n [!code-vb[System.Security.Permissions.UIPermission#2](~/add/codesnippet/visualbasic/p-system.security.permis_25_1.vb)]"
  syntax:
    content: public System.Security.Permissions.UIPermissionWindow Window { get; set; }
    return:
      type: System.Security.Permissions.UIPermissionWindow
      description: "중 하나는 <xref href=&quot;System.Security.Permissions.UIPermissionWindow&quot;> </xref> 값입니다."
  overload: System.Security.Permissions.UIPermission.Window*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: UIPermission(PermissionState)
  nameWithType: UIPermission.UIPermission(PermissionState)
  fullName: System.Security.Permissions.UIPermission.UIPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionClipboard)
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: UIPermission(UIPermissionClipboard)
  nameWithType: UIPermission.UIPermission(UIPermissionClipboard)
  fullName: System.Security.Permissions.UIPermission.UIPermission(UIPermissionClipboard)
- uid: System.Security.Permissions.UIPermissionClipboard
  parent: System.Security.Permissions
  isExternal: false
  name: UIPermissionClipboard
  nameWithType: UIPermissionClipboard
  fullName: System.Security.Permissions.UIPermissionClipboard
- uid: System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow)
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: UIPermission(UIPermissionWindow)
  nameWithType: UIPermission.UIPermission(UIPermissionWindow)
  fullName: System.Security.Permissions.UIPermission.UIPermission(UIPermissionWindow)
- uid: System.Security.Permissions.UIPermissionWindow
  parent: System.Security.Permissions
  isExternal: false
  name: UIPermissionWindow
  nameWithType: UIPermissionWindow
  fullName: System.Security.Permissions.UIPermissionWindow
- uid: System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow,System.Security.Permissions.UIPermissionClipboard)
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: UIPermission(UIPermissionWindow,UIPermissionClipboard)
  nameWithType: UIPermission.UIPermission(UIPermissionWindow,UIPermissionClipboard)
  fullName: System.Security.Permissions.UIPermission.UIPermission(UIPermissionWindow,UIPermissionClipboard)
- uid: System.Security.Permissions.UIPermission.Clipboard
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: Clipboard
  nameWithType: UIPermission.Clipboard
  fullName: System.Security.Permissions.UIPermission.Clipboard
- uid: System.Security.Permissions.UIPermission.Copy
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: Copy()
  nameWithType: UIPermission.Copy()
  fullName: System.Security.Permissions.UIPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.UIPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: UIPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.UIPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.UIPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: UIPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.UIPermission.Intersect(IPermission)
- uid: System.Security.Permissions.UIPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: UIPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.UIPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.UIPermission.IsUnrestricted
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: UIPermission.IsUnrestricted()
  fullName: System.Security.Permissions.UIPermission.IsUnrestricted()
- uid: System.Security.Permissions.UIPermission.ToXml
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: ToXml()
  nameWithType: UIPermission.ToXml()
  fullName: System.Security.Permissions.UIPermission.ToXml()
- uid: System.Security.Permissions.UIPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: UIPermission.Union(IPermission)
  fullName: System.Security.Permissions.UIPermission.Union(IPermission)
- uid: System.Security.Permissions.UIPermission.Window
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: Window
  nameWithType: UIPermission.Window
  fullName: System.Security.Permissions.UIPermission.Window
- uid: System.Security.Permissions.UIPermission.#ctor*
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: UIPermission
  nameWithType: UIPermission.UIPermission
- uid: System.Security.Permissions.UIPermission.Clipboard*
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: Clipboard
  nameWithType: UIPermission.Clipboard
- uid: System.Security.Permissions.UIPermission.Copy*
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: Copy
  nameWithType: UIPermission.Copy
- uid: System.Security.Permissions.UIPermission.FromXml*
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: FromXml
  nameWithType: UIPermission.FromXml
- uid: System.Security.Permissions.UIPermission.Intersect*
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: Intersect
  nameWithType: UIPermission.Intersect
- uid: System.Security.Permissions.UIPermission.IsSubsetOf*
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: UIPermission.IsSubsetOf
- uid: System.Security.Permissions.UIPermission.IsUnrestricted*
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: UIPermission.IsUnrestricted
- uid: System.Security.Permissions.UIPermission.ToXml*
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: ToXml
  nameWithType: UIPermission.ToXml
- uid: System.Security.Permissions.UIPermission.Union*
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: Union
  nameWithType: UIPermission.Union
- uid: System.Security.Permissions.UIPermission.Window*
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: Window
  nameWithType: UIPermission.Window
