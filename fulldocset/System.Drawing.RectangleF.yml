### YamlMime:ManagedReference
items:
- uid: System.Drawing.RectangleF
  id: RectangleF
  children:
  - System.Drawing.RectangleF.#ctor(System.Drawing.PointF,System.Drawing.SizeF)
  - System.Drawing.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.RectangleF.Bottom
  - System.Drawing.RectangleF.Contains(System.Drawing.PointF)
  - System.Drawing.RectangleF.Contains(System.Drawing.RectangleF)
  - System.Drawing.RectangleF.Contains(System.Single,System.Single)
  - System.Drawing.RectangleF.Empty
  - System.Drawing.RectangleF.Equals(System.Object)
  - System.Drawing.RectangleF.FromLTRB(System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.RectangleF.GetHashCode
  - System.Drawing.RectangleF.Height
  - System.Drawing.RectangleF.Inflate(System.Drawing.SizeF)
  - System.Drawing.RectangleF.Inflate(System.Single,System.Single)
  - System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)
  - System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF)
  - System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)
  - System.Drawing.RectangleF.IntersectsWith(System.Drawing.RectangleF)
  - System.Drawing.RectangleF.IsEmpty
  - System.Drawing.RectangleF.Left
  - System.Drawing.RectangleF.Location
  - System.Drawing.RectangleF.Offset(System.Drawing.PointF)
  - System.Drawing.RectangleF.Offset(System.Single,System.Single)
  - System.Drawing.RectangleF.op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  - System.Drawing.RectangleF.op_Implicit(System.Drawing.Rectangle)
  - System.Drawing.RectangleF.op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  - System.Drawing.RectangleF.Right
  - System.Drawing.RectangleF.Size
  - System.Drawing.RectangleF.Top
  - System.Drawing.RectangleF.ToString
  - System.Drawing.RectangleF.Union(System.Drawing.RectangleF,System.Drawing.RectangleF)
  - System.Drawing.RectangleF.Width
  - System.Drawing.RectangleF.X
  - System.Drawing.RectangleF.Y
  langs:
  - csharp
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
  type: Struct
  summary: "사각형의 크기와 위치를 나타내는 네 부동 소수점 숫자의 집합을 저장 합니다. 더 나은 영역 기능을 사용 하 여 한 <xref href=&quot;System.Drawing.Region&quot;> </xref> 개체입니다."
  remarks: "사각형의 너비, 높이 및 왼쪽 위 모서리에서 정의 됩니다."
  syntax:
    content: public struct RectangleF
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.#ctor(System.Drawing.PointF,System.Drawing.SizeF)
  id: '#ctor(System.Drawing.PointF,System.Drawing.SizeF)'
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: RectangleF(PointF,SizeF)
  nameWithType: RectangleF.RectangleF(PointF,SizeF)
  fullName: System.Drawing.RectangleF.RectangleF(PointF,SizeF)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 클래스 지정 된 위치와 크기를 사용 합니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.RectangleF.op_Implicit%2A>, RectangleF, and <xref:System.Drawing.RectangleF.op_Equality%2A> members. This example is designed for use with a Windows Form. Paste this code into a form and call the `ConvertRectangleToRectangleF` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/csharp/5d8998f0-9d41-440a-a9e3-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/cpp/5d8998f0-9d41-440a-a9e3-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/visualbasic/5d8998f0-9d41-440a-a9e3-_1.vb)]"
  syntax:
    content: public RectangleF (System.Drawing.PointF location, System.Drawing.SizeF size);
    parameters:
    - id: location
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> 사각형 영역의 왼쪽 위 모퉁이 나타내는입니다."
    - id: size
      type: System.Drawing.SizeF
      description: "A <xref href=&quot;System.Drawing.SizeF&quot;> </xref> 사각형 영역의 높이 너비를 나타내는입니다."
  overload: System.Drawing.RectangleF.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: RectangleF(Single,Single,Single,Single)
  nameWithType: RectangleF.RectangleF(Single,Single,Single,Single)
  fullName: System.Drawing.RectangleF.RectangleF(Single,Single,Single,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 클래스 지정 된 위치와 크기를 사용 합니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the RectangleF, <xref:System.Drawing.Rectangle.Round%2A> and <xref:System.Drawing.Rectangle.Truncate%2A> members. This example is designed for use with a Windows Form.  Paste this code into a form and call the `RoundingAndTruncatingRectangles` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/csharp/03a5ad52-9050-4211-8a75-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/cpp/03a5ad52-9050-4211-8a75-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/visualbasic/03a5ad52-9050-4211-8a75-_1.vb)]"
  syntax:
    content: public RectangleF (float x, float y, float width, float height);
    parameters:
    - id: x
      type: System.Single
      description: "사각형의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Single
      description: "사각형의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: width
      type: System.Single
      description: "사각형의 너비입니다."
    - id: height
      type: System.Single
      description: "사각형의 높이입니다."
  overload: System.Drawing.RectangleF.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Bottom
  id: Bottom
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Bottom
  nameWithType: RectangleF.Bottom
  fullName: System.Drawing.RectangleF.Bottom
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "합계인 y 좌표를 가져옵니다 <> </> *> 및 <> </> *>이 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다."
  remarks: "하위 값의 첫 번째 지점이 사각형에 포함 되지 않은 하는 사각형의 아래쪽 가장자리의 y 좌표를 나타냅니다."
  syntax:
    content: public float Bottom { get; }
    return:
      type: System.Single
      description: "합을 나타내는 y-좌표 <> </> *> 및 <> </> *>이 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다."
  overload: System.Drawing.RectangleF.Bottom*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Contains(System.Drawing.PointF)
  id: Contains(System.Drawing.PointF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Contains(PointF)
  nameWithType: RectangleF.Contains(PointF)
  fullName: System.Drawing.RectangleF.Contains(PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정된 된 점이이 포함 되어 있으면 결정 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다."
  syntax:
    content: public bool Contains (System.Drawing.PointF pt);
    parameters:
    - id: pt
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;> </xref> 를 테스트 합니다."
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 의해 표시 된 점이 있는 경우는 <code> pt </code> 매개 변수는이에 포함 된 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 그렇지 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.RectangleF.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Contains(System.Drawing.RectangleF)
  id: Contains(System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Contains(RectangleF)
  nameWithType: RectangleF.Contains(RectangleF)
  fullName: System.Drawing.RectangleF.Contains(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "으로 표시 된 사각형 영역이 결정 <code> rect </code> 이 안에 완전히 들어 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다."
  syntax:
    content: public bool Contains (System.Drawing.RectangleF rect);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 를 테스트 합니다."
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 으로 표시 되는 사각형 영역 <code> rect </code> 이 표시 된 사각형 영역 안에 완전히 들어 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>고, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.RectangleF.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Contains(System.Single,System.Single)
  id: Contains(System.Single,System.Single)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Contains(Single,Single)
  nameWithType: RectangleF.Contains(Single,Single)
  fullName: System.Drawing.RectangleF.Contains(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정된 된 점이이 포함 되어 있으면 결정 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다."
  syntax:
    content: public bool Contains (float x, float y);
    parameters:
    - id: x
      type: System.Single
      description: "테스트할 점의 x 좌표입니다."
    - id: y
      type: System.Single
      description: "테스트할 점의 y 좌표입니다."
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 하 여 정의 된 점이 경우 <code> x </code> 및 <code> y </code> 이 내에 포함 된 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 그렇지 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.RectangleF.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Empty
  id: Empty
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Empty
  nameWithType: RectangleF.Empty
  fullName: System.Drawing.RectangleF.Empty
  type: Field
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "인스턴스를 나타내며는 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 초기화 되지 않은 해당 멤버를 사용 하 여 클래스입니다."
  remarks: "새 멤버 <xref:System.Drawing.RectangleF>남겨진다는 초기화 되지 않은.</xref:System.Drawing.RectangleF>"
  syntax:
    content: public static readonly System.Drawing.RectangleF Empty;
    return:
      type: System.Drawing.RectangleF
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: RectangleF.Equals(Object)
  fullName: System.Drawing.RectangleF.Equals(Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "테스트 여부 <code> obj </code> 는 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 된 동일한 위치와 크기를 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>합니다."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>테스트할</xref:System.Object>"
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 경우 <code> obj </code> 는 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 및 해당 <xref uid=&quot;langword_csharp_X&quot; name=&quot;X&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Y&quot; name=&quot;Y&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Width&quot; name=&quot;Width&quot; href=&quot;&quot;> </xref>, 및 <xref uid=&quot;langword_csharp_Height&quot; name=&quot;Height&quot; href=&quot;&quot;> </xref> 속성은이의 해당 속성과 같으면 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.RectangleF.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.FromLTRB(System.Single,System.Single,System.Single,System.Single)
  id: FromLTRB(System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: FromLTRB(Single,Single,Single,Single)
  nameWithType: RectangleF.FromLTRB(Single,Single,Single,Single)
  fullName: System.Drawing.RectangleF.FromLTRB(Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "만듭니다는 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 왼쪽 위 모퉁이 오른쪽 아래 지정 된 위치에 포함 된 구조입니다."
  remarks: "이 메서드가 만드는 <xref:System.Drawing.RectangleF>지정 된 왼쪽 및 오른쪽 아래 모퉁이가.</xref:System.Drawing.RectangleF>"
  syntax:
    content: public static System.Drawing.RectangleF FromLTRB (float left, float top, float right, float bottom);
    parameters:
    - id: left
      type: System.Single
      description: "사각형 영역의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: top
      type: System.Single
      description: "사각형 영역의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: right
      type: System.Single
      description: "사각형 영역의 오른쪽 아래 모퉁이의 x 좌표입니다."
    - id: bottom
      type: System.Single
      description: "사각형 영역의 오른쪽 아래 모퉁이의 y 좌표입니다."
    return:
      type: System.Drawing.RectangleF
      description: "새 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 이 메서드가 만드는 합니다."
  overload: System.Drawing.RectangleF.FromLTRB*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.GetHashCode
  id: GetHashCode
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: RectangleF.GetHashCode()
  fullName: System.Drawing.RectangleF.GetHashCode()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 대 한 해시 코드를 가져옵니다 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다. 해시 코드의 사용에 대 한 정보를 참조 하십시오. <xref uid=&quot;langword_csharp_Object.GetHashCode&quot; name=&quot;Object.GetHashCode&quot; href=&quot;&quot;> </xref>합니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "이 대 한 해시 코드 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>합니다."
  overload: System.Drawing.RectangleF.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Height
  id: Height
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Height
  nameWithType: RectangleF.Height
  fullName: System.Drawing.RectangleF.Height
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 항목의 높이 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다."
  syntax:
    content: public float Height { get; set; }
    return:
      type: System.Single
      description: "이 항목의 높이 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다. 기본값은 0입니다."
  overload: System.Drawing.RectangleF.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Inflate(System.Drawing.SizeF)
  id: Inflate(System.Drawing.SizeF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Inflate(SizeF)
  nameWithType: RectangleF.Inflate(SizeF)
  fullName: System.Drawing.RectangleF.Inflate(SizeF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 확대 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 지정 된 크기입니다."
  remarks: "이 메서드는 복사본이 아닌이 사각형을 확대합니다. 사각형은 축 따라 양방향에서 확대 됩니다. 예를 들어 50 여 50 사각형을 50 x 축에서으로 확장 하는 경우 결과 사각형 150 단위 됩니다 long (원래 50, 50 빼기 방향에서 및 인 50) 사각형의 기 하 도형 중심을 유지 관리 합니다."
  example:
  - "This example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs> e, an OnPaint event object. The code creates a <xref:System.Drawing.RectangleF> and draws it to the screen in black. Notice that it has to be converted to a <xref:System.Drawing.Rectangle> for drawing purposes. Then the code enlarges the <xref:System.Drawing.RectangleF>, again converts it to a <xref:System.Drawing.Rectangle>, and draws it to the screen in red. Notice that the original (black) rectangle is expanded in both directions along the x-axis by 100 points.  \n  \n [!code-vb[System.Drawing.ClassicRectangleFExamples#1](~/add/codesnippet/visualbasic/m-system.drawing.rectang_5_1.vb)]\n [!code-cs[System.Drawing.ClassicRectangleFExamples#1](~/add/codesnippet/csharp/m-system.drawing.rectang_5_1.cs)]\n [!code-cpp[System.Drawing.ClassicRectangleFExamples#1](~/add/codesnippet/cpp/m-system.drawing.rectang_5_1.cpp)]"
  syntax:
    content: public void Inflate (System.Drawing.SizeF size);
    parameters:
    - id: size
      type: System.Drawing.SizeF
      description: "이 사각형을 확장할 크기입니다."
  overload: System.Drawing.RectangleF.Inflate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Inflate(System.Single,System.Single)
  id: Inflate(System.Single,System.Single)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Inflate(Single,Single)
  nameWithType: RectangleF.Inflate(Single,Single)
  fullName: System.Drawing.RectangleF.Inflate(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 확대 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조를 지정 된 크기입니다."
  remarks: "이 메서드는 복사본이 아닌이 사각형을 확대합니다. 사각형은 축 따라 양방향에서 확대 됩니다. 예를 들어 50 여 50 사각형을 50 x 축에서으로 확장 하는 경우 결과 사각형 150 단위 됩니다 long (원래 50, 50 빼기 방향에서 및 인 50) 사각형의 기 하 도형 중심을 유지 관리 합니다.       어느 경우 `x` 또는 `y` 가 음수 이면는 <xref:System.Drawing.RectangleF>는 해당 방향으로 축소 됩니다.</xref:System.Drawing.RectangleF>"
  syntax:
    content: public void Inflate (float x, float y);
    parameters:
    - id: x
      type: System.Single
      description: "이 확장할 크기입니다 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 가로로 구조입니다."
    - id: y
      type: System.Single
      description: "이 확장할 크기입니다 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 세로로 구조입니다."
  overload: System.Drawing.RectangleF.Inflate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)
  id: Inflate(System.Drawing.RectangleF,System.Single,System.Single)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Inflate(RectangleF,Single,Single)
  nameWithType: RectangleF.Inflate(RectangleF,Single,Single)
  fullName: System.Drawing.RectangleF.Inflate(RectangleF,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "만들고 지정 된의 확대 된 복사본을 반환 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다. 복사본은 지정된 된 크기 만큼 확대 하 고 원래의 사각형은 수정 되지 않은 키를 누릅니다."
  remarks: "이 메서드는 복사본을 만들어 `rect`, 복사본을 확장 하 고 다음 확장된 된 복사본을 반환 합니다. 사각형은 축 따라 양방향에서 확대 됩니다. 예를 들어 50 여 50 사각형을 50 x 축에서으로 확장 하는 경우 결과 사각형 150 단위 됩니다 long (원래 50, 50 빼기 방향에서 및 인 50) 사각형의 기 하 도형 중심을 유지 관리 합니다."
  syntax:
    content: public static System.Drawing.RectangleF Inflate (System.Drawing.RectangleF rect, float x, float y);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 복사할 수 있습니다. 이 사각형은 수정 되지 않습니다."
    - id: x
      type: System.Single
      description: "사각형의 복사본을 가로 방향으로 확장 하려면 양입니다."
    - id: y
      type: System.Single
      description: "사각형의 복사본을 세로로 확장 하려면 양입니다."
    return:
      type: System.Drawing.RectangleF
      description: "확대 된 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>합니다."
  overload: System.Drawing.RectangleF.Inflate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF)
  id: Intersect(System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Intersect(RectangleF)
  nameWithType: RectangleF.Intersect(RectangleF)
  fullName: System.Drawing.RectangleF.Intersect(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 대체 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조와 지정 된의 교차 부분으로 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다."
  syntax:
    content: public void Intersect (System.Drawing.RectangleF rect);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "교차할 사각형입니다."
  overload: System.Drawing.RectangleF.Intersect*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)
  id: Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Intersect(RectangleF,RectangleF)
  nameWithType: RectangleF.Intersect(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.Intersect(RectangleF,RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "반환 된 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조를 두 개의 사각형의 교차 부분을 나타냅니다. 교차 부분이 없고 비어 있으면 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 반환 됩니다."
  remarks: ''
  example:
  - "This example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.OnPaint%2A> event object. The code creates two <xref:System.Drawing.RectangleF> objects and draws them to the screen in black and red. Notice that they have to be converted to <xref:System.Drawing.Rectangle> objects for drawing purposes. Then the code creates a third <xref:System.Drawing.RectangleF> using the <xref:System.Drawing.RectangleF.Intersect%2A> method, converts it to a <xref:System.Drawing.Rectangle>, and draws it to the screen in blue. Notice the third (blue) rectangle is the area of overlap of the other two rectangles:  \n  \n [!code-vb[System.Drawing.ClassicRectangleFExamples#2](~/add/codesnippet/visualbasic/47bd303e-f7ea-48d0-ae6d-_1.vb)]\n [!code-cs[System.Drawing.ClassicRectangleFExamples#2](~/add/codesnippet/csharp/47bd303e-f7ea-48d0-ae6d-_1.cs)]\n [!code-cpp[System.Drawing.ClassicRectangleFExamples#2](~/add/codesnippet/cpp/47bd303e-f7ea-48d0-ae6d-_1.cpp)]"
  syntax:
    content: public static System.Drawing.RectangleF Intersect (System.Drawing.RectangleF a, System.Drawing.RectangleF b);
    parameters:
    - id: a
      type: System.Drawing.RectangleF
      description: "교차할 사각형입니다."
    - id: b
      type: System.Drawing.RectangleF
      description: "교차할 사각형입니다."
    return:
      type: System.Drawing.RectangleF
      description: "세 번째 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조 크기를 지정된 된의 겹치는 영역을 나타냅니다."
  overload: System.Drawing.RectangleF.Intersect*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.IntersectsWith(System.Drawing.RectangleF)
  id: IntersectsWith(System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: IntersectsWith(RectangleF)
  nameWithType: RectangleF.IntersectsWith(RectangleF)
  fullName: System.Drawing.RectangleF.IntersectsWith(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 사각형와 교차 하는 경우 결정 <code> rect </code>합니다."
  syntax:
    content: public bool IntersectsWith (System.Drawing.RectangleF rect);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "테스트할 사각형입니다."
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 교차 부분이 있으면 합니다."
  overload: System.Drawing.RectangleF.IntersectsWith*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.IsEmpty
  id: IsEmpty
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: IsEmpty
  nameWithType: RectangleF.IsEmpty
  fullName: System.Drawing.RectangleF.IsEmpty
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "테스트 여부는 <> </> *> 또는 <> </> *> 속성 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 의 값은&0;입니다."
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: "이 속성은 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 경우는 <> </> *> 또는 <> </> *> 속성을이 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 의 값은&0;, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.RectangleF.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Left
  id: Left
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Left
  nameWithType: RectangleF.Left
  fullName: System.Drawing.RectangleF.Left
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 항목의 왼쪽된 가장자리의 x 좌표를 가져옵니다 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다."
  syntax:
    content: public float Left { get; }
    return:
      type: System.Single
      description: "이 항목의 왼쪽된 가장자리의 x 좌표 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다."
  overload: System.Drawing.RectangleF.Left*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Location
  id: Location
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Location
  nameWithType: RectangleF.Location
  fullName: System.Drawing.RectangleF.Location
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 항목의 왼쪽 위 모퉁이의 좌표를 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다."
  syntax:
    content: public System.Drawing.PointF Location { get; set; }
    return:
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> 이 왼쪽 위 모퉁이 나타내는 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다."
  overload: System.Drawing.RectangleF.Location*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Offset(System.Drawing.PointF)
  id: Offset(System.Drawing.PointF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Offset(PointF)
  nameWithType: RectangleF.Offset(PointF)
  fullName: System.Drawing.RectangleF.Offset(PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 사각형의 위치를 지정 된 크기 조정합니다."
  syntax:
    content: public void Offset (System.Drawing.PointF pos);
    parameters:
    - id: pos
      type: System.Drawing.PointF
      description: "위치를 오프셋할 양입니다."
  overload: System.Drawing.RectangleF.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Offset(System.Single,System.Single)
  id: Offset(System.Single,System.Single)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Offset(Single,Single)
  nameWithType: RectangleF.Offset(Single,Single)
  fullName: System.Drawing.RectangleF.Offset(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 사각형의 위치를 지정 된 크기 조정합니다."
  syntax:
    content: public void Offset (float x, float y);
    parameters:
    - id: x
      type: System.Single
      description: "가로로 위치를 오프셋할 크기입니다."
    - id: y
      type: System.Single
      description: "세로로 위치를 오프셋할 크기입니다."
  overload: System.Drawing.RectangleF.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  id: op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: op_Equality(RectangleF,RectangleF)
  nameWithType: RectangleF.op_Equality(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.op_Equality(RectangleF,RectangleF)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "두 테스트 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조는 동일한 위치와 크기입니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.RectangleF.op_Implicit%2A>, <xref:System.Drawing.RectangleF.%23ctor%2A>and Equality members. This example is designed for use with a Windows Form. Paste this code into a form and call the `ConvertRectangleToRectangleF` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/csharp/e6058e88-3cbe-4600-981e-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/cpp/e6058e88-3cbe-4600-981e-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/visualbasic/e6058e88-3cbe-4600-981e-_1.vb)]"
  syntax:
    content: public static bool op_Equality (System.Drawing.RectangleF left, System.Drawing.RectangleF right);
    parameters:
    - id: left
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 같음 연산자의 왼쪽에는 구조입니다."
    - id: right
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 같음 연산자의 오른쪽에 있는 구조입니다."
    return:
      type: System.Boolean
      description: "이 연산자는 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 지정 된 두 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조는 같은 <> </> *>, <> </> *>, <> </> *>, 및 <> </> *> 속성."
  overload: System.Drawing.RectangleF.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.op_Implicit(System.Drawing.Rectangle)
  id: op_Implicit(System.Drawing.Rectangle)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: op_Implicit(Rectangle)
  nameWithType: RectangleF.op_Implicit(Rectangle)
  fullName: System.Drawing.RectangleF.op_Implicit(Rectangle)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public static System.Drawing.RectangleF op_Implicit (System.Drawing.Rectangle r);
    parameters:
    - id: r
      type: System.Drawing.Rectangle
      description: "추가할 수 있습니다."
    return:
      type: System.Drawing.RectangleF
      description: "추가할 수 있습니다."
  overload: System.Drawing.RectangleF.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  id: op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: op_Inequality(RectangleF,RectangleF)
  nameWithType: RectangleF.op_Inequality(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.op_Inequality(RectangleF,RectangleF)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "두 테스트 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조체의 위치와 크기가 다른 합니다."
  syntax:
    content: public static bool op_Inequality (System.Drawing.RectangleF left, System.Drawing.RectangleF right);
    parameters:
    - id: left
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 같지 않음 연산자 왼쪽에는 구조입니다."
    - id: right
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 같지 않음 연산자의 오른쪽에 있는 구조입니다."
    return:
      type: System.Boolean
      description: "이 연산자는 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 하나라는 <> </> *>, <> </> *>, <> </> *>, 또는 <> </> *>의 두 속성 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조가 같지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.RectangleF.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Right
  id: Right
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Right
  nameWithType: RectangleF.Right
  fullName: System.Drawing.RectangleF.Right
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "합을 나타내는 x 좌표를 가져옵니다 <> </> *> 및 <> </> *>이 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다."
  remarks: "오른쪽 값의 첫 번째 지점이 사각형에 포함 되지 않은 하는 사각형의 오른쪽 가장자리의 x 좌표를 나타냅니다."
  syntax:
    content: public float Right { get; }
    return:
      type: System.Single
      description: "합을 나타내는 x-좌표 <> </> *> 및 <> </> *>이 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다."
  overload: System.Drawing.RectangleF.Right*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Size
  id: Size
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Size
  nameWithType: RectangleF.Size
  fullName: System.Drawing.RectangleF.Size
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 크기를 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>합니다."
  syntax:
    content: public System.Drawing.SizeF Size { get; set; }
    return:
      type: System.Drawing.SizeF
      description: "A <xref href=&quot;System.Drawing.SizeF&quot;> </xref> 너비와 높이이 나타내는 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다."
  overload: System.Drawing.RectangleF.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Top
  id: Top
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Top
  nameWithType: RectangleF.Top
  fullName: System.Drawing.RectangleF.Top
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 항목의 위쪽 가장자리의 y 좌표를 가져옵니다 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다."
  syntax:
    content: public float Top { get; }
    return:
      type: System.Single
      description: "이 항목의 위쪽 가장자리의 y 좌표 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다."
  overload: System.Drawing.RectangleF.Top*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.ToString
  id: ToString
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: ToString()
  nameWithType: RectangleF.ToString()
  fullName: System.Drawing.RectangleF.ToString()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "변환 된 <xref uid=&quot;langword_csharp_Location&quot; name=&quot;Location&quot; href=&quot;&quot;> </xref> 및 <xref href=&quot;System.Drawing.Size&quot;> </xref> 이 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 를 이해 하기 쉬운 문자열로 합니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "위치, 너비 및 높이이 포함 하는 문자열 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다. 예를 들어 &quot;{X =&20;, Y =&20;, 너비 =&100;, 높이 =&50;}&quot;입니다."
  overload: System.Drawing.RectangleF.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Union(System.Drawing.RectangleF,System.Drawing.RectangleF)
  id: Union(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Union(RectangleF,RectangleF)
  nameWithType: RectangleF.Union(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.Union(RectangleF,RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "통합할 두 개의 사각형의 둘 다 포함 될 수 있는 가장 작은 가능한 세 번째 사각형을 만듭니다."
  remarks: "비어 있는 경우 두 개의 사각형 중 하나, 모든 값이 0 이면 의미는 <xref:System.Drawing.Rectangle.Union%2A>의 시작 지점을 사각형을 반환 하는 메서드 (0, 0) 비어 있지 않은 사각형의 너비 및 높이.</xref:System.Drawing.Rectangle.Union%2A> 예를 들어, 두 개의 사각형 A = 있는 경우 (예: 0, 0, 0, 0)와 B = (1, 1, 2, 2), A의 공용 구조체가 고 B는 (0, 0, 2, 2)."
  example:
  - "This example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs> e, an <xref:System.Windows.Forms.Control.OnPaint%2A> event object. The code creates two <xref:System.Drawing.RectangleF> s and draws them to the screen in black and red. Notice that they have to be converted to <xref:System.Drawing.Rectangle> s for drawing purposes. Then the code creates a third <xref:System.Drawing.RectangleF> using the Union method, converts it to a <xref:System.Drawing.Rectangle>, and draws it to the screen in blue. Notice the third (blue) rectangle is the smallest possible rectangle that can contain both of the other two rectangles:  \n  \n [!code-vb[System.Drawing.ClassicRectangleFExamples#3](~/add/codesnippet/visualbasic/2f1239b4-8abf-4ed8-9c26-_1.vb)]\n [!code-cs[System.Drawing.ClassicRectangleFExamples#3](~/add/codesnippet/csharp/2f1239b4-8abf-4ed8-9c26-_1.cs)]\n [!code-cpp[System.Drawing.ClassicRectangleFExamples#3](~/add/codesnippet/cpp/2f1239b4-8abf-4ed8-9c26-_1.cpp)]"
  syntax:
    content: public static System.Drawing.RectangleF Union (System.Drawing.RectangleF a, System.Drawing.RectangleF b);
    parameters:
    - id: a
      type: System.Drawing.RectangleF
      description: "통합할 사각형입니다."
    - id: b
      type: System.Drawing.RectangleF
      description: "통합할 사각형입니다."
    return:
      type: System.Drawing.RectangleF
      description: "세 번째 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 합집합을 형성 하는 두 개의 사각형의 모두 포함 된 구조입니다."
  overload: System.Drawing.RectangleF.Union*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Width
  id: Width
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Width
  nameWithType: RectangleF.Width
  fullName: System.Drawing.RectangleF.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 항목의 너비를 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다."
  syntax:
    content: public float Width { get; set; }
    return:
      type: System.Single
      description: "이 너비 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다. 기본값은 0입니다."
  overload: System.Drawing.RectangleF.Width*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.X
  id: X
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: X
  nameWithType: RectangleF.X
  fullName: System.Drawing.RectangleF.X
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 항목의 왼쪽 위 모퉁이의 x 좌표를 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다."
  syntax:
    content: public float X { get; set; }
    return:
      type: System.Single
      description: "이 항목의 왼쪽 위 모퉁이의 x 좌표 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다. 기본값은 0입니다."
  overload: System.Drawing.RectangleF.X*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Y
  id: Y
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Y
  nameWithType: RectangleF.Y
  fullName: System.Drawing.RectangleF.Y
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 항목의 왼쪽 위 모퉁이의 y 좌표를 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다."
  syntax:
    content: public float Y { get; set; }
    return:
      type: System.Single
      description: "이 항목의 왼쪽 위 모퉁이의 y 좌표 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다. 기본값은 0입니다."
  overload: System.Drawing.RectangleF.Y*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Drawing.RectangleF.#ctor(System.Drawing.PointF,System.Drawing.SizeF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: RectangleF(PointF,SizeF)
  nameWithType: RectangleF.RectangleF(PointF,SizeF)
  fullName: System.Drawing.RectangleF.RectangleF(PointF,SizeF)
- uid: System.Drawing.PointF
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Drawing.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: RectangleF(Single,Single,Single,Single)
  nameWithType: RectangleF.RectangleF(Single,Single,Single,Single)
  fullName: System.Drawing.RectangleF.RectangleF(Single,Single,Single,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.RectangleF.Bottom
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Bottom
  nameWithType: RectangleF.Bottom
  fullName: System.Drawing.RectangleF.Bottom
- uid: System.Drawing.RectangleF.Contains(System.Drawing.PointF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Contains(PointF)
  nameWithType: RectangleF.Contains(PointF)
  fullName: System.Drawing.RectangleF.Contains(PointF)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.RectangleF.Contains(System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Contains(RectangleF)
  nameWithType: RectangleF.Contains(RectangleF)
  fullName: System.Drawing.RectangleF.Contains(RectangleF)
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.RectangleF.Contains(System.Single,System.Single)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Contains(Single,Single)
  nameWithType: RectangleF.Contains(Single,Single)
  fullName: System.Drawing.RectangleF.Contains(Single,Single)
- uid: System.Drawing.RectangleF.Empty
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Empty
  nameWithType: RectangleF.Empty
  fullName: System.Drawing.RectangleF.Empty
- uid: System.Drawing.RectangleF.Equals(System.Object)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Equals(Object)
  nameWithType: RectangleF.Equals(Object)
  fullName: System.Drawing.RectangleF.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.RectangleF.FromLTRB(System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: FromLTRB(Single,Single,Single,Single)
  nameWithType: RectangleF.FromLTRB(Single,Single,Single,Single)
  fullName: System.Drawing.RectangleF.FromLTRB(Single,Single,Single,Single)
- uid: System.Drawing.RectangleF.GetHashCode
  parent: System.Drawing.RectangleF
  isExternal: false
  name: GetHashCode()
  nameWithType: RectangleF.GetHashCode()
  fullName: System.Drawing.RectangleF.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.RectangleF.Height
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Height
  nameWithType: RectangleF.Height
  fullName: System.Drawing.RectangleF.Height
- uid: System.Drawing.RectangleF.Inflate(System.Drawing.SizeF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Inflate(SizeF)
  nameWithType: RectangleF.Inflate(SizeF)
  fullName: System.Drawing.RectangleF.Inflate(SizeF)
- uid: System.Drawing.RectangleF.Inflate(System.Single,System.Single)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Inflate(Single,Single)
  nameWithType: RectangleF.Inflate(Single,Single)
  fullName: System.Drawing.RectangleF.Inflate(Single,Single)
- uid: System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Inflate(RectangleF,Single,Single)
  nameWithType: RectangleF.Inflate(RectangleF,Single,Single)
  fullName: System.Drawing.RectangleF.Inflate(RectangleF,Single,Single)
- uid: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Intersect(RectangleF)
  nameWithType: RectangleF.Intersect(RectangleF)
  fullName: System.Drawing.RectangleF.Intersect(RectangleF)
- uid: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Intersect(RectangleF,RectangleF)
  nameWithType: RectangleF.Intersect(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.Intersect(RectangleF,RectangleF)
- uid: System.Drawing.RectangleF.IntersectsWith(System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: IntersectsWith(RectangleF)
  nameWithType: RectangleF.IntersectsWith(RectangleF)
  fullName: System.Drawing.RectangleF.IntersectsWith(RectangleF)
- uid: System.Drawing.RectangleF.IsEmpty
  parent: System.Drawing.RectangleF
  isExternal: false
  name: IsEmpty
  nameWithType: RectangleF.IsEmpty
  fullName: System.Drawing.RectangleF.IsEmpty
- uid: System.Drawing.RectangleF.Left
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Left
  nameWithType: RectangleF.Left
  fullName: System.Drawing.RectangleF.Left
- uid: System.Drawing.RectangleF.Location
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Location
  nameWithType: RectangleF.Location
  fullName: System.Drawing.RectangleF.Location
- uid: System.Drawing.RectangleF.Offset(System.Drawing.PointF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Offset(PointF)
  nameWithType: RectangleF.Offset(PointF)
  fullName: System.Drawing.RectangleF.Offset(PointF)
- uid: System.Drawing.RectangleF.Offset(System.Single,System.Single)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Offset(Single,Single)
  nameWithType: RectangleF.Offset(Single,Single)
  fullName: System.Drawing.RectangleF.Offset(Single,Single)
- uid: System.Drawing.RectangleF.op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: op_Equality(RectangleF,RectangleF)
  nameWithType: RectangleF.op_Equality(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.op_Equality(RectangleF,RectangleF)
- uid: System.Drawing.RectangleF.op_Implicit(System.Drawing.Rectangle)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: op_Implicit(Rectangle)
  nameWithType: RectangleF.op_Implicit(Rectangle)
  fullName: System.Drawing.RectangleF.op_Implicit(Rectangle)
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Drawing.RectangleF.op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: op_Inequality(RectangleF,RectangleF)
  nameWithType: RectangleF.op_Inequality(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.op_Inequality(RectangleF,RectangleF)
- uid: System.Drawing.RectangleF.Right
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Right
  nameWithType: RectangleF.Right
  fullName: System.Drawing.RectangleF.Right
- uid: System.Drawing.RectangleF.Size
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Size
  nameWithType: RectangleF.Size
  fullName: System.Drawing.RectangleF.Size
- uid: System.Drawing.RectangleF.Top
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Top
  nameWithType: RectangleF.Top
  fullName: System.Drawing.RectangleF.Top
- uid: System.Drawing.RectangleF.ToString
  parent: System.Drawing.RectangleF
  isExternal: false
  name: ToString()
  nameWithType: RectangleF.ToString()
  fullName: System.Drawing.RectangleF.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.RectangleF.Union(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Union(RectangleF,RectangleF)
  nameWithType: RectangleF.Union(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.Union(RectangleF,RectangleF)
- uid: System.Drawing.RectangleF.Width
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Width
  nameWithType: RectangleF.Width
  fullName: System.Drawing.RectangleF.Width
- uid: System.Drawing.RectangleF.X
  parent: System.Drawing.RectangleF
  isExternal: false
  name: X
  nameWithType: RectangleF.X
  fullName: System.Drawing.RectangleF.X
- uid: System.Drawing.RectangleF.Y
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Y
  nameWithType: RectangleF.Y
  fullName: System.Drawing.RectangleF.Y
- uid: System.Drawing.RectangleF.#ctor*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF.RectangleF
- uid: System.Drawing.RectangleF.Bottom*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Bottom
  nameWithType: RectangleF.Bottom
- uid: System.Drawing.RectangleF.Contains*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Contains
  nameWithType: RectangleF.Contains
- uid: System.Drawing.RectangleF.Equals*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Equals
  nameWithType: RectangleF.Equals
- uid: System.Drawing.RectangleF.FromLTRB*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: FromLTRB
  nameWithType: RectangleF.FromLTRB
- uid: System.Drawing.RectangleF.GetHashCode*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: GetHashCode
  nameWithType: RectangleF.GetHashCode
- uid: System.Drawing.RectangleF.Height*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Height
  nameWithType: RectangleF.Height
- uid: System.Drawing.RectangleF.Inflate*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Inflate
  nameWithType: RectangleF.Inflate
- uid: System.Drawing.RectangleF.Intersect*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Intersect
  nameWithType: RectangleF.Intersect
- uid: System.Drawing.RectangleF.IntersectsWith*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: IntersectsWith
  nameWithType: RectangleF.IntersectsWith
- uid: System.Drawing.RectangleF.IsEmpty*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: IsEmpty
  nameWithType: RectangleF.IsEmpty
- uid: System.Drawing.RectangleF.Left*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Left
  nameWithType: RectangleF.Left
- uid: System.Drawing.RectangleF.Location*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Location
  nameWithType: RectangleF.Location
- uid: System.Drawing.RectangleF.Offset*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Offset
  nameWithType: RectangleF.Offset
- uid: System.Drawing.RectangleF.op_Equality*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: op_Equality
  nameWithType: RectangleF.op_Equality
- uid: System.Drawing.RectangleF.op_Implicit*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: op_Implicit
  nameWithType: RectangleF.op_Implicit
- uid: System.Drawing.RectangleF.op_Inequality*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: op_Inequality
  nameWithType: RectangleF.op_Inequality
- uid: System.Drawing.RectangleF.Right*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Right
  nameWithType: RectangleF.Right
- uid: System.Drawing.RectangleF.Size*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Size
  nameWithType: RectangleF.Size
- uid: System.Drawing.RectangleF.Top*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Top
  nameWithType: RectangleF.Top
- uid: System.Drawing.RectangleF.ToString*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: ToString
  nameWithType: RectangleF.ToString
- uid: System.Drawing.RectangleF.Union*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Union
  nameWithType: RectangleF.Union
- uid: System.Drawing.RectangleF.Width*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Width
  nameWithType: RectangleF.Width
- uid: System.Drawing.RectangleF.X*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: X
  nameWithType: RectangleF.X
- uid: System.Drawing.RectangleF.Y*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Y
  nameWithType: RectangleF.Y
