### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TableRowCollection
  id: TableRowCollection
  children:
  - System.Web.UI.WebControls.TableRowCollection.Add(System.Web.UI.WebControls.TableRow)
  - System.Web.UI.WebControls.TableRowCollection.AddAt(System.Int32,System.Web.UI.WebControls.TableRow)
  - System.Web.UI.WebControls.TableRowCollection.AddRange(System.Web.UI.WebControls.TableRow[])
  - System.Web.UI.WebControls.TableRowCollection.Clear
  - System.Web.UI.WebControls.TableRowCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.WebControls.TableRowCollection.Count
  - System.Web.UI.WebControls.TableRowCollection.GetEnumerator
  - System.Web.UI.WebControls.TableRowCollection.GetRowIndex(System.Web.UI.WebControls.TableRow)
  - System.Web.UI.WebControls.TableRowCollection.IsReadOnly
  - System.Web.UI.WebControls.TableRowCollection.IsSynchronized
  - System.Web.UI.WebControls.TableRowCollection.Item(System.Int32)
  - System.Web.UI.WebControls.TableRowCollection.Remove(System.Web.UI.WebControls.TableRow)
  - System.Web.UI.WebControls.TableRowCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.TableRowCollection.SyncRoot
  - System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: TableRowCollection
  nameWithType: TableRowCollection
  fullName: System.Web.UI.WebControls.TableRowCollection
  type: Class
  summary: "컬렉션을 캡슐화 <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> 의 단일 행을 표시 하는 개체는 <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> 제어 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "이 클래스를 사용 하 여 프로그래밍 방식으로 컬렉션을 관리 <xref:System.Web.UI.WebControls.TableRow>개체입니다.</xref:System.Web.UI.WebControls.TableRow> 이 클래스는 행에서 추가 또는 제거 하는 데 주로 사용 된 <xref:System.Web.UI.WebControls.Table>컨트롤.</xref:System.Web.UI.WebControls.Table>      > [!NOTE] > A <xref:System.Web.UI.WebControls.Table>컨트롤에 포함 된 <xref:System.Web.UI.WebControls.Table.Rows%2A>의 컬렉션을 나타내는 컬렉션 <xref:System.Web.UI.WebControls.TableRow>개체.</xref:System.Web.UI.WebControls.TableRow> </xref:System.Web.UI.WebControls.Table.Rows%2A> </xref:System.Web.UI.WebControls.Table> 각 <xref:System.Web.UI.WebControls.TableRow>테이블의 개별 행을 나타내며 포함 한 <xref:System.Web.UI.WebControls.TableRow.Cells%2A>의 컬렉션을 나타내는 컬렉션 <xref:System.Web.UI.WebControls.TableCell>개체.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.TableRow.Cells%2A> </xref:System.Web.UI.WebControls.TableRow> 이러한 <xref:System.Web.UI.WebControls.TableCell>개체 테이블의 개별 셀을 나타냅니다.</xref:System.Web.UI.WebControls.TableCell> 개별 셀을 가져오려면 먼저 가져와야는 <xref:System.Web.UI.WebControls.TableRow>에서 <xref:System.Web.UI.WebControls.Table.Rows%2A>의 컬렉션을 <xref:System.Web.UI.WebControls.Table>컨트롤.</xref:System.Web.UI.WebControls.Table> </xref:System.Web.UI.WebControls.Table.Rows%2A> </xref:System.Web.UI.WebControls.TableRow> <xref:System.Web.UI.WebControls.TableCell> <xref:System.Web.UI.WebControls.TableRow.Cells%2A> <xref:System.Web.UI.WebControls.TableRow>.</xref:System.Web.UI.WebControls.TableRow> 의 컬렉션</xref:System.Web.UI.WebControls.TableRow.Cells%2A> 에서</xref:System.Web.UI.WebControls.TableCell> 가져올 수 있습니다."
  example:
  - "The following example demonstrates how to programmatically add rows to a table by adding <xref:System.Web.UI.WebControls.TableRow> objects, which represent the rows of the table, to the <xref:System.Web.UI.WebControls.Table> control through the <xref:System.Web.UI.WebControls.Table.Rows%2A> property.  \n  \n [!code-cs[Classic TableRowCollection Example#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_314_1.aspx)]\n [!code-vb[Classic TableRowCollection Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_314_1.aspx)]\n [!code-xml[Classic TableRowCollection Example#1](~/add/codesnippet/xml/t-system.web.ui.webcontr_314_1.xml)]"
  syntax:
    content: >-
      [System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TableRowsCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]

      public sealed class TableRowCollection : System.Collections.IList
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.Add(System.Web.UI.WebControls.TableRow)
  id: Add(System.Web.UI.WebControls.TableRow)
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: Add(TableRow)
  nameWithType: TableRowCollection.Add(TableRow)
  fullName: System.Web.UI.WebControls.TableRowCollection.Add(TableRow)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 추가 <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> 개체의 끝에는 <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>합니다."
  remarks: "이 메서드를 사용 하 여 <xref:System.Web.UI.WebControls.TableRow>개체에 <xref:System.Web.UI.WebControls.TableRowCollection>.</xref:System.Web.UI.WebControls.TableRowCollection> 의 끝에</xref:System.Web.UI.WebControls.TableRow> 추가 하려면"
  example:
  - "The following example demonstrates how use the Add method to add a <xref:System.Web.UI.WebControls.TableRow> object to a <xref:System.Web.UI.WebControls.TableRowCollection>. Note that in the example, the <xref:System.Web.UI.WebControls.Table.Rows%2A> property of the <xref:System.Web.UI.WebControls.Table> is an instance of the <xref:System.Web.UI.WebControls.TableRowCollection> class.  \n  \n [!code-vb[Classic TableRowCollection.Add Example#1](~/add/codesnippet/visualbasic/fa03e778-5b68-4583-ab5c-_1.aspx)]\n [!code-cs[Classic TableRowCollection.Add Example#1](~/add/codesnippet/csharp/fa03e778-5b68-4583-ab5c-_1.aspx)]"
  syntax:
    content: public int Add (System.Web.UI.WebControls.TableRow row);
    parameters:
    - id: row
      type: System.Web.UI.WebControls.TableRow
      description: "<xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> 에 추가할 개체는 <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>합니다."
    return:
      type: System.Int32
      description: "인덱스는 <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.TableRowCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.AddAt(System.Int32,System.Web.UI.WebControls.TableRow)
  id: AddAt(System.Int32,System.Web.UI.WebControls.TableRow)
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: AddAt(Int32,TableRow)
  nameWithType: TableRowCollection.AddAt(Int32,TableRow)
  fullName: System.Web.UI.WebControls.TableRowCollection.AddAt(Int32,TableRow)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 추가 <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> 개체를 <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref> 지정 된 인덱스 위치에 있습니다."
  remarks: "이 메서드를 사용 하 여 지정 된 삽입 <xref:System.Web.UI.WebControls.TableRow>에 <xref:System.Web.UI.WebControls.TableRowCollection>지정된 된 인덱스에.</xref:System.Web.UI.WebControls.TableRowCollection> </xref:System.Web.UI.WebControls.TableRow>"
  example:
  - "The following example demonstrates how to add a <xref:System.Web.UI.WebControls.TableRow> object to the middle of a <xref:System.Web.UI.WebControls.TableRowCollection>. Note that in the example, the <xref:System.Web.UI.WebControls.Table.Rows%2A> property of the <xref:System.Web.UI.WebControls.Table> is an instance of the <xref:System.Web.UI.WebControls.TableRowCollection> class.  \n  \n [!code-vb[Classic TableRowCollection.AddAt Example#1](~/add/codesnippet/visualbasic/cd646d24-6208-41b2-9808-_1.aspx)]\n [!code-cs[Classic TableRowCollection.AddAt Example#1](~/add/codesnippet/csharp/cd646d24-6208-41b2-9808-_1.aspx)]"
  syntax:
    content: public void AddAt (int index, System.Web.UI.WebControls.TableRow row);
    parameters:
    - id: index
      type: System.Int32
      description: "위치는 <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref> 를 추가할는 <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref>합니다."
    - id: row
      type: System.Web.UI.WebControls.TableRow
      description: "<xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> 에 추가할 개체는 <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.TableRowCollection.AddAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.AddRange(System.Web.UI.WebControls.TableRow[])
  id: AddRange(System.Web.UI.WebControls.TableRow[])
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: AddRange(TableRow[])
  nameWithType: TableRowCollection.AddRange(TableRow[])
  fullName: System.Web.UI.WebControls.TableRowCollection.AddRange(TableRow[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "추가 <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> 컬렉션의 끝에서 지정된 된 배열 개체입니다."
  remarks: "AddRange 메서드를 사용 하 여 추가 된 <xref:System.Web.UI.WebControls.TableRow>지정된 된 배열에서 개체를 컬렉션에.</xref:System.Web.UI.WebControls.TableRow> 이 메서드는 일반적으로 테이블을 만들 때 사용 됩니다. 테이블을 생성 하려면 먼저의 배열을 만들어 <xref:System.Web.UI.WebControls.TableRow>테이블의 행을 나타내는 개체입니다.</xref:System.Web.UI.WebControls.TableRow> 다음으로 추가할 배열을 인수로 전달 AddRange 메서드를 사용는 <xref:System.Web.UI.WebControls.TableRow>개체를 컬렉션에.</xref:System.Web.UI.WebControls.TableRow>"
  syntax:
    content: public void AddRange (System.Web.UI.WebControls.TableRow[] rows);
    parameters:
    - id: rows
      type: System.Web.UI.WebControls.TableRow[]
      description: "포함 하는 배열에서 <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> 컬렉션에 추가할 개체입니다."
  overload: System.Web.UI.WebControls.TableRowCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "값은 <code> rows </code> 매개 변수는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.Clear
  id: Clear
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: TableRowCollection.Clear()
  fullName: System.Web.UI.WebControls.TableRowCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "모든 제거 <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> 에서 제어는 <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>합니다."
  remarks: "모든 제거 하려면이 메서드를 사용 하 여 <xref:System.Web.UI.WebControls.TableRow>에서 개체를 <xref:System.Web.UI.WebControls.TableRowCollection>설정는 <xref:System.Web.UI.WebControls.TableRowCollection.Count%2A>속성을 0.</xref:System.Web.UI.WebControls.TableRowCollection.Count%2A> </xref:System.Web.UI.WebControls.TableRowCollection> </xref:System.Web.UI.WebControls.TableRow>"
  example:
  - "The following example demonstrates how to use the Clear method to remove all <xref:System.Web.UI.WebControls.TableRow> objects from the <xref:System.Web.UI.WebControls.TableRowCollection> of the table and replace them with new <xref:System.Web.UI.WebControls.TableRow> objects.  \n  \n [!code-cs[Classic TableRowCollection.Clear Example#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_204_1.aspx)]\n [!code-vb[Classic TableRowCollection.Clear Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_204_1.aspx)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.WebControls.TableRowCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: TableRowCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.TableRowCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "항목 복사는 <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref> 지정 된 &lt;xref:System.Array?displayProperty=fullName&gt;지정 된 인덱스에서 시작 하는 위치는 &lt;xref:System.Array?displayProperty=fullName&gt;합니다."
  remarks: "내용을 복사 하려면이 메서드를 사용 하 여는 <xref:System.Web.UI.WebControls.TableRowCollection>여 지정 된 <xref:System.Array?displayProperty=fullName>지정된 된 인덱스부터 시작 합니다.</xref:System.Array?displayProperty=fullName> </xref:System.Web.UI.WebControls.TableRowCollection>      > [!NOTE] >는 `array` 매개 변수는&0;부터 시작 <xref:System.Array?displayProperty=fullName>.</xref:System.Array?displayProperty=fullName> 이어야 합니다."
  example:
  - "The following example demonstrates how to use the CopyTo method to copy the items from the <xref:System.Web.UI.WebControls.TableRowCollection> into the specified array.  \n  \n [!code-cs[Classic TableRowCollection.CopyTo Example#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_230_1.aspx)]\n [!code-vb[Classic TableRowCollection.CopyTo Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_230_1.aspx)]"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "0부터 시작 &lt;xref:System.Array?displayProperty=fullName&gt; 에서 복사한 항목을 수신 하는 <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>합니다."
    - id: index
      type: System.Int32
      description: "지정 된 첫 번째 위치 &lt;xref:System.Array?displayProperty=fullName&gt; 복사한 내용을 받도록 합니다."
  overload: System.Web.UI.WebControls.TableRowCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.Count
  id: Count
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: Count
  nameWithType: TableRowCollection.Count
  fullName: System.Web.UI.WebControls.TableRowCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "개수를 가져옵니다 <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> 개체에 <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>합니다."
  remarks: "이 속성을 사용 하 여 <xref:System.Web.UI.WebControls.TableRowCollection>.</xref:System.Web.UI.WebControls.TableRowCollection> 행의 수를 확인 하려면 Count 속성 컬렉션을 반복 하는 경우의 상한을 결정에 종종 사용 됩니다."
  example:
  - "The following example demonstrates how to use the Count property to determine the number of rows in the <xref:System.Web.UI.WebControls.TableRowCollection>. Note that in the example, the <xref:System.Web.UI.WebControls.Table.Rows%2A> property of the <xref:System.Web.UI.WebControls.Table> is an instance of the <xref:System.Web.UI.WebControls.TableRowCollection> class.  \n  \n [!code-cs[Classic TableRowCollection.Count Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1046_1.cs)]\n [!code-vb[Classic TableRowCollection.Count Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1046_1.vb)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "수가 <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> 개체에 <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>합니다. 기본값은 0입니다."
  overload: System.Web.UI.WebControls.TableRowCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: TableRowCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.TableRowCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "반환 된 &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt; 구현 모두 포함 하는 개체 <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> 내의 개체를 <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>합니다."
  remarks: "이 메서드를 사용 하 여 <xref:System.Collections.IEnumerator?displayProperty=fullName>구현 개체를 반복할 수 있는 통해 <xref:System.Web.UI.WebControls.TableRowCollection>.</xref:System.Web.UI.WebControls.TableRowCollection> 각 항목에 쉽게</xref:System.Collections.IEnumerator?displayProperty=fullName> 만들려면       사용 하 여는 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>컬렉션에서 항목을 현재 가져올 속성을 가리키는.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>       사용 하 여는 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>컬렉션의 다음 항목으로 이동 하는 메서드.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>       사용 하 여는 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>초기 위치에 열거자를 이동 하는 메서드의 다시.</xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>      > [!NOTE] >는 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>만든 후에 메서드를 호출 해야는 <xref:System.Collections.IEnumerator?displayProperty=fullName>구현 개체를 만들거나 사용 하는 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>열거자는 컬렉션의 첫 번째 항목을 이동 하는 메서드.</xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> </xref:System.Collections.IEnumerator?displayProperty=fullName> </xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> 그렇지 않은 경우으로 표시 되는 항목의 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>속성이 정의 되지 않습니다.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>"
  example:
  - "The following example demonstrates how to use the GetEnumerator method to create a <xref:System.Collections.IEnumerator?displayProperty=fullName> implemented object that is iterated through to display the items in the table.  \n  \n [!code-vb[Classic TableRowCollection.GetEnumerator Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_85_1.aspx)]\n [!code-cs[Classic TableRowCollection.GetEnumerator Example#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_85_1.aspx)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "A &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt; 구현 모두 포함 하는 개체 <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> 내에서 개체는 <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.TableRowCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.GetRowIndex(System.Web.UI.WebControls.TableRow)
  id: GetRowIndex(System.Web.UI.WebControls.TableRow)
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: GetRowIndex(TableRow)
  nameWithType: TableRowCollection.GetRowIndex(TableRow)
  fullName: System.Web.UI.WebControls.TableRowCollection.GetRowIndex(TableRow)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 인덱스를 나타내는 값을 반환 <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> 에서 <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>합니다."
  remarks: "지정 된 추가 <xref:System.Web.UI.WebControls.TableRow> <xref:System.Web.UI.WebControls.TableRowCollection>.</xref:System.Web.UI.WebControls.TableRowCollection> </xref:System.Web.UI.WebControls.TableRow> 인덱스를 확인 하려면이 메서드를 사용 합니다. 하는 경우 지정 된 <xref:System.Web.UI.WebControls.TableRow>는 찾을 수 없습니다-1 인덱스 반환 됩니다.</xref:System.Web.UI.WebControls.TableRow>"
  example:
  - "The following example demonstrates how to use the GetRowIndex property to display the row index of the selected cell.  \n  \n [!code-cs[Classic TableRowCollection.GetRowIndex Example#1](~/add/codesnippet/csharp/5648ad88-ba1f-445d-9567-_1.aspx)]\n [!code-vb[Classic TableRowCollection.GetRowIndex Example#1](~/add/codesnippet/visualbasic/5648ad88-ba1f-445d-9567-_1.aspx)]"
  syntax:
    content: public int GetRowIndex (System.Web.UI.WebControls.TableRow row);
    parameters:
    - id: row
      type: System.Web.UI.WebControls.TableRow
      description: "<xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> 에서 찾을 개체의 <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>합니다."
    return:
      type: System.Int32
      description: "지정 된 서 수 인덱스 위치 <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> 컬렉션 내에서. 기본값은-1 임을 나타내는 지정 된 <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> 찾을 수 없습니다."
  overload: System.Web.UI.WebControls.TableRowCollection.GetRowIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: TableRowCollection.IsReadOnly
  fullName: System.Web.UI.WebControls.TableRowCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref> 읽기 전용입니다."
  remarks: "이 속성은 항상 반환 `false` 임을 나타내는 <xref:System.Web.UI.WebControls.TableRowCollection>모든 경우에서에 쓸 수 있습니다.</xref:System.Web.UI.WebControls.TableRowCollection>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>모든 경우에 대 한"
  overload: System.Web.UI.WebControls.TableRowCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: TableRowCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.TableRowCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 액세스 여부를 나타내는 값을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref> 동기화 되었는지 (스레드로부터 안전한 지)."
  remarks: "이 속성에서 파생 된 <xref:System.Collections.ICollection?displayProperty=fullName>항상 반환 하도록 재정의 하 고 `false`.</xref:System.Collections.ICollection?displayProperty=fullName>       대 한 자세한 내용은 <xref:System.Web.UI.WebControls.TableCellCollection.IsSynchronized%2A>속성 참조는 <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>의 속성은 <xref:System.Collections.ICollection?displayProperty=fullName>인터페이스.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.TableCellCollection.IsSynchronized%2A>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>모든 경우에 대 한"
  overload: System.Web.UI.WebControls.TableRowCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: TableRowCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.TableRowCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> 에서 <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref> 지정 된 인덱스입니다."
  remarks: "이 인덱서를 사용 하 여 개별 가져오려는 <xref:System.Web.UI.WebControls.TableRow>에서 <xref:System.Web.UI.WebControls.TableRowCollection>단순 배열 표기법을 사용 하 여 지정된 된 인덱스에.</xref:System.Web.UI.WebControls.TableRowCollection> </xref:System.Web.UI.WebControls.TableRow>"
  example:
  - "The following example demonstrates how to use the indexer to get a <xref:System.Web.UI.WebControls.TableRow> from a <xref:System.Web.UI.WebControls.TableRowCollection>. Note that in the example, the <xref:System.Web.UI.WebControls.Table.Rows%2A> property of the <xref:System.Web.UI.WebControls.Table> is an instance of the <xref:System.Web.UI.WebControls.TableRowCollection> class.  \n  \n [!code-cs[Classic TableRowCollection.this Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1263_1.aspx)]\n [!code-vb[Classic TableRowCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1263_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableRow this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "지정 하는 서 수 인덱스 값 <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> 반환할 개체입니다. 이 인덱스는&0;부터 시작 합니다."
    return:
      type: System.Web.UI.WebControls.TableRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> 요소에 나타내는 <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.TableRowCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.Remove(System.Web.UI.WebControls.TableRow)
  id: Remove(System.Web.UI.WebControls.TableRow)
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: Remove(TableRow)
  nameWithType: TableRowCollection.Remove(TableRow)
  fullName: System.Web.UI.WebControls.TableRowCollection.Remove(TableRow)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 제거 <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> 에서 <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>합니다."
  remarks: "이 메서드를 사용 하 여 지정한 <xref:System.Web.UI.WebControls.TableRow> <xref:System.Web.UI.WebControls.TableRowCollection>.</xref:System.Web.UI.WebControls.TableRowCollection> </xref:System.Web.UI.WebControls.TableRow> 제거 하려면"
  example:
  - "The following example demonstrates how to use the Remove method to remove a row from the table. Note that in the example, the <xref:System.Web.UI.WebControls.Table.Rows%2A> property of the <xref:System.Web.UI.WebControls.Table> is an instance of the <xref:System.Web.UI.WebControls.TableRowCollection> class.  \n  \n [!code-vb[Classic TableRowCollection.Remove Example#1](~/add/codesnippet/visualbasic/61877c15-b732-4ebf-be54-_1.aspx)]\n [!code-cs[Classic TableRowCollection.Remove Example#1](~/add/codesnippet/csharp/61877c15-b732-4ebf-be54-_1.aspx)]"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.TableRow row);
    parameters:
    - id: row
      type: System.Web.UI.WebControls.TableRow
      description: "<xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> 에서 제거할 개체의 <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.TableRowCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: TableRowCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.TableRowCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "제거는 <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> 에서 <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref> 지정 된 인덱스입니다."
  remarks: "이 메서드를 사용 하 여 제거 하는 <xref:System.Web.UI.WebControls.TableRow>에서 <xref:System.Web.UI.WebControls.TableRowCollection>지정된 된 인덱스에.</xref:System.Web.UI.WebControls.TableRowCollection> </xref:System.Web.UI.WebControls.TableRow>"
  example:
  - "The following example demonstrates how to use the RemoveAt method to remove a row from the table. Note that in the example, the <xref:System.Web.UI.WebControls.Table.Rows%2A> property of the <xref:System.Web.UI.WebControls.Table> is an instance of the <xref:System.Web.UI.WebControls.TableRowCollection> class. Also note that the index of the <xref:System.Web.UI.WebControls.Table.Rows%2A> collection is zero-based.  \n  \n [!code-vb[Classic TableRowCollection.RemoveAt Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_201_1.aspx)]\n [!code-cs[Classic TableRowCollection.RemoveAt Example#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_201_1.aspx)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "인덱스는 <xref href=&quot;System.Web.UI.WebControls.TableRow&quot;> </xref> 에서 제거할 개체의 <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.TableRowCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: TableRowCollection.SyncRoot
  fullName: System.Web.UI.WebControls.TableRowCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.TableRowCollection&quot;> </xref>합니다."
  remarks: "이 구현에서 반환 되는 개체는 <xref:System.Web.UI.WebControls.TableRowCollection>자체.</xref:System.Web.UI.WebControls.TableRowCollection>       대 한 자세한 내용은 <xref:System.Web.UI.WebControls.TableCellCollection.SyncRoot%2A>속성 참조는 <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>의 속성은 <xref:System.Collections.ICollection?displayProperty=fullName>인터페이스.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.TableCellCollection.SyncRoot%2A>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "컬렉션에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체입니다."
  overload: System.Web.UI.WebControls.TableRowCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: TableRowCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컬렉션에 개체를 추가 합니다."
  remarks: "일반적으로 사용 해야는 <xref:System.Web.UI.WebControls.TableRowCollection.Add%2A?displayProperty=fullName>요소를 추가 하는 메서드는 <xref:System.Web.UI.WebControls.TableRowCollection>개체입니다.</xref:System.Web.UI.WebControls.TableRowCollection> </xref:System.Web.UI.WebControls.TableRowCollection.Add%2A?displayProperty=fullName>       IList.Add 메서드는 명시적 인터페이스 멤버 구현 합니다. 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.TableRowCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Web.UI.WebControls.TableRowCollection>"
  syntax:
    content: int IList.Add (object o);
    parameters:
    - id: o
      type: System.Object
      description: "컬렉션에 추가할 개체입니다."
    return:
      type: System.Int32
      description: "컬렉션에 개체가 추가 되었으면 인덱스입니다."
  overload: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: TableRowCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정한 개체가 컬렉션에 포함 되었는지 여부를 결정 합니다."
  remarks: "IList.Contains 방법은 명시적 인터페이스 멤버 구현 합니다. 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.TableRowCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Web.UI.WebControls.TableRowCollection>"
  syntax:
    content: bool IList.Contains (object o);
    parameters:
    - id: o
      type: System.Object
      description: "컬렉션에서 찾을 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>개체가는 컬렉션에 있으면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: TableRowCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 개체를 검색 하 고 컬렉션 내에서 처음 나타나는&0;부터 시작 하는 인덱스를 반환 합니다."
  remarks: "일반적으로 사용 해야는 <xref:System.Web.UI.WebControls.TableRowCollection.GetRowIndex%2A>에 있는 요소의 인덱스를 가져올 메서드는 <xref:System.Web.UI.WebControls.TableRowCollection>개체입니다.</xref:System.Web.UI.WebControls.TableRowCollection> </xref:System.Web.UI.WebControls.TableRowCollection.GetRowIndex%2A>       IList.IndexOf 방법은 명시적 인터페이스 멤버 구현 합니다. 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.TableRowCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Web.UI.WebControls.TableRowCollection>"
  syntax:
    content: int IList.IndexOf (object o);
    parameters:
    - id: o
      type: System.Object
      description: "컬렉션에서 찾을 개체입니다."
    return:
      type: System.Int32
      description: "컬렉션에서 개체의 첫 번째 요소의&0;부터 시작 인덱스 그렇지 않으면-1 개체가 컬렉션에 없는 경우입니다."
  overload: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: TableRowCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "개체를 컬렉션 내의 지정한 인덱스에 삽입 합니다."
  remarks: "일반적으로 사용 해야는 <xref:System.Web.UI.WebControls.TableRowCollection.AddAt%2A>요소를 추가 하는 메서드는 <xref:System.Web.UI.WebControls.TableRowCollection>개체입니다.</xref:System.Web.UI.WebControls.TableRowCollection> </xref:System.Web.UI.WebControls.TableRowCollection.AddAt%2A>       IList.Insert 방법은 명시적 인터페이스 멤버 구현 합니다. 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.TableRowCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Web.UI.WebControls.TableRowCollection>"
  syntax:
    content: void IList.Insert (int index, object o);
    parameters:
    - id: index
      type: System.Int32
      description: "개체를 삽입 하 고 컬렉션 내에서&0;부터 시작 하는 인덱스입니다."
    - id: o
      type: System.Object
      description: "컬렉션에 삽입할 개체입니다."
  overload: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: TableRowCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 멤버에 대 한 참조 <xref:System.Collections.IList.IsFixedSize*>.</xref:System.Collections.IList.IsFixedSize*>"
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.TableRowCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Web.UI.WebControls.TableRowCollection>"
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>목록의 크기가 고정된 되어 있으면 그렇지 않은 경우<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: TableRowCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 멤버에 대 한 참조 <xref:System.Collections.IList.Item*>.</xref:System.Collections.IList.Item*>"
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.TableRowCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Web.UI.WebControls.TableRowCollection>"
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "가져오거나 설정할 요소의&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.Object
      description: "지정된 된 인덱스에 요소입니다."
  overload: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TableRowCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: TableRowCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컬렉션에서 개체를 제거 합니다."
  remarks: "일반적으로 사용 해야는 <xref:System.Web.UI.WebControls.TableRowCollection.Remove%2A?displayProperty=fullName>에서 요소를 제거 하는 메서드는 <xref:System.Web.UI.WebControls.TableRowCollection>개체입니다.</xref:System.Web.UI.WebControls.TableRowCollection> </xref:System.Web.UI.WebControls.TableRowCollection.Remove%2A?displayProperty=fullName>       IList.Remove 방법은 명시적 인터페이스 멤버 구현 합니다. 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.TableRowCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Web.UI.WebControls.TableRowCollection>"
  syntax:
    content: void IList.Remove (object o);
    parameters:
    - id: o
      type: System.Object
      description: "컬렉션에서 제거할 개체입니다."
  overload: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.WebControls.TableRowCollection.Add(System.Web.UI.WebControls.TableRow)
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: Add(TableRow)
  nameWithType: TableRowCollection.Add(TableRow)
  fullName: System.Web.UI.WebControls.TableRowCollection.Add(TableRow)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TableRow
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableRow
  nameWithType: TableRow
  fullName: System.Web.UI.WebControls.TableRow
- uid: System.Web.UI.WebControls.TableRowCollection.AddAt(System.Int32,System.Web.UI.WebControls.TableRow)
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: AddAt(Int32,TableRow)
  nameWithType: TableRowCollection.AddAt(Int32,TableRow)
  fullName: System.Web.UI.WebControls.TableRowCollection.AddAt(Int32,TableRow)
- uid: System.Web.UI.WebControls.TableRowCollection.AddRange(System.Web.UI.WebControls.TableRow[])
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: AddRange(TableRow[])
  nameWithType: TableRowCollection.AddRange(TableRow[])
  fullName: System.Web.UI.WebControls.TableRowCollection.AddRange(TableRow[])
- uid: System.Web.UI.WebControls.TableRow[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableRow
  nameWithType: TableRow
  fullName: System.Web.UI.WebControls.TableRow[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.TableRow
    name: TableRow
    nameWithType: TableRow
    fullName: TableRow[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.TableRowCollection.Clear
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: Clear()
  nameWithType: TableRowCollection.Clear()
  fullName: System.Web.UI.WebControls.TableRowCollection.Clear()
- uid: System.Web.UI.WebControls.TableRowCollection.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: TableRowCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.TableRowCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.UI.WebControls.TableRowCollection.Count
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: Count
  nameWithType: TableRowCollection.Count
  fullName: System.Web.UI.WebControls.TableRowCollection.Count
- uid: System.Web.UI.WebControls.TableRowCollection.GetEnumerator
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: TableRowCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.TableRowCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.TableRowCollection.GetRowIndex(System.Web.UI.WebControls.TableRow)
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: GetRowIndex(TableRow)
  nameWithType: TableRowCollection.GetRowIndex(TableRow)
  fullName: System.Web.UI.WebControls.TableRowCollection.GetRowIndex(TableRow)
- uid: System.Web.UI.WebControls.TableRowCollection.IsReadOnly
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: TableRowCollection.IsReadOnly
  fullName: System.Web.UI.WebControls.TableRowCollection.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TableRowCollection.IsSynchronized
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: TableRowCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.TableRowCollection.IsSynchronized
- uid: System.Web.UI.WebControls.TableRowCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: TableRowCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.TableRowCollection.Item(Int32)
- uid: System.Web.UI.WebControls.TableRowCollection.Remove(System.Web.UI.WebControls.TableRow)
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: Remove(TableRow)
  nameWithType: TableRowCollection.Remove(TableRow)
  fullName: System.Web.UI.WebControls.TableRowCollection.Remove(TableRow)
- uid: System.Web.UI.WebControls.TableRowCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: TableRowCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.TableRowCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.TableRowCollection.SyncRoot
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: SyncRoot
  nameWithType: TableRowCollection.SyncRoot
  fullName: System.Web.UI.WebControls.TableRowCollection.SyncRoot
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Add(System.Object)
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: TableRowCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.Add(Object)
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: TableRowCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.Contains(Object)
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: TableRowCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: TableRowCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IsFixedSize
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: TableRowCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: TableRowCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.Item(Int32)
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: TableRowCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.WebControls.TableRowCollection.System.Collections.IList.Remove(Object)
- uid: System.Web.UI.WebControls.TableRowCollection.Add*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: Add
  nameWithType: TableRowCollection.Add
- uid: System.Web.UI.WebControls.TableRowCollection.AddAt*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: AddAt
  nameWithType: TableRowCollection.AddAt
- uid: System.Web.UI.WebControls.TableRowCollection.AddRange*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: AddRange
  nameWithType: TableRowCollection.AddRange
- uid: System.Web.UI.WebControls.TableRowCollection.Clear*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: Clear
  nameWithType: TableRowCollection.Clear
- uid: System.Web.UI.WebControls.TableRowCollection.CopyTo*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: CopyTo
  nameWithType: TableRowCollection.CopyTo
- uid: System.Web.UI.WebControls.TableRowCollection.Count*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: Count
  nameWithType: TableRowCollection.Count
- uid: System.Web.UI.WebControls.TableRowCollection.GetEnumerator*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: TableRowCollection.GetEnumerator
- uid: System.Web.UI.WebControls.TableRowCollection.GetRowIndex*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: GetRowIndex
  nameWithType: TableRowCollection.GetRowIndex
- uid: System.Web.UI.WebControls.TableRowCollection.IsReadOnly*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: TableRowCollection.IsReadOnly
- uid: System.Web.UI.WebControls.TableRowCollection.IsSynchronized*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: TableRowCollection.IsSynchronized
- uid: System.Web.UI.WebControls.TableRowCollection.Item*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: Item
  nameWithType: TableRowCollection.Item
- uid: System.Web.UI.WebControls.TableRowCollection.Remove*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: Remove
  nameWithType: TableRowCollection.Remove
- uid: System.Web.UI.WebControls.TableRowCollection.RemoveAt*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: RemoveAt
  nameWithType: TableRowCollection.RemoveAt
- uid: System.Web.UI.WebControls.TableRowCollection.SyncRoot*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: SyncRoot
  nameWithType: TableRowCollection.SyncRoot
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Add*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: TableRowCollection.System.Collections.IList.Add
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Contains*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: TableRowCollection.System.Collections.IList.Contains
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IndexOf*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: TableRowCollection.System.Collections.IList.IndexOf
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Insert*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: TableRowCollection.System.Collections.IList.Insert
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IsFixedSize*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: TableRowCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Item*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: TableRowCollection.System.Collections.IList.Item
- uid: System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Remove*
  parent: System.Web.UI.WebControls.TableRowCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: TableRowCollection.System.Collections.IList.Remove
