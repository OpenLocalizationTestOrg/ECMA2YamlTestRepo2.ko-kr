### YamlMime:ManagedReference
items:
- uid: System.Xaml.Permissions.XamlAccessLevel
  id: XamlAccessLevel
  children:
  - System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.Assembly)
  - System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.AssemblyName)
  - System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName
  - System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)
  - System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.Type)
  - System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName
  langs:
  - csharp
  name: XamlAccessLevel
  nameWithType: XamlAccessLevel
  fullName: System.Xaml.Permissions.XamlAccessLevel
  type: Class
  summary: "어셈블리 및 XAML 로드의 목적에 대 한 형식에 대 한 액세스 제어를 정의 합니다."
  remarks: "XamlAccessLevel의 정적 메서드 입력에 따라 XamlAccessLevel의 인스턴스를 반환 합니다. 이것이 (생성자가 private) XamlAccessLevel 값을 생성 하는 유일한 방법은입니다.       XamlAccessLevel는 일반적으로 <xref:System.Xaml.Permissions.XamlLoadPermission>.</xref:System.Xaml.Permissions.XamlLoadPermission> 와 함께에서 사용만"
  syntax:
    content: public class XamlAccessLevel
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.Assembly)
  id: AssemblyAccessTo(System.Reflection.Assembly)
  parent: System.Xaml.Permissions.XamlAccessLevel
  langs:
  - csharp
  name: AssemblyAccessTo(Assembly)
  nameWithType: XamlAccessLevel.AssemblyAccessTo(Assembly)
  fullName: System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(Assembly)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Permissions
  summary: "반환 된 <xref href=&quot;System.Xaml.Permissions.XamlAccessLevel&quot;> </xref> <xref:System.Reflection.Assembly>.</xref:System.Reflection.Assembly> 요청 하는 어셈블리를 기반으로 인스턴스"
  syntax:
    content: public static System.Xaml.Permissions.XamlAccessLevel AssemblyAccessTo (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "요청에 대 한 어셈블리입니다."
    return:
      type: System.Xaml.Permissions.XamlAccessLevel
      description: "A <xref href=&quot;System.Xaml.Permissions.XamlAccessLevel&quot;> </xref> 인스턴스와 <code> assembly </code> 에 대 한 소스 정보로 사용 되는 값 &lt;xref:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName%2A?displayProperty=fullName&gt;합니다."
  overload: System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assembly</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.AssemblyName)
  id: AssemblyAccessTo(System.Reflection.AssemblyName)
  parent: System.Xaml.Permissions.XamlAccessLevel
  langs:
  - csharp
  name: AssemblyAccessTo(AssemblyName)
  nameWithType: XamlAccessLevel.AssemblyAccessTo(AssemblyName)
  fullName: System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(AssemblyName)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Permissions
  summary: "반환 된 <xref href=&quot;System.Xaml.Permissions.XamlAccessLevel&quot;> </xref> <xref:System.Reflection.AssemblyName>.</xref:System.Reflection.AssemblyName> 요청 하는 어셈블리를 기반으로 인스턴스"
  syntax:
    content: public static System.Xaml.Permissions.XamlAccessLevel AssemblyAccessTo (System.Reflection.AssemblyName assemblyName);
    parameters:
    - id: assemblyName
      type: System.Reflection.AssemblyName
      description: "요청에 대 한 어셈블리 이름입니다."
    return:
      type: System.Xaml.Permissions.XamlAccessLevel
      description: "A <xref href=&quot;System.Xaml.Permissions.XamlAccessLevel&quot;> </xref> 인스턴스와 <code> assemblyName </code> 에 대 한 소스 정보로 사용 되는 값 &lt;xref:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName%2A?displayProperty=fullName&gt;합니다."
  overload: System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assemblyName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>assemblyName</code>유효한 정규화 된 어셈블리 이름이 아닙니다."
  platform:
  - net462
- uid: System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName
  id: AssemblyAccessToAssemblyName
  parent: System.Xaml.Permissions.XamlAccessLevel
  langs:
  - csharp
  name: AssemblyAccessToAssemblyName
  nameWithType: XamlAccessLevel.AssemblyAccessToAssemblyName
  fullName: System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Permissions
  summary: "가져옵니다는 <xref:System.Reflection.AssemblyName>이 대 한 어셈블리의 <xref href=&quot;System.Xaml.Permissions.XamlAccessLevel&quot;> </xref> 사용 권한을 결정 합니다.</xref:System.Reflection.AssemblyName>"
  syntax:
    content: public System.Reflection.AssemblyName AssemblyAccessToAssemblyName { get; }
    return:
      type: System.Reflection.AssemblyName
      description: "<xref:System.Reflection.AssemblyName>이 대 한 어셈블리의 <xref href=&quot;System.Xaml.Permissions.XamlAccessLevel&quot;> </xref> 사용 권한을 결정 합니다.</xref:System.Reflection.AssemblyName>"
  overload: System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)
  id: PrivateAccessTo(System.String)
  parent: System.Xaml.Permissions.XamlAccessLevel
  langs:
  - csharp
  name: PrivateAccessTo(String)
  nameWithType: XamlAccessLevel.PrivateAccessTo(String)
  fullName: System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Permissions
  summary: "반환 된 <xref href=&quot;System.Xaml.Permissions.XamlAccessLevel&quot;> </xref> 인스턴스 정규화 된 이름을 사용 하 여 지정 된 특정 형식을 기반으로 합니다."
  syntax:
    content: public static System.Xaml.Permissions.XamlAccessLevel PrivateAccessTo (string assemblyQualifiedTypeName);
    parameters:
    - id: assemblyQualifiedTypeName
      type: System.String
      description: "정규화 된 어셈블리 형식 이름으로 구문 분석 되는 문자열입니다."
    return:
      type: System.Xaml.Permissions.XamlAccessLevel
      description: "A <xref href=&quot;System.Xaml.Permissions.XamlAccessLevel&quot;> </xref> 인스턴스와 <code> assemblyQualifiedTypeName </code> 에 대 한 소스 정보로 사용 되는 값 &lt;xref:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName%2A?displayProperty=fullName&gt; 및 &lt;xref:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName%2A?displayProperty=fullName&gt; 리플렉션 형식에 따라 결정 합니다."
  overload: System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assemblyQualifiedTypeName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>assemblyQualifiedTypeName</code>올바른 정규화 된 어셈블리 형식 이름이 아닙니다.       -또는-내의 어셈블리 이름은 <code>assemblyQualifiedTypeName</code> 올바른 어셈블리 이름이 아닙니다."
  platform:
  - net462
- uid: System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.Type)
  id: PrivateAccessTo(System.Type)
  parent: System.Xaml.Permissions.XamlAccessLevel
  langs:
  - csharp
  name: PrivateAccessTo(Type)
  nameWithType: XamlAccessLevel.PrivateAccessTo(Type)
  fullName: System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(Type)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Permissions
  summary: "반환 된 <xref href=&quot;System.Xaml.Permissions.XamlAccessLevel&quot;> </xref> <xref:System.Type>.</xref:System.Type> 지정 된 특정 형식에 따라 인스턴스"
  syntax:
    content: public static System.Xaml.Permissions.XamlAccessLevel PrivateAccessTo (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>액세스 권한을 요청 하려면</xref:System.Type>"
    return:
      type: System.Xaml.Permissions.XamlAccessLevel
      description: "A <xref href=&quot;System.Xaml.Permissions.XamlAccessLevel&quot;> </xref> 인스턴스와 <code> type </code> 에 대 한 소스 정보로 사용 되는 값 &lt;xref:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName%2A?displayProperty=fullName&gt; 및 &lt;xref:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName%2A?displayProperty=fullName&gt; 리플렉션 형식에 따라 결정 합니다."
  overload: System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName
  id: PrivateAccessToTypeName
  parent: System.Xaml.Permissions.XamlAccessLevel
  langs:
  - csharp
  name: PrivateAccessToTypeName
  nameWithType: XamlAccessLevel.PrivateAccessToTypeName
  fullName: System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Permissions
  summary: "이 대 한 형식의 정규화 되지 않은 문자열 이름을 가져옵니다 <xref href=&quot;System.Xaml.Permissions.XamlAccessLevel&quot;> </xref> 사용 권한을 결정 합니다."
  syntax:
    content: public string PrivateAccessToTypeName { get; }
    return:
      type: System.String
      description: "이 대 한 형식의 정규화 되지 않은 문자열 이름을 <xref href=&quot;System.Xaml.Permissions.XamlAccessLevel&quot;> </xref> 사용 권한을 결정 합니다."
  overload: System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.Assembly)
  parent: System.Xaml.Permissions.XamlAccessLevel
  isExternal: false
  name: AssemblyAccessTo(Assembly)
  nameWithType: XamlAccessLevel.AssemblyAccessTo(Assembly)
  fullName: System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(Assembly)
- uid: System.Xaml.Permissions.XamlAccessLevel
  parent: System.Xaml.Permissions
  isExternal: false
  name: XamlAccessLevel
  nameWithType: XamlAccessLevel
  fullName: System.Xaml.Permissions.XamlAccessLevel
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.AssemblyName)
  parent: System.Xaml.Permissions.XamlAccessLevel
  isExternal: false
  name: AssemblyAccessTo(AssemblyName)
  nameWithType: XamlAccessLevel.AssemblyAccessTo(AssemblyName)
  fullName: System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(AssemblyName)
- uid: System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: true
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName
  parent: System.Xaml.Permissions.XamlAccessLevel
  isExternal: false
  name: AssemblyAccessToAssemblyName
  nameWithType: XamlAccessLevel.AssemblyAccessToAssemblyName
  fullName: System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName
- uid: System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)
  parent: System.Xaml.Permissions.XamlAccessLevel
  isExternal: false
  name: PrivateAccessTo(String)
  nameWithType: XamlAccessLevel.PrivateAccessTo(String)
  fullName: System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.Type)
  parent: System.Xaml.Permissions.XamlAccessLevel
  isExternal: false
  name: PrivateAccessTo(Type)
  nameWithType: XamlAccessLevel.PrivateAccessTo(Type)
  fullName: System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName
  parent: System.Xaml.Permissions.XamlAccessLevel
  isExternal: false
  name: PrivateAccessToTypeName
  nameWithType: XamlAccessLevel.PrivateAccessToTypeName
  fullName: System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName
- uid: System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo*
  parent: System.Xaml.Permissions.XamlAccessLevel
  isExternal: false
  name: AssemblyAccessTo
  nameWithType: XamlAccessLevel.AssemblyAccessTo
- uid: System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName*
  parent: System.Xaml.Permissions.XamlAccessLevel
  isExternal: false
  name: AssemblyAccessToAssemblyName
  nameWithType: XamlAccessLevel.AssemblyAccessToAssemblyName
- uid: System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo*
  parent: System.Xaml.Permissions.XamlAccessLevel
  isExternal: false
  name: PrivateAccessTo
  nameWithType: XamlAccessLevel.PrivateAccessTo
- uid: System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName*
  parent: System.Xaml.Permissions.XamlAccessLevel
  isExternal: false
  name: PrivateAccessToTypeName
  nameWithType: XamlAccessLevel.PrivateAccessToTypeName
