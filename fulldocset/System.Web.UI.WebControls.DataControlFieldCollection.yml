### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.DataControlFieldCollection
  id: DataControlFieldCollection
  children:
  - System.Web.UI.WebControls.DataControlFieldCollection.#ctor
  - System.Web.UI.WebControls.DataControlFieldCollection.Add(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.DataControlFieldCollection.CloneFields
  - System.Web.UI.WebControls.DataControlFieldCollection.Contains(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.DataControlFieldCollection.CopyTo(System.Web.UI.WebControls.DataControlField[],System.Int32)
  - System.Web.UI.WebControls.DataControlFieldCollection.CreateKnownType(System.Int32)
  - System.Web.UI.WebControls.DataControlFieldCollection.FieldsChanged
  - System.Web.UI.WebControls.DataControlFieldCollection.GetKnownTypes
  - System.Web.UI.WebControls.DataControlFieldCollection.IndexOf(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.DataControlFieldCollection.Insert(System.Int32,System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.DataControlFieldCollection.Item(System.Int32)
  - System.Web.UI.WebControls.DataControlFieldCollection.OnClearComplete
  - System.Web.UI.WebControls.DataControlFieldCollection.OnInsertComplete(System.Int32,System.Object)
  - System.Web.UI.WebControls.DataControlFieldCollection.OnRemoveComplete(System.Int32,System.Object)
  - System.Web.UI.WebControls.DataControlFieldCollection.OnValidate(System.Object)
  - System.Web.UI.WebControls.DataControlFieldCollection.Remove(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.DataControlFieldCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.DataControlFieldCollection.SetDirtyObject(System.Object)
  langs:
  - csharp
  name: DataControlFieldCollection
  nameWithType: DataControlFieldCollection
  fullName: System.Web.UI.WebControls.DataControlFieldCollection
  type: Class
  summary: "컬렉션을 나타냅니다 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 와 같은 데이터 바인딩된 컨트롤에서 사용 되는 개체 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 및 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>합니다."
  remarks: "DataControlFieldCollection 클래스의 컬렉션을 나타냅니다 <xref:System.Web.UI.WebControls.DataControlField>해당 자식 컨트롤 표시 되는 방식을 지정 하려면 데이터 바인딩된 컨트롤에서 사용 되는 개체입니다.</xref:System.Web.UI.WebControls.DataControlField> DataControlFieldCollection 클래스에서 파생 <xref:System.Web.UI.StateManagedCollection>, 저장에 사용 되는 추상 기본 컬렉션 클래스 <xref:System.Web.UI.IStateManager>개체.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.StateManagedCollection>       A <xref:System.Web.UI.StateManagedCollection>DataControlFieldCollection 개체의 동작에 영향을 미칩니다.</xref:System.Web.UI.StateManagedCollection> <xref:System.Web.UI.WebControls.DataControlField>상태가 복원 되는 경우 컬렉션에 동적으로 추가 되는 개체를 컨트롤에 다시 추가 됩니다.</xref:System.Web.UI.WebControls.DataControlField> 이 ASP.NET에서 대부분의 컬렉션 형식이 필요에 따라 필드를 추가, 제거 또는 다시 게시할 때마다 대신 한 번만 변경 해야 함을 의미 합니다.       (의 <xref:System.Web.UI.WebControls.DataControlField>클래스가 구현 하는 <xref:System.Web.UI.IStateManager>인터페이스 ASP.NET 뷰 상태에 해당 상태를 저장할 수 있습니다.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.DataControlField> )의 집합을 프로그래밍 방식으로 관리 하려면 DataControlFieldCollection 클래스를 사용 합니다. <xref:System.Web.UI.WebControls.DataControlField>개체입니다.</xref:System.Web.UI.WebControls.DataControlField> 이러한 필드를 선언적으로 정의 하는 보다 일반적인 인지 확인 합니다.       추가, 삽입 및 <xref:System.Web.UI.WebControls.DataControlField>DataControlFieldCollection 클래스의 적절 한 메서드를 사용 하는 개체를</xref:System.Web.UI.WebControls.DataControlField> 제거 합니다. 프로그래밍 방식으로 검색 하려면 <xref:System.Web.UI.WebControls.DataControlField>개체 컬렉션에서 다음 방법 중 하나를 사용:-를 단일 인덱서를 사용 하 여 <xref:System.Web.UI.WebControls.DataControlField>배열 표기법을 사용 하 여 컬렉션에서 개체가.</xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.DataControlField>      -사용는 <xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>만드는 메서드를 한 <xref:System.Collections.IEnumerator?displayProperty=fullName>-구현 된 개체 컬렉션에서 항목을 가져올 사용할 수 있는.</xref:System.Collections.IEnumerator?displayProperty=fullName> </xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>       <xref:System.Web.UI.StateManagedCollection.Count%2A>속성 컬렉션에서 항목의 총 수를 지정 하 고 일반적으로 컬렉션의 상한을 결정 하는 데 사용 됩니다.</xref:System.Web.UI.StateManagedCollection.Count%2A> 항목을 추가 하 고 사용 하 여 컬렉션에서 항목을 제거할 수 있습니다는 <xref:System.Web.UI.WebControls.DataControlFieldCollection.Add%2A>, <xref:System.Web.UI.WebControls.DataControlFieldCollection.Insert%2A>, <xref:System.Web.UI.WebControls.DataControlFieldCollection.Remove%2A>, 및 <xref:System.Web.UI.WebControls.DataControlFieldCollection.RemoveAt%2A>메서드.</xref:System.Web.UI.WebControls.DataControlFieldCollection.RemoveAt%2A> </xref:System.Web.UI.WebControls.DataControlFieldCollection.Remove%2A> </xref:System.Web.UI.WebControls.DataControlFieldCollection.Insert%2A> </xref:System.Web.UI.WebControls.DataControlFieldCollection.Add%2A>       사용 하는 경우는 <xref:System.Web.UI.WebControls.GridView>또는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤은 <xref:System.Web.UI.WebControls.DataControlField>자동으로 생성 된 개체 (경우에 예를 들어는 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>속성은 `true`) 공개적으로 액세스할 수 있는 필드 컬렉션에 저장 되지 않습니다.</xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> </xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 만 할 수 있습니다에 액세스 하 고 조작 <xref:System.Web.UI.WebControls.DataControlField>자동으로 생성 되지 않은 개체입니다.</xref:System.Web.UI.WebControls.DataControlField>       다음 표에서 서로 다른 데이터 컨트롤 필드 클래스와 사용 방법을 나열 합니다.      | 매개 변수 클래스 | 설명 |   |---------------------|-----------------|   | <xref:System.Web.UI.WebControls.DataControlField>| 모든 필드에 대 한 추상 기본 클래스입니다. |   | <xref:System.Web.UI.WebControls.BoundField>| ASP.NET 데이터 소스 컨트롤에서 텍스트 또는 데이터에 바인딩하는 데 사용 되는 데이터 바인딩된 컨트롤 필드를 검색 합니다. |   | <xref:System.Web.UI.WebControls.ButtonFieldBase>| 일반적인 단추 기능을 캡슐화 하는 데이터 바인딩된 컨트롤 필드.</xref:System.Web.UI.WebControls.ButtonFieldBase> </xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.DataControlField> <xref:System.Web.UI.WebControls.ButtonField>및 <xref:System.Web.UI.WebControls.CheckBoxField>여기에서 파생 됩니다. |   | <xref:System.Web.UI.WebControls.ButtonField>| 하나 이상의 단추를 표시 하는 데이터 바인딩된 컨트롤 필드입니다. |   | <xref:System.Web.UI.WebControls.CheckBoxField>| <xref:System.Web.UI.WebControls.CheckBox>컨트롤을 표시 하는 데이터 바인딩된 컨트롤 필드입니다. |   | <xref:System.Web.UI.WebControls.CommandField>| 행 (또는 열)을 편집 등을 표시 하는 데이터에서 수행할 수 있는 작업이 표시 업데이트 또는 삭제 하는 데이터 바인딩된 컨트롤 필드입니다. |   | <xref:System.Web.UI.WebControls.HyperLinkField>| <xref:System.Web.UI.WebControls.HyperLink>컨트롤을 표시 하는 데이터 바인딩된 컨트롤 필드입니다. |   | <xref:System.Web.UI.WebControls.ImageField>| <xref:System.Web.UI.WebControls.Image>컨트롤을 표시 하는 데이터 바인딩된 컨트롤 필드입니다. |   | <xref:System.Web.UI.WebControls.TemplateField>| 데이터 바인딩된 컨트롤에서 사용자 지정 콘텐츠를 표시 하는 데이터 바인딩된 컨트롤 필드입니다. |</xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.Image> </xref:System.Web.UI.WebControls.ImageField> </xref:System.Web.UI.WebControls.HyperLink> </xref:System.Web.UI.WebControls.HyperLinkField> </xref:System.Web.UI.WebControls.CommandField> </xref:System.Web.UI.WebControls.CheckBox> </xref:System.Web.UI.WebControls.CheckBoxField> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.CheckBoxField></xref:System.Web.UI.WebControls.ButtonField>"
  syntax:
    content: 'public sealed class DataControlFieldCollection : System.Web.UI.StateManagedCollection'
  inheritance:
  - System.Object
  - System.Web.UI.StateManagedCollection
  implements: []
  inheritedMembers:
  - System.Web.UI.StateManagedCollection.Clear
  - System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.StateManagedCollection.Count
  - System.Web.UI.StateManagedCollection.GetEnumerator
  - System.Web.UI.StateManagedCollection.OnClear
  - System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.SetDirty
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot
  - System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Clear
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: DataControlFieldCollection()
  nameWithType: DataControlFieldCollection.DataControlFieldCollection()
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.DataControlFieldCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Web.UI.WebControls.DataControlFieldCollection>클래스</xref:System.Web.UI.WebControls.DataControlFieldCollection> 의 새 인스턴스를 만들려면이 생성자를 사용 합니다.      > [!NOTE] >이 생성자는 주로 컨트롤 개발자가 사용 됩니다."
  syntax:
    content: public DataControlFieldCollection ();
    parameters: []
  overload: System.Web.UI.WebControls.DataControlFieldCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Add(System.Web.UI.WebControls.DataControlField)
  id: Add(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: Add(DataControlField)
  nameWithType: DataControlFieldCollection.Add(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Add(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 추가 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 개체 컬렉션의 끝입니다."
  remarks: "Add 메서드를 사용 하 여 추가 하는 <xref:System.Web.UI.WebControls.DataControlField>개체 컬렉션의 끝입니다.</xref:System.Web.UI.WebControls.DataControlField> 이 메서드의 구현에서는 <xref:System.Web.UI.WebControls.DataControlField>로 지정 된 개체는 `field` 매개 변수 컬렉션에 추가 합니다.</xref:System.Web.UI.WebControls.DataControlField>"
  example:
  - "The following code example demonstrates how to use the Add method to dynamically add a <xref:System.Web.UI.WebControls.CheckBoxField> object to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[CheckBoxFieldCtor#1](~/add/codesnippet/csharp/6b1fdd6c-f2f2-4668-8119-_1.aspx)]\n [!code-vb[CheckBoxFieldCtor#1](~/add/codesnippet/visualbasic/6b1fdd6c-f2f2-4668-8119-_1.aspx)]"
  syntax:
    content: public void Add (System.Web.UI.WebControls.DataControlField field);
    parameters:
    - id: field
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 컬렉션에 추가 합니다."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.CloneFields
  id: CloneFields
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: CloneFields()
  nameWithType: DataControlFieldCollection.CloneFields()
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.CloneFields()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재 컬렉션의 복사본을 만듭니다."
  remarks: "CloneFields 메서드를 사용 하 여 현재 컬렉션의 복사본을 만듭니다. 이 메서드는 작업이 취소 될 때 롤백 동작을 구현 하려면 디자인 타임 대화 상자에 의해 주로 사용 됩니다."
  syntax:
    content: public System.Web.UI.WebControls.DataControlFieldCollection CloneFields ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlFieldCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> 현재 컬렉션의 각 데이터 컨트롤 필드의 복사본이 포함 된 합니다."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.CloneFields*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Contains(System.Web.UI.WebControls.DataControlField)
  id: Contains(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: Contains(DataControlField)
  nameWithType: DataControlFieldCollection.Contains(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Contains(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "결정 여부는 <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> 컬렉션에 특정 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 개체입니다."
  remarks: "이 메서드는 선형 검색을 수행합니다. <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> 를 호출 하 여 일치 여부를 확인"
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.DataControlField field);
    parameters:
    - id: field
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 에서 찾으려고는 <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> 에 지정 된 필드, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.CopyTo(System.Web.UI.WebControls.DataControlField[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.DataControlField[],System.Int32)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: CopyTo(DataControlField[],Int32)
  nameWithType: DataControlFieldCollection.CopyTo(DataControlField[],Int32)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.CopyTo(DataControlField[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "전체 복사 <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> 컬렉션을 호환 되는&1; 차원 <xref:System.Array>대상 배열의 지정된 된 인덱스부터 시작 합니다.</xref:System.Array>"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.DataControlField[] array, int index);
    parameters:
    - id: array
      type: System.Web.UI.WebControls.DataControlField[]
      description: "1 차원 <xref:System.Array>에서 복사한 요소의 대상인 <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref>.</xref:System.Array> <xref:System.Array>0부터 시작 하는 인덱스가 있어야 합니다.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "인덱스는&0;부터 시작 `array` 복사가 시작 되는 합니다."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>가&0; 보다 작습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>가 다차원 배열인 경우       -또는-소스의 필드 수가 <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> 컬렉션에서 사용 가능한 공간 보다 큽니다. <code>index</code> 대상 배열의 끝에 있습니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.CreateKnownType(System.Int32)
  id: CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: CreateKnownType(Int32)
  nameWithType: DataControlFieldCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.CreateKnownType(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override object CreateKnownType (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "추가할 수 있습니다."
    return:
      type: System.Object
      description: "추가할 수 있습니다."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.CreateKnownType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.FieldsChanged
  id: FieldsChanged
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: FieldsChanged
  nameWithType: DataControlFieldCollection.FieldsChanged
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.FieldsChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "변경 될 때 컬렉션의 필드, 일반적으로 인해 발생 한 <> </> *>, <> </> *>, <> </> *> 또는 <> </> *> 메서드를 호출 합니다. 이 이벤트는 언제 든 지는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 컬렉션 발생 해당 <xref uid=&quot;langword_csharp_FieldChanged&quot; name=&quot;FieldChanged&quot; href=&quot;&quot;> </xref> 이벤트입니다."
  remarks: "FieldsChanged 이벤트가 발생할 때는 <xref:System.Web.UI.StateManagedCollection.Clear%2A>, <xref:System.Web.UI.WebControls.DataControlFieldCollection.Insert%2A>, 또는 <xref:System.Web.UI.WebControls.DataControlFieldCollection.Remove%2A>메서드를 호출 합니다.</xref:System.Web.UI.WebControls.DataControlFieldCollection.Remove%2A> </xref:System.Web.UI.WebControls.DataControlFieldCollection.Insert%2A> </xref:System.Web.UI.StateManagedCollection.Clear%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  syntax:
    content: public event EventHandler FieldsChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.GetKnownTypes
  id: GetKnownTypes
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: GetKnownTypes()
  nameWithType: DataControlFieldCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.GetKnownTypes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override Type[] GetKnownTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "추가할 수 있습니다."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.GetKnownTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.IndexOf(System.Web.UI.WebControls.DataControlField)
  id: IndexOf(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: IndexOf(DataControlField)
  nameWithType: DataControlFieldCollection.IndexOf(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.IndexOf(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "특정 인덱스를 결정 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 컬렉션의 개체입니다."
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.DataControlField field);
    parameters:
    - id: field
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 컬렉션에서 찾을 수 있습니다."
    return:
      type: System.Int32
      description: "인덱스는 <code> field </code> 매개 변수를 컬렉션에 없는 경우-1입니다."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Insert(System.Int32,System.Web.UI.WebControls.DataControlField)
  id: Insert(System.Int32,System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: Insert(Int32,DataControlField)
  nameWithType: DataControlFieldCollection.Insert(Int32,DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Insert(Int32,DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 삽입 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 개체는 <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> 컬렉션 내의 지정한 인덱스에 있습니다."
  syntax:
    content: public void Insert (int index, System.Web.UI.WebControls.DataControlField field);
    parameters:
    - id: index
      type: System.Int32
      description: "인덱스&0;부터 시작 된 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 삽입 됩니다."
    - id: field
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 를 삽입 합니다."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than 0.  \n  \n \\- or -  \n  \n <code>index</code> is greater than <xref:System.Web.UI.StateManagedCollection.Count*>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataControlFieldCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져오거나는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 개체 컬렉션에서 지정 된 인덱스입니다."
  remarks: "이 인덱서를 사용 하 여 한 <xref:System.Web.UI.WebControls.DataControlField>에서 개체는 <xref:System.Web.UI.WebControls.DataControlFieldCollection>배열 표기법을 사용 하 여 지정된 된 인덱스에 컬렉션.</xref:System.Web.UI.WebControls.DataControlFieldCollection> </xref:System.Web.UI.WebControls.DataControlField>"
  example:
  - "The following code example demonstrates how to use the Item indexer to access the fields of a <xref:System.Web.UI.WebControls.GridView> control when the user clicks a button in the control.  \n  \n [!code-cs[ButtonFieldBaseCausesValidation#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1071_1.aspx)]\n [!code-vb[ButtonFieldBaseCausesValidation#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1071_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.DataControlField this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "0부터 시작 인덱스는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 컬렉션에서 검색할 수 있습니다."
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 컬렉션에서 지정 된 인덱스입니다."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnClearComplete
  id: OnClearComplete
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: OnClearComplete()
  nameWithType: DataControlFieldCollection.OnClearComplete()
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.OnClearComplete()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnClearComplete ();
    parameters: []
  overload: System.Web.UI.WebControls.DataControlFieldCollection.OnClearComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnInsertComplete(System.Int32,System.Object)
  id: OnInsertComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: OnInsertComplete(Int32,Object)
  nameWithType: DataControlFieldCollection.OnInsertComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.OnInsertComplete(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnInsertComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "추가할 수 있습니다."
    - id: value
      type: System.Object
      description: "추가할 수 있습니다."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.OnInsertComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnRemoveComplete(System.Int32,System.Object)
  id: OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: OnRemoveComplete(Int32,Object)
  nameWithType: DataControlFieldCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.OnRemoveComplete(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnRemoveComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "추가할 수 있습니다."
    - id: value
      type: System.Object
      description: "추가할 수 있습니다."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.OnRemoveComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: DataControlFieldCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.OnValidate(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnValidate (object o);
    parameters:
    - id: o
      type: System.Object
      description: "추가할 수 있습니다."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.OnValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Remove(System.Web.UI.WebControls.DataControlField)
  id: Remove(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: Remove(DataControlField)
  nameWithType: DataControlFieldCollection.Remove(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Remove(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 제거 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 에서 개체는 <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> 컬렉션입니다."
  syntax:
    content: public void Remove (System.Web.UI.WebControls.DataControlField field);
    parameters:
    - id: field
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 에서 제거 하 고 <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: DataControlFieldCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "제거는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 개체에서 지정 된 인덱스는 <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> 컬렉션입니다."
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "인덱스는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 를 제거 합니다."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlFieldCollection.SetDirtyObject(System.Object)
  id: SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  langs:
  - csharp
  name: SetDirtyObject(Object)
  nameWithType: DataControlFieldCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.SetDirtyObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void SetDirtyObject (object o);
    parameters:
    - id: o
      type: System.Object
      description: "추가할 수 있습니다."
  overload: System.Web.UI.WebControls.DataControlFieldCollection.SetDirtyObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.StateManagedCollection
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.WebControls.DataControlFieldCollection.#ctor
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: DataControlFieldCollection()
  nameWithType: DataControlFieldCollection.DataControlFieldCollection()
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.DataControlFieldCollection()
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Add(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Add(DataControlField)
  nameWithType: DataControlFieldCollection.Add(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Add(DataControlField)
- uid: System.Web.UI.WebControls.DataControlField
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlField
  nameWithType: DataControlField
  fullName: System.Web.UI.WebControls.DataControlField
- uid: System.Web.UI.WebControls.DataControlFieldCollection.CloneFields
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: CloneFields()
  nameWithType: DataControlFieldCollection.CloneFields()
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.CloneFields()
- uid: System.Web.UI.WebControls.DataControlFieldCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCollection
  nameWithType: DataControlFieldCollection
  fullName: System.Web.UI.WebControls.DataControlFieldCollection
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Contains(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Contains(DataControlField)
  nameWithType: DataControlFieldCollection.Contains(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Contains(DataControlField)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.DataControlFieldCollection.CopyTo(System.Web.UI.WebControls.DataControlField[],System.Int32)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: CopyTo(DataControlField[],Int32)
  nameWithType: DataControlFieldCollection.CopyTo(DataControlField[],Int32)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.CopyTo(DataControlField[],Int32)
- uid: System.Web.UI.WebControls.DataControlField[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlField
  nameWithType: DataControlField
  fullName: System.Web.UI.WebControls.DataControlField[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.DataControlField
    name: DataControlField
    nameWithType: DataControlField
    fullName: DataControlField[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.DataControlFieldCollection.CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: CreateKnownType(Int32)
  nameWithType: DataControlFieldCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.CreateKnownType(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.DataControlFieldCollection.FieldsChanged
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: FieldsChanged
  nameWithType: DataControlFieldCollection.FieldsChanged
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.FieldsChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.DataControlFieldCollection.GetKnownTypes
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: GetKnownTypes()
  nameWithType: DataControlFieldCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.GetKnownTypes()
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.DataControlFieldCollection.IndexOf(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: IndexOf(DataControlField)
  nameWithType: DataControlFieldCollection.IndexOf(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.IndexOf(DataControlField)
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Insert(System.Int32,System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Insert(Int32,DataControlField)
  nameWithType: DataControlFieldCollection.Insert(Int32,DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Insert(Int32,DataControlField)
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataControlFieldCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Item(Int32)
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnClearComplete
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: OnClearComplete()
  nameWithType: DataControlFieldCollection.OnClearComplete()
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.OnClearComplete()
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnInsertComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: OnInsertComplete(Int32,Object)
  nameWithType: DataControlFieldCollection.OnInsertComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.OnInsertComplete(Int32,Object)
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: OnRemoveComplete(Int32,Object)
  nameWithType: DataControlFieldCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.OnRemoveComplete(Int32,Object)
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnValidate(System.Object)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: OnValidate(Object)
  nameWithType: DataControlFieldCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.OnValidate(Object)
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Remove(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Remove(DataControlField)
  nameWithType: DataControlFieldCollection.Remove(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.Remove(DataControlField)
- uid: System.Web.UI.WebControls.DataControlFieldCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: DataControlFieldCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.DataControlFieldCollection.SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: SetDirtyObject(Object)
  nameWithType: DataControlFieldCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.DataControlFieldCollection.SetDirtyObject(Object)
- uid: System.Web.UI.WebControls.DataControlFieldCollection.#ctor*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: DataControlFieldCollection
  nameWithType: DataControlFieldCollection.DataControlFieldCollection
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Add*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Add
  nameWithType: DataControlFieldCollection.Add
- uid: System.Web.UI.WebControls.DataControlFieldCollection.CloneFields*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: CloneFields
  nameWithType: DataControlFieldCollection.CloneFields
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Contains*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Contains
  nameWithType: DataControlFieldCollection.Contains
- uid: System.Web.UI.WebControls.DataControlFieldCollection.CopyTo*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataControlFieldCollection.CopyTo
- uid: System.Web.UI.WebControls.DataControlFieldCollection.CreateKnownType*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: CreateKnownType
  nameWithType: DataControlFieldCollection.CreateKnownType
- uid: System.Web.UI.WebControls.DataControlFieldCollection.GetKnownTypes*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: GetKnownTypes
  nameWithType: DataControlFieldCollection.GetKnownTypes
- uid: System.Web.UI.WebControls.DataControlFieldCollection.IndexOf*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: IndexOf
  nameWithType: DataControlFieldCollection.IndexOf
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Insert*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Insert
  nameWithType: DataControlFieldCollection.Insert
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Item*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Item
  nameWithType: DataControlFieldCollection.Item
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnClearComplete*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: OnClearComplete
  nameWithType: DataControlFieldCollection.OnClearComplete
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnInsertComplete*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: OnInsertComplete
  nameWithType: DataControlFieldCollection.OnInsertComplete
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnRemoveComplete*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: OnRemoveComplete
  nameWithType: DataControlFieldCollection.OnRemoveComplete
- uid: System.Web.UI.WebControls.DataControlFieldCollection.OnValidate*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: OnValidate
  nameWithType: DataControlFieldCollection.OnValidate
- uid: System.Web.UI.WebControls.DataControlFieldCollection.Remove*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: Remove
  nameWithType: DataControlFieldCollection.Remove
- uid: System.Web.UI.WebControls.DataControlFieldCollection.RemoveAt*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: RemoveAt
  nameWithType: DataControlFieldCollection.RemoveAt
- uid: System.Web.UI.WebControls.DataControlFieldCollection.SetDirtyObject*
  parent: System.Web.UI.WebControls.DataControlFieldCollection
  isExternal: false
  name: SetDirtyObject
  nameWithType: DataControlFieldCollection.SetDirtyObject
