### YamlMime:ManagedReference
items:
- uid: System.Windows.EventRoute
  id: EventRoute
  children:
  - System.Windows.EventRoute.#ctor(System.Windows.RoutedEvent)
  - System.Windows.EventRoute.Add(System.Object,System.Delegate,System.Boolean)
  - System.Windows.EventRoute.PeekBranchNode
  - System.Windows.EventRoute.PeekBranchSource
  - System.Windows.EventRoute.PopBranchNode
  - System.Windows.EventRoute.PushBranchNode(System.Object,System.Object)
  langs:
  - csharp
  name: EventRoute
  nameWithType: EventRoute
  fullName: System.Windows.EventRoute
  type: Class
  summary: "라우트된 이벤트를 따라야 할 경로 대 한 컨테이너를 나타냅니다."
  remarks: "이 클래스는 유효한 해당 <xref:System.Windows.RoutedEvent>, 해당 이벤트에 대 한 경로를 참조 하는 대상 개체 및 이벤트 처리기 목록 쌍의 정렬된 된 목록을 포함 합니다.</xref:System.Windows.RoutedEvent> EventRoute 목록에 새 항목 추가 지원 하며 목록에서 처리기에 대 한 호출 해야 할 수도 있습니다.       대부분의 일반 작업에 대 한 처리기를 추가 하기 위한 [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] 이벤트는이 클래스와 작업을 필요 하지 않습니다 (예를 들어 <xref:System.Windows.EventManager>클래스 처리를 추가 하거나 기존 처리기 이벤트에 대 한 쿼리 하는 방법).</xref:System.Windows.EventManager> 이 클래스는 요소는 자식 요소 또는 요소를 추가 하거나 기본 계산 된 경로에서 요소를 제거할 수 있도록 하는 부모 요소에 대 한 특정 기술 하는 경우에 주로 사용 합니다."
  syntax:
    content: public sealed class EventRoute
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.EventRoute.#ctor(System.Windows.RoutedEvent)
  id: '#ctor(System.Windows.RoutedEvent)'
  parent: System.Windows.EventRoute
  langs:
  - csharp
  name: EventRoute(RoutedEvent)
  nameWithType: EventRoute.EventRoute(RoutedEvent)
  fullName: System.Windows.EventRoute.EventRoute(RoutedEvent)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "인스턴스를 초기화는 <xref href=&quot;System.Windows.EventRoute&quot;> </xref> 클래스입니다."
  syntax:
    content: public EventRoute (System.Windows.RoutedEvent routedEvent);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "이 이벤트 경로와 연결 되도록 NULL이 아닌 이벤트 식별자입니다."
  overload: System.Windows.EventRoute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventRoute.Add(System.Object,System.Delegate,System.Boolean)
  id: Add(System.Object,System.Delegate,System.Boolean)
  parent: System.Windows.EventRoute
  langs:
  - csharp
  name: Add(Object,Delegate,Boolean)
  nameWithType: EventRoute.Add(Object,Delegate,Boolean)
  fullName: System.Windows.EventRoute.Add(Object,Delegate,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "경로에 지정된 된 대상에 대 한 지정된 된 처리기를 추가합니다."
  remarks: "특정 대상 인스턴스에 대 한 처리기를 두 번 추가 하는 오류가 아닙니다. 이 경우 처리기를 두 번 호출 됩니다."
  syntax:
    content: public void Add (object target, Delegate handler, bool handledEventsToo);
    parameters:
    - id: target
      type: System.Object
      description: "처리기가는 경로에 추가 될 대상 개체를 지정 합니다."
    - id: handler
      type: System.Delegate
      description: "경로에 추가할 처리기를 지정 합니다."
    - id: handledEventsToo
      type: System.Boolean
      description: "수신기가 이미 처리 하는 이벤트를 감지 여부를 나타냅니다."
  overload: System.Windows.EventRoute.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventRoute.PeekBranchNode
  id: PeekBranchNode
  parent: System.Windows.EventRoute
  langs:
  - csharp
  name: PeekBranchNode()
  nameWithType: EventRoute.PeekBranchNode()
  fullName: System.Windows.EventRoute.PeekBranchNode()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "두 개의 논리 트리 분기는 이벤트 경로 스택에 최상위 요소를 반환 합니다."
  syntax:
    content: public object PeekBranchNode ();
    parameters: []
    return:
      type: System.Object
      description: "두 개의 논리 트리 분기는 이벤트 경로 스택에 최상위 요소입니다."
  overload: System.Windows.EventRoute.PeekBranchNode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventRoute.PeekBranchSource
  id: PeekBranchSource
  parent: System.Windows.EventRoute
  langs:
  - csharp
  name: PeekBranchSource()
  nameWithType: EventRoute.PeekBranchSource()
  fullName: System.Windows.EventRoute.PeekBranchSource()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "두 개의 논리 트리 분기는 이벤트 경로 스택에 최상위 요소에 대 한 소스를 반환 합니다."
  syntax:
    content: public object PeekBranchSource ();
    parameters: []
    return:
      type: System.Object
      description: "두 개의 논리 트리 분기는 이벤트 경로 스택에 최상위 요소에 대 한 원본입니다."
  overload: System.Windows.EventRoute.PeekBranchSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventRoute.PopBranchNode
  id: PopBranchNode
  parent: System.Windows.EventRoute
  langs:
  - csharp
  name: PopBranchNode()
  nameWithType: EventRoute.PopBranchNode()
  fullName: System.Windows.EventRoute.PopBranchNode()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "두 개의 논리 트리 분기는 이벤트 경로 스택에 최상위 노드를 반환 합니다."
  syntax:
    content: public object PopBranchNode ();
    parameters: []
    return:
      type: System.Object
      description: "두 개의 논리 트리 분기는 이벤트 경로 스택에 최상위 노드."
  overload: System.Windows.EventRoute.PopBranchNode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventRoute.PushBranchNode(System.Object,System.Object)
  id: PushBranchNode(System.Object,System.Object)
  parent: System.Windows.EventRoute
  langs:
  - csharp
  name: PushBranchNode(Object,Object)
  nameWithType: EventRoute.PushBranchNode(Object,Object)
  fullName: System.Windows.EventRoute.PushBranchNode(Object,Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "두 개의 논리 트리 분기는 이벤트 경로 스택에서에 최상위 노드를 추가 합니다."
  syntax:
    content: public void PushBranchNode (object node, object source);
    parameters:
    - id: node
      type: System.Object
      description: "두 개의 논리 트리 분기는 이벤트 경로 스택에 최상위 요소입니다."
    - id: source
      type: System.Object
      description: "두 개의 논리 트리 분기는 이벤트 경로 스택에 최상위 요소에 대 한 원본입니다."
  overload: System.Windows.EventRoute.PushBranchNode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.EventRoute.#ctor(System.Windows.RoutedEvent)
  parent: System.Windows.EventRoute
  isExternal: false
  name: EventRoute(RoutedEvent)
  nameWithType: EventRoute.EventRoute(RoutedEvent)
  fullName: System.Windows.EventRoute.EventRoute(RoutedEvent)
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.EventRoute.Add(System.Object,System.Delegate,System.Boolean)
  parent: System.Windows.EventRoute
  isExternal: false
  name: Add(Object,Delegate,Boolean)
  nameWithType: EventRoute.Add(Object,Delegate,Boolean)
  fullName: System.Windows.EventRoute.Add(Object,Delegate,Boolean)
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.EventRoute.PeekBranchNode
  parent: System.Windows.EventRoute
  isExternal: false
  name: PeekBranchNode()
  nameWithType: EventRoute.PeekBranchNode()
  fullName: System.Windows.EventRoute.PeekBranchNode()
- uid: System.Windows.EventRoute.PeekBranchSource
  parent: System.Windows.EventRoute
  isExternal: false
  name: PeekBranchSource()
  nameWithType: EventRoute.PeekBranchSource()
  fullName: System.Windows.EventRoute.PeekBranchSource()
- uid: System.Windows.EventRoute.PopBranchNode
  parent: System.Windows.EventRoute
  isExternal: false
  name: PopBranchNode()
  nameWithType: EventRoute.PopBranchNode()
  fullName: System.Windows.EventRoute.PopBranchNode()
- uid: System.Windows.EventRoute.PushBranchNode(System.Object,System.Object)
  parent: System.Windows.EventRoute
  isExternal: false
  name: PushBranchNode(Object,Object)
  nameWithType: EventRoute.PushBranchNode(Object,Object)
  fullName: System.Windows.EventRoute.PushBranchNode(Object,Object)
- uid: System.Windows.EventRoute.#ctor*
  parent: System.Windows.EventRoute
  isExternal: false
  name: EventRoute
  nameWithType: EventRoute.EventRoute
- uid: System.Windows.EventRoute.Add*
  parent: System.Windows.EventRoute
  isExternal: false
  name: Add
  nameWithType: EventRoute.Add
- uid: System.Windows.EventRoute.PeekBranchNode*
  parent: System.Windows.EventRoute
  isExternal: false
  name: PeekBranchNode
  nameWithType: EventRoute.PeekBranchNode
- uid: System.Windows.EventRoute.PeekBranchSource*
  parent: System.Windows.EventRoute
  isExternal: false
  name: PeekBranchSource
  nameWithType: EventRoute.PeekBranchSource
- uid: System.Windows.EventRoute.PopBranchNode*
  parent: System.Windows.EventRoute
  isExternal: false
  name: PopBranchNode
  nameWithType: EventRoute.PopBranchNode
- uid: System.Windows.EventRoute.PushBranchNode*
  parent: System.Windows.EventRoute
  isExternal: false
  name: PushBranchNode
  nameWithType: EventRoute.PushBranchNode
