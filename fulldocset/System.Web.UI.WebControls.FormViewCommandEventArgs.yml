### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormViewCommandEventArgs
  id: FormViewCommandEventArgs
  children:
  - System.Web.UI.WebControls.FormViewCommandEventArgs.#ctor(System.Object,System.Web.UI.WebControls.CommandEventArgs)
  - System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource
  - System.Web.UI.WebControls.FormViewCommandEventArgs.Handled
  langs:
  - csharp
  name: FormViewCommandEventArgs
  nameWithType: FormViewCommandEventArgs
  fullName: System.Web.UI.WebControls.FormViewCommandEventArgs
  type: Class
  summary: "에 대 한 데이터를 제공는 <xref href=&quot;System.Web.UI.WebControls.FormView.ItemCommand&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Web.UI.WebControls.FormView.ItemCommand>이벤트는에 있는 단추는 <xref:System.Web.UI.WebControls.FormView>컨트롤을 클릭 합니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemCommand> 이 옵션을 사용 하면이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       내에서 단추는 <xref:System.Web.UI.WebControls.FormView>컨트롤 컨트롤의 기본 기능 중 일부를 호출할 수도 있습니다.</xref:System.Web.UI.WebControls.FormView> 이러한 작업 중 하나를 수행 하려면 설정는 `CommandName` 다음 표에 있는 값 중 하나에 있는 단추의 속성입니다.      | CommandName 값 | 설명 |   |-----------------------|-----------------|   |&quot; 취소 &quot;| 편집 또는 삽입 작업을 취소 하 고 보냅니다는 <xref:System.Web.UI.WebControls.FormView>컨트롤의 모드 및 지정 된을 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>속성.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.FormView.ModeChanged>발생 및 <xref:System.Web.UI.WebControls.FormView.ModeChanging>이벤트입니다. |   |&quot; 삭제 &quot;| 현재 레코드를 삭제 합니다.</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView.ModeChanged> <xref:System.Web.UI.WebControls.FormView.ItemDeleted>발생 및 <xref:System.Web.UI.WebControls.FormView.ItemDeleting>이벤트입니다. |   |&quot; 편집 &quot;| 배치는 <xref:System.Web.UI.WebControls.FormView>컨트롤을 편집 모드로.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemDeleting> </xref:System.Web.UI.WebControls.FormView.ItemDeleted> <xref:System.Web.UI.WebControls.FormView.ModeChanged>발생 및 <xref:System.Web.UI.WebControls.FormView.ModeChanging>이벤트입니다. |   |&quot; 삽입 &quot;| 데이터 소스에 현재 레코드를 삽입 합니다.</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView.ModeChanged> <xref:System.Web.UI.WebControls.FormView.ItemInserted>발생 및 <xref:System.Web.UI.WebControls.FormView.ItemInserting>이벤트입니다. |   |&quot; 새 &quot;| 배치는 <xref:System.Web.UI.WebControls.FormView>컨트롤을 삽입 모드로.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemInserting> </xref:System.Web.UI.WebControls.FormView.ItemInserted> <xref:System.Web.UI.WebControls.FormView.ModeChanged>발생 및 <xref:System.Web.UI.WebControls.FormView.ModeChanging>이벤트입니다. |   |&quot; 페이지 &quot;| 페이징 작업을 수행 합니다.</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView.ModeChanged> 설정의 `CommandArgument` 단추 &quot;First&quot;, &quot;마지막&quot;를, &quot;다음&quot;, &quot;이전&quot; 또는 페이징 작업의 형식을 지정 하는 페이지 번호를 수행 하려면의 속성입니다. <xref:System.Web.UI.WebControls.FormView.PageIndexChanged>발생 및 <xref:System.Web.UI.WebControls.FormView.PageIndexChanging>이벤트입니다. |   |&quot; 업데이트 &quot;| 데이터 소스에서 현재 레코드를 업데이트 합니다.</xref:System.Web.UI.WebControls.FormView.PageIndexChanging> </xref:System.Web.UI.WebControls.FormView.PageIndexChanged> <xref:System.Web.UI.WebControls.FormView.ItemUpdated>발생 및 <xref:System.Web.UI.WebControls.FormView.ItemUpdating>이벤트입니다. |       하지만 <xref:System.Web.UI.WebControls.FormView.ItemCommand>이벤트는 위의 표에 나열 된 단추를 클릭할 때 발생, 작업에 대 한 테이블에 나열 된 이벤트를 사용 하는 것이 좋습니다.</xref:System.Web.UI.WebControls.FormView.ItemCommand> </xref:System.Web.UI.WebControls.FormView.ItemUpdating> </xref:System.Web.UI.WebControls.FormView.ItemUpdated>       FormViewCommandEventArgs 개체 명령 이름과 클릭 된 단추의 명령 인수를 확인할 수 있는 이벤트 처리 메서드에 전달 됩니다. 명령 이름 및 명령 인수를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>및 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>속성을 각각.</xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> </xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> 사용 하 여 이벤트를 발생 하는 단추 컨트롤에 액세스할 수도 있습니다는 <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A>속성.</xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.       목록이 FormViewCommandEventArgs 클래스의 인스턴스에 대 한 초기 속성 값에 대 한 참조는 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs.%23ctor%2A>생성자.</xref:System.Web.UI.WebControls.FormViewCommandEventArgs.%23ctor%2A>"
  example:
  - "The following example demonstrates how to use the FormViewCommandEventArgs object passed to the event-handling method for the <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> event to determine which button within a <xref:System.Web.UI.WebControls.FormView> control was clicked by the user.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormViewItemCommandEventArgs#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_239_1.aspx)]\n [!code-vb[FormViewItemCommandEventArgs#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_239_1.aspx)]"
  syntax:
    content: 'public class FormViewCommandEventArgs : System.Web.UI.WebControls.CommandEventArgs'
  inheritance:
  - System.EventArgs
  - System.Web.UI.WebControls.CommandEventArgs
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.CommandEventArgs.CommandArgument
  - System.Web.UI.WebControls.CommandEventArgs.CommandName
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewCommandEventArgs.#ctor(System.Object,System.Web.UI.WebControls.CommandEventArgs)
  id: '#ctor(System.Object,System.Web.UI.WebControls.CommandEventArgs)'
  parent: System.Web.UI.WebControls.FormViewCommandEventArgs
  langs:
  - csharp
  name: FormViewCommandEventArgs(Object,CommandEventArgs)
  nameWithType: FormViewCommandEventArgs.FormViewCommandEventArgs(Object,CommandEventArgs)
  fullName: System.Web.UI.WebControls.FormViewCommandEventArgs.FormViewCommandEventArgs(Object,CommandEventArgs)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.FormViewCommandEventArgs&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Web.UI.WebControls.FormViewCommandEventArgs>클래스</xref:System.Web.UI.WebControls.FormViewCommandEventArgs> 의 새 인스턴스를 초기화 하려면이 생성자를 사용 합니다.       다음 표에서 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs>안내 하십시오.</xref:System.Web.UI.WebControls.FormViewCommandEventArgs> 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 초기 값 |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>| <xref:System.Web.UI.WebControls.CommandEventArgs>의 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>속성 값에 포함 된는 `originalArgs` 매개 변수입니다. |   | <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>| <xref:System.Web.UI.WebControls.CommandEventArgs>의 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>속성 값에 포함 된는 `originalArgs` 매개 변수입니다. |   | <xref:System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource%2A>| 에 포함 된 개체는 `commandSource` 매개 변수입니다. |      > [!NOTE] > 이벤트를 발생 시킬 때이 생성자는 주로 컨트롤 개발자가 사용 됩니다.</xref:System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource%2A>  </xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A></xref:System.Web.UI.WebControls.CommandEventArgs> </xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>  </xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A></xref:System.Web.UI.WebControls.CommandEventArgs> </xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>"
  syntax:
    content: public FormViewCommandEventArgs (object commandSource, System.Web.UI.WebControls.CommandEventArgs originalArgs);
    parameters:
    - id: commandSource
      type: System.Object
      description: "소스 명령입니다."
    - id: originalArgs
      type: System.Web.UI.WebControls.CommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.CommandEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.FormViewCommandEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource
  id: CommandSource
  parent: System.Web.UI.WebControls.FormViewCommandEventArgs
  langs:
  - csharp
  name: CommandSource
  nameWithType: FormViewCommandEventArgs.CommandSource
  fullName: System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이벤트를 발생 시킨 컨트롤을 가져옵니다."
  remarks: "CommandSource 속성을 사용 하 여 이벤트를 발생 하는 컨트롤의 속성에 액세스할 수 있습니다. 경우에 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs>개체를 컨트롤은 사용자가 클릭 된 단추의.</xref:System.Web.UI.WebControls.FormViewCommandEventArgs>"
  example:
  - "The following example demonstrates how to use the CommandSource property to access the properties of the button control that raised the <xref:System.Web.UI.WebControls.FormView.ItemCommand> event.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormViewItemCommandEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_419_1.aspx)]\n [!code-vb[FormViewItemCommandEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_419_1.aspx)]"
  syntax:
    content: public object CommandSource { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>이벤트를 발생 시킨 컨트롤을 나타내는.</xref:System.Object>"
  overload: System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewCommandEventArgs.Handled
  id: Handled
  parent: System.Web.UI.WebControls.FormViewCommandEventArgs
  langs:
  - csharp
  name: Handled
  nameWithType: FormViewCommandEventArgs.Handled
  fullName: System.Web.UI.WebControls.FormViewCommandEventArgs.Handled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤 이벤트를 처리 했는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "이 속성을 설정 `true` 되도록 지정 하려면 이벤트 처리기에는 <xref:System.Web.UI.WebControls.FormView>제어 되므로 사용자 코드에서 처리 하는 이벤트를 처리 하지 않도록 합니다.</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: public bool Handled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>데이터 바인딩 이벤트 코드 건너뛰었거나; 완료 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.FormViewCommandEventArgs.Handled*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.CommandEventArgs
  isExternal: false
  name: System.Web.UI.WebControls.CommandEventArgs
- uid: System.Web.UI.WebControls.FormViewCommandEventArgs.#ctor(System.Object,System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.FormViewCommandEventArgs
  isExternal: false
  name: FormViewCommandEventArgs(Object,CommandEventArgs)
  nameWithType: FormViewCommandEventArgs.FormViewCommandEventArgs(Object,CommandEventArgs)
  fullName: System.Web.UI.WebControls.FormViewCommandEventArgs.FormViewCommandEventArgs(Object,CommandEventArgs)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource
  parent: System.Web.UI.WebControls.FormViewCommandEventArgs
  isExternal: false
  name: CommandSource
  nameWithType: FormViewCommandEventArgs.CommandSource
  fullName: System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource
- uid: System.Web.UI.WebControls.FormViewCommandEventArgs.Handled
  parent: System.Web.UI.WebControls.FormViewCommandEventArgs
  isExternal: false
  name: Handled
  nameWithType: FormViewCommandEventArgs.Handled
  fullName: System.Web.UI.WebControls.FormViewCommandEventArgs.Handled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.FormViewCommandEventArgs.#ctor*
  parent: System.Web.UI.WebControls.FormViewCommandEventArgs
  isExternal: false
  name: FormViewCommandEventArgs
  nameWithType: FormViewCommandEventArgs.FormViewCommandEventArgs
- uid: System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource*
  parent: System.Web.UI.WebControls.FormViewCommandEventArgs
  isExternal: false
  name: CommandSource
  nameWithType: FormViewCommandEventArgs.CommandSource
- uid: System.Web.UI.WebControls.FormViewCommandEventArgs.Handled*
  parent: System.Web.UI.WebControls.FormViewCommandEventArgs
  isExternal: false
  name: Handled
  nameWithType: FormViewCommandEventArgs.Handled
