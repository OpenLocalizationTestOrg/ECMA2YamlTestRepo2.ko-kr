### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.SerializationBinder
  id: SerializationBinder
  children:
  - System.Runtime.Serialization.SerializationBinder.#ctor
  - System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)
  - System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)
  langs:
  - csharp
  name: SerializationBinder
  nameWithType: SerializationBinder
  fullName: System.Runtime.Serialization.SerializationBinder
  type: Class
  summary: "클래스 로딩을 제어 하 고 클래스를 로드할 수 있습니다."
  remarks: "Serialization 도중에, 포맷터는 올바른 형식 및 버전의 개체의 인스턴스를 만드는 데 필요한 정보를 전송 합니다. 이 정보에는 일반적으로 전체 형식 이름 및 개체의 어셈블리 이름을 포함 됩니다. 이름, 버전 및 강력한 이름 어셈블리 이름이 포함 됩니다 (참조 [강력한 이름의 어셈블리](~/add/includes/ajax-current-ext-md.md)) 어셈블리의 해시입니다. 기본적으로 deserialization이이 정보를 사용 하 여 (보안 정책에 의해 제한 되는 어셈블리 로딩의 예외)와 동일한 개체의 인스턴스를 만듭니다. 일부 사용자가 제어 해야 할 클래스를 로드 하거나 클래스가 서로 다른 버전의 클래스가 어셈블리 간에 이동 하기 때문에 필요한 서버와 클라이언트에 있습니다.       SerializationBinder 보안을 위해 사용할 수도 있습니다. 신뢰할 수 없는 소스에서 데이터를 deserialize 하려고 시도할 때에 몇 가지 보안 위험 요소 수 있습니다. 바인더는 형식을 응용 프로그램 도메인에서 로드 되 고 검사할 기회를 제공 합니다. 거부 된 형식의 목록 또는 허용된 유형 목록 유지 관리 하 고 있는 형식을 로드 하는 제한 하거나 다음 수 되며 인스턴스화됩니다. 또한 유념 하는 것의 어떤 정보가 통신 중에 입력 되 고, (사용 하 여 전송 또는 메시지 보안)를 보호 하려는 경우 통신 중에 형식 이름 또는 기타 데이터를 보낼 때.      > [!WARNING] > SerializationBinder는 완전히 확실히 어떤 정보를 serialize 하는 경우에 사용 합니다. 악의적인 형식이 예기치 않은 동작이 발생할 수 있습니다.       이 클래스는 추상 기본 클래스입니다. 이 클래스를 확장 하는 모든 바인더입니다."
  example:
  - >-
    [!code-vb[SerializationBinder Example#1](~/add/codesnippet/visualbasic/t-system.runtime.seriali_11_1.vb)]
     [!code-cpp[SerializationBinder Example#1](~/add/codesnippet/cpp/t-system.runtime.seriali_11_1.cpp)]
     [!code-cs[SerializationBinder Example#1](~/add/codesnippet/csharp/t-system.runtime.seriali_11_1.cs)]
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class SerializationBinder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationBinder.#ctor
  id: '#ctor'
  parent: System.Runtime.Serialization.SerializationBinder
  langs:
  - csharp
  name: SerializationBinder()
  nameWithType: SerializationBinder.SerializationBinder()
  fullName: System.Runtime.Serialization.SerializationBinder.SerializationBinder()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Runtime.Serialization.SerializationBinder&quot;> </xref> 클래스입니다."
  syntax:
    content: protected SerializationBinder ();
    parameters: []
  overload: System.Runtime.Serialization.SerializationBinder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)
  id: BindToName(System.Type,System.String@,System.String@)
  parent: System.Runtime.Serialization.SerializationBinder
  langs:
  - csharp
  name: BindToName(Type,String,String)
  nameWithType: SerializationBinder.BindToName(Type,String,String)
  fullName: System.Runtime.Serialization.SerializationBinder.BindToName(Type,String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "파생된 클래스에서 재정의 되 면 형식으로 직렬화 된 개체의 바인딩을 제어 합니다."
  syntax:
    content: public virtual void BindToName (Type serializedType, out string assemblyName, out string typeName);
    parameters:
    - id: serializedType
      type: System.Type
      description: "개체의 형식 포맷터의 새 인스턴스를 만듭니다."
    - id: assemblyName
      type: System.String
      description: "지정 된 <xref:System.Reflection.Assembly>직렬화 된 개체의 이름입니다.</xref:System.Reflection.Assembly>"
    - id: typeName
      type: System.String
      description: "지정 된 <xref:System.Type>직렬화 된 개체의 이름입니다.</xref:System.Type>"
  overload: System.Runtime.Serialization.SerializationBinder.BindToName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)
  id: BindToType(System.String,System.String)
  parent: System.Runtime.Serialization.SerializationBinder
  langs:
  - csharp
  name: BindToType(String,String)
  nameWithType: SerializationBinder.BindToType(String,String)
  fullName: System.Runtime.Serialization.SerializationBinder.BindToType(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "파생된 클래스에서 재정의 되 면 형식으로 직렬화 된 개체의 바인딩을 제어 합니다."
  remarks: ''
  example:
  - SerializationBinder Example#1
  syntax:
    content: public abstract Type BindToType (string assemblyName, string typeName);
    parameters:
    - id: assemblyName
      type: System.String
      description: "지정 된 <xref:System.Reflection.Assembly>직렬화 된 개체의 이름입니다.</xref:System.Reflection.Assembly>"
    - id: typeName
      type: System.String
      description: "지정 된 <xref:System.Type>직렬화 된 개체의 이름입니다.</xref:System.Type>"
    return:
      type: System.Type
      description: "개체의 형식 포맷터의 새 인스턴스를 만듭니다."
  overload: System.Runtime.Serialization.SerializationBinder.BindToType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Serialization.SerializationBinder.#ctor
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: SerializationBinder()
  nameWithType: SerializationBinder.SerializationBinder()
  fullName: System.Runtime.Serialization.SerializationBinder.SerializationBinder()
- uid: System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: BindToName(Type,String,String)
  nameWithType: SerializationBinder.BindToName(Type,String,String)
  fullName: System.Runtime.Serialization.SerializationBinder.BindToName(Type,String,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: BindToType(String,String)
  nameWithType: SerializationBinder.BindToType(String,String)
  fullName: System.Runtime.Serialization.SerializationBinder.BindToType(String,String)
- uid: System.Runtime.Serialization.SerializationBinder.#ctor*
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: SerializationBinder
  nameWithType: SerializationBinder.SerializationBinder
- uid: System.Runtime.Serialization.SerializationBinder.BindToName*
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: BindToName
  nameWithType: SerializationBinder.BindToName
- uid: System.Runtime.Serialization.SerializationBinder.BindToType*
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: BindToType
  nameWithType: SerializationBinder.BindToType
