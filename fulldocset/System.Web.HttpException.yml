### YamlMime:ManagedReference
items:
- uid: System.Web.HttpException
  id: HttpException
  children:
  - System.Web.HttpException.#ctor
  - System.Web.HttpException.#ctor(System.String)
  - System.Web.HttpException.#ctor(System.Int32,System.String)
  - System.Web.HttpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.HttpException.#ctor(System.String,System.Exception)
  - System.Web.HttpException.#ctor(System.String,System.Int32)
  - System.Web.HttpException.#ctor(System.Int32,System.String,System.Exception)
  - System.Web.HttpException.#ctor(System.Int32,System.String,System.Int32)
  - System.Web.HttpException.CreateFromLastError(System.String)
  - System.Web.HttpException.GetHtmlErrorMessage
  - System.Web.HttpException.GetHttpCode
  - System.Web.HttpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.HttpException.WebEventCode
  langs:
  - csharp
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
  type: Class
  summary: "HTTP 요청을 처리 하는 동안 발생 한 예외를 설명 합니다."
  remarks: "HttpException 클래스가 ASP.NET에서 예외 정보를 생성할 수 있도록 하는 HTTP 관련 예외 클래스가입니다. throw 한 예외를 처리 하는 방법에 대 한 자세한 내용은 참조 [예외](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to use the HttpException class to raise customized exceptions. The `Button_Click` method determines which button was clicked, and then calls either the `CheckNumber` or `CheckBoolean` method. If the user-entered value in the text box does not correspond to the expected type, an HttpException exception is created and thrown with a customized message based on the error type.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[HttpException#1](~/add/codesnippet/visualbasic/t-system.web.httpexception_1.aspx)]\n [!code-cs[HttpException#1](~/add/codesnippet/csharp/t-system.web.httpexception_1.aspx)]"
  syntax:
    content: 'public class HttpException : System.Runtime.InteropServices.ExternalException'
  inheritance:
  - System.Exception
  - System.SystemException
  - System.Runtime.InteropServices.ExternalException
  implements: []
  inheritedMembers:
  - System.Runtime.InteropServices.ExternalException.ErrorCode
  - System.Runtime.InteropServices.ExternalException.ToString
  platform:
  - net462
- uid: System.Web.HttpException.#ctor
  id: '#ctor'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException()
  nameWithType: HttpException.HttpException()
  fullName: System.Web.HttpException.HttpException()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.HttpException&quot;> </xref> 클래스 및 빈 만듭니다 <xref href=&quot;System.Web.HttpException&quot;> </xref> 개체입니다."
  remarks: "예외를 처리할 때는 일련의 내부 예외에 대 한 응답에서 throw 되는 외부 예외와 관련 된 예외를 캡처하려면 유용할 수 있습니다.       외부 예외를 발생 시킨 내부 예외에 대 한 참조는에서 사용할 수는 <xref:System.Exception.InnerException%2A>외부 예외의 속성입니다.</xref:System.Exception.InnerException%2A> 이 메커니즘 보다 의미 있는 외부 예외를 만들 수 있도록 하는 동안 원래 예외를 포함 하는 이전 예외에 의해 수행 되는 오류 정보를 유지 합니다. 자세한 내용은 <xref:System.Exception.InnerException%2A>.</xref:System.Exception.InnerException%2A> 을 참조 하십시오."
  example:
  - "The following code example demonstrates the HttpException constructor of the <xref:System.Web.HttpException> class. The `CheckNumber` method accepts a user-entered value through a text box and checks whether it is an integer. If the value is not an integer, an exception is thrown, and then a new <xref:System.Web.HttpException> object is created and thrown. That exception is caught in the `Button_Click` event handler and the error message is displayed on the browser.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[HttpException_Constructor1#1](~/add/codesnippet/csharp/m-system.web.httpexcepti_2_1.aspx)]\n [!code-vb[HttpException_Constructor1#1](~/add/codesnippet/visualbasic/m-system.web.httpexcepti_2_1.aspx)]"
  syntax:
    content: public HttpException ();
    parameters: []
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(String)
  nameWithType: HttpException.HttpException(String)
  fullName: System.Web.HttpException.HttpException(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.HttpException&quot;> </xref> 클래스 제공 된 오류 메시지를 사용 합니다."
  remarks: ''
  example:
  - "The following code example demonstrates the HttpException constructor of the <xref:System.Web.HttpException> class. An <xref:System.Web.HttpException> is thrown if a user-entered value is 0.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic HttpException.HttpException1 Example#1](~/add/codesnippet/csharp/m-system.web.httpexcepti_0_1.cs)]\n [!code-vb[Classic HttpException.HttpException1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpexcepti_0_1.vb)]"
  syntax:
    content: public HttpException (string message);
    parameters:
    - id: message
      type: System.String
      description: "예외가 throw 되 면 클라이언트에 표시 되는 오류 메시지입니다."
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.#ctor(System.Int32,System.String)
  id: '#ctor(System.Int32,System.String)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(Int32,String)
  nameWithType: HttpException.HttpException(Int32,String)
  fullName: System.Web.HttpException.HttpException(Int32,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.HttpException&quot;> </xref> 클래스는 HTTP 응답 상태 코드 및 오류 메시지를 사용 합니다."
  syntax:
    content: public HttpException (int httpCode, string message);
    parameters:
    - id: httpCode
      type: System.Int32
      description: "이 오류에 해당 하는 클라이언트에 보낼 HTTP 응답 상태 코드입니다."
    - id: message
      type: System.String
      description: "예외가 throw 되 면 클라이언트에 표시 되는 오류 메시지입니다."
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(SerializationInfo,StreamingContext)
  nameWithType: HttpException.HttpException(SerializationInfo,StreamingContext)
  fullName: System.Web.HttpException.HttpException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.HttpException&quot;> </xref> serialize 된 데이터 클래스입니다."
  remarks: "HttpException 생성자 역직렬화 스트림을 통해 전송 되는 예외 개체를 다시 구성 하는 동안 호출 됩니다. 자세한 내용은 참조 [XML 및 SOAP Serialization](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: protected HttpException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> throw 되는 예외에 대 한 직렬화 된 개체 데이터를 보유 하 합니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>소스 또는 대상에 대 한 컨텍스트 정보를 보유 하는.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(String,Exception)
  nameWithType: HttpException.HttpException(String,Exception)
  fullName: System.Web.HttpException.HttpException(String,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.HttpException&quot;> </xref> 오류 메시지를 사용 하 여 클래스 및 <xref:System.Exception.InnerException*>속성.</xref:System.Exception.InnerException*>"
  remarks: "예외를 처리할 때는 일련의 내부 예외에 대 한 응답에서 throw 되는 외부 예외와 관련 된 예외를 캡처하려면 유용할 수 있습니다.       외부 예외를 발생 시킨 내부 예외에 대 한 참조는에서 사용할 수는 <xref:System.Exception.InnerException%2A>외부 예외의 속성입니다.</xref:System.Exception.InnerException%2A> 이 메커니즘 보다 의미 있는 외부 예외를 만들 수 있도록 하는 동안 원래 예외를 포함 하는 이전 예외에 의해 수행 되는 오류 정보를 유지 합니다. 자세한 내용은 <xref:System.Exception.InnerException%2A>.</xref:System.Exception.InnerException%2A> 을 참조 하십시오."
  example:
  - "The following code example demonstrates the HttpException constructor of the <xref:System.Web.HttpException> class. The `CheckNumber` method accepts a user-entered value through a text box and checks whether it is an integer. If the value is not an integer, an exception is thrown, and then in the catch block, a new <xref:System.Web.HttpException> object is created and thrown. That exception is caught in the `Button_Click` event handler and the error message is displayed on the browser.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[HttpException_Constructor2#1](~/add/codesnippet/visualbasic/m-system.web.httpexcepti_1_1.aspx)]\n [!code-cs[HttpException_Constructor2#1](~/add/codesnippet/csharp/m-system.web.httpexcepti_1_1.aspx)]"
  syntax:
    content: public HttpException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "예외가 throw 되 면 클라이언트에 표시 되는 오류 메시지입니다."
    - id: innerException
      type: System.Exception
      description: "<xref:System.Exception.InnerException*>, 현재 예외를 발생 시킨 경우.</xref:System.Exception.InnerException*>"
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(String,Int32)
  nameWithType: HttpException.HttpException(String,Int32)
  fullName: System.Web.HttpException.HttpException(String,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.HttpException&quot;> </xref> 클래스 오류 메시지 및 예외 코드를 사용 합니다."
  remarks: ''
  example:
  - "The following code example demonstrates the HttpException constructor of the <xref:System.Web.HttpException> class. An <xref:System.Web.HttpException> exception is thrown if a user-entered value is 0.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic HttpException.HttpException2 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpexcepti_4_1.vb)]\n [!code-cs[Classic HttpException.HttpException2 Example#1](~/add/codesnippet/csharp/m-system.web.httpexcepti_4_1.cs)]"
  syntax:
    content: public HttpException (string message, int hr);
    parameters:
    - id: message
      type: System.String
      description: "예외가 throw 되 면 클라이언트에 표시 되는 오류 메시지입니다."
    - id: hr
      type: System.Int32
      description: "이 오류를 정의 하는 예외 코드입니다."
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.#ctor(System.Int32,System.String,System.Exception)
  id: '#ctor(System.Int32,System.String,System.Exception)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(Int32,String,Exception)
  nameWithType: HttpException.HttpException(Int32,String,Exception)
  fullName: System.Web.HttpException.HttpException(Int32,String,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.HttpException&quot;> </xref> HTTP 응답 상태 코드, 오류 메시지를 사용 하 여 클래스 및 <xref:System.Exception.InnerException*>속성.</xref:System.Exception.InnerException*>"
  remarks: "예외를 처리할 때는 일련의 내부 예외에 대 한 응답에서 throw 되는 외부 예외와 관련 된 예외를 캡처하려면 유용할 수 있습니다.       외부 예외를 발생 시킨 내부 예외에 대 한 참조는에서 사용할 수는 <xref:System.Exception.InnerException%2A>외부 예외의 속성입니다.</xref:System.Exception.InnerException%2A> 이 메커니즘 보다 의미 있는 외부 예외를 만들 수 있도록 하는 동안 원래 예외를 포함 하는 이전 예외에 의해 수행 되는 오류 정보를 유지 합니다. 자세한 내용은 <xref:System.Exception.InnerException%2A>.</xref:System.Exception.InnerException%2A> 을 참조 하십시오."
  example:
  - "The following code example demonstrates the HttpException constructor of the <xref:System.Web.HttpException> class. The `CheckNumber` method accepts a user-entered value and checks whether it is an integer. If the value is not an integer, an exception is thrown, and then a new <xref:System.Web.HttpException> object containing the HTTP response status code, the exception's message, and any inner exception is created. That exception is caught in the `Button_Click` event handler and the error message, error code, and inner exception are displayed.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[HttpException_Constructor3#1](~/add/codesnippet/csharp/6bc30991-e249-4e7f-addb-_1.aspx)]\n [!code-vb[HttpException_Constructor3#1](~/add/codesnippet/visualbasic/6bc30991-e249-4e7f-addb-_1.aspx)]"
  syntax:
    content: public HttpException (int httpCode, string message, Exception innerException);
    parameters:
    - id: httpCode
      type: System.Int32
      description: "클라이언트에 표시 되는 HTTP 응답 상태 코드입니다."
    - id: message
      type: System.String
      description: "예외가 throw 되 면 클라이언트에 표시 되는 오류 메시지입니다."
    - id: innerException
      type: System.Exception
      description: "<xref:System.Exception.InnerException*>, 현재 예외를 발생 시킨 경우.</xref:System.Exception.InnerException*>"
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.#ctor(System.Int32,System.String,System.Int32)
  id: '#ctor(System.Int32,System.String,System.Int32)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(Int32,String,Int32)
  nameWithType: HttpException.HttpException(Int32,String,Int32)
  fullName: System.Web.HttpException.HttpException(Int32,String,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.HttpException&quot;> </xref> 클래스는 HTTP 응답 상태 코드, 오류 메시지 및 예외 코드를 사용 합니다."
  remarks: ''
  example:
  - "The following code example demonstrates the HttpException constructor of the <xref:System.Web.HttpException> class. The user name and e-mail information are entered by the user in the provided text boxes. If any of the text boxes are left blank, an <xref:System.Web.HttpException> object is created and thrown. The error code of the <xref:System.Web.HttpException> is obtained by the <xref:System.Web.HttpException.GetHttpCode%2A> method and displayed on the Web page.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[HttpException_Constructor#1](~/add/codesnippet/csharp/m-system.web.httpexcepti_3_1.aspx)]\n [!code-vb[HttpException_Constructor#1](~/add/codesnippet/visualbasic/m-system.web.httpexcepti_3_1.aspx)]"
  syntax:
    content: public HttpException (int httpCode, string message, int hr);
    parameters:
    - id: httpCode
      type: System.Int32
      description: "클라이언트에 표시 되는 HTTP 응답 상태 코드입니다."
    - id: message
      type: System.String
      description: "예외가 throw 되 면 클라이언트에 표시 되는 오류 메시지입니다."
    - id: hr
      type: System.Int32
      description: "이 오류를 정의 하는 예외 코드입니다."
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.CreateFromLastError(System.String)
  id: CreateFromLastError(System.String)
  parent: System.Web.HttpException
  langs:
  - csharp
  name: CreateFromLastError(String)
  nameWithType: HttpException.CreateFromLastError(String)
  fullName: System.Web.HttpException.CreateFromLastError(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "새 <xref href=&quot;System.Web.HttpException&quot;> </xref> 예외 Win32 API에서 반환 되는 오류 코드에 따라 <xref uid=&quot;langword_csharp_GetLastError()&quot; name=&quot;GetLastError()&quot; href=&quot;&quot;> </xref> 메서드."
  syntax:
    content: public static System.Web.HttpException CreateFromLastError (string message);
    parameters:
    - id: message
      type: System.String
      description: "예외가 throw 되 면 클라이언트에 표시 되는 오류 메시지입니다."
    return:
      type: System.Web.HttpException
      description: "<xref href=&quot;System.Web.HttpException&quot;> </xref> Win32 API에 대 한 호출에서 반환 되는 오류 코드에 따라 <xref uid=&quot;langword_csharp_GetLastError()&quot; name=&quot;GetLastError()&quot; href=&quot;&quot;> </xref> 메서드."
  overload: System.Web.HttpException.CreateFromLastError*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.GetHtmlErrorMessage
  id: GetHtmlErrorMessage
  parent: System.Web.HttpException
  langs:
  - csharp
  name: GetHtmlErrorMessage()
  nameWithType: HttpException.GetHtmlErrorMessage()
  fullName: System.Web.HttpException.GetHtmlErrorMessage()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "클라이언트에 반환할 HTML 오류 메시지를 가져옵니다."
  syntax:
    content: public string GetHtmlErrorMessage ();
    parameters: []
    return:
      type: System.String
      description: "HTML 오류 메시지입니다."
  overload: System.Web.HttpException.GetHtmlErrorMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.GetHttpCode
  id: GetHttpCode
  parent: System.Web.HttpException
  langs:
  - csharp
  name: GetHttpCode()
  nameWithType: HttpException.GetHttpCode()
  fullName: System.Web.HttpException.GetHttpCode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "클라이언트에 반환할 HTTP 응답 상태 코드를 가져옵니다."
  remarks: "0이 아닌 HTTP 코드 인 경우 반환 됩니다. 그렇지 않은 경우는 <xref:System.Exception.InnerException%2A>코드가 반환 됩니다.</xref:System.Exception.InnerException%2A> 모두는 <xref:System.Exception.InnerException%2A>코드나 0이 아닌 HTTP 코드를 사용할 수 있는 500 HTTP 응답 상태 코드가 반환 됩니다.</xref:System.Exception.InnerException%2A> HTTP 응답 상태 코드에 대 한 자세한 내용은 참조는 Hypertext Transfer Protocol-전 세계에서 HTTP/1.1 상태 코드 정의 [Wide Web Consortium (W3C) 웹 사이트](http://go.microsoft.com/fwlink/?linkid=37125)합니다."
  syntax:
    content: public int GetHttpCode ();
    parameters: []
    return:
      type: System.Int32
      description: "예외를 나타내는 0이 아닌 HTTP 코드 또는 <xref:System.Exception.InnerException*>코드; 그렇지 않으면 HTTP 응답 상태 코드 500.</xref:System.Exception.InnerException*>"
  overload: System.Web.HttpException.GetHttpCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.HttpException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: HttpException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.HttpException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "예외에 대 한 정보를 가져오고에 추가 된 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 개체입니다."
  remarks: "에 대 한 예외에 대 한 정보를 추가 하는 경우 GetObjectData 메서드는 <xref:System.Runtime.Serialization.SerializationInfo>개체 serialization에 대 한 대상입니다.</xref:System.Runtime.Serialization.SerializationInfo> deserialization을 수행 하는 동안 예외가 재구성 됩니다는 <xref:System.Runtime.Serialization.SerializationInfo>스트림을 통해 전송 되는.</xref:System.Runtime.Serialization.SerializationInfo>"
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> throw 되는 예외에 대 한 직렬화 된 개체 데이터를 보유 하 합니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>소스 또는 대상에 대 한 컨텍스트 정보를 보유 하는.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Web.HttpException.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.WebEventCode
  id: WebEventCode
  parent: System.Web.HttpException
  langs:
  - csharp
  name: WebEventCode
  nameWithType: HttpException.WebEventCode
  fullName: System.Web.HttpException.WebEventCode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "HTTP 예외와 연결 된 이벤트 코드를 가져옵니다."
  syntax:
    content: public int WebEventCode { get; }
    return:
      type: System.Int32
      description: "웹 이벤트 코드를 나타내는 정수입니다."
  overload: System.Web.HttpException.WebEventCode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices.ExternalException
  isExternal: false
  name: System.Runtime.InteropServices.ExternalException
- uid: System.Web.HttpException.#ctor
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException()
  nameWithType: HttpException.HttpException()
  fullName: System.Web.HttpException.HttpException()
- uid: System.Web.HttpException.#ctor(System.String)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(String)
  nameWithType: HttpException.HttpException(String)
  fullName: System.Web.HttpException.HttpException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpException.#ctor(System.Int32,System.String)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(Int32,String)
  nameWithType: HttpException.HttpException(Int32,String)
  fullName: System.Web.HttpException.HttpException(Int32,String)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.HttpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(SerializationInfo,StreamingContext)
  nameWithType: HttpException.HttpException(SerializationInfo,StreamingContext)
  fullName: System.Web.HttpException.HttpException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Web.HttpException.#ctor(System.String,System.Exception)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(String,Exception)
  nameWithType: HttpException.HttpException(String,Exception)
  fullName: System.Web.HttpException.HttpException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.HttpException.#ctor(System.String,System.Int32)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(String,Int32)
  nameWithType: HttpException.HttpException(String,Int32)
  fullName: System.Web.HttpException.HttpException(String,Int32)
- uid: System.Web.HttpException.#ctor(System.Int32,System.String,System.Exception)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(Int32,String,Exception)
  nameWithType: HttpException.HttpException(Int32,String,Exception)
  fullName: System.Web.HttpException.HttpException(Int32,String,Exception)
- uid: System.Web.HttpException.#ctor(System.Int32,System.String,System.Int32)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(Int32,String,Int32)
  nameWithType: HttpException.HttpException(Int32,String,Int32)
  fullName: System.Web.HttpException.HttpException(Int32,String,Int32)
- uid: System.Web.HttpException.CreateFromLastError(System.String)
  parent: System.Web.HttpException
  isExternal: false
  name: CreateFromLastError(String)
  nameWithType: HttpException.CreateFromLastError(String)
  fullName: System.Web.HttpException.CreateFromLastError(String)
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.HttpException.GetHtmlErrorMessage
  parent: System.Web.HttpException
  isExternal: false
  name: GetHtmlErrorMessage()
  nameWithType: HttpException.GetHtmlErrorMessage()
  fullName: System.Web.HttpException.GetHtmlErrorMessage()
- uid: System.Web.HttpException.GetHttpCode
  parent: System.Web.HttpException
  isExternal: false
  name: GetHttpCode()
  nameWithType: HttpException.GetHttpCode()
  fullName: System.Web.HttpException.GetHttpCode()
- uid: System.Web.HttpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.HttpException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: HttpException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.HttpException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Web.HttpException.WebEventCode
  parent: System.Web.HttpException
  isExternal: false
  name: WebEventCode
  nameWithType: HttpException.WebEventCode
  fullName: System.Web.HttpException.WebEventCode
- uid: System.Web.HttpException.#ctor*
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException
  nameWithType: HttpException.HttpException
- uid: System.Web.HttpException.CreateFromLastError*
  parent: System.Web.HttpException
  isExternal: false
  name: CreateFromLastError
  nameWithType: HttpException.CreateFromLastError
- uid: System.Web.HttpException.GetHtmlErrorMessage*
  parent: System.Web.HttpException
  isExternal: false
  name: GetHtmlErrorMessage
  nameWithType: HttpException.GetHtmlErrorMessage
- uid: System.Web.HttpException.GetHttpCode*
  parent: System.Web.HttpException
  isExternal: false
  name: GetHttpCode
  nameWithType: HttpException.GetHttpCode
- uid: System.Web.HttpException.GetObjectData*
  parent: System.Web.HttpException
  isExternal: false
  name: GetObjectData
  nameWithType: HttpException.GetObjectData
- uid: System.Web.HttpException.WebEventCode*
  parent: System.Web.HttpException
  isExternal: false
  name: WebEventCode
  nameWithType: HttpException.WebEventCode
