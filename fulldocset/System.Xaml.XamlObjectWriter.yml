### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlObjectWriter
  id: XamlObjectWriter
  children:
  - System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)
  - System.Xaml.XamlObjectWriter.Clear
  - System.Xaml.XamlObjectWriter.Dispose(System.Boolean)
  - System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)
  - System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)
  - System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)
  - System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)
  - System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)
  - System.Xaml.XamlObjectWriter.Result
  - System.Xaml.XamlObjectWriter.RootNameScope
  - System.Xaml.XamlObjectWriter.SchemaContext
  - System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)
  - System.Xaml.XamlObjectWriter.ShouldProvideLineInfo
  - System.Xaml.XamlObjectWriter.WriteEndMember
  - System.Xaml.XamlObjectWriter.WriteEndObject
  - System.Xaml.XamlObjectWriter.WriteGetObject
  - System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)
  - System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)
  - System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)
  - System.Xaml.XamlObjectWriter.WriteValue(System.Object)
  langs:
  - csharp
  name: XamlObjectWriter
  nameWithType: XamlObjectWriter
  fullName: System.Xaml.XamlObjectWriter
  type: Class
  summary: "소스 XAML 노드 스트림에서 개체 그래프를 만듭니다."
  remarks: "`Write` XamlObjectWriter의 메서드는 XamlObjectWriter 사용 하는 패턴을 구현는 <xref:System.Xaml.XamlWriter>정의 되는 <xref:System.Xaml.XamlWriter.WriteNode%2A>메서드.</xref:System.Xaml.XamlWriter.WriteNode%2A> </xref:System.Xaml.XamlWriter> <xref:System.Xaml.XamlWriter.WriteNode%2A>전환 하는 논리는 `Write` 메서드를 따라 어떤 노드 형식이 판독기의 현재 위치에 있습니다.</xref:System.Xaml.XamlWriter.WriteNode%2A>      ## 범위는 XamlObjectWriter 개념이 범위가 지정 됩니다. 즉,는 XamlObjectWriter 개념적 출력 개체 그래프에 대 한 참조 지점 유지 관리합니다. 특정 범위에 대 한 특정 작업 올 바르 거 나 유효 하지 수도 아니요 작업 결과 생성 합니다. 예를 들어, 호출 하는 경우 <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>기본 구현 인스턴스로 존재 하므로 이미 있는 개체에 초기화에 대 한 지시문 쓰려고 예외를 throw 합니다.</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>       사용자 지정 XamlObjectWriter에서 범위를 추적 하기 위한 가능한 기술에는 스택 또는 프레임 클래스를 사용 하 여 노드 작업을 맞추는 것입니다. 스택 또는 프레임의 추적할 수 푸시 및 팝을 시작 하거나 XamlObjectWriter는 개체 그래프를 작성 하는 동안 종료 하는 개체 모델의 각 수준에 대 한 합니다.      ## 콜백을를 지원 중급 및 고급 XamlObjectWriter 시나리오, 개체 그래프를 작성 하는 메커니즘 제공 콜백은 XamlObjectWriter 커밋 또는 특정 작업을 커밋에 때 발생 하는 진입점 합니다. 일부 콜백을 설정에서 사용 되 고 개체 유형 또는 쓰여지는; 멤버에 한정 되지 않는 그러나 콜백 정보 컨텍스트에서 사용할 수 종종 되었거나 되는 콜백을 통해 전송 된 데이터를 이벤트. 다음은 관련 콜백이 목록이:-선언 된 콜백 <xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A>범위가에 새 개체를 이동할 때 호출 되는 <xref:System.ComponentModel.ISupportInitialize.BeginInit%2A>생성된 된 각 개체에 대 한 개체 수명의 단계.</xref:System.ComponentModel.ISupportInitialize.BeginInit%2A> </xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A>      선언 된-콜백 <xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A>범위가에 새 개체를 이동할 때 호출 되는 <xref:System.ComponentModel.ISupportInitialize.EndInit%2A>생성된 된 각 개체에 대 한 개체 수명의 단계.</xref:System.ComponentModel.ISupportInitialize.EndInit%2A> </xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A>      -콜백을 선언 된 <xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A>범위 개체에 시작 하 고 발생 될 때 호출 되는 경우 첫 번째 <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>해당 개체 범위를 호출 했지만 아직 커밋되지 않은.</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> </xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A>      -콜백을 선언 된 <xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A>범위 개체에 시작 하 고 수행 될 때 호출 되는 경우는 <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>해당 개체 범위를 호출 했지만 아직 커밋되지 않은.</xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> </xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A>      선언 된-콜백 <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A>호출할 때 <xref:System.Xaml.XamlObjectWriter.OnSetValue%2A>호출 됩니다.</xref:System.Xaml.XamlObjectWriter.OnSetValue%2A> </xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A>      ## 제한 사항에 형식 변환을 지원 사전 키는 XamlObjectWriter의 기본 구현을 작성 한 <xref:System.Collections.Generic.Dictionary%602>사전 전에 내용이 개체 그래프에 추가 됩니다.</xref:System.Collections.Generic.Dictionary%602> 이러한 방식으로 제네릭 사전 개체에 의해 런타임 시 입력 될 수 및 관련 제네릭 맞는지 `Add` 및 인덱서 동작 합니다. 그러나 기본 XamlObjectWriter에 대 한 구현 된 대로이 기능을 위해서만 존재 기본에서 개체 그래프를 만들거나 <xref:System.Collections.Generic.Dictionary%602>클래스 <xref:System.Collections.Generic.Dictionary%602>.</xref:System.Collections.Generic.Dictionary%602> 의 파생된 클래스에</xref:System.Collections.Generic.Dictionary%602>      ## 지연 된 작업 또는 중간에 삭제 된 XAML 작성기 인스턴스에 대해 호출할 위치에 잠재적으로 삭제 하는 XAML 작성기에 대 한 검사 사용 됩니다. 다양 한 Api XamlObjectWriter 스트림이 <xref:System.ObjectDisposedException>이러한 경우.</xref:System.ObjectDisposedException>"
  syntax:
    content: 'public class XamlObjectWriter : System.Xaml.XamlWriter, System.Xaml.IXamlLineInfoConsumer'
  inheritance:
  - System.Object
  - System.Xaml.XamlWriter
  implements:
  - System.Xaml.IXamlLineInfoConsumer
  inheritedMembers:
  - System.Xaml.XamlWriter.Close
  - System.Xaml.XamlWriter.IsDisposed
  - System.Xaml.XamlWriter.System#IDisposable#Dispose
  - System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)
  id: '#ctor(System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: XamlObjectWriter(XamlSchemaContext)
  nameWithType: XamlObjectWriter.XamlObjectWriter(XamlSchemaContext)
  fullName: System.Xaml.XamlObjectWriter.XamlObjectWriter(XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref> 클래스에서 사용 되는 XAML 스키마 컨텍스트를 사용 하는 <xref href=&quot;System.Xaml.XamlReader&quot;> </xref>합니다."
  syntax:
    content: public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "쓰기를 위한 노드를 제공 하는 XAML 판독기와 공유 하는 XAML 스키마 컨텍스트."
  overload: System.Xaml.XamlObjectWriter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>schemaContext</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)
  id: '#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)'
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: XamlObjectWriter(XamlSchemaContext,XamlObjectWriterSettings)
  nameWithType: XamlObjectWriter.XamlObjectWriter(XamlSchemaContext,XamlObjectWriterSettings)
  fullName: System.Xaml.XamlObjectWriter.XamlObjectWriter(XamlSchemaContext,XamlObjectWriterSettings)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref> 클래스에서 사용 되는 컨텍스트를 사용 하는 <xref href=&quot;System.Xaml.XamlReader&quot;> </xref> 및 설정 합니다."
  syntax:
    content: public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlObjectWriterSettings settings);
    parameters:
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "쓰기를 위한 노드를 제공 하는 XAML 판독기와 공유 하는 XAML 스키마 컨텍스트."
    - id: settings
      type: System.Xaml.XamlObjectWriterSettings
      description: "특정 옵션을 지정 하는 설정 개체 <xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref> 동작과 출력 합니다."
  overload: System.Xaml.XamlObjectWriter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>schemaContext</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.Clear
  id: Clear
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: Clear()
  nameWithType: XamlObjectWriter.Clear()
  fullName: System.Xaml.XamlObjectWriter.Clear()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가능한 모든 프레임을 다시 설정 하 고 개체 그래프를 지웁니다."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Xaml.XamlObjectWriter.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: XamlObjectWriter.Dispose(Boolean)
  fullName: System.Xaml.XamlObjectWriter.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "사용 하는 관리 되지 않는 리소스를 해제는 <xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref>, 선택적으로 관리 되는 리소스를 해제 합니다."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 리소스만 해제 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xaml.XamlObjectWriter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)
  id: OnAfterBeginInit(System.Object)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: OnAfterBeginInit(Object)
  nameWithType: XamlObjectWriter.OnAfterBeginInit(Object)
  fullName: System.Xaml.XamlObjectWriter.OnAfterBeginInit(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "호출 <xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler*>연관 된 메서드가 <xref href=&quot;System.Xaml.XamlObjectWriterSettings&quot;> </xref> 이 <xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref>.</xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler*>"
  syntax:
    content: protected virtual void OnAfterBeginInit (object value);
    parameters:
    - id: value
      type: System.Object
      description: "보고 하는 개체입니다. 개체로 패키지 됩니다 <xref href=&quot;System.Xaml.XamlObjectEventArgs&quot;> </xref> 처리기가 호출 됩니다."
  overload: System.Xaml.XamlObjectWriter.OnAfterBeginInit*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)
  id: OnAfterEndInit(System.Object)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: OnAfterEndInit(Object)
  nameWithType: XamlObjectWriter.OnAfterEndInit(Object)
  fullName: System.Xaml.XamlObjectWriter.OnAfterEndInit(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "호출 <xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler*>연관 된 메서드가 <xref href=&quot;System.Xaml.XamlObjectWriterSettings&quot;> </xref> 이 <xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref>.</xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler*>"
  syntax:
    content: protected virtual void OnAfterEndInit (object value);
    parameters:
    - id: value
      type: System.Object
      description: "보고 하는 개체입니다. 값은로 패키지 됩니다 <xref href=&quot;System.Xaml.XamlObjectEventArgs&quot;> </xref> 처리기가 호출 됩니다."
  overload: System.Xaml.XamlObjectWriter.OnAfterEndInit*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)
  id: OnAfterProperties(System.Object)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: OnAfterProperties(Object)
  nameWithType: XamlObjectWriter.OnAfterProperties(Object)
  fullName: System.Xaml.XamlObjectWriter.OnAfterProperties(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "호출 <xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler*>참조와 연결 된 메서드 <xref href=&quot;System.Xaml.XamlObjectWriterSettings&quot;> </xref> 이 <xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref>.</xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler*>"
  syntax:
    content: protected virtual void OnAfterProperties (object value);
    parameters:
    - id: value
      type: System.Object
      description: "보고 하는 개체입니다. 이로 패키지 됩니다 <xref href=&quot;System.Xaml.XamlObjectEventArgs&quot;> </xref> 처리기가 호출 됩니다."
  overload: System.Xaml.XamlObjectWriter.OnAfterProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)
  id: OnBeforeProperties(System.Object)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: OnBeforeProperties(Object)
  nameWithType: XamlObjectWriter.OnBeforeProperties(Object)
  fullName: System.Xaml.XamlObjectWriter.OnBeforeProperties(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "호출 <xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler*>참조와 연결 된 메서드 <xref href=&quot;System.Xaml.XamlObjectWriterSettings&quot;> </xref> 이 <xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref>.</xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler*>"
  syntax:
    content: protected virtual void OnBeforeProperties (object value);
    parameters:
    - id: value
      type: System.Object
      description: "통해 전달할 값을 <xref href=&quot;System.Xaml.XamlObjectEventArgs&quot;> </xref> 처리기가 호출 됩니다."
  overload: System.Xaml.XamlObjectWriter.OnBeforeProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)
  id: OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: OnSetValue(Object,XamlMember,Object)
  nameWithType: XamlObjectWriter.OnSetValue(Object,XamlMember,Object)
  fullName: System.Xaml.XamlObjectWriter.OnSetValue(Object,XamlMember,Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "호출 <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler*>참조와 연결 된 메서드 <xref href=&quot;System.Xaml.XamlObjectWriterSettings&quot;> </xref> 길이 만큼이 작성기에 대 한 <code> handled </code> 에 <xref href=&quot;System.Windows.Markup.XamlSetValueEventArgs&quot;> </xref> 이벤트 데이터가 않습니다 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler*>"
  remarks: "경우는 `SetValue` 이 XAML 작성기에 대 한 작업에 연결 된 처리기가 (한 <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A>에 선언 된 <xref:System.Xaml.XamlObjectWriterSettings>),이 메서드가 만드는 새 <xref:System.Windows.Markup.XamlSetValueEventArgs>처리기에 전달 합니다.</xref:System.Windows.Markup.XamlSetValueEventArgs> </xref:System.Xaml.XamlObjectWriterSettings> </xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> 반환 값이 참조 하 여 설정 된 <xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A>이벤트 데이터를 통해 전달 되는 값입니다.</xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A> 호출에서 반환 하는 경우 처리기 존재 하 고이 메서드가 호출 된 경우 `false`합니다."
  syntax:
    content: protected virtual bool OnSetValue (object eventSender, System.Xaml.XamlMember member, object value);
    parameters:
    - id: eventSender
      type: System.Object
      description: "처리기에 대 한 원본으로 보고서에 사용 되는 개체입니다."
    - id: member
      type: System.Xaml.XamlMember
      description: "일환으로 처리기에 전달 되는 속성을 설정 하 고, 이름을 <xref href=&quot;System.Windows.Markup.XamlSetValueEventArgs&quot;> </xref>합니다."
    - id: value
      type: System.Object
      description: "로 명명 된 속성에 제공할 값 `property`합니다. 값의의 일부로 처리기에 전달 <xref href=&quot;System.Windows.Markup.XamlSetValueEventArgs&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "연결된 된 처리기;으로 설정 하는 부울 값 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 설명 부분을 참조 하십시오."
  overload: System.Xaml.XamlObjectWriter.OnSetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.Result
  id: Result
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: Result
  nameWithType: XamlObjectWriter.Result
  fullName: System.Xaml.XamlObjectWriter.Result
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "작성 된 마지막 개체를 가져옵니다. 일반적으로 노드 스트림의 끝에 있고 개체 그래프가 완성 된 때만 호출 합니다."
  remarks: "결과의 가장 일반적인 사용의 끝에 노드 스트림의 알려져 개체 그래프가 완성 된 경우에이 호출 하는 것입니다. 그렇지 않은 경우 개체 그래프 완료 하지 못할 수 이며 대부분의 플랫폼 시나리오에 유용 하지 않습니다.       결과 일반적으로 포함 된 null이 아닌 값에 대 한 호출 후 즉시 호출 되 면 <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>, 현재 범위는 개체 값을 제공 하는 멤버의 경우.</xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>"
  syntax:
    content: public virtual object Result { get; }
    return:
      type: System.Object
      description: "마지막으로 작성 된 개체 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다. 설명 부분을 참조 하십시오."
  overload: System.Xaml.XamlObjectWriter.Result*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.RootNameScope
  id: RootNameScope
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: RootNameScope
  nameWithType: XamlObjectWriter.RootNameScope
  fullName: System.Xaml.XamlObjectWriter.RootNameScope
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref:System.Windows.Markup.INameScope>XAML 개체 작성기의 절대 노드 루트에 대 한 XAML 이름 범위를 유지 하는 서비스.</xref:System.Windows.Markup.INameScope>"
  remarks: "이 속성의 값으로 개체 작성기 컨텍스트에서 수행할 수 있습니다."
  syntax:
    content: public System.Windows.Markup.INameScope RootNameScope { get; }
    return:
      type: System.Windows.Markup.INameScope
      description: "<xref:System.Windows.Markup.INameScope>개체 작성기의 현재 루트에 대 한 XAML 이름 범위를 유지 하는 서비스.</xref:System.Windows.Markup.INameScope>"
  overload: System.Xaml.XamlObjectWriter.RootNameScope*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.SchemaContext
  id: SchemaContext
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: SchemaContext
  nameWithType: XamlObjectWriter.SchemaContext
  fullName: System.Xaml.XamlObjectWriter.SchemaContext
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "활성 XAML 스키마 컨텍스트를 가져옵니다."
  remarks: "XAML 스키마 컨텍스트는 대부분의 실제 개체 작성 시나리오에 대 한 필요한 정보 소스입니다. XAML 스키마 컨텍스트 지원 형식에 대 한 유형 조회에 영향을 줍니다 및 지원 형식이 있는 어셈블리에 대 한 정보를 보유 합니다. 기본 XAML 스키마 컨텍스트는 CLR 형식 매핑 규칙을 기반으로 합니다. 프레임 워크는 일반적으로 하는 어셈블리 로드 메커니즘 프레임 워크의 프로그래밍 및 응용 프로그램 모델과 일치 하는지 확인 하기 위해 자신의 XAML 스키마 컨텍스트를 제공 합니다."
  syntax:
    content: public override System.Xaml.XamlSchemaContext SchemaContext { get; }
    return:
      type: System.Xaml.XamlSchemaContext
      description: "XAML 스키마 컨텍스트입니다."
  overload: System.Xaml.XamlObjectWriter.SchemaContext*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)
  id: SetLineInfo(System.Int32,System.Int32)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: SetLineInfo(Int32,Int32)
  nameWithType: XamlObjectWriter.SetLineInfo(Int32,Int32)
  fullName: System.Xaml.XamlObjectWriter.SetLineInfo(Int32,Int32)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "구현 &lt;xref:System.Xaml.IXamlLineInfoConsumer.SetLineInfo%2A?displayProperty=fullName&gt; 예외에 대 한 줄 정보를 제공 합니다."
  remarks: "이 서비스 메서드의 사용자 코드에서 직접 호출할 수 없습니다. 그러나에서 파생된 된 클래스를 만드는 경우 <xref:System.Xaml.XamlObjectWriter>및 줄 번호 사용할 수 없는 컨텍스트를 보고 하기 위해 활성화 되거나 유용 하지이 메서드가 호출 될 수 있습니다.</xref:System.Xaml.XamlObjectWriter>"
  syntax:
    content: public void SetLineInfo (int lineNumber, int linePosition);
    parameters:
    - id: lineNumber
      type: System.Int32
      description: "판독기에서 줄 번호입니다."
    - id: linePosition
      type: System.Int32
      description: "판독기에서 줄 위치입니다."
  overload: System.Xaml.XamlObjectWriter.SetLineInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo
  id: ShouldProvideLineInfo
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: ShouldProvideLineInfo
  nameWithType: XamlObjectWriter.ShouldProvideLineInfo
  fullName: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져온 줄 정보 서비스가 제공 해야 하는지 여부를 보고 하는 값 값 이므로 호출 또한 해야는 <xref:System.Xaml.IXamlLineInfoConsumer.SetLineInfo*>경우 관련 방법.</xref:System.Xaml.IXamlLineInfoConsumer.SetLineInfo*>"
  remarks: "이 구현은 항상 `true`합니다."
  syntax:
    content: public bool ShouldProvideLineInfo { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>작성기;에서 줄 정보를 사용 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteEndMember
  id: WriteEndMember
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteEndMember()
  nameWithType: XamlObjectWriter.WriteEndMember()
  fullName: System.Xaml.XamlObjectWriter.WriteEndMember()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "현재 멤버 범위를 닫고 닫는 동안에 멤버 범위 변수의 값을 쓸 수 있습니다. 새 범위에는 멤버의 부모 개체 범위가 됩니다."
  syntax:
    content: public override void WriteEndMember ();
    parameters: []
  overload: System.Xaml.XamlObjectWriter.WriteEndMember*
  exceptions:
  - type: System.Xaml.XamlObjectWriterException
    commentId: T:System.Xaml.XamlObjectWriterException
    description: "이 호출 하 고 이전 사이 발생 하는 값 노드로부터의 멤버 값을 만들지 못했습니다 <xref uid=&quot;langword_csharp_StartMember&quot; name=&quot;StartMember&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteEndObject
  id: WriteEndObject
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteEndObject()
  nameWithType: XamlObjectWriter.WriteEndObject()
  fullName: System.Xaml.XamlObjectWriter.WriteEndObject()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "작성기에서 현재 개체 범위를 닫습니다. 새 개체 범위는 부모 멤버 범위가 됩니다."
  remarks: "이 경우 `EndObject` 위치 범위가 루트 개체를 닫고, 새 개체 범위 루트 범위가 있습니다.       에 대 한 호출 <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>아직 만들지 않은 경우 개체는 개체 멤버 초기화 텍스트 초기화 매개 변수 등의 필요한 초기화 변수와 수 있기 때문입니다.</xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> 이러한 경우에 대 한 WriteEndObject에 대 한 호출은 실제로 개체를 씁니다."
  syntax:
    content: public override void WriteEndObject ();
    parameters: []
  overload: System.Xaml.XamlObjectWriter.WriteEndObject*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteGetObject
  id: WriteGetObject
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteGetObject()
  nameWithType: XamlObjectWriter.WriteGetObject()
  fullName: System.Xaml.XamlObjectWriter.WriteGetObject()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "개념적 씁니다 <xref uid=&quot;langword_csharp_StartObject&quot; name=&quot;StartObject&quot; href=&quot;&quot;> </xref> 지정된 개체가 기본값 또는 암시적 값 부모 속성의 경우 개체 그래프에 있습니다. XAML 스키마 컨텍스트에서 가져온 정보 및 입력된 XAML 노드 집합에서 개체 값으로 지정 되지 않고 지원 형식 정보에서 암시적 값을 가져옵니다."
  remarks: "WriteGetObject 쓰고로 작성의 차이점 <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>결과 개체 그래프에서 볼 수 있습니다.</xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> WriteGetObject은 WriteGetObject API에 생성할 개체 그래프를 정보가 없으므로 형식의 인스턴스를 생성 하지 않습니다. Parent 속성; 초기화 될 때 개체가 만들어진 대신, 하므로 <xref:System.Xaml.XamlObjectWriter>생성 하십시오. 필요가 없음</xref:System.Xaml.XamlObjectWriter> 반면, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>해당 형식의 인스턴스 생성 및 개체 그래프에 삽입을 지정 합니다.</xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>       에 WriteGetObject 균형 일련의 프레임으로 XAML 노드 스트림의 생각 되 면 한 <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>호출.</xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> 따라서 더하기 WriteGetObject 수가 <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>호출의 수와 같아야 <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>XAML 노드 스트림의 전체 개체 쓰기 평가의 일부로 호출.</xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> </xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>       개념적 `StartObject` 암시적 개체는 개체 그래프에는 필요한 개체를 쓸 수 기반으로 해야 XAML 노드 스트림에서 멤버 개체 값 자체 암시적 기본값인 경우에 있을 수 있습니다 위치를 지정 합니다. 일반적인 시나리오가 현상이 발생 하는 경우 <xref:System.Xaml.XamlObjectWriter>컬렉션 속성을 초기화 하는 컬렉션에 대 한 쓰기 멤버 노드는 컬렉션 속성을 소유 하는 개체를 만드는 암시적.</xref:System.Xaml.XamlObjectWriter>"
  syntax:
    content: public override void WriteGetObject ();
    parameters: []
  overload: System.Xaml.XamlObjectWriter.WriteGetObject*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)
  id: WriteNamespace(System.Xaml.NamespaceDeclaration)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteNamespace(NamespaceDeclaration)
  nameWithType: XamlObjectWriter.WriteNamespace(NamespaceDeclaration)
  fullName: System.Xaml.XamlObjectWriter.WriteNamespace(NamespaceDeclaration)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "다음 개체 범위 또는 멤버 범위에 적용 되는 네임 스페이스 선언은 정의 합니다."
  remarks: "현재 범위는 루트 범위, 개체 범위 또는 멤버 범위 경우 네임 스페이스 선언을 작성할 수 있습니다. 그러나 WriteNamespace 에서만 호출 될 수는 다음 중 하나를 호출 하기 직전: WriteNamespace, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>, 또는 <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>.</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> </xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> 연속 된 WriteNamespace 대/소문자는 동일한 노드를 여러 네임 스페이스 선언을 쓸 때 사용 합니다. 결국 <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>또는 <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>호출 해야 합니다.</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> </xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>       WriteNamespace 사용 하지 않는 한 `Start` / `End` 메타포 합니다. XAML 네임 스페이스에는 CLR 표현의에 멤버가 있지만 멤버를 하며 특수 한 유형의으로 표현 될 필요가 없습니다 <xref:System.Xaml.XamlMember>확장성.</xref:System.Xaml.XamlMember> 값에 액세스 하는 <xref:System.Xaml.NamespaceDeclaration>를 액세스 하면 해당 <xref:System.Xaml.NamespaceDeclaration.Namespace%2A>및 <xref:System.Xaml.NamespaceDeclaration.Prefix%2A>속성.</xref:System.Xaml.NamespaceDeclaration.Prefix%2A> </xref:System.Xaml.NamespaceDeclaration.Namespace%2A> </xref:System.Xaml.NamespaceDeclaration>       네임 스페이스 선언에 사용할 수는 <xref:System.String.Empty?displayProperty=fullName>접두사 값입니다.</xref:System.String.Empty?displayProperty=fullName> A <xref:System.String.Empty?displayProperty=fullName>접두사의 기본 XAML 네임 스페이스 선언을 나타냅니다.</xref:System.String.Empty?displayProperty=fullName> 기본 접두사; 나타내기 위해 null을 사용 하지 마십시오  이 API의 예외를 throw 합니다. 자세한 내용은 <xref:System.Xaml.NamespaceDeclaration>.</xref:System.Xaml.NamespaceDeclaration> 을 참조 하십시오."
  syntax:
    content: public override void WriteNamespace (System.Xaml.NamespaceDeclaration namespaceDeclaration);
    parameters:
    - id: namespaceDeclaration
      type: System.Xaml.NamespaceDeclaration
      description: "작성 하는 네임 스페이스 선언 합니다."
  overload: System.Xaml.XamlObjectWriter.WriteNamespace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>namespaceDeclaration</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A component of <code>namespaceDeclaration</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xaml.XamlObjectReaderException
    commentId: T:System.Xaml.XamlObjectReaderException
    description: "잘못 된 범위에서 XAML 네임 스페이스 노드를 쓰려고 했습니다."
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)
  id: WriteStartMember(System.Xaml.XamlMember)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteStartMember(XamlMember)
  nameWithType: XamlObjectWriter.WriteStartMember(XamlMember)
  fullName: System.Xaml.XamlObjectWriter.WriteStartMember(XamlMember)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "현재 개체 범위에 새 멤버 노드를 작성 범위에 새 멤버 범위 됩니다."
  remarks: >-
    > [!TIP]

    >  Watch for a <xref:System.Xaml.XamlDuplicateMemberException>, which occurs when the same XAML property is set twice in the XAML input. In simple cases, such as when the same property is set in both attribute syntax and property element syntax, you can easily see this exception in the input markup. However, more subtle cases can occur that are more difficult to spot. For example, this exception might occur if you set a XAML content property, if you involve XAML ambient properties, and if a property enables both an attachable usage and an instance usage. In the debugging phases of development, you can often locate this exception by viewing the intermediate XAML node representation that connects the markup read and the object graph write.
  syntax:
    content: public override void WriteStartMember (System.Xaml.XamlMember property);
    parameters:
    - id: property
      type: System.Xaml.XamlMember
      description: "XAML 쓸 속성입니다. 일반적으로 XAML 노드 스트림의 중간 통해 XAML 판독기에서이 값을 가져옵니다."
  overload: System.Xaml.XamlObjectWriter.WriteStartMember*
  exceptions:
  - type: System.Xaml.XamlObjectWriterException
    commentId: T:System.Xaml.XamlObjectWriterException
    description: "<code>property</code>has <xref:System.Xaml.XamlMember.IsUnknown*> set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>.       -또는- <xref:System.Xaml.XamlLanguage.UnknownContent*> XAML 노드 스트림의 콘텐츠를 지원 하지 않는 개체에 대 한 콘텐츠에 포함 되어 있음을 나타냅니다를 전달 합니다.       -또는-잘못 된 범위에서 시작 멤버를 쓰려고 시도 합니다."
  - type: System.Xaml.XamlDuplicateMemberException
    commentId: T:System.Xaml.XamlDuplicateMemberException
    description: "<code>property</code>부모 개체 범위에 이미 명시적으로 설정 된 속성을 지정 합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>property</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)
  id: WriteStartObject(System.Xaml.XamlType)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteStartObject(XamlType)
  nameWithType: XamlObjectWriter.WriteStartObject(XamlType)
  fullName: System.Xaml.XamlObjectWriter.WriteStartObject(XamlType)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "현재 범위에 개체 노드를 작성 하 고 새 개체 범위에 범위를 설정 합니다."
  syntax:
    content: public override void WriteStartObject (System.Xaml.XamlType xamlType);
    parameters:
    - id: xamlType
      type: System.Xaml.XamlType
      description: "쓰기 형식입니다. 일반적으로 XAML 판독기에서이 값을 가져옵니다."
  overload: System.Xaml.XamlObjectWriter.WriteStartObject*
  exceptions:
  - type: System.Xaml.XamlObjectWriterException
    commentId: T:System.Xaml.XamlObjectWriterException
    description: "처리는 <xref:System.Xaml.XamlType.IsUnknown*>입력 하 고 개체를 만들 수 없습니다.</xref:System.Xaml.XamlType.IsUnknown*>       -또는-잘못 된 범위에서 시작 개체를 쓰려고 시도 합니다."
  - type: System.Xaml.XamlParseException
    commentId: T:System.Xaml.XamlParseException
    description: "설정에 이미 제공 된 루트 개체가 때 루트 개체에 쓰려고 했습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xamlType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteValue(System.Object)
  id: WriteValue(System.Object)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteValue(Object)
  nameWithType: XamlObjectWriter.WriteValue(Object)
  fullName: System.Xaml.XamlObjectWriter.WriteValue(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "현재 멤버 범위에 값을 씁니다. 현재 범위 컬렉션, 사전 또는 배열 개체 안에 있으면 값 컬렉션, 사전 또는 배열에 추가할 해야 합니다."
  syntax:
    content: public override void WriteValue (object value);
    parameters:
    - id: value
      type: System.Object
      description: "작성할 값입니다."
  overload: System.Xaml.XamlObjectWriter.WriteValue*
  exceptions:
  - type: System.Xaml.XamlObjectWriterException
    commentId: T:System.Xaml.XamlObjectWriterException
    description: "잘못 된 범위에서 값을 쓰려고 했습니다."
  platform:
  - net462
references:
- uid: System.Xaml.XamlWriter
  isExternal: false
  name: System.Xaml.XamlWriter
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xaml.XamlObjectWriterException
  parent: System.Xaml
  isExternal: false
  name: XamlObjectWriterException
  nameWithType: XamlObjectWriterException
  fullName: System.Xaml.XamlObjectWriterException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xaml.XamlObjectReaderException
  parent: System.Xaml
  isExternal: false
  name: XamlObjectReaderException
  nameWithType: XamlObjectReaderException
  fullName: System.Xaml.XamlObjectReaderException
- uid: System.Xaml.XamlDuplicateMemberException
  parent: System.Xaml
  isExternal: false
  name: XamlDuplicateMemberException
  nameWithType: XamlDuplicateMemberException
  fullName: System.Xaml.XamlDuplicateMemberException
- uid: System.Xaml.XamlParseException
  parent: System.Xaml
  isExternal: false
  name: XamlParseException
  nameWithType: XamlParseException
  fullName: System.Xaml.XamlParseException
- uid: System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: XamlObjectWriter(XamlSchemaContext)
  nameWithType: XamlObjectWriter.XamlObjectWriter(XamlSchemaContext)
  fullName: System.Xaml.XamlObjectWriter.XamlObjectWriter(XamlSchemaContext)
- uid: System.Xaml.XamlSchemaContext
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext
- uid: System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: XamlObjectWriter(XamlSchemaContext,XamlObjectWriterSettings)
  nameWithType: XamlObjectWriter.XamlObjectWriter(XamlSchemaContext,XamlObjectWriterSettings)
  fullName: System.Xaml.XamlObjectWriter.XamlObjectWriter(XamlSchemaContext,XamlObjectWriterSettings)
- uid: System.Xaml.XamlObjectWriterSettings
  parent: System.Xaml
  isExternal: false
  name: XamlObjectWriterSettings
  nameWithType: XamlObjectWriterSettings
  fullName: System.Xaml.XamlObjectWriterSettings
- uid: System.Xaml.XamlObjectWriter.Clear
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: Clear()
  nameWithType: XamlObjectWriter.Clear()
  fullName: System.Xaml.XamlObjectWriter.Clear()
- uid: System.Xaml.XamlObjectWriter.Dispose(System.Boolean)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: XamlObjectWriter.Dispose(Boolean)
  fullName: System.Xaml.XamlObjectWriter.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnAfterBeginInit(Object)
  nameWithType: XamlObjectWriter.OnAfterBeginInit(Object)
  fullName: System.Xaml.XamlObjectWriter.OnAfterBeginInit(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnAfterEndInit(Object)
  nameWithType: XamlObjectWriter.OnAfterEndInit(Object)
  fullName: System.Xaml.XamlObjectWriter.OnAfterEndInit(Object)
- uid: System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnAfterProperties(Object)
  nameWithType: XamlObjectWriter.OnAfterProperties(Object)
  fullName: System.Xaml.XamlObjectWriter.OnAfterProperties(Object)
- uid: System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnBeforeProperties(Object)
  nameWithType: XamlObjectWriter.OnBeforeProperties(Object)
  fullName: System.Xaml.XamlObjectWriter.OnBeforeProperties(Object)
- uid: System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnSetValue(Object,XamlMember,Object)
  nameWithType: XamlObjectWriter.OnSetValue(Object,XamlMember,Object)
  fullName: System.Xaml.XamlObjectWriter.OnSetValue(Object,XamlMember,Object)
- uid: System.Xaml.XamlMember
  parent: System.Xaml
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
- uid: System.Xaml.XamlObjectWriter.Result
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: Result
  nameWithType: XamlObjectWriter.Result
  fullName: System.Xaml.XamlObjectWriter.Result
- uid: System.Xaml.XamlObjectWriter.RootNameScope
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: RootNameScope
  nameWithType: XamlObjectWriter.RootNameScope
  fullName: System.Xaml.XamlObjectWriter.RootNameScope
- uid: System.Windows.Markup.INameScope
  parent: System.Windows.Markup
  isExternal: true
  name: INameScope
  nameWithType: INameScope
  fullName: System.Windows.Markup.INameScope
- uid: System.Xaml.XamlObjectWriter.SchemaContext
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: SchemaContext
  nameWithType: XamlObjectWriter.SchemaContext
  fullName: System.Xaml.XamlObjectWriter.SchemaContext
- uid: System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: SetLineInfo(Int32,Int32)
  nameWithType: XamlObjectWriter.SetLineInfo(Int32,Int32)
  fullName: System.Xaml.XamlObjectWriter.SetLineInfo(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: ShouldProvideLineInfo
  nameWithType: XamlObjectWriter.ShouldProvideLineInfo
  fullName: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo
- uid: System.Xaml.XamlObjectWriter.WriteEndMember
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteEndMember()
  nameWithType: XamlObjectWriter.WriteEndMember()
  fullName: System.Xaml.XamlObjectWriter.WriteEndMember()
- uid: System.Xaml.XamlObjectWriter.WriteEndObject
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteEndObject()
  nameWithType: XamlObjectWriter.WriteEndObject()
  fullName: System.Xaml.XamlObjectWriter.WriteEndObject()
- uid: System.Xaml.XamlObjectWriter.WriteGetObject
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteGetObject()
  nameWithType: XamlObjectWriter.WriteGetObject()
  fullName: System.Xaml.XamlObjectWriter.WriteGetObject()
- uid: System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteNamespace(NamespaceDeclaration)
  nameWithType: XamlObjectWriter.WriteNamespace(NamespaceDeclaration)
  fullName: System.Xaml.XamlObjectWriter.WriteNamespace(NamespaceDeclaration)
- uid: System.Xaml.NamespaceDeclaration
  parent: System.Xaml
  isExternal: false
  name: NamespaceDeclaration
  nameWithType: NamespaceDeclaration
  fullName: System.Xaml.NamespaceDeclaration
- uid: System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteStartMember(XamlMember)
  nameWithType: XamlObjectWriter.WriteStartMember(XamlMember)
  fullName: System.Xaml.XamlObjectWriter.WriteStartMember(XamlMember)
- uid: System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteStartObject(XamlType)
  nameWithType: XamlObjectWriter.WriteStartObject(XamlType)
  fullName: System.Xaml.XamlObjectWriter.WriteStartObject(XamlType)
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.XamlObjectWriter.WriteValue(System.Object)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteValue(Object)
  nameWithType: XamlObjectWriter.WriteValue(Object)
  fullName: System.Xaml.XamlObjectWriter.WriteValue(Object)
- uid: System.Xaml.XamlObjectWriter.#ctor*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: XamlObjectWriter
  nameWithType: XamlObjectWriter.XamlObjectWriter
- uid: System.Xaml.XamlObjectWriter.Clear*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: Clear
  nameWithType: XamlObjectWriter.Clear
- uid: System.Xaml.XamlObjectWriter.Dispose*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: Dispose
  nameWithType: XamlObjectWriter.Dispose
- uid: System.Xaml.XamlObjectWriter.OnAfterBeginInit*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnAfterBeginInit
  nameWithType: XamlObjectWriter.OnAfterBeginInit
- uid: System.Xaml.XamlObjectWriter.OnAfterEndInit*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnAfterEndInit
  nameWithType: XamlObjectWriter.OnAfterEndInit
- uid: System.Xaml.XamlObjectWriter.OnAfterProperties*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnAfterProperties
  nameWithType: XamlObjectWriter.OnAfterProperties
- uid: System.Xaml.XamlObjectWriter.OnBeforeProperties*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnBeforeProperties
  nameWithType: XamlObjectWriter.OnBeforeProperties
- uid: System.Xaml.XamlObjectWriter.OnSetValue*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnSetValue
  nameWithType: XamlObjectWriter.OnSetValue
- uid: System.Xaml.XamlObjectWriter.Result*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: Result
  nameWithType: XamlObjectWriter.Result
- uid: System.Xaml.XamlObjectWriter.RootNameScope*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: RootNameScope
  nameWithType: XamlObjectWriter.RootNameScope
- uid: System.Xaml.XamlObjectWriter.SchemaContext*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: SchemaContext
  nameWithType: XamlObjectWriter.SchemaContext
- uid: System.Xaml.XamlObjectWriter.SetLineInfo*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: SetLineInfo
  nameWithType: XamlObjectWriter.SetLineInfo
- uid: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: ShouldProvideLineInfo
  nameWithType: XamlObjectWriter.ShouldProvideLineInfo
- uid: System.Xaml.XamlObjectWriter.WriteEndMember*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteEndMember
  nameWithType: XamlObjectWriter.WriteEndMember
- uid: System.Xaml.XamlObjectWriter.WriteEndObject*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteEndObject
  nameWithType: XamlObjectWriter.WriteEndObject
- uid: System.Xaml.XamlObjectWriter.WriteGetObject*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteGetObject
  nameWithType: XamlObjectWriter.WriteGetObject
- uid: System.Xaml.XamlObjectWriter.WriteNamespace*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteNamespace
  nameWithType: XamlObjectWriter.WriteNamespace
- uid: System.Xaml.XamlObjectWriter.WriteStartMember*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteStartMember
  nameWithType: XamlObjectWriter.WriteStartMember
- uid: System.Xaml.XamlObjectWriter.WriteStartObject*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteStartObject
  nameWithType: XamlObjectWriter.WriteStartObject
- uid: System.Xaml.XamlObjectWriter.WriteValue*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteValue
  nameWithType: XamlObjectWriter.WriteValue
