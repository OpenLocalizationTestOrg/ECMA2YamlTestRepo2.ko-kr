### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Page
  id: Page
  children:
  - System.Web.UI.Page.#ctor
  - System.Web.UI.Page.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  - System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.UI.Page.AddWrappedFileDependencies(System.Object)
  - System.Web.UI.Page.Application
  - System.Web.UI.Page.AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  - System.Web.UI.Page.AspCompatEndProcessRequest(System.IAsyncResult)
  - System.Web.UI.Page.AspCompatMode
  - System.Web.UI.Page.AsyncMode
  - System.Web.UI.Page.AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  - System.Web.UI.Page.AsyncPageEndProcessRequest(System.IAsyncResult)
  - System.Web.UI.Page.AsyncTimeout
  - System.Web.UI.Page.AutoPostBackControl
  - System.Web.UI.Page.Buffer
  - System.Web.UI.Page.Cache
  - System.Web.UI.Page.ClientQueryString
  - System.Web.UI.Page.ClientScript
  - System.Web.UI.Page.ClientTarget
  - System.Web.UI.Page.CodePage
  - System.Web.UI.Page.ContentType
  - System.Web.UI.Page.Context
  - System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)
  - System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)
  - System.Web.UI.Page.Culture
  - System.Web.UI.Page.DesignerInitialize
  - System.Web.UI.Page.DeterminePostBackMode
  - System.Web.UI.Page.DeterminePostBackModeUnvalidated
  - System.Web.UI.Page.EnableEventValidation
  - System.Web.UI.Page.EnableViewState
  - System.Web.UI.Page.EnableViewStateMac
  - System.Web.UI.Page.ErrorPage
  - System.Web.UI.Page.ExecuteRegisteredAsyncTasks
  - System.Web.UI.Page.FileDependencies
  - System.Web.UI.Page.FindControl(System.String)
  - System.Web.UI.Page.Form
  - System.Web.UI.Page.FrameworkInitialize
  - System.Web.UI.Page.GetDataItem
  - System.Web.UI.Page.GetPostBackClientEvent(System.Web.UI.Control,System.String)
  - System.Web.UI.Page.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  - System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)
  - System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)
  - System.Web.UI.Page.GetTypeHashCode
  - System.Web.UI.Page.GetValidators(System.String)
  - System.Web.UI.Page.GetWrappedFileDependencies(System.String[])
  - System.Web.UI.Page.Header
  - System.Web.UI.Page.ID
  - System.Web.UI.Page.IdSeparator
  - System.Web.UI.Page.InitComplete
  - System.Web.UI.Page.InitializeCulture
  - System.Web.UI.Page.InitOutputCache(System.Web.UI.OutputCacheParameters)
  - System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  - System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  - System.Web.UI.Page.IsAsync
  - System.Web.UI.Page.IsCallback
  - System.Web.UI.Page.IsClientScriptBlockRegistered(System.String)
  - System.Web.UI.Page.IsCrossPagePostBack
  - System.Web.UI.Page.IsPostBack
  - System.Web.UI.Page.IsPostBackEventControlRegistered
  - System.Web.UI.Page.IsReusable
  - System.Web.UI.Page.IsStartupScriptRegistered(System.String)
  - System.Web.UI.Page.IsValid
  - System.Web.UI.Page.Items
  - System.Web.UI.Page.LCID
  - System.Web.UI.Page.LoadComplete
  - System.Web.UI.Page.LoadPageStateFromPersistenceMedium
  - System.Web.UI.Page.MaintainScrollPositionOnPostBack
  - System.Web.UI.Page.MapPath(System.String)
  - System.Web.UI.Page.Master
  - System.Web.UI.Page.MasterPageFile
  - System.Web.UI.Page.MaxPageStateFieldLength
  - System.Web.UI.Page.MetaDescription
  - System.Web.UI.Page.MetaKeywords
  - System.Web.UI.Page.ModelBindingExecutionContext
  - System.Web.UI.Page.ModelState
  - System.Web.UI.Page.OnInit(System.EventArgs)
  - System.Web.UI.Page.OnInitComplete(System.EventArgs)
  - System.Web.UI.Page.OnLoadComplete(System.EventArgs)
  - System.Web.UI.Page.OnPreInit(System.EventArgs)
  - System.Web.UI.Page.OnPreLoad(System.EventArgs)
  - System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)
  - System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)
  - System.Web.UI.Page.PageAdapter
  - System.Web.UI.Page.PageStatePersister
  - System.Web.UI.Page.postEventArgumentID
  - System.Web.UI.Page.postEventSourceID
  - System.Web.UI.Page.PreInit
  - System.Web.UI.Page.PreLoad
  - System.Web.UI.Page.PreRenderComplete
  - System.Web.UI.Page.PreviousPage
  - System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)
  - System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)
  - System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)
  - System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)
  - System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)
  - System.Web.UI.Page.RegisterHiddenField(System.String,System.String)
  - System.Web.UI.Page.RegisterOnSubmitStatement(System.String,System.String)
  - System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)
  - System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)
  - System.Web.UI.Page.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)
  - System.Web.UI.Page.RegisterRequiresViewStateEncryption
  - System.Web.UI.Page.RegisterStartupScript(System.String,System.String)
  - System.Web.UI.Page.RegisterViewStateHandler
  - System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Page.Request
  - System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)
  - System.Web.UI.Page.Response
  - System.Web.UI.Page.ResponseEncoding
  - System.Web.UI.Page.RouteData
  - System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)
  - System.Web.UI.Page.SaveStateComplete
  - System.Web.UI.Page.Server
  - System.Web.UI.Page.Session
  - System.Web.UI.Page.SetFocus(System.String)
  - System.Web.UI.Page.SetFocus(System.Web.UI.Control)
  - System.Web.UI.Page.SkipFormActionValidation
  - System.Web.UI.Page.SmartNavigation
  - System.Web.UI.Page.StyleSheetTheme
  - System.Web.UI.Page.Theme
  - System.Web.UI.Page.Title
  - System.Web.UI.Page.Trace
  - System.Web.UI.Page.TraceEnabled
  - System.Web.UI.Page.TraceModeValue
  - System.Web.UI.Page.TransactionMode
  - System.Web.UI.Page.TryUpdateModel``1(``0)
  - System.Web.UI.Page.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  - System.Web.UI.Page.UICulture
  - System.Web.UI.Page.UniqueFilePathSuffix
  - System.Web.UI.Page.UnobtrusiveValidationMode
  - System.Web.UI.Page.UnregisterRequiresControlState(System.Web.UI.Control)
  - System.Web.UI.Page.UpdateModel``1(``0)
  - System.Web.UI.Page.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  - System.Web.UI.Page.User
  - System.Web.UI.Page.Validate
  - System.Web.UI.Page.Validate(System.String)
  - System.Web.UI.Page.ValidateRequestMode
  - System.Web.UI.Page.Validators
  - System.Web.UI.Page.VerifyRenderingInServerForm(System.Web.UI.Control)
  - System.Web.UI.Page.ViewStateEncryptionMode
  - System.Web.UI.Page.ViewStateUserKey
  - System.Web.UI.Page.Visible
  langs:
  - csharp
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
  type: Class
  summary: "ASP.NET 웹 응용 프로그램을 호스팅하는 서버에서 요청 된.aspx 파일을 Web Forms 페이지 라고도 나타냅니다."
  remarks: "Page 클래스 파일 확장명이.aspx에 연관 되어 있습니다. 이러한 파일은 페이지 개체로 런타임 시 컴파일되고 서버 메모리에 캐시 됩니다.       코드 숨김 기술을 사용 하 여 Web Forms 페이지를 만들려는 경우에이 클래스에서 파생 됩니다. 신속한 응용 프로그램 RAD (개발) 디자이너, Microsoft Visual Studio와 같은 자동으로 Web Forms 페이지를 만드는이 모델을 사용 합니다.       페이지의 모든 서버 컨트롤에 대 한 명명 컨테이너는 페이지 개체 역할 구현 하는 제외 하 고는 <xref:System.Web.UI.INamingContainer>인터페이스 또는이 인터페이스를 구현 하는 컨트롤의 자식 컨트롤.</xref:System.Web.UI.INamingContainer>       Page 클래스에는 웹 응용 프로그램에 대 한 사용자 인터페이스 역할을 하 고 따라서 방법이 필요 보안 코드를 작성 하 고 응용 프로그램 보안에 대 한 모범 사례를 따르고 있는지 확인 하는 컨트롤입니다. 이러한 항목에 대 한 일반적인 정보를 참조 하십시오. [개요의 웹 응용 프로그램 보안 위협](~/add/includes/ajax-current-ext-md.md), [NIB: 보안 정책에 대 한 유용한 정보](http://msdn.microsoft.com/en-us/d49bc4d5-efb7-4caa-a2fe-e4d3cec63c05), 및 [주요 보안 개념](~/add/includes/ajax-current-ext-md.md)합니다. 보다 구체적인 정보를 참조 하십시오. [보안 표준 컨트롤](~/add/includes/ajax-current-ext-md.md), [하는 방법: 오류 메시지를 안전 하 게 보호 하는 표시](~/add/includes/ajax-current-ext-md.md), [하는 방법: 보호에 대 한 스크립트에 의해 악용 문자열을 HTML 인코딩 적용 하 여 웹 응용 프로그램에서](~/add/includes/ajax-current-ext-md.md), 및 [유효성 검사 컨트롤 소개](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190)합니다."
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192425).  \n  \n The following code example demonstrates how the Page class is used in the code-behind page model. Note that the code-behind source file declares a partial class that inherits from a base page class. The base page class can be Page, or it can be another class that derives from Page. Furthermore, note that the partial class allows the code-behind file to use controls defined on the page without the need to define them as field members.  \n  \n [!code-cs[System.Web.UI.Page_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.page_1.cs)]\n [!code-vb[System.Web.UI.Page_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.page_1.vb)]  \n  \n The following code example shows the .aspx file that corresponds to the preceding code-behind source file.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.Page_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.page_2.aspx)]\n [!code-vb[System.Web.UI.Page_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.page_2.aspx)]  \n  \n You must use the  directive and use the `Inherits` and `CodeFile` attributes to link the code-behind file to the .aspx file. In this example, the `Inherits` attribute indicates the `MyCodeBehind` class and the `CodeFile` attribute indicates the path to the language-specific file that contains the class.  \n  \n The following code example demonstrates the single-file page model and how to access the <xref:System.Web.UI.Page.IsPostBack%2A> property and the <xref:System.Web.UI.Page.Response%2A> property of the Page.  \n  \n [!code-vb[System.Web.UI.Page_Overview2#1](~/add/codesnippet/visualbasic/t-system.web.ui.page_3.aspx)]\n [!code-cs[System.Web.UI.Page_Overview2#1](~/add/codesnippet/csharp/t-system.web.ui.page_3.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Load")]

      [System.ComponentModel.Design.Serialization.DesignerSerializer("Microsoft.VisualStudio.Web.WebForms.WebFormCodeDomSerializer, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.TypeCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.WebFormDesigner, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))]

      [System.ComponentModel.DesignerCategory("ASPXCodeBehind")]

      [System.ComponentModel.ToolboxItem(false)]

      public class Page : System.Web.UI.TemplateControl, System.Web.IHttpHandler
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.TemplateControl
  implements:
  - System.Web.IHttpHandler
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.TemplateControl.AbortTransaction
  - System.Web.UI.TemplateControl.AppRelativeVirtualPath
  - System.Web.UI.TemplateControl.AutoHandlers
  - System.Web.UI.TemplateControl.CommitTransaction
  - System.Web.UI.TemplateControl.Construct
  - System.Web.UI.TemplateControl.CreateResourceBasedLiteralControl(System.Int32,System.Int32,System.Boolean)
  - System.Web.UI.TemplateControl.EnableTheming
  - System.Web.UI.TemplateControl.Error
  - System.Web.UI.TemplateControl.Eval(System.String)
  - System.Web.UI.TemplateControl.Eval(System.String,System.String)
  - System.Web.UI.TemplateControl.GetGlobalResourceObject(System.String,System.String)
  - System.Web.UI.TemplateControl.GetGlobalResourceObject(System.String,System.String,System.Type,System.String)
  - System.Web.UI.TemplateControl.GetLocalResourceObject(System.String)
  - System.Web.UI.TemplateControl.GetLocalResourceObject(System.String,System.Type,System.String)
  - System.Web.UI.TemplateControl.LoadControl(System.String)
  - System.Web.UI.TemplateControl.LoadControl(System.Type,System.Object[])
  - System.Web.UI.TemplateControl.LoadTemplate(System.String)
  - System.Web.UI.TemplateControl.OnAbortTransaction(System.EventArgs)
  - System.Web.UI.TemplateControl.OnCommitTransaction(System.EventArgs)
  - System.Web.UI.TemplateControl.OnError(System.EventArgs)
  - System.Web.UI.TemplateControl.ParseControl(System.String)
  - System.Web.UI.TemplateControl.ParseControl(System.String,System.Boolean)
  - System.Web.UI.TemplateControl.ReadStringResource
  - System.Web.UI.TemplateControl.ReadStringResource(System.Type)
  - System.Web.UI.TemplateControl.SetStringResourcePointer(System.Object,System.Int32)
  - System.Web.UI.TemplateControl.SupportAutoEvents
  - System.Web.UI.TemplateControl.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)
  - System.Web.UI.TemplateControl.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)
  - System.Web.UI.TemplateControl.TestDeviceFilter(System.String)
  - System.Web.UI.TemplateControl.WriteUTF8ResourceString(System.Web.UI.HtmlTextWriter,System.Int32,System.Int32,System.Boolean)
  - System.Web.UI.TemplateControl.XPath(System.String)
  - System.Web.UI.TemplateControl.XPath(System.String,System.String)
  - System.Web.UI.TemplateControl.XPath(System.String,System.String,System.Xml.IXmlNamespaceResolver)
  - System.Web.UI.TemplateControl.XPath(System.String,System.Xml.IXmlNamespaceResolver)
  - System.Web.UI.TemplateControl.XPathSelect(System.String)
  - System.Web.UI.TemplateControl.XPathSelect(System.String,System.Xml.IXmlNamespaceResolver)
  platform:
  - net462
- uid: System.Web.UI.Page.#ctor
  id: '#ctor'
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Page()
  nameWithType: Page.Page()
  fullName: System.Web.UI.Page.Page()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.Page&quot;> </xref> 클래스입니다."
  remarks: "기본 생성자는 모든 필드를 기본값으로 초기화 합니다."
  syntax:
    content: public Page ();
    parameters: []
  overload: System.Web.UI.Page.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  id: AddContentTemplate(System.String,System.Web.UI.ITemplate)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AddContentTemplate(String,ITemplate)
  nameWithType: Page.AddContentTemplate(String,ITemplate)
  fullName: System.Web.UI.Page.AddContentTemplate(String,ITemplate)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "컬렉션을 만들려면 마스터 페이지에 전달 된 콘텐츠 (콘텐츠 컨트롤)에서 현재 페이지 또는 마스터 페이지 마스터 페이지를 참조 하는 경우 페이지 초기화 하는 동안 호출 됩니다."
  syntax:
    content: protected void AddContentTemplate (string templateName, System.Web.UI.ITemplate template);
    parameters:
    - id: templateName
      type: System.String
      description: "추가할 콘텐츠 서식 파일의 이름입니다."
    - id: template
      type: System.Web.UI.ITemplate
      description: "콘텐츠 서식 파일"
  overload: System.Web.UI.Page.AddContentTemplate*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "이름이 같은 콘텐츠 템플릿이 이미 있습니다."
  platform:
  - net462
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "비동기 페이지에 대 한 상태 정보를 필요로 하지 않는 시작 및 끝 이벤트 처리기 대리자를 등록 합니다."
  remarks: "AddOnPreRenderCompleteAsync 메서드를 사용 하 여 비동기 웹 페이지에 처리기를 추가 합니다.       여러 비동기 처리기;에 등록할 수 있습니다. 그러나 한 번에 하나만 처리기 실행 됩니다. 여러 비동기 메서드를 동시에 처리 하려는 경우에 단일을 사용 해야 <xref:System.Web.BeginEventHandler>메서드 및 해당 처리기에서 여러 개의 비동기 작업을 시작 합니다.</xref:System.Web.BeginEventHandler>       비동기 처리기 사이 호출 된 <xref:System.Web.UI.Control.PreRender>및 <xref:System.Web.UI.Page.PreRenderComplete>이벤트.</xref:System.Web.UI.Page.PreRenderComplete> </xref:System.Web.UI.Control.PreRender>       첫째, 모든 <xref:System.Web.UI.Page>이벤트 (통해는 <xref:System.Web.UI.Control.PreRender>이벤트)은 실행 시 다음 등록 된 각 <xref:System.Web.BeginEventHandler>메서드를 호출 합니다.</xref:System.Web.BeginEventHandler> </xref:System.Web.UI.Control.PreRender> </xref:System.Web.UI.Page> 처리기 완료 되 면 해당 <xref:System.Web.EndEventHandler>메서드를 호출 합니다.</xref:System.Web.EndEventHandler> 여러 비동기 처리기가 있는 경우 다음 처리기가 호출 됩니다.       등록 된 비동기 이벤트 처리기가 호출 된 후 페이지 이벤트의 나머지를를 호출 부터는 <xref:System.Web.UI.Page.PreRenderComplete>이벤트.</xref:System.Web.UI.Page.PreRenderComplete>"
  example:
  - "The following code example uses an asynchronous request to display the HTML source code of the local Web server's default page in a <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/visualbasic/211d473e-4a2a-4d51-99f6-_1.aspx)]\n [!code-cs[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/csharp/211d473e-4a2a-4d51-99f6-_1.aspx)]"
  syntax:
    content: public void AddOnPreRenderCompleteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "에 대 한 대리자는 <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> 메서드."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "에 대 한 대리자는 <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> 메서드."
  overload: System.Web.UI.Page.AddOnPreRenderCompleteAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref uid=\"langword_csharp_&lt;async&gt;\" name=\"&lt;async&gt;\" href=\"\"></xref> page directive is not set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The AddOnPreRenderCompleteAsync method is called after the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <>*> or <>*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "시작 및 끝 비동기 페이지에 대 한 이벤트 처리기 대리자를 등록 합니다."
  remarks: "AddOnPreRenderCompleteAsync 메서드를 사용 하 여 비동기 웹 페이지에 상태 정보를 필요로 하는 처리기를 추가 합니다. 에 전달 되는 개체는 `state` 매개 변수는 응용 프로그램에 필요한 이벤트 처리기 대리자에 지정 된 간에 정보를 전송 하는 모든 개체 일 수는 `beginHandler` 및 `endHandler` 매개 변수입니다.       여러 비동기 처리기;에 등록할 수 있습니다. 그러나 한 번에 하나만 처리기 실행 됩니다. 여러 비동기 메서드를 동시에 처리 하려는 경우에 단일을 사용 해야 <xref:System.Web.BeginEventHandler>메서드 및 해당 처리기에서 여러 개의 비동기 작업을 시작 합니다.</xref:System.Web.BeginEventHandler>       비동기 처리기 사이 호출 된 <xref:System.Web.UI.Control.PreRender>및 <xref:System.Web.UI.Page.PreRenderComplete>이벤트.</xref:System.Web.UI.Page.PreRenderComplete> </xref:System.Web.UI.Control.PreRender>       첫째, 모든 <xref:System.Web.UI.Page>이벤트 (통해는 <xref:System.Web.UI.Control.PreRender>이벤트)은 실행 시 다음 등록 된 각 <xref:System.Web.BeginEventHandler>메서드를 호출 합니다.</xref:System.Web.BeginEventHandler> </xref:System.Web.UI.Control.PreRender> </xref:System.Web.UI.Page> 처리기 완료 되 면 해당 <xref:System.Web.EndEventHandler>메서드를 호출 합니다.</xref:System.Web.EndEventHandler> 여러 비동기 처리기가 있는 경우 다음 처리기가 호출 됩니다.       등록 된 비동기 이벤트 처리기가 호출 된 후 페이지 이벤트의 나머지를를 호출 부터는 <xref:System.Web.UI.Page.PreRenderComplete>이벤트.</xref:System.Web.UI.Page.PreRenderComplete>"
  example:
  - "The following code example uses an asynchronous request to display the HTML source code of the local Web server's default page in a <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/visualbasic/7b7f2daf-1a25-4639-a06e-_1.aspx)]\n [!code-cs[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/csharp/7b7f2daf-1a25-4639-a06e-_1.aspx)]"
  syntax:
    content: public void AddOnPreRenderCompleteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "에 대 한 대리자는 <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> 메서드."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "에 대 한 대리자는 <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> 메서드."
    - id: state
      type: System.Object
      description: "이벤트 처리기에 대 한 상태 정보를 포함 하는 개체입니다."
  overload: System.Web.UI.Page.AddOnPreRenderCompleteAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref uid=\"langword_csharp_&lt;async&gt;\" name=\"&lt;async&gt;\" href=\"\"></xref> page directive is not set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync*> method is called after the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <>*> or <>*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Page.AddWrappedFileDependencies(System.Object)
  id: AddWrappedFileDependencies(System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AddWrappedFileDependencies(Object)
  nameWithType: Page.AddWrappedFileDependencies(Object)
  fullName: System.Web.UI.Page.AddWrappedFileDependencies(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "현재 페이지를 구성 하는 종속 파일의 목록을 추가 합니다. 이 메서드는 ASP.NET 페이지 프레임 워크에서 내부적으로 사용 됩니다 하 고 사용자 코드에서 직접 사용할 수 없습니다."
  remarks: "AddWrappedFileDependencies 메서드는 현재 페이지를 구성 하는 사용자 제어 파일 등 파일의 목록을 추가 합니다. 이러한 페이지 중 하나를 수정 하는 경우 전체 페이지 다음에 필요할 때가 컴파일됩니다. 이 메서드는.NET Framework 인프라를 지원 하며 사용자 코드에서 직접 사용할 수 없습니다."
  syntax:
    content: protected void AddWrappedFileDependencies (object virtualFileDependencies);
    parameters:
    - id: virtualFileDependencies
      type: System.Object
      description: "<xref:System.Object>파일 이름 목록이 포함 된.</xref:System.Object>"
  overload: System.Web.UI.Page.AddWrappedFileDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Application
  id: Application
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Application
  nameWithType: Page.Application
  fullName: System.Web.UI.Page.Application
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "가져옵니다는 <xref href=&quot;System.Web.HttpApplicationState&quot;> </xref> 현재 웹 요청에 대 한 개체입니다."
  remarks: ''
  example:
  - >-
    [!code-cs[Page.Application_Sample1#1](~/add/codesnippet/csharp/p-system.web.ui.page.app_1.aspx)]
     [!code-vb[Page.Application_Sample1#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.app_1.aspx)]
  syntax:
    content: public System.Web.HttpApplicationState Application { get; }
    return:
      type: System.Web.HttpApplicationState
      description: "현재 데이터는 <xref href=&quot;System.Web.HttpApplicationState&quot;> </xref> 클래스입니다."
  overload: System.Web.UI.Page.Application*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  id: AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.UI.Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "서버 페이지 ASP (Active) 리소스에 대 한 요청을 시작합니다. 이 메서드는 기존 ASP 응용 프로그램 호환성을 위해 제공 됩니다."
  remarks: "이 메서드를 호출 하지 마십시오."
  syntax:
    content: protected IAsyncResult AspCompatBeginProcessRequest (System.Web.HttpContext context, AsyncCallback cb, object extraData);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> 현재 요청에 대 한 정보입니다."
    - id: cb
      type: System.AsyncCallback
      description: "콜백 메서드입니다."
    - id: extraData
      type: System.Object
      description: "동일한 방식으로 ASP 요청이 요청을 처리 하는 데 필요한 모든 추가 데이터입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>개체입니다.</xref:System.IAsyncResult>"
  overload: System.Web.UI.Page.AspCompatBeginProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AspCompatEndProcessRequest(System.IAsyncResult)
  id: AspCompatEndProcessRequest(System.IAsyncResult)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AspCompatEndProcessRequest(IAsyncResult)
  nameWithType: Page.AspCompatEndProcessRequest(IAsyncResult)
  fullName: System.Web.UI.Page.AspCompatEndProcessRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "서버 페이지 ASP (Active) 리소스에 대 한 요청을 종료합니다. 이 메서드는 기존 ASP 응용 프로그램 호환성을 위해 제공 됩니다."
  remarks: "이 메서드를 호출 하지 마십시오."
  syntax:
    content: protected void AspCompatEndProcessRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "요청에 의해 생성 된 ASP 페이지입니다."
  overload: System.Web.UI.Page.AspCompatEndProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AspCompatMode
  id: AspCompatMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AspCompatMode
  nameWithType: Page.AspCompatMode
  fullName: System.Web.UI.Page.AspCompatMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "단일 스레드 아파트 (STA) 스레드에서 페이지를 실행할 수 있는지 여부를 나타내는 값을 설정 합니다."
  remarks: "로 설정 하면 `true`,이 속성 페이지를 단일 스레드 아파트 (STA) 스레드에서 실행할 수 있습니다. 이 페이지를에서 Visual Basic 6.0을 사용 하 여 개발 하는 구성 요소와 같은 STA 구성 요소를 호출할 수 있습니다. 이 속성을 설정 `true` 페이지에서 관리 되지 않는 ASP 내장 개체에 대 한 액세스를 필요로 하는 COM + 구성 요소를 호출할 수도 있습니다. ASP를 통해 액세스할 수 `ObjectContext` 개체 또는 `OnStartPage` 메서드.       대부분의 경우에서 코드에서이 속성을 설정 하지 마십시오. 설정의 `aspcompat` 특성을 `true` .aspx 파일에 지시문을 사용 합니다. 페이지가 요청 될 때 동적으로 생성 된 클래스 속성을 설정 합니다."
  syntax:
    content: protected bool AspCompatMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>페이지에서 코드 ASP Active Server Pages ();를 지원 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Page.AspCompatMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AsyncMode
  id: AsyncMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AsyncMode
  nameWithType: Page.AsyncMode
  fullName: System.Web.UI.Page.AsyncMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지 동기적 또는 비동기적으로 처리 여부를 나타내는 값을 설정 합니다."
  remarks: "AsyncMode 속성는 <xref:System.Web.UI.Page>파서 페이지에 대 한 코드가 생성 될 때.</xref:System.Web.UI.Page> 사용 하 여는 `Async` 지시문에서 특성을이 값을 설정 합니다.       비동기 페이지 작동 하지 않습니다는 `AspCompat` 특성이로 설정 된 `true` 또는 `Transaction` 이외의 값으로 설정 되어 특성 `Disabled` 지시문에 있습니다."
  syntax:
    content: protected bool AsyncMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>페이지는 비동기적으로 처리 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Page.AsyncMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  id: AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.UI.Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "비동기 페이지 요청을 처리 하기 시작 합니다."
  syntax:
    content: protected IAsyncResult AsyncPageBeginProcessRequest (System.Web.HttpContext context, AsyncCallback callback, object extraData);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> 요청에 대 한 합니다."
    - id: callback
      type: System.AsyncCallback
      description: "프로세스가 완료 되 면 알릴 콜백 메서드."
    - id: extraData
      type: System.Object
      description: "비동기 메서드에 대 한 상태 데이터입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>비동기 요청을 참조 하는.</xref:System.IAsyncResult>"
  overload: System.Web.UI.Page.AsyncPageBeginProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AsyncPageEndProcessRequest(System.IAsyncResult)
  id: AsyncPageEndProcessRequest(System.IAsyncResult)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AsyncPageEndProcessRequest(IAsyncResult)
  nameWithType: Page.AsyncPageEndProcessRequest(IAsyncResult)
  fullName: System.Web.UI.Page.AsyncPageEndProcessRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "비동기 페이지 요청 처리를 종료 합니다."
  syntax:
    content: protected void AsyncPageEndProcessRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>보류 중인 비동기 요청을 참조 합니다.</xref:System.IAsyncResult>"
  overload: System.Web.UI.Page.AsyncPageEndProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AsyncTimeout
  id: AsyncTimeout
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AsyncTimeout
  nameWithType: Page.AsyncTimeout
  fullName: System.Web.UI.Page.AsyncTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "비동기 작업을 처리할 때 사용 되는 시간 제한 간격을 나타내는 값을 가져오거나 설정 합니다."
  remarks: "페이지의 비동기 시간 제한 비동기 작업을 수행 하는 페이지에서 대기 하는 시간을 나타냅니다. 대부분의 경우에서 코드에서이 속성을 설정 하지 마십시오. 사용 하 여 페이지 비동기 시간 제한 간격 설정는 웹 구성 파일 또는 지시문에 있습니다. Page 지시문 페이지 구성 섹션에 설정 된 값을 덮어씁니다.       사용 하 여 비동기 작업 정의 <xref:System.Web.UI.PageAsyncTask>클래스 및 시작 하는, 종료 및 시간 제한 처리기를 등록 합니다.</xref:System.Web.UI.PageAsyncTask> 비동기 작업은 지정 된 시간 간격에 완료 되지 않으면, 제한 시간 처리기가 호출 됩니다."
  example:
  - "The following code example demonstrates the use of the AsyncTimeout property with the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> and <xref:System.Web.UI.Page.RegisterAsyncTask%2A> methods. Note the use of beginning, ending, and time-out handlers. In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the AsyncTimeout property. In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time. Note that the AsyncTimeout property is set in the page directive.  \n  \n [!code-vb[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.asy_1.aspx)]\n [!code-cs[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/csharp/p-system.web.ui.page.asy_1.aspx)]  \n  \n [!code-cs[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/csharp/p-system.web.ui.page.asy_2.cs)]\n [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.asy_2.vb)]"
  syntax:
    content: public TimeSpan AsyncTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>비동기 작업의 완료에 대 한 허용 되는 시간 간격을 포함 하는.</xref:System.TimeSpan> 기본 시간 간격은 45 초입니다."
  overload: System.Web.UI.Page.AsyncTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "속성은 음수 값으로 설정 되었습니다."
  platform:
  - net462
- uid: System.Web.UI.Page.AutoPostBackControl
  id: AutoPostBackControl
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AutoPostBackControl
  nameWithType: Page.AutoPostBackControl
  fullName: System.Web.UI.Page.AutoPostBackControl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "포스트백을 수행 하는 데 사용 되는 페이지에 컨트롤을 가져오거나 설정 합니다."
  syntax:
    content: public System.Web.UI.Control AutoPostBackControl { get; set; }
    return:
      type: System.Web.UI.Control
      description: "포스트백을 수행 하는 데 사용 되는 컨트롤입니다."
  overload: System.Web.UI.Page.AutoPostBackControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Buffer
  id: Buffer
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Buffer
  nameWithType: Page.Buffer
  fullName: System.Web.UI.Page.Buffer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지 출력의 버퍼링 여부를 나타내는 값을 설정 합니다."
  remarks: "대부분의 경우에서 코드에서이 속성을 설정 하지 마십시오. 값을 버퍼 특성 설정 `true` .aspx 파일에 지시문을 사용 합니다. 페이지가 요청 될 때 동적으로 생성 된 클래스 속성을 설정 합니다.      > [!NOTE] >은 버퍼 속성을 설정 하거나 가져옵니다는 <xref:System.Web.HttpResponse.BufferOutput%2A>속성.</xref:System.Web.HttpResponse.BufferOutput%2A>"
  syntax:
    content: public bool Buffer { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>페이지 출력 버퍼링 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Page.Buffer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Cache
  id: Cache
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Cache
  nameWithType: Page.Cache
  fullName: System.Web.UI.Page.Cache
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "가져옵니다는 <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> 페이지가 들어 있는 응용 프로그램과 관련 된 개체입니다."
  remarks: "응용 프로그램의 <xref:System.Web.Caching.Cache>개체를 저장 하 고 이후 요청에서 임의의 데이터를 검색할 수 있습니다.</xref:System.Web.Caching.Cache> 캐시 특히 페이지 또는 사용자 세션과 연결 되지 않습니다. 응용 프로그램 성능을 향상 하는 데 주로 사용 됩니다. 자세한 내용은 참조 [응용 프로그램 데이터 캐싱](~/add/includes/ajax-current-ext-md.md)합니다. 응용 프로그램에서 캐싱 및 페이지 출력 캐싱을 간의 차이점에 자세한 내용은 참조 [ASP.NET Caching 개요](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example inserts the sum of two integers into the <xref:System.Web.Caching.Cache?displayProperty=fullName> object using the Cache property. It then retrieves the value using the <xref:System.Web.Caching.Cache.Get%2A?displayProperty=fullName> method and writes it to a <xref:System.Web.UI.WebControls.Label> Web server control.  \n  \n [!code-vb[System.Web.Page.Cache_Replacement#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.cache_1.aspx)]\n [!code-cs[System.Web.Page.Cache_Replacement#1](~/add/codesnippet/csharp/p-system.web.ui.page.cache_1.aspx)]"
  syntax:
    content: public System.Web.Caching.Cache Cache { get; }
    return:
      type: System.Web.Caching.Cache
      description: "<xref href=&quot;System.Web.Caching.Cache&quot;> </xref> 페이지의 응용 프로그램과 관련 된 합니다."
  overload: System.Web.UI.Page.Cache*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "인스턴스 <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> 생성 되지 않습니다."
  platform:
  - net462
- uid: System.Web.UI.Page.ClientQueryString
  id: ClientQueryString
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ClientQueryString
  nameWithType: Page.ClientQueryString
  fullName: System.Web.UI.Page.ClientQueryString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "요청된 된 URL의 쿼리 문자열 부분을 가져옵니다."
  remarks: "ClientQueryString 속성 브라우저에서 요청 된 URL의 쿼리 문자열 부분을 포함 합니다. 예를 들어 &quot;http://www.contoso.com/default.aspx?id=100&quot; 요청된 된 URL을 사용 하는 경우 ClientQueryString 속성이 포함 됩니다 &quot;id =&100;&quot; 입니다. ClientQueryString 속성은 암호화 됩니다. 사용 하 여는 <xref:System.Web.HttpServerUtility.UrlDecode%2A?displayProperty=fullName>메서드 쿼리 문자열을 디코딩하.</xref:System.Web.HttpServerUtility.UrlDecode%2A?displayProperty=fullName>"
  syntax:
    content: public string ClientQueryString { get; }
    return:
      type: System.String
      description: "요청된 된 URL의 쿼리 문자열 부분입니다."
  overload: System.Web.UI.Page.ClientQueryString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ClientScript
  id: ClientScript
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ClientScript
  nameWithType: Page.ClientScript
  fullName: System.Web.UI.Page.ClientScript
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.ClientScriptManager&quot;> </xref> 관리, 등록 및 페이지에 스크립트를 추가 하는 데 사용 되는 개체입니다."
  remarks: "가져오려는 ClientScript 속성을 사용 하 여 한 <xref:System.Web.UI.ClientScriptManager>관리, 등록, 웹 페이지에 스크립트를 추가 하는 데 사용할 수 있습니다.</xref:System.Web.UI.ClientScriptManager> 자세한 내용은 <xref:System.Web.UI.ClientScriptManager>클래스</xref:System.Web.UI.ClientScriptManager> 를 참조 하십시오.       <xref:System.Web.UI.ClientScriptManager>클래스는의 새로운 [!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)] 하 고 대체 <xref:System.Web.UI.Page>클래스 메서드는 이제 사용 되지 하는 스크립트를 관리 하기 위한.</xref:System.Web.UI.Page> </xref:System.Web.UI.ClientScriptManager>"
  example:
  - For an example, see the <xref:System.Web.UI.ClientScriptManager> class overview topic.
  syntax:
    content: public System.Web.UI.ClientScriptManager ClientScript { get; }
    return:
      type: System.Web.UI.ClientScriptManager
      description: "A <xref href=&quot;System.Web.UI.ClientScriptManager&quot;></xref> object."
  overload: System.Web.UI.Page.ClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ClientTarget
  id: ClientTarget
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ClientTarget
  nameWithType: Page.ClientTarget
  fullName: System.Web.UI.Page.ClientTarget
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "브라우저 기능의 자동 검색을 재정의 하 고 특정 브라우저 클라이언트에 대 한 페이지가 렌더링 되는 방법을 지정할 수 있도록 하는 값을 가져오거나 설정 합니다."
  remarks: "ClientTarget 속성을 설정 하지 않으면는 <xref:System.Web.HttpBrowserCapabilities>연관 된 개체는 <xref:System.Web.UI.Page.Request%2A?displayProperty=fullName>속성은 클라이언트 브라우저의 기능을 반영 합니다.</xref:System.Web.UI.Page.Request%2A?displayProperty=fullName> </xref:System.Web.HttpBrowserCapabilities> 이 속성을 설정한 경우 클라이언트 브라우저 검색이 비활성화 되 고 브라우저 기능을 제공 하는 값 (별칭)와 관련 된 사용 됩니다.       일반 사용자 에이전트 문자열에 대 한 약식으로 사용할 수 있는 다음과 같은 기본 별칭을 정의 하는 웹 서버 컴퓨터에서 루트 Web.config 구성 파일:- `uplevel`, Internet Explorer 6.0에 해당 하는 브라우저 기능을 지정 하는 합니다.      - `downlevel`, 클라이언트 스크립트를 지원 하지 않는 이전 버전의 브라우저에 해당 하는 브라우저 기능을 지정 하는 합니다. 클라이언트 스크립트를 사용 하지 않도록 설정 하는 브라우저에서 웹 페이지 작동 방식을 확인 하려면이 별칭을 사용할 수 있습니다.       프로그래밍 방식으로이 속성을 사용 하 여 별칭을 설정할 수 있습니다 또는 선언적으로 사용 하 여 설정할 수 있습니다는 `ClientTarget` 지시문의 특성입니다.       에 추가 별칭을 정의할 수 있습니다는 `clientTarget` 응용 프로그램 수준 Web.config 파일의 섹션입니다. 자세한 내용은 참조 [clientTarget 요소 (ASP.NET 설정 스키마)](http://msdn.microsoft.com/en-us/17a0fa6e-a065-49cc-b900-ef73eda6a922)합니다."
  example:
  - "The following code example defines an `ie302` alias and includes sections needed to configure your application in its Web.config file. Using this alias, you can set the ClientTarget property to `ie302` and customize pages specifically for Internet Explorer 3.02 browsers.  \n  \n```  \n<configuration>  \n  <system.web>  \n   <clientTarget>  \n    <add alias=\"ie302\" useragent=\"Mozilla/2.0 (compatible; MSIE 3.02; Windows NT 3.5)\" />  \n   </clientTarget>  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public string ClientTarget { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>브라우저 기능을 재정의 하려면 지정 하는.</xref:System.String>"
  overload: System.Web.UI.Page.ClientTarget*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.CodePage
  id: CodePage
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: CodePage
  nameWithType: Page.CodePage
  fullName: System.Web.UI.Page.CodePage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "현재 코드 페이지 식별자를 설정 <xref href=&quot;System.Web.UI.Page&quot;> </xref>합니다."
  remarks: "대부분의 경우에서 코드에서이 속성을 설정 하지 마십시오. 설정 된 `CodePage` 특성.aspx 파일에 지시문을 사용 하 여 원하는 값으로. 페이지가 요청 될 때 동적으로 생성 된 클래스 속성을 설정 합니다."
  syntax:
    content: public int CodePage { get; set; }
    return:
      type: System.Int32
      description: "현재 코드 페이지 식별자를 나타내는 정수 <xref href=&quot;System.Web.UI.Page&quot;> </xref>합니다."
  overload: System.Web.UI.Page.CodePage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ContentType
  id: ContentType
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ContentType
  nameWithType: Page.ContentType
  fullName: System.Web.UI.Page.ContentType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "에 대 한 HTTP MIME 형식을 설정 하는 <xref href=&quot;System.Web.HttpResponse&quot;> </xref> 페이지와 관련 된 개체입니다."
  remarks: "대부분의 경우에서 코드에서이 속성을 설정 하지 마십시오. 설정 된 `ContentType` .aspx 파일에 지시문을 사용 하 여 특성입니다. 페이지가 요청 될 때 동적으로 생성 된 클래스 속성을 설정 합니다."
  syntax:
    content: public string ContentType { get; set; }
    return:
      type: System.String
      description: "현재 페이지와 연관 된 HTTP MIME 형식입니다."
  overload: System.Web.UI.Page.ContentType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Context
  id: Context
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Context
  nameWithType: Page.Context
  fullName: System.Web.UI.Page.Context
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "가져옵니다는 <xref href=&quot;System.Web.HttpContext&quot;> </xref> 페이지와 관련 된 개체입니다."
  remarks: "이 속성 페이지가 요청, 응답, 세션 및 응용 프로그램에 대 한 정보를 포함 하 여, 실행 컨텍스트를 프로그래밍 방식으로 액세스할 수 있습니다."
  example:
  - "The following code example uses the Context property to access the <xref:System.Web.HttpContext.AddError%2A?displayProperty=fullName> and <xref:System.Web.HttpContext.ClearError%2A?displayProperty=fullName> methods and the <xref:System.Web.HttpContext.AllErrors%2A?displayProperty=fullName> property. The example creates three custom exceptions using the <xref:System.Web.HttpContext.AddError%2A> method and uses the <xref:System.Web.HttpContext.AllErrors%2A> property to load these exceptions to an array. It then writes the array to the containing page and uses the <xref:System.Web.HttpContext.ClearError%2A> method to clear all the errors from the Context property.  \n  \n [!code-vb[System.Web.UI.Page.Context#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.con_1.aspx)]\n [!code-cs[System.Web.UI.Page.Context#1](~/add/codesnippet/csharp/p-system.web.ui.page.con_1.aspx)]"
  syntax:
    content: protected override System.Web.HttpContext Context { get; }
    return:
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> 현재 페이지와 관련 된 정보가 포함 된 개체입니다."
  overload: System.Web.UI.Page.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)
  id: CreateHtmlTextWriter(System.IO.TextWriter)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: CreateHtmlTextWriter(TextWriter)
  nameWithType: Page.CreateHtmlTextWriter(TextWriter)
  fullName: System.Web.UI.Page.CreateHtmlTextWriter(TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "만듭니다는 <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> 페이지의 내용을 렌더링 하는 개체입니다."
  remarks: "CreateHtmlTextWriter 메서드를 만듭니다는 <xref:System.IO.TextWriter>통해는 <xref:System.Web.HttpRequest.Browser%2A>속성은 <xref:System.Web.HttpContext.Request%2A>페이지 요청에 연결 된 개체입니다.</xref:System.Web.HttpContext.Request%2A> </xref:System.Web.HttpRequest.Browser%2A> </xref:System.IO.TextWriter> 에 대 한 참조를 추가할 수는 <xref:System.Web.UI.HtmlTextWriter>에 `browserCaps` 구성 섹션.</xref:System.Web.UI.HtmlTextWriter> 사용자 지정 조회를 수행 하려면 CreateHtmlTextWriter 메서드를 재정의 합니다."
  example:
  - "The following code example uses the CreateHtmlTextWriter method to create an instance of a custom <xref:System.Web.UI.HtmlTextWriter> object named `MyHtmlTextWriter`. The CreateHtmlTextWriter method is overridden in the `MyPage` class, which is derived from <xref:System.Web.UI.Page>, so that `MyHtmlTextWriter` renders ASP.NET server controls when the page is requested. Note that this example will prevent adapter <xref:System.IO.TextWriter> behavior.  \n  \n [!code-cs[Page_CreateHtmlTextWriter#2](~/add/codesnippet/csharp/m-system.web.ui.page.cre_1.cs)]\n [!code-vb[Page_CreateHtmlTextWriter#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.cre_1.vb)]"
  syntax:
    content: protected virtual System.Web.UI.HtmlTextWriter CreateHtmlTextWriter (System.IO.TextWriter tw);
    parameters:
    - id: tw
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>를 만드는 데 사용 된 <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>.</xref:System.IO.TextWriter>"
    return:
      type: System.Web.UI.HtmlTextWriter
      description: "An <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> or <xref href=&quot;System.Web.UI.Html32TextWriter&quot;></xref>."
  overload: System.Web.UI.Page.CreateHtmlTextWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)
  id: CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: CreateHtmlTextWriterFromType(TextWriter,Type)
  nameWithType: Page.CreateHtmlTextWriterFromType(TextWriter,Type)
  fullName: System.Web.UI.Page.CreateHtmlTextWriterFromType(TextWriter,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "지정 된 만듭니다 <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> 페이지의 내용을 렌더링 하는 개체입니다."
  remarks: "이 메서드는 페이지 어댑터에서 내부적으로 사용 됩니다."
  syntax:
    content: public static System.Web.UI.HtmlTextWriter CreateHtmlTextWriterFromType (System.IO.TextWriter tw, Type writerType);
    parameters:
    - id: tw
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>를 만드는 데 사용 된 <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>.</xref:System.IO.TextWriter>"
    - id: writerType
      type: System.Type
      description: "만들 텍스트 기록기의 형식입니다."
    return:
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> 페이지의 콘텐츠를 렌더링 합니다."
  overload: System.Web.UI.Page.CreateHtmlTextWriterFromType*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code> writerType </code> 매개 변수가 잘못 된 형식으로 설정 됩니다."
  platform:
  - net462
- uid: System.Web.UI.Page.Culture
  id: Culture
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Culture
  nameWithType: Page.Culture
  fullName: System.Web.UI.Page.Culture
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "설정에 대 한 문화권 ID는 <xref href=&quot;System.Threading.Thread&quot;> </xref> 페이지와 관련 된 개체입니다."
  remarks: "설정의 `Culture` .aspx 파일의 지시어의 경우에 특성입니다. 페이지가 요청 될 때 동적으로 생성 된 클래스는이 속성의 값을 설정 합니다. 또한 프로그래밍 방식으로 또는 Web.config 파일의 요소에서 Culture 속성의 값에 설정할 수 명시적으로 합니다.       문화권 속성은 페이지 콘텐츠를 지역화 하는 데 사용 됩니다. 모든 유효한 문화권 ID에 설정할 수 있습니다. 예를 들어는 `en-us` 미국 영어, while에 페이지를 설정 하는 문화권 ID는 `fr` 문화권 ID를 프랑스어로 페이지를 설정 합니다. 값을 설정할 수도 `auto` 기본 설정 언어를 설정의 브라우저의 자동 검색을 수행 합니다. 기본값은 같은 자동 언어 검색을 한정 수 `auto:en-us`합니다.       자세한 내용은 참조는 <xref:System.Globalization.CultureInfo>클래스 개요.</xref:System.Globalization.CultureInfo>"
  syntax:
    content: public string Culture { get; set; }
    return:
      type: System.String
      description: "유효한 문화권 id입니다."
  overload: System.Web.UI.Page.Culture*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.DesignerInitialize
  id: DesignerInitialize
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: DesignerInitialize()
  nameWithType: Page.DesignerInitialize()
  fullName: System.Web.UI.Page.DesignerInitialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "인스턴스를 초기화는 <xref href=&quot;System.Web.UI.Page&quot;> </xref> RAD 디자이너에 필요한 클래스입니다. 이 메서드는 디자인 타임에만 사용 됩니다."
  syntax:
    content: public void DesignerInitialize ();
    parameters: []
  overload: System.Web.UI.Page.DesignerInitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.DeterminePostBackMode
  id: DeterminePostBackMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: DeterminePostBackMode()
  nameWithType: Page.DeterminePostBackMode()
  fullName: System.Web.UI.Page.DeterminePostBackMode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "반환 된 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> POST 또는 GET 명령을 사용 하 여 페이지에 다시 게시 된 데이터의 합니다."
  remarks: "DeterminePostBackMode 메서드는 <xref:System.Collections.Specialized.NameValueCollection>개체 데이터를 포함 하는 페이지에 다시 게시 합니다.</xref:System.Collections.Specialized.NameValueCollection> 페이지의 현재 상태 보기 상태 및 EVENTTARGET 포스트백 이벤트가 발생 했는지 확인 하는 데 사용 되는 필드를 숨깁니다. <xref:System.Web.UI.Page.IsPostBack%2A>DeterminePostBackMode 메서드를 호출할 때 속성을 설정 합니다.</xref:System.Web.UI.Page.IsPostBack%2A>"
  syntax:
    content: protected virtual System.Collections.Specialized.NameValueCollection DeterminePostBackMode ();
    parameters: []
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 양식 데이터를 포함 하는 개체입니다. 반환 되는 양식 정보에 POST 명령을 사용 하는 다시 게시 하는 경우는 <xref:System.Web.UI.Page.Context*>개체입니다.</xref:System.Web.UI.Page.Context*> GET 명령을 사용 하 여 포스트백 쿼리 문자열 정보 반환 됩니다. 페이지가 처음으로 요청 하면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 반환 됩니다."
  overload: System.Web.UI.Page.DeterminePostBackMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.DeterminePostBackModeUnvalidated
  id: DeterminePostBackModeUnvalidated
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: DeterminePostBackModeUnvalidated()
  nameWithType: Page.DeterminePostBackModeUnvalidated()
  fullName: System.Web.UI.Page.DeterminePostBackModeUnvalidated()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "요청에서 ASP.NET 요청 유효성 검사를 수행 하지 않고도 POST 또는 GET 명령을 사용 하 여 페이지에 게시 된 데이터의 이름 값 컬렉션을 반환 합니다."
  remarks: "자세한 내용은 <xref:System.Web.UnvalidatedRequestValues>클래스</xref:System.Web.UnvalidatedRequestValues> 를 참조 하십시오."
  syntax:
    content: protected virtual System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated ();
    parameters: []
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "유효성이 검사 되지 않은 폼 데이터를 포함 하는 개체입니다."
  overload: System.Web.UI.Page.DeterminePostBackModeUnvalidated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.EnableEventValidation
  id: EnableEventValidation
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: EnableEventValidation
  nameWithType: Page.EnableEventValidation
  fullName: System.Web.UI.Page.EnableEventValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지에서 포스트백 및 콜백 이벤트의 유효성을 검사 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "EnableEventValidation 속성이로 설정 되 면 `true`, ASP.NET 컨트롤 이벤트를 제어 하 여 렌더링 된 사용자 인터페이스에서 시작 되었으며 있는지 유효성을 검사 합니다. 컨트롤을 렌더링 하는 동안 해당 이벤트를 등록 하 고 이벤트 처리를 다시 게시 또는 콜백 하는 동안 유효성을 검사 합니다. 예를 들어 페이지가 렌더링 되 고 4 옵션 번호를 지정 하는 다시 게시 요청을 받을 경우 1, 2 또는 3 번호가 지정 옵션을 포함 하는 목록 컨트롤을 ASP.NET 예외를 발생 시킵니다. 기본적으로이 기능을 사용 하는 ASP.NET의 모든 이벤트 구동 하는 컨트롤입니다.       사용 해야 런타임 시 클라이언트에서 컨트롤을 변경 하는 클라이언트 스크립트를 작성 하는 경우는 <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>false 이벤트 유효성 검사 오류를 방지 하려면 메서드.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>      > [!IMPORTANT] >이 기능은 권한이 없는 사용자나 악의적인 게시 요청 및 콜백이의 위험을 줄입니다. 이벤트 유효성 검사를 해제 하지 않는 것이 좋습니다.       설정 하 여 EnableEventValidation 속성을 설정 하면는 `enableEventValidation` 지시문의 특성 또는 `enableEventValidation` Web.config 파일에서 요소의 특성입니다. 코드에서이 속성을 설정 하는 경우 페이지를 초기화 하기 전에 설정 해야 합니다."
  syntax:
    content: public virtual bool EnableEventValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>페이지 다시 게시 및 콜백 이벤트;의 유효성을 검사 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Page.EnableEventValidation*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "페이지가 초기화 된 후 EnableEventValidation 속성이 설정 되었습니다."
  platform:
  - net462
- uid: System.Web.UI.Page.EnableViewState
  id: EnableViewState
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: EnableViewState
  nameWithType: Page.EnableViewState
  fullName: System.Web.UI.Page.EnableViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "가져오거나 페이지가 해당 보기 상태를 유지 하 고 제어 하는 모든 서버의 뷰 상태 여부를 나타내는 값을 포함, 현재 페이지 요청이 끝날 때 합니다."
  remarks: "뷰 상태를 사용 하지 않도록 설정 하는 이유는 방법에 대 한 내용은 <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName>.</xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName> 을 참조 하십시오.       경우에 EnableViewState `false`, 페이지에서 포스트백을 검색 하려면 ASP.NET에서 사용 되는 숨겨진된 보기 상태 필드가 포함 될 수 있습니다."
  example:
  - "The following code example sets the EnableViewState property to `false` when the page is loaded. This disables view state for the <xref:System.Web.UI.Page> object, meaning that neither view-state information for the page nor any controls contained by the page are saved.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Page_EnableViewState_ReSubmit_1#1](~/add/codesnippet/csharp/p-system.web.ui.page.ena_1.cs)]\n [!code-vb[Page_EnableViewState_ReSubmit_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.ena_1.vb)]"
  syntax:
    content: public override bool EnableViewState { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>페이지가 해당 보기 상태를 유지 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Page.EnableViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.EnableViewStateMac
  id: EnableViewStateMac
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: EnableViewStateMac
  nameWithType: Page.EnableViewStateMac
  fullName: System.Web.UI.Page.EnableViewStateMac
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지가 클라이언트에서 다시 게시 될 때 페이지의 뷰 상태에 ASP.NET 메시지 인증 코드 (MAC)에서 확인할 지를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "뷰 상태 MAC 브라우저에 페이지를 보낼 때 페이지의 뷰 상태를 유지 되는 숨겨진 변수의 암호화 된 버전이 있습니다. 이 속성이로 설정 된 경우 `true`, 암호화 된 뷰 상태는 클라이언트에 변경 되었는지 하지 확인 합니다.       코드에서이 속성을 설정 하지 마십시오. 설정 된 `EnableViewStateMac` .aspx 파일에 지시문을 사용 하 여 특성입니다. 페이지가 요청 될 때 동적으로 생성 된 클래스 속성을 설정 합니다.      > [!IMPORTANT] >이 특성 설정할 수 없습니다 `false` 는 응용 프로그램 또는 페이지 뷰 상태를 사용 하지 않는 경우에 프로덕션 웹 사이트에 있습니다. 뷰 상태 MAC을 사용 하면 보안 뷰 상태 뿐만 아니라 다른 ASP.NET 기능을 확인 합니다."
  syntax:
    content: public bool EnableViewStateMac { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>뷰 상태 MAC 검사 하 고 인코딩해야; 해야 합니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Page.EnableViewStateMac*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ErrorPage
  id: ErrorPage
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ErrorPage
  nameWithType: Page.ErrorPage
  fullName: System.Web.UI.Page.ErrorPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "오류 리디렉션되는 페이지를 요청 하는 브라우저는 처리 되지 않은 예외가 발생할 경우를 가져오거나 설정 합니다."
  remarks: ''
  example:
  - >-
    [!code-vb[Page_ErrorPage#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.err_1.aspx)]
     [!code-cs[Page_ErrorPage#1](~/add/codesnippet/csharp/p-system.web.ui.page.err_1.aspx)]
  syntax:
    content: public string ErrorPage { get; set; }
    return:
      type: System.String
      description: "오류 페이지를 브라우저는 리디렉션됩니다."
  overload: System.Web.UI.Page.ErrorPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ExecuteRegisteredAsyncTasks
  id: ExecuteRegisteredAsyncTasks
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ExecuteRegisteredAsyncTasks()
  nameWithType: Page.ExecuteRegisteredAsyncTasks()
  fullName: System.Web.UI.Page.ExecuteRegisteredAsyncTasks()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "비동기 작업의 실행을 시작 합니다."
  remarks: "<xref:System.Web.UI.PageAsyncTask>클래스</xref:System.Web.UI.PageAsyncTask> 를 사용 하 여 비동기 작업을 정의 합니다. 작업이 된 후 정의 된 페이지를 사용 하 여 등록 된 <xref:System.Web.UI.Page.RegisterAsyncTask%2A>메서드를 비동기 작업을 시작할 ExecuteRegisteredAsyncTasks 메서드를 호출할 수 있습니다.</xref:System.Web.UI.Page.RegisterAsyncTask%2A>       메서드는 등록 된 비동기 작업을 있더라도 될 때 페이지 처리의 지점에 자동으로 호출 ExecuteRegisteredAsyncTasks 동기 페이지에 대 한 호출 됩니다. 이 자동 ExecuteRegisteredAsyncTasks로 호출 하기 바로 전에 발생는 <xref:System.Web.UI.Page.PreRenderComplete>이벤트.</xref:System.Web.UI.Page.PreRenderComplete> 이 메서드에 대 한 자동 호출 외에 호출할 하려는 작업에 대 한 ExecuteRegisteredAsyncTasks 메서드를 호출 합니다. Note ExecuteRegisteredAsyncTasks을 두 번 이상 호출할 수 있습니다. 경우에 비동기 작업이 한 번만 실행 되지 것입니다.       <xref:System.Web.UI.Page.AsyncTimeout%2A>속성이 ExecuteRegisteredAsyncTasks 메서드를 호출할 때마다 다시 설정 됩니다.</xref:System.Web.UI.Page.AsyncTimeout%2A> 마지막 값은 <xref:System.Web.UI.Page.AsyncTimeout%2A>메서드는 ExecuteRegisteredAsyncTasks를 호출 하기 전에 우선 순위를 사용 합니다.</xref:System.Web.UI.Page.AsyncTimeout%2A> 비동기 작업을 사용 하는 경우 보다 더 큰 <xref:System.Web.UI.Page.AsyncTimeout%2A>, ExecuteRegisteredAsyncTasks 호출 하는 동안 호출 된 이후 작업 즉시 초과.</xref:System.Web.UI.Page.AsyncTimeout%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.Page.AsyncTimeout%2A> property with the ExecuteRegisteredAsyncTasks and <xref:System.Web.UI.Page.RegisterAsyncTask%2A> methods. Note the use of beginning, ending, and time-out handlers. In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the <xref:System.Web.UI.Page.AsyncTimeout%2A> property. In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time.  \n  \n [!code-vb[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.exe_1.aspx)]\n [!code-cs[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/csharp/m-system.web.ui.page.exe_1.aspx)]  \n  \n [!code-cs[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/csharp/m-system.web.ui.page.exe_2.cs)]\n [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.exe_2.vb)]"
  syntax:
    content: public void ExecuteRegisteredAsyncTasks ();
    parameters: []
  overload: System.Web.UI.Page.ExecuteRegisteredAsyncTasks*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "비동기 작업에 예외가 있습니다."
  platform:
  - net462
- uid: System.Web.UI.Page.FileDependencies
  id: FileDependencies
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: FileDependencies
  nameWithType: Page.FileDependencies
  fullName: System.Web.UI.Page.FileDependencies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "파일의 배열을 설정 현재 <xref href=&quot;System.Web.HttpResponse&quot;> </xref> 개체에 따라 달라 집니다."
  remarks: "이 속성이 더 이상 사용 되지 않습니다. 사용 된 <xref:System.Web.HttpResponse.AddFileDependencies%2A>메서드 또는 <xref:System.Web.HttpResponse.AddFileDependency%2A>의 메서드는 <xref:System.Web.HttpResponse>클래스를 대신 합니다.</xref:System.Web.HttpResponse> </xref:System.Web.HttpResponse.AddFileDependency%2A> </xref:System.Web.HttpResponse.AddFileDependencies%2A>       대부분의 경우에서 코드에서이 속성을 설정 하지 마십시오. 설정의 `FileDependencies` 특성을 `true` .aspx 파일에 지시문을 사용 합니다. 페이지가 요청 될 때 동적으로 생성 된 클래스 속성을 설정 합니다."
  syntax:
    content: protected System.Collections.ArrayList FileDependencies { set; }
    return:
      type: System.Collections.ArrayList
      description: "파일의 배열입니다 현재 <xref href=&quot;System.Web.HttpResponse&quot;> </xref> 개체에 따라 달라 집니다."
  overload: System.Web.UI.Page.FileDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.FindControl(System.String)
  id: FindControl(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: FindControl(String)
  nameWithType: Page.FindControl(String)
  fullName: System.Web.UI.Page.FindControl(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "지정한 식별자를 가진 서버 컨트롤에 대 한 페이지 명명 컨테이너를 검색 합니다."
  remarks: "FindControl 메서드 액세스 제어는 데 사용할 수 있는 <xref:System.Web.UI.Control.ID%2A>디자인 타임에를 사용할 수 없습니다.</xref:System.Web.UI.Control.ID%2A> 메서드만 있는 페이지의 즉시, 또는 최상위 수준 컨테이너 검색; 명명 컨테이너는 페이지에 포함 된 컨트롤에 대 한 재귀적으로 검색을 되지 않습니다. 하위 수준 명명 컨테이너의 컨트롤에 액세스 하려면 호출 된 `FindControl` 해당 컨테이너의 합니다."
  example:
  - "The following code example demonstrates how to use the FindControl method to locate controls inside templates. In this example, two <xref:System.Web.UI.WebControls.Repeater> controls are defined; each shows a different way to catch the <xref:System.Web.UI.WebControls.LinkButton.Click> event of a <xref:System.Web.UI.WebControls.LinkButton> inside the repeater item template.  \n  \n [!code-cs[System.Web.UI.Page_FindControl#1](~/add/codesnippet/csharp/m-system.web.ui.page.fin_1.aspx)]\n [!code-vb[System.Web.UI.Page_FindControl#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.fin_1.aspx)]"
  syntax:
    content: public override System.Web.UI.Control FindControl (string id);
    parameters:
    - id: id
      type: System.String
      description: "찾을 컨트롤에 대 한 식별자입니다."
    return:
      type: System.Web.UI.Control
      description: "지정된 된 컨트롤 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 지정된 된 컨트롤이 존재 하지 않는 경우."
  overload: System.Web.UI.Page.FindControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Form
  id: Form
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Form
  nameWithType: Page.Form
  fullName: System.Web.UI.Page.Form
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지에 대 한 HTML 폼을 가져옵니다."
  remarks: "Form 속성을 사용 하 여 메서드 및 속성을 액세스 하는 <xref:System.Web.UI.HtmlControls.HtmlForm>페이지 컨트롤 계층의 기반이 되는 개체입니다.</xref:System.Web.UI.HtmlControls.HtmlForm>"
  syntax:
    content: public System.Web.UI.HtmlControls.HtmlForm Form { get; }
    return:
      type: System.Web.UI.HtmlControls.HtmlForm
      description: "<xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;> </xref> 페이지와 관련 된 개체입니다."
  overload: System.Web.UI.Page.Form*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.FrameworkInitialize
  id: FrameworkInitialize
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: FrameworkInitialize()
  nameWithType: Page.FrameworkInitialize()
  fullName: System.Web.UI.Page.FrameworkInitialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지의 선언적 특성에 따라 페이지를 생성 하는 동안 제어 트리를 초기화 합니다."
  remarks: "FrameworkInitialize 메서드 초기화에서 <xref:System.Web.UI.Page>개체 및 페이지의 선언적 특성에 따라 제어 트리를 만듭니다.</xref:System.Web.UI.Page> 에 대 한 페이지 구문 분석 및 코드 생성 하 여 FrameworkInitialize 메서드를 재정의 <xref:System.Web.UI.Page>선언적 페이지에 대 한 클래스입니다.</xref:System.Web.UI.Page> 일반적으로 있습니다 해서는 안이 메서드를 재정의 합니다. 를 재정의 하는 경우에 기본 클래스의 FrameworkInitialize 메서드를 호출 해야 합니다."
  syntax:
    content: protected override void FrameworkInitialize ();
    parameters: []
  overload: System.Web.UI.Page.FrameworkInitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetDataItem
  id: GetDataItem
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetDataItem()
  nameWithType: Page.GetDataItem()
  fullName: System.Web.UI.Page.GetDataItem()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "데이터 바인딩 컨텍스트 스택의 맨 위에 있는 데이터 항목을 가져옵니다."
  syntax:
    content: public object GetDataItem ();
    parameters: []
    return:
      type: System.Object
      description: "데이터 바인딩 컨텍스트 스택의 맨 위에 있는 개체입니다."
  overload: System.Web.UI.Page.GetDataItem*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "페이지에 대 한 데이터 바인딩 컨텍스트가 없습니다."
  platform:
  - net462
- uid: System.Web.UI.Page.GetPostBackClientEvent(System.Web.UI.Control,System.String)
  id: GetPostBackClientEvent(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetPostBackClientEvent(Control,String)
  nameWithType: Page.GetPostBackClientEvent(Control,String)
  fullName: System.Web.UI.Page.GetPostBackClientEvent(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "지정 된 이벤트 인수를 사용 하 고 지정된 된 컨트롤에 대 한 서버에 다시 게시 하는 클라이언트 이벤트에 사용할 수 있는 참조를 가져옵니다."
  remarks: "참조는 <xref:System.Web.UI.ClientScriptManager>이 사용 되지 않는 멤버에 대 한 대안에 대 한 클래스입니다.</xref:System.Web.UI.ClientScriptManager>"
  syntax:
    content: public string GetPostBackClientEvent (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "클라이언트 이벤트 포스트백을 수신 하는 서버 컨트롤입니다."
    - id: argument
      type: System.String
      description: "A <xref:System.String>에 전달 되는 &lt;xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A?displayProperty=fullName&gt;.</xref:System.String>"
    return:
      type: System.String
      description: "클라이언트 이벤트를 나타내는 문자열입니다."
  overload: System.Web.UI.Page.GetPostBackClientEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  id: GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetPostBackClientHyperlink(Control,String)
  nameWithType: Page.GetPostBackClientHyperlink(Control,String)
  fullName: System.Web.UI.Page.GetPostBackClientHyperlink(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "참조를 가져옵니다 <xref uid=&quot;langword_csharp_javascript:&quot; name=&quot;javascript:&quot; href=&quot;&quot;> </xref> 지정 된 이벤트 인수를 사용 하 고 지정된 된 컨트롤에 대 한 서버에 다시 게시 하는 클라이언트 이벤트에 사용할 수 있는,의 시작 부분에 있습니다."
  remarks: "참조는 <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A>방법이 사용 되지 않는 멤버에 대 한 대안입니다.</xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A>"
  syntax:
    content: public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "포스트백을 처리 하는 서버 컨트롤입니다."
    - id: argument
      type: System.String
      description: "서버 컨트롤에는 매개 변수 전달."
    return:
      type: System.String
      description: "대상 컨트롤의 ID 및 이벤트 인수를 포함 하는 포스트백 함수에 JavaScript 호출을 나타내는 문자열입니다."
  overload: System.Web.UI.Page.GetPostBackClientHyperlink*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)
  id: GetPostBackEventReference(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetPostBackEventReference(Control)
  nameWithType: Page.GetPostBackEventReference(Control)
  fullName: System.Web.UI.Page.GetPostBackEventReference(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "서버에 포스트백 발생 하는 클라이언트 이벤트에 사용할 수 있는 문자열을 반환 합니다. 참조 문자열은 정의에서 지정 된 <xref href=&quot;System.Web.UI.Control&quot;> </xref> 개체입니다."
  remarks: "이 메서드는 더 이상 사용 되지 않습니다. 사용 된 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>에서 메서드는 <xref:System.Web.UI.ClientScriptManager>클래스를 대신 합니다.</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>"
  example:
  - >-
    [!code-cs[Page_GetPostBackEventReference#2](~/add/codesnippet/csharp/m-system.web.ui.page.get_1_1.cs)]
     [!code-vb[Page_GetPostBackEventReference#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.get_1_1.vb)]
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "서버에 다시 게시를 처리 하는 서버 컨트롤입니다."
    return:
      type: System.String
      description: "클라이언트에서 스크립트로 처리 될 때는 문자열입니다 포스트백을 시작 합니다."
  overload: System.Web.UI.Page.GetPostBackEventReference*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)
  id: GetPostBackEventReference(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetPostBackEventReference(Control,String)
  nameWithType: Page.GetPostBackEventReference(Control,String)
  fullName: System.Web.UI.Page.GetPostBackEventReference(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "서버에 포스트백 발생 하는 클라이언트 이벤트에 사용할 수 있는 문자열을 반환 합니다. 참조 문자열이 포스트백 및 추가 이벤트 정보에 대 한 문자열 인수를 처리 하는 지정 된 컨트롤에 의해 정의 됩니다."
  remarks: "이 메서드는 더 이상 사용 되지 않습니다. 사용 된 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>에서 메서드는 <xref:System.Web.UI.ClientScriptManager>클래스를 대신 합니다.</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>"
  example:
  - >-
    [!code-cs[Page_GetPostBackEventReference#1](~/add/codesnippet/csharp/3b7b8690-0737-43de-b442-_1.cs)]
     [!code-vb[Page_GetPostBackEventReference#1](~/add/codesnippet/visualbasic/3b7b8690-0737-43de-b442-_1.vb)]
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "포스트백을 처리 하는 서버 컨트롤입니다."
    - id: argument
      type: System.String
      description: "서버 컨트롤에는 매개 변수 전달."
    return:
      type: System.String
      description: "클라이언트에서 스크립트로 처리 될 때는 문자열입니다 포스트백을 시작 합니다."
  overload: System.Web.UI.Page.GetPostBackEventReference*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetTypeHashCode
  id: GetTypeHashCode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetTypeHashCode()
  nameWithType: Page.GetTypeHashCode()
  fullName: System.Web.UI.Page.GetTypeHashCode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "에 의해 생성 된 해시 코드를 검색 <xref href=&quot;System.Web.UI.Page&quot;> </xref> 런타임에에서 생성 되는 개체입니다. 이 해시 코드는 고유 하 고 <xref href=&quot;System.Web.UI.Page&quot;> </xref> 개체의 컨트롤 계층 구조입니다."
  remarks: "이 메서드를 재정의 하지 마십시오."
  syntax:
    content: public virtual int GetTypeHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "런타임에 생성 된 해시 코드입니다. 기본값은 0입니다."
  overload: System.Web.UI.Page.GetTypeHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetValidators(System.String)
  id: GetValidators(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetValidators(String)
  nameWithType: Page.GetValidators(String)
  fullName: System.Web.UI.Page.GetValidators(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "지정 된 유효성 검사 그룹에 대 한 유효성 검사기를 컨트롤의 컬렉션을 반환 합니다."
  remarks: "GetValidators 메서드는 특정 유효성 검사 그룹에 연결 된 모든 유효성 검사 개체를 반환 합니다. 기본 유효성 검사 그룹을 반환할 수 있습니다 (사용 하지 않고 컨트롤와 관련 된 모든 유효성 검사 컨트롤의 `ValidationGroup` 속성 집합)을 설정 하 여는 `validationGroup` 매개 변수를 `null`합니다.       유효성 검사 그룹 구성원 확인을 위해 수집 및 호출을 통해 열거는 <xref:System.Web.UI.IValidator.Validate%2A>각 유효성 검사기의 메서드에서 반환 했습니다.</xref:System.Web.UI.IValidator.Validate%2A>"
  example:
  - "The following code example uses the GetValidators method to return the default validation group.  \n  \n [!code-vb[PageGetValidators#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.get_0_1.aspx)]\n [!code-cs[PageGetValidators#1](~/add/codesnippet/csharp/m-system.web.ui.page.get_0_1.aspx)]"
  syntax:
    content: public System.Web.UI.ValidatorCollection GetValidators (string validationGroup);
    parameters:
    - id: validationGroup
      type: System.String
      description: "반환할 유효성 검사 그룹 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 기본 유효성 검사 그룹 돌아갑니다."
    return:
      type: System.Web.UI.ValidatorCollection
      description: "A <xref href=&quot;System.Web.UI.ValidatorCollection&quot;> </xref> 지정 된 유효성 검사 그룹에 대 한 유효성 검사기 컨트롤이 들어 있는입니다."
  overload: System.Web.UI.Page.GetValidators*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetWrappedFileDependencies(System.String[])
  id: GetWrappedFileDependencies(System.String[])
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetWrappedFileDependencies(String[])
  nameWithType: Page.GetWrappedFileDependencies(String[])
  fullName: System.Web.UI.Page.GetWrappedFileDependencies(String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "가상 파일 위치 목록에 해당 하는 물리적 파일 이름 목록을 반환 합니다."
  remarks: "GetWrappedFileDependencies 메서드는 현재 페이지를 구성 하는 사용자 제어 파일 등 파일의 목록을 가져옵니다. 이러한 페이지 수정 되 면 전체 페이지 다음에 필요할 때가 컴파일됩니다. 이 메서드를 재정의 하지 마십시오."
  syntax:
    content: protected object GetWrappedFileDependencies (string[] virtualFileDependencies);
    parameters:
    - id: virtualFileDependencies
      type: System.String[]
      description: "가상 파일 위치는 문자열 배열입니다."
    return:
      type: System.Object
      description: "물리적 파일 위치 목록을 포함 하는 개체입니다."
  overload: System.Web.UI.Page.GetWrappedFileDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Header
  id: Header
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Header
  nameWithType: Page.Header
  fullName: System.Web.UI.Page.Header
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "경우에 페이지에 대 한 문서 헤더를 가져옵니다는 <xref uid=&quot;langword_csharp_head&quot; name=&quot;head&quot; href=&quot;&quot;> </xref> 으로 정의 된 요소는 <xref uid=&quot;langword_csharp_runat=server&quot; name=&quot;runat=server&quot; href=&quot;&quot;> </xref> 페이지 선언에서 합니다."
  remarks: "헤더 속성에 대 한 참조를 가져옵니다는 <xref:System.Web.UI.HtmlControls.HtmlHead>페이지에 대 한 문서 헤더 정보를 설정 하는 데 사용할 수 있는 개체입니다.</xref:System.Web.UI.HtmlControls.HtmlHead> <xref:System.Web.UI.HtmlControls.HtmlHead>스타일 시트, 스타일 규칙, 제목 및 메타 데이터를 같은 정보를 추가할 수 있습니다는 `head` 요소.</xref:System.Web.UI.HtmlControls.HtmlHead>      > [!NOTE] > 스타일의 메서드를 사용 하 여 프로그래밍 방식으로 추가 된 <xref:System.Web.UI.IStyleSheet>비동기 포스트백 도중 인터페이스가 지원 되지 않습니다.</xref:System.Web.UI.IStyleSheet> 웹 페이지에 AJAX 기능을 추가할 때 비동기 포스트백 전체 페이지를 업데이트 하지 않고 페이지의 영역을 업데이트 합니다. 자세한 내용은 참조 [Microsoft Ajax 개요](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to access the <xref:System.Web.UI.HtmlControls.HtmlHead> control programmatically using the Header property. A `title` element and `style` element are added to the `head` element of the page.  \n  \n [!code-cs[System.Web.UI.HtmlControls.HtmlHeadClass#1](~/add/codesnippet/csharp/p-system.web.ui.page.hea_1.aspx)]\n [!code-vb[System.Web.UI.HtmlControls.HtmlHeadClass#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.hea_1.aspx)]"
  syntax:
    content: public System.Web.UI.HtmlControls.HtmlHead Header { get; }
    return:
      type: System.Web.UI.HtmlControls.HtmlHead
      description: "<xref href=&quot;System.Web.UI.HtmlControls.HtmlHead&quot;> </xref> 페이지 머리글을 포함 합니다."
  overload: System.Web.UI.Page.Header*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ID
  id: ID
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ID
  nameWithType: Page.ID
  fullName: System.Web.UI.Page.ID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "특정 인스턴스에 대 한 식별자를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.Page&quot;> </xref> 클래스입니다."
  syntax:
    content: public override string ID { get; set; }
    return:
      type: System.String
      description: "인스턴스에 대 한 식별자는 <xref href=&quot;System.Web.UI.Page&quot;> </xref> 클래스입니다. 기본값은 &quot;_Page&quot;."
  overload: System.Web.UI.Page.ID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IdSeparator
  id: IdSeparator
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IdSeparator
  nameWithType: Page.IdSeparator
  fullName: System.Web.UI.Page.IdSeparator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지에 컨트롤에 대 한 고유 ID를 빌드할 때 컨트롤 식별자를 구분 하는 데 사용 하는 문자를 가져옵니다."
  syntax:
    content: public virtual char IdSeparator { get; }
    return:
      type: System.Char
      description: "컨트롤 식별자를 구분 하는 데 사용 되는 문자입니다. 기본값은 설정 하는 <xref href=&quot;System.Web.UI.Adapters.PageAdapter&quot;> </xref> 인스턴스 페이지를 렌더링 하 합니다. IdSeparator 서버 쪽 필드 이므로 수정할 수 없습니다."
  overload: System.Web.UI.Page.IdSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.InitComplete
  id: InitComplete
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitComplete
  nameWithType: Page.InitComplete
  fullName: System.Web.UI.Page.InitComplete
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지 초기화가 완료 되 면 발생 합니다."
  remarks: "InitComplete 이벤트 페이지의 초기화 단계가 끝날 때 호출 됩니다. 이 페이지의 수명 주기이 단계에서 선언 된 모든 페이지에 있는 컨트롤 초기화 되지만 페이지의 상태는 아직 채워지지 않습니다. 서버 컨트롤에 액세스할 수 있습니다 하지만 사용자에서 반환 된 정보가 아직 포함 되지 않습니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  syntax:
    content: public event EventHandler InitComplete;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.InitializeCulture
  id: InitializeCulture
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitializeCulture()
  nameWithType: Page.InitializeCulture()
  fullName: System.Web.UI.Page.InitializeCulture()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "설정의 <> </> *> 및 <> </> *> 페이지의 현재 스레드에 대 한 합니다."
  remarks: "InitializeCulture 메서드 코딩 논리가 포함 되어 있습니다. 컨트롤의 기능을 확장 하는 개발자는 <xref:System.Web.UI.Page>클래스를 초기화 하려면 InitializeCulture 메서드를 재정의할 수 있습니다는 <xref:System.Web.UI.Page.Culture%2A>및 <xref:System.Web.UI.Page.UICulture%2A>페이지에 대 한 정보.</xref:System.Web.UI.Page.UICulture%2A> </xref:System.Web.UI.Page.Culture%2A> </xref:System.Web.UI.Page>"
  syntax:
    content: protected virtual void InitializeCulture ();
    parameters: []
  overload: System.Web.UI.Page.InitializeCulture*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.InitOutputCache(System.Web.UI.OutputCacheParameters)
  id: InitOutputCache(System.Web.UI.OutputCacheParameters)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitOutputCache(OutputCacheParameters)
  nameWithType: Page.InitOutputCache(OutputCacheParameters)
  fullName: System.Web.UI.Page.InitOutputCache(OutputCacheParameters)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "현재 페이지 요청에 대 한 출력 캐시에 따라 초기화는 <xref href=&quot;System.Web.UI.OutputCacheParameters&quot;> </xref> 개체입니다."
  remarks: "이 메서드를 호출 하지 해야 합니다. 을 사용합니다 하려면 페이지에 대 한 출력 캐싱을 조작.aspx 파일 또는 메서드 및 <xref:System.Web.HttpCachePolicy>클래스</xref:System.Web.HttpCachePolicy> 의 속성에서 지시문 사용 통해 액세스할 수 `Response.Cache` 페이지의 코드 선언 블록 또는 코드 숨김 파일에서 구문입니다. 자세한 내용은 참조 [ASP.NET 페이지 캐싱](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: protected virtual void InitOutputCache (System.Web.UI.OutputCacheParameters cacheSettings);
    parameters:
    - id: cacheSettings
      type: System.Web.UI.OutputCacheParameters
      description: "<xref href=&quot;System.Web.UI.OutputCacheParameters&quot;> </xref> 캐시 설정이 들어 있는입니다."
  overload: System.Web.UI.Page.InitOutputCache*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The cache profile was not found.  \n  \n \\- or -  \n  \n A missing directive or configuration settings profile attribute."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "출력 캐시 설정 위치가 올바르지 않습니다."
  platform:
  - net462
- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  id: InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  nameWithType: Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "현재 페이지 요청에 대 한 출력 캐시를 초기화합니다."
  remarks: "이 메서드를 호출 하지 해야 합니다. 을 사용합니다 하려면 페이지에 대 한 출력 캐싱을 조작.aspx 파일 또는 메서드 및 <xref:System.Web.HttpCachePolicy>클래스</xref:System.Web.HttpCachePolicy> 의 속성에서 지시문 사용 통해 액세스할 수 `Response.Cache` 페이지의 코드에서 구문입니다. 자세한 내용은 참조 [ASP.NET 페이지 캐싱](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: protected virtual void InitOutputCache (int duration, string varyByHeader, string varyByCustom, System.Web.UI.OutputCacheLocation location, string varyByParam);
    parameters:
    - id: duration
      type: System.Int32
      description: "출력 캐시에 저장 된 개체는 유효한 시간의 양입니다."
    - id: varyByHeader
      type: System.String
      description: "출력 캐시에서 콘텐츠 헤더의 세미콜론으로 구분한 목록으로 달라 집니다."
    - id: varyByCustom
      type: System.String
      description: "<xref uid=&quot;langword_csharp_Vary&quot; name=&quot;Vary&quot; href=&quot;&quot;> </xref> HTTP 헤더입니다."
    - id: location
      type: System.Web.UI.OutputCacheLocation
      description: "중 하나는 <xref href=&quot;System.Web.UI.OutputCacheLocation&quot;> </xref> 값입니다."
    - id: varyByParam
      type: System.String
      description: "출력 캐시의 내용에 따라 달라 집니다는 GET 또는 POST 메서드에 전달 매개 변수 목록이 세미콜론으로 구분 됩니다."
  overload: System.Web.UI.Page.InitOutputCache*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "에 잘못 된 값이 지정 <code> location </code>합니다."
  platform:
  - net462
- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  id: InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  nameWithType: Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "현재 페이지 요청에 대 한 출력 캐시를 초기화합니다."
  remarks: "이 메서드를 호출 하지 해야 합니다. 을 사용합니다 하려면 페이지에 대 한 출력 캐싱을 조작.aspx 파일 또는 메서드 및 <xref:System.Web.HttpCachePolicy>클래스</xref:System.Web.HttpCachePolicy> 의 속성에서 지시문 사용 통해 액세스할 수 `Response.Cache` 페이지의 코드에서 구문입니다. 자세한 내용은 참조 [ASP.NET 페이지 캐싱](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: protected virtual void InitOutputCache (int duration, string varyByContentEncoding, string varyByHeader, string varyByCustom, System.Web.UI.OutputCacheLocation location, string varyByParam);
    parameters:
    - id: duration
      type: System.Int32
      description: "출력 캐시에 저장 된 개체는 유효한 시간의 양입니다."
    - id: varyByContentEncoding
      type: System.String
      description: "세미콜론으로 구분 된 목록이 문자 집합 (콘텐츠 인코딩) 출력 캐시에서 콘텐츠를 기준으로 달라 집니다."
    - id: varyByHeader
      type: System.String
      description: "출력 캐시에서 콘텐츠 헤더의 세미콜론으로 구분한 목록으로 달라 집니다."
    - id: varyByCustom
      type: System.String
      description: "<xref uid=&quot;langword_csharp_Vary&quot; name=&quot;Vary&quot; href=&quot;&quot;> </xref> HTTP 헤더입니다."
    - id: location
      type: System.Web.UI.OutputCacheLocation
      description: "중 하나는 <xref href=&quot;System.Web.UI.OutputCacheLocation&quot;> </xref> 값입니다."
    - id: varyByParam
      type: System.String
      description: "출력 캐시의 내용에 따라 달라 집니다는 GET 또는 POST 메서드에 전달 매개 변수 목록이 세미콜론으로 구분 됩니다."
  overload: System.Web.UI.Page.InitOutputCache*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "에 잘못 된 값이 지정 <code> location </code>합니다."
  platform:
  - net462
- uid: System.Web.UI.Page.IsAsync
  id: IsAsync
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsAsync
  nameWithType: Page.IsAsync
  fullName: System.Web.UI.Page.IsAsync
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지가 비동기적으로 처리 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: "웹 페이지 비동기 모드로 실행 되 고 있는지 여부를 확인 하려면 IsAsync 속성을 사용 합니다. 이 정보는 컨트롤 또는 코드 페이지에서 페이지 비동기 인지에 따라 해당 동작을 수정 해야 할 경우에 유용 합니다. 비동기 프로그래밍에 대 한 자세한 내용은 참조 [비동기 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public bool IsAsync { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>비동기 모드에 페이지인 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>;"
  overload: System.Web.UI.Page.IsAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsCallback
  id: IsCallback
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsCallback
  nameWithType: Page.IsCallback
  fullName: System.Web.UI.Page.IsCallback
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지 요청이 콜백의 결과인 인지 여부를 나타내는 값을 가져옵니다."
  remarks: "자세한 내용은 참조 [포스트백 없이 클라이언트 콜백 구현](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public bool IsCallback { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>페이지 요청; 콜백의 결과인 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Page.IsCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsClientScriptBlockRegistered(System.String)
  id: IsClientScriptBlockRegistered(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsClientScriptBlockRegistered(String)
  nameWithType: Page.IsClientScriptBlockRegistered(String)
  fullName: System.Web.UI.Page.IsClientScriptBlockRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "지정된 된 키와 클라이언트 스크립트 블록의 페이지에 등록 되었는지 여부를 결정 합니다."
  remarks: "<xref:System.Web.UI.Page.RegisterClientScriptBlock%2A?displayProperty=fullName>클라이언트 쪽 스크립트 불필요 하 게 막으려면</xref:System.Web.UI.Page.RegisterClientScriptBlock%2A?displayProperty=fullName> 를 호출 하기 전에이 메서드를 호출 합니다. 이 스크립트는 필요한 많은 서버 리소스를 만들어야 하는 경우에 특히 중요 합니다.       IsClientScriptBlockRegistered 메서드는 더 이상 사용 되지 않습니다. <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> <xref:System.Web.UI.ClientScriptManager>클래스</xref:System.Web.UI.ClientScriptManager> 의 메서드</xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> 를 사용 하 여"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> method in conjunction with the IsClientScriptBlockRegistered method. If the ECMAScript written in the code declaration block has not already been registered, as determined by IsClientScriptBlockRegistered, then a <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> call is made.  \n  \n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.isc_1.aspx)]\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.isc_1.aspx)]"
  syntax:
    content: public bool IsClientScriptBlockRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "검색할 클라이언트 스크립트의 문자열 키입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>스크립트 블록 등록 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Page.IsClientScriptBlockRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsCrossPagePostBack
  id: IsCrossPagePostBack
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsCrossPagePostBack
  nameWithType: Page.IsCrossPagePostBack
  fullName: System.Web.UI.Page.IsCrossPagePostBack
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지에서 페이지 간 포스트백에 관련 되어 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "ASP.NET에서 다른 한 페이지에서 컨트롤을 전송 하기 위한 두 가지 메커니즘을 제공 합니다. 사용할 수는 <xref:System.Web.HttpServerUtility.Transfer%2A>메서드 간에 페이지를 없거나 처리를 전송 페이지 URL을 할당 하 여 페이지 간 요청을 만들 수는 <xref:System.Web.UI.WebControls.IButtonControl.PostBackUrl%2A>구현 하는 단추 컨트롤의 속성은 <xref:System.Web.UI.WebControls.IButtonControl>인터페이스.</xref:System.Web.UI.WebControls.IButtonControl> </xref:System.Web.UI.WebControls.IButtonControl.PostBackUrl%2A> </xref:System.Web.HttpServerUtility.Transfer%2A>       두 경우 모두는 <xref:System.Web.UI.Page.PreviousPage%2A>페이지 속성 이전 또는 원래 페이지를 나타내는 개체에 포함 됩니다.</xref:System.Web.UI.Page.PreviousPage%2A> 페이지는 페이지 A IsCrossPagePostBack 속성 페이지 B에 게시 하는 예를 들어 하는 경우 (을 통해 액세스할 수는 <xref:System.Web.UI.Page.PreviousPage%2A>속성) 됩니다 `true` 페이지 B의 <xref:System.Web.UI.Page.PreviousPage%2A>속성 페이지 A의 이름을 갖고</xref:System.Web.UI.Page.PreviousPage%2A> </xref:System.Web.UI.Page.PreviousPage%2A>"
  syntax:
    content: public bool IsCrossPagePostBack { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>페이지는 페이지 간 요청;에 참여 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Page.IsCrossPagePostBack*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsPostBack
  id: IsPostBack
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsPostBack
  nameWithType: Page.IsPostBack
  fullName: System.Web.UI.Page.IsPostBack
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지를 처음으로 렌더링 되 고 또는 포스트백에 대 한 응답으로 로드 되 고 있는지를 나타내는 값을 가져옵니다."
  remarks: "참조에 대 한 설명은 다시 게시와 콜백 차이 [포스트백 없이 클라이언트 콜백 구현](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example shows how to test the value of the IsPostBack property when the page is loaded in order to determine whether the page is being rendered for the first time or is responding to a postback. If the page is being rendered for the first time, the code calls the <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> method.  \n  \n The page markup (not shown) contains <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls that display asterisks if no entry is made for a required input field. Calling <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> causes the asterisks to be displayed immediately when the page is rendered, instead of waiting until the user clicks the Submit button. After a postback, you do not have to call <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName>, because that method is called as part of the <xref:System.Web.UI.Page> life cycle.  \n  \n [!code-vb[System.Web.UI.Page.Validate#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.isp_1.aspx)]\n [!code-cs[System.Web.UI.Page.Validate#1](~/add/codesnippet/csharp/p-system.web.ui.page.isp_1.aspx)]"
  syntax:
    content: public bool IsPostBack { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>클라이언트 포스트백;에 대 한 응답의 페이지 로드 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Page.IsPostBack*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsPostBackEventControlRegistered
  id: IsPostBackEventControlRegistered
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsPostBackEventControlRegistered
  nameWithType: Page.IsPostBackEventControlRegistered
  fullName: System.Web.UI.Page.IsPostBackEventControlRegistered
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "컨트롤이 포스트백을 수행 하는 페이지에 등록 되었는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public bool IsPostBackEventControlRegistered { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤에 등록 되었습니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Page.IsPostBackEventControlRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsReusable
  id: IsReusable
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsReusable
  nameWithType: Page.IsReusable
  fullName: System.Web.UI.Page.IsReusable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.Page&quot;> </xref> 개체를 다시 사용할 수 있습니다."
  syntax:
    content: public bool IsReusable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>모든 경우"
  overload: System.Web.UI.Page.IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsStartupScriptRegistered(System.String)
  id: IsStartupScriptRegistered(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsStartupScriptRegistered(String)
  nameWithType: Page.IsStartupScriptRegistered(String)
  fullName: System.Web.UI.Page.IsStartupScriptRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "클라이언트 시작 스크립트에 등록 되었는지 여부를 결정은 <xref href=&quot;System.Web.UI.Page&quot;> </xref> 개체입니다."
  remarks: "<xref:System.Web.UI.Page.RegisterStartupScript%2A?displayProperty=fullName>클라이언트 쪽 스크립트 불필요 하 게 막으려면</xref:System.Web.UI.Page.RegisterStartupScript%2A?displayProperty=fullName> 를 호출 하기 전에이 메서드를 호출 합니다. 이 스크립트는 필요한 많은 서버 리소스를 만들어야 하는 경우에 특히 중요 합니다.       IsStartupScriptRegistered 메서드는 더 이상 사용 되지 않습니다. <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> <xref:System.Web.UI.ClientScriptManager>클래스</xref:System.Web.UI.ClientScriptManager> 의 메서드</xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> 를 사용 하 여"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method in conjunction with the IsStartupScriptRegistered method. If the ECMAScript written in the code declaration block has not already been registered, as determined by IsStartupScriptRegistered, then a <xref:System.Web.UI.Page.RegisterStartupScript%2A> call is made.  \n  \n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.iss_1.aspx)]\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.iss_1.aspx)]"
  syntax:
    content: public bool IsStartupScriptRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "검색할 시작 스크립트의 문자열 키입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>시작 스크립트가 등록 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Page.IsStartupScriptRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsValid
  id: IsValid
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsValid
  nameWithType: Page.IsValid
  fullName: System.Web.UI.Page.IsValid
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지 유효성 검사에 성공 했는지 여부를 나타내는 값을 가져옵니다."
  remarks: "이 속성을 반환 하려면 `true`, 현재 유효성 검사 그룹의 모든 유효성 검사 서버 컨트롤을 성공적으로 확인 해야 합니다. 호출한 후에이 속성을 확인 해야는 <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName>메서드 또는 집합은 `CausesValidation` 속성을 `true` 에 `OnServerClick` 양식 처리를 시작 하는 ASP.NET 서버 컨트롤에 대 한 이벤트 처리기.</xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> 이러한 서버 컨트롤의 <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.HtmlControls.HtmlButton>, <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, <xref:System.Web.UI.WebControls.ImageButton>, 및 <xref:System.Web.UI.WebControls.LinkButton>클래스.</xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.HtmlControls.HtmlInputImage> </xref:System.Web.UI.HtmlControls.HtmlInputButton> </xref:System.Web.UI.HtmlControls.HtmlButton> </xref:System.Web.UI.WebControls.Button>       사용 하 여 유효성 검사 그룹의 유효성 검사를 적용 하는 경우는 <xref:System.Web.UI.Page.Validate%2A>메서드를 다음 지정 된 유효성 검사 그룹의 모든 유효성 검사 컨트롤 유효성을 검사 해야 성공적으로.</xref:System.Web.UI.Page.Validate%2A>"
  example:
  - "The following code example demonstrates using the IsValid property to set up a conditional statement. If the property returns `true`, the `Text` property of the `lblOutput` control is set to \"Page is valid!\" Otherwise, it is set to \"Some of the required fields are empty.\"  \n  \n [!code-vb[System.Web.UI.Page.Validate#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.isv_1.aspx)]\n [!code-cs[System.Web.UI.Page.Validate#2](~/add/codesnippet/csharp/p-system.web.ui.page.isv_1.aspx)]"
  syntax:
    content: public bool IsValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>페이지 유효성 검사 성공 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Page.IsValid*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "IsValid 속성 유효성 검사 발생 하기 전에 호출 됩니다."
  platform:
  - net462
- uid: System.Web.UI.Page.Items
  id: Items
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Items
  nameWithType: Page.Items
  fullName: System.Web.UI.Page.Items
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지 컨텍스트에 저장 된 개체의 목록을 가져옵니다."
  remarks: "항목 속성을 사용 하 여 페이지 요청으로 동일한 수명 주기를 사용 하 여 개체를 저장 하도록 합니다. 이 속성은 읽기 전용입니다. 그러나 개체를 추가할 수 있습니다는 <xref:System.Collections.IDictionary>개체를 반환 합니다.</xref:System.Collections.IDictionary>       페이지 수명 주기의 초반에 이벤트에서 Items 속성에 개체를 추가 하 고 이후의 이벤트에서이 개체에 액세스할 수 있도록 Items 속성에 추가 된 개체는 페이지의 수명 동안 내내 사용할 수 있습니다."
  syntax:
    content: public System.Collections.IDictionary Items { get; }
    return:
      type: System.Collections.IDictionary
      description: "에 대 한 참조는 <xref:System.Collections.IDictionary>페이지 컨텍스트에 저장 하는 개체가 포함 된.</xref:System.Collections.IDictionary>"
  overload: System.Web.UI.Page.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.LCID
  id: LCID
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: LCID
  nameWithType: Page.LCID
  fullName: System.Web.UI.Page.LCID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "에 대 한 로캘 식별자를 설정 하는 <xref href=&quot;System.Threading.Thread&quot;> </xref> 페이지와 관련 된 개체입니다."
  remarks: "대부분의 경우에서 코드에서이 속성을 설정 하지 마십시오. 하지만 `LCID` .aspx 파일의 지시문에서 특성을 설정할 수 있습니다을 사용 하 여 로캘 식별자를 설정 하는 기본 방법은는 <xref:System.Web.UI.Page.Culture%2A>및 <xref:System.Web.UI.Page.UICulture%2A>속성.</xref:System.Web.UI.Page.UICulture%2A> </xref:System.Web.UI.Page.Culture%2A>"
  syntax:
    content: public int LCID { get; set; }
    return:
      type: System.Int32
      description: "로캘 식별자를 전달 하는 <xref href=&quot;System.Threading.Thread&quot;> </xref>합니다."
  overload: System.Web.UI.Page.LCID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.LoadComplete
  id: LoadComplete
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: LoadComplete
  nameWithType: Page.LoadComplete
  fullName: System.Web.UI.Page.LoadComplete
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지의 수명 주기의 로드 단계가 끝날 때 발생합니다."
  remarks: "모든 포스트백 데이터 후 LoadComplete 이벤트 발생 및 페이지에 및 이후 뷰 상태 데이터를 로드는 <xref:System.Web.UI.Control.OnLoad%2A>페이지에서 모든 컨트롤에 대해 메서드가 호출 되었습니다.</xref:System.Web.UI.Control.OnLoad%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  syntax:
    content: public event EventHandler LoadComplete;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.LoadPageStateFromPersistenceMedium
  id: LoadPageStateFromPersistenceMedium
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: LoadPageStateFromPersistenceMedium()
  nameWithType: Page.LoadPageStateFromPersistenceMedium()
  fullName: System.Web.UI.Page.LoadPageStateFromPersistenceMedium()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "저장 된 뷰 상태 정보를 로드는 <xref href=&quot;System.Web.UI.Page&quot;> </xref> 개체입니다."
  remarks: "LoadPageStateFromPersistenceMedium 메서드에서 사용 하는 <xref:System.Web.UI.PageStatePersister.Load%2A>의 메서드는 <xref:System.Web.UI.PageStatePersister?displayProperty=fullName>에서 참조 하는 개체는 <xref:System.Web.UI.Page.PageStatePersister%2A>로드할 모든 속성에 대 한 뷰 상태 정보를 저장는 <xref:System.Web.UI.Page>개체입니다.</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.PageStatePersister%2A> </xref:System.Web.UI.PageStatePersister?displayProperty=fullName> </xref:System.Web.UI.PageStatePersister.Load%2A>       ASP.NET의 하위 항목 중 두 개에 포함 되어는 <xref:System.Web.UI.PageStatePersister>클래스는 <xref:System.Web.UI.HiddenFieldPageStatePersister>ASP.NET 페이지에 포함 된 숨겨진된 필드에 상태 정보를 저장 하는 클래스 및 <xref:System.Web.UI.SessionPageStatePersister>클래스의 상태를 저장 하는 <xref:System.Web.UI.Page.Session%2A>요청과 관련 된 개체입니다.</xref:System.Web.UI.Page.Session%2A> </xref:System.Web.UI.SessionPageStatePersister> </xref:System.Web.UI.HiddenFieldPageStatePersister> </xref:System.Web.UI.PageStatePersister>       사용자가 선택한 위치에 상태를 저장 하려면 새 만들어야의 하위 폴더는 <xref:System.Web.UI.PageStatePersister>클래스 저장 하 고 사용자가 선택한 상태 지 속성 매체를 로드 합니다.</xref:System.Web.UI.PageStatePersister> 새 <xref:System.Web.UI.PageStatePersister> <xref:System.Web.UI.PageStatePersister>클래스</xref:System.Web.UI.PageStatePersister> 를 참조 하십시오. 개체</xref:System.Web.UI.PageStatePersister> 를 만드는 예제를 보려면       .NET Framework 버전 1.0 또는 1.1을 로드 하려는 경우이 메서드를 재정의 사용 하는 경우는 <xref:System.Web.UI.Page>숨겨진된 필드 이외의 위치에서 상태.</xref:System.Web.UI.Page> 그렇게 하도록 선택할 경우 재정의 해야는 <xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>메서드.</xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>"
  syntax:
    content: protected virtual object LoadPageStateFromPersistenceMedium ();
    parameters: []
    return:
      type: System.Object
      description: "저장 된 뷰 상태입니다."
  overload: System.Web.UI.Page.LoadPageStateFromPersistenceMedium*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.MaintainScrollPositionOnPostBack
  id: MaintainScrollPositionOnPostBack
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MaintainScrollPositionOnPostBack
  nameWithType: Page.MaintainScrollPositionOnPostBack
  fullName: System.Web.UI.Page.MaintainScrollPositionOnPostBack
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "클라이언트 브라우저에서 같은 위치에 다시 게시 한 후 사용자를 반환할지 여부를 나타내는 값을 가져오거나 설정 합니다. 이 속성은 사용 되지 않는 대체 <xref:System.Web.UI.Page.SmartNavigation*>속성.</xref:System.Web.UI.Page.SmartNavigation*>"
  remarks: "웹 페이지 서버에 게시 되 면 사용자 페이지의 위쪽에 반환 됩니다. 긴 웹 페이지에 페이지를 다시 여 마지막 위치 페이지에서 스크롤할 하면 사용자가을 의미 합니다.       MaintainScrollPositionOnPostBack 속성이로 설정 되 면 `true`, 사용자가 반환 마지막 위치 페이지에서.       MaintainScrollPositionOnPostBack 속성에서 설정 된 [@ Page](http://msdn.microsoft.com/en-us/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) 지시문입니다."
  syntax:
    content: public bool MaintainScrollPositionOnPostBack { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>클라이언트 위치를 유지 해야 합니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Page.MaintainScrollPositionOnPostBack*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.MapPath(System.String)
  id: MapPath(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MapPath(String)
  nameWithType: Page.MapPath(String)
  fullName: System.Web.UI.Page.MapPath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "응용 프로그램 상대 경로나 절대 또는 상대 가상 경로에 매핑되는 실제 경로 검색 합니다."
  remarks: >-
    > [!CAUTION]

    >  The MapPath property can potentially contain sensitive information about the hosting environment. The return value should not be displayed to users.
  example:
  - "The following example uses the MapPath method to obtain the physical path of a subfolder. It then appends the file name that is read from the <xref:System.Web.UI.WebControls.TextBox.Text%2A> property of a <xref:System.Web.UI.WebControls.TextBox> control. The result is the absolute physical path to that file.  \n  \n [!code-cs[Page_MapPath_ResponseEncoding#1](~/add/codesnippet/csharp/m-system.web.ui.page.map_1.aspx)]\n [!code-vb[Page_MapPath_ResponseEncoding#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.map_1.aspx)]"
  syntax:
    content: public string MapPath (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "<xref:System.String>가상 경로 나타내는</xref:System.String>"
    return:
      type: System.String
      description: "가상 경로 또는 응용 프로그램 상대 경로와 연결 된 실제 경로입니다."
  overload: System.Web.UI.Page.MapPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Master
  id: Master
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Master
  nameWithType: Page.Master
  fullName: System.Web.UI.Page.Master
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지의 전체 모양을 결정 하는 마스터 페이지를 가져옵니다."
  remarks: "마스터 속성에서 반환 된 <xref:System.Web.UI.MasterPage>이 페이지와 관련 된 개체입니다.</xref:System.Web.UI.MasterPage> 이 속성은 읽기 전용입니다. 그러나이 속성을 설정할 수는 <xref:System.Web.UI.MasterPage>개체를 반환 합니다.</xref:System.Web.UI.MasterPage>       속성에 대해서만 수행할은 마스터 페이지 참조 하는 마스터 페이지에는 <xref:System.Web.UI.Page.MasterPageFile%2A>속성.</xref:System.Web.UI.Page.MasterPageFile%2A> Master를 액세스 하는 경우 마스터 페이지를 참조 하지 않는 페이지에서 속성 `null` 반환 됩니다. 마스터 페이지의 내용이 후에 사용할는 <xref:System.Web.UI.Page.PreInit>이벤트가 발생 합니다.</xref:System.Web.UI.Page.PreInit>"
  syntax:
    content: public System.Web.UI.MasterPage Master { get; }
    return:
      type: System.Web.UI.MasterPage
      description: "<xref href=&quot;System.Web.UI.MasterPage&quot;> </xref> 고, 그렇지 않으면 있는 경우이 페이지와 관련 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Page.Master*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.MasterPageFile
  id: MasterPageFile
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MasterPageFile
  nameWithType: Page.MasterPageFile
  fullName: System.Web.UI.Page.MasterPageFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "마스터 페이지의 가상 경로 가져오거나 설정 합니다."
  remarks: "MasterPageFile 속성은이 페이지와 연결 된 마스터 페이지 파일의 가상 경로 (응용 프로그램의 루트)에서. 에 MasterPageFile 속성을 설정할 수는 <xref:System.Web.UI.Page.PreInit>이벤트; 후 MasterPageFile 속성을 설정 하는 <xref:System.Web.UI.Page.PreInit>이벤트를 발생 시킵니다는 <xref:System.InvalidOperationException>예외.</xref:System.InvalidOperationException> </xref:System.Web.UI.Page.PreInit> </xref:System.Web.UI.Page.PreInit> MasterPageFile 속성 유효 하지 않을 경우 형식의 예외가 <xref:System.Web.HttpException>페이지 수명 주기에서 이후에 속성이 설정 되어 있을 때 예외가 throw 되지 않지만 <xref:System.Web.UI.Page.PreInit>이벤트.</xref:System.Web.UI.Page.PreInit> </xref:System.Web.HttpException>       MasterPageFile 속성이 설정 된 페이지는 콘텐츠 페이지 및 따라서만 최상위 컨트롤을 포함할 수 있습니다 <xref:System.Web.UI.WebControls.Content>컨트롤.</xref:System.Web.UI.WebControls.Content>"
  syntax:
    content: public virtual string MasterPageFile { get; set; }
    return:
      type: System.String
      description: "마스터 페이지의 가상 경로입니다."
  overload: System.Web.UI.Page.MasterPageFile*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "MasterPageFile 속성이 설정 된 후는 <xref href=&quot;System.Web.UI.Page.PreInit&quot;> </xref> 이벤트 완료 되었습니다."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The file specified in the MasterPageFile property does not exist.  \n  \n \\- or -  \n  \n The page does not have a <xref href=\"System.Web.UI.WebControls.Content\"></xref> control as the top level control."
  platform:
  - net462
- uid: System.Web.UI.Page.MaxPageStateFieldLength
  id: MaxPageStateFieldLength
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MaxPageStateFieldLength
  nameWithType: Page.MaxPageStateFieldLength
  fullName: System.Web.UI.Page.MaxPageStateFieldLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지의 상태 필드에 대 한 최대 길이 가져오거나 설정 합니다."
  remarks: "MaxPageStateFieldLength 속성이 양수로 설정 되어 클라이언트 브라우저에 보내지는 뷰 상태를 여러 개의 숨겨진된 필드를으로 구분 하 고 각 필드의 값을 사용 하면 MaxPageStateFieldLength 속성에 지정 된 크기 보다 작습니다.       MaxPageStateFieldLength 속성을&0; (기본값)로 설정 보기 상태 필드를 청크로 분할 되지 않습니다 나타냅니다. MaxPageStateFieldLength는 작은 수로 설정 하면 성능이 저하 될 수 있습니다.       MaxPageStateFieldLength 속성의 값으로 설정 된 Web.config 파일의 합니다."
  syntax:
    content: public int MaxPageStateFieldLength { get; set; }
    return:
      type: System.Int32
      description: "페이지의 상태 필드에 대 한 바이트의 최대 길이입니다. 기본값은-1입니다."
  overload: System.Web.UI.Page.MaxPageStateFieldLength*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "MaxPageStateFieldLength 속성이-1 또는&0;입니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "MaxPageStateFieldLength 속성 페이지가 초기화 된 후 설정 되었습니다."
  platform:
  - net462
- uid: System.Web.UI.Page.MetaDescription
  id: MetaDescription
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MetaDescription
  nameWithType: Page.MetaDescription
  fullName: System.Web.UI.Page.MetaDescription
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "&quot;Description&quot;의 콘텐츠를 가져오거나 설정 합니다. <xref uid=&quot;langword_csharp_meta&quot; name=&quot;meta&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: "HTML `meta` 요소 검색 엔진 목록을 개선 하기 위해 사용할 수 있습니다. &quot;Description&quot; `meta` 요소 목록 미리 보기를 개선 하기 위해 일부 검색 엔진에 사용 됩니다.       &quot;Description&quot; 이면 `meta` 요소에는 `head` 페이지 태그의 `meta` 페이지가 렌더링 될 때 요소가 페이지에 추가 됩니다. 페이지 태그 &quot;description&quot;가 이미 있으면 `meta` 요소를이 속성은 가져오거나는 `content` 특성에는 `meta` 요소입니다.       지시문에이 속성을 설정할 수도 있습니다."
  example:
  - "If you set the MetaDescription property of a page to \"ASP.NET Overview\", the following element will appear in the rendered HTML:  \n  \n `<meta name=\"description\" content=\"ASP.NET Overview\" />`"
  syntax:
    content: public string MetaDescription { get; set; }
    return:
      type: System.String
      description: "&quot;Description&quot;의 내용을 <xref uid=&quot;langword_csharp_meta&quot; name=&quot;meta&quot; href=&quot;&quot;> </xref> 요소입니다."
  overload: System.Web.UI.Page.MetaDescription*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "페이지에 헤더 컨트롤이 없는 (한 <xref uid=&quot;langword_csharp_head&quot; name=&quot;head&quot; href=&quot;&quot;> </xref> 인 요소는 <xref uid=&quot;langword_csharp_runat&quot; name=&quot;runat&quot; href=&quot;&quot;> </xref> 특성이 &quot;server&quot;로 설정)."
  platform:
  - net462
- uid: System.Web.UI.Page.MetaKeywords
  id: MetaKeywords
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MetaKeywords
  nameWithType: Page.MetaKeywords
  fullName: System.Web.UI.Page.MetaKeywords
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "&quot;키워드&quot;의 콘텐츠를 가져오거나 설정 합니다. <xref uid=&quot;langword_csharp_meta&quot; name=&quot;meta&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: "HTML `meta` 요소 검색 엔진 목록을 개선 하기 위해 사용할 수 있습니다. &quot;키워드&quot; `meta` 요소 전혀 사용 되지 않는 또는 거의 가중치 주요 검색 엔진에서 제공 됩니다.       &quot;키워드&quot; 이면 `meta` 요소에는 `head` 페이지 태그의 `meta` 페이지가 렌더링 될 때 요소가 페이지에 추가 됩니다. 페이지 태그 &quot;키워드&quot;가 이미 있으면 `meta` 요소를이 속성은 가져오거나는 `content` 특성에는 `meta` 요소입니다.       지시문에이 속성을 설정할 수도 있습니다."
  example:
  - "If you set the MetaKeywords property of a page to \"HTML,CSS,XML,JavaScript\", the following element will appear in the rendered HTML:  \n  \n `<meta name=\"keywords\" content=\" HTML,CSS,XML,JavaScript\" />`"
  syntax:
    content: public string MetaKeywords { get; set; }
    return:
      type: System.String
      description: "&quot;키워드&quot; 콘텐츠 <xref uid=&quot;langword_csharp_meta&quot; name=&quot;meta&quot; href=&quot;&quot;> </xref> 요소입니다."
  overload: System.Web.UI.Page.MetaKeywords*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "페이지에 헤더 컨트롤이 없는 (한 <xref uid=&quot;langword_csharp_head&quot; name=&quot;head&quot; href=&quot;&quot;> </xref> 인 요소는 <xref uid=&quot;langword_csharp_runat&quot; name=&quot;runat&quot; href=&quot;&quot;> </xref> 특성이 &quot;server&quot;로 설정)."
  platform:
  - net462
- uid: System.Web.UI.Page.ModelBindingExecutionContext
  id: ModelBindingExecutionContext
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ModelBindingExecutionContext
  nameWithType: Page.ModelBindingExecutionContext
  fullName: System.Web.UI.Page.ModelBindingExecutionContext
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "모델 바인딩 실행 컨텍스트를 가져옵니다."
  syntax:
    content: public System.Web.ModelBinding.ModelBindingExecutionContext ModelBindingExecutionContext { get; }
    return:
      type: System.Web.ModelBinding.ModelBindingExecutionContext
      description: "모델 바인딩 실행 컨텍스트입니다. 모델 바인딩 실행 컨텍스트가 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 새 하나를 만들고 반환 합니다."
  overload: System.Web.UI.Page.ModelBindingExecutionContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ModelState
  id: ModelState
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ModelState
  nameWithType: Page.ModelState
  fullName: System.Web.UI.Page.ModelState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "모델 바인딩 유효성 검사 및 모델의 상태를 포함 하는 모델 상태 사전 개체를 가져옵니다."
  remarks: "Web Forms 모델 바인딩 사용에 자습서 시리즈를 참조 하십시오. [모델 바인딩 및 Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)합니다."
  syntax:
    content: public System.Web.ModelBinding.ModelStateDictionary ModelState { get; }
    return:
      type: System.Web.ModelBinding.ModelStateDictionary
      description: "모델 상태 사전 개체입니다."
  overload: System.Web.UI.Page.ModelState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: Page.OnInit(EventArgs)
  fullName: System.Web.UI.Page.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "발생 된 <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref> 이벤트 페이지를 초기화 합니다."
  remarks: "OnInit 메서드를 만드는 데 필요한 초기화 및 설정 단계를 수행 합니다.는 <xref:System.Web.UI.Page>인스턴스.</xref:System.Web.UI.Page> 이 페이지의 수명 주기이 단계 페이지에 선언 된 서버 컨트롤의 기본 상태로 초기화 됩니다. 그러나 각 컨트롤의 뷰 상태는 아직 채워지지 않습니다. 페이지에서 제어 하는 동안 페이지에 있는 다른 서버 컨트롤에 액세스할 수 없습니다는 `Page_Init` 다른 컨트롤의 자식 또는 부모 컨트롤 인지 여부에 관계 없이 단계입니다. 다른 서버 컨트롤 생성 하 고 액세스할 준비가 되도록 보장 되지 않습니다.       OnInit 메서드 이후에 호출 됩니다는 <xref:System.Web.UI.Page.OnPreInit%2A>메서드 및 하기 전에 <xref:System.Web.UI.Page.OnInitComplete%2A>메서드.</xref:System.Web.UI.Page.OnInitComplete%2A> </xref:System.Web.UI.Page.OnPreInit%2A>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트](~/add/includes/ajax-current-ext-md.md)합니다.       OnInit 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnInitComplete(System.EventArgs)
  id: OnInitComplete(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnInitComplete(EventArgs)
  nameWithType: Page.OnInitComplete(EventArgs)
  fullName: System.Web.UI.Page.OnInitComplete(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "발생는 <xref href=&quot;System.Web.UI.Page.InitComplete&quot;> </xref> 페이지 초기화 후에 이벤트입니다."
  remarks: "페이지 초기화가 완료 된 후 OnInitComplete 메서드가 호출 됩니다. 이 페이지의 수명 주기이 단계에서 선언 된 모든 페이지에 있는 컨트롤 초기화 되지만 페이지의 뷰 상태는 아직 채워지지 않습니다. 서버 컨트롤에 액세스할 수 있습니다 하지만 사용자에서 반환 된 정보가 아직 포함 되지 않습니다.       OnInitComplete 메서드가 끝날 때 발생는 <xref:System.Web.UI.Page>초기화 단계와 로드 단계 전에.</xref:System.Web.UI.Page>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트](~/add/includes/ajax-current-ext-md.md)합니다.       OnInitComplete 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnInitComplete (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnInitComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnLoadComplete(System.EventArgs)
  id: OnLoadComplete(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnLoadComplete(EventArgs)
  nameWithType: Page.OnLoadComplete(EventArgs)
  fullName: System.Web.UI.Page.OnLoadComplete(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "발생는 <xref href=&quot;System.Web.UI.Page.LoadComplete&quot;> </xref> 페이지 로드 단계가 끝날 때 이벤트입니다."
  remarks: "OnLoadComplete 메서드 페이지 로드 단계가 끝날 때 호출 됩니다. 이 시점에서 페이지 수명 주기 다시 게시 된 데이터 및 뷰 상태 데이터를 모든 페이지에 컨트롤에 로드 됩니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnLoadComplete 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnLoadComplete (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnLoadComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnPreInit(System.EventArgs)
  id: OnPreInit(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnPreInit(EventArgs)
  nameWithType: Page.OnPreInit(EventArgs)
  fullName: System.Web.UI.Page.OnPreInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "발생 된 <xref href=&quot;System.Web.UI.Page.PreInit&quot;> </xref> 페이지 초기화가 시작 될 때 이벤트입니다."
  remarks: "OnPreInit 메서드 페이지 초기화 단계가 맨 앞에 호출 됩니다.       OnPreInit 메서드를 호출한 후 개인 설정 정보가 로드 되 고 페이지 테마 있는 경우 초기화 됩니다. 동적으로 정의 하는 기본 설정된 단계 이기도 한 <xref:System.Web.UI.PageTheme>또는 <xref:System.Web.UI.MasterPage>페이지에 대 한.</xref:System.Web.UI.MasterPage> </xref:System.Web.UI.PageTheme>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트](~/add/includes/ajax-current-ext-md.md)합니다.       OnPreInit 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnPreInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnPreInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnPreLoad(System.EventArgs)
  id: OnPreLoad(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnPreLoad(EventArgs)
  nameWithType: Page.OnPreLoad(EventArgs)
  fullName: System.Web.UI.Page.OnPreLoad(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "발생는 <xref href=&quot;System.Web.UI.Page.PreLoad&quot;> </xref> 하기 전에 다시 게시 된 데이터 페이지 서버 컨트롤에 로드 된 후 이벤트는 <xref:System.Web.UI.Control.OnLoad*>이벤트.</xref:System.Web.UI.Control.OnLoad*>"
  remarks: "모든 사용자 로부터 반환 된 데이터를 다시 게시 한 후 메서드는 OnPreLoad 로드 됩니다. 페이지의 수명 주기에서이 단계에서는 뷰 상태 정보 및 포스트백 데이터에 대 한 선언 초기화 단계 만들어진 컨트롤은 페이지의 컨트롤에 로드 됩니다.       OnPreLoad 메서드에서 만든 컨트롤 뷰 상태와 포스트백 데이터로 로드 됩니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트](~/add/includes/ajax-current-ext-md.md)합니다.       OnPreLoad 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnPreLoad (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnPreLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)
  id: OnPreRenderComplete(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnPreRenderComplete(EventArgs)
  nameWithType: Page.OnPreRenderComplete(EventArgs)
  fullName: System.Web.UI.Page.OnPreRenderComplete(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "발생 된 <xref href=&quot;System.Web.UI.Page.PreRenderComplete&quot;> </xref> OnPreRenderComplete 이벤트 및 페이지를 렌더링 하기 전에 이벤트입니다."
  remarks: "OnPreRenderComplete 메서드는 페이지 수명 주기의 렌더링 이전 단계가 완료 될 때 호출 됩니다. 페이지 수명 주기의이 단계에서는 모든 컨트롤을 만들 및 페이지 출력을 렌더링 하도록 준비 되어 있습니다.       호출 페이지의 뷰 상태를 저장 하기 전에 마지막 이벤트입니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트](~/add/includes/ajax-current-ext-md.md)합니다.       OnPreRenderComplete 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnPreRenderComplete (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnPreRenderComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)
  id: OnSaveStateComplete(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnSaveStateComplete(EventArgs)
  nameWithType: Page.OnSaveStateComplete(EventArgs)
  fullName: System.Web.UI.Page.OnSaveStateComplete(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "발생는 <xref href=&quot;System.Web.UI.Page.SaveStateComplete&quot;> </xref> 페이지 상태 지 속성 미디어에 저장 된 후에 이벤트입니다."
  remarks: "OnSaveStateComplete 메서드는 컨트롤에 대 한 상태 정보 페이지에 대 한 지 속성 매체에 기록 된 경우 호출 됩니다. 호출 하 여 상태 정보가 지 속성 매체에 기록 되는 <xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>메서드.</xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트](~/add/includes/ajax-current-ext-md.md)합니다.       OnSaveStateComplete 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnSaveStateComplete (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "A <xref:System.EventArgs>이벤트 데이터를 포함 하는 개체입니다.</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnSaveStateComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PageAdapter
  id: PageAdapter
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PageAdapter
  nameWithType: Page.PageAdapter
  fullName: System.Web.UI.Page.PageAdapter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "특정 요청 브라우저에 대 한 페이지를 렌더링 하는 어댑터를 가져옵니다."
  remarks: "PageAdapter 속성 반환 특정 <xref:System.Web.UI.Adapters.PageAdapter>개체의 동작을 수정 하는 <xref:System.Web.UI.Page>요청 하는 브라우저에 대 한 개체입니다.</xref:System.Web.UI.Page> </xref:System.Web.UI.Adapters.PageAdapter>       특정 <xref:System.Web.UI.Adapters.PageAdapter>들어오는의 특징을 검사 하 여 결정 됩니다 <xref:System.Web.UI.Page.Request%2A>개체입니다.</xref:System.Web.UI.Page.Request%2A> </xref:System.Web.UI.Adapters.PageAdapter> 요청 된 수명 주기 이벤트에 대해에 어댑터를 선택 하는 경우는 <xref:System.Web.UI.Adapters.PageAdapter>에서 해당 이벤트를 재정의 하는 개체는 <xref:System.Web.UI.Page>개체입니다.</xref:System.Web.UI.Page> </xref:System.Web.UI.Adapters.PageAdapter>"
  syntax:
    content: public System.Web.UI.Adapters.PageAdapter PageAdapter { get; }
    return:
      type: System.Web.UI.Adapters.PageAdapter
      description: "<xref href=&quot;System.Web.UI.Adapters.PageAdapter&quot;> </xref> 페이지를 렌더링 합니다."
  overload: System.Web.UI.Page.PageAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PageStatePersister
  id: PageStatePersister
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PageStatePersister
  nameWithType: Page.PageStatePersister
  fullName: System.Web.UI.Page.PageStatePersister
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.PageStatePersister&quot;> </xref> 페이지와 관련 된 개체입니다."
  remarks: "HTTP 요청 및 응답은 기본적으로 상태 비저장 합니다. ASP.NET 서버 페이지 HTTP 요청 간에 상태를 유지 하기 위해 저장할 수 <xref:System.Web.UI.Page>상태.</xref:System.Web.UI.Page> 이 상태 이면 보기 상태 라는 페이지와 제어 설정 및 데이터 페이지 및 컨트롤 있는 것 처럼 사용자 보여 준다는 사실을 알았습니다 및 마지막 라운드트립에서 페이지에 보고 상호 작용 하는 것과 같은 표시 하는 구성 됩니다. 같은 페이지에 대 한 연속 요청 사이의 뷰 상태를 저장 메커니즘은 여러 가지가 있습니다. 추상 <xref:System.Web.UI.PageStatePersister>클래스는 이러한 상태 저장 메커니즘에 대 한 기본 클래스를 나타냅니다.</xref:System.Web.UI.PageStatePersister>       페이지 개발자가 일반적으로 않아도 됩니다 PageStatePersister 속성을 사용 합니다. PageStatePersister 속성은 주로 컨트롤 개발자가 <xref:System.Web.UI.Page>클래스</xref:System.Web.UI.Page> 의 기능을 확장 하 여 사용"
  syntax:
    content: protected virtual System.Web.UI.PageStatePersister PageStatePersister { get; }
    return:
      type: System.Web.UI.PageStatePersister
      description: "A <xref href=&quot;System.Web.UI.PageStatePersister&quot;> </xref> 페이지와 관련 됩니다."
  overload: System.Web.UI.Page.PageStatePersister*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.postEventArgumentID
  id: postEventArgumentID
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: postEventArgumentID
  nameWithType: Page.postEventArgumentID
  fullName: System.Web.UI.Page.postEventArgumentID
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "렌더링된 된 페이지의 EVENTARGUMENT 숨겨진된 필드를 정의 하는 문자열입니다."
  syntax:
    content: public const string postEventArgumentID;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.postEventSourceID
  id: postEventSourceID
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: postEventSourceID
  nameWithType: Page.postEventSourceID
  fullName: System.Web.UI.Page.postEventSourceID
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "렌더링된 된 페이지의 EVENTTARGET 숨겨진된 필드를 정의 하는 문자열입니다."
  syntax:
    content: public const string postEventSourceID;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PreInit
  id: PreInit
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PreInit
  nameWithType: Page.PreInit
  fullName: System.Web.UI.Page.PreInit
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지 초기화 하기 전에 발생합니다."
  remarks: "이 이벤트를 사용 하면 페이지 요청에서 포스트백에 대 한 응답에서 페이지가 로드 되 고 있는지 여부 등의 조건을 확인할 수 있습니다. 프로필 속성의 값을 확인할 수도 있습니다.       이벤트를 사용 하면 페이지 수명 주기에서 나중에 사용 되는 값을 설정할 수 있습니다. 동적으로 마스터 페이지 또는 요청 된 페이지의 테마를 설정 하 고 동적 컨트롤을 만들 수 있습니다.       ASP.NET 수명 주기에 PreInit 이벤트 적용 되는 방식에 대 한 자세한 내용은 참조 [ASP.NET 페이지 수명 주기 개요](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public event EventHandler PreInit;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PreLoad
  id: PreLoad
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PreLoad
  nameWithType: Page.PreLoad
  fullName: System.Web.UI.Page.PreLoad
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지 앞에 오는 <xref href=&quot;System.Web.UI.Control.Load&quot;> </xref> 이벤트입니다."
  remarks: '모든 포스트백 데이터 처리 된 후 및 하기 전에 미리 로드 이벤트는 발생 된 <xref:System.Web.UI.Control.Load>이벤트.</xref:System.Web.UI.Control.Load> 로드 하기 전에 다시 게시 된 데이터를 두 번째 시도 하는 <xref:System.Web.UI.Page.OnLoadComplete%2A>이벤트.</xref:System.Web.UI.Page.OnLoadComplete%2A> 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.'
  syntax:
    content: public event EventHandler PreLoad;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PreRenderComplete
  id: PreRenderComplete
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PreRenderComplete
  nameWithType: Page.PreRenderComplete
  fullName: System.Web.UI.Page.PreRenderComplete
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지 콘텐츠를 렌더링 하기 전에 발생 합니다."
  remarks: "페이지 수명 주기의 사전 렌더링 단계가 완료 되 면 PreRenderComplete 이벤트가 발생 합니다. 페이지 수명 주기의이 단계에서는 모든 컨트롤을 만들, 필요한 페이지 매김이 완료 되 면 및 페이지 출력 스트림으로 렌더링 하도록 준비 되어 있습니다.       페이지의 뷰 상태가 저장 되기 전에 발생 하는 마지막 이벤트입니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  syntax:
    content: public event EventHandler PreRenderComplete;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PreviousPage
  id: PreviousPage
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PreviousPage
  nameWithType: Page.PreviousPage
  fullName: System.Web.UI.Page.PreviousPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "현재 페이지에 컨트롤을 전송 하는 페이지를 가져옵니다."
  remarks: "사용 하는 경우는 <xref:System.Web.HttpServerUtility.Transfer%2A>메서드 또는 처리를 전송 한 ASP.NET 페이지에서 다른 페이지 간 게시를 사용 하 여 원래 페이지의 대상 페이지에 대 한 필요할 수 있는 요청 정보를 포함 하는.</xref:System.Web.HttpServerUtility.Transfer%2A> 해당 정보에 액세스 하려면 PreviousPage 속성을 사용할 수 있습니다.       현재 페이지 되 고 렌더링 하는 경우 (전송 아니거나 다른 페이지에서 동시 게시)를 직접 요청으로 PreviousPage 속성 포함 `null`합니다."
  example:
  - "The following example is in two parts. The first is an ASP.NET page that uses the <xref:System.Web.HttpServerUtility.Transfer%2A> method, exposed in the page model as `Server.Transfer(\"path\")`. The second part is the target page, which uses the PreviousPage property to get the title of the first page.  \n  \n [!code-cs[System.Web.UI.Page.PreviousPage#1](~/add/codesnippet/csharp/p-system.web.ui.page.pre_1.aspx)]\n [!code-vb[System.Web.UI.Page.PreviousPage#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.pre_1.aspx)]  \n  \n [!code-cs[System.Web.UI.Page.PreviousPage#2](~/add/codesnippet/csharp/p-system.web.ui.page.pre_2.aspx)]\n [!code-vb[System.Web.UI.Page.PreviousPage#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.pre_2.aspx)]"
  syntax:
    content: public System.Web.UI.Page PreviousPage { get; }
    return:
      type: System.Web.UI.Page
      description: "<xref href=&quot;System.Web.UI.Page&quot;> </xref> 현재 페이지에 컨트롤을 전송 하는 페이지를 나타내는입니다."
  overload: System.Web.UI.Page.PreviousPage*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "현재 사용자가 이전 페이지에 액세스할 수 없습니다.       -또는-ASP.NET 라우팅이 사용 되 고 이전 페이지의 URL은 라우팅된 URL입니다. ASP.NET 액세스 권한을 확인할 때 URL이 파일에 대 한 실제 경로 가정 합니다. 라우팅된 URL의 경우 없기 때문에 검사가 실패 합니다."
  platform:
  - net462
- uid: System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)
  id: ProcessRequest(System.Web.HttpContext)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ProcessRequest(HttpContext)
  nameWithType: Page.ProcessRequest(HttpContext)
  fullName: System.Web.UI.Page.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "내장 서버 개체를 설정 된 <xref href=&quot;System.Web.UI.Page&quot;> </xref> 와 같은 개체는 <> </> *>, <> </> *>, <> </> *>, 및 <> </> *> 속성."
  remarks: "이 메서드를 호출 하지 해야 합니다."
  syntax:
    content: public virtual void ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> 내장 서버 개체에 대 한 참조를 제공 하는 개체 (예를 들어 <> </> *>, <> </> *>, 및 <xref:System.Web.HttpContext.Session*>) HTTP 요청을 처리 하는 데 사용 합니다.</xref:System.Web.HttpContext.Session*>"
  overload: System.Web.UI.Page.ProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)
  id: RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RaisePostBackEvent(IPostBackEventHandler,String)
  nameWithType: Page.RaisePostBackEvent(IPostBackEventHandler,String)
  fullName: System.Web.UI.Page.RaisePostBackEvent(IPostBackEventHandler,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "포스트백을 발생 하는 서버 컨트롤에 알리고 들어오는 포스트백 이벤트를 처리 해야 합니다."
  remarks: "<xref:System.Web.UI.Page>포스트백이 발생할 때 개체가 RaisePostBackEvent 메서드를 호출 합니다.</xref:System.Web.UI.Page> 로드 및 변경 내용 알림 완료 된 후 하지만 사전 렌더링이 발생 하기 전에 페이지 수명 주기에서이 호출이 발생 합니다."
  example:
  - "The following example uses the RaisePostBackEvent method to notify ASP.NET that a post-back event is raised when a custom `userButton` server control is clicked.  \n  \n [!code-cs[Page_RaisePostBackEvent#1](~/add/codesnippet/csharp/335ff4eb-daeb-4abc-bff6-_1.aspx)]\n [!code-vb[Page_RaisePostBackEvent#1](~/add/codesnippet/visualbasic/335ff4eb-daeb-4abc-bff6-_1.aspx)]"
  syntax:
    content: protected virtual void RaisePostBackEvent (System.Web.UI.IPostBackEventHandler sourceControl, string eventArgument);
    parameters:
    - id: sourceControl
      type: System.Web.UI.IPostBackEventHandler
      description: "포스트백을 실행 하는 ASP.NET 서버 컨트롤입니다. 이 컨트롤을 구현 해야 합니다는 <xref href=&quot;System.Web.UI.IPostBackEventHandler&quot;> </xref> 인터페이스입니다."
    - id: eventArgument
      type: System.String
      description: "포스트백 인수입니다."
  overload: System.Web.UI.Page.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)
  id: RegisterArrayDeclaration(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterArrayDeclaration(String,String)
  nameWithType: Page.RegisterArrayDeclaration(String,String)
  fullName: System.Web.UI.Page.RegisterArrayDeclaration(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지를 렌더링할 때 ECMAScript 배열 선언으로 선언 하는 값을 선언 합니다."
  remarks: "이 메서드는 클라이언트 스크립트 라이브러리가 동일한 형식의 모든 컨트롤을 작동할 수 있도록 자신을 배열 내에서 선언 하 스크립트 기반 컨트롤에서 사용할 수 있습니다.       RegisterArrayDeclaration 메서드는 더 이상 사용 되지 않습니다. <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> <xref:System.Web.UI.ClientScriptManager>클래스</xref:System.Web.UI.ClientScriptManager> 의 메서드</xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> 를 사용 하 여"
  example:
  - "The following code example uses the RegisterArrayDeclaration method to declare an array, `myArray`, that contains three objects named `x`, `y`, and `z`. The example defines and registers a startup script using the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method. When the ECMAScript `doClick` function is called from the page that contains this code, the array and its objects are initialized.  \n  \n [!code-vb[Page_RegisterArrayDeclaration#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_5_1.aspx)]\n [!code-cs[Page_RegisterArrayDeclaration#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_5_1.aspx)]"
  syntax:
    content: public void RegisterArrayDeclaration (string arrayName, string arrayValue);
    parameters:
    - id: arrayName
      type: System.String
      description: "이름 값을 선언 하는 배열입니다."
    - id: arrayValue
      type: System.String
      description: "배열에 삽입할 값입니다."
  overload: System.Web.UI.Page.RegisterArrayDeclaration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)
  id: RegisterAsyncTask(System.Web.UI.PageAsyncTask)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterAsyncTask(PageAsyncTask)
  nameWithType: Page.RegisterAsyncTask(PageAsyncTask)
  fullName: System.Web.UI.Page.RegisterAsyncTask(PageAsyncTask)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지와 새 비동기 작업을 등록합니다."
  remarks: "<xref:System.Web.UI.PageAsyncTask>클래스</xref:System.Web.UI.PageAsyncTask> 를 사용 하 여 비동기 작업을 정의 합니다. 작업이 정의 된 경우 페이지와 해당 작업을 등록 하려면 RegisterAsyncTask 메서드를 사용 합니다. 작업을 등록 한 후 호출 된 <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>메서드를 비동기 작업을 시작 합니다.</xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>       동기 및 비동기 페이지와 RegisterAsyncTask 메서드를 사용할 수 있습니다."
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.Page.AsyncTimeout%2A> property with the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> and RegisterAsyncTask methods. Note the use of beginning, ending, and time-out handlers. In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the <xref:System.Web.UI.Page.AsyncTimeout%2A> property. In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time.  \n  \n [!code-vb[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_8_1.aspx)]\n [!code-cs[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_8_1.aspx)]  \n  \n [!code-cs[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/csharp/m-system.web.ui.page.reg_8_2.cs)]\n [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_8_2.vb)]"
  syntax:
    content: public void RegisterAsyncTask (System.Web.UI.PageAsyncTask task);
    parameters:
    - id: task
      type: System.Web.UI.PageAsyncTask
      description: "A <xref href=&quot;System.Web.UI.PageAsyncTask&quot;> </xref> 하는 비동기 작업을 정의 합니다."
  overload: System.Web.UI.Page.RegisterAsyncTask*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "비동기 작업은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)
  id: RegisterClientScriptBlock(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterClientScriptBlock(String,String)
  nameWithType: Page.RegisterClientScriptBlock(String,String)
  fullName: System.Web.UI.Page.RegisterClientScriptBlock(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "응답에 대 한 클라이언트 쪽 스크립트 블록을 내보냅니다."
  remarks: "클라이언트 쪽 스크립트의 여는 태그 바로 뒤 내보내집니다는 <xref:System.Web.UI.Page>개체의 `<form runat= server>` 요소.</xref:System.Web.UI.Page> 열기 및 닫기 포함 해야 `<script>` 주위의 스크립트 블록에 지정 된 문자열의 `script` 매개 변수입니다.       이 메서드는 키를 사용 하 여 스크립트 블록을 식별, 때문에 스크립트 블록에서 다른 서버 컨트롤 인스턴스에 요청 될 때마다 출력 스트림으로 내보낼 수 필요가 없습니다. 키를 사용 하 여 서로 방해 하는 다른 컨트롤의 스크립트 블록의 될 가능성은 줄어듭니다도 합니다.       모든 스크립트와 동일한 블록 `key` 매개 변수 값에는 중복 요소로 간주 됩니다.      > [!NOTE] > 요청한 브라우저 스크립트를 지원 하지 않는 경우 렌더링할 수 있도록 HTML 주석 스크립트에 태그를 포함 해야 합니다.       RegisterClientScriptBlock 메서드는 더 이상 사용 되지 않습니다. 사용 된 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>에서 메서드는 <xref:System.Web.UI.ClientScriptManager>클래스를 대신 합니다.</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>"
  example:
  - "The following code example demonstrates the use of the RegisterClientScriptBlock method in conjunction with the <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A> method. If the ECMAScript in the code declaration block has not already been registered, as determined by <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A>, the RegisterClientScriptBlock call is made.  \n  \n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_0_1.aspx)]\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_0_1.aspx)]"
  syntax:
    content: public virtual void RegisterClientScriptBlock (string key, string script);
    parameters:
    - id: key
      type: System.String
      description: "스크립트 블록을 식별 하는 고유 키입니다."
    - id: script
      type: System.String
      description: "클라이언트에 보내는 스크립트의 내용입니다."
  overload: System.Web.UI.Page.RegisterClientScriptBlock*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterHiddenField(System.String,System.String)
  id: RegisterHiddenField(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterHiddenField(String,String)
  nameWithType: Page.RegisterHiddenField(String,String)
  fullName: System.Web.UI.Page.RegisterHiddenField(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "서버 컨트롤을을 폼에 숨겨진된 필드를 자동으로 등록할 수 있습니다. 필드에 전송 됩니다는 <xref href=&quot;System.Web.UI.Page&quot;> </xref> 개체 때는 <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;> </xref> 서버 컨트롤이 렌더링 됩니다."
  remarks: "RegisterHiddenField 메서드는 더 이상 사용 되지 않습니다. <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> <xref:System.Web.UI.ClientScriptManager>클래스</xref:System.Web.UI.ClientScriptManager> 의 메서드</xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> 를 사용 하 여"
  example:
  - "The following code example uses the RegisterHiddenField method to help create ECMAScript code that is passed to the requesting browser. The name of the hidden field is set to `myHiddenField` and its value is set to \"Welcome to Microsoft!\" The <xref:System.Web.UI.Page.RegisterStartupScript%2A> method calls the `myHiddenField` value when the user clicks a button on the page.  \n  \n> [!IMPORTANT]\n>  This example has a hidden field, which is a potential security threat. By default, you should validate the value of a hidden field as you would the value of a text box. ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Page_RegisterHiddenField#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_3_1.aspx)]\n [!code-cs[Page_RegisterHiddenField#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_3_1.aspx)]"
  syntax:
    content: public virtual void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);
    parameters:
    - id: hiddenFieldName
      type: System.String
      description: "숨겨진된 필드를 렌더링할 수의 고유 이름입니다."
    - id: hiddenFieldInitialValue
      type: System.String
      description: "숨겨진된 형식으로 내보낼 수 값입니다."
  overload: System.Web.UI.Page.RegisterHiddenField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterOnSubmitStatement(System.String,System.String)
  id: RegisterOnSubmitStatement(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterOnSubmitStatement(String,String)
  nameWithType: Page.RegisterOnSubmitStatement(String,String)
  fullName: System.Web.UI.Page.RegisterOnSubmitStatement(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "클라이언트 액세스 페이지가 <xref uid=&quot;langword_csharp_OnSubmit&quot; name=&quot;OnSubmit&quot; href=&quot;&quot;> </xref> 이벤트입니다. 스크립트는 다른 곳에서 등록 된 클라이언트에는 함수 호출 이어야 합니다."
  remarks: "RegisterOnSubmitStatement 메서드는 더 이상 사용 되지 않습니다. <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> <xref:System.Web.UI.ClientScriptManager>클래스</xref:System.Web.UI.ClientScriptManager> 의 메서드</xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> 를 사용 하 여"
  example:
  - "The following code example demonstrates using the RegisterOnSubmitStatement to access a script that responds when a client-side Submit button is clicked. When this event occurs, the registered ECMAScript code is executed on the client.  \n  \n> [!IMPORTANT]\n>  This example has a hidden field, which is a potential security threat. By default, you should validate the value of a hidden field as you would the value of a text box. ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Page_RegisterHiddenField#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_7_1.aspx)]\n [!code-cs[Page_RegisterHiddenField#2](~/add/codesnippet/csharp/m-system.web.ui.page.reg_7_1.aspx)]"
  syntax:
    content: public void RegisterOnSubmitStatement (string key, string script);
    parameters:
    - id: key
      type: System.String
      description: "스크립트 블록을 식별 하는 고유 키입니다."
    - id: script
      type: System.String
      description: "클라이언트에 보내야 하는 클라이언트 쪽 스크립트입니다."
  overload: System.Web.UI.Page.RegisterOnSubmitStatement*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)
  id: RegisterRequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterRequiresControlState(Control)
  nameWithType: Page.RegisterRequiresControlState(Control)
  fullName: System.Web.UI.Page.RegisterRequiresControlState(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "컨트롤의 제어 상태가 유지 되어야 컨트롤로 등록 합니다."
  remarks: "컨트롤 상태를 사용 하는 사용자 지정 서버 컨트롤은 컨트롤 상태에 대 한 등록은 지연 되지 요청에서 요청에 포스트백 이벤트 동안 때문에 각 요청에 대해 RegisterRequiresControlState 메서드를 호출 해야 합니다. 등록 하는 것이 좋습니다는 <xref:System.Web.UI.Control.Init>이벤트.</xref:System.Web.UI.Control.Init>"
  example:
  - "The following code example shows a custom server control calling the RegisterRequiresControlState method.  \n  \n [!code-vb[ControlState#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_6_1.aspx)]\n [!code-cs[ControlState#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_6_1.aspx)]"
  syntax:
    content: public void RegisterRequiresControlState (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "컨트롤 등록입니다."
  overload: System.Web.UI.Page.RegisterRequiresControlState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "등록할 컨트롤이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "전에만 또는 동안 RegisterRequiresControlState 메서드를 호출할 수 있습니다는 <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref> 이벤트입니다."
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)
  id: RegisterRequiresPostBack(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterRequiresPostBack(Control)
  nameWithType: Page.RegisterRequiresPostBack(Control)
  fullName: System.Web.UI.Page.RegisterRequiresPostBack(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지가 서버에 다시 게시 될 때 다시 게시 처리 해야 하는 컨트롤을 등록 합니다."
  remarks: "등록 해야 컨트롤이 구현 해야 합니다는 <xref:System.Web.UI.IPostBackDataHandler>인터페이스 또는 <xref:System.Web.HttpException>발생 합니다.</xref:System.Web.HttpException> </xref:System.Web.UI.IPostBackDataHandler> 컨트롤을 통해 구현 되는 경우는 <xref:System.Web.UI.IPostBackDataHandler>인터페이스 수 있도록 다시 게시 데이터의 처리 및 발생 게시물을 좋아하고 게시물의 백업 데이터 변경 이벤트.</xref:System.Web.UI.IPostBackDataHandler> 서버 컨트롤의 이벤트 모델에 대 한 자세한 내용은 참조 하십시오. [ASP.NET Web Forms 서버 컨트롤 이벤트 모델](~/add/includes/ajax-current-ext-md.md)합니다.       또는 그 전에 페이지와 컨트롤을 등록 된 `Page_PreRender` 페이지 수명 주기의 이벤트입니다."
  example:
  - "The following code example uses the RegisterRequiresPostBack method to require a text box control, `myTextBox`, to be posted back before any code associated with the text box can execute. <xref:System.Web.UI.WebControls.TextBox> controls implement the <xref:System.Web.UI.IPostBackDataHandler> interface.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Page_RegisterRequiresPostBack#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_9_1.aspx)]\n [!code-vb[Page_RegisterRequiresPostBack#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_9_1.aspx)]"
  syntax:
    content: public void RegisterRequiresPostBack (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "컨트롤 등록입니다."
  overload: System.Web.UI.Page.RegisterRequiresPostBack*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "등록 하려면 컨트롤 구현 하지 않으며는 <xref href=&quot;System.Web.UI.IPostBackDataHandler&quot;> </xref> 인터페이스입니다."
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)
  id: RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterRequiresRaiseEvent(IPostBackEventHandler)
  nameWithType: Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)
  fullName: System.Web.UI.Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ASP.NET 서버 컨트롤에서 처리 될 때 발생 하는 이벤트 필요로 하는 컨트롤로 등록는 <xref href=&quot;System.Web.UI.Page&quot;> </xref> 개체입니다."
  remarks: "페이지 요청에 따라 하나의 서버 컨트롤을 등록할 수 있습니다. RegisterRequiresRaiseEvent 컨트롤 형태로 ID 데이터를 게시 하는 컨트롤을 포함 되지 않은 경우에 사용 되어야 합니다. 또한 등록은 한 컨트롤을 구현 해야 합니다는 <xref:System.Web.UI.IPostBackEventHandler>인터페이스.</xref:System.Web.UI.IPostBackEventHandler>"
  example:
  - "The following code example uses the RegisterRequiresRaiseEvent method to register a <xref:System.Web.UI.WebControls.Button> Web server control as requiring an event to be raised. After you have registered the first <xref:System.Web.UI.WebControls.Button> control, you can cause the second <xref:System.Web.UI.WebControls.Button> control declared in the code to post the results of the first button's click event to the page.  \n  \n [!code-cs[Page_RaisePostBackEvent#1](~/add/codesnippet/csharp/f04498f9-b87e-4549-85d7-_1.aspx)]\n [!code-vb[Page_RaisePostBackEvent#1](~/add/codesnippet/visualbasic/f04498f9-b87e-4549-85d7-_1.aspx)]"
  syntax:
    content: public virtual void RegisterRequiresRaiseEvent (System.Web.UI.IPostBackEventHandler control);
    parameters:
    - id: control
      type: System.Web.UI.IPostBackEventHandler
      description: "컨트롤 등록입니다."
  overload: System.Web.UI.Page.RegisterRequiresRaiseEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterRequiresViewStateEncryption
  id: RegisterRequiresViewStateEncryption
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterRequiresViewStateEncryption()
  nameWithType: Page.RegisterRequiresViewStateEncryption()
  fullName: System.Web.UI.Page.RegisterRequiresViewStateEncryption()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "하나의 요구 사항의 암호화도 페이지와 컨트롤을 등록합니다."
  remarks: "잠재적으로 중요 한 정보를 처리 하는 사용자 지정 컨트롤을 개발 하는 경우 페이지와 컨트롤을 등록 하 고 컨트롤에 대 한 상태 보기 암호화 되었는지 확인 하려면 RegisterRequiresViewStateEncryption 메서드를 호출 합니다.       전체 페이지 상태 암호화 됩니다 <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> <xref:System.Web.UI.ViewStateEncryptionMode>또는 <xref:System.Web.UI.ViewStateEncryptionMode>.</xref:System.Web.UI.ViewStateEncryptionMode> </xref:System.Web.UI.ViewStateEncryptionMode> 로 설정</xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>"
  example:
  - "The following code example demonstrates setting the view-state encryption mode for a <xref:System.Web.UI.Page> object and requesting encryption of the view state through RegisterRequiresViewStateEncryption. In this example, view state will be encrypted when customer information is retrieved from a database.  \n  \n [!code-cs[System.Web.UI.ViewStateEncryptionMode#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_2_1.aspx)]\n [!code-vb[System.Web.UI.ViewStateEncryptionMode#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_2_1.aspx)]"
  syntax:
    content: public void RegisterRequiresViewStateEncryption ();
    parameters: []
  overload: System.Web.UI.Page.RegisterRequiresViewStateEncryption*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "전이나 도중 페이지 RegisterRequiresViewStateEncryption 메서드를 호출 해야 <xref uid=&quot;langword_csharp_PreRender&quot; name=&quot;PreRender&quot; href=&quot;&quot;> </xref>페이지 수명 주기의/단계입니다."
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterStartupScript(System.String,System.String)
  id: RegisterStartupScript(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterStartupScript(String,String)
  nameWithType: Page.RegisterStartupScript(String,String)
  fullName: System.Web.UI.Page.RegisterStartupScript(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지 파일에 대 한 응답으로 클라이언트 쪽 스크립트 블록을으로 내보냅니다."
  remarks: "비슷합니다는 <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A>메서드, RegisterStartupScript 메서드 내보냅니다의 닫는 태그 바로 앞의 스크립트는 <xref:System.Web.UI.Page>개체의 `<form runat= server>` 요소.</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> 열기 및 닫기 포함 해야 `<script>` 주위의 스크립트 블록에 지정 된 문자열의 `script` 매개 변수입니다.       이 메서드는 키를 사용 하 여 스크립트 블록을 식별, 때문에 스크립트 블록 있어서는 안 될 때마다 다른 서버 컨트롤 인스턴스에 동일한 모든 스크립트 블록에서 요청 하는 출력 스트림에 내보낼 수 `key` 매개 변수 값에는 중복 요소로 간주 됩니다.      > [!NOTE] > 요청한 브라우저 스크립트를 지원 하지 않는 경우 렌더링할 수 있도록 HTML 주석 스크립트에 태그를 포함 해야 합니다.       RegisterStartupScript 메서드는 더 이상 사용 되지 않습니다. 사용 된 <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>에서 메서드는 <xref:System.Web.UI.ClientScriptManager>클래스를 대신 합니다.</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>"
  example:
  - "The following code example demonstrates the use of the RegisterStartupScript method in conjunction with the <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method. If the ECMAScript written in the code declaration block has not already been registered, as determined by the <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method, then a RegisterStartupScript call is made.  \n  \n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_1_1.aspx)]\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_1_1.aspx)]"
  syntax:
    content: public virtual void RegisterStartupScript (string key, string script);
    parameters:
    - id: key
      type: System.String
      description: "스크립트 블록을 식별 하는 고유 키입니다."
    - id: script
      type: System.String
      description: "클라이언트에 전송 되는 스크립트의 콘텐츠입니다."
  overload: System.Web.UI.Page.RegisterStartupScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterViewStateHandler
  id: RegisterViewStateHandler
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterViewStateHandler()
  nameWithType: Page.RegisterViewStateHandler()
  fullName: System.Web.UI.Page.RegisterViewStateHandler()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "호출 하는 경우 유지 되도록 페이지 보기 상태를 발생 합니다."
  remarks: "RegisterViewStateHandler 메서드를 통해 자동으로 호출 됩니다는 <xref:System.Web.UI.HtmlControls.HtmlForm>서버 컨트롤.</xref:System.Web.UI.HtmlControls.HtmlForm> 이 메서드가 호출 되지 않습니다 페이지 뷰 상태가 유지 되지 않습니다.      > [!NOTE] > 일반적으로는 <xref:System.Web.UI.HtmlControls.HtmlForm>페이지에 대 한 서버 컨트롤에서는이 메서드를 호출 합니다.</xref:System.Web.UI.HtmlControls.HtmlForm>"
  example:
  - >-
    [!code-vb[Page_RegisterViewStateHandler#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_4_1.vb)]
     [!code-cs[Page_RegisterViewStateHandler#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_4_1.cs)]
  syntax:
    content: public void RegisterViewStateHandler ();
    parameters: []
  overload: System.Web.UI.Page.RegisterViewStateHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: Page.Render(HtmlTextWriter)
  fullName: System.Web.UI.Page.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "초기화는 <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> 개체와의 자식 컨트롤에 대 한 호출이 <xref href=&quot;System.Web.UI.Page&quot;> </xref> 렌더링 합니다."
  remarks: "Render 메서드는 텍스트 및 클라이언트 브라우저로 전송 되는 태그를 작성 하는 일을 담당 합니다. 기본 렌더링 메서드 호출 <xref:System.Web.UI.Control.RenderChildren%2A>텍스트와 페이지에 포함 된 컨트롤에 대 한 태그를 쓸 수 있습니다.</xref:System.Web.UI.Control.RenderChildren%2A>"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> 페이지 콘텐츠를 받는입니다."
  overload: System.Web.UI.Page.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Request
  id: Request
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Request
  nameWithType: Page.Request
  fullName: System.Web.UI.Page.Request
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "가져옵니다는 <xref href=&quot;System.Web.HttpRequest&quot;> </xref> 요청된 된 페이지에 대 한 개체입니다."
  remarks: "<xref:System.Web.HttpRequest>현재 HTTP 요청에 대 한 정보를 포함 하는 개체입니다.</xref:System.Web.HttpRequest>"
  example:
  - "The following example demonstrates how to obtain the <xref:System.Web.HttpRequest.Headers%2A> collection from the <xref:System.Web.HttpRequest> object and write it to an ASP.NET page.  \n  \n [!code-cs[Classic HttpRequest.Headers Example#1](~/add/codesnippet/csharp/p-system.web.ui.page.req_1.cs)]\n [!code-vb[Classic HttpRequest.Headers Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.req_1.vb)]"
  syntax:
    content: public System.Web.HttpRequest Request { get; }
    return:
      type: System.Web.HttpRequest
      description: "현재 <xref href=&quot;System.Web.HttpRequest&quot;> </xref> 페이지와 관련 됩니다."
  overload: System.Web.UI.Page.Request*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "발생 경우는 <xref href=&quot;System.Web.HttpRequest&quot;> </xref> 개체를 사용할 수 없습니다."
  platform:
  - net462
- uid: System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)
  id: RequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RequiresControlState(Control)
  nameWithType: Page.RequiresControlState(Control)
  fullName: System.Web.UI.Page.RequiresControlState(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "확인 여부를 지정 된 <xref href=&quot;System.Web.UI.Control&quot;> </xref> 개체가 제어 하는 상태 관리에 참여 하도록 등록 되어 있습니다."
  remarks: "컨트롤 상태는 웹 서버 컨트롤; 작동 해야 하는 중요 한 뷰 상태 데이터는 구성 개체 해당 기본 보기 상태에서 별도 개체에 포함 됩니다.       컨트롤 상태를 사용 하 여 사용자 지정 컨트롤을 호출 해야 합니다는 <xref:System.Web.UI.Page.RegisterRequiresControlState%2A>컨트롤 상태를 저장 하기 전에 메서드.</xref:System.Web.UI.Page.RegisterRequiresControlState%2A> RequiresControlState 메서드를 사용 하 여 컨트롤 상태를 필요로 하는 컨트롤로 페이지와 함께 등록 되어 있는 컨트롤에 대 한 확인 합니다."
  syntax:
    content: public bool RequiresControlState (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref> 컨트롤 상태 요구를 확인 하려면."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우 지정 된 <xref href=&quot;System.Web.UI.Control&quot;> </xref> 컨트롤이 필요 상태가<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.Web.UI.Page.RequiresControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Response
  id: Response
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Response
  nameWithType: Page.Response
  fullName: System.Web.UI.Page.Response
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "가져옵니다는 <xref href=&quot;System.Web.HttpResponse&quot;> </xref> 연관 된 개체는 <xref href=&quot;System.Web.UI.Page&quot;> </xref> 개체입니다. 이 개체는 클라이언트에 HTTP 응답 데이터를 전송할 수 있습니다 및 해당 응답에 대 한 정보를 포함 합니다."
  remarks: ''
  example:
  - "The following code example demonstrates creating a cookie and adding it to the page's HTTP output by using the <xref:System.Web.HttpResponse> object.  \n  \n [!code-cs[Classic HttpResponse.Cookies Example#1](~/add/codesnippet/csharp/p-system.web.ui.page.res_1.cs)]\n [!code-vb[Classic HttpResponse.Cookies Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.res_1.vb)]"
  syntax:
    content: public System.Web.HttpResponse Response { get; }
    return:
      type: System.Web.HttpResponse
      description: "현재 <xref href=&quot;System.Web.HttpResponse&quot;> </xref> 페이지와 관련 됩니다."
  overload: System.Web.UI.Page.Response*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.HttpResponse&quot;> </xref> 개체를 사용할 수 없습니다."
  platform:
  - net462
- uid: System.Web.UI.Page.ResponseEncoding
  id: ResponseEncoding
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ResponseEncoding
  nameWithType: Page.ResponseEncoding
  fullName: System.Web.UI.Page.ResponseEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "현재 인코딩 언어 설정 <xref href=&quot;System.Web.HttpResponse&quot;> </xref> 개체입니다."
  remarks: "대부분의 경우에서 코드에서이 속성을 설정 하지 마십시오. 설정 된 `ResponseEncoding` 특성.aspx 파일에 지시문을 사용 하 여 원하는 값으로. 페이지가 요청 될 때 동적으로 생성 된 클래스 속성을 설정 합니다."
  syntax:
    content: public string ResponseEncoding { get; set; }
    return:
      type: System.String
      description: "현재 인코딩 언어를 포함 하는 문자열 <xref href=&quot;System.Web.HttpResponse&quot;> </xref>합니다."
  overload: System.Web.UI.Page.ResponseEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RouteData
  id: RouteData
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RouteData
  nameWithType: Page.RouteData
  fullName: System.Web.UI.Page.RouteData
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "가져옵니다는 &lt;xref:System.Web.Routing.RequestContext.RouteData%2A?displayProperty=fullName&gt; 현재 &lt;xref:System.Web.Routing.RequestContext?displayProperty=fullName&gt; 인스턴스."
  remarks: "페이지를 통해 ASP.NET 라우팅이 요청에 대 한 응답을 실행 중인 경우이 속성 경로 데이터로 전달 된 URL 매개 변수 값에 대 한 액세스를 제공 합니다. 페이지 경로 URL 대신 실제 URL에 대 한 응답에서를 실행 하는 경우이 속성은 `null`합니다. 라는 URL 매개 변수 값을 추출 하는 방법을 보여 주는 다음 예제 `year`합니다.       [Visual Basic]      ```   Dim year As Integer = Convert.ToInt32(Page.RouteData.Values(&quot;year&quot;))   ``` [C#] ```   int year = Convert.ToInt32(Page.RouteData.Values[&quot;year&quot;])   ``` 경로의 URL 패턴을 사용 하 여 정의 된 경우 `{locale}/{year}` 도메인용 `contoso.com`, 요청 된 URL이 고 `contoso.com/US/2010`, `year` &quot;2010&quot;이 코드를 실행할 때 값이 포함 됩니다.       ASP.NET 라우팅에 대 한 자세한 내용은 참조 [ASP.NET 라우팅에서](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public System.Web.Routing.RouteData RouteData { get; }
    return:
      type: System.Web.Routing.RouteData
      description: "&lt;xref:System.Web.Routing.RequestContext.RouteData%2A?displayProperty=fullName&gt; 현재 &lt;xref:System.Web.Routing.RequestContext?displayProperty=fullName&gt; 인스턴스."
  overload: System.Web.UI.Page.RouteData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)
  id: SavePageStateToPersistenceMedium(System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SavePageStateToPersistenceMedium(Object)
  nameWithType: Page.SavePageStateToPersistenceMedium(Object)
  fullName: System.Web.UI.Page.SavePageStateToPersistenceMedium(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지에 대 한 뷰 상태와 제어 상태 정보를 저장합니다."
  remarks: "SavePageStateToPersistenceMedium 메서드에서 사용 하는 <xref:System.Web.UI.PageStatePersister.Save%2A>의 메서드는 <xref:System.Web.UI.PageStatePersister?displayProperty=fullName>개체에서 참조는 <xref:System.Web.UI.Page.PageStatePersister%2A>속성 페이지에 대 한 뷰 상태와 제어 상태 정보를 저장 합니다.</xref:System.Web.UI.Page.PageStatePersister%2A> </xref:System.Web.UI.PageStatePersister?displayProperty=fullName> </xref:System.Web.UI.PageStatePersister.Save%2A>       ASP.NET의 하위 항목 중 두 개에 포함 되어는 <xref:System.Web.UI.PageStatePersister>클래스는 <xref:System.Web.UI.HiddenFieldPageStatePersister>ASP.NET 페이지에 포함 된 숨겨진된 필드에 상태 정보를 저장 하는 클래스 및 <xref:System.Web.UI.SessionPageStatePersister>클래스의 상태를 저장 하는 <xref:System.Web.UI.Page.Session%2A>요청과 관련 된 개체입니다.</xref:System.Web.UI.Page.Session%2A> </xref:System.Web.UI.SessionPageStatePersister> </xref:System.Web.UI.HiddenFieldPageStatePersister> </xref:System.Web.UI.PageStatePersister> 사용할 때의 <xref:System.Web.UI.SessionPageStatePersister>다시 게시를 결정 하는 데 사용이 숨겨진된 VIEWSTATE 필드를 렌더링 하는 클래스입니다.</xref:System.Web.UI.SessionPageStatePersister>       사용자가 선택한 위치에 상태를 저장 하려면 새 만들어야의 하위 폴더는 <xref:System.Web.UI.PageStatePersister>클래스 저장 하 고 사용자가 선택한 상태 지 속성 매체를 로드 합니다.</xref:System.Web.UI.PageStatePersister> 새 <xref:System.Web.UI.PageStatePersister> <xref:System.Web.UI.PageStatePersister>클래스</xref:System.Web.UI.PageStatePersister> 를 참조 하십시오. 개체</xref:System.Web.UI.PageStatePersister> 를 만드는 예제를 보려면       .NET Framework 버전 1.0 또는 1.1을 저장 하려는 경우이 메서드를 재정의 사용 하는 경우는 <xref:System.Web.UI.Page>숨겨진된 필드 이외에 상태.</xref:System.Web.UI.Page> 그렇게 하도록 선택할 경우 재정의 해야는 <xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A>메서드.</xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A>"
  syntax:
    content: protected virtual void SavePageStateToPersistenceMedium (object state);
    parameters:
    - id: state
      type: System.Object
      description: "<xref:System.Object>뷰 상태 정보를 저장할.</xref:System.Object>"
  overload: System.Web.UI.Page.SavePageStateToPersistenceMedium*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.SaveStateComplete
  id: SaveStateComplete
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SaveStateComplete
  nameWithType: Page.SaveStateComplete
  fullName: System.Web.UI.Page.SaveStateComplete
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지의 페이지에 대 한 모든 보기 상태 및 제어 상태 정보 저장 완료 된 후 발생 하 고 페이지에서 제어 합니다."
  remarks: "후 저장 된 웹 페이지에 컨트롤에 대 한 상태 정보는 <xref:System.Web.UI.Page.PreRenderComplete>이벤트.</xref:System.Web.UI.Page.PreRenderComplete> 뷰 상태와 페이지의 컨트롤 상태 후 SaveStateComplete 이벤트가 발생 하 고 페이지에 있는 컨트롤 유지 미디어에 저장 됩니다.       요청한 브라우저에 페이지를 렌더링 하기 전에 발생 하는 마지막 이벤트입니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public event EventHandler SaveStateComplete;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Server
  id: Server
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Server
  nameWithType: Page.Server
  fullName: System.Web.UI.Page.Server
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "가져옵니다는 <xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;> </xref> 인스턴스 개체의는 <xref href=&quot;System.Web.HttpServerUtility&quot;> </xref> 클래스입니다."
  remarks: "이 속성은 자주 사용 되는에 대 한 액세스를 제공 <xref:System.Web.HttpServerUtility.HtmlEncode%2A>및 <xref:System.Web.HttpServerUtility.MapPath%2A>메서드에.</xref:System.Web.HttpServerUtility.MapPath%2A> </xref:System.Web.HttpServerUtility.HtmlEncode%2A>"
  example:
  - "The following code example demonstrates how to access error information from the server by using the `Server` object. In particular, the example gets the requested URL from the `Request` object, the most recent error from the `Server` object (using the <xref:System.Web.HttpServerUtility.GetLastError%2A> method) and converts them both to strings that can be displayed by the client. Once the `message` variable is written to the client, the error is deleted using the <xref:System.Web.HttpServerUtility.ClearError%2A> method.  \n  \n [!code-vb[System.Web.UI.Page_Error method#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.ser_1.aspx)]\n [!code-cs[System.Web.UI.Page_Error method#1](~/add/codesnippet/csharp/p-system.web.ui.page.ser_1.aspx)]"
  syntax:
    content: public System.Web.HttpServerUtility Server { get; }
    return:
      type: System.Web.HttpServerUtility
      description: "현재 <xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;> </xref> 페이지와 관련 된 개체입니다."
  overload: System.Web.UI.Page.Server*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Session
  id: Session
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Session
  nameWithType: Page.Session
  fullName: System.Web.UI.Page.Session
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "현재 가져옵니다 <xref uid=&quot;langword_csharp_Session&quot; name=&quot;Session&quot; href=&quot;&quot;> </xref> ASP.NET에서 제공 하는 개체입니다."
  remarks: "이 속성은 현재 요청 세션에 대 한 정보를 제공합니다. A `Session` ASP.NET 응용 프로그램에서 페이지 또는 문서를 요청 하는 각 사용자에 대해 유지 되는 개체입니다. 에 저장 된 변수는 `Session` 개체에는 사용자 응용 프로그램에서 페이지를 이동할 때 삭제 되지 않으며, 대신, 이러한 변수는 한 유지 사용자가 응용 프로그램 페이지에에서 액세스 합니다. 세션 상태에 대 한 자세한 내용은 참조 [ASP.NET 세션 상태 개요](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example creates a `GetStyle` function that retrieves a key stored in the session state of the Web Forms page and converts its value to a string.  \n  \n [!code-cs[Page.Session_Samples1#1](~/add/codesnippet/csharp/p-system.web.ui.page.ses_1.aspx)]\n [!code-vb[Page.Session_Samples1#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.ses_1.aspx)]"
  syntax:
    content: public virtual System.Web.SessionState.HttpSessionState Session { get; }
    return:
      type: System.Web.SessionState.HttpSessionState
      description: "현재 세션 상태 데이터입니다."
  overload: System.Web.UI.Page.Session*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "세션 정보로 설정 된 경우에 발생 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Web.UI.Page.SetFocus(System.String)
  id: SetFocus(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SetFocus(String)
  nameWithType: Page.SetFocus(String)
  fullName: System.Web.UI.Page.SetFocus(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "지정한 식별자를 가진 컨트롤에 브라우저 포커스를 설정합니다."
  remarks: "SetFocus 메서드를 사용 하 여 브라우저에서 표시 되는 웹 페이지에 활성 컨트롤로 지정 된 ID 문자열을 사용 하 여 컨트롤을 만듭니다. 클라이언트에 렌더링 하기 위한 준비 페이지 SetFocus 메서드를 호출 해야는 <xref:System.Web.UI.Control.PreRender>이벤트.</xref:System.Web.UI.Control.PreRender>      > [!NOTE] > The SetFocus 메서드 ECMAScript 버전 1.3 이상을 지 원하는 브라우저 에서만 작동 합니다."
  example:
  - "The following code example sets the focus to the second text box on a Web page.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[PageSetFocus#1](~/add/codesnippet/csharp/m-system.web.ui.page.set_1_1.aspx)]\n [!code-vb[PageSetFocus#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.set_1_1.aspx)]"
  syntax:
    content: public void SetFocus (string clientID);
    parameters:
    - id: clientID
      type: System.String
      description: "포커스를 컨트롤의 ID입니다."
  overload: System.Web.UI.Page.SetFocus*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>clientID</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "SetFocus is called when the control is not part of a Web Forms page.  \n  \n \\- or -  \n  \n SetFocus is called after the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."
  platform:
  - net462
- uid: System.Web.UI.Page.SetFocus(System.Web.UI.Control)
  id: SetFocus(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SetFocus(Control)
  nameWithType: Page.SetFocus(Control)
  fullName: System.Web.UI.Page.SetFocus(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "지정된 된 컨트롤에 브라우저 포커스를 설정합니다."
  remarks: "SetFocus 메서드를 사용 하 여 브라우저에서 표시 되는 웹 페이지의 활성 컨트롤로 지정된 된 컨트롤을 만듭니다. 클라이언트에 렌더링 하기 위한 준비 페이지 SetFocus 메서드를 호출 해야는 <xref:System.Web.UI.Control.PreRender>이벤트.</xref:System.Web.UI.Control.PreRender>      > [!NOTE] > The SetFocus 메서드 ECMAScript 버전 1.3 이상을 지 원하는 브라우저 에서만 작동 합니다."
  example:
  - "The following code example sets the focus to the second text box on a Web page.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[PageSetFocus#2](~/add/codesnippet/csharp/m-system.web.ui.page.set_0_1.aspx)]\n [!code-vb[PageSetFocus#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.set_0_1.aspx)]"
  syntax:
    content: public void SetFocus (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "포커스를 받을 컨트롤입니다."
  overload: System.Web.UI.Page.SetFocus*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>control</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "SetFocus is called when the control is not part of a Web Forms page.  \n  \n \\- or -  \n  \n SetFocus is called after the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."
  platform:
  - net462
- uid: System.Web.UI.Page.SkipFormActionValidation
  id: SkipFormActionValidation
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SkipFormActionValidation
  nameWithType: Page.SkipFormActionValidation
  fullName: System.Web.UI.Page.SkipFormActionValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "쿼리 문자열 값 유효성을 검사 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public bool SkipFormActionValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>쿼리 문자열 유효성 검사를 건너뛰어야 하는 경우 (쿼리 문자열 확인 하지 않음을); 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 쿼리 문자열 유효성 검사를 수행 해야 하는 경우 정상적으로 배치 합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Page.SkipFormActionValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.SmartNavigation
  id: SmartNavigation
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SmartNavigation
  nameWithType: Page.SmartNavigation
  fullName: System.Web.UI.Page.SmartNavigation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "스마트 탐색을 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다. 이 속성은 사용 되지 않습니다."
  remarks: "대부분의 경우에서 코드에서이 속성을 설정 하지 마십시오. 설정의 `SmartNavigation` 특성을 `true` .aspx 파일 지시문에 있습니다. 페이지가 요청 될 때 동적으로 생성 된 클래스는이 속성을 설정 합니다.      > [!NOTE] >에서 ASP.NET 버전 2.0에서는 속성은 SmartNavigation 합니다. 사용 하 여 <xref:System.Web.UI.Page.SetFocus%2A>메서드 및 <xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A>속성 대신.</xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A> </xref:System.Web.UI.Page.SetFocus%2A>       다음을 수행 하 여 스마트 탐색 페이지의 사용자 환경 개선 하는 나중 또는 Microsoft Internet Explorer 5.5 브라우저에서 페이지를 요청할 경우:-탐색에 의해 발생 하는 플래시를 제거 합니다.      -가 페이지 간에 이동할 때 스크롤 위치를 유지 합니다.      -탐색 요소 포커스를 유지 합니다.      브라우저의 기록에서 마지막 페이지 상태를 보존 합니다.       스마트 탐색은 가장 반환이 크게 변경 되지 않는 시각적 콘텐츠 하지만 자주 다시 게시 해야 하는 ASP.NET 페이지에서 사용 됩니다. 이 속성을 설정할 것인지 결정할 때이 점을 고려해 야 `true`합니다."
  syntax:
    content: public bool SmartNavigation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>스마트 탐색을 사용 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Page.SmartNavigation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.StyleSheetTheme
  id: StyleSheetTheme
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: StyleSheetTheme
  nameWithType: Page.StyleSheetTheme
  fullName: System.Web.UI.Page.StyleSheetTheme
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지 수명 주기의 초기 단계에서 페이지에 적용 되는 테마의 이름을 가져오거나 설정 합니다."
  remarks: "이 속성은 css 스타일 시트 ()에 직접 참조 하지 않습니다. 속성에는 그 안에 CSS 파일을 포함할 수 있는 ASP.NET 테마의 이름을 포함 합니다.       StyleSheetTheme 속성 페이지 수명 주기의 초기 단계에서 한 페이지에 적용 되는 테마의 이름을 지정 하는 반면는 <xref:System.Web.UI.Page.Theme%2A>속성 페이지 수명 주기의 뒷부분에 나오는 페이지에 적용 되는 테마의 이름을 지정 합니다.</xref:System.Web.UI.Page.Theme%2A> 즉, 페이지 설정에 스타일 시트 테마의 설정 보다 우선을 적용 합니다. 자세한 내용은 참조 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md)합니다.       일반적으로 page 지시문에서 또는 속성을 재정의 하 여이 속성에 대 한 값을 설정 합니다. 내용은 다음 항목을 참조 하십시오.:- [하는 방법: ASP.NET 테마 적용](~/add/includes/ajax-current-ext-md.md)      -   [하는 방법: 적용 ASP.NET 테마 프로그래밍 방식으로](~/add/includes/ajax-current-ext-md.md))"
  syntax:
    content: public virtual string StyleSheetTheme { get; set; }
    return:
      type: System.String
      description: "페이지 수명 주기의 초반에 페이지에 적용 되는 테마의 이름입니다."
  overload: System.Web.UI.Page.StyleSheetTheme*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "후 StyleSheetTheme 속성을 설정 하려고 했습니다는 <xref:System.Web.UI.Page.FrameworkInitialize*>메서드를 호출 했습니다.</xref:System.Web.UI.Page.FrameworkInitialize*>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "StyleSheetTheme 잘못 된 테마 이름으로 설정 됩니다. 이 예외는 경우 throw 되는 <xref:System.Web.UI.Page.FrameworkInitialize*>속성 setter가 아닌 메서드를 호출 합니다.</xref:System.Web.UI.Page.FrameworkInitialize*>"
  platform:
  - net462
- uid: System.Web.UI.Page.Theme
  id: Theme
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Theme
  nameWithType: Page.Theme
  fullName: System.Web.UI.Page.Theme
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지 테마의 이름을 가져오거나 설정 합니다."
  remarks: "테마 속성 페이지에 대해 사용 되는 테마의 이름을 설정 합니다. 테마의 설정 보다 우선 하도록 페이지에 설정 하려는 경우 사용 된 <xref:System.Web.UI.Page.StyleSheetTheme%2A>속성.</xref:System.Web.UI.Page.StyleSheetTheme%2A> 자세한 내용은 참조 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md)합니다.       이전에 테마 속성을 설정 해야는 <xref:System.Web.UI.Page.PreInit>이벤트; 후 테마 속성 설정는 <xref:System.Web.UI.Page.PreInit>이벤트 하면는 <xref:System.InvalidOperationException>예외.</xref:System.InvalidOperationException> </xref:System.Web.UI.Page.PreInit> </xref:System.Web.UI.Page.PreInit>       지정된 된 테마는 응용 프로그램 또는 전역 테마로 존재 해야 합니다. 테마가 없는 경우는 <xref:System.Web.HttpException>예외가 throw 됩니다.</xref:System.Web.HttpException>"
  example:
  - "The following code example sets the Theme property to a name passed in the query string.  \n  \n [!code-cs[PageTheme#1](~/add/codesnippet/csharp/p-system.web.ui.page.theme_1.aspx)]\n [!code-vb[PageTheme#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.theme_1.aspx)]"
  syntax:
    content: public virtual string Theme { get; set; }
    return:
      type: System.String
      description: "페이지 테마의 이름입니다."
  overload: System.Web.UI.Page.Theme*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "후 테마 설정 하려고 했습니다는 <xref href=&quot;System.Web.UI.Page.PreInit&quot;> </xref> 이벤트가 발생 합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "테마는 잘못 된 테마 이름으로 설정 됩니다."
  platform:
  - net462
- uid: System.Web.UI.Page.Title
  id: Title
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Title
  nameWithType: Page.Title
  fullName: System.Web.UI.Page.Title
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지의 제목을 가져오거나 설정 합니다."
  remarks: "요청한 브라우저에 전달 된 HTML 헤더에서 페이지 제목을 설정 하려면 Title 속성을 사용 합니다.      > [!NOTE] > 페이지는 `head` 요소는 특성이 있는 `runat=&quot;server&quot;`, 그렇지 않으면 제목 렌더링 되지 것입니다."
  syntax:
    content: public string Title { get; set; }
    return:
      type: System.String
      description: "페이지의 제목입니다."
  overload: System.Web.UI.Page.Title*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Title 속성 페이지에 헤더 컨트롤이 필요합니다."
  platform:
  - net462
- uid: System.Web.UI.Page.Trace
  id: Trace
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Trace
  nameWithType: Page.Trace
  fullName: System.Web.UI.Page.Trace
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "가져옵니다는 <xref href=&quot;System.Web.TraceContext&quot;> </xref> 현재 웹 요청에 대 한 개체입니다."
  remarks: "추적을 추적 하 고 웹 요청에 대 한 실행 정보를 제공 합니다. 렌더링된 된 페이지에 표시 되도록 추적 데이터에 대 한 응용 프로그램 또는 페이지 수준에서 추적을 활성화 해야 합니다.       추적은 페이지에는 기본적으로 비활성화 됩니다. 지시문을 사용 하는 페이지에 대 한 추적을 사용 하려면 `<% @ Page trace=&quot;true&quot; %>`합니다. 전체 응용 프로그램에 대 한 추적을 사용 하려면 응용 프로그램의 구성 파일, 응용 프로그램의 루트 디렉터리에 있는 Web.config에에서 설정 해야 합니다. 자세한 내용은 참조 [ASP.NET 추적 개요](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates accessing the <xref:System.Web.TraceContext.IsEnabled%2A?displayProperty=fullName> property and the <xref:System.Web.TraceContext.Write%2A?displayProperty=fullName> method through the Trace property. This code calls the <xref:System.Diagnostics.Trace.Write%2A> method only when tracing is enabled for the <xref:System.Web.UI.Page> object. If it is not enabled, this code will not run, which can help reduce overhead for your application.  \n  \n [!code-vb[System.Web.UI.Page.Trace#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.trace_1.aspx)]\n [!code-cs[System.Web.UI.Page.Trace#2](~/add/codesnippet/csharp/p-system.web.ui.page.trace_1.aspx)]"
  syntax:
    content: public System.Web.TraceContext Trace { get; }
    return:
      type: System.Web.TraceContext
      description: "데이터는 <xref href=&quot;System.Web.TraceContext&quot;> </xref> 현재 웹 요청에 대 한 개체입니다."
  overload: System.Web.UI.Page.Trace*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TraceEnabled
  id: TraceEnabled
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TraceEnabled
  nameWithType: Page.TraceEnabled
  fullName: System.Web.UI.Page.TraceEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "에 대 한 추적이 사용 되는지를 나타내는 값을 설정는 <xref href=&quot;System.Web.UI.Page&quot;> </xref> 개체입니다."
  remarks: "대부분의 경우에서 코드에서이 속성을 설정 하지 마십시오. 설정의 `Trace` 특성을 `true` .aspx 파일 지시문에 있습니다. 페이지가 요청 될 때 동적으로 생성 된 클래스 속성을 설정 합니다."
  syntax:
    content: public bool TraceEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>페이지;에 대 한 추적을 사용 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Page.TraceEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TraceModeValue
  id: TraceModeValue
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TraceModeValue
  nameWithType: Page.TraceModeValue
  fullName: System.Web.UI.Page.TraceModeValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "추적 문이 페이지에 표시 되는 모드를 설정 합니다."
  remarks: "대부분의 경우에서 코드에서이 속성을 설정 하지 마십시오. 설정의 `TraceMode` .aspx 파일의 지시어의 경우에 특성입니다. 페이지가 요청 될 때 동적으로 생성 된 클래스 속성을 설정 합니다."
  syntax:
    content: public System.Web.TraceMode TraceModeValue { get; set; }
    return:
      type: System.Web.TraceMode
      description: "중 하나는 <xref href=&quot;System.Web.TraceMode&quot;> </xref> 열거형 멤버입니다."
  overload: System.Web.UI.Page.TraceModeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TransactionMode
  id: TransactionMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TransactionMode
  nameWithType: Page.TransactionMode
  fullName: System.Web.UI.Page.TransactionMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "설정 페이지에 대 한 트랜잭션 수준을 지원 합니다."
  remarks: "대부분의 경우에서 코드에서이 속성을 설정 하지 마십시오. 설정의 `Transaction` .aspx 파일의 지시어의 경우에 특성입니다. 페이지가 요청 될 때 동적으로 생성 된 클래스 속성을 설정 합니다."
  syntax:
    content: protected int TransactionMode { get; set; }
    return:
      type: System.Int32
      description: "중 하나를 나타내는 정수는 <xref href=&quot;System.EnterpriseServices.TransactionOption&quot;> </xref> 열거형 멤버입니다."
  overload: System.Web.UI.Page.TransactionMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TryUpdateModel``1(``0)
  id: TryUpdateModel``1(``0)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TryUpdateModel(TModel)
  nameWithType: Page.TryUpdateModel(TModel)
  fullName: System.Web.UI.Page.TryUpdateModel(TModel)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  syntax:
    content: 'public virtual bool TryUpdateModel<TModel> (TModel model) where TModel : class;'
    parameters:
    - id: model
      type: TModel
      description: "추가할 수 있습니다."
    return:
      type: System.Boolean
      description: "추가할 수 있습니다."
  overload: System.Web.UI.Page.TryUpdateModel<TModel>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  id: TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TryUpdateModel(TModel,IValueProvider)
  nameWithType: Page.TryUpdateModel(TModel,IValueProvider)
  fullName: System.Web.UI.Page.TryUpdateModel(TModel,IValueProvider)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  syntax:
    content: 'public virtual bool TryUpdateModel<TModel> (TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class;'
    parameters:
    - id: model
      type: TModel
      description: "추가할 수 있습니다."
    - id: valueProvider
      type: System.Web.ModelBinding.IValueProvider
      description: "추가할 수 있습니다."
    return:
      type: System.Boolean
      description: "추가할 수 있습니다."
  overload: System.Web.UI.Page.TryUpdateModel<TModel>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UICulture
  id: UICulture
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UICulture
  nameWithType: Page.UICulture
  fullName: System.Web.UI.Page.UICulture
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "사용자 인터페이스 (UI) ID를 설정 하는 <xref href=&quot;System.Threading.Thread&quot;> </xref> 페이지와 관련 된 개체입니다."
  remarks: "이 속성은에 대 한 바로 가기는 <xref:System.Threading.Thread.CurrentThread%2A>속성.</xref:System.Threading.Thread.CurrentThread%2A> Culture는 실행 중인 스레드의 집합의 속성은 `UICulture` .aspx 파일의 지시어의 경우에 특성입니다. 페이지가 요청 될 때 동적으로 생성 된 클래스는이 속성의 값을 설정 합니다. UICulture 속성의 값을 명시적으로 설정할 수 또한는 Web.config 파일의 합니다."
  syntax:
    content: public string UICulture { get; set; }
    return:
      type: System.String
      description: "UI id입니다."
  overload: System.Web.UI.Page.UICulture*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UniqueFilePathSuffix
  id: UniqueFilePathSuffix
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UniqueFilePathSuffix
  nameWithType: Page.UniqueFilePathSuffix
  fullName: System.Web.UI.Page.UniqueFilePathSuffix
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "캐싱 브라우저에 대 한 파일 경로에 추가할 고유한 접미사를 가져옵니다."
  remarks: "UniqueFilePathSuffix 속성 브라우저 캐시에 필요한 경우 파일 경로의 끝에 추가 되는 문자열을 반환 합니다. 특정 요청과 관련 된 파일 경로 확인 하는 문자열이 사용 됩니다."
  syntax:
    content: protected virtual string UniqueFilePathSuffix { get; }
    return:
      type: System.String
      description: "파일 경로에 추가 하는 고유한 접미사입니다. 기본값은 &quot;__ufps =&quot; + 고유 6 자리 수입니다."
  overload: System.Web.UI.Page.UniqueFilePathSuffix*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UnobtrusiveValidationMode
  id: UnobtrusiveValidationMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UnobtrusiveValidationMode
  nameWithType: Page.UnobtrusiveValidationMode
  fullName: System.Web.UI.Page.UnobtrusiveValidationMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "비간섭 JavaScript 클라이언트 쪽 유효성 검사에 사용 되는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public System.Web.UI.UnobtrusiveValidationMode UnobtrusiveValidationMode { get; set; }
    return:
      type: System.Web.UI.UnobtrusiveValidationMode
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>비간섭 JavaScript; 사용 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Page.UnobtrusiveValidationMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UnregisterRequiresControlState(System.Web.UI.Control)
  id: UnregisterRequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UnregisterRequiresControlState(Control)
  nameWithType: Page.UnregisterRequiresControlState(Control)
  fullName: System.Web.UI.Page.UnregisterRequiresControlState(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "지정된 된 컨트롤에 대 한 컨트롤 상태 지 속성을 중지합니다."
  remarks: "컨트롤 상태를 사용 하는 사용자 지정 서버 컨트롤을 호출 해야 합니다는 <xref:System.Web.UI.Page.RegisterRequiresControlState%2A>전에 각 요청에는 상태가 유지 됩니다.</xref:System.Web.UI.Page.RegisterRequiresControlState%2A> 컨트롤 상태에 대 한 등록 동안 지연 되지 않습니다을 통해 요청에서 요청에 다시 게시 합니다. 더 이상 포스트백에 대해 유지 해야 하는 컨트롤에 대 한 제어 상태가 유지 되지 않으므로 되도록 UnregisterRequiresControlState 메서드를 사용 합니다.       사용 하는 경우 UnregisterRequiresControlState 메서드가 호출 되는 내부적으로 <xref:System.Web.UI.Control.RemovedControl%2A>메서드는 controls 컬렉션에서 컨트롤을 제거 하려면.</xref:System.Web.UI.Control.RemovedControl%2A>"
  syntax:
    content: public void UnregisterRequiresControlState (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref> 을 중지할 컨트롤 상태의 지속 합니다."
  overload: System.Web.UI.Page.UnregisterRequiresControlState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref href=&quot;System.Web.UI.Control&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Page.UpdateModel``1(``0)
  id: UpdateModel``1(``0)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UpdateModel(TModel)
  nameWithType: Page.UpdateModel(TModel)
  fullName: System.Web.UI.Page.UpdateModel(TModel)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  syntax:
    content: 'public virtual void UpdateModel<TModel> (TModel model) where TModel : class;'
    parameters:
    - id: model
      type: TModel
      description: "추가할 수 있습니다."
  overload: System.Web.UI.Page.UpdateModel<TModel>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  id: UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UpdateModel(TModel,IValueProvider)
  nameWithType: Page.UpdateModel(TModel,IValueProvider)
  fullName: System.Web.UI.Page.UpdateModel(TModel,IValueProvider)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  syntax:
    content: 'public virtual void UpdateModel<TModel> (TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class;'
    parameters:
    - id: model
      type: TModel
      description: "추가할 수 있습니다."
    - id: valueProvider
      type: System.Web.ModelBinding.IValueProvider
      description: "추가할 수 있습니다."
  overload: System.Web.UI.Page.UpdateModel<TModel>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.User
  id: User
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: User
  nameWithType: Page.User
  fullName: System.Web.UI.Page.User
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지를 요청 하는 사용자에 대 한 정보를 가져옵니다."
  remarks: "<xref:System.Security.Principal.IPrincipal>개체 코드를 실행 하는 사용자와 이들이 속하는 역할의 보안 컨텍스트를 나타냅니다.</xref:System.Security.Principal.IPrincipal>       이 속성에 사용 되는 <xref:System.Web.HttpContext>개체의 <xref:System.Web.HttpContext.User%2A>요청이 발생 한 위치를 결정 하는 속성.</xref:System.Web.HttpContext.User%2A> </xref:System.Web.HttpContext>"
  example:
  - "The following code example uses the User property to access authentication and identity information for the current user. If the user is not authenticated, it redirects them to a login page.  \n  \n [!code-cs[Page_User#1](~/add/codesnippet/csharp/p-system.web.ui.page.user_1.aspx)]\n [!code-vb[Page_User#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.user_1.aspx)]"
  syntax:
    content: public System.Security.Principal.IPrincipal User { get; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "<xref:System.Security.Principal.IPrincipal>페이지를 요청 하는 사용자를 나타내는입니다.</xref:System.Security.Principal.IPrincipal>"
  overload: System.Web.UI.Page.User*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Validate
  id: Validate
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Validate()
  nameWithType: Page.Validate()
  fullName: System.Web.UI.Page.Validate()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "할당된 된 정보의 유효성을 검사 하는 페이지에 포함 된 모든 유효성 검사 컨트롤에 지시 합니다."
  remarks: "ASP.NET 서버 컨트롤을 클릭할 때이 메서드가 호출 되는 `CausesValidation` 속성이로 설정 `true`, 기본값입니다. 여기에 <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.WebControls.ImageButton>, 및 <xref:System.Web.UI.WebControls.LinkButton>웹 서버 컨트롤의는 <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, 및 <xref:System.Web.UI.HtmlControls.HtmlButton>와 같은 서버에 다시 게시 자동으로 수 있는 HTML 서버 컨트롤 및 컨트롤의 <xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.CheckBox>, <xref:System.Web.UI.WebControls.ListControl>, 및 <xref:System.Web.UI.WebControls.BulletedList>컨트롤.</xref:System.Web.UI.WebControls.BulletedList> </xref:System.Web.UI.WebControls.ListControl> </xref:System.Web.UI.WebControls.CheckBox> </xref:System.Web.UI.WebControls.TextBox> </xref:System.Web.UI.HtmlControls.HtmlButton> </xref:System.Web.UI.HtmlControls.HtmlInputImage> </xref:System.Web.UI.HtmlControls.HtmlInputButton> </xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.WebControls.Button>       단추 컨트롤의 설정 페이지에서 모든 단추 컨트롤에 대 한 유효성 검사를 사용 하지 않으려면 `CausesValidation` 속성을 `false`합니다.       유효성 검사 컨트롤에 포함 된 반복이 메서드가 호출 되 면는 <xref:System.Web.UI.ValidatorCollection>연관 된 개체는 <xref:System.Web.UI.Page.Validators%2A?displayProperty=fullName>속성 및 현재 유효성 검사 그룹의 각 유효성 검사 컨트롤에 대 한 유효성 검사 논리를 호출 합니다.</xref:System.Web.UI.Page.Validators%2A?displayProperty=fullName> </xref:System.Web.UI.ValidatorCollection> 유효성 검사 그룹 페이지를 서버에 게시 하는 컨트롤에 의해 결정 됩니다. 유효성 검사 그룹이 지정 된 경우 유효성 검사 그룹이 사용 됩니다.      > [!NOTE] > 페이지의 유효성 검사의 동작이 변경 되었습니다. [!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)], 유효성 검사 메서드를 더 이상 호출 하는 컨트롤;를 사용 하는 <xref:System.Web.UI.Page.Validate%28System.String%29?displayProperty=fullName>메서드 대신.</xref:System.Web.UI.Page.Validate%28System.String%29?displayProperty=fullName> 에 Validate 메서드를 사용 하는 경우는 [!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)] 페이지에서 유효성 검사 그룹은 무시 되 고 모든 컨트롤에 유효성을 검사 합니다."
  example:
  - "The following code example calls the Validate method on a page in a scenario with several different validation groups defined.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.Page.Validate2#1](~/add/codesnippet/csharp/m-system.web.ui.page.val_0_1.aspx)]\n [!code-vb[System.Web.UI.Page.Validate2#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.val_0_1.aspx)]"
  syntax:
    content: public virtual void Validate ();
    parameters: []
  overload: System.Web.UI.Page.Validate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Validate(System.String)
  id: Validate(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Validate(String)
  nameWithType: Page.Validate(String)
  fullName: System.Web.UI.Page.Validate(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "할당된 된 정보의 유효성을 검사 하도록 지정 된 유효성 검사 그룹의 유효성 검사 컨트롤에 지시 합니다."
  remarks: "ASP.NET 서버 컨트롤을 클릭할 때이 메서드가 호출 되는 `CausesValidation` 속성이로 설정 `true`, 기본값입니다. 여기에 <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.WebControls.ImageButton>, 및 <xref:System.Web.UI.WebControls.LinkButton>웹 서버 컨트롤의는 <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, 및 <xref:System.Web.UI.HtmlControls.HtmlButton>와 같은 서버에 다시 게시 자동으로 수 있는 HTML 서버 컨트롤 및 컨트롤의 <xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.CheckBox>, <xref:System.Web.UI.WebControls.ListControl>, 및 <xref:System.Web.UI.WebControls.BulletedList>컨트롤.</xref:System.Web.UI.WebControls.BulletedList> </xref:System.Web.UI.WebControls.ListControl> </xref:System.Web.UI.WebControls.CheckBox> </xref:System.Web.UI.WebControls.TextBox> </xref:System.Web.UI.HtmlControls.HtmlButton> </xref:System.Web.UI.HtmlControls.HtmlInputImage> </xref:System.Web.UI.HtmlControls.HtmlInputButton> </xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.WebControls.Button>       단추 컨트롤의 설정 페이지에서 모든 단추 컨트롤에 대 한 유효성 검사를 사용 하지 않으려면 `CausesValidation` 속성을 `false`합니다.       Validate 메서드는 지정 된 유효성 검사 그룹의 유효성을 검사 합니다. 유효성 검사 그룹에는 Validate 메서드를 호출한 후의 <xref:System.Web.UI.Page.IsValid%2A>메서드는 반환 `true` 지정 된 유효성 검사 그룹 및 페이지를 서버에 게시 하는 컨트롤의 유효성 검사 그룹을 모두 사용할 수 있는 경우에.</xref:System.Web.UI.Page.IsValid%2A>"
  example:
  - "The following code example calls the Validate method on a page in a scenario with several different validation groups defined.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.Page.Validate2#1](~/add/codesnippet/csharp/m-system.web.ui.page.val_1_1.aspx)]\n [!code-vb[System.Web.UI.Page.Validate2#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.val_1_1.aspx)]"
  syntax:
    content: public virtual void Validate (string validationGroup);
    parameters:
    - id: validationGroup
      type: System.String
      description: "유효성을 검사할 컨트롤의 유효성 검사 그룹 이름입니다."
  overload: System.Web.UI.Page.Validate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: Page.ValidateRequestMode
  fullName: System.Web.UI.Page.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "페이지에 잠재적으로 위험한 값에 대 한 브라우저에서 클라이언트 입력 검사할지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "값 <xref:System.Web.UI.ValidateRequestMode>에서 사용 되지 않습니다는 <xref:System.Web.UI.Page>클래스에서 상속 하는 것이 없습니다.</xref:System.Web.UI.Page> </xref:System.Web.UI.ValidateRequestMode>"
  syntax:
    content: public override System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "페이지에서 클라이언트 입력 검사 하는지 여부를 지정 하는 값입니다. 기본값은 <xref href=&quot;System.Web.UI.ValidateRequestMode&quot;> </xref>합니다."
  overload: System.Web.UI.Page.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Validators
  id: Validators
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Validators
  nameWithType: Page.Validators
  fullName: System.Web.UI.Page.Validators
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "요청 된 페이지에 포함 된 모든 유효성 검사 컨트롤의 컬렉션을 가져옵니다."
  remarks: "이 속성을 사용 하 여 메서드 및 속성을 조작는 <xref:System.Web.UI.ValidatorCollection>현재와 연결 된 개체 <xref:System.Web.UI.Page>인스턴스.</xref:System.Web.UI.Page> </xref:System.Web.UI.ValidatorCollection> 이 컬렉션 페이지에 포함 된 모든 유효성 검사 서버 컨트롤을 포함 합니다.       호출 된 <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName>메서드를 사용 하면 현재 유효성 검사 그룹의 각 유효성 검사 서버 컨트롤에 대해 실행 될 유효성 검사 논리.</xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> 이러한 컨트롤 통과 하지 않으면는 <xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName>속성에서 반환 `false`.</xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName>       유효성 검사 컨트롤에 대 한 자세한 내용은 참조 하십시오. [ASP.NET 유효성 검사 컨트롤](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public System.Web.UI.ValidatorCollection Validators { get; }
    return:
      type: System.Web.UI.ValidatorCollection
      description: "유효성 검사 컨트롤의 컬렉션입니다."
  overload: System.Web.UI.Page.Validators*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.VerifyRenderingInServerForm(System.Web.UI.Control)
  id: VerifyRenderingInServerForm(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: VerifyRenderingInServerForm(Control)
  nameWithType: Page.VerifyRenderingInServerForm(Control)
  fullName: System.Web.UI.Page.VerifyRenderingInServerForm(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "있는지 확인는 <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;> </xref> 런타임 시 지정된 된 ASP.NET 서버 컨트롤에 대 한 컨트롤 렌더링 됩니다."
  remarks: "내부에 필요한 컨트롤을 `<form runat=server>` 태그 렌더링 되는 태그 밖에 배치 되는 경우 오류 메시지를 표시 하기 전에이 메서드를 호출할 수 있습니다. 다시 게시 또는 등록 된 스크립트 블록에 종속 하는 컨트롤의 재정의에이 메서드를 호출 해야는 <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>메서드.</xref:System.Web.UI.Control.Render%2A?displayProperty=fullName> 다른 방식으로 서버 form 요소를 렌더링 된 페이지 다양 한 상황에서 예외를 throw 하려면이 메서드를 재정의할 수 있습니다.       다시 게시 하거나 클라이언트 쪽 스크립트를 사용 하는 서버 컨트롤에 포함 되지 않는 경우 작동 하지 것입니다는 <xref:System.Web.UI.HtmlControls.HtmlForm>서버 컨트롤 (`form runat=&quot;server&quot;>`) 태그.</xref:System.Web.UI.HtmlControls.HtmlForm> 이러한 컨트롤에 포함 되지 않는 경우 오류 메시지를 제공 렌더링 될 때이 메서드를 호출할 수는 <xref:System.Web.UI.HtmlControls.HtmlForm>컨트롤.</xref:System.Web.UI.HtmlControls.HtmlForm>       일반적으로 재정의 하는 경우이 메서드를 호출은 사용자 지정 서버 컨트롤을 개발 하는 경우는 `Render` 모든 종류의 입력된 태그에 대 한 메서드. 이 입력된 컨트롤을 호출 하는 경우에 특히 중요 <xref:System.Web.UI.Page.GetPostBackEventReference%2A>, 클라이언트를 내보내는 경우 또는 스크립트</xref:System.Web.UI.Page.GetPostBackEventReference%2A> 복합 서버 컨트롤이이 호출을 만들 필요는 없습니다."
  example:
  - "The following code example overrides the <xref:System.Web.UI.Page.Render%2A?displayProperty=fullName> method of a custom server control. When this control writes its content to a page, it uses the VerifyRenderingInServerForm method to make sure that the control appears between the opening and closing tags of an <xref:System.Web.UI.HtmlControls.HtmlForm> control.  \n  \n [!code-cs[System.Web.UI.Page_VerifyRenderingInServerForm#3](~/add/codesnippet/csharp/m-system.web.ui.page.ver_1.cs)]\n [!code-vb[System.Web.UI.Page_VerifyRenderingInServerForm#3](~/add/codesnippet/visualbasic/m-system.web.ui.page.ver_1.vb)]"
  syntax:
    content: public virtual void VerifyRenderingInServerForm (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "에 필요한 ASP.NET 서버 컨트롤의 <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.Page.VerifyRenderingInServerForm*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "여는 태그와 닫는 태그 사이 지정된 된 서버 컨트롤 포함 되지 되는 <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;> </xref> 런타임 시 서버 컨트롤입니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "확인할 컨트롤이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Web.UI.Page.ViewStateEncryptionMode
  id: ViewStateEncryptionMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ViewStateEncryptionMode
  nameWithType: Page.ViewStateEncryptionMode
  fullName: System.Web.UI.Page.ViewStateEncryptionMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "뷰 상태의 암호화 모드를 가져오거나 설정 합니다."
  remarks: "코드에서 ViewStateEncryptionMode 속성을 설정할 수 없습니다. 지시문만 설정할 수는< element of the configuration file. element=&quot;&quot; of=&quot;&quot; the=&quot;&quot; configuration=&quot;&quot;></ element of the configuration file.> 값이 구성 파일에 설정 된 값 지시문 재정의 설정 합니다.       지시문에이 속성을 설정 하기 위한 구문은 다음과 같습니다: ```vb#   <%@ Page Language=&quot;VB&quot; ViewStateEncryptionMode=&quot;Always&quot; %>      ``` ```c#   <%@ Page Language=&quot;C#&quot; ViewStateEncryptionMode=&quot;Always&quot; %>   ``` 구성 파일에서이 속성을 설정 하기 위한 구문은 다음과 같습니다: ```vb#   <system.web>     <pages viewStateEncryptionMode=&quot;Always&quot; />   </system.web>      ``` ```c#   <system.web>     <pages viewStateEncryptionMode=&quot;Always&quot; />   </system.web>   ``` 사용자 지정 컨트롤 개발자가 해당 컨트롤의 뷰 상태에 잠재적으로 중요 한 데이터를 저장 하기 전에 코드에서이 속성의 값을 확인 하려는 경우가 있을 수 있습니다.            "
  syntax:
    content: public System.Web.UI.ViewStateEncryptionMode ViewStateEncryptionMode { get; set; }
    return:
      type: System.Web.UI.ViewStateEncryptionMode
      description: "중 하나는 <xref href=&quot;System.Web.UI.ViewStateEncryptionMode&quot;> </xref> 값입니다. 기본값은 <xref href=&quot;System.Web.UI.ViewStateEncryptionMode&quot;> </xref>합니다."
  overload: System.Web.UI.Page.ViewStateEncryptionMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "값 집합의 구성원이 아닙니다.는 <xref href=&quot;System.Web.UI.ViewStateEncryptionMode&quot;> </xref> 열거 합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "또는 페이지 앞에 ViewStateEncryptionMode 속성을 설정할 수 있습니다 <xref uid=&quot;langword_csharp_PreRender&quot; name=&quot;PreRender&quot; href=&quot;&quot;> </xref>페이지 수명 주기의/단계입니다."
  platform:
  - net462
- uid: System.Web.UI.Page.ViewStateUserKey
  id: ViewStateUserKey
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ViewStateUserKey
  nameWithType: Page.ViewStateUserKey
  fullName: System.Web.UI.Page.ViewStateUserKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "현재 페이지와 관련 된 뷰 상태 변수에서 개별 사용자에 식별자를 할당 합니다."
  remarks: "ViewStateUserKey 속성 설정 악의적인 사용자 로부터 응용 프로그램에 대 한 공격을 방지 하는 데 도움이 됩니다. 공격을 생성 하는 변수를 사용할 수 없습니다 있도록 식별자 개별 사용자에 대 한 뷰 상태 변수를 할당할 수 있도록 하 여 수행 합니다. 것을 방지 하기 위해 수행할 수 있는 작업 및 웹 공격에 대 한 자세한 내용은 참조 하십시오. [걸릴 이점은의 ASP.NET 기본 제공 기능을 웹 공격 오프 지금](http://go.microsoft.com/fwlink/?LinkId=163557)합니다.       사용자의 인증 이름이 같은 모든 문자열 값으로이 속성을 설정할 수 있습니다 또는 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>값.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>      > [!NOTE] > 중에이 속성을 설정 해야 합니다는 `Page_Init` 페이지 처리의 단계입니다. 설정 중에이 속성의 `Page_Load` 단계 예외를 throw 합니다."
  syntax:
    content: public string ViewStateUserKey { get; set; }
    return:
      type: System.String
      description: "개별 사용자의 식별자입니다."
  overload: System.Web.UI.Page.ViewStateUserKey*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "ViewStateUserKey 속성 페이지를 처리 하는 동안 너무 늦 액세스 했습니다."
  platform:
  - net462
- uid: System.Web.UI.Page.Visible
  id: Visible
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Visible
  nameWithType: Page.Visible
  fullName: System.Web.UI.Page.Visible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "나타내는 값을 가져오거나 여부는 <xref href=&quot;System.Web.UI.Page&quot;> </xref> 개체가 렌더링 됩니다."
  remarks: ''
  example:
  - "The following example sets the Visible property to `false` to hide the rendered content of a page. When this page is first requested, a data source is populated and displayed in the page. When a user clicks the button, the `HideButton_Click` event handler hides the entire rendered content of the page.  \n  \n [!code-cs[Page_Visible#1](~/add/codesnippet/csharp/p-system.web.ui.page.vis_1.aspx)]\n [!code-vb[Page_Visible#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.vis_1.aspx)]"
  syntax:
    content: public override bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Web.UI.Page&quot;> </xref> 고, 그렇지 않으면 렌더링 된 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Page.Visible*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.TemplateControl
  isExternal: false
  name: System.Web.UI.TemplateControl
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.Page.#ctor
  parent: System.Web.UI.Page
  isExternal: false
  name: Page()
  nameWithType: Page.Page()
  fullName: System.Web.UI.Page.Page()
- uid: System.Web.UI.Page.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  parent: System.Web.UI.Page
  isExternal: false
  name: AddContentTemplate(String,ITemplate)
  nameWithType: Page.AddContentTemplate(String,ITemplate)
  fullName: System.Web.UI.Page.AddContentTemplate(String,ITemplate)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.UI.Page
  isExternal: false
  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.BeginEventHandler
  parent: System.Web
  isExternal: false
  name: BeginEventHandler
  nameWithType: BeginEventHandler
  fullName: System.Web.BeginEventHandler
- uid: System.Web.EndEventHandler
  parent: System.Web
  isExternal: false
  name: EndEventHandler
  nameWithType: EndEventHandler
  fullName: System.Web.EndEventHandler
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.Page.AddWrappedFileDependencies(System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: AddWrappedFileDependencies(Object)
  nameWithType: Page.AddWrappedFileDependencies(Object)
  fullName: System.Web.UI.Page.AddWrappedFileDependencies(Object)
- uid: System.Web.UI.Page.Application
  parent: System.Web.UI.Page
  isExternal: false
  name: Application
  nameWithType: Page.Application
  fullName: System.Web.UI.Page.Application
- uid: System.Web.HttpApplicationState
  parent: System.Web
  isExternal: false
  name: HttpApplicationState
  nameWithType: HttpApplicationState
  fullName: System.Web.HttpApplicationState
- uid: System.Web.UI.Page.AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.UI.Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Web.UI.Page.AspCompatEndProcessRequest(System.IAsyncResult)
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatEndProcessRequest(IAsyncResult)
  nameWithType: Page.AspCompatEndProcessRequest(IAsyncResult)
  fullName: System.Web.UI.Page.AspCompatEndProcessRequest(IAsyncResult)
- uid: System.Web.UI.Page.AspCompatMode
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatMode
  nameWithType: Page.AspCompatMode
  fullName: System.Web.UI.Page.AspCompatMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.Page.AsyncMode
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncMode
  nameWithType: Page.AsyncMode
  fullName: System.Web.UI.Page.AsyncMode
- uid: System.Web.UI.Page.AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.UI.Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
- uid: System.Web.UI.Page.AsyncPageEndProcessRequest(System.IAsyncResult)
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncPageEndProcessRequest(IAsyncResult)
  nameWithType: Page.AsyncPageEndProcessRequest(IAsyncResult)
  fullName: System.Web.UI.Page.AsyncPageEndProcessRequest(IAsyncResult)
- uid: System.Web.UI.Page.AsyncTimeout
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncTimeout
  nameWithType: Page.AsyncTimeout
  fullName: System.Web.UI.Page.AsyncTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.UI.Page.AutoPostBackControl
  parent: System.Web.UI.Page
  isExternal: false
  name: AutoPostBackControl
  nameWithType: Page.AutoPostBackControl
  fullName: System.Web.UI.Page.AutoPostBackControl
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.Page.Buffer
  parent: System.Web.UI.Page
  isExternal: false
  name: Buffer
  nameWithType: Page.Buffer
  fullName: System.Web.UI.Page.Buffer
- uid: System.Web.UI.Page.Cache
  parent: System.Web.UI.Page
  isExternal: false
  name: Cache
  nameWithType: Page.Cache
  fullName: System.Web.UI.Page.Cache
- uid: System.Web.Caching.Cache
  parent: System.Web.Caching
  isExternal: false
  name: Cache
  nameWithType: Cache
  fullName: System.Web.Caching.Cache
- uid: System.Web.UI.Page.ClientQueryString
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientQueryString
  nameWithType: Page.ClientQueryString
  fullName: System.Web.UI.Page.ClientQueryString
- uid: System.Web.UI.Page.ClientScript
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientScript
  nameWithType: Page.ClientScript
  fullName: System.Web.UI.Page.ClientScript
- uid: System.Web.UI.ClientScriptManager
  parent: System.Web.UI
  isExternal: false
  name: ClientScriptManager
  nameWithType: ClientScriptManager
  fullName: System.Web.UI.ClientScriptManager
- uid: System.Web.UI.Page.ClientTarget
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientTarget
  nameWithType: Page.ClientTarget
  fullName: System.Web.UI.Page.ClientTarget
- uid: System.Web.UI.Page.CodePage
  parent: System.Web.UI.Page
  isExternal: false
  name: CodePage
  nameWithType: Page.CodePage
  fullName: System.Web.UI.Page.CodePage
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.Page.ContentType
  parent: System.Web.UI.Page
  isExternal: false
  name: ContentType
  nameWithType: Page.ContentType
  fullName: System.Web.UI.Page.ContentType
- uid: System.Web.UI.Page.Context
  parent: System.Web.UI.Page
  isExternal: false
  name: Context
  nameWithType: Page.Context
  fullName: System.Web.UI.Page.Context
- uid: System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)
  parent: System.Web.UI.Page
  isExternal: false
  name: CreateHtmlTextWriter(TextWriter)
  nameWithType: Page.CreateHtmlTextWriter(TextWriter)
  fullName: System.Web.UI.Page.CreateHtmlTextWriter(TextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)
  parent: System.Web.UI.Page
  isExternal: false
  name: CreateHtmlTextWriterFromType(TextWriter,Type)
  nameWithType: Page.CreateHtmlTextWriterFromType(TextWriter,Type)
  fullName: System.Web.UI.Page.CreateHtmlTextWriterFromType(TextWriter,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.Page.Culture
  parent: System.Web.UI.Page
  isExternal: false
  name: Culture
  nameWithType: Page.Culture
  fullName: System.Web.UI.Page.Culture
- uid: System.Web.UI.Page.DesignerInitialize
  parent: System.Web.UI.Page
  isExternal: false
  name: DesignerInitialize()
  nameWithType: Page.DesignerInitialize()
  fullName: System.Web.UI.Page.DesignerInitialize()
- uid: System.Web.UI.Page.DeterminePostBackMode
  parent: System.Web.UI.Page
  isExternal: false
  name: DeterminePostBackMode()
  nameWithType: Page.DeterminePostBackMode()
  fullName: System.Web.UI.Page.DeterminePostBackMode()
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.UI.Page.DeterminePostBackModeUnvalidated
  parent: System.Web.UI.Page
  isExternal: false
  name: DeterminePostBackModeUnvalidated()
  nameWithType: Page.DeterminePostBackModeUnvalidated()
  fullName: System.Web.UI.Page.DeterminePostBackModeUnvalidated()
- uid: System.Web.UI.Page.EnableEventValidation
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableEventValidation
  nameWithType: Page.EnableEventValidation
  fullName: System.Web.UI.Page.EnableEventValidation
- uid: System.Web.UI.Page.EnableViewState
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableViewState
  nameWithType: Page.EnableViewState
  fullName: System.Web.UI.Page.EnableViewState
- uid: System.Web.UI.Page.EnableViewStateMac
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableViewStateMac
  nameWithType: Page.EnableViewStateMac
  fullName: System.Web.UI.Page.EnableViewStateMac
- uid: System.Web.UI.Page.ErrorPage
  parent: System.Web.UI.Page
  isExternal: false
  name: ErrorPage
  nameWithType: Page.ErrorPage
  fullName: System.Web.UI.Page.ErrorPage
- uid: System.Web.UI.Page.ExecuteRegisteredAsyncTasks
  parent: System.Web.UI.Page
  isExternal: false
  name: ExecuteRegisteredAsyncTasks()
  nameWithType: Page.ExecuteRegisteredAsyncTasks()
  fullName: System.Web.UI.Page.ExecuteRegisteredAsyncTasks()
- uid: System.Web.UI.Page.FileDependencies
  parent: System.Web.UI.Page
  isExternal: false
  name: FileDependencies
  nameWithType: Page.FileDependencies
  fullName: System.Web.UI.Page.FileDependencies
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Web.UI.Page.FindControl(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: FindControl(String)
  nameWithType: Page.FindControl(String)
  fullName: System.Web.UI.Page.FindControl(String)
- uid: System.Web.UI.Page.Form
  parent: System.Web.UI.Page
  isExternal: false
  name: Form
  nameWithType: Page.Form
  fullName: System.Web.UI.Page.Form
- uid: System.Web.UI.HtmlControls.HtmlForm
  parent: System.Web.UI.HtmlControls
  isExternal: false
  name: HtmlForm
  nameWithType: HtmlForm
  fullName: System.Web.UI.HtmlControls.HtmlForm
- uid: System.Web.UI.Page.FrameworkInitialize
  parent: System.Web.UI.Page
  isExternal: false
  name: FrameworkInitialize()
  nameWithType: Page.FrameworkInitialize()
  fullName: System.Web.UI.Page.FrameworkInitialize()
- uid: System.Web.UI.Page.GetDataItem
  parent: System.Web.UI.Page
  isExternal: false
  name: GetDataItem()
  nameWithType: Page.GetDataItem()
  fullName: System.Web.UI.Page.GetDataItem()
- uid: System.Web.UI.Page.GetPostBackClientEvent(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackClientEvent(Control,String)
  nameWithType: Page.GetPostBackClientEvent(Control,String)
  fullName: System.Web.UI.Page.GetPostBackClientEvent(Control,String)
- uid: System.Web.UI.Page.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackClientHyperlink(Control,String)
  nameWithType: Page.GetPostBackClientHyperlink(Control,String)
  fullName: System.Web.UI.Page.GetPostBackClientHyperlink(Control,String)
- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackEventReference(Control)
  nameWithType: Page.GetPostBackEventReference(Control)
  fullName: System.Web.UI.Page.GetPostBackEventReference(Control)
- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackEventReference(Control,String)
  nameWithType: Page.GetPostBackEventReference(Control,String)
  fullName: System.Web.UI.Page.GetPostBackEventReference(Control,String)
- uid: System.Web.UI.Page.GetTypeHashCode
  parent: System.Web.UI.Page
  isExternal: false
  name: GetTypeHashCode()
  nameWithType: Page.GetTypeHashCode()
  fullName: System.Web.UI.Page.GetTypeHashCode()
- uid: System.Web.UI.Page.GetValidators(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetValidators(String)
  nameWithType: Page.GetValidators(String)
  fullName: System.Web.UI.Page.GetValidators(String)
- uid: System.Web.UI.ValidatorCollection
  parent: System.Web.UI
  isExternal: false
  name: ValidatorCollection
  nameWithType: ValidatorCollection
  fullName: System.Web.UI.ValidatorCollection
- uid: System.Web.UI.Page.GetWrappedFileDependencies(System.String[])
  parent: System.Web.UI.Page
  isExternal: false
  name: GetWrappedFileDependencies(String[])
  nameWithType: Page.GetWrappedFileDependencies(String[])
  fullName: System.Web.UI.Page.GetWrappedFileDependencies(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.Page.Header
  parent: System.Web.UI.Page
  isExternal: false
  name: Header
  nameWithType: Page.Header
  fullName: System.Web.UI.Page.Header
- uid: System.Web.UI.HtmlControls.HtmlHead
  parent: System.Web.UI.HtmlControls
  isExternal: false
  name: HtmlHead
  nameWithType: HtmlHead
  fullName: System.Web.UI.HtmlControls.HtmlHead
- uid: System.Web.UI.Page.ID
  parent: System.Web.UI.Page
  isExternal: false
  name: ID
  nameWithType: Page.ID
  fullName: System.Web.UI.Page.ID
- uid: System.Web.UI.Page.IdSeparator
  parent: System.Web.UI.Page
  isExternal: false
  name: IdSeparator
  nameWithType: Page.IdSeparator
  fullName: System.Web.UI.Page.IdSeparator
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Web.UI.Page.InitComplete
  parent: System.Web.UI.Page
  isExternal: false
  name: InitComplete
  nameWithType: Page.InitComplete
  fullName: System.Web.UI.Page.InitComplete
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.Page.InitializeCulture
  parent: System.Web.UI.Page
  isExternal: false
  name: InitializeCulture()
  nameWithType: Page.InitializeCulture()
  fullName: System.Web.UI.Page.InitializeCulture()
- uid: System.Web.UI.Page.InitOutputCache(System.Web.UI.OutputCacheParameters)
  parent: System.Web.UI.Page
  isExternal: false
  name: InitOutputCache(OutputCacheParameters)
  nameWithType: Page.InitOutputCache(OutputCacheParameters)
  fullName: System.Web.UI.Page.InitOutputCache(OutputCacheParameters)
- uid: System.Web.UI.OutputCacheParameters
  parent: System.Web.UI
  isExternal: false
  name: OutputCacheParameters
  nameWithType: OutputCacheParameters
  fullName: System.Web.UI.OutputCacheParameters
- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  nameWithType: Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)
- uid: System.Web.UI.OutputCacheLocation
  parent: System.Web.UI
  isExternal: false
  name: OutputCacheLocation
  nameWithType: OutputCacheLocation
  fullName: System.Web.UI.OutputCacheLocation
- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  nameWithType: Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
- uid: System.Web.UI.Page.IsAsync
  parent: System.Web.UI.Page
  isExternal: false
  name: IsAsync
  nameWithType: Page.IsAsync
  fullName: System.Web.UI.Page.IsAsync
- uid: System.Web.UI.Page.IsCallback
  parent: System.Web.UI.Page
  isExternal: false
  name: IsCallback
  nameWithType: Page.IsCallback
  fullName: System.Web.UI.Page.IsCallback
- uid: System.Web.UI.Page.IsClientScriptBlockRegistered(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: IsClientScriptBlockRegistered(String)
  nameWithType: Page.IsClientScriptBlockRegistered(String)
  fullName: System.Web.UI.Page.IsClientScriptBlockRegistered(String)
- uid: System.Web.UI.Page.IsCrossPagePostBack
  parent: System.Web.UI.Page
  isExternal: false
  name: IsCrossPagePostBack
  nameWithType: Page.IsCrossPagePostBack
  fullName: System.Web.UI.Page.IsCrossPagePostBack
- uid: System.Web.UI.Page.IsPostBack
  parent: System.Web.UI.Page
  isExternal: false
  name: IsPostBack
  nameWithType: Page.IsPostBack
  fullName: System.Web.UI.Page.IsPostBack
- uid: System.Web.UI.Page.IsPostBackEventControlRegistered
  parent: System.Web.UI.Page
  isExternal: false
  name: IsPostBackEventControlRegistered
  nameWithType: Page.IsPostBackEventControlRegistered
  fullName: System.Web.UI.Page.IsPostBackEventControlRegistered
- uid: System.Web.UI.Page.IsReusable
  parent: System.Web.UI.Page
  isExternal: false
  name: IsReusable
  nameWithType: Page.IsReusable
  fullName: System.Web.UI.Page.IsReusable
- uid: System.Web.UI.Page.IsStartupScriptRegistered(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: IsStartupScriptRegistered(String)
  nameWithType: Page.IsStartupScriptRegistered(String)
  fullName: System.Web.UI.Page.IsStartupScriptRegistered(String)
- uid: System.Web.UI.Page.IsValid
  parent: System.Web.UI.Page
  isExternal: false
  name: IsValid
  nameWithType: Page.IsValid
  fullName: System.Web.UI.Page.IsValid
- uid: System.Web.UI.Page.Items
  parent: System.Web.UI.Page
  isExternal: false
  name: Items
  nameWithType: Page.Items
  fullName: System.Web.UI.Page.Items
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.Page.LCID
  parent: System.Web.UI.Page
  isExternal: false
  name: LCID
  nameWithType: Page.LCID
  fullName: System.Web.UI.Page.LCID
- uid: System.Web.UI.Page.LoadComplete
  parent: System.Web.UI.Page
  isExternal: false
  name: LoadComplete
  nameWithType: Page.LoadComplete
  fullName: System.Web.UI.Page.LoadComplete
- uid: System.Web.UI.Page.LoadPageStateFromPersistenceMedium
  parent: System.Web.UI.Page
  isExternal: false
  name: LoadPageStateFromPersistenceMedium()
  nameWithType: Page.LoadPageStateFromPersistenceMedium()
  fullName: System.Web.UI.Page.LoadPageStateFromPersistenceMedium()
- uid: System.Web.UI.Page.MaintainScrollPositionOnPostBack
  parent: System.Web.UI.Page
  isExternal: false
  name: MaintainScrollPositionOnPostBack
  nameWithType: Page.MaintainScrollPositionOnPostBack
  fullName: System.Web.UI.Page.MaintainScrollPositionOnPostBack
- uid: System.Web.UI.Page.MapPath(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: MapPath(String)
  nameWithType: Page.MapPath(String)
  fullName: System.Web.UI.Page.MapPath(String)
- uid: System.Web.UI.Page.Master
  parent: System.Web.UI.Page
  isExternal: false
  name: Master
  nameWithType: Page.Master
  fullName: System.Web.UI.Page.Master
- uid: System.Web.UI.MasterPage
  parent: System.Web.UI
  isExternal: false
  name: MasterPage
  nameWithType: MasterPage
  fullName: System.Web.UI.MasterPage
- uid: System.Web.UI.Page.MasterPageFile
  parent: System.Web.UI.Page
  isExternal: false
  name: MasterPageFile
  nameWithType: Page.MasterPageFile
  fullName: System.Web.UI.Page.MasterPageFile
- uid: System.Web.UI.Page.MaxPageStateFieldLength
  parent: System.Web.UI.Page
  isExternal: false
  name: MaxPageStateFieldLength
  nameWithType: Page.MaxPageStateFieldLength
  fullName: System.Web.UI.Page.MaxPageStateFieldLength
- uid: System.Web.UI.Page.MetaDescription
  parent: System.Web.UI.Page
  isExternal: false
  name: MetaDescription
  nameWithType: Page.MetaDescription
  fullName: System.Web.UI.Page.MetaDescription
- uid: System.Web.UI.Page.MetaKeywords
  parent: System.Web.UI.Page
  isExternal: false
  name: MetaKeywords
  nameWithType: Page.MetaKeywords
  fullName: System.Web.UI.Page.MetaKeywords
- uid: System.Web.UI.Page.ModelBindingExecutionContext
  parent: System.Web.UI.Page
  isExternal: false
  name: ModelBindingExecutionContext
  nameWithType: Page.ModelBindingExecutionContext
  fullName: System.Web.UI.Page.ModelBindingExecutionContext
- uid: System.Web.ModelBinding.ModelBindingExecutionContext
  parent: System.Web.ModelBinding
  isExternal: false
  name: ModelBindingExecutionContext
  nameWithType: ModelBindingExecutionContext
  fullName: System.Web.ModelBinding.ModelBindingExecutionContext
- uid: System.Web.UI.Page.ModelState
  parent: System.Web.UI.Page
  isExternal: false
  name: ModelState
  nameWithType: Page.ModelState
  fullName: System.Web.UI.Page.ModelState
- uid: System.Web.ModelBinding.ModelStateDictionary
  parent: System.Web.ModelBinding
  isExternal: false
  name: ModelStateDictionary
  nameWithType: ModelStateDictionary
  fullName: System.Web.ModelBinding.ModelStateDictionary
- uid: System.Web.UI.Page.OnInit(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: Page.OnInit(EventArgs)
  fullName: System.Web.UI.Page.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.Page.OnInitComplete(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnInitComplete(EventArgs)
  nameWithType: Page.OnInitComplete(EventArgs)
  fullName: System.Web.UI.Page.OnInitComplete(EventArgs)
- uid: System.Web.UI.Page.OnLoadComplete(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnLoadComplete(EventArgs)
  nameWithType: Page.OnLoadComplete(EventArgs)
  fullName: System.Web.UI.Page.OnLoadComplete(EventArgs)
- uid: System.Web.UI.Page.OnPreInit(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreInit(EventArgs)
  nameWithType: Page.OnPreInit(EventArgs)
  fullName: System.Web.UI.Page.OnPreInit(EventArgs)
- uid: System.Web.UI.Page.OnPreLoad(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreLoad(EventArgs)
  nameWithType: Page.OnPreLoad(EventArgs)
  fullName: System.Web.UI.Page.OnPreLoad(EventArgs)
- uid: System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreRenderComplete(EventArgs)
  nameWithType: Page.OnPreRenderComplete(EventArgs)
  fullName: System.Web.UI.Page.OnPreRenderComplete(EventArgs)
- uid: System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnSaveStateComplete(EventArgs)
  nameWithType: Page.OnSaveStateComplete(EventArgs)
  fullName: System.Web.UI.Page.OnSaveStateComplete(EventArgs)
- uid: System.Web.UI.Page.PageAdapter
  parent: System.Web.UI.Page
  isExternal: false
  name: PageAdapter
  nameWithType: Page.PageAdapter
  fullName: System.Web.UI.Page.PageAdapter
- uid: System.Web.UI.Adapters.PageAdapter
  parent: System.Web.UI.Adapters
  isExternal: false
  name: PageAdapter
  nameWithType: PageAdapter
  fullName: System.Web.UI.Adapters.PageAdapter
- uid: System.Web.UI.Page.PageStatePersister
  parent: System.Web.UI.Page
  isExternal: false
  name: PageStatePersister
  nameWithType: Page.PageStatePersister
  fullName: System.Web.UI.Page.PageStatePersister
- uid: System.Web.UI.PageStatePersister
  parent: System.Web.UI
  isExternal: false
  name: PageStatePersister
  nameWithType: PageStatePersister
  fullName: System.Web.UI.PageStatePersister
- uid: System.Web.UI.Page.postEventArgumentID
  parent: System.Web.UI.Page
  isExternal: false
  name: postEventArgumentID
  nameWithType: Page.postEventArgumentID
  fullName: System.Web.UI.Page.postEventArgumentID
- uid: System.Web.UI.Page.postEventSourceID
  parent: System.Web.UI.Page
  isExternal: false
  name: postEventSourceID
  nameWithType: Page.postEventSourceID
  fullName: System.Web.UI.Page.postEventSourceID
- uid: System.Web.UI.Page.PreInit
  parent: System.Web.UI.Page
  isExternal: false
  name: PreInit
  nameWithType: Page.PreInit
  fullName: System.Web.UI.Page.PreInit
- uid: System.Web.UI.Page.PreLoad
  parent: System.Web.UI.Page
  isExternal: false
  name: PreLoad
  nameWithType: Page.PreLoad
  fullName: System.Web.UI.Page.PreLoad
- uid: System.Web.UI.Page.PreRenderComplete
  parent: System.Web.UI.Page
  isExternal: false
  name: PreRenderComplete
  nameWithType: Page.PreRenderComplete
  fullName: System.Web.UI.Page.PreRenderComplete
- uid: System.Web.UI.Page.PreviousPage
  parent: System.Web.UI.Page
  isExternal: false
  name: PreviousPage
  nameWithType: Page.PreviousPage
  fullName: System.Web.UI.Page.PreviousPage
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)
  parent: System.Web.UI.Page
  isExternal: false
  name: ProcessRequest(HttpContext)
  nameWithType: Page.ProcessRequest(HttpContext)
  fullName: System.Web.UI.Page.ProcessRequest(HttpContext)
- uid: System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RaisePostBackEvent(IPostBackEventHandler,String)
  nameWithType: Page.RaisePostBackEvent(IPostBackEventHandler,String)
  fullName: System.Web.UI.Page.RaisePostBackEvent(IPostBackEventHandler,String)
- uid: System.Web.UI.IPostBackEventHandler
  parent: System.Web.UI
  isExternal: false
  name: IPostBackEventHandler
  nameWithType: IPostBackEventHandler
  fullName: System.Web.UI.IPostBackEventHandler
- uid: System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterArrayDeclaration(String,String)
  nameWithType: Page.RegisterArrayDeclaration(String,String)
  fullName: System.Web.UI.Page.RegisterArrayDeclaration(String,String)
- uid: System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterAsyncTask(PageAsyncTask)
  nameWithType: Page.RegisterAsyncTask(PageAsyncTask)
  fullName: System.Web.UI.Page.RegisterAsyncTask(PageAsyncTask)
- uid: System.Web.UI.PageAsyncTask
  parent: System.Web.UI
  isExternal: false
  name: PageAsyncTask
  nameWithType: PageAsyncTask
  fullName: System.Web.UI.PageAsyncTask
- uid: System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterClientScriptBlock(String,String)
  nameWithType: Page.RegisterClientScriptBlock(String,String)
  fullName: System.Web.UI.Page.RegisterClientScriptBlock(String,String)
- uid: System.Web.UI.Page.RegisterHiddenField(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterHiddenField(String,String)
  nameWithType: Page.RegisterHiddenField(String,String)
  fullName: System.Web.UI.Page.RegisterHiddenField(String,String)
- uid: System.Web.UI.Page.RegisterOnSubmitStatement(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterOnSubmitStatement(String,String)
  nameWithType: Page.RegisterOnSubmitStatement(String,String)
  fullName: System.Web.UI.Page.RegisterOnSubmitStatement(String,String)
- uid: System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresControlState(Control)
  nameWithType: Page.RegisterRequiresControlState(Control)
  fullName: System.Web.UI.Page.RegisterRequiresControlState(Control)
- uid: System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresPostBack(Control)
  nameWithType: Page.RegisterRequiresPostBack(Control)
  fullName: System.Web.UI.Page.RegisterRequiresPostBack(Control)
- uid: System.Web.UI.Page.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresRaiseEvent(IPostBackEventHandler)
  nameWithType: Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)
  fullName: System.Web.UI.Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)
- uid: System.Web.UI.Page.RegisterRequiresViewStateEncryption
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresViewStateEncryption()
  nameWithType: Page.RegisterRequiresViewStateEncryption()
  fullName: System.Web.UI.Page.RegisterRequiresViewStateEncryption()
- uid: System.Web.UI.Page.RegisterStartupScript(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterStartupScript(String,String)
  nameWithType: Page.RegisterStartupScript(String,String)
  fullName: System.Web.UI.Page.RegisterStartupScript(String,String)
- uid: System.Web.UI.Page.RegisterViewStateHandler
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterViewStateHandler()
  nameWithType: Page.RegisterViewStateHandler()
  fullName: System.Web.UI.Page.RegisterViewStateHandler()
- uid: System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Page
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: Page.Render(HtmlTextWriter)
  fullName: System.Web.UI.Page.Render(HtmlTextWriter)
- uid: System.Web.UI.Page.Request
  parent: System.Web.UI.Page
  isExternal: false
  name: Request
  nameWithType: Page.Request
  fullName: System.Web.UI.Page.Request
- uid: System.Web.HttpRequest
  parent: System.Web
  isExternal: false
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: System.Web.HttpRequest
- uid: System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: RequiresControlState(Control)
  nameWithType: Page.RequiresControlState(Control)
  fullName: System.Web.UI.Page.RequiresControlState(Control)
- uid: System.Web.UI.Page.Response
  parent: System.Web.UI.Page
  isExternal: false
  name: Response
  nameWithType: Page.Response
  fullName: System.Web.UI.Page.Response
- uid: System.Web.HttpResponse
  parent: System.Web
  isExternal: false
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: System.Web.HttpResponse
- uid: System.Web.UI.Page.ResponseEncoding
  parent: System.Web.UI.Page
  isExternal: false
  name: ResponseEncoding
  nameWithType: Page.ResponseEncoding
  fullName: System.Web.UI.Page.ResponseEncoding
- uid: System.Web.UI.Page.RouteData
  parent: System.Web.UI.Page
  isExternal: false
  name: RouteData
  nameWithType: Page.RouteData
  fullName: System.Web.UI.Page.RouteData
- uid: System.Web.Routing.RouteData
  parent: System.Web.Routing
  isExternal: true
  name: RouteData
  nameWithType: RouteData
  fullName: System.Web.Routing.RouteData
- uid: System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: SavePageStateToPersistenceMedium(Object)
  nameWithType: Page.SavePageStateToPersistenceMedium(Object)
  fullName: System.Web.UI.Page.SavePageStateToPersistenceMedium(Object)
- uid: System.Web.UI.Page.SaveStateComplete
  parent: System.Web.UI.Page
  isExternal: false
  name: SaveStateComplete
  nameWithType: Page.SaveStateComplete
  fullName: System.Web.UI.Page.SaveStateComplete
- uid: System.Web.UI.Page.Server
  parent: System.Web.UI.Page
  isExternal: false
  name: Server
  nameWithType: Page.Server
  fullName: System.Web.UI.Page.Server
- uid: System.Web.HttpServerUtility
  parent: System.Web
  isExternal: false
  name: HttpServerUtility
  nameWithType: HttpServerUtility
  fullName: System.Web.HttpServerUtility
- uid: System.Web.UI.Page.Session
  parent: System.Web.UI.Page
  isExternal: false
  name: Session
  nameWithType: Page.Session
  fullName: System.Web.UI.Page.Session
- uid: System.Web.SessionState.HttpSessionState
  parent: System.Web.SessionState
  isExternal: false
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
- uid: System.Web.UI.Page.SetFocus(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: SetFocus(String)
  nameWithType: Page.SetFocus(String)
  fullName: System.Web.UI.Page.SetFocus(String)
- uid: System.Web.UI.Page.SetFocus(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: SetFocus(Control)
  nameWithType: Page.SetFocus(Control)
  fullName: System.Web.UI.Page.SetFocus(Control)
- uid: System.Web.UI.Page.SkipFormActionValidation
  parent: System.Web.UI.Page
  isExternal: false
  name: SkipFormActionValidation
  nameWithType: Page.SkipFormActionValidation
  fullName: System.Web.UI.Page.SkipFormActionValidation
- uid: System.Web.UI.Page.SmartNavigation
  parent: System.Web.UI.Page
  isExternal: false
  name: SmartNavigation
  nameWithType: Page.SmartNavigation
  fullName: System.Web.UI.Page.SmartNavigation
- uid: System.Web.UI.Page.StyleSheetTheme
  parent: System.Web.UI.Page
  isExternal: false
  name: StyleSheetTheme
  nameWithType: Page.StyleSheetTheme
  fullName: System.Web.UI.Page.StyleSheetTheme
- uid: System.Web.UI.Page.Theme
  parent: System.Web.UI.Page
  isExternal: false
  name: Theme
  nameWithType: Page.Theme
  fullName: System.Web.UI.Page.Theme
- uid: System.Web.UI.Page.Title
  parent: System.Web.UI.Page
  isExternal: false
  name: Title
  nameWithType: Page.Title
  fullName: System.Web.UI.Page.Title
- uid: System.Web.UI.Page.Trace
  parent: System.Web.UI.Page
  isExternal: false
  name: Trace
  nameWithType: Page.Trace
  fullName: System.Web.UI.Page.Trace
- uid: System.Web.TraceContext
  parent: System.Web
  isExternal: false
  name: TraceContext
  nameWithType: TraceContext
  fullName: System.Web.TraceContext
- uid: System.Web.UI.Page.TraceEnabled
  parent: System.Web.UI.Page
  isExternal: false
  name: TraceEnabled
  nameWithType: Page.TraceEnabled
  fullName: System.Web.UI.Page.TraceEnabled
- uid: System.Web.UI.Page.TraceModeValue
  parent: System.Web.UI.Page
  isExternal: false
  name: TraceModeValue
  nameWithType: Page.TraceModeValue
  fullName: System.Web.UI.Page.TraceModeValue
- uid: System.Web.TraceMode
  parent: System.Web
  isExternal: false
  name: TraceMode
  nameWithType: TraceMode
  fullName: System.Web.TraceMode
- uid: System.Web.UI.Page.TransactionMode
  parent: System.Web.UI.Page
  isExternal: false
  name: TransactionMode
  nameWithType: Page.TransactionMode
  fullName: System.Web.UI.Page.TransactionMode
- uid: System.Web.UI.Page.TryUpdateModel``1(``0)
  parent: System.Web.UI.Page
  isExternal: false
  name: TryUpdateModel(TModel)
  nameWithType: Page.TryUpdateModel(TModel)
  fullName: System.Web.UI.Page.TryUpdateModel(TModel)
- uid: TModel
  isExternal: true
  name: TModel
  nameWithType: TModel
  fullName: TModel
- uid: System.Web.UI.Page.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  parent: System.Web.UI.Page
  isExternal: false
  name: TryUpdateModel(TModel,IValueProvider)
  nameWithType: Page.TryUpdateModel(TModel,IValueProvider)
  fullName: System.Web.UI.Page.TryUpdateModel(TModel,IValueProvider)
- uid: System.Web.ModelBinding.IValueProvider
  parent: System.Web.ModelBinding
  isExternal: false
  name: IValueProvider
  nameWithType: IValueProvider
  fullName: System.Web.ModelBinding.IValueProvider
- uid: System.Web.UI.Page.UICulture
  parent: System.Web.UI.Page
  isExternal: false
  name: UICulture
  nameWithType: Page.UICulture
  fullName: System.Web.UI.Page.UICulture
- uid: System.Web.UI.Page.UniqueFilePathSuffix
  parent: System.Web.UI.Page
  isExternal: false
  name: UniqueFilePathSuffix
  nameWithType: Page.UniqueFilePathSuffix
  fullName: System.Web.UI.Page.UniqueFilePathSuffix
- uid: System.Web.UI.Page.UnobtrusiveValidationMode
  parent: System.Web.UI.Page
  isExternal: false
  name: UnobtrusiveValidationMode
  nameWithType: Page.UnobtrusiveValidationMode
  fullName: System.Web.UI.Page.UnobtrusiveValidationMode
- uid: System.Web.UI.UnobtrusiveValidationMode
  parent: System.Web.UI
  isExternal: false
  name: UnobtrusiveValidationMode
  nameWithType: UnobtrusiveValidationMode
  fullName: System.Web.UI.UnobtrusiveValidationMode
- uid: System.Web.UI.Page.UnregisterRequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: UnregisterRequiresControlState(Control)
  nameWithType: Page.UnregisterRequiresControlState(Control)
  fullName: System.Web.UI.Page.UnregisterRequiresControlState(Control)
- uid: System.Web.UI.Page.UpdateModel``1(``0)
  parent: System.Web.UI.Page
  isExternal: false
  name: UpdateModel(TModel)
  nameWithType: Page.UpdateModel(TModel)
  fullName: System.Web.UI.Page.UpdateModel(TModel)
- uid: System.Web.UI.Page.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  parent: System.Web.UI.Page
  isExternal: false
  name: UpdateModel(TModel,IValueProvider)
  nameWithType: Page.UpdateModel(TModel,IValueProvider)
  fullName: System.Web.UI.Page.UpdateModel(TModel,IValueProvider)
- uid: System.Web.UI.Page.User
  parent: System.Web.UI.Page
  isExternal: false
  name: User
  nameWithType: Page.User
  fullName: System.Web.UI.Page.User
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Web.UI.Page.Validate
  parent: System.Web.UI.Page
  isExternal: false
  name: Validate()
  nameWithType: Page.Validate()
  fullName: System.Web.UI.Page.Validate()
- uid: System.Web.UI.Page.Validate(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: Validate(String)
  nameWithType: Page.Validate(String)
  fullName: System.Web.UI.Page.Validate(String)
- uid: System.Web.UI.Page.ValidateRequestMode
  parent: System.Web.UI.Page
  isExternal: false
  name: ValidateRequestMode
  nameWithType: Page.ValidateRequestMode
  fullName: System.Web.UI.Page.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.UI.Page.Validators
  parent: System.Web.UI.Page
  isExternal: false
  name: Validators
  nameWithType: Page.Validators
  fullName: System.Web.UI.Page.Validators
- uid: System.Web.UI.Page.VerifyRenderingInServerForm(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: VerifyRenderingInServerForm(Control)
  nameWithType: Page.VerifyRenderingInServerForm(Control)
  fullName: System.Web.UI.Page.VerifyRenderingInServerForm(Control)
- uid: System.Web.UI.Page.ViewStateEncryptionMode
  parent: System.Web.UI.Page
  isExternal: false
  name: ViewStateEncryptionMode
  nameWithType: Page.ViewStateEncryptionMode
  fullName: System.Web.UI.Page.ViewStateEncryptionMode
- uid: System.Web.UI.ViewStateEncryptionMode
  parent: System.Web.UI
  isExternal: false
  name: ViewStateEncryptionMode
  nameWithType: ViewStateEncryptionMode
  fullName: System.Web.UI.ViewStateEncryptionMode
- uid: System.Web.UI.Page.ViewStateUserKey
  parent: System.Web.UI.Page
  isExternal: false
  name: ViewStateUserKey
  nameWithType: Page.ViewStateUserKey
  fullName: System.Web.UI.Page.ViewStateUserKey
- uid: System.Web.UI.Page.Visible
  parent: System.Web.UI.Page
  isExternal: false
  name: Visible
  nameWithType: Page.Visible
  fullName: System.Web.UI.Page.Visible
- uid: System.Web.UI.Page.#ctor*
  parent: System.Web.UI.Page
  isExternal: false
  name: Page
  nameWithType: Page.Page
- uid: System.Web.UI.Page.AddContentTemplate*
  parent: System.Web.UI.Page
  isExternal: false
  name: AddContentTemplate
  nameWithType: Page.AddContentTemplate
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync*
  parent: System.Web.UI.Page
  isExternal: false
  name: AddOnPreRenderCompleteAsync
  nameWithType: Page.AddOnPreRenderCompleteAsync
- uid: System.Web.UI.Page.AddWrappedFileDependencies*
  parent: System.Web.UI.Page
  isExternal: false
  name: AddWrappedFileDependencies
  nameWithType: Page.AddWrappedFileDependencies
- uid: System.Web.UI.Page.Application*
  parent: System.Web.UI.Page
  isExternal: false
  name: Application
  nameWithType: Page.Application
- uid: System.Web.UI.Page.AspCompatBeginProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatBeginProcessRequest
  nameWithType: Page.AspCompatBeginProcessRequest
- uid: System.Web.UI.Page.AspCompatEndProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatEndProcessRequest
  nameWithType: Page.AspCompatEndProcessRequest
- uid: System.Web.UI.Page.AspCompatMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatMode
  nameWithType: Page.AspCompatMode
- uid: System.Web.UI.Page.AsyncMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncMode
  nameWithType: Page.AsyncMode
- uid: System.Web.UI.Page.AsyncPageBeginProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncPageBeginProcessRequest
  nameWithType: Page.AsyncPageBeginProcessRequest
- uid: System.Web.UI.Page.AsyncPageEndProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncPageEndProcessRequest
  nameWithType: Page.AsyncPageEndProcessRequest
- uid: System.Web.UI.Page.AsyncTimeout*
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncTimeout
  nameWithType: Page.AsyncTimeout
- uid: System.Web.UI.Page.AutoPostBackControl*
  parent: System.Web.UI.Page
  isExternal: false
  name: AutoPostBackControl
  nameWithType: Page.AutoPostBackControl
- uid: System.Web.UI.Page.Buffer*
  parent: System.Web.UI.Page
  isExternal: false
  name: Buffer
  nameWithType: Page.Buffer
- uid: System.Web.UI.Page.Cache*
  parent: System.Web.UI.Page
  isExternal: false
  name: Cache
  nameWithType: Page.Cache
- uid: System.Web.UI.Page.ClientQueryString*
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientQueryString
  nameWithType: Page.ClientQueryString
- uid: System.Web.UI.Page.ClientScript*
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientScript
  nameWithType: Page.ClientScript
- uid: System.Web.UI.Page.ClientTarget*
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientTarget
  nameWithType: Page.ClientTarget
- uid: System.Web.UI.Page.CodePage*
  parent: System.Web.UI.Page
  isExternal: false
  name: CodePage
  nameWithType: Page.CodePage
- uid: System.Web.UI.Page.ContentType*
  parent: System.Web.UI.Page
  isExternal: false
  name: ContentType
  nameWithType: Page.ContentType
- uid: System.Web.UI.Page.Context*
  parent: System.Web.UI.Page
  isExternal: false
  name: Context
  nameWithType: Page.Context
- uid: System.Web.UI.Page.CreateHtmlTextWriter*
  parent: System.Web.UI.Page
  isExternal: false
  name: CreateHtmlTextWriter
  nameWithType: Page.CreateHtmlTextWriter
- uid: System.Web.UI.Page.CreateHtmlTextWriterFromType*
  parent: System.Web.UI.Page
  isExternal: false
  name: CreateHtmlTextWriterFromType
  nameWithType: Page.CreateHtmlTextWriterFromType
- uid: System.Web.UI.Page.Culture*
  parent: System.Web.UI.Page
  isExternal: false
  name: Culture
  nameWithType: Page.Culture
- uid: System.Web.UI.Page.DesignerInitialize*
  parent: System.Web.UI.Page
  isExternal: false
  name: DesignerInitialize
  nameWithType: Page.DesignerInitialize
- uid: System.Web.UI.Page.DeterminePostBackMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: DeterminePostBackMode
  nameWithType: Page.DeterminePostBackMode
- uid: System.Web.UI.Page.DeterminePostBackModeUnvalidated*
  parent: System.Web.UI.Page
  isExternal: false
  name: DeterminePostBackModeUnvalidated
  nameWithType: Page.DeterminePostBackModeUnvalidated
- uid: System.Web.UI.Page.EnableEventValidation*
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableEventValidation
  nameWithType: Page.EnableEventValidation
- uid: System.Web.UI.Page.EnableViewState*
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableViewState
  nameWithType: Page.EnableViewState
- uid: System.Web.UI.Page.EnableViewStateMac*
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableViewStateMac
  nameWithType: Page.EnableViewStateMac
- uid: System.Web.UI.Page.ErrorPage*
  parent: System.Web.UI.Page
  isExternal: false
  name: ErrorPage
  nameWithType: Page.ErrorPage
- uid: System.Web.UI.Page.ExecuteRegisteredAsyncTasks*
  parent: System.Web.UI.Page
  isExternal: false
  name: ExecuteRegisteredAsyncTasks
  nameWithType: Page.ExecuteRegisteredAsyncTasks
- uid: System.Web.UI.Page.FileDependencies*
  parent: System.Web.UI.Page
  isExternal: false
  name: FileDependencies
  nameWithType: Page.FileDependencies
- uid: System.Web.UI.Page.FindControl*
  parent: System.Web.UI.Page
  isExternal: false
  name: FindControl
  nameWithType: Page.FindControl
- uid: System.Web.UI.Page.Form*
  parent: System.Web.UI.Page
  isExternal: false
  name: Form
  nameWithType: Page.Form
- uid: System.Web.UI.Page.FrameworkInitialize*
  parent: System.Web.UI.Page
  isExternal: false
  name: FrameworkInitialize
  nameWithType: Page.FrameworkInitialize
- uid: System.Web.UI.Page.GetDataItem*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetDataItem
  nameWithType: Page.GetDataItem
- uid: System.Web.UI.Page.GetPostBackClientEvent*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackClientEvent
  nameWithType: Page.GetPostBackClientEvent
- uid: System.Web.UI.Page.GetPostBackClientHyperlink*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackClientHyperlink
  nameWithType: Page.GetPostBackClientHyperlink
- uid: System.Web.UI.Page.GetPostBackEventReference*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackEventReference
  nameWithType: Page.GetPostBackEventReference
- uid: System.Web.UI.Page.GetTypeHashCode*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetTypeHashCode
  nameWithType: Page.GetTypeHashCode
- uid: System.Web.UI.Page.GetValidators*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetValidators
  nameWithType: Page.GetValidators
- uid: System.Web.UI.Page.GetWrappedFileDependencies*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetWrappedFileDependencies
  nameWithType: Page.GetWrappedFileDependencies
- uid: System.Web.UI.Page.Header*
  parent: System.Web.UI.Page
  isExternal: false
  name: Header
  nameWithType: Page.Header
- uid: System.Web.UI.Page.ID*
  parent: System.Web.UI.Page
  isExternal: false
  name: ID
  nameWithType: Page.ID
- uid: System.Web.UI.Page.IdSeparator*
  parent: System.Web.UI.Page
  isExternal: false
  name: IdSeparator
  nameWithType: Page.IdSeparator
- uid: System.Web.UI.Page.InitializeCulture*
  parent: System.Web.UI.Page
  isExternal: false
  name: InitializeCulture
  nameWithType: Page.InitializeCulture
- uid: System.Web.UI.Page.InitOutputCache*
  parent: System.Web.UI.Page
  isExternal: false
  name: InitOutputCache
  nameWithType: Page.InitOutputCache
- uid: System.Web.UI.Page.IsAsync*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsAsync
  nameWithType: Page.IsAsync
- uid: System.Web.UI.Page.IsCallback*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsCallback
  nameWithType: Page.IsCallback
- uid: System.Web.UI.Page.IsClientScriptBlockRegistered*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsClientScriptBlockRegistered
  nameWithType: Page.IsClientScriptBlockRegistered
- uid: System.Web.UI.Page.IsCrossPagePostBack*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsCrossPagePostBack
  nameWithType: Page.IsCrossPagePostBack
- uid: System.Web.UI.Page.IsPostBack*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsPostBack
  nameWithType: Page.IsPostBack
- uid: System.Web.UI.Page.IsPostBackEventControlRegistered*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsPostBackEventControlRegistered
  nameWithType: Page.IsPostBackEventControlRegistered
- uid: System.Web.UI.Page.IsReusable*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsReusable
  nameWithType: Page.IsReusable
- uid: System.Web.UI.Page.IsStartupScriptRegistered*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsStartupScriptRegistered
  nameWithType: Page.IsStartupScriptRegistered
- uid: System.Web.UI.Page.IsValid*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsValid
  nameWithType: Page.IsValid
- uid: System.Web.UI.Page.Items*
  parent: System.Web.UI.Page
  isExternal: false
  name: Items
  nameWithType: Page.Items
- uid: System.Web.UI.Page.LCID*
  parent: System.Web.UI.Page
  isExternal: false
  name: LCID
  nameWithType: Page.LCID
- uid: System.Web.UI.Page.LoadPageStateFromPersistenceMedium*
  parent: System.Web.UI.Page
  isExternal: false
  name: LoadPageStateFromPersistenceMedium
  nameWithType: Page.LoadPageStateFromPersistenceMedium
- uid: System.Web.UI.Page.MaintainScrollPositionOnPostBack*
  parent: System.Web.UI.Page
  isExternal: false
  name: MaintainScrollPositionOnPostBack
  nameWithType: Page.MaintainScrollPositionOnPostBack
- uid: System.Web.UI.Page.MapPath*
  parent: System.Web.UI.Page
  isExternal: false
  name: MapPath
  nameWithType: Page.MapPath
- uid: System.Web.UI.Page.Master*
  parent: System.Web.UI.Page
  isExternal: false
  name: Master
  nameWithType: Page.Master
- uid: System.Web.UI.Page.MasterPageFile*
  parent: System.Web.UI.Page
  isExternal: false
  name: MasterPageFile
  nameWithType: Page.MasterPageFile
- uid: System.Web.UI.Page.MaxPageStateFieldLength*
  parent: System.Web.UI.Page
  isExternal: false
  name: MaxPageStateFieldLength
  nameWithType: Page.MaxPageStateFieldLength
- uid: System.Web.UI.Page.MetaDescription*
  parent: System.Web.UI.Page
  isExternal: false
  name: MetaDescription
  nameWithType: Page.MetaDescription
- uid: System.Web.UI.Page.MetaKeywords*
  parent: System.Web.UI.Page
  isExternal: false
  name: MetaKeywords
  nameWithType: Page.MetaKeywords
- uid: System.Web.UI.Page.ModelBindingExecutionContext*
  parent: System.Web.UI.Page
  isExternal: false
  name: ModelBindingExecutionContext
  nameWithType: Page.ModelBindingExecutionContext
- uid: System.Web.UI.Page.ModelState*
  parent: System.Web.UI.Page
  isExternal: false
  name: ModelState
  nameWithType: Page.ModelState
- uid: System.Web.UI.Page.OnInit*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnInit
  nameWithType: Page.OnInit
- uid: System.Web.UI.Page.OnInitComplete*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnInitComplete
  nameWithType: Page.OnInitComplete
- uid: System.Web.UI.Page.OnLoadComplete*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnLoadComplete
  nameWithType: Page.OnLoadComplete
- uid: System.Web.UI.Page.OnPreInit*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreInit
  nameWithType: Page.OnPreInit
- uid: System.Web.UI.Page.OnPreLoad*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreLoad
  nameWithType: Page.OnPreLoad
- uid: System.Web.UI.Page.OnPreRenderComplete*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreRenderComplete
  nameWithType: Page.OnPreRenderComplete
- uid: System.Web.UI.Page.OnSaveStateComplete*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnSaveStateComplete
  nameWithType: Page.OnSaveStateComplete
- uid: System.Web.UI.Page.PageAdapter*
  parent: System.Web.UI.Page
  isExternal: false
  name: PageAdapter
  nameWithType: Page.PageAdapter
- uid: System.Web.UI.Page.PageStatePersister*
  parent: System.Web.UI.Page
  isExternal: false
  name: PageStatePersister
  nameWithType: Page.PageStatePersister
- uid: System.Web.UI.Page.PreviousPage*
  parent: System.Web.UI.Page
  isExternal: false
  name: PreviousPage
  nameWithType: Page.PreviousPage
- uid: System.Web.UI.Page.ProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: ProcessRequest
  nameWithType: Page.ProcessRequest
- uid: System.Web.UI.Page.RaisePostBackEvent*
  parent: System.Web.UI.Page
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: Page.RaisePostBackEvent
- uid: System.Web.UI.Page.RegisterArrayDeclaration*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterArrayDeclaration
  nameWithType: Page.RegisterArrayDeclaration
- uid: System.Web.UI.Page.RegisterAsyncTask*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterAsyncTask
  nameWithType: Page.RegisterAsyncTask
- uid: System.Web.UI.Page.RegisterClientScriptBlock*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterClientScriptBlock
  nameWithType: Page.RegisterClientScriptBlock
- uid: System.Web.UI.Page.RegisterHiddenField*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterHiddenField
  nameWithType: Page.RegisterHiddenField
- uid: System.Web.UI.Page.RegisterOnSubmitStatement*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterOnSubmitStatement
  nameWithType: Page.RegisterOnSubmitStatement
- uid: System.Web.UI.Page.RegisterRequiresControlState*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresControlState
  nameWithType: Page.RegisterRequiresControlState
- uid: System.Web.UI.Page.RegisterRequiresPostBack*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresPostBack
  nameWithType: Page.RegisterRequiresPostBack
- uid: System.Web.UI.Page.RegisterRequiresRaiseEvent*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresRaiseEvent
  nameWithType: Page.RegisterRequiresRaiseEvent
- uid: System.Web.UI.Page.RegisterRequiresViewStateEncryption*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresViewStateEncryption
  nameWithType: Page.RegisterRequiresViewStateEncryption
- uid: System.Web.UI.Page.RegisterStartupScript*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterStartupScript
  nameWithType: Page.RegisterStartupScript
- uid: System.Web.UI.Page.RegisterViewStateHandler*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterViewStateHandler
  nameWithType: Page.RegisterViewStateHandler
- uid: System.Web.UI.Page.Render*
  parent: System.Web.UI.Page
  isExternal: false
  name: Render
  nameWithType: Page.Render
- uid: System.Web.UI.Page.Request*
  parent: System.Web.UI.Page
  isExternal: false
  name: Request
  nameWithType: Page.Request
- uid: System.Web.UI.Page.RequiresControlState*
  parent: System.Web.UI.Page
  isExternal: false
  name: RequiresControlState
  nameWithType: Page.RequiresControlState
- uid: System.Web.UI.Page.Response*
  parent: System.Web.UI.Page
  isExternal: false
  name: Response
  nameWithType: Page.Response
- uid: System.Web.UI.Page.ResponseEncoding*
  parent: System.Web.UI.Page
  isExternal: false
  name: ResponseEncoding
  nameWithType: Page.ResponseEncoding
- uid: System.Web.UI.Page.RouteData*
  parent: System.Web.UI.Page
  isExternal: false
  name: RouteData
  nameWithType: Page.RouteData
- uid: System.Web.UI.Page.SavePageStateToPersistenceMedium*
  parent: System.Web.UI.Page
  isExternal: false
  name: SavePageStateToPersistenceMedium
  nameWithType: Page.SavePageStateToPersistenceMedium
- uid: System.Web.UI.Page.Server*
  parent: System.Web.UI.Page
  isExternal: false
  name: Server
  nameWithType: Page.Server
- uid: System.Web.UI.Page.Session*
  parent: System.Web.UI.Page
  isExternal: false
  name: Session
  nameWithType: Page.Session
- uid: System.Web.UI.Page.SetFocus*
  parent: System.Web.UI.Page
  isExternal: false
  name: SetFocus
  nameWithType: Page.SetFocus
- uid: System.Web.UI.Page.SkipFormActionValidation*
  parent: System.Web.UI.Page
  isExternal: false
  name: SkipFormActionValidation
  nameWithType: Page.SkipFormActionValidation
- uid: System.Web.UI.Page.SmartNavigation*
  parent: System.Web.UI.Page
  isExternal: false
  name: SmartNavigation
  nameWithType: Page.SmartNavigation
- uid: System.Web.UI.Page.StyleSheetTheme*
  parent: System.Web.UI.Page
  isExternal: false
  name: StyleSheetTheme
  nameWithType: Page.StyleSheetTheme
- uid: System.Web.UI.Page.Theme*
  parent: System.Web.UI.Page
  isExternal: false
  name: Theme
  nameWithType: Page.Theme
- uid: System.Web.UI.Page.Title*
  parent: System.Web.UI.Page
  isExternal: false
  name: Title
  nameWithType: Page.Title
- uid: System.Web.UI.Page.Trace*
  parent: System.Web.UI.Page
  isExternal: false
  name: Trace
  nameWithType: Page.Trace
- uid: System.Web.UI.Page.TraceEnabled*
  parent: System.Web.UI.Page
  isExternal: false
  name: TraceEnabled
  nameWithType: Page.TraceEnabled
- uid: System.Web.UI.Page.TraceModeValue*
  parent: System.Web.UI.Page
  isExternal: false
  name: TraceModeValue
  nameWithType: Page.TraceModeValue
- uid: System.Web.UI.Page.TransactionMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: TransactionMode
  nameWithType: Page.TransactionMode
- uid: System.Web.UI.Page.TryUpdateModel<TModel>*
  parent: System.Web.UI.Page
  isExternal: false
  name: TryUpdateModel<TModel>
  nameWithType: Page.TryUpdateModel<TModel>
- uid: System.Web.UI.Page.UICulture*
  parent: System.Web.UI.Page
  isExternal: false
  name: UICulture
  nameWithType: Page.UICulture
- uid: System.Web.UI.Page.UniqueFilePathSuffix*
  parent: System.Web.UI.Page
  isExternal: false
  name: UniqueFilePathSuffix
  nameWithType: Page.UniqueFilePathSuffix
- uid: System.Web.UI.Page.UnobtrusiveValidationMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: UnobtrusiveValidationMode
  nameWithType: Page.UnobtrusiveValidationMode
- uid: System.Web.UI.Page.UnregisterRequiresControlState*
  parent: System.Web.UI.Page
  isExternal: false
  name: UnregisterRequiresControlState
  nameWithType: Page.UnregisterRequiresControlState
- uid: System.Web.UI.Page.UpdateModel<TModel>*
  parent: System.Web.UI.Page
  isExternal: false
  name: UpdateModel<TModel>
  nameWithType: Page.UpdateModel<TModel>
- uid: System.Web.UI.Page.User*
  parent: System.Web.UI.Page
  isExternal: false
  name: User
  nameWithType: Page.User
- uid: System.Web.UI.Page.Validate*
  parent: System.Web.UI.Page
  isExternal: false
  name: Validate
  nameWithType: Page.Validate
- uid: System.Web.UI.Page.ValidateRequestMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: ValidateRequestMode
  nameWithType: Page.ValidateRequestMode
- uid: System.Web.UI.Page.Validators*
  parent: System.Web.UI.Page
  isExternal: false
  name: Validators
  nameWithType: Page.Validators
- uid: System.Web.UI.Page.VerifyRenderingInServerForm*
  parent: System.Web.UI.Page
  isExternal: false
  name: VerifyRenderingInServerForm
  nameWithType: Page.VerifyRenderingInServerForm
- uid: System.Web.UI.Page.ViewStateEncryptionMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: ViewStateEncryptionMode
  nameWithType: Page.ViewStateEncryptionMode
- uid: System.Web.UI.Page.ViewStateUserKey*
  parent: System.Web.UI.Page
  isExternal: false
  name: ViewStateUserKey
  nameWithType: Page.ViewStateUserKey
- uid: System.Web.UI.Page.Visible*
  parent: System.Web.UI.Page
  isExternal: false
  name: Visible
  nameWithType: Page.Visible
