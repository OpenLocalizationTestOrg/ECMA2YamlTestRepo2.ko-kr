### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  id: DirectoryCatalog
  children:
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose(System.Boolean)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetEnumerator
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString
  langs:
  - csharp
  name: DirectoryCatalog
  nameWithType: DirectoryCatalog
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  type: Class
  summary: "지정된 된 디렉터리의 어셈블리에서 특성이 지정 된 부분을 검색합니다."
  remarks: "지정된 된 디렉터리의 내용을 구문 분석을 DirectoryCatalog 개체를 사용할 수 있습니다. 동적 연결 라이브러리 (DLL) 파일에 포함 된 모든 특성된 추출 되 고 카탈로그를 통해 사용할 수 있습니다. 특정 Dll로 구문 분석을 제한 하려면 검색 패턴은 동일한 구문을 사용 하 여 지정할 수 있습니다는 <xref:System.IO.Directory.GetFiles%2A?displayProperty=fullName>메서드.</xref:System.IO.Directory.GetFiles%2A?displayProperty=fullName>      > [!WARNING] > 지정 된 디렉터리 관리자가 아닌에 액세스가 허용 되지 않습니다. 예를 들어 임시 인터넷 파일을 포함 하는 폴더를 사용 하 여 응용 프로그램의 취약점 만들 수 있습니다.       이 형식이 구현 하는 <xref:System.IDisposable>인터페이스.</xref:System.IDisposable> 형식을 사용 하 여 마쳤으면는 삭제 해야의 직접 또는 간접적으로 합니다. 직접 형식의 삭제 하려면 해당 <xref:System.IDisposable.Dispose%2A>에서 메서드는 `try` / `catch` 블록.</xref:System.IDisposable.Dispose%2A> 작업을 삭제할 하지 직접,를 사용 하 여 언어 구문와 같은 `using` (C#에서) 또는 `Using` (Visual Basic)에서는 합니다. 자세한 내용은의 &quot;를 사용 하는 개체는 구현 IDisposable&quot; 섹션을 참조 하십시오.는 <xref:System.IDisposable>인터페이스 항목.</xref:System.IDisposable>"
  example:
  - "The following example creates a DirectoryCatalog object that searches the directory the application runs from for parts. It uses a simple import to test the catalog. To fulfill this import, a DLL in the directory must have a matching export, as illustrated in the second code block.  \n  \n [!code-cs[Composition.DirectoryCatalog#1](~/add/codesnippet/csharp/consoleapplication7/program.cs#1)]\n [!code-vb[Composition.DirectoryCatalog#1](~/add/codesnippet/visualbasic/consoleapplication8/module1.vb#1)]  \n  \n To create the matching export, the following code must be in a DLL file. To create a DLL file in Visual Studio, add a new project of the type \"Class Library\" to your solution, and place this code in it.  \n  \n [!code-cs[Composition.DirectoryCatalog#2](~/add/codesnippet/csharp/classlibrary1/class1.cs#2)]\n [!code-vb[Composition.DirectoryCatalog#2](~/add/codesnippet/visualbasic/classlibrary1/class1.vb#2)]"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerTypeProxy(typeof(System.ComponentModel.Composition.Hosting.DirectoryCatalog/DirectoryCatalogDebuggerProxy))]

      public class DirectoryCatalog : System.ComponentModel.Composition.Primitives.ComposablePartCatalog, System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged, System.ComponentModel.Composition.Primitives.ICompositionElement
  inheritance:
  - System.Object
  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  implements:
  - System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged
  - System.ComponentModel.Composition.Primitives.ICompositionElement
  inheritedMembers:
  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose
  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts
  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System#Collections#IEnumerable#GetEnumerator
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: DirectoryCatalog(String)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref> 클래스를 사용 하 여 <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;> </xref> 지정한 디렉터리 경로 있는 모든 DLL 파일을 기반으로 하는 개체입니다."
  syntax:
    content: public DirectoryCatalog (string path);
    parameters:
    - id: path
      type: System.String
      description: "카탈로그에 추가할 어셈블리를 검색할 디렉터리에 대 한 경로입니다.       경로 절대 또는 <xref:System.AppDomain.BaseDirectory*>.</xref:System.AppDomain.BaseDirectory*> 기준으로 해야 합니다."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 <code> path </code> 올바르지 않습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>빈 문자열, 공백만 포함 또는 하나 이상의 특정 구현에 잘못 된 문자가 있습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정 된 <code> path </code>, 파일 이름 또는 둘 다 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 컴퓨터에 경로 248 자 미만 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)
  id: '#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)'
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: DirectoryCatalog(String,ICompositionElement)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,ICompositionElement)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,ICompositionElement)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref> 클래스를 사용 하 여 <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;> </xref> 개체 파일을 기반으로 모든 DLL 지정한 원본 가진 지정 된 디렉터리 경로 있는 부분에 대 한 합니다."
  syntax:
    content: public DirectoryCatalog (string path, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);
    parameters:
    - id: path
      type: System.String
      description: "카탈로그에 추가할 어셈블리를 검색할 디렉터리에 대 한 경로입니다.       경로 절대 또는 <xref:System.AppDomain.BaseDirectory*>.</xref:System.AppDomain.BaseDirectory*> 기준으로 해야 합니다."
    - id: definitionOrigin
      type: System.ComponentModel.Composition.Primitives.ICompositionElement
      description: "진단에 의해 부분에 대 한 원본을 식별 하는 데 사용 되는 요소입니다."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 <code> path </code> 올바르지 않습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>빈 문자열, 공백만 포함 또는 하나 이상의 특정 구현에 잘못 된 문자가 있습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정 된 <code> path </code>, 파일 이름 또는 둘 다 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 컴퓨터에 경로 248 자 미만 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext)
  id: '#ctor(System.String,System.Reflection.ReflectionContext)'
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: DirectoryCatalog(String,ReflectionContext)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,ReflectionContext)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,ReflectionContext)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref> 클래스를 사용 하 여 <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;> </xref> 지정 된 리플렉션 컨텍스트에서 지정 된 디렉터리 경로에 모든 DLL 파일을 기반으로 하는 개체입니다."
  syntax:
    content: public DirectoryCatalog (string path, System.Reflection.ReflectionContext reflectionContext);
    parameters:
    - id: path
      type: System.String
      description: "카탈로그에 추가할 어셈블리를 검색할 디렉터리에 대 한 경로입니다.       경로 절대 또는 <xref:System.AppDomain.BaseDirectory*>.</xref:System.AppDomain.BaseDirectory*> 기준으로 해야 합니다."
    - id: reflectionContext
      type: System.Reflection.ReflectionContext
      description: "부품을 생성 하는 데 사용 되는 컨텍스트."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 <code> path </code> 올바르지 않습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>빈 문자열, 공백만 포함 또는 하나 이상의 특정 구현에 잘못 된 문자가 있습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정 된 <code> path </code>, 파일 이름 또는 둘 다 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 컴퓨터에 경로 248 자 미만 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: DirectoryCatalog(String,String)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,String)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,String)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref> 클래스를 사용 하 여 <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;> </xref> 지정한 디렉터리 경로에서 지정 된 검색 패턴과 일치 하는 개체입니다."
  syntax:
    content: public DirectoryCatalog (string path, string searchPattern);
    parameters:
    - id: path
      type: System.String
      description: "카탈로그에 추가할 어셈블리를 검색할 디렉터리에 대 한 경로입니다.       경로 절대 또는 <xref:System.AppDomain.BaseDirectory*>.</xref:System.AppDomain.BaseDirectory*> 기준으로 해야 합니다."
    - id: searchPattern
      type: System.String
      description: "검색 문자열입니다. 에 지정 된 문자열의 형식은 같아야는 <xref:System.IO.Directory.GetFiles*>메서드.</xref:System.IO.Directory.GetFiles*>"
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 <code> path </code> 올바르지 않습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>searchPattern</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>빈 문자열, 공백만 포함 또는 하나 이상의 특정 구현에 잘못 된 문자가 있습니다.       -또는- <code>searchPattern</code> 유효한 패턴을 포함 하지 않습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정 된 <code> path </code>, 파일 이름 또는 둘 다 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 컴퓨터에 경로 248 자 미만 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)
  id: '#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)'
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: DirectoryCatalog(String,ReflectionContext,ICompositionElement)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,ReflectionContext,ICompositionElement)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,ReflectionContext,ICompositionElement)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref> 클래스를 사용 하 여 <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;> </xref> 지정 된 리플렉션 컨텍스트에서 지정 된 디렉터리 경로에 모든 DLL 파일을 기반으로 하는 개체입니다."
  syntax:
    content: public DirectoryCatalog (string path, System.Reflection.ReflectionContext reflectionContext, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);
    parameters:
    - id: path
      type: System.String
      description: "카탈로그에 추가할 어셈블리를 검색할 디렉터리에 대 한 경로입니다.       경로 절대 또는 <xref:System.AppDomain.BaseDirectory*>.</xref:System.AppDomain.BaseDirectory*> 기준으로 해야 합니다."
    - id: reflectionContext
      type: System.Reflection.ReflectionContext
      description: "부품을 생성 하는 데 사용 되는 컨텍스트."
    - id: definitionOrigin
      type: System.ComponentModel.Composition.Primitives.ICompositionElement
      description: "진단에 의해 부분에 대 한 원본을 식별 하는 데 사용 되는 요소입니다."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 <code> path </code> 올바르지 않습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>빈 문자열, 공백만 포함 또는 하나 이상의 특정 구현에 잘못 된 문자가 있습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정 된 <code> path </code>, 파일 이름 또는 둘 다 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 컴퓨터에 경로 248 자 미만 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)
  id: '#ctor(System.String,System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)'
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: DirectoryCatalog(String,String,ICompositionElement)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,String,ICompositionElement)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,String,ICompositionElement)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref> 클래스를 사용 하 여 <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;> </xref> 부분에 대 한 지정한 원본 가진 지정 된 디렉터리 경로에 지정 된 검색 패턴을 기반으로 하는 개체입니다."
  syntax:
    content: public DirectoryCatalog (string path, string searchPattern, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);
    parameters:
    - id: path
      type: System.String
      description: "카탈로그에 추가할 어셈블리를 검색할 디렉터리에 대 한 경로입니다.       경로 절대 또는 <xref:System.AppDomain.BaseDirectory*>.</xref:System.AppDomain.BaseDirectory*> 기준으로 해야 합니다."
    - id: searchPattern
      type: System.String
      description: "검색 문자열입니다. 에 지정 된 문자열의 형식은 같아야는 <xref:System.IO.Directory.GetFiles*>메서드.</xref:System.IO.Directory.GetFiles*>"
    - id: definitionOrigin
      type: System.ComponentModel.Composition.Primitives.ICompositionElement
      description: "진단에 의해 부분에 대 한 원본을 식별 하는 데 사용 되는 요소입니다."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 <code> path </code> 올바르지 않습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>searchPattern</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>빈 문자열, 공백만 포함 또는 하나 이상의 특정 구현에 잘못 된 문자가 있습니다.       -또는- <code>searchPattern</code> 유효한 패턴을 포함 하지 않습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정 된 <code> path </code>, 파일 이름 또는 둘 다 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 컴퓨터에 경로 248 자 미만 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext)
  id: '#ctor(System.String,System.String,System.Reflection.ReflectionContext)'
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: DirectoryCatalog(String,String,ReflectionContext)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,String,ReflectionContext)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,String,ReflectionContext)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref> 클래스를 사용 하 여 <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;> </xref> 지정 된 리플렉션 컨텍스트를 사용 하 여 지정 된 디렉터리 경로에 지정 된 검색 패턴을 기반으로 하는 개체입니다."
  syntax:
    content: public DirectoryCatalog (string path, string searchPattern, System.Reflection.ReflectionContext reflectionContext);
    parameters:
    - id: path
      type: System.String
      description: "카탈로그에 추가할 어셈블리를 검색할 디렉터리에 대 한 경로입니다.       경로 절대 또는 <xref:System.AppDomain.BaseDirectory*>.</xref:System.AppDomain.BaseDirectory*> 기준으로 해야 합니다."
    - id: searchPattern
      type: System.String
      description: "검색 문자열입니다. 에 지정 된 문자열의 형식은 같아야는 <xref:System.IO.Directory.GetFiles*>메서드.</xref:System.IO.Directory.GetFiles*>"
    - id: reflectionContext
      type: System.Reflection.ReflectionContext
      description: "부품을 생성 하는 데 사용 되는 컨텍스트."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 <code> path </code> 올바르지 않습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>searchPattern</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>빈 문자열, 공백만 포함 또는 하나 이상의 특정 구현에 잘못 된 문자가 있습니다.       -또는- <code>searchPattern</code> 유효한 패턴을 포함 하지 않습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정 된 <code> path </code>, 파일 이름 또는 둘 다 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 컴퓨터에 경로 248 자 미만 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)
  id: '#ctor(System.String,System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)'
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: DirectoryCatalog(String,String,ReflectionContext,ICompositionElement)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,String,ReflectionContext,ICompositionElement)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,String,ReflectionContext,ICompositionElement)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref> 클래스를 사용 하 여 <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;> </xref> 지정 된 리플렉션 컨텍스트를 사용 하 여 지정 된 디렉터리 경로에 지정 된 검색 패턴을 기반으로 하는 개체입니다."
  syntax:
    content: public DirectoryCatalog (string path, string searchPattern, System.Reflection.ReflectionContext reflectionContext, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);
    parameters:
    - id: path
      type: System.String
      description: "카탈로그에 추가할 어셈블리를 검색할 디렉터리에 대 한 경로입니다.       경로 절대 또는 <xref:System.AppDomain.BaseDirectory*>.</xref:System.AppDomain.BaseDirectory*> 기준으로 해야 합니다."
    - id: searchPattern
      type: System.String
      description: "검색 문자열입니다. 에 지정 된 문자열의 형식은 같아야는 <xref:System.IO.Directory.GetFiles*>메서드.</xref:System.IO.Directory.GetFiles*>"
    - id: reflectionContext
      type: System.Reflection.ReflectionContext
      description: "부품을 생성 하는 데 사용 되는 컨텍스트."
    - id: definitionOrigin
      type: System.ComponentModel.Composition.Primitives.ICompositionElement
      description: "진단에 의해 부분에 대 한 원본을 식별 하는 데 사용 되는 요소입니다."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 <code> path </code> 올바르지 않습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>searchPattern</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>빈 문자열, 공백만 포함 또는 하나 이상의 특정 구현에 잘못 된 문자가 있습니다.       -또는- <code>searchPattern</code> 유효한 패턴을 포함 하지 않습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정 된 <code> path </code>, 파일 이름 또는 둘 다 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 컴퓨터에 경로 248 자 미만 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed
  id: Changed
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: Changed
  nameWithType: DirectoryCatalog.Changed
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed
  type: Event
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "발생 카탈로그의 내용이 변경 될 때입니다."
  syntax:
    content: public event EventHandler<System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs> Changed;
    return:
      type: System.EventHandler{System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing
  id: Changing
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: Changing
  nameWithType: DirectoryCatalog.Changing
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing
  type: Event
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "카탈로그가 변경 될 때 발생 합니다."
  syntax:
    content: public event EventHandler<System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs> Changing;
    return:
      type: System.EventHandler{System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DirectoryCatalog.Dispose(Boolean)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose(Boolean)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "사용 하는 관리 되지 않는 리소스를 해제는 <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref> 관리 되는 리소스를 선택적으로 해제 합니다."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath
  id: FullPath
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: FullPath
  nameWithType: DirectoryCatalog.FullPath
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "살펴 번역 된 절대 경로 가져옵니다는 <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref> 개체입니다."
  syntax:
    content: public string FullPath { get; }
    return:
      type: System.String
      description: "카탈로그에서 관찰 된 번역 된 절대 경로입니다."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetEnumerator
  id: GetEnumerator
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DirectoryCatalog.GetEnumerator()
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetEnumerator()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "카탈로그를 통해 반복 하는 열거자를 반환 합니다."
  syntax:
    content: public override System.Collections.Generic.IEnumerator<System.ComponentModel.Composition.Primitives.ComposablePartDefinition> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.ComponentModel.Composition.Primitives.ComposablePartDefinition}
      description: "카탈로그를 통해 반복 하는 데 사용할 수 있는 열거자입니다."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  id: GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: GetExports(ImportDefinition)
  nameWithType: DirectoryCatalog.GetExports(ImportDefinition)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports(ImportDefinition)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "지정 된 가져오기 정의 의해 표현 되는 제약 조건과 일치 하는 내보내기 정의 가져옵니다."
  syntax:
    content: public override System.Collections.Generic.IEnumerable<Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>> GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition);
    parameters:
    - id: definition
      type: System.ComponentModel.Composition.Primitives.ImportDefinition
      description: "조건에는 <xref href=&quot;System.ComponentModel.Composition.Primitives.ExportDefinition&quot;> </xref> 개체를 반환 합니다."
    return:
      type: System.Collections.Generic.IEnumerable{System.Tuple{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition}}
      description: "포함 하는 개체의 컬렉션은 <xref href=&quot;System.ComponentModel.Composition.Primitives.ExportDefinition&quot;> </xref> 개체 및 이와 관련 된 <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;> </xref> 로 지정 된 제약 조건과 일치 하는 개체 <code> definition </code>합니다."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref> 개체가 삭제 되었습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>definition</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles
  id: LoadedFiles
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: LoadedFiles
  nameWithType: DirectoryCatalog.LoadedFiles
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "카탈로그에 현재 로드 된 파일의 컬렉션을 가져옵니다."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> LoadedFiles { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "파일의 컬렉션은 현재 카탈로그에 로드 합니다."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  id: OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: OnChanged(ComposablePartCatalogChangeEventArgs)
  nameWithType: DirectoryCatalog.OnChanged(ComposablePartCatalogChangeEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged(ComposablePartCatalogChangeEventArgs)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "발생 된 <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected virtual void OnChanged (System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
      description: "이벤트 데이터를 포함 하는 개체입니다."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  id: OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: OnChanging(ComposablePartCatalogChangeEventArgs)
  nameWithType: DirectoryCatalog.OnChanging(ComposablePartCatalogChangeEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging(ComposablePartCatalogChangeEventArgs)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "발생 된 <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected virtual void OnChanging (System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
      description: "이벤트 데이터를 포함 하는 개체입니다."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path
  id: Path
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: Path
  nameWithType: DirectoryCatalog.Path
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "관찰 된 경로 가져옵니다는 <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref> 개체입니다."
  syntax:
    content: public string Path { get; }
    return:
      type: System.String
      description: "카탈로그에서 관찰 된 경로입니다."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh
  id: Refresh
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: Refresh()
  nameWithType: DirectoryCatalog.Refresh()
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "새로 고치는 <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;> </xref> 디렉터리에서 검색 패턴과 일치 하는 최신 파일을 사용 하 여 개체입니다."
  remarks: "파일 디렉터리를 추가한 경우 또한 카탈로그에 추가 됩니다. 파일 디렉터리에서 제거 된 경우 카탈로그에서 에서도 제거 됩니다. 제거 된 파일에 대 한 어셈블리 수 없는 하므로 프로세스에서 언로드할 <xref:System.ComponentModel.Composition.Primitives.ComposablePartDefinition>개체를 해당 파일은 카탈로그 에서만에서 제거 될 예정입니다.</xref:System.ComponentModel.Composition.Primitives.ComposablePartDefinition>"
  syntax:
    content: public void Refresh ();
    parameters: []
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern
  id: SearchPattern
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: SearchPattern
  nameWithType: DirectoryCatalog.SearchPattern
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "생성자에 전달 되는 검색 패턴 가져옵니다는 <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref> 개체입니다."
  syntax:
    content: public string SearchPattern { get; }
    return:
      type: System.String
      description: "검색 패턴 카탈로그 파일을 찾을 수 사용 합니다. 기본값은 모든 DLL 파일을 반환 하는 *.dll입니다."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName
  id: System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName
  isEii: true
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  nameWithType: DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "디렉터리 카탈로그의 표시 이름을 가져옵니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.Composition.Primitives.ICompositionElement>인터페이스.</xref:System.ComponentModel.Composition.Primitives.ICompositionElement> </xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog>"
  syntax:
    content: string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName { get; }
    return:
      type: System.String
      description: "디렉터리 카탈로그의 사용자를 읽을 수 있는 표시 이름을 포함 하는 문자열입니다."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin
  id: System#ComponentModel#Composition#Primitives#ICompositionElement#Origin
  isEii: true
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
  nameWithType: DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "디렉터리 카탈로그 시작 된 구성 요소를 가져옵니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.Composition.Primitives.ICompositionElement>인터페이스.</xref:System.ComponentModel.Composition.Primitives.ICompositionElement> </xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog>"
  syntax:
    content: System.ComponentModel.Composition.Primitives.ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin { get; }
    return:
      type: System.ComponentModel.Composition.Primitives.ICompositionElement
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString
  id: ToString
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: ToString()
  nameWithType: DirectoryCatalog.ToString()
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "디렉터리 카탈로그의 문자열 표현을 가져옵니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "카탈로그의 문자열 표현입니다."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  isExternal: false
  name: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: DirectoryCatalog(String)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: DirectoryCatalog(String,ICompositionElement)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,ICompositionElement)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,ICompositionElement)
- uid: System.ComponentModel.Composition.Primitives.ICompositionElement
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ICompositionElement
  nameWithType: ICompositionElement
  fullName: System.ComponentModel.Composition.Primitives.ICompositionElement
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: DirectoryCatalog(String,ReflectionContext)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,ReflectionContext)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,ReflectionContext)
- uid: System.Reflection.ReflectionContext
  parent: System.Reflection
  isExternal: true
  name: ReflectionContext
  nameWithType: ReflectionContext
  fullName: System.Reflection.ReflectionContext
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: DirectoryCatalog(String,String)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,String)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,String)
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: DirectoryCatalog(String,ReflectionContext,ICompositionElement)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,ReflectionContext,ICompositionElement)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,ReflectionContext,ICompositionElement)
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: DirectoryCatalog(String,String,ICompositionElement)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,String,ICompositionElement)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,String,ICompositionElement)
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: DirectoryCatalog(String,String,ReflectionContext)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,String,ReflectionContext)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,String,ReflectionContext)
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: DirectoryCatalog(String,String,ReflectionContext,ICompositionElement)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,String,ReflectionContext,ICompositionElement)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,String,ReflectionContext,ICompositionElement)
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: Changed
  nameWithType: DirectoryCatalog.Changed
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed
- uid: System.EventHandler{System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ComposablePartCatalogChangeEventArgs>
  nameWithType: EventHandler<ComposablePartCatalogChangeEventArgs>
  fullName: System.EventHandler<System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
    name: ComposablePartCatalogChangeEventArgs
    nameWithType: ComposablePartCatalogChangeEventArgs
    fullName: ComposablePartCatalogChangeEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: Changing
  nameWithType: DirectoryCatalog.Changing
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose(System.Boolean)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DirectoryCatalog.Dispose(Boolean)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: FullPath
  nameWithType: DirectoryCatalog.FullPath
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetEnumerator
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: GetEnumerator()
  nameWithType: DirectoryCatalog.GetEnumerator()
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.ComponentModel.Composition.Primitives.ComposablePartDefinition}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<ComposablePartDefinition>
  nameWithType: IEnumerator<ComposablePartDefinition>
  fullName: System.Collections.Generic.IEnumerator<System.ComponentModel.Composition.Primitives.ComposablePartDefinition>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.ComponentModel.Composition.Primitives.ComposablePartDefinition>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
    name: ComposablePartDefinition
    nameWithType: ComposablePartDefinition
    fullName: ComposablePartDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: GetExports(ImportDefinition)
  nameWithType: DirectoryCatalog.GetExports(ImportDefinition)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports(ImportDefinition)
- uid: System.Collections.Generic.IEnumerable{System.Tuple{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Tuple<ComposablePartDefinition,ExportDefinition>>
  nameWithType: IEnumerable<Tuple<ComposablePartDefinition,ExportDefinition>>
  fullName: System.Collections.Generic.IEnumerable<System.Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
    name: ComposablePartDefinition
    nameWithType: ComposablePartDefinition
    fullName: ComposablePartDefinition
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.ComponentModel.Composition.Primitives.ExportDefinition
    name: ExportDefinition
    nameWithType: ExportDefinition
    fullName: ExportDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Primitives.ImportDefinition
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ImportDefinition
  nameWithType: ImportDefinition
  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: LoadedFiles
  nameWithType: DirectoryCatalog.LoadedFiles
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: OnChanged(ComposablePartCatalogChangeEventArgs)
  nameWithType: DirectoryCatalog.OnChanged(ComposablePartCatalogChangeEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged(ComposablePartCatalogChangeEventArgs)
- uid: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: ComposablePartCatalogChangeEventArgs
  nameWithType: ComposablePartCatalogChangeEventArgs
  fullName: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: OnChanging(ComposablePartCatalogChangeEventArgs)
  nameWithType: DirectoryCatalog.OnChanging(ComposablePartCatalogChangeEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging(ComposablePartCatalogChangeEventArgs)
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: Path
  nameWithType: DirectoryCatalog.Path
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: Refresh()
  nameWithType: DirectoryCatalog.Refresh()
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh()
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: SearchPattern
  nameWithType: DirectoryCatalog.SearchPattern
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  nameWithType: DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
  nameWithType: DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: ToString()
  nameWithType: DirectoryCatalog.ToString()
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString()
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: DirectoryCatalog
  nameWithType: DirectoryCatalog.DirectoryCatalog
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: Dispose
  nameWithType: DirectoryCatalog.Dispose
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: FullPath
  nameWithType: DirectoryCatalog.FullPath
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetEnumerator*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: GetEnumerator
  nameWithType: DirectoryCatalog.GetEnumerator
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: GetExports
  nameWithType: DirectoryCatalog.GetExports
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: LoadedFiles
  nameWithType: DirectoryCatalog.LoadedFiles
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: OnChanged
  nameWithType: DirectoryCatalog.OnChanged
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: OnChanging
  nameWithType: DirectoryCatalog.OnChanging
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: Path
  nameWithType: DirectoryCatalog.Path
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: Refresh
  nameWithType: DirectoryCatalog.Refresh
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: SearchPattern
  nameWithType: DirectoryCatalog.SearchPattern
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  nameWithType: DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
  nameWithType: DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: ToString
  nameWithType: DirectoryCatalog.ToString
