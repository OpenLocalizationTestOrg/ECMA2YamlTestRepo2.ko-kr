### YamlMime:ManagedReference
items:
- uid: System.Data.SqlTypes.SqlString
  id: SqlString
  children:
  - System.Data.SqlTypes.SqlString.#ctor(System.String)
  - System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)
  - System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])
  - System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)
  - System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)
  - System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)
  - System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)
  - System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.BinarySort
  - System.Data.SqlTypes.SqlString.BinarySort2
  - System.Data.SqlTypes.SqlString.Clone
  - System.Data.SqlTypes.SqlString.CompareInfo
  - System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)
  - System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.CompareTo(System.Object)
  - System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.CultureInfo
  - System.Data.SqlTypes.SqlString.Equals(System.Object)
  - System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.GetHashCode
  - System.Data.SqlTypes.SqlString.GetNonUnicodeBytes
  - System.Data.SqlTypes.SqlString.GetUnicodeBytes
  - System.Data.SqlTypes.SqlString.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  - System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.IgnoreCase
  - System.Data.SqlTypes.SqlString.IgnoreKanaType
  - System.Data.SqlTypes.SqlString.IgnoreNonSpace
  - System.Data.SqlTypes.SqlString.IgnoreWidth
  - System.Data.SqlTypes.SqlString.IsNull
  - System.Data.SqlTypes.SqlString.LCID
  - System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.Null
  - System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString to System.String)
  - System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Implicit(System.String)
  - System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.SqlCompareOptions
  - System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema
  - System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  - System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  - System.Data.SqlTypes.SqlString.ToSqlBoolean
  - System.Data.SqlTypes.SqlString.ToSqlByte
  - System.Data.SqlTypes.SqlString.ToSqlDateTime
  - System.Data.SqlTypes.SqlString.ToSqlDecimal
  - System.Data.SqlTypes.SqlString.ToSqlDouble
  - System.Data.SqlTypes.SqlString.ToSqlGuid
  - System.Data.SqlTypes.SqlString.ToSqlInt16
  - System.Data.SqlTypes.SqlString.ToSqlInt32
  - System.Data.SqlTypes.SqlString.ToSqlInt64
  - System.Data.SqlTypes.SqlString.ToSqlMoney
  - System.Data.SqlTypes.SqlString.ToSqlSingle
  - System.Data.SqlTypes.SqlString.ToString
  - System.Data.SqlTypes.SqlString.Value
  langs:
  - csharp
  name: SqlString
  nameWithType: SqlString
  fullName: System.Data.SqlTypes.SqlString
  type: Struct
  summary: "문자를 저장 하거나 데이터베이스에서 검색의 다양 한 길이의 스트림을 나타냅니다. SqlString에는 해당.NET Framework의 다른 기본 데이터 구조는 <xref:System.String>데이터 형식.</xref:System.String>"
  remarks: "<xref:System.String>항상 기본값을 사용 하 여 <xref:System.Globalization.CultureInfo>현재 스레드에서 SqlString 자체 로캘 Id와 비교 플래그를 포함 하지만.</xref:System.Globalization.CultureInfo></xref:System.String> 두 개의 SqlString 구조 비교 결과 운영 체제 및 현재 스레드 로캘과 무관 합니다.       SqlString 비교 연산자를 사용 하면 인수의 Lcid 다르면 비교 함수가 예외를 throw 하는 비교할 수 없으므로 때문에 note 합니다. 예를 들어 문을 ```   SqlString mySqlString = new SqlString(&quot;abc&quot;);   ``` 같습니다```   SqlString mySqlString = new SqlString(&quot;abc&quot;, CultureInfo.CurrentCulture.LCID);   ```"
  syntax:
    content: >-
      [System.Xml.Serialization.XmlSchemaProvider("GetXsdType")]

      public struct SqlString : IComparable, System.Data.SqlTypes.INullable, System.Xml.Serialization.IXmlSerializable
  inheritance:
  - System.ValueType
  implements:
  - System.Data.SqlTypes.INullable
  - System.IComparable
  - System.Xml.Serialization.IXmlSerializable
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: SqlString(String)
  nameWithType: SqlString.SqlString(String)
  fullName: System.Data.SqlTypes.SqlString.SqlString(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 지정된 된 문자열을 사용 하 여 구성 합니다."
  syntax:
    content: public SqlString (string data);
    parameters:
    - id: data
      type: System.String
      description: "저장 하는 문자열입니다."
  overload: System.Data.SqlTypes.SqlString.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: SqlString(String,Int32)
  nameWithType: SqlString.SqlString(String,Int32)
  fullName: System.Data.SqlTypes.SqlString.SqlString(String,Int32)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 지정된 된 문자열 및 로캘 id 값을 사용 하 여 구성 합니다."
  syntax:
    content: public SqlString (string data, int lcid);
    parameters:
    - id: data
      type: System.String
      description: "저장 하는 문자열입니다."
    - id: lcid
      type: System.Int32
      description: "새 해당 지역 로캘과 언어 지정 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조입니다."
  overload: System.Data.SqlTypes.SqlString.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])
  id: '#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: SqlString(Int32,SqlCompareOptions,Byte[])
  nameWithType: SqlString.SqlString(Int32,SqlCompareOptions,Byte[])
  fullName: System.Data.SqlTypes.SqlString.SqlString(Int32,SqlCompareOptions,Byte[])
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 지정한 로캘 id를 사용 하 여, 옵션 및 데이터를 비교 합니다."
  syntax:
    content: public SqlString (int lcid, System.Data.SqlTypes.SqlCompareOptions compareOptions, byte[] data);
    parameters:
    - id: lcid
      type: System.Int32
      description: "새 해당 지역 로캘과 언어 지정 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조입니다."
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "새 항목에 대 한 비교 옵션을 지정 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조입니다."
    - id: data
      type: System.Byte[]
      description: "데이터를 저장할 배열입니다."
  overload: System.Data.SqlTypes.SqlString.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)
  id: '#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: SqlString(String,Int32,SqlCompareOptions)
  nameWithType: SqlString.SqlString(String,Int32,SqlCompareOptions)
  fullName: System.Data.SqlTypes.SqlString.SqlString(String,Int32,SqlCompareOptions)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 지정 된 문자열, 로캘 id를 사용 하 여 구조체이 고 옵션 값을 비교 합니다."
  syntax:
    content: public SqlString (string data, int lcid, System.Data.SqlTypes.SqlCompareOptions compareOptions);
    parameters:
    - id: data
      type: System.String
      description: "저장 하는 문자열입니다."
    - id: lcid
      type: System.Int32
      description: "새 해당 지역 로캘과 언어 지정 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조입니다."
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "새 항목에 대 한 비교 옵션을 지정 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조입니다."
  overload: System.Data.SqlTypes.SqlString.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)
  id: '#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: SqlString(Int32,SqlCompareOptions,Byte[],Boolean)
  nameWithType: SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Boolean)
  fullName: System.Data.SqlTypes.SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 클래스입니다."
  syntax:
    content: public SqlString (int lcid, System.Data.SqlTypes.SqlCompareOptions compareOptions, byte[] data, bool fUnicode);
    parameters:
    - id: lcid
      type: System.Int32
      description: "새 해당 지역 로캘과 언어 지정 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조입니다."
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "새 항목에 대 한 비교 옵션을 지정 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조입니다."
    - id: data
      type: System.Byte[]
      description: "데이터를 저장할 배열입니다."
    - id: fUnicode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>유니코드 인코딩. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.SqlTypes.SqlString.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32)
  nameWithType: SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32)
  fullName: System.Data.SqlTypes.SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 클래스입니다."
  syntax:
    content: public SqlString (int lcid, System.Data.SqlTypes.SqlCompareOptions compareOptions, byte[] data, int index, int count);
    parameters:
    - id: lcid
      type: System.Int32
      description: "새 해당 지역 로캘과 언어 지정 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조입니다."
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "새 항목에 대 한 비교 옵션을 지정 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조입니다."
    - id: data
      type: System.Byte[]
      description: "데이터를 저장할 배열입니다."
    - id: index
      type: System.Int32
      description: "배열 내의 시작 인덱스입니다."
    - id: count
      type: System.Int32
      description: "인덱스에서 복사할 문자의 수입니다."
  overload: System.Data.SqlTypes.SqlString.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32,Boolean)
  nameWithType: SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32,Boolean)
  fullName: System.Data.SqlTypes.SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32,Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 클래스입니다."
  syntax:
    content: public SqlString (int lcid, System.Data.SqlTypes.SqlCompareOptions compareOptions, byte[] data, int index, int count, bool fUnicode);
    parameters:
    - id: lcid
      type: System.Int32
      description: "새 해당 지역 로캘과 언어 지정 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조입니다."
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "새 항목에 대 한 비교 옵션을 지정 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조입니다."
    - id: data
      type: System.Byte[]
      description: "데이터를 저장할 배열입니다."
    - id: index
      type: System.Int32
      description: "배열 내의 시작 인덱스입니다."
    - id: count
      type: System.Int32
      description: "인덱스에서 복사할 문자의 수입니다."
    - id: fUnicode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>유니코드 인코딩. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.SqlTypes.SqlString.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: Add(SqlString,SqlString)
  nameWithType: SqlString.Add(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.Add(SqlString,SqlString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "지정 된 두 연결 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 값을 새 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조입니다."
  remarks: '`x`결과에 맨 먼저 나타납니다 <xref:System.Data.SqlTypes.SqlString>옵니다 `y`.</xref:System.Data.SqlTypes.SqlString>'
  syntax:
    content: public static System.Data.SqlTypes.SqlString Add (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref> that is the concatenated value of <code>x</code> and <code>y</code>."
  overload: System.Data.SqlTypes.SqlString.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.BinarySort
  id: BinarySort
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: BinarySort
  nameWithType: SqlString.BinarySort
  fullName: System.Data.SqlTypes.SqlString.BinarySort
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "영문자 값이 아닌 숫자 문자 값에 따라 종류를 결정 해야 되도록 지정 합니다."
  remarks: "<xref:System.Data.SqlTypes.SqlString>클래스</xref:System.Data.SqlTypes.SqlString> 에 대 한 상수 BinarySort 함수"
  syntax:
    content: public static readonly int BinarySort;
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.BinarySort2
  id: BinarySort2
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: BinarySort2
  nameWithType: SqlString.BinarySort2
  fullName: System.Data.SqlTypes.SqlString.BinarySort2
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "영문자 값이 아닌 문자의 숫자 값에 따라 종류를 결정 해야 되도록 지정 합니다."
  syntax:
    content: public static readonly int BinarySort2;
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.Clone
  id: Clone
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: Clone()
  nameWithType: SqlString.Clone()
  fullName: System.Data.SqlTypes.SqlString.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 파일의 복사본을 만듭니다 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 개체입니다."
  syntax:
    content: public System.Data.SqlTypes.SqlString Clone ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlString
      description: "새 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 개체는 모든 속성 값은 원래와 동일 합니다."
  overload: System.Data.SqlTypes.SqlString.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.CompareInfo
  id: CompareInfo
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: CompareInfo
  nameWithType: SqlString.CompareInfo
  fullName: System.Data.SqlTypes.SqlString.CompareInfo
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "가져옵니다는 <xref:System.Globalization.CompareInfo>이 대 한 문자열 비교 수행 되는 방식을 정의 하는 개체 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조.</xref:System.Globalization.CompareInfo>"
  syntax:
    content: public System.Globalization.CompareInfo CompareInfo { get; }
    return:
      type: System.Globalization.CompareInfo
      description: "A <xref uid=&quot;langword_csharp_CompareInfo&quot; name=&quot;CompareInfo&quot; href=&quot;&quot;> </xref> 이 대 한 문자열 비교를 정의 하는 개체 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조입니다."
  overload: System.Data.SqlTypes.SqlString.CompareInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)
  id: CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: CompareOptionsFromSqlCompareOptions(SqlCompareOptions)
  nameWithType: SqlString.CompareOptionsFromSqlCompareOptions(SqlCompareOptions)
  fullName: System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(SqlCompareOptions)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "가져옵니다는 <xref:System.Globalization.CompareOptions>지정된 된 열거형 갖는 <xref href=&quot;System.Data.SqlTypes.SqlCompareOptions&quot;> </xref> 값.</xref:System.Globalization.CompareOptions>"
  syntax:
    content: public static System.Globalization.CompareOptions CompareOptionsFromSqlCompareOptions (System.Data.SqlTypes.SqlCompareOptions compareOptions);
    parameters:
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlCompareOptions&quot;> </xref> 비교 옵션을 설명 하는 값 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조입니다."
    return:
      type: System.Globalization.CompareOptions
      description: "A <xref uid=&quot;langword_csharp_CompareOptions&quot; name=&quot;CompareOptions&quot; href=&quot;&quot;> </xref> 값에 해당 하는 <xref uid=&quot;langword_csharp_SqlCompareOptions&quot; name=&quot;SqlCompareOptions&quot; href=&quot;&quot;> </xref> 이 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조입니다."
  overload: System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)
  id: CompareTo(System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: CompareTo(SqlString)
  nameWithType: SqlString.CompareTo(SqlString)
  fullName: System.Data.SqlTypes.SqlString.CompareTo(SqlString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "비교 하 여 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 인스턴스를 제공 된 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 상대 값의 표시를 반환 합니다."
  syntax:
    content: public int CompareTo (System.Data.SqlTypes.SqlString value);
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlString
      description: "<xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 비교 합니다."
    return:
      type: System.Int32
      description: "인스턴스 및 개체의 상대 값을 나타내는 부호 있는 숫자입니다.       <table><thead><tr><th> 반환 값       </th><th> 조건       </th></tr></thead><tbody><tr><td> 0 보다 작음       </td><td> 이 인스턴스를 사용 하는 개체 보다 작습니다.       </td></tr><tr><td> 0       </td><td> 이 인스턴스는 개체와 동일 합니다.       </td></tr><tr><td> 0 보다 큼       </td><td> 이 인스턴스는 개체 또는 개체는 null 참조일 보다 큽니다 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서).       </td></tr></tbody></table>"
  overload: System.Data.SqlTypes.SqlString.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: CompareTo(Object)
  nameWithType: SqlString.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlString.CompareTo(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "비교 하 여 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 개체를 제공 된 <xref:System.Object>상대 값의 표시를 반환 합니다.</xref:System.Object>"
  syntax:
    content: public int CompareTo (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>비교 될.</xref:System.Object>"
    return:
      type: System.Int32
      description: "인스턴스 및 개체의 상대 값을 나타내는 부호 있는 숫자입니다.       <table><thead><tr><th> 반환 값       </th><th> 조건       </th></tr></thead><tbody><tr><td> 0 보다 작음       </td><td> 이 인스턴스를 사용 하는 개체 보다 작습니다.       </td></tr><tr><td> 0       </td><td> 이 인스턴스는 개체와 동일 합니다.       </td></tr><tr><td> 0 보다 큼       </td><td> 이 인스턴스는 개체 또는 개체는 null 참조일 보다 큽니다 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)       </td></tr></tbody></table>"
  overload: System.Data.SqlTypes.SqlString.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: Concat(SqlString,SqlString)
  nameWithType: SqlString.Concat(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.Concat(SqlString,SqlString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "지정 된 두 연결 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조입니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlString Concat (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 두의 콘텐츠를 나타내는 새로 연결 된 값이 포함 된 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 매개 변수입니다."
  overload: System.Data.SqlTypes.SqlString.Concat*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.CultureInfo
  id: CultureInfo
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: CultureInfo
  nameWithType: SqlString.CultureInfo
  fullName: System.Data.SqlTypes.SqlString.CultureInfo
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "가져옵니다는 <xref:System.Globalization.CultureInfo>이 문화권에 대 한 정보를 나타내는 구조 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 개체입니다.</xref:System.Globalization.CultureInfo>"
  syntax:
    content: public System.Globalization.CultureInfo CultureInfo { get; }
    return:
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>문화권, 쓰기 시스템 및 사용 된 달력의 이름을 포함 하 여이 SqlString 구조체의 culture에 대 한 정보를 설명 하는 구조 및 날짜 형식 지정 및 문자열 정렬 등의 일반적인 작업에 대 한 메서드를 제공 하는 문화권별 개체에 대 한 액세스.</xref:System.Globalization.CultureInfo>"
  overload: System.Data.SqlTypes.SqlString.CultureInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SqlString.Equals(Object)
  fullName: System.Data.SqlTypes.SqlString.Equals(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "제공 된 개체가 매개 변수를 비교는 <xref:System.Data.SqlTypes.SqlString.Value*>의 속성은 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 개체입니다.</xref:System.Data.SqlTypes.SqlString.Value*>"
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "비교할 개체입니다."
    return:
      type: System.Boolean
      description: "등호 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 개체의 인스턴스 라면 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 둘이 같고, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.SqlTypes.SqlString.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: Equals(SqlString,SqlString)
  nameWithType: SqlString.Equals(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.Equals(SqlString,SqlString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두 논리 비교를 수행 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 피연산자가 같은지 여부를 결정 합니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean Equals (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>두 값이 같으면 합니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 두 가지 매개 변수가 null 이면 하면 <xref uid=&quot;langword_csharp_SqlString&quot; name=&quot;SqlString&quot; href=&quot;&quot;> </xref> null이 됩니다."
  overload: System.Data.SqlTypes.SqlString.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.GetHashCode
  id: GetHashCode
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SqlString.GetHashCode()
  fullName: System.Data.SqlTypes.SqlString.GetHashCode()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 인스턴스에 대 한 해시 코드를 가져옵니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "부호 있는 32 비트 정수 해시 코드입니다."
  overload: System.Data.SqlTypes.SqlString.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.GetNonUnicodeBytes
  id: GetNonUnicodeBytes
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: GetNonUnicodeBytes()
  nameWithType: SqlString.GetNonUnicodeBytes()
  fullName: System.Data.SqlTypes.SqlString.GetNonUnicodeBytes()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "내용을 포함 하는 바이트의 배열을 가져옵니다는 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> ANSI 형태로 표시 합니다."
  syntax:
    content: public byte[] GetNonUnicodeBytes ();
    parameters: []
    return:
      type: System.Byte[]
      description: "내용이 포함 된 바이트 배열을 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> ANSI 형태로 표시 합니다."
  overload: System.Data.SqlTypes.SqlString.GetNonUnicodeBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.GetUnicodeBytes
  id: GetUnicodeBytes
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: GetUnicodeBytes()
  nameWithType: SqlString.GetUnicodeBytes()
  fullName: System.Data.SqlTypes.SqlString.GetUnicodeBytes()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "내용을 포함 하는 바이트의 배열을 가져옵니다는 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 유니코드 형태로 표시 합니다."
  syntax:
    content: public byte[] GetUnicodeBytes ();
    parameters: []
    return:
      type: System.Byte[]
      description: "내용을 포함 하는 바이트 배열에서 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 에 유니코드 형식입니다."
  overload: System.Data.SqlTypes.SqlString.GetUnicodeBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  id: GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlString.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlString.GetXsdType(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "지정 된 XML 스키마 정의 언어 (XSD)를 반환 합니다. <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>합니다."
  syntax:
    content: public static System.Xml.XmlQualifiedName GetXsdType (System.Xml.Schema.XmlSchemaSet schemaSet);
    parameters:
    - id: schemaSet
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;></xref>."
    return:
      type: System.Xml.XmlQualifiedName
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> 의 지정 된 XSD를 나타내는 값 <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>합니다."
  overload: System.Data.SqlTypes.SqlString.GetXsdType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: GreaterThan(SqlString,SqlString)
  nameWithType: SqlString.GreaterThan(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.GreaterThan(SqlString,SqlString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두 논리 비교를 수행 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 피연산자를 첫 번째 두 번째 인스턴스보다 큰지 여부를 결정 합니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThan (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 첫 번째 인스턴스가 두 번째 인스턴스보다 크면 합니다. 그렇지 않으면 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>합니다. 경우 인스턴스 중 하나가 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.SqlTypes.SqlBoolean.Value*>의 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 됩니다 <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlString.GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: GreaterThanOrEqual(SqlString,SqlString)
  nameWithType: SqlString.GreaterThanOrEqual(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.GreaterThanOrEqual(SqlString,SqlString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두 논리 비교를 수행 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 피연산자가 두 번째 보다 크거나 같은 경우 첫 번째 적용 되는지 확인 합니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThanOrEqual (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 첫 번째 인스턴스가 두 번째 인스턴스에 보다 크거나 같은 경우입니다. 그렇지 않으면 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>합니다. 경우 인스턴스 중 하나가 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.SqlTypes.SqlBoolean.Value*>의 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 됩니다 <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlString.GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.IgnoreCase
  id: IgnoreCase
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: IgnoreCase
  nameWithType: SqlString.IgnoreCase
  fullName: System.Data.SqlTypes.SqlString.IgnoreCase
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "지정 하는 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 비교는 대/소문자를 무시 해야 합니다."
  remarks: "<xref:System.Data.SqlTypes.SqlString>클래스</xref:System.Data.SqlTypes.SqlString> 에 대 한 상수 IgnoreCase 함수"
  syntax:
    content: public static readonly int IgnoreCase;
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.IgnoreKanaType
  id: IgnoreKanaType
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: IgnoreKanaType
  nameWithType: SqlString.IgnoreKanaType
  fullName: System.Data.SqlTypes.SqlString.IgnoreKanaType
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "일본어가 나 형식 무시 해야 문자열 비교를 지정 합니다."
  remarks: "일본어가 나 형식 일본어 언어의 나타내는 일본어 히라가나와 가타카나 문자를 가리킵니다. 히라가나는 가타카나 &quot;컴퓨터&quot; 또는 &quot;Internet&quot; 등의 다른 언어에서 차용한 단어에 대해 사용 하는 동안 일본 및 단어에 사용 됩니다. 음성 소리가 히라가나와 가타카나를 모두 표현할 수 있습니다. 이 값을 선택한 경우 하나의 사운드 히라가나 문자와 가타카나 문자가 동일한 소리 같은 간주 됩니다.       <xref:System.Data.SqlTypes.SqlString>클래스</xref:System.Data.SqlTypes.SqlString> 에 대 한 상수 IgnoreKanaType 함수"
  syntax:
    content: public static readonly int IgnoreKanaType;
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.IgnoreNonSpace
  id: IgnoreNonSpace
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: IgnoreNonSpace
  nameWithType: SqlString.IgnoreNonSpace
  fullName: System.Data.SqlTypes.SqlString.IgnoreNonSpace
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "분음 부호와 같은 공백 없는 결합 문자를 무시 하는 문자열 비교를 지정 합니다."
  remarks: "유니코드 표준 새 문자를 생성할 수 있는 기본 문자와 함께 사용 되는 문자로 결합 문자를 정의 합니다. 공백 없는 결합 문자를 렌더링할 때는 문자 공간을 사용 하지 마십시오. 공백 없는 결합 문자에 대 한 자세한 내용은 http://www.unicode.org에서 유니코드 표준을 참조 하십시오.       <xref:System.Data.SqlTypes.SqlString>클래스</xref:System.Data.SqlTypes.SqlString> 에 대 한 상수 IgnoreNonSpace 함수"
  syntax:
    content: public static readonly int IgnoreNonSpace;
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.IgnoreWidth
  id: IgnoreWidth
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: IgnoreWidth
  nameWithType: SqlString.IgnoreWidth
  fullName: System.Data.SqlTypes.SqlString.IgnoreWidth
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "문자 너비를 무시 하는 문자열 비교를 지정 합니다."
  remarks: "예를 들어 전각 또는 반각 일본어 가타카나 문자를 쓸 수 고로 작성 된 가타카나 문자 반자로 작성 된 동일한 자가 하 간주 됩니다이 값을 선택한 경우.       <xref:System.Data.SqlTypes.SqlString>클래스</xref:System.Data.SqlTypes.SqlString> 에 대 한 상수 IgnoreWidth 함수"
  syntax:
    content: public static readonly int IgnoreWidth;
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.IsNull
  id: IsNull
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: IsNull
  nameWithType: SqlString.IsNull
  fullName: System.Data.SqlTypes.SqlString.IsNull
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "표시 여부를이 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조는 null입니다."
  remarks: "자세한 내용은 참조 [Null 값 처리](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <xref:System.Data.SqlTypes.SqlString.Value*> is <xref href=&quot;System.Data.SqlTypes.SqlString.Null&quot;></xref>.</xref:System.Data.SqlTypes.SqlString.Value*> 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.SqlTypes.SqlString.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.LCID
  id: LCID
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: LCID
  nameWithType: SqlString.LCID
  fullName: System.Data.SqlTypes.SqlString.LCID
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "해당 지역 로캘과 언어에 대 한 지정 된 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조입니다."
  syntax:
    content: public int LCID { get; }
    return:
      type: System.Int32
      description: "에 저장 된 문자열에 대 한 로캘 id는 <xref:System.Data.SqlTypes.SqlString.Value*>속성.</xref:System.Data.SqlTypes.SqlString.Value*>"
  overload: System.Data.SqlTypes.SqlString.LCID*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: LessThan(SqlString,SqlString)
  nameWithType: SqlString.LessThan(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.LessThan(SqlString,SqlString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두 논리 비교를 수행 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 작은지를 확인 하는지 여부를 첫 번째 피연산자가 두 번째 인스턴스보다 합니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThan (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 작으면 첫 번째 인스턴스가 두 번째 인스턴스보다 합니다. 그렇지 않으면 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>합니다. 경우 인스턴스 중 하나가 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.SqlTypes.SqlBoolean.Value*>의 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 됩니다 <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlString.LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: LessThanOrEqual(SqlString,SqlString)
  nameWithType: SqlString.LessThanOrEqual(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.LessThanOrEqual(SqlString,SqlString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두 논리 비교를 수행 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 피연산자를 첫 번째 두 번째 보다 작거나 같은 인지 확인 합니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThanOrEqual (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 첫 번째 인스턴스가 두 번째 인스턴스에 보다 작은 경우. 그렇지 않으면 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>합니다. 경우 인스턴스 중 하나가 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.SqlTypes.SqlBoolean.Value*>의 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 됩니다 <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlString.LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: NotEquals(SqlString,SqlString)
  nameWithType: SqlString.NotEquals(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.NotEquals(SqlString,SqlString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두 논리 비교를 수행 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 피연산자가 같지 않은지 여부를 결정 합니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean NotEquals (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 두 인스턴스가 같지 않으면 또는 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 두 인스턴스가 같으면 합니다. 경우 인스턴스 중 하나가 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.SqlTypes.SqlBoolean.Value*>의 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 됩니다 <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlString.NotEquals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.Null
  id: "Null"
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: "Null"
  nameWithType: SqlString.Null
  fullName: System.Data.SqlTypes.SqlString.Null
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "나타냅니다는 <xref href=&quot;System.DBNull&quot;> </xref> 의이 인스턴스에 할당할 수 있는 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조입니다."
  remarks: '`Null`상수에 대 한 역할을 <xref:System.Data.SqlTypes.SqlString>구조.</xref:System.Data.SqlTypes.SqlString>  자세한 내용은 참조 [Null 값 처리](~/add/includes/ajax-current-ext-md.md)합니다.'
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlString Null;
    return:
      type: System.Data.SqlTypes.SqlString
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Addition(SqlString,SqlString)
  nameWithType: SqlString.op_Addition(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_Addition(SqlString,SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "지정 된 두 연결 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조입니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Addition (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 두의 콘텐츠를 나타내는 새로 연결 된 값이 포함 된 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 매개 변수입니다."
  overload: System.Data.SqlTypes.SqlString.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Equality(SqlString,SqlString)
  nameWithType: SqlString.op_Equality(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_Equality(SqlString,SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두 논리 비교를 수행 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 피연산자가 같은지 여부를 결정 합니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Equality (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 두 인스턴스가 같으면 또는 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 두 인스턴스가 같지 않으면 합니다. 경우 인스턴스 중 하나가 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.SqlTypes.SqlBoolean.Value*>의 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 됩니다 <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlString.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlBoolean)
  nameWithType: SqlString.op_Explicit(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlBoolean x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "추가할 수 있습니다."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlByte)
  nameWithType: SqlString.op_Explicit(SqlByte)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlByte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlByte x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "추가할 수 있습니다."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlDateTime to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlDateTime)
  nameWithType: SqlString.op_Explicit(SqlDateTime)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlDateTime)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlDateTime x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDateTime
      description: "추가할 수 있습니다."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlDecimal)
  nameWithType: SqlString.op_Explicit(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlDecimal x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "추가할 수 있습니다."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlDouble)
  nameWithType: SqlString.op_Explicit(SqlDouble)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlDouble)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlDouble x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDouble
      description: "추가할 수 있습니다."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlGuid to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlGuid)
  nameWithType: SqlString.op_Explicit(SqlGuid)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlGuid)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlGuid x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlGuid
      description: "추가할 수 있습니다."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlInt16)
  nameWithType: SqlString.op_Explicit(SqlInt16)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlInt16 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "추가할 수 있습니다."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlInt32)
  nameWithType: SqlString.op_Explicit(SqlInt32)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlInt32)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlInt32 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt32
      description: "추가할 수 있습니다."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlInt64)
  nameWithType: SqlString.op_Explicit(SqlInt64)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlInt64 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "추가할 수 있습니다."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlMoney)
  nameWithType: SqlString.op_Explicit(SqlMoney)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlMoney)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlMoney x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "추가할 수 있습니다."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlSingle)
  nameWithType: SqlString.op_Explicit(SqlSingle)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlSingle)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlSingle x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "추가할 수 있습니다."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString to System.String)
  id: op_Explicit(System.Data.SqlTypes.SqlString to System.String)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlString)
  nameWithType: SqlString.op_Explicit(SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static string op_Explicit (System.Data.SqlTypes.SqlString x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "추가할 수 있습니다."
    return:
      type: System.String
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_GreaterThan(SqlString,SqlString)
  nameWithType: SqlString.op_GreaterThan(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_GreaterThan(SqlString,SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두 논리 비교를 수행 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 피연산자를 첫 번째 두 번째 인스턴스보다 큰지 여부를 결정 합니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThan (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 첫 번째 인스턴스가 두 번째 인스턴스보다 크면 합니다. 그렇지 않으면 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>합니다. 경우 인스턴스 중 하나가 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.SqlTypes.SqlBoolean.Value*>의 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 됩니다 <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlString.op_GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_GreaterThanOrEqual(SqlString,SqlString)
  nameWithType: SqlString.op_GreaterThanOrEqual(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(SqlString,SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두 논리 비교를 수행 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 피연산자가 두 번째 보다 크거나 같은 경우 첫 번째 적용 되는지 확인 합니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThanOrEqual (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 첫 번째 인스턴스가 두 번째 인스턴스에 보다 크거나 같은 경우입니다. 그렇지 않으면 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>합니다. 경우 인스턴스 중 하나가 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.SqlTypes.SqlBoolean.Value*>의 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 됩니다 <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Implicit(System.String)
  id: op_Implicit(System.String)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Implicit(String)
  nameWithType: SqlString.op_Implicit(String)
  fullName: System.Data.SqlTypes.SqlString.op_Implicit(String)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Implicit (string x);
    parameters:
    - id: x
      type: System.String
      description: "추가할 수 있습니다."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlString.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Inequality(SqlString,SqlString)
  nameWithType: SqlString.op_Inequality(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_Inequality(SqlString,SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두 논리 비교를 수행 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 피연산자가 같지 않은지 여부를 결정 합니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Inequality (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 두 인스턴스가 같지 않으면 또는 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 두 인스턴스가 같으면 합니다. 경우 인스턴스 중 하나가 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.SqlTypes.SqlBoolean.Value*>의 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 됩니다 <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlString.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_LessThan(SqlString,SqlString)
  nameWithType: SqlString.op_LessThan(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_LessThan(SqlString,SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두 논리 비교를 수행 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 작은지를 확인 하는지 여부를 첫 번째 피연산자가 두 번째 인스턴스보다 합니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThan (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 작으면 첫 번째 인스턴스가 두 번째 인스턴스보다 합니다. 그렇지 않으면 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>합니다. 경우 인스턴스 중 하나가 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.SqlTypes.SqlBoolean.Value*>의 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 됩니다 <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlString.op_LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_LessThanOrEqual(SqlString,SqlString)
  nameWithType: SqlString.op_LessThanOrEqual(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_LessThanOrEqual(SqlString,SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두 논리 비교를 수행 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 피연산자를 첫 번째 두 번째 보다 작거나 같은 인지 확인 합니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThanOrEqual (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 첫 번째 인스턴스가 두 번째 인스턴스에 보다 작은 경우. 그렇지 않으면 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>합니다. 경우 인스턴스 중 하나가 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.SqlTypes.SqlBoolean.Value*>의 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 됩니다 <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlString.op_LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.SqlCompareOptions
  id: SqlCompareOptions
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: SqlCompareOptions
  nameWithType: SqlString.SqlCompareOptions
  fullName: System.Data.SqlTypes.SqlString.SqlCompareOptions
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "하나 이상의의 조합을 <xref href=&quot;System.Data.SqlTypes.SqlCompareOptions&quot;> </xref> 이 방식으로 표시 하는 열거형 값 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 다른 비교 해야 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조입니다."
  syntax:
    content: public System.Data.SqlTypes.SqlCompareOptions SqlCompareOptions { get; }
    return:
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "지정 하는 값이 어떻게 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 다른 비교 해야 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조입니다."
  overload: System.Data.SqlTypes.SqlString.SqlCompareOptions*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema
  id: System#Xml#Serialization#IXmlSerializable#GetSchema
  isEii: true
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlString.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlString.System.Xml.Serialization.IXmlSerializable.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 멤버는.NET Framework 인프라를 지원 하며 사용자 코드에서 직접 사용할 수 없습니다."
  syntax:
    content: System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchema
      description: "An <xref uid=&quot;langword_csharp_XmlSchema&quot; name=&quot;XmlSchema&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  id: System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  isEii: true
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlString.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlString.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 멤버는.NET Framework 인프라를 지원 하며 사용자 코드에서 직접 사용할 수 없습니다."
  syntax:
    content: void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: <xref uid="langword_csharp_XmlReader" name="XmlReader" href=""></xref>
  overload: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  id: System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  isEii: true
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlString.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlString.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 멤버는.NET Framework 인프라를 지원 하며 사용자 코드에서 직접 사용할 수 없습니다."
  syntax:
    content: void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: <xref uid="langword_csharp_XmlWriter" name="XmlWriter" href=""></xref>
  overload: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlBoolean
  id: ToSqlBoolean
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlBoolean()
  nameWithType: SqlString.ToSqlBoolean()
  fullName: System.Data.SqlTypes.SqlString.ToSqlBoolean()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 변환 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조체 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>합니다."
  syntax:
    content: public System.Data.SqlTypes.SqlBoolean ToSqlBoolean ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref><xref:System.Data.SqlTypes.SqlString.Value*>0이 아닌; 이면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 경우&0;, 그렇지 않으면 Null입니다.</xref:System.Data.SqlTypes.SqlString.Value*>"
  overload: System.Data.SqlTypes.SqlString.ToSqlBoolean*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlByte
  id: ToSqlByte
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlByte()
  nameWithType: SqlString.ToSqlByte()
  fullName: System.Data.SqlTypes.SqlString.ToSqlByte()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 변환 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조체 <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>합니다."
  syntax:
    content: public System.Data.SqlTypes.SqlByte ToSqlByte ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "새 <xref uid=&quot;langword_csharp_SqlByte&quot; name=&quot;SqlByte&quot; href=&quot;&quot;> </xref> 갖는 <xref:System.Data.SqlTypes.SqlByte.Value*>수와 일치 하면이 표시 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조.</xref:System.Data.SqlTypes.SqlByte.Value*>"
  overload: System.Data.SqlTypes.SqlString.ToSqlByte*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlDateTime
  id: ToSqlDateTime
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlDateTime()
  nameWithType: SqlString.ToSqlDateTime()
  fullName: System.Data.SqlTypes.SqlString.ToSqlDateTime()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 변환 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조체 <xref href=&quot;System.Data.SqlTypes.SqlDateTime&quot;> </xref>합니다."
  syntax:
    content: public System.Data.SqlTypes.SqlDateTime ToSqlDateTime ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlDateTime
      description: "새 <xref uid=&quot;langword_csharp_SqlDateTime&quot; name=&quot;SqlDateTime&quot; href=&quot;&quot;> </xref> 이 나타내는 날짜 값을 포함 하는 구조 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>합니다."
  overload: System.Data.SqlTypes.SqlString.ToSqlDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlDecimal
  id: ToSqlDecimal
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlDecimal()
  nameWithType: SqlString.ToSqlDecimal()
  fullName: System.Data.SqlTypes.SqlString.ToSqlDecimal()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 변환 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조체 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>합니다."
  syntax:
    content: public System.Data.SqlTypes.SqlDecimal ToSqlDecimal ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "새 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 이 값이 포함 된 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>합니다."
  overload: System.Data.SqlTypes.SqlString.ToSqlDecimal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlDouble
  id: ToSqlDouble
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlDouble()
  nameWithType: SqlString.ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlString.ToSqlDouble()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 변환 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조체 <xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref>합니다."
  syntax:
    content: public System.Data.SqlTypes.SqlDouble ToSqlDouble ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlDouble
      description: "새 <xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref> 숫자 값이 같거나 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>합니다."
  overload: System.Data.SqlTypes.SqlString.ToSqlDouble*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlGuid
  id: ToSqlGuid
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlGuid()
  nameWithType: SqlString.ToSqlGuid()
  fullName: System.Data.SqlTypes.SqlString.ToSqlGuid()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 변환 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조체 <xref href=&quot;System.Data.SqlTypes.SqlGuid&quot;> </xref>합니다."
  syntax:
    content: public System.Data.SqlTypes.SqlGuid ToSqlGuid ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlGuid
      description: "새 <xref href=&quot;System.Data.SqlTypes.SqlGuid&quot;> </xref> 갖는 <xref:System.Data.SqlTypes.SqlGuid.Value*>는 <xref uid=&quot;langword_csharp_Guid&quot; name=&quot;Guid&quot; href=&quot;&quot;> </xref> 이 나타내는 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조.</xref:System.Data.SqlTypes.SqlGuid.Value*>"
  overload: System.Data.SqlTypes.SqlString.ToSqlGuid*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlInt16
  id: ToSqlInt16
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlInt16()
  nameWithType: SqlString.ToSqlInt16()
  fullName: System.Data.SqlTypes.SqlString.ToSqlInt16()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 변환 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조체 <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>합니다."
  syntax:
    content: public System.Data.SqlTypes.SqlInt16 ToSqlInt16 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "새 <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref> 숫자 값이 같거나 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>합니다."
  overload: System.Data.SqlTypes.SqlString.ToSqlInt16*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlInt32
  id: ToSqlInt32
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlInt32()
  nameWithType: SqlString.ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlString.ToSqlInt32()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 변환 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조체 <xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;> </xref>합니다."
  syntax:
    content: public System.Data.SqlTypes.SqlInt32 ToSqlInt32 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt32
      description: "새 <xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;> </xref> 숫자 값이 같거나 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>합니다."
  overload: System.Data.SqlTypes.SqlString.ToSqlInt32*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlInt64
  id: ToSqlInt64
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlInt64()
  nameWithType: SqlString.ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlString.ToSqlInt64()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 변환 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조체 <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref>합니다."
  syntax:
    content: public System.Data.SqlTypes.SqlInt64 ToSqlInt64 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "새 <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> 숫자 값이 같거나 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>합니다."
  overload: System.Data.SqlTypes.SqlString.ToSqlInt64*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlMoney
  id: ToSqlMoney
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlMoney()
  nameWithType: SqlString.ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlString.ToSqlMoney()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 변환 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조체 <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref>합니다."
  syntax:
    content: public System.Data.SqlTypes.SqlMoney ToSqlMoney ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "새 <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> 숫자 값이 같거나 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>합니다."
  overload: System.Data.SqlTypes.SqlString.ToSqlMoney*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlSingle
  id: ToSqlSingle
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlSingle()
  nameWithType: SqlString.ToSqlSingle()
  fullName: System.Data.SqlTypes.SqlString.ToSqlSingle()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 변환 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조체 <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref>합니다."
  syntax:
    content: public System.Data.SqlTypes.SqlSingle ToSqlSingle ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "새 <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> 숫자 값이 같거나 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>..."
  overload: System.Data.SqlTypes.SqlString.ToSqlSingle*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToString
  id: ToString
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToString()
  nameWithType: SqlString.ToString()
  fullName: System.Data.SqlTypes.SqlString.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "변환 된 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> <xref:System.String>.</xref:System.String> 개체"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String>값 같은 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조.</xref:System.String>"
  overload: System.Data.SqlTypes.SqlString.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.Value
  id: Value
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: Value
  nameWithType: SqlString.Value
  fullName: System.Data.SqlTypes.SqlString.Value
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 저장 된 문자열을 가져옵니다 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 구조입니다. 이 속성은 읽기 전용입니다."
  syntax:
    content: public string Value { get; }
    return:
      type: System.String
      description: "저장 된 문자열입니다."
  overload: System.Data.SqlTypes.SqlString.Value*
  exceptions:
  - type: System.Data.SqlTypes.SqlNullValueException
    commentId: T:System.Data.SqlTypes.SqlNullValueException
    description: "문자열의 값은 <xref href=&quot;System.Data.SqlTypes.SqlString.Null&quot;> </xref>합니다."
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Data.SqlTypes.SqlNullValueException
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlNullValueException
  nameWithType: SqlNullValueException
  fullName: System.Data.SqlTypes.SqlNullValueException
- uid: System.Data.SqlTypes.SqlString.#ctor(System.String)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlString(String)
  nameWithType: SqlString.SqlString(String)
  fullName: System.Data.SqlTypes.SqlString.SqlString(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlString(String,Int32)
  nameWithType: SqlString.SqlString(String,Int32)
  fullName: System.Data.SqlTypes.SqlString.SqlString(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlString(Int32,SqlCompareOptions,Byte[])
  nameWithType: SqlString.SqlString(Int32,SqlCompareOptions,Byte[])
  fullName: System.Data.SqlTypes.SqlString.SqlString(Int32,SqlCompareOptions,Byte[])
- uid: System.Data.SqlTypes.SqlCompareOptions
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlCompareOptions
  nameWithType: SqlCompareOptions
  fullName: System.Data.SqlTypes.SqlCompareOptions
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlString(String,Int32,SqlCompareOptions)
  nameWithType: SqlString.SqlString(String,Int32,SqlCompareOptions)
  fullName: System.Data.SqlTypes.SqlString.SqlString(String,Int32,SqlCompareOptions)
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlString(Int32,SqlCompareOptions,Byte[],Boolean)
  nameWithType: SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Boolean)
  fullName: System.Data.SqlTypes.SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32)
  nameWithType: SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32)
  fullName: System.Data.SqlTypes.SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32)
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32,Boolean)
  nameWithType: SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32,Boolean)
  fullName: System.Data.SqlTypes.SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32,Boolean)
- uid: System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Add(SqlString,SqlString)
  nameWithType: SqlString.Add(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.Add(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlString
  nameWithType: SqlString
  fullName: System.Data.SqlTypes.SqlString
- uid: System.Data.SqlTypes.SqlString.BinarySort
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: BinarySort
  nameWithType: SqlString.BinarySort
  fullName: System.Data.SqlTypes.SqlString.BinarySort
- uid: System.Data.SqlTypes.SqlString.BinarySort2
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: BinarySort2
  nameWithType: SqlString.BinarySort2
  fullName: System.Data.SqlTypes.SqlString.BinarySort2
- uid: System.Data.SqlTypes.SqlString.Clone
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Clone()
  nameWithType: SqlString.Clone()
  fullName: System.Data.SqlTypes.SqlString.Clone()
- uid: System.Data.SqlTypes.SqlString.CompareInfo
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: CompareInfo
  nameWithType: SqlString.CompareInfo
  fullName: System.Data.SqlTypes.SqlString.CompareInfo
- uid: System.Globalization.CompareInfo
  parent: System.Globalization
  isExternal: true
  name: CompareInfo
  nameWithType: CompareInfo
  fullName: System.Globalization.CompareInfo
- uid: System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: CompareOptionsFromSqlCompareOptions(SqlCompareOptions)
  nameWithType: SqlString.CompareOptionsFromSqlCompareOptions(SqlCompareOptions)
  fullName: System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(SqlCompareOptions)
- uid: System.Globalization.CompareOptions
  parent: System.Globalization
  isExternal: true
  name: CompareOptions
  nameWithType: CompareOptions
  fullName: System.Globalization.CompareOptions
- uid: System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: CompareTo(SqlString)
  nameWithType: SqlString.CompareTo(SqlString)
  fullName: System.Data.SqlTypes.SqlString.CompareTo(SqlString)
- uid: System.Data.SqlTypes.SqlString.CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: CompareTo(Object)
  nameWithType: SqlString.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlString.CompareTo(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Concat(SqlString,SqlString)
  nameWithType: SqlString.Concat(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.Concat(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.CultureInfo
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: CultureInfo
  nameWithType: SqlString.CultureInfo
  fullName: System.Data.SqlTypes.SqlString.CultureInfo
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Data.SqlTypes.SqlString.Equals(System.Object)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Equals(Object)
  nameWithType: SqlString.Equals(Object)
  fullName: System.Data.SqlTypes.SqlString.Equals(Object)
- uid: System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Equals(SqlString,SqlString)
  nameWithType: SqlString.Equals(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.Equals(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBoolean
  nameWithType: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
- uid: System.Data.SqlTypes.SqlString.GetHashCode
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GetHashCode()
  nameWithType: SqlString.GetHashCode()
  fullName: System.Data.SqlTypes.SqlString.GetHashCode()
- uid: System.Data.SqlTypes.SqlString.GetNonUnicodeBytes
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GetNonUnicodeBytes()
  nameWithType: SqlString.GetNonUnicodeBytes()
  fullName: System.Data.SqlTypes.SqlString.GetNonUnicodeBytes()
- uid: System.Data.SqlTypes.SqlString.GetUnicodeBytes
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GetUnicodeBytes()
  nameWithType: SqlString.GetUnicodeBytes()
  fullName: System.Data.SqlTypes.SqlString.GetUnicodeBytes()
- uid: System.Data.SqlTypes.SqlString.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlString.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlString.GetXsdType(XmlSchemaSet)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GreaterThan(SqlString,SqlString)
  nameWithType: SqlString.GreaterThan(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.GreaterThan(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GreaterThanOrEqual(SqlString,SqlString)
  nameWithType: SqlString.GreaterThanOrEqual(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.GreaterThanOrEqual(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.IgnoreCase
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: IgnoreCase
  nameWithType: SqlString.IgnoreCase
  fullName: System.Data.SqlTypes.SqlString.IgnoreCase
- uid: System.Data.SqlTypes.SqlString.IgnoreKanaType
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: IgnoreKanaType
  nameWithType: SqlString.IgnoreKanaType
  fullName: System.Data.SqlTypes.SqlString.IgnoreKanaType
- uid: System.Data.SqlTypes.SqlString.IgnoreNonSpace
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: IgnoreNonSpace
  nameWithType: SqlString.IgnoreNonSpace
  fullName: System.Data.SqlTypes.SqlString.IgnoreNonSpace
- uid: System.Data.SqlTypes.SqlString.IgnoreWidth
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: IgnoreWidth
  nameWithType: SqlString.IgnoreWidth
  fullName: System.Data.SqlTypes.SqlString.IgnoreWidth
- uid: System.Data.SqlTypes.SqlString.IsNull
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: IsNull
  nameWithType: SqlString.IsNull
  fullName: System.Data.SqlTypes.SqlString.IsNull
- uid: System.Data.SqlTypes.SqlString.LCID
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: LCID
  nameWithType: SqlString.LCID
  fullName: System.Data.SqlTypes.SqlString.LCID
- uid: System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: LessThan(SqlString,SqlString)
  nameWithType: SqlString.LessThan(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.LessThan(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: LessThanOrEqual(SqlString,SqlString)
  nameWithType: SqlString.LessThanOrEqual(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.LessThanOrEqual(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: NotEquals(SqlString,SqlString)
  nameWithType: SqlString.NotEquals(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.NotEquals(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.Null
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: "Null"
  nameWithType: SqlString.Null
  fullName: System.Data.SqlTypes.SqlString.Null
- uid: System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Addition(SqlString,SqlString)
  nameWithType: SqlString.op_Addition(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_Addition(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Equality(SqlString,SqlString)
  nameWithType: SqlString.op_Equality(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_Equality(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlBoolean)
  nameWithType: SqlString.op_Explicit(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlBoolean)
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlByte)
  nameWithType: SqlString.op_Explicit(SqlByte)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlByte)
- uid: System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlByte
  nameWithType: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlDateTime)
  nameWithType: SqlString.op_Explicit(SqlDateTime)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlDateTime)
- uid: System.Data.SqlTypes.SqlDateTime
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDateTime
  nameWithType: SqlDateTime
  fullName: System.Data.SqlTypes.SqlDateTime
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlDecimal)
  nameWithType: SqlString.op_Explicit(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDecimal
  nameWithType: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlDouble)
  nameWithType: SqlString.op_Explicit(SqlDouble)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlDouble)
- uid: System.Data.SqlTypes.SqlDouble
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDouble
  nameWithType: SqlDouble
  fullName: System.Data.SqlTypes.SqlDouble
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlGuid)
  nameWithType: SqlString.op_Explicit(SqlGuid)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlGuid)
- uid: System.Data.SqlTypes.SqlGuid
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlGuid
  nameWithType: SqlGuid
  fullName: System.Data.SqlTypes.SqlGuid
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlInt16)
  nameWithType: SqlString.op_Explicit(SqlInt16)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt16
  nameWithType: SqlInt16
  fullName: System.Data.SqlTypes.SqlInt16
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlInt32)
  nameWithType: SqlString.op_Explicit(SqlInt32)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlInt32)
- uid: System.Data.SqlTypes.SqlInt32
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt32
  nameWithType: SqlInt32
  fullName: System.Data.SqlTypes.SqlInt32
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlInt64)
  nameWithType: SqlString.op_Explicit(SqlInt64)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt64
  nameWithType: SqlInt64
  fullName: System.Data.SqlTypes.SqlInt64
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlMoney)
  nameWithType: SqlString.op_Explicit(SqlMoney)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlMoney
  nameWithType: SqlMoney
  fullName: System.Data.SqlTypes.SqlMoney
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlSingle)
  nameWithType: SqlString.op_Explicit(SqlSingle)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlSingle
  nameWithType: SqlSingle
  fullName: System.Data.SqlTypes.SqlSingle
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString to System.String)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlString)
  nameWithType: SqlString.op_Explicit(SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlString)
- uid: System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_GreaterThan(SqlString,SqlString)
  nameWithType: SqlString.op_GreaterThan(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_GreaterThan(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_GreaterThanOrEqual(SqlString,SqlString)
  nameWithType: SqlString.op_GreaterThanOrEqual(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.op_Implicit(System.String)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Implicit(String)
  nameWithType: SqlString.op_Implicit(String)
  fullName: System.Data.SqlTypes.SqlString.op_Implicit(String)
- uid: System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Inequality(SqlString,SqlString)
  nameWithType: SqlString.op_Inequality(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_Inequality(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_LessThan(SqlString,SqlString)
  nameWithType: SqlString.op_LessThan(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_LessThan(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_LessThanOrEqual(SqlString,SqlString)
  nameWithType: SqlString.op_LessThanOrEqual(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_LessThanOrEqual(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.SqlCompareOptions
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlCompareOptions
  nameWithType: SqlString.SqlCompareOptions
  fullName: System.Data.SqlTypes.SqlString.SqlCompareOptions
- uid: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlString.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlString.System.Xml.Serialization.IXmlSerializable.GetSchema()
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlString.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlString.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlString.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlString.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Data.SqlTypes.SqlString.ToSqlBoolean
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlBoolean()
  nameWithType: SqlString.ToSqlBoolean()
  fullName: System.Data.SqlTypes.SqlString.ToSqlBoolean()
- uid: System.Data.SqlTypes.SqlString.ToSqlByte
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlByte()
  nameWithType: SqlString.ToSqlByte()
  fullName: System.Data.SqlTypes.SqlString.ToSqlByte()
- uid: System.Data.SqlTypes.SqlString.ToSqlDateTime
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlDateTime()
  nameWithType: SqlString.ToSqlDateTime()
  fullName: System.Data.SqlTypes.SqlString.ToSqlDateTime()
- uid: System.Data.SqlTypes.SqlString.ToSqlDecimal
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlDecimal()
  nameWithType: SqlString.ToSqlDecimal()
  fullName: System.Data.SqlTypes.SqlString.ToSqlDecimal()
- uid: System.Data.SqlTypes.SqlString.ToSqlDouble
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlDouble()
  nameWithType: SqlString.ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlString.ToSqlDouble()
- uid: System.Data.SqlTypes.SqlString.ToSqlGuid
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlGuid()
  nameWithType: SqlString.ToSqlGuid()
  fullName: System.Data.SqlTypes.SqlString.ToSqlGuid()
- uid: System.Data.SqlTypes.SqlString.ToSqlInt16
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlInt16()
  nameWithType: SqlString.ToSqlInt16()
  fullName: System.Data.SqlTypes.SqlString.ToSqlInt16()
- uid: System.Data.SqlTypes.SqlString.ToSqlInt32
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlInt32()
  nameWithType: SqlString.ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlString.ToSqlInt32()
- uid: System.Data.SqlTypes.SqlString.ToSqlInt64
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlInt64()
  nameWithType: SqlString.ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlString.ToSqlInt64()
- uid: System.Data.SqlTypes.SqlString.ToSqlMoney
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlMoney()
  nameWithType: SqlString.ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlString.ToSqlMoney()
- uid: System.Data.SqlTypes.SqlString.ToSqlSingle
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlSingle()
  nameWithType: SqlString.ToSqlSingle()
  fullName: System.Data.SqlTypes.SqlString.ToSqlSingle()
- uid: System.Data.SqlTypes.SqlString.ToString
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToString()
  nameWithType: SqlString.ToString()
  fullName: System.Data.SqlTypes.SqlString.ToString()
- uid: System.Data.SqlTypes.SqlString.Value
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Value
  nameWithType: SqlString.Value
  fullName: System.Data.SqlTypes.SqlString.Value
- uid: System.Data.SqlTypes.SqlString.#ctor*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlString
  nameWithType: SqlString.SqlString
- uid: System.Data.SqlTypes.SqlString.Add*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Add
  nameWithType: SqlString.Add
- uid: System.Data.SqlTypes.SqlString.Clone*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Clone
  nameWithType: SqlString.Clone
- uid: System.Data.SqlTypes.SqlString.CompareInfo*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: CompareInfo
  nameWithType: SqlString.CompareInfo
- uid: System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: CompareOptionsFromSqlCompareOptions
  nameWithType: SqlString.CompareOptionsFromSqlCompareOptions
- uid: System.Data.SqlTypes.SqlString.CompareTo*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: CompareTo
  nameWithType: SqlString.CompareTo
- uid: System.Data.SqlTypes.SqlString.Concat*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Concat
  nameWithType: SqlString.Concat
- uid: System.Data.SqlTypes.SqlString.CultureInfo*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: CultureInfo
  nameWithType: SqlString.CultureInfo
- uid: System.Data.SqlTypes.SqlString.Equals*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Equals
  nameWithType: SqlString.Equals
- uid: System.Data.SqlTypes.SqlString.GetHashCode*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GetHashCode
  nameWithType: SqlString.GetHashCode
- uid: System.Data.SqlTypes.SqlString.GetNonUnicodeBytes*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GetNonUnicodeBytes
  nameWithType: SqlString.GetNonUnicodeBytes
- uid: System.Data.SqlTypes.SqlString.GetUnicodeBytes*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GetUnicodeBytes
  nameWithType: SqlString.GetUnicodeBytes
- uid: System.Data.SqlTypes.SqlString.GetXsdType*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GetXsdType
  nameWithType: SqlString.GetXsdType
- uid: System.Data.SqlTypes.SqlString.GreaterThan*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GreaterThan
  nameWithType: SqlString.GreaterThan
- uid: System.Data.SqlTypes.SqlString.GreaterThanOrEqual*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GreaterThanOrEqual
  nameWithType: SqlString.GreaterThanOrEqual
- uid: System.Data.SqlTypes.SqlString.IsNull*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: IsNull
  nameWithType: SqlString.IsNull
- uid: System.Data.SqlTypes.SqlString.LCID*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: LCID
  nameWithType: SqlString.LCID
- uid: System.Data.SqlTypes.SqlString.LessThan*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: LessThan
  nameWithType: SqlString.LessThan
- uid: System.Data.SqlTypes.SqlString.LessThanOrEqual*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: LessThanOrEqual
  nameWithType: SqlString.LessThanOrEqual
- uid: System.Data.SqlTypes.SqlString.NotEquals*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: NotEquals
  nameWithType: SqlString.NotEquals
- uid: System.Data.SqlTypes.SqlString.op_Addition*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Addition
  nameWithType: SqlString.op_Addition
- uid: System.Data.SqlTypes.SqlString.op_Equality*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Equality
  nameWithType: SqlString.op_Equality
- uid: System.Data.SqlTypes.SqlString.op_Explicit*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit
  nameWithType: SqlString.op_Explicit
- uid: System.Data.SqlTypes.SqlString.op_GreaterThan*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_GreaterThan
  nameWithType: SqlString.op_GreaterThan
- uid: System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_GreaterThanOrEqual
  nameWithType: SqlString.op_GreaterThanOrEqual
- uid: System.Data.SqlTypes.SqlString.op_Implicit*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Implicit
  nameWithType: SqlString.op_Implicit
- uid: System.Data.SqlTypes.SqlString.op_Inequality*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Inequality
  nameWithType: SqlString.op_Inequality
- uid: System.Data.SqlTypes.SqlString.op_LessThan*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_LessThan
  nameWithType: SqlString.op_LessThan
- uid: System.Data.SqlTypes.SqlString.op_LessThanOrEqual*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_LessThanOrEqual
  nameWithType: SqlString.op_LessThanOrEqual
- uid: System.Data.SqlTypes.SqlString.SqlCompareOptions*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlCompareOptions
  nameWithType: SqlString.SqlCompareOptions
- uid: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema
  nameWithType: SqlString.System.Xml.Serialization.IXmlSerializable.GetSchema
- uid: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml
  nameWithType: SqlString.System.Xml.Serialization.IXmlSerializable.ReadXml
- uid: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml
  nameWithType: SqlString.System.Xml.Serialization.IXmlSerializable.WriteXml
- uid: System.Data.SqlTypes.SqlString.ToSqlBoolean*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlBoolean
  nameWithType: SqlString.ToSqlBoolean
- uid: System.Data.SqlTypes.SqlString.ToSqlByte*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlByte
  nameWithType: SqlString.ToSqlByte
- uid: System.Data.SqlTypes.SqlString.ToSqlDateTime*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlDateTime
  nameWithType: SqlString.ToSqlDateTime
- uid: System.Data.SqlTypes.SqlString.ToSqlDecimal*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlDecimal
  nameWithType: SqlString.ToSqlDecimal
- uid: System.Data.SqlTypes.SqlString.ToSqlDouble*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlDouble
  nameWithType: SqlString.ToSqlDouble
- uid: System.Data.SqlTypes.SqlString.ToSqlGuid*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlGuid
  nameWithType: SqlString.ToSqlGuid
- uid: System.Data.SqlTypes.SqlString.ToSqlInt16*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlInt16
  nameWithType: SqlString.ToSqlInt16
- uid: System.Data.SqlTypes.SqlString.ToSqlInt32*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlInt32
  nameWithType: SqlString.ToSqlInt32
- uid: System.Data.SqlTypes.SqlString.ToSqlInt64*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlInt64
  nameWithType: SqlString.ToSqlInt64
- uid: System.Data.SqlTypes.SqlString.ToSqlMoney*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlMoney
  nameWithType: SqlString.ToSqlMoney
- uid: System.Data.SqlTypes.SqlString.ToSqlSingle*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlSingle
  nameWithType: SqlString.ToSqlSingle
- uid: System.Data.SqlTypes.SqlString.ToString*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToString
  nameWithType: SqlString.ToString
- uid: System.Data.SqlTypes.SqlString.Value*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Value
  nameWithType: SqlString.Value
