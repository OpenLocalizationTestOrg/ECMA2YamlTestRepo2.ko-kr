### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.KeyContainerPermissionAttribute
  id: KeyContainerPermissionAttribute
  children:
  - System.Security.Permissions.KeyContainerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission
  - System.Security.Permissions.KeyContainerPermissionAttribute.Flags
  - System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName
  - System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec
  - System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore
  - System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName
  - System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType
  langs:
  - csharp
  name: KeyContainerPermissionAttribute
  nameWithType: KeyContainerPermissionAttribute
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute
  type: Class
  summary: "에 대 한 보안 동작 <xref href=&quot;System.Security.Permissions.KeyContainerPermission&quot;> </xref> 선언적 보안을 사용 하 여 코드에 적용 될 수 있습니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "허용 되는 선언의 범위에 따라 달라 집니다는 <xref:System.Security.Permissions.SecurityAction>사용 되는 값입니다.</xref:System.Security.Permissions.SecurityAction>       보안 특성에 의해 선언 된 보안 정보 특성 대상의 메타 데이터에 저장 되 고 실행 시 시스템에서 액세스 됩니다. KeyContainerPermissionAttribute 선언적 보안에만 사용 됩니다. 명령적 보안 <xref:System.Security.Permissions.KeyContainerPermission>클래스</xref:System.Security.Permissions.KeyContainerPermission> 를 사용 합니다."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class KeyContainerPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  langs:
  - csharp
  name: KeyContainerPermissionAttribute(SecurityAction)
  nameWithType: KeyContainerPermissionAttribute.KeyContainerPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAttribute&quot;> </xref> 지정 된 보안 동작을 사용 하 여 클래스입니다."
  syntax:
    content: public KeyContainerPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "중 하나는 <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref> 값입니다."
  overload: System.Security.Permissions.KeyContainerPermissionAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: KeyContainerPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "만들고 새 반환 <xref href=&quot;System.Security.Permissions.KeyContainerPermission&quot;> </xref>합니다."
  remarks: "이 메서드가 응용 프로그램 코드 보안 시스템에서만 호출 해야 합니다.       컴파일 타임에 특성은 보안 선언을 메타 데이터의 serialize 된 형식으로 변환 합니다. 이 메서드가 반환 하는 권한 개체에서 메타 데이터 생성 됩니다."
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Security.Permissions.KeyContainerPermission&quot;> </xref> 특성에 해당 하는 합니다."
  overload: System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.Flags
  id: Flags
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  langs:
  - csharp
  name: Flags
  nameWithType: KeyContainerPermissionAttribute.Flags
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.Flags
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "키 컨테이너 사용 권한을 가져오거나 설정 합니다."
  remarks: "> [!CAUTION]> 이러한 플래그의 대부분 강력 하 고 신뢰할 수 있는 코드에만 부여 해야 하는 키 컨테이너에 대 한 액세스를 허용 합니다.       플래그의 가장 강력한는 <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, 및 <xref:System.Security.Permissions.KeyContainerPermissionFlags>.</xref:System.Security.Permissions.KeyContainerPermissionFlags> </xref:System.Security.Permissions.KeyContainerPermissionFlags> </xref:System.Security.Permissions.KeyContainerPermissionFlags> </xref:System.Security.Permissions.KeyContainerPermissionFlags> </xref:System.Security.Permissions.KeyContainerPermissionFlags> </xref:System.Security.Permissions.KeyContainerPermissionFlags> </xref:System.Security.Permissions.KeyContainerPermissionFlags> 이러한 플래그를 사용 하 여 제기 되는 특정 위협에 대 한 개별 플래그 설명을 참조 하십시오."
  syntax:
    content: public System.Security.Permissions.KeyContainerPermissionFlags Flags { get; set; }
    return:
      type: System.Security.Permissions.KeyContainerPermissionFlags
      description: "비트 조합 된 <xref href=&quot;System.Security.Permissions.KeyContainerPermissionFlags&quot;> </xref> 값입니다. 기본값은 <xref href=&quot;System.Security.Permissions.KeyContainerPermissionFlags&quot;> </xref>합니다."
  overload: System.Security.Permissions.KeyContainerPermissionAttribute.Flags*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName
  id: KeyContainerName
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  langs:
  - csharp
  name: KeyContainerName
  nameWithType: KeyContainerPermissionAttribute.KeyContainerName
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "키 컨테이너의 이름을 가져오거나 설정 합니다."
  remarks: "값을 사용 하 여 &quot;*&quot; 지정 된 공급자 이름 및 공급자 형식 내에서 모든 키 컨테이너에 액세스 항목을 적용 합니다."
  syntax:
    content: public string KeyContainerName { get; set; }
    return:
      type: System.String
      description: "키 컨테이너의 이름입니다."
  overload: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec
  id: KeySpec
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  langs:
  - csharp
  name: KeySpec
  nameWithType: KeyContainerPermissionAttribute.KeySpec
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "키 사양을 가져오거나 설정 합니다."
  remarks: "지정 하지 않으면, AT_KEYEXCHANGE 값 (1)이 사용 됩니다. 이 속성에 대 한 유효한 값은 AT_KEYEXCHANGE (1) 및 (2) AT_SIGNATURE입니다."
  syntax:
    content: public int KeySpec { get; set; }
    return:
      type: System.Int32
      description: "Wincrypt.h 헤더 파일에 정의 된 AT_ 값 중 하나입니다."
  overload: System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore
  id: KeyStore
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  langs:
  - csharp
  name: KeyStore
  nameWithType: KeyContainerPermissionAttribute.KeyStore
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "키 저장소의 이름을 가져오거나 설정 합니다."
  remarks: "유효한 값은 &quot;User&quot;, &quot;컴퓨터&quot; 및 &quot;*&quot;입니다. 경우 `null` 를 지정는 값이 설정 &quot;\\*&quot;입니다."
  syntax:
    content: public string KeyStore { get; set; }
    return:
      type: System.String
      description: "키 저장소의 이름입니다. 기본값은 &quot;*&quot;입니다."
  overload: System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName
  id: ProviderName
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  langs:
  - csharp
  name: ProviderName
  nameWithType: KeyContainerPermissionAttribute.ProviderName
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "공급자 이름을 가져오거나 설정 합니다."
  remarks: "공급자 이름의 예로 &quot;Microsoft Enhanced Cryptographic Provider&quot;입니다. 경우 `null` 지정, 고급 암호화 공급자 이름이 사용 됩니다."
  syntax:
    content: public string ProviderName { get; set; }
    return:
      type: System.String
      description: "공급자의 이름입니다."
  overload: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType
  id: ProviderType
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  langs:
  - csharp
  name: ProviderType
  nameWithType: KeyContainerPermissionAttribute.ProviderType
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "공급자 형식을 설정 하거나 가져옵니다."
  remarks: "If no value is specified, PROV_RSA_FULL (1) is used.  \n  \n The following values are defined in the Wincrypt.h header file:  \n  \n-   \\#define PROV_RSA_FULL 1  \n  \n-   \\#define PROV_RSA_SIG 2  \n  \n-   \\#define PROV_DSS 3  \n  \n-   \\#define PROV_FORTEZZA 4  \n  \n-   \\#define PROV_MS_EXCHANGE 5  \n  \n-   \\#define PROV_SSL 6  \n  \n-   \\#define PROV_RSA_SCHANNEL 12  \n  \n-   \\#define PROV_DSS_DH 13  \n  \n-   \\#define PROV_EC_ECDSA_SIG 14  \n  \n-   \\#define PROV_EC_ECNRA_SIG 15  \n  \n-   \\#define PROV_EC_ECDSA_FULL 16  \n  \n-   \\#define PROV_EC_ECNRA_FULL 17  \n  \n-   \\#define PROV_DH_SCHANNEL 18  \n  \n-   \\#define PROV_SPYRUS_LYNKS 20  \n  \n-   \\#define PROV_RNG 21  \n  \n-   \\#define PROV_INTEL_SEC 22  \n  \n-   \\#define PROV_REPLACE_OWF 23  \n  \n-   \\#define PROV_RSA_AES 24"
  syntax:
    content: public int ProviderType { get; set; }
    return:
      type: System.Int32
      description: "Wincrypt.h 헤더 파일에 정의 된 PROV_ 값 중 하나입니다."
  overload: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: KeyContainerPermissionAttribute(SecurityAction)
  nameWithType: KeyContainerPermissionAttribute.KeyContainerPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: KeyContainerPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.Flags
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: Flags
  nameWithType: KeyContainerPermissionAttribute.Flags
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.Flags
- uid: System.Security.Permissions.KeyContainerPermissionFlags
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionFlags
  nameWithType: KeyContainerPermissionFlags
  fullName: System.Security.Permissions.KeyContainerPermissionFlags
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: KeyContainerName
  nameWithType: KeyContainerPermissionAttribute.KeyContainerName
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: KeySpec
  nameWithType: KeyContainerPermissionAttribute.KeySpec
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: KeyStore
  nameWithType: KeyContainerPermissionAttribute.KeyStore
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: ProviderName
  nameWithType: KeyContainerPermissionAttribute.ProviderName
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: ProviderType
  nameWithType: KeyContainerPermissionAttribute.ProviderType
  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.#ctor*
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: KeyContainerPermissionAttribute
  nameWithType: KeyContainerPermissionAttribute.KeyContainerPermissionAttribute
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission*
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: KeyContainerPermissionAttribute.CreatePermission
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.Flags*
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: Flags
  nameWithType: KeyContainerPermissionAttribute.Flags
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName*
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: KeyContainerName
  nameWithType: KeyContainerPermissionAttribute.KeyContainerName
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec*
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: KeySpec
  nameWithType: KeyContainerPermissionAttribute.KeySpec
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore*
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: KeyStore
  nameWithType: KeyContainerPermissionAttribute.KeyStore
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName*
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: ProviderName
  nameWithType: KeyContainerPermissionAttribute.ProviderName
- uid: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType*
  parent: System.Security.Permissions.KeyContainerPermissionAttribute
  isExternal: false
  name: ProviderType
  nameWithType: KeyContainerPermissionAttribute.ProviderType
