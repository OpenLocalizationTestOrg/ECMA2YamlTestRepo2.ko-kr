### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.ListViewInsertionMark
  id: ListViewInsertionMark
  children:
  - System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem
  - System.Windows.Forms.ListViewInsertionMark.Bounds
  - System.Windows.Forms.ListViewInsertionMark.Color
  - System.Windows.Forms.ListViewInsertionMark.Index
  - System.Windows.Forms.ListViewInsertionMark.NearestIndex(System.Drawing.Point)
  langs:
  - csharp
  name: ListViewInsertionMark
  nameWithType: ListViewInsertionMark
  fullName: System.Windows.Forms.ListViewInsertionMark
  type: Class
  summary: "항목을 새 위치로 끌 때 예상 되는 위치를 나타내는 데는 <xref href=&quot;System.Windows.Forms.ListView&quot;> </xref> 제어 합니다. 이 기능은 이상에서 Windows XP에만 사용할 수 있습니다."
  remarks: "ListViewInsertionMark를 검색할 수 있습니다는 <xref:System.Windows.Forms.ListView.InsertionMark%2A>속성은 <xref:System.Windows.Forms.ListView>제어 하 고 항목을 새 위치로 끌 때 끌어서 놓기 작업에서 예상된 저장 위치를 시각적으로 나타내는 데 사용 합니다.</xref:System.Windows.Forms.ListView> </xref:System.Windows.Forms.ListView.InsertionMark%2A>       경우에만이 기능이 작동 하는 <xref:System.Windows.Forms.ListView.AutoArrange%2A?displayProperty=fullName>속성 `true` 및 시기는 <xref:System.Windows.Forms.ListView>컨트롤 항목을 자동으로 정렬 되지 않습니다.</xref:System.Windows.Forms.ListView> </xref:System.Windows.Forms.ListView.AutoArrange%2A?displayProperty=fullName> 자동 정렬을 방지 하려면는 <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=fullName>속성으로 설정 되어 있어야 <xref:System.Windows.Forms.SortOrder?displayProperty=fullName>및 <xref:System.Windows.Forms.ListView.View%2A?displayProperty=fullName>속성으로 설정 되어 있어야 <xref:System.Windows.Forms.View?displayProperty=fullName>, <xref:System.Windows.Forms.View?displayProperty=fullName>, 또는 <xref:System.Windows.Forms.View?displayProperty=fullName>.</xref:System.Windows.Forms.View?displayProperty=fullName> </xref:System.Windows.Forms.View?displayProperty=fullName> </xref:System.Windows.Forms.View?displayProperty=fullName> </xref:System.Windows.Forms.ListView.View%2A?displayProperty=fullName> </xref:System.Windows.Forms.SortOrder?displayProperty=fullName> </xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=fullName> 삽입 표시 기능은 함께 사용할 수 없습니다 또한는 <xref:System.Windows.Forms.ListView>그룹화 기능은 그룹 구성원 자격을 기준으로 항목을 정렬 하기 때문에 기능을 그룹화 합니다.</xref:System.Windows.Forms.ListView>       ListViewInsertionMark 클래스에 대 한 처리기에서 일반적으로 사용 되는 <xref:System.Windows.Forms.Control.DragOver?displayProperty=fullName>또는 <xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName>이벤트 항목을 끄는 삽입 표시의 위치를 업데이트할 수 있습니다.</xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName> </xref:System.Windows.Forms.Control.DragOver?displayProperty=fullName> 에 대 한 처리기에는 또한는 <xref:System.Windows.Forms.Control.DragDrop?displayProperty=fullName>또는 <xref:System.Windows.Forms.Control.MouseUp?displayProperty=fullName>올바른 위치에 끌어 온된 항목을 삽입 하는 이벤트입니다.</xref:System.Windows.Forms.Control.MouseUp?displayProperty=fullName> </xref:System.Windows.Forms.Control.DragDrop?displayProperty=fullName>       삽입 표시의 위치를 업데이트 하려면 다음이 단계를 수행 합니다. 1.  에 대 한 처리기에는 <xref:System.Windows.Forms.Control.DragOver?displayProperty=fullName>또는 <xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName>이벤트를 사용 하 여는 <xref:System.Windows.Forms.ListView.InsertionMark%2A?displayProperty=fullName>연관 ListViewInsertionMark 개체에 액세스 하는 속성의 <xref:System.Windows.Forms.ListView>컨트롤.</xref:System.Windows.Forms.ListView> </xref:System.Windows.Forms.ListView.InsertionMark%2A?displayProperty=fullName> </xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName> </xref:System.Windows.Forms.Control.DragOver?displayProperty=fullName>      2.  사용 하 여는 <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A>마우스 포인터에 가장 가까운 항목의 인덱스를 검색 하는 메서드입니다.</xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A>      3.  인덱스 값을 전달는 <xref:System.Windows.Forms.ListView.GetItemRect%2A?displayProperty=fullName>항목의 경계 사각형을 검색 하는 메서드입니다.</xref:System.Windows.Forms.ListView.GetItemRect%2A?displayProperty=fullName>      4.  마우스 포인터가 중간점 경계 사각형의 왼쪽에 있는 경우, 설정 된 <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A>속성을 `false`, 그렇지 않으면로 설정 `true`.</xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A>      5.  설정 된 <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A>속성에서 검색 한 인덱스 값을는 <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A>메서드.</xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> </xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> 삽입 표시가 나타나지 지정된 된 인덱스에 따라 오른쪽 이나 왼쪽에 있는 항목의 <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A>속성 값.</xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> 항목을 자체를 통해 끌어 인덱스-1 이며 삽입 표시가 나타나지 않습니다.       끌어 온된 항목을 올바른 위치에 삽입 하려면 다음이 단계를 수행 합니다. 1.  에 대 한 처리기에는 <xref:System.Windows.Forms.Control.DragDrop?displayProperty=fullName>또는 <xref:System.Windows.Forms.Control.MouseUp?displayProperty=fullName>이벤트를 사용 하 여는 <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A>속성 삽입 표시의 현재 위치를 확인 합니다.</xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> </xref:System.Windows.Forms.Control.MouseUp?displayProperty=fullName> </xref:System.Windows.Forms.Control.DragDrop?displayProperty=fullName> 삽입 인덱스와 나중에 사용 하도록이 값을 저장 합니다.      2.  경우는 <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A>속성이 `true`, 저장된 삽입 인덱스 값이 증가 합니다.</xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A>      3.  사용 하 여는 <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A?displayProperty=fullName>으로 끌어 온된 항목의 복제본을 삽입 하는 메서드는 <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=fullName>저장된 삽입 인덱스에 컬렉션.</xref:System.Windows.Forms.ListView.Items%2A?displayProperty=fullName> </xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A?displayProperty=fullName>      4.  사용 하 여는 <xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A?displayProperty=fullName>메서드를 끌어 온된 항목의 원래 복사본을 제거 합니다.</xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A?displayProperty=fullName>       인덱스에 값을 원래 복사본을 제거 하기 전에 끌어 온된 항목의 복제본을 삽입 해야는 <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=fullName>삽입 하기 전에 컬렉션은 변경 되지 않습니다.</xref:System.Windows.Forms.ListView.Items%2A?displayProperty=fullName>       항목 인덱스 값과 동일한 순서로 표시 되도록, 하려면 설정 해야 합니다는 <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A?displayProperty=fullName>속성의 구현에는 <xref:System.Collections.IComparer>항목을 인덱스 값으로 정렬 하는 인터페이스입니다.</xref:System.Collections.IComparer> </xref:System.Windows.Forms.ListView.ListViewItemSorter%2A?displayProperty=fullName> 자세한 내용은 &quot;예&quot; 섹션을 참조 하십시오.       사용 하 여 삽입 표시의 색을 수정할 수는 <xref:System.Windows.Forms.ListViewInsertionMark.Color%2A>속성.</xref:System.Windows.Forms.ListViewInsertionMark.Color%2A> 크기 또는 삽입 표시의 위치를 해야 하는 경우 해당 경계 사각형을 통해 가져올 수 있습니다는 <xref:System.Windows.Forms.ListViewInsertionMark.Bounds%2A>속성.</xref:System.Windows.Forms.ListViewInsertionMark.Bounds%2A>      > [!NOTE] > 삽입 표시 기능은 응용 프로그램에서 호출 하는 경우 Windows XP 및 Windows Server 2003 제품군만 사용할 수는 <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=fullName>메서드.</xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=fullName> 이전 버전의 운영 체제에서는 삽입 표시와 관련 된 모든 코드가 무시 되 고 삽입 표시가 나타나지 않습니다. 결과적으로, 삽입 표시 기능은에 사용 하는 코드가 제대로 작동 하지 않을 수 있습니다. 삽입 표시 기능을 사용할 수 있는지 여부를 확인 하는 테스트를 포함 하 고 사용할 수 없는 경우 대체 기능을 제공할 수 있습니다. 예를 들어 다음 삽입 표시를 지원 하지 않는 운영 체제에서 실행할 때는 위치를 변경 하는 끌어서 놓기 항목을 구현 하는 모든 코드를 무시 하는 것이 좋습니다.   >> 삽입 표시 기능은 운영 체제 테마 기능을 제공 하는 라이브러리에서 제공 됩니다. 이 라이브러리의 가용성을 확인 하려면 호출 된 <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=fullName>메서드 오버 로드를 전달은 <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=fullName>값.</xref:System.Windows.Forms.OSFeature.Themes?displayProperty=fullName> </xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListView> insertion mark feature and implements drag-and-drop item reordering using the standard drag events. The position of the insertion mark is updated in a handler for the <xref:System.Windows.Forms.Control.DragOver?displayProperty=fullName> event. In this handler, the position of the mouse pointer is compared to the midpoint of the nearest item, and the result is used to determine whether the insertion mark appears to the left or the right of the item.  \n  \n [!code-cs[System.Windows.Forms.ListView.InsertionMark#1](~/add/codesnippet/csharp/t-system.windows.forms.l_14_1.cs)]\n [!code-vb[System.Windows.Forms.ListView.InsertionMark#1](~/add/codesnippet/visualbasic/t-system.windows.forms.l_14_1.vb)]\n [!code-cpp[System.Windows.Forms.ListView.InsertionMark#1](~/add/codesnippet/cpp/t-system.windows.forms.l_14_1.cpp)]"
  syntax:
    content: public sealed class ListViewInsertionMark
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem
  id: AppearsAfterItem
  parent: System.Windows.Forms.ListViewInsertionMark
  langs:
  - csharp
  name: AppearsAfterItem
  nameWithType: ListViewInsertionMark.AppearsAfterItem
  fullName: System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "로 지정 된 인덱스에 있는 삽입 표시가 항목의 오른쪽에 표시 되는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref:System.Windows.Forms.ListViewInsertionMark.Index*>속성.</xref:System.Windows.Forms.ListViewInsertionMark.Index*>"
  remarks: "<xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A>메서드를 사용 하면 마우스 포인터에 가장 가까운 항목을 찾을 수 있지만이 항목 전후 삽입 표시가 표시 되는지 여부를 결정 하기 위해 사용자 고유의 계산을 수행 해야 합니다.</xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A>       AppearsAfterItem 속성에 필요한 값을 계산 하려면 다음이 단계를 수행 합니다. 1.  사용 하 여는 <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A>마우스 포인터에 가장 가까운 항목의 인덱스를 검색 하는 메서드입니다.</xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A>      2.  인덱스 값을 전달는 <xref:System.Windows.Forms.ListView.GetItemRect%2A?displayProperty=fullName>항목의 경계 사각형을 검색 하는 메서드입니다.</xref:System.Windows.Forms.ListView.GetItemRect%2A?displayProperty=fullName>      3.  마우스 포인터가 중간점 경계 사각형의 왼쪽에 있는 경우 AppearsAfterItem 속성을 설정 `false`, 그렇지 않으면이 속성을 설정 `true`합니다.       자세한 내용은 참조는 <xref:System.Windows.Forms.ListViewInsertionMark>개요 참조 항목입니다.</xref:System.Windows.Forms.ListViewInsertionMark>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListView> insertion mark feature and implements drag-and-drop item reordering using the standard drag events. The position of the insertion mark is updated in a handler for the <xref:System.Windows.Forms.Control.DragOver?displayProperty=fullName> event. In this handler, the position of the mouse pointer is compared to the midpoint of the nearest item, and the result is used to determine whether the insertion mark appears to the left or the right of the item.  \n  \n For the complete example, see the <xref:System.Windows.Forms.ListViewInsertionMark> overview reference topic.  \n  \n [!code-cs[System.Windows.Forms.ListView.InsertionMark#3](~/add/codesnippet/csharp/p-system.windows.forms.l_57_1.cs)]\n [!code-vb[System.Windows.Forms.ListView.InsertionMark#3](~/add/codesnippet/visualbasic/p-system.windows.forms.l_57_1.vb)]\n [!code-cpp[System.Windows.Forms.ListView.InsertionMark#3](~/add/codesnippet/cpp/p-system.windows.forms.l_57_1.cpp)]"
  syntax:
    content: public bool AppearsAfterItem { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>삽입 표시가로 지정 된 인덱스에 있는 항목의 오른쪽에 나타나는 경우는 <xref:System.Windows.Forms.ListViewInsertionMark.Index*>속성, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Forms.ListViewInsertionMark.Index*> 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListViewInsertionMark.Bounds
  id: Bounds
  parent: System.Windows.Forms.ListViewInsertionMark
  langs:
  - csharp
  name: Bounds
  nameWithType: ListViewInsertionMark.Bounds
  fullName: System.Windows.Forms.ListViewInsertionMark.Bounds
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "삽입 표시의 경계 사각형을 가져옵니다."
  remarks: "왼쪽 위 모퉁이 기준으로 삽입 표시가 경계 사각형의 좌표는는 <xref:System.Windows.Forms.ListView>컨트롤.</xref:System.Windows.Forms.ListView>"
  syntax:
    content: public System.Drawing.Rectangle Bounds { get; }
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 삽입 표시의 크기와 위치를 나타내는입니다."
  overload: System.Windows.Forms.ListViewInsertionMark.Bounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListViewInsertionMark.Color
  id: Color
  parent: System.Windows.Forms.ListViewInsertionMark
  langs:
  - csharp
  name: Color
  nameWithType: ListViewInsertionMark.Color
  fullName: System.Windows.Forms.ListViewInsertionMark.Color
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "삽입 표시의 색을 가져오거나 설정 합니다."
  remarks: "삽입 표시가 색의 전경색이 아닌 값을 설정 하려면이 속성을 사용 하 여 <xref:System.Windows.Forms.ListView>컨트롤.</xref:System.Windows.Forms.ListView>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListView> insertion mark feature and implements drag-and-drop item reordering using the standard drag events. The position of the insertion mark is updated in a handler for the <xref:System.Windows.Forms.Control.DragOver?displayProperty=fullName> event. In this handler, the position of the mouse pointer is compared to the midpoint of the nearest item, and the result is used to determine whether the insertion mark appears to the left or the right of the item.  \n  \n For the complete example, see the <xref:System.Windows.Forms.ListViewInsertionMark> overview reference topic.  \n  \n [!code-cs[System.Windows.Forms.ListView.InsertionMark#2](~/add/codesnippet/csharp/p-system.windows.forms.l_71_1.cs)]\n [!code-vb[System.Windows.Forms.ListView.InsertionMark#2](~/add/codesnippet/visualbasic/p-system.windows.forms.l_71_1.vb)]\n [!code-cpp[System.Windows.Forms.ListView.InsertionMark#2](~/add/codesnippet/cpp/p-system.windows.forms.l_71_1.cpp)]"
  syntax:
    content: public System.Drawing.Color Color { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref> 삽입 표시의 색을 나타내는 값입니다. 기본값은 값의 &lt;xref:System.Windows.Forms.ListView.ForeColor%2A?displayProperty=fullName&gt; 속성입니다."
  overload: System.Windows.Forms.ListViewInsertionMark.Color*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListViewInsertionMark.Index
  id: Index
  parent: System.Windows.Forms.ListViewInsertionMark
  langs:
  - csharp
  name: Index
  nameWithType: ListViewInsertionMark.Index
  fullName: System.Windows.Forms.ListViewInsertionMark.Index
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "삽입 표시가 나타나지는 옆에 있는 항목의 인덱스를 가져오거나 설정 합니다."
  remarks: "삽입 표시 하는 경우 지정 된 인덱스 항목의 왼쪽에 표시는 <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A>속성이로 설정 되어 `false`, 그렇지 않으면 항목의 오른쪽에 나타납니다.</xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> 삽입 표시가 항목을 끌어다에 삽입 될 때 자동으로 사라집니다는 <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=fullName>컬렉션.</xref:System.Windows.Forms.ListView.Items%2A?displayProperty=fullName> 을 제거 하려면 삽입 표시가 수동으로, 예를 들어 항목 자체를 끌어 되었거나 컨트롤 밖으로 끌어 인덱스 값-1로 설정 합니다.       사용 하 여는 <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A>끌어서 놓기 작업에서 항목 위치를 지정할 때 마우스 포인터의 위치와 같은 지정된 된 위치에 가장 가까운 항목의 인덱스를 검색 하는 메서드입니다.</xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListView> insertion mark feature and implements drag-and-drop item reordering using the standard drag events. The position of the insertion mark is updated in a handler for the <xref:System.Windows.Forms.Control.DragOver?displayProperty=fullName> event. In this handler, the position of the mouse pointer is compared to the midpoint of the nearest item, and the result is used to determine whether the insertion mark appears to the left or the right of the item.  \n  \n For the complete example, see the <xref:System.Windows.Forms.ListViewInsertionMark> overview reference topic.  \n  \n [!code-cs[System.Windows.Forms.ListView.InsertionMark#3](~/add/codesnippet/csharp/p-system.windows.forms.l_67_1.cs)]\n [!code-vb[System.Windows.Forms.ListView.InsertionMark#3](~/add/codesnippet/visualbasic/p-system.windows.forms.l_67_1.vb)]\n [!code-cpp[System.Windows.Forms.ListView.InsertionMark#3](~/add/codesnippet/cpp/p-system.windows.forms.l_67_1.cpp)]"
  syntax:
    content: public int Index { get; set; }
    return:
      type: System.Int32
      description: "옆에 있는 항목의 인덱스 삽입 표시가 나타나는 또는 삽입 표시 숨겨진 경우-1입니다."
  overload: System.Windows.Forms.ListViewInsertionMark.Index*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListViewInsertionMark.NearestIndex(System.Drawing.Point)
  id: NearestIndex(System.Drawing.Point)
  parent: System.Windows.Forms.ListViewInsertionMark
  langs:
  - csharp
  name: NearestIndex(Point)
  nameWithType: ListViewInsertionMark.NearestIndex(Point)
  fullName: System.Windows.Forms.ListViewInsertionMark.NearestIndex(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 지점에 가장 가까운 항목의 인덱스를 검색 합니다."
  remarks: "이 메서드를 사용 하면 끌어서 놓기 작업을 수행 하는 경우 마우스 포인터에 가장 가까운 항목을 찾을 수 있습니다. 인덱스 값을 설정 하려면 반환 된 사용은 <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A>속성.</xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> 끌고 항목 마우스 포인터에 가장 가까운 항목을 사용 하는 경우이 메서드의 반환 값은-1입니다. 이 경우에 설정 된 <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A>속성이 값이 삽입 표시를 숨깁니다.</xref:System.Windows.Forms.ListViewInsertionMark.Index%2A>       이 메서드는 마우스 포인터가 있는 동안에 관계 없이 가장 가까운 항목을 찾아는 <xref:System.Windows.Forms.ListView.GetItemAt%2A?displayProperty=fullName>만 지정한 위치에 항목을 반환 하는 메서드 또는 `null` 경우 해당 위치에 있는 항목이 없습니다.</xref:System.Windows.Forms.ListView.GetItemAt%2A?displayProperty=fullName> <xref:System.Windows.Forms.ListView.GetItemAt%2A?displayProperty=fullName>메서드 반환 `null`, 마우스 포인터가 두 항목 사이 있으면 예를 들어.</xref:System.Windows.Forms.ListView.GetItemAt%2A?displayProperty=fullName> 이 항목의 위치를 끌어서 놓기 작업을 사용 하 여 NearestIndex 메서드를 항상 사용 해야 있습니다."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListView> insertion mark feature and implements drag-and-drop item reordering using the standard drag events. The position of the insertion mark is updated in a handler for the <xref:System.Windows.Forms.Control.DragOver?displayProperty=fullName> event. In this handler, the position of the mouse pointer is compared to the midpoint of the nearest item, and the result is used to determine whether the insertion mark appears to the left or the right of the item.  \n  \n For the complete example, see the <xref:System.Windows.Forms.ListViewInsertionMark> overview reference topic.  \n  \n [!code-cs[System.Windows.Forms.ListView.InsertionMark#3](~/add/codesnippet/csharp/m-system.windows.forms.l_23_1.cs)]\n [!code-vb[System.Windows.Forms.ListView.InsertionMark#3](~/add/codesnippet/visualbasic/m-system.windows.forms.l_23_1.vb)]\n [!code-cpp[System.Windows.Forms.ListView.InsertionMark#3](~/add/codesnippet/cpp/m-system.windows.forms.l_23_1.cpp)]"
  syntax:
    content: public int NearestIndex (System.Drawing.Point pt);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> 가장 가까운 항목을 찾습니다. 원본 위치를 나타내는입니다."
    return:
      type: System.Int32
      description: "지정 된 위치 또는 가장 가까운 항목을 끌고 현재 항목-1에 가장 가까운 항목의 인덱스입니다."
  overload: System.Windows.Forms.ListViewInsertionMark.NearestIndex*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: AppearsAfterItem
  nameWithType: ListViewInsertionMark.AppearsAfterItem
  fullName: System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.ListViewInsertionMark.Bounds
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: Bounds
  nameWithType: ListViewInsertionMark.Bounds
  fullName: System.Windows.Forms.ListViewInsertionMark.Bounds
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.ListViewInsertionMark.Color
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: Color
  nameWithType: ListViewInsertionMark.Color
  fullName: System.Windows.Forms.ListViewInsertionMark.Color
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Windows.Forms.ListViewInsertionMark.Index
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: Index
  nameWithType: ListViewInsertionMark.Index
  fullName: System.Windows.Forms.ListViewInsertionMark.Index
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.ListViewInsertionMark.NearestIndex(System.Drawing.Point)
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: NearestIndex(Point)
  nameWithType: ListViewInsertionMark.NearestIndex(Point)
  fullName: System.Windows.Forms.ListViewInsertionMark.NearestIndex(Point)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem*
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: AppearsAfterItem
  nameWithType: ListViewInsertionMark.AppearsAfterItem
- uid: System.Windows.Forms.ListViewInsertionMark.Bounds*
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: Bounds
  nameWithType: ListViewInsertionMark.Bounds
- uid: System.Windows.Forms.ListViewInsertionMark.Color*
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: Color
  nameWithType: ListViewInsertionMark.Color
- uid: System.Windows.Forms.ListViewInsertionMark.Index*
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: Index
  nameWithType: ListViewInsertionMark.Index
- uid: System.Windows.Forms.ListViewInsertionMark.NearestIndex*
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: NearestIndex
  nameWithType: ListViewInsertionMark.NearestIndex
