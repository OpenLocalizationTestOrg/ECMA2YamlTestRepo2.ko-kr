### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Button
  id: Button
  children:
  - System.Web.UI.WebControls.Button.#ctor
  - System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Button.CausesValidation
  - System.Web.UI.WebControls.Button.Click
  - System.Web.UI.WebControls.Button.Command
  - System.Web.UI.WebControls.Button.CommandArgument
  - System.Web.UI.WebControls.Button.CommandName
  - System.Web.UI.WebControls.Button.GetPostBackOptions
  - System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  - System.Web.UI.WebControls.Button.OnClientClick
  - System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  - System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.Button.PostBackUrl
  - System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.Button.Text
  - System.Web.UI.WebControls.Button.UseSubmitBehavior
  - System.Web.UI.WebControls.Button.ValidationGroup
  langs:
  - csharp
  name: Button
  nameWithType: Button
  fullName: System.Web.UI.WebControls.Button
  type: Class
  summary: "웹 페이지에 누름 단추 컨트롤을 표시 합니다."
  remarks: "이 항목의:- [소개](#Introduction)      -   [단추 포스트백 동작과 서버 이벤트](#ButtonPostbackBehaviorandServerEvents)      -   [클라이언트 스크립트에서 처리 단추 이벤트](#HandlingButtonEventsinClientScript)      -   [단추 컨트롤 및 유효성 검사](#ButtonControlsAndValidation)      -   [데이터 컨트롤의 단추](#ButtonsInDataControls)      -   [컨트롤에 데이터 바인딩](#BindingDataToTheControls)      -   [UpdatePanel 컨트롤 사용 하는 단추를 사용 하 여](#UsingButtonsWithUpdatePanelControls)      -   [선언적 구문](#DeclarativeSyntax) <a name=&quot;Introduction&quot;> </a> # # 소개 페이지를 서버에 게시할 수 있게 해 주는 웹 페이지에 누름 단추를 만들려면 단추 컨트롤을 사용 합니다.       컨트롤에서 포스트백에 응답 하기 위해 처리할 수 있는 서버 코드에서 이벤트를 트리거합니다. 또한 페이지를 게시 하거나 실행 하 고 다음 페이지의 제출을 취소할 수 있는 전에 처리할 수 있는 클라이언트 스크립트에서 이벤트를 발생 시킬 수 있기 합니다.      > [!NOTE] > ASP.NET 웹 페이지에는 각각 다르게 표시 단추 컨트롤의 몇 가지 종류에 포함 되어 있습니다. 누름 단추;으로 렌더링 하는 단추 컨트롤 <xref:System.Web.UI.WebControls.LinkButton>; 링크로 렌더링 되는 제어 및 <xref:System.Web.UI.WebControls.ImageButton>이미지; 형식으로 렌더링 되는 제어 및 <xref:System.Web.UI.WebControls.ImageMap>컨트롤 스폿이 사용자가 클릭할 수 있는 그래픽을 만들 수 있습니다.</xref:System.Web.UI.WebControls.ImageMap> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.WebControls.LinkButton> 기본적으로 모든 단추 컨트롤을 클릭 하면 페이지를 제출 합니다. 사용할 수도 있습니다는 <xref:System.Web.UI.HtmlControls.HtmlButton>및 <xref:System.Web.UI.HtmlControls.HtmlInputButton>서버 코드로 프로그래밍할 수 있는 컨트롤 페이지 단추를 만들 수 있습니다.</xref:System.Web.UI.HtmlControls.HtmlInputButton> </xref:System.Web.UI.HtmlControls.HtmlButton> HTML 및 웹 서버 컨트롤의 차이점에 대 한 세부 정보를 참조 하십시오. [ASP.NET 웹 서버 컨트롤 개요](~/add/includes/ajax-current-ext-md.md)합니다.       기본적으로는 단추 컨트롤은 전송 단추를 사용 합니다. 제출 단추는 명령 이름을 없습니다 (에 지정 된는 <xref:System.Web.UI.WebControls.Button.CommandName%2A>속성)는 단추와 서버에 웹 페이지를 다시 게시물 단순히와 관련 된.</xref:System.Web.UI.WebControls.Button.CommandName%2A> 에 대 한 이벤트 처리기를 제공할 수 있습니다는 <xref:System.Web.UI.WebControls.Button.Click>제출 단추를 클릭할 때 이벤트는 작업을 프로그래밍 방식으로 제어를 수행 합니다.</xref:System.Web.UI.WebControls.Button.Click>       명령 단추에는 단추와 같은 연관 되는 명령 이름을 `Sort`를 설정 하 여는 <xref:System.Web.UI.WebControls.Button.CommandName%2A>속성.</xref:System.Web.UI.WebControls.Button.CommandName%2A> 이 옵션을 사용 하면 여러 단추 웹 페이지에 컨트롤을 만들고 있는 단추 컨트롤을 클릭 하면 프로그래밍 방식으로 확인 수 있습니다. 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>같이 수행 하는 명령에 대 한 추가 정보를 제공 하는 명령 단추를 사용 하 여 속성 `Ascending`.</xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 에 대 한 이벤트 처리기를 제공할 수 있습니다는 <xref:System.Web.UI.WebControls.Button.Command>명령 단추를 클릭할 때 이벤트는 작업을 프로그래밍 방식으로 제어를 수행 합니다.</xref:System.Web.UI.WebControls.Button.Command>      <a name=&quot;ButtonPostbackBehaviorandServerEvents&quot;></a># # 단추 포스트백 동작 및 서버 이벤트 때 사용자가 모든 웹 서버 컨트롤 단추를 클릭 페이지는 서버에 전송 됩니다. 그러면 웹 페이지가 처리 되 고 보류 중인 이벤트 서버 기반 코드에서 발생 합니다. 모든 페이지와 컨트롤 처리가 완료 되 면 페이지 자체에 렌더링 브라우저 다시 합니다.       단추를 발생 시킬 수 자신의 <xref:System.Web.UI.WebControls.Button.Click>이벤트 또는 <xref:System.Web.UI.WebControls.Button.Command>서버 기반 코드를 사용 하 여 처리할 수 있는 이벤트입니다.</xref:System.Web.UI.WebControls.Button.Command> </xref:System.Web.UI.WebControls.Button.Click> 이 단추의 클라이언트 기반 웹 응용 프로그램 이벤트에서 기존 HTML 페이지와 다른 `onclick` 클라이언트에서 실행 되는 JavaScript를 사용 하 여 이벤트를 처리 합니다. 자세한 내용은 참조 [ASP.NET Web Forms 서버 컨트롤 이벤트 모델](~/add/includes/ajax-current-ext-md.md)합니다.       사용자가 단추 컨트롤을 클릭 하는 경우 페이지는 서버에 다시 게시 됩니다. 기본적으로 페이지가 자신에 게 다시 게시 될, 현재 페이지를 다른 페이지를 게시 하는 단추를 구성할 수 있습니다. 이 다중 페이지 폼을 만드는 데 유용할 수 있습니다. 자세한 내용은 참조 [ASP.NET Web Forms의 게시 페이지 간](~/add/includes/ajax-current-ext-md.md)합니다.      <a name=&quot;HandlingButtonEventsinClientScript&quot;></a># # 클라이언트 스크립트 단추 컨트롤에서 단추 이벤트를 처리 합니다. 서버 이벤트와 클라이언트 이벤트를 발생 시킬 수 있습니다. 서버 이벤트를 다시 게시 한 후에 발생 하 고 페이지에 대해 작성 하는 서버 쪽 코드에서 처리 됩니다. 클라이언트 이벤트 클라이언트 스크립트를 일반적으로 ECMAScript (JavaScript)에서 처리 되 고 페이지 전송 되기 전에 발생 합니다. ASP.NET 단추 컨트롤에서 클라이언트측 이벤트를 더하여 페이지를 제출 하기 전에 확인 대화 상자를 표시 하는 등 작업을 수행할 수 있으며 고 전송을 취소할 수도 키를 누릅니다. 자세한 내용은 참조 [ASP.NET 웹 페이지에서 클라이언트 스크립트](~/add/includes/ajax-current-ext-md.md) 및 [하는 방법: 클라이언트 스크립트에서 단추 웹 서버 컨트롤 이벤트에 응답](~/add/includes/ajax-current-ext-md.md)합니다.       또한 클라이언트 스크립트를 사용 하 여 HTTP POST 작업을 수행 하면) 하는 것 (대신 포스트백을 수행 하기를 Button 컨트롤을 수도 있습니다. 이 페이지에서 다른 요소에 연결 하는 등 포스트백을 프로그래밍 방식으로 조작 하려는 경우에 유용할 수 있습니다. Button 컨트롤을 설정할 수 있습니다 <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>속성을 `true` 클라이언트 스크립트를 사용 하려면 단추 컨트롤이 포스트백을 기반으로 합니다.</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>      <a name=&quot;ButtonControlsAndValidation&quot;></a># # 단추 컨트롤 및 유효성 검사 페이지에서 ASP.NET 유효성 검사 컨트롤에 포함 된 경우 기본, 검사를 수행 하려면 유효성 검사 컨트롤 단추 컨트롤을 클릭 하면 됩니다. 유효성 검사 컨트롤에 대 한 클라이언트 쪽 유효성 검사를 활성화, 유효성 검사에 실패 한 경우 페이지 전송 되지 않습니다.       다음 표에서 유효성 검사 프로세스를 보다 정확 하 게 제어할 수 있도록 단추 컨트롤에서 지 원하는 속성을 설명 합니다.      | 속성 | 설명 |   |--------------|-----------------|   | <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>| 단추를 클릭 하면도 수행 수행 하는지를 지정 유효성 검사를 수행 합니다.</xref:System.Web.UI.WebControls.Button.CausesValidation%2A> 이 속성을 설정 `false` 유효성 검사를 수행 하지 않으려면. |   | <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>| 페이지에서 유효성 검사기를 사용 하는 단추를 클릭할 때 호출 됩니다 지정할 수 있습니다.</xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> 단추를 클릭 하면 페이지에 유효성 검사기의 모든 호출 하는 없는 유효성 검사 그룹을 설정 하는 경우. |       자세한 내용은 참조 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](~/add/includes/ajax-current-ext-md.md)합니다.      <a name=&quot;ButtonsInDataControls&quot;></a># # 데이터 컨트롤 단추 웹 서버 컨트롤의 단추는 보통 데이터 컨트롤에서와 같은 사용 된 <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.GridView>, 및 <xref:System.Web.UI.WebControls.Repeater>목록 컨트롤.</xref:System.Web.UI.WebControls.Repeater> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataList> 이 경우 일반적으로 응답 하지 않으면 단추에 직접 이벤트를 클릭 합니다. 대신, 단추 데이터 컨트롤에 데이터 컨트롤에만 적용 되는 이벤트를 발생 시킵니다. 예를 들어는 <xref:System.Web.UI.WebControls.DataList>컨트롤 단추 발생 시킬 수 있습니다는 <xref:System.Web.UI.WebControls.DataList>컨트롤의 <xref:System.Web.UI.WebControls.DataList.ItemCommand>단추 컨트롤을 발생 시키는 대신 이벤트 <xref:System.Web.UI.WebControls.Button.Click>이벤트.</xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.DataList.ItemCommand> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList>       데이터 바인딩된 목록 컨트롤에는 많은 단추가 포함 될 수 있습니다, 때문에 있는 단추를 설정할 수 있습니다 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>속성을 통해이 이벤트의 일부로 전달 하는 값을 지정 합니다.</xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 클릭 한 단추를 보려면이 인수에 대해 테스트할 수 있습니다.      <a name=&quot;BindingDataToTheControls&quot;></a># #에 바인딩하거나 데이터를 컨트롤 있습니다 바인딩할 수 단추 웹 서버 컨트롤을 데이터 원본 속성 설정을 제어 하기 위해 동적으로 합니다. 예를 들어 단추를 설정할 수 있습니다 <xref:System.Web.UI.WebControls.Button.Text%2A>속성이 데이터 바인딩을 사용 하 여.</xref:System.Web.UI.WebControls.Button.Text%2A>      <a name=&quot;UsingButtonsWithUpdatePanelControls&quot;></a># # UpdatePanel 컨트롤 부분 페이지 렌더링 된 단추를 사용 하면 포스트백 없이 페이지의 일부를 새로 고칠 수 있습니다. <xref:System.Web.UI.UpdatePanel>컨트롤을 사용 하 여 해당 페이지의 부분 페이지 렌더링에 참여 하는 부분을 표시할 수 있습니다.</xref:System.Web.UI.UpdatePanel> 기본적으로 내 컨트롤의 동작과 <xref:System.Web.UI.UpdatePanel>단추 컨트롤을 포함 하는 컨트롤을 포스트백 대신 비동기 포스트백을 수행 하는 것입니다.</xref:System.Web.UI.UpdatePanel> 내용만 새로 고쳐진는 <xref:System.Web.UI.UpdatePanel>포스트백 있는에서 제어 합니다.</xref:System.Web.UI.UpdatePanel>       내에 있는 단추 컨트롤의 시나리오 외에 <xref:System.Web.UI.UpdatePanel>컨트롤을 사용 하 여 단추 컨트롤을 사용할 수 있습니다 <xref:System.Web.UI.UpdatePanel>다음과 같은 시나리오에서 컨트롤:-외부에 있는 단추 컨트롤 정의 <xref:System.Web.UI.UpdatePanel>으로 제어는 <xref:System.Web.UI.AsyncPostBackTrigger>해당 패널에 대 한 제어 합니다.</xref:System.Web.UI.AsyncPostBackTrigger> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> 단추를 클릭할 때 비동기 포스트백을 수행 하 고 패널의 내용을 새로 고칩니다.      -내에 있는 단추 컨트롤을 정의 합니다.는 <xref:System.Web.UI.UpdatePanel>으로 제어는 <xref:System.Web.UI.PostBackTrigger>패널.</xref:System.Web.UI.PostBackTrigger> </xref:System.Web.UI.UpdatePanel> 내는 것 포스트백을 수행 하는 단추를 클릭할 때는 <xref:System.Web.UI.UpdatePanel>컨트롤.</xref:System.Web.UI.UpdatePanel>       부분 페이지 렌더링 하 고 사용 하 여에 대 한 자세한 내용은 <xref:System.Web.UI.UpdatePanel>컨트롤 참조 [UpdatePanel 컨트롤 개요](~/add/includes/ajax-current-ext-md.md) 및 [부분 페이지 렌더링 개요](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.UpdatePanel>      <a name=&quot;DeclarativeSyntax&quot;></a># # 선언적 구문```   <asp:Button       AccessKey=&quot;string&quot;       BackColor=&quot;color name|#dddddd&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       CausesValidation=&quot;True|False&quot;       CommandArgument=&quot;string&quot;       CommandName=&quot;string&quot;       CssClass=&quot;string&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       ForeColor=&quot;color name|#dddddd&quot;       Height=&quot;size&quot;       ID=&quot;string&quot;       OnClick=&quot;Click event handler&quot;       OnClientClick=&quot;string&quot;       OnCommand=&quot;Command event handler&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       PostBackUrl=&quot;uri&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       Text=&quot;string&quot;       ToolTip=&quot;string&quot;       UseSubmitBehavior=&quot;True|False&quot;       ValidationGroup=&quot;string&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   />   ```"
  example:
  - "The following code example demonstrates how to create a Submit Button control that posts the Web page content back to the server.  \n  \n [!code-cs[Classic Button Example#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_42_1.aspx)]\n [!code-vb[Classic Button Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_42_1.aspx)]  \n  \n The following code example demonstrates how to create a Command Button control that sorts a list.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_42_2.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_42_2.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Click")]

      [System.ComponentModel.DefaultProperty("Text")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.SupportsEventValidation]

      [System.Web.UI.ToolboxData("<{0}:Button runat="server" Text="Button"></{0}:Button>")]

      public class Button : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  implements:
  - System.Web.UI.IPostBackEventHandler
  - System.Web.UI.WebControls.IButtonControl
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CreateControlStyle
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SaveViewState
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagKey
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.TrackViewState
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Button()
  nameWithType: Button.Button()
  fullName: System.Web.UI.WebControls.Button.Button()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> 클래스입니다."
  remarks: "이 생성자를 사용 하 여 만들고 <xref:System.Web.UI.WebControls.Button>클래스</xref:System.Web.UI.WebControls.Button> 의 새 인스턴스를 초기화 합니다."
  example:
  - "The following code example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.Button> class.  \n  \n [!code-cs[ButtonCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_106_1.aspx)]\n [!code-vb[ButtonCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_106_1.aspx)]"
  syntax:
    content: public Button ();
    parameters: []
  overload: System.Web.UI.WebControls.Button.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  id: AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: Button.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.AddAttributesToRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "특성을 추가 <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> 클라이언트에 렌더링 하기 위한 출력 스트림에 컨트롤입니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to override the AddAttributesToRender method in a custom server control, so that the <xref:System.Web.UI.WebControls.Button> text always displays in red.  \n  \n [!code-cs[CustomButtonAddAttributesToRender#1](~/add/codesnippet/csharp/e2a4848c-bb88-4816-9064-_1.aspx)]\n [!code-vb[CustomButtonAddAttributesToRender#1](~/add/codesnippet/visualbasic/e2a4848c-bb88-4816-9064-_1.aspx)]  \n[!code-cs[CustomButtonAddAttributesToRender#2](~/add/codesnippet/csharp/e2a4848c-bb88-4816-9064-_2.cs)]\n[!code-vb[CustomButtonAddAttributesToRender#2](~/add/codesnippet/visualbasic/e2a4848c-bb88-4816-9064-_2.vb)]"
  syntax:
    content: protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> 클라이언트에 렌더링할 출력 스트림이 들어 있는입니다."
  overload: System.Web.UI.WebControls.Button.AddAttributesToRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.CausesValidation
  id: CausesValidation
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: CausesValidation
  nameWithType: Button.CausesValidation
  fullName: System.Web.UI.WebControls.Button.CausesValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "유효성 검사를 수행할지 여부를 나타내는 값을 가져오거나 설정 합니다. 때는 <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> 컨트롤을 클릭 합니다."
  remarks: "기본적으로 페이지 유효성 검사가 수행 됩니다 때는 <xref:System.Web.UI.WebControls.Button>컨트롤을 클릭 합니다.</xref:System.Web.UI.WebControls.Button> 페이지 유효성 검사는 입력된 컨트롤과 모두 유효성 검사 컨트롤에 의해 지정 된 유효성 검사 규칙을 통과 하는 페이지에 유효성 검사 컨트롤 연관 있는지 여부를 결정 합니다.       클라이언트와 서버 모두에서 유효성 검사를 수행할지 여부를 확인 하거나 지정할 수 있습니다 때는 <xref:System.Web.UI.WebControls.Button>CausesValidation 속성을 사용 하 여 컨트롤을 클릭 합니다.</xref:System.Web.UI.WebControls.Button> 유효성 검사가 수행 되지를 방지 하려면 CausesValidation 속성을 설정 `false`합니다.      > [!NOTE] > CausesValidation 속성을 설정 해야 `false` 사용 하는 경우는 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>다른 페이지에 다시 게시 하는 속성.</xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 다른 페이지를 다시 게시할 때 유효성 검사를 명시적으로 확인 해야 합니다. 예를 들어의 설명 섹션을 참조 하십시오.는 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>속성.</xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>       이 속성은 보통 설정 `false` 에 대 한는 `reset` 또는 `clear` 유효성 검사가 단추를 클릭할 때 수행 되지 않도록 합니다.       CausesValidation 속성 값을로 설정 된 경우 `true`를 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>속성을 유효성 검사 그룹의 이름을 지정 하는 <xref:System.Web.UI.WebControls.Button>이 컨트롤로 유효성 검사.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>       테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the CausesValidation property to prevent page validation from occurring. Note that the <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> method activates each validation control independently.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ButtonControlCausesValidation#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_269_1.aspx)]\n [!code-cs[ButtonControlCausesValidation#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_269_1.aspx)]"
  syntax:
    content: public virtual bool CausesValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>유효성 검사가 수행 되는 경우는 <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> 제어 되 고, 그러지 않으면 클릭 한 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.Button.CausesValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.Click
  id: Click
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Click
  nameWithType: Button.Click
  fullName: System.Web.UI.WebControls.Button.Click
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 경우는 <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> 컨트롤을 클릭 합니다."
  remarks: "클릭 이벤트가 발생 하면는 <xref:System.Web.UI.WebControls.Button>컨트롤을 클릭 합니다.</xref:System.Web.UI.WebControls.Button> 명령 이름이 없는 연결 된 경우이 이벤트는 주로 사용 된 <xref:System.Web.UI.WebControls.Button>컨트롤 (예를 들어, 전송 단추).</xref:System.Web.UI.WebControls.Button>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the Click event in order to display a message on the Web page when the <xref:System.Web.UI.WebControls.Button> control is clicked.  \n  \n [!code-vb[ButtonClickText#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_21_1.aspx)]\n [!code-cs[ButtonClickText#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_21_1.aspx)]"
  syntax:
    content: public event EventHandler Click;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.Command
  id: Command
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Command
  nameWithType: Button.Command
  fullName: System.Web.UI.WebControls.Button.Command
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 경우는 <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> 컨트롤을 클릭 합니다."
  remarks: "명령 이벤트가 발생 하면는 <xref:System.Web.UI.WebControls.Button>컨트롤을 클릭 합니다.</xref:System.Web.UI.WebControls.Button> 이 이벤트는 일반적는 명령 이름을 같은 `Sort`, 연결 된는 <xref:System.Web.UI.WebControls.Button>컨트롤.</xref:System.Web.UI.WebControls.Button> 이렇게 하면 여러 개 만들 수 있습니다 <xref:System.Web.UI.WebControls.Button>웹 페이지 컨트롤과 프로그래밍 방식으로 결정 <xref:System.Web.UI.WebControls.Button>컨트롤을 클릭 합니다.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button>      > [!NOTE] > The 명령 이벤트의 형태로 컨트롤 계층 구조를 통해 발생 된 `BubbleEvent`합니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the Command event to sort a list when the <xref:System.Web.UI.WebControls.Button> control is clicked. This example specifies the event handler declaratively, using the <xref:System.Web.UI.WebControls.Button.OnClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_140_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_140_1.aspx)]  \n  \n The following code example demonstrates how to specify the event handler and programmatically add it to the event in the `Page_Load` method.  \n  \n [!code-cs[ButtonCommand#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_140_2.aspx)]\n [!code-vb[ButtonCommand#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_140_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.CommandEventHandler Command;
    return:
      type: System.Web.UI.WebControls.CommandEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.CommandArgument
  id: CommandArgument
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: CommandArgument
  nameWithType: Button.CommandArgument
  fullName: System.Web.UI.WebControls.Button.CommandArgument
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 전달 되는 선택적 매개 변수를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> 관련된 <xref:System.Web.UI.WebControls.Button.CommandName*>.</xref:System.Web.UI.WebControls.Button.CommandName*> 와 함께 이벤트"
  remarks: "CommandArgument 속성을 사용 하 여 보완 하는 매개 변수를 지정 하는 <xref:System.Web.UI.WebControls.Button.CommandName%2A>속성.</xref:System.Web.UI.WebControls.Button.CommandName%2A>      > [!NOTE] > 인 경우에 사용 되는 일반적으로 단독으로 CommandArgument 속성을 설정할 수 있지만 <xref:System.Web.UI.WebControls.Button.CommandName%2A>도 속성이 설정 되어 있습니다.</xref:System.Web.UI.WebControls.Button.CommandName%2A>       CommandArgument 속성 보완은 <xref:System.Web.UI.WebControls.Button.CommandName%2A>수행 하기 위한 명령에 대 한 추가 정보를 제공 하는 속성.</xref:System.Web.UI.WebControls.Button.CommandName%2A> 예를 들어, 설정 하는 경우는 <xref:System.Web.UI.WebControls.Button.CommandName%2A>속성을 `Sort` CommandArgument 속성을 `Ascending`를 오름차순으로 정렬 하는 명령을 지정 합니다.</xref:System.Web.UI.WebControls.Button.CommandName%2A>       테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the CommandArgument property to create a <xref:System.Web.UI.WebControls.Button> control that sorts a list in ascending order.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_977_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_977_1.aspx)]"
  syntax:
    content: public string CommandArgument { get; set; }
    return:
      type: System.String
      description: "에 전달 된 선택적 매개 변수는 <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> 관련된 <xref:System.Web.UI.WebControls.Button.CommandName*>.</xref:System.Web.UI.WebControls.Button.CommandName*> 와 함께 이벤트 기본값은 &lt;xref:System.String.Empty?displayProperty=fullName&gt;합니다."
  overload: System.Web.UI.WebControls.Button.CommandArgument*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.CommandName
  id: CommandName
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: CommandName
  nameWithType: Button.CommandName
  fullName: System.Web.UI.WebControls.Button.CommandName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "연결 된 명령 이름을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> 에 전달 되는 컨트롤의 <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> 이벤트입니다."
  remarks: "여러 개 <xref:System.Web.UI.WebControls.Button>CommandName 속성 각각에 연결 된 명령 이름을 지정 하거나 확인을 사용 하는 웹 페이지에 컨트롤 <xref:System.Web.UI.WebControls.Button>컨트롤.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button> 수행할 명령을 식별 하는 모든 문자열을 사용 하 여 CommandName 속성을 설정할 수 있습니다. 명령 이름을 프로그래밍 방식으로 확인 한 다음 수는 <xref:System.Web.UI.WebControls.Button>제어 하 고 적절 한 조치를 수행 합니다.</xref:System.Web.UI.WebControls.Button>       명령에 대 한 자세한 내용은 같은 `Ascending`를 사용 하 여 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>속성.</xref:System.Web.UI.WebControls.Button.CommandArgument%2A>       테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the CommandName property to create a <xref:System.Web.UI.WebControls.Button> control that sorts a list.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_955_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_955_1.aspx)]"
  syntax:
    content: public string CommandName { get; set; }
    return:
      type: System.String
      description: "명령 이름은 <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> 제어 합니다. 기본값은 &lt;xref:System.String.Empty?displayProperty=fullName&gt;합니다."
  overload: System.Web.UI.WebControls.Button.CommandName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.GetPostBackOptions
  id: GetPostBackOptions
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: GetPostBackOptions()
  nameWithType: Button.GetPostBackOptions()
  fullName: System.Web.UI.WebControls.Button.GetPostBackOptions()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "만듭니다는 <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> 을 나타내는 개체는 <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> 컨트롤의 포스트백 동작 합니다."
  remarks: "GetPostBackOptions 메서드 만듭니다는 <xref:System.Web.UI.PostBackOptions>을 나타내는 개체는 <xref:System.Web.UI.WebControls.Button>컨트롤의 포스트백 동작.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.PostBackOptions> <xref:System.Web.UI.PostBackOptions>에 일반적으로 전달 된 다음이 개체는 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=fullName>클라이언트 쪽 스크립트 함수에 대 한 참조를 가져올 호출에 사용 되는 메서드를 선택 하면 서버는 페이지에 다시 게시를.</xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=fullName> </xref:System.Web.UI.PostBackOptions>       <xref:System.Web.UI.WebControls.Button>클래스</xref:System.Web.UI.WebControls.Button> 를 확장할 때 주로 컨트롤 개발자가이 메서드는"
  syntax:
    content: protected virtual System.Web.UI.PostBackOptions GetPostBackOptions ();
    parameters: []
    return:
      type: System.Web.UI.PostBackOptions
      description: "A <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> 나타내는 <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> 컨트롤의 포스트백 동작 합니다."
  overload: System.Web.UI.WebControls.Button.GetPostBackOptions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  id: OnClick(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnClick(EventArgs)
  nameWithType: Button.OnClick(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnClick(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생는 <xref href=&quot;System.Web.UI.WebControls.Button.Click&quot;> </xref> 의 이벤트는 <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> 제어 합니다."
  remarks: "<xref:System.Web.UI.WebControls.Button.Click>이벤트가 발생할 때는 <xref:System.Web.UI.WebControls.Button>컨트롤을 클릭 합니다.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.Click> 명령 이름이 없는 연결 된 경우이 이벤트는 주로 사용 된 <xref:System.Web.UI.WebControls.Button>컨트롤 (예를 들어, 전송 단추).</xref:System.Web.UI.WebControls.Button>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnClick 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Click> event in order to display a simple message on the Web page.  \n  \n [!code-vb[ButtonClickText#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_232_1.aspx)]\n [!code-cs[ButtonClickText#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_232_1.aspx)]"
  syntax:
    content: protected virtual void OnClick (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "이벤트 데이터입니다."
  overload: System.Web.UI.WebControls.Button.OnClick*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnClientClick
  id: OnClientClick
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnClientClick
  nameWithType: Button.OnClientClick
  fullName: System.Web.UI.WebControls.Button.OnClientClick
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "때 실행 되는 클라이언트 쪽 스크립트를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> 컨트롤의 <xref href=&quot;System.Web.UI.WebControls.Button.Click&quot;> </xref> 이벤트가 발생 합니다."
  remarks: "OnClientClick 속성을 사용 하 여 때 실행 되는 추가 클라이언트 쪽 스크립트를 지정 하는 <xref:System.Web.UI.WebControls.Button>컨트롤의 <xref:System.Web.UI.WebControls.Button.Click>이벤트가 발생 합니다.</xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.Button> 이 속성은 렌더링에 대해 지정 하는 스크립트는 <xref:System.Web.UI.WebControls.Button>컨트롤의 `OnClick` 특성 컨트롤의 외에도 클라이언트 쪽 스크립트를 미리 정의 된</xref:System.Web.UI.WebControls.Button>       테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192871).  \n  \n The following code example demonstrates how to use the OnClientClick property to specify additional client-side script that executes when a <xref:System.Web.UI.WebControls.Button> control is clicked.  \n  \n [!code-cs[Button.OnClientClick#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1351_1.aspx)]\n [!code-vb[Button.OnClientClick#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1351_1.aspx)]"
  syntax:
    content: public virtual string OnClientClick { get; set; }
    return:
      type: System.String
      description: "클라이언트 쪽 스크립트 때 실행 되는 <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> 컨트롤의 <xref href=&quot;System.Web.UI.WebControls.Button.Click&quot;> </xref> 이벤트가 발생 합니다."
  overload: System.Web.UI.WebControls.Button.OnClientClick*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  id: OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnCommand(CommandEventArgs)
  nameWithType: Button.OnCommand(CommandEventArgs)
  fullName: System.Web.UI.WebControls.Button.OnCommand(CommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생는 <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> 의 이벤트는 <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> 제어 합니다."
  remarks: "<xref:System.Web.UI.WebControls.Button.Command>이벤트가 발생할 때는 <xref:System.Web.UI.WebControls.Button>컨트롤을 클릭 합니다.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.Command> 이 이벤트는 일반적는 명령 이름을 같은 `Sort`, 연결 된는 <xref:System.Web.UI.WebControls.Button>컨트롤.</xref:System.Web.UI.WebControls.Button> 이렇게 하면 여러 개 만들 수 있습니다 <xref:System.Web.UI.WebControls.Button>웹 페이지 컨트롤과 프로그래밍 방식으로 결정 <xref:System.Web.UI.WebControls.Button>컨트롤을 클릭 합니다.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button>      > [!NOTE] >는 <xref:System.Web.UI.WebControls.Button.Command>의 형태로 컨트롤 계층 구조를 통해 이벤트는 `BubbleEvent`.</xref:System.Web.UI.WebControls.Button.Command>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnCommand 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Command> event to sort a list when the <xref:System.Web.UI.WebControls.Button> control is clicked. This example specifies the event handler declaratively, using the <xref:System.Web.UI.WebControls.Button.OnClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/0fac6d1f-268b-4550-92d4-_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/0fac6d1f-268b-4550-92d4-_1.aspx)]  \n  \n The following code example demonstrates how to specify the event handler and programmatically add it to the event in the `Page_Load` method.  \n  \n [!code-cs[ButtonCommand#1](~/add/codesnippet/csharp/0fac6d1f-268b-4550-92d4-_2.aspx)]\n [!code-vb[ButtonCommand#1](~/add/codesnippet/visualbasic/0fac6d1f-268b-4550-92d4-_2.aspx)]"
  syntax:
    content: protected virtual void OnCommand (System.Web.UI.WebControls.CommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.CommandEventArgs
      description: "이벤트 데이터입니다."
  overload: System.Web.UI.WebControls.Button.OnCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: Button.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "클라이언트에서 렌더링 하기 전에 단추를 클릭 했는지 여부를 결정 합니다."
  remarks: "사용자 지정 클래스를 파생 하는 경우 OnPreRender 메서드 주로 컨트롤 개발자가 사용 되는 <xref:System.Web.UI.WebControls.Button>컨트롤.</xref:System.Web.UI.WebControls.Button>"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "이벤트 데이터입니다."
  overload: System.Web.UI.WebControls.Button.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.PostBackUrl
  id: PostBackUrl
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: PostBackUrl
  nameWithType: Button.PostBackUrl
  fullName: System.Web.UI.WebControls.Button.PostBackUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "게시할 때 페이지에서 현재 페이지의 URL을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> 컨트롤을 클릭 합니다."
  remarks: "The PostBackUrl property allows you to perform a cross-page post using the <xref:System.Web.UI.WebControls.Button> control.  \n  \n> [!NOTE]\n>  Only correctly specified paths work with this property. For example, relative paths (Test/default.aspx), absolute paths (https://localhost/WebApp/default.aspx) and virtual (~\\Test\\default.aspx) work correctly. Incorrectly formed paths such as \"/Test/default.aspx\" or \"\\Test\\default.aspx\" do not work. See [ASP.NET Web Project Paths](~/add/includes/ajax-current-ext-md.md) for a discussion on creating correct paths.  \n  \n Set the PostBackUrl property to the URL of the Web page to post to when the <xref:System.Web.UI.WebControls.Button> control is clicked. For example, specifying `Page2.aspx` causes the page that contains the <xref:System.Web.UI.WebControls.Button> control to post to `Page2.aspx`. If you do not specify a value for the PostBackUrl property, the page posts back to itself.  \n  \n> [!IMPORTANT]\n>  When performing a cross-page postback with controls with server-side validation, you should check that the page's <xref:System.Web.UI.Page.IsValid%2A> property is `true` before processing the postback. In the case of a cross-page postback, the page to check is the <xref:System.Web.UI.Page.PreviousPage%2A>. The following VB code shows how this is done:  \n  \n```  \nSub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load  \n        If Page.PreviousPage.IsValid Then  \n            ' Handle the post back  \n        Else  \n            Response.Write(\"Invalid\")  \n        End If  \nEnd Sub  \n```  \n  \n For more information on cross-page posting techniques, see [Cross-Page Posting in ASP.NET Web Forms](~/add/includes/ajax-current-ext-md.md).  \n  \n This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the PostBackUrl property to perform a cross-page post. When the user clicks the <xref:System.Web.UI.WebControls.Button> control, the page posts the value entered in the text box to the target page specified by the PostBackUrl property. To run this sample, you must also create a file for the target page in the same directory as this code example. The code for target page is provided in the next example.  \n  \n [!code-vb[Button.PostBackUrlProperty#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_834_1.aspx)]\n [!code-cs[Button.PostBackUrlProperty#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_834_1.aspx)]  \n  \n The following code example demonstrates how to use the <xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=fullName> property to access a value that was posted from another page using the PostBackUrl property. This page gets the string that was posted from the previous page and displays it to the user. If you attempt to run this code example directly, you will get an error because the value of the `text` field will be `null`. Instead, use this code to create a target page and place the file in the same directory as the code for the previous example. The name of the file must correspond to the value specified for the PostBackUrl property in the previous example. When you run the code for the previous example, this page will execute automatically when the cross page post occurs.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Button.PostBackUrlPage2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_834_2.aspx)]\n [!code-vb[Button.PostBackUrlPage2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_834_2.aspx)]"
  syntax:
    content: public virtual string PostBackUrl { get; set; }
    return:
      type: System.String
      description: "게시할 때 페이지에서 현재 웹 페이지의 URL은 <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> 컨트롤을 클릭 합니다. 기본값은 빈 문자열 (&quot;&quot;),이 경우에 다시 게시 하는 페이지가 있습니다."
  overload: System.Web.UI.WebControls.Button.PostBackUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: Button.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 이벤트를 발생 시키는 <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> 서버에 다시 게시 될 때 제어 합니다."
  remarks: "이 이벤트는 내부적으로 사용는 <xref:System.Web.UI.WebControls.Button>컨트롤이 발생 시키는 클릭할 때 한 <xref:System.Web.UI.WebControls.Button.Click>이벤트를 정의 하는 경우는 <xref:System.Web.UI.WebControls.Button.Command>이벤트.</xref:System.Web.UI.WebControls.Button.Command> </xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.Button>"
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "이벤트에 대 한 인수입니다."
  overload: System.Web.UI.WebControls.Button.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  id: RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: RenderContents(HtmlTextWriter)
  nameWithType: Button.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.RenderContents(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤의 내용이 지정된 된 작성기에 렌더링합니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to override the RenderContents method in a custom server control so that it always displays text following a custom <xref:System.Web.UI.WebControls.Button> server control.  \n  \n [!code-cs[CustomButtonRenderContents#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_178_1.aspx)]\n [!code-vb[CustomButtonRenderContents#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_178_1.aspx)]  \n[!code-cs[CustomButtonRenderContents#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_178_2.cs)]\n[!code-vb[CustomButtonRenderContents#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_178_2.vb)]"
  syntax:
    content: protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "A <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> HTML 클라이언트에서 콘텐츠를 렌더링 하기 위한 출력 스트림을 나타내는 개체입니다."
  overload: System.Web.UI.WebControls.Button.RenderContents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 이벤트를 발생 시키는 <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> 서버에 다시 게시 될 때 제어 합니다."
  remarks: "이 이벤트는 내부적으로 사용는 <xref:System.Web.UI.WebControls.Button>컨트롤이 발생 시키는 클릭할 때 한 <xref:System.Web.UI.WebControls.Button.Click>이벤트를 정의 하는 경우는 <xref:System.Web.UI.WebControls.Button.Command>이벤트.</xref:System.Web.UI.WebControls.Button.Command> </xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.Button>"
  example:
  - "The following code example demonstrates how to override the IPostBackEventHandler.RaisePostBackEvent method so that it always raises the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event in a custom <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[CustomButtonRaisePostBackEvent#2](~/add/codesnippet/visualbasic/78761a3c-3126-47e7-b48e-_1.vb)]\n [!code-cs[CustomButtonRaisePostBackEvent#2](~/add/codesnippet/csharp/78761a3c-3126-47e7-b48e-_1.cs)]"
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "이벤트에 대 한 인수입니다."
  overload: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.Text
  id: Text
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Text
  nameWithType: Button.Text
  fullName: System.Web.UI.WebControls.Button.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 표시 되는 텍스트 캡션을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> 제어 합니다."
  remarks: "Text 속성을 지정 하거나 확인에 표시할 캡션을 사용 하 여는 <xref:System.Web.UI.WebControls.Button>컨트롤.</xref:System.Web.UI.WebControls.Button>       이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute>및 [전역화 및 지역화](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Text property to specify the caption displayed in the <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[ButtonClickText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1294_1.aspx)]\n [!code-cs[ButtonClickText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1294_1.aspx)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "에 표시 되는 텍스트 캡션을 <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> 제어 합니다. 기본값은 &lt;xref:System.String.Empty?displayProperty=fullName&gt;합니다."
  overload: System.Web.UI.WebControls.Button.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.UseSubmitBehavior
  id: UseSubmitBehavior
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: UseSubmitBehavior
  nameWithType: Button.UseSubmitBehavior
  fullName: System.Web.UI.WebControls.Button.UseSubmitBehavior
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져오거나 여부는 <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> 컨트롤 클라이언트를 사용 하 여 브라우저의 전송 메커니즘 또는 asp 합니다."
  remarks: "UseSubmitBehavior 속성을 사용 하 여 지정할 수 있는지 여부를 <xref:System.Web.UI.WebControls.Button>컨트롤 클라이언트를 사용 하 여 브라우저의 전송 메커니즘 또는 asp.</xref:System.Web.UI.WebControls.Button> 기본적으로이 속성의 값은 `true`이며는 <xref:System.Web.UI.WebControls.Button>브라우저의을 사용 하도록 컨트롤 전송 메커니즘.</xref:System.Web.UI.WebControls.Button> 지정 하는 경우 `false`, ASP.NET 페이지 프레임 워크 클라이언트 쪽 스크립트 폼을 서버에 게시 하는 페이지를 추가 합니다.       UseSubmitBehavior 속성이 `false`, <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>클라이언트를 반환 하는 메서드 포스트백 이벤트가 <xref:System.Web.UI.WebControls.Button>.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> 컨트롤 개발자가 사용할 수 반환 된 문자열의 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>메서드는 클라이언트 쪽 함수 호출의 텍스트를 포함 하 고 클라이언트 쪽 이벤트 처리기에 삽입할 수 있습니다.</xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>       테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the UseSubmitBehavior property to specify the submit mechanism that a <xref:System.Web.UI.WebControls.Button> control uses when it posts back to the server. The UseSubmitBehavior property is set to `false`, causing the button to use the ASP.NET postback mechanism. If you view the source code for the rendered page using your browser's View Source command, you will see that client-side script has been added by the ASP.NET page framework to post the form to the server.  \n  \n [!code-vb[Button.UseSubmitBehavior#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_854_1.aspx)]\n [!code-cs[Button.UseSubmitBehavior#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_854_1.aspx)]"
  syntax:
    content: public virtual bool UseSubmitBehavior { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 클라이언트 브라우저의을 사용 하는 경우 전송 메커니즘 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.Button.UseSubmitBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.ValidationGroup
  id: ValidationGroup
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: Button.ValidationGroup
  fullName: System.Web.UI.WebControls.Button.ValidationGroup
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤 그룹을 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> 제어 서버에 다시 게시 될 때 유효성 검사가 수행 됩니다."
  remarks: "유효성 검사 그룹을 사용 하는 페이지에 유효성 검사 컨트롤 특정 범주에 할당할 수 있습니다. 각 유효성 검사 그룹 페이지에서 다른 유효성 검사 그룹 별개로 검사할 수 있습니다. ValidationGroup 속성을 사용 하 여 유효성 검사 그룹의 이름을 지정 하는 <xref:System.Web.UI.WebControls.Button>제어 서버에 다시 게시 될 때 유효성 검사가 수행 됩니다.</xref:System.Web.UI.WebControls.Button>       이 속성은 적용 경우에만의 값은 <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>속성이 `true`.</xref:System.Web.UI.WebControls.Button.CausesValidation%2A> 지정된 된 그룹의 일부인 경우 값을 지정 하면 ValidationGroup 속성에 대 한 유효성 검사 컨트롤에 때 유효성이 검사 되는 <xref:System.Web.UI.WebControls.Button>컨트롤이 서버에 다시 게시 합니다.</xref:System.Web.UI.WebControls.Button> 이 속성의 값을 지정 하지 않으면 및 <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>속성이 `true`, 페이지에서 유효성 검사 그룹에 할당 되지 않은 모든 유효성 검사 컨트롤에는 컨트롤이 서버에 다시 게시 될 때 유효성이 검사 됩니다.</xref:System.Web.UI.WebControls.Button.CausesValidation%2A>       테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the ValidationGroup property to specify the controls to validate when a <xref:System.Web.UI.WebControls.Button> control posts back to the server. The page contains three text boxes to capture data from the user and three <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls to ensure that the user does not leave a text box blank. The <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls for the first two text boxes are in the `PersonalInfoGroup` validation group and the <xref:System.Web.UI.WebControls.RequiredFieldValidator> control for the third text box is in the `LocationInfoGroup` validation group. When `Button1` is clicked, only the controls in validation group `PersonalInfoGroup` are validated. When `Button2` is clicked, only the control in validation group `LocationInfoGroup` is validated.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Button.ValidationGroup#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1224_1.aspx)]\n [!code-vb[Button.ValidationGroup#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1224_1.aspx)]"
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "되는 컨트롤 그룹의 <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> 제어 서버에 다시 게시 될 때 유효성 검사가 수행 됩니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.Button.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: System.Web.UI.WebControls.WebControl
- uid: System.Web.UI.WebControls.Button.#ctor
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Button()
  nameWithType: Button.Button()
  fullName: System.Web.UI.WebControls.Button.Button()
- uid: System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: Button.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.AddAttributesToRender(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.Button.CausesValidation
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CausesValidation
  nameWithType: Button.CausesValidation
  fullName: System.Web.UI.WebControls.Button.CausesValidation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.Button.Click
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Click
  nameWithType: Button.Click
  fullName: System.Web.UI.WebControls.Button.Click
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.Button.Command
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Command
  nameWithType: Button.Command
  fullName: System.Web.UI.WebControls.Button.Command
- uid: System.Web.UI.WebControls.CommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: CommandEventHandler
  nameWithType: CommandEventHandler
  fullName: System.Web.UI.WebControls.CommandEventHandler
- uid: System.Web.UI.WebControls.Button.CommandArgument
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandArgument
  nameWithType: Button.CommandArgument
  fullName: System.Web.UI.WebControls.Button.CommandArgument
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Button.CommandName
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandName
  nameWithType: Button.CommandName
  fullName: System.Web.UI.WebControls.Button.CommandName
- uid: System.Web.UI.WebControls.Button.GetPostBackOptions
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: GetPostBackOptions()
  nameWithType: Button.GetPostBackOptions()
  fullName: System.Web.UI.WebControls.Button.GetPostBackOptions()
- uid: System.Web.UI.PostBackOptions
  parent: System.Web.UI
  isExternal: false
  name: PostBackOptions
  nameWithType: PostBackOptions
  fullName: System.Web.UI.PostBackOptions
- uid: System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClick(EventArgs)
  nameWithType: Button.OnClick(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnClick(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.Button.OnClientClick
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClientClick
  nameWithType: Button.OnClientClick
  fullName: System.Web.UI.WebControls.Button.OnClientClick
- uid: System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnCommand(CommandEventArgs)
  nameWithType: Button.OnCommand(CommandEventArgs)
  fullName: System.Web.UI.WebControls.Button.OnCommand(CommandEventArgs)
- uid: System.Web.UI.WebControls.CommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: CommandEventArgs
  nameWithType: CommandEventArgs
  fullName: System.Web.UI.WebControls.CommandEventArgs
- uid: System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: Button.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.Button.PostBackUrl
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: PostBackUrl
  nameWithType: Button.PostBackUrl
  fullName: System.Web.UI.WebControls.Button.PostBackUrl
- uid: System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: Button.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RenderContents(HtmlTextWriter)
  nameWithType: Button.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.RenderContents(HtmlTextWriter)
- uid: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.Button.Text
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Text
  nameWithType: Button.Text
  fullName: System.Web.UI.WebControls.Button.Text
- uid: System.Web.UI.WebControls.Button.UseSubmitBehavior
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: UseSubmitBehavior
  nameWithType: Button.UseSubmitBehavior
  fullName: System.Web.UI.WebControls.Button.UseSubmitBehavior
- uid: System.Web.UI.WebControls.Button.ValidationGroup
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: ValidationGroup
  nameWithType: Button.ValidationGroup
  fullName: System.Web.UI.WebControls.Button.ValidationGroup
- uid: System.Web.UI.WebControls.Button.#ctor*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Button
  nameWithType: Button.Button
- uid: System.Web.UI.WebControls.Button.AddAttributesToRender*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: AddAttributesToRender
  nameWithType: Button.AddAttributesToRender
- uid: System.Web.UI.WebControls.Button.CausesValidation*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CausesValidation
  nameWithType: Button.CausesValidation
- uid: System.Web.UI.WebControls.Button.CommandArgument*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandArgument
  nameWithType: Button.CommandArgument
- uid: System.Web.UI.WebControls.Button.CommandName*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandName
  nameWithType: Button.CommandName
- uid: System.Web.UI.WebControls.Button.GetPostBackOptions*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: GetPostBackOptions
  nameWithType: Button.GetPostBackOptions
- uid: System.Web.UI.WebControls.Button.OnClick*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClick
  nameWithType: Button.OnClick
- uid: System.Web.UI.WebControls.Button.OnClientClick*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClientClick
  nameWithType: Button.OnClientClick
- uid: System.Web.UI.WebControls.Button.OnCommand*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnCommand
  nameWithType: Button.OnCommand
- uid: System.Web.UI.WebControls.Button.OnPreRender*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnPreRender
  nameWithType: Button.OnPreRender
- uid: System.Web.UI.WebControls.Button.PostBackUrl*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: PostBackUrl
  nameWithType: Button.PostBackUrl
- uid: System.Web.UI.WebControls.Button.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: Button.RaisePostBackEvent
- uid: System.Web.UI.WebControls.Button.RenderContents*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RenderContents
  nameWithType: Button.RenderContents
- uid: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.WebControls.Button.Text*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Text
  nameWithType: Button.Text
- uid: System.Web.UI.WebControls.Button.UseSubmitBehavior*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: UseSubmitBehavior
  nameWithType: Button.UseSubmitBehavior
- uid: System.Web.UI.WebControls.Button.ValidationGroup*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: ValidationGroup
  nameWithType: Button.ValidationGroup
