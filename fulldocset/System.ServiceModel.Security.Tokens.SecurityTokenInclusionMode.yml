### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode
  id: SecurityTokenInclusionMode
  children:
  - System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.AlwaysToInitiator
  - System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.AlwaysToRecipient
  - System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.Never
  - System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.Once
  langs:
  - csharp
  name: SecurityTokenInclusionMode
  nameWithType: SecurityTokenInclusionMode
  fullName: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode
  type: Enum
  summary: "목록 메시지에 대 한 토큰 포함 요구 사항입니다."
  remarks: "이 클래스의 인스턴스는 대부분의 메서드 매개 변수로 사용 되는 <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters>클래스 및 바인딩 요소와 인증서를 만들 때 파생된 된 클래스입니다.</xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters>"
  syntax:
    content: public enum SecurityTokenInclusionMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.AlwaysToInitiator
  id: AlwaysToInitiator
  parent: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode
  langs:
  - csharp
  name: AlwaysToInitiator
  nameWithType: SecurityTokenInclusionMode.AlwaysToInitiator
  fullName: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.AlwaysToInitiator
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "토큰은 항상 받는 있고 시작자에 게 메시지에 포함 됩니다."
  syntax:
    content: AlwaysToInitiator
    return:
      type: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.AlwaysToRecipient
  id: AlwaysToRecipient
  parent: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode
  langs:
  - csharp
  name: AlwaysToRecipient
  nameWithType: SecurityTokenInclusionMode.AlwaysToRecipient
  fullName: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.AlwaysToRecipient
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "토큰은 항상 개시자가 아닌 받는 사람에 게 한 메시지에 포함 됩니다."
  syntax:
    content: AlwaysToRecipient
    return:
      type: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.Never
  id: Never
  parent: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode
  langs:
  - csharp
  name: Never
  nameWithType: SecurityTokenInclusionMode.Never
  fullName: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.Never
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "토큰은 메시지에 포함 되지 않았지만 참조 되었습니다. 대역 외에서 받는 사람에 게 토큰을 알 수 있어야 합니다. 옵션은 즉시 작동 하지 않습니다. 이 작업에 대 한 사용자 지정 자격 증명을 포함 해야 합니다."
  syntax:
    content: Never
    return:
      type: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.Once
  id: Once
  parent: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode
  langs:
  - csharp
  name: Once
  nameWithType: SecurityTokenInclusionMode.Once
  fullName: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.Once
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "토큰은 한 번만 포함 합니다."
  remarks: "토큰은 개시자 로부터 수신자로 전송 되는 하나의 메시지에 포함 되어야 합니다. 토큰에 대 한 참조는 내부 참조 메커니즘을 사용할 수 있습니다. 받는 사람과 개시자 간에 보낸 이후의 관련된 메시지는 외부 참조 메커니즘을 사용 하 여 토큰을 참조할 수 있습니다."
  syntax:
    content: Once
    return:
      type: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.AlwaysToInitiator
  parent: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode
  isExternal: false
  name: AlwaysToInitiator
  nameWithType: SecurityTokenInclusionMode.AlwaysToInitiator
  fullName: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.AlwaysToInitiator
- uid: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode
  parent: System.ServiceModel.Security.Tokens
  isExternal: false
  name: SecurityTokenInclusionMode
  nameWithType: SecurityTokenInclusionMode
  fullName: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode
- uid: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.AlwaysToRecipient
  parent: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode
  isExternal: false
  name: AlwaysToRecipient
  nameWithType: SecurityTokenInclusionMode.AlwaysToRecipient
  fullName: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.AlwaysToRecipient
- uid: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.Never
  parent: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode
  isExternal: false
  name: Never
  nameWithType: SecurityTokenInclusionMode.Never
  fullName: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.Never
- uid: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.Once
  parent: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode
  isExternal: false
  name: Once
  nameWithType: SecurityTokenInclusionMode.Once
  fullName: System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode.Once
