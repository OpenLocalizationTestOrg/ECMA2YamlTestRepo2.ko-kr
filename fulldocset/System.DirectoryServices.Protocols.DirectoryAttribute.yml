### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.Protocols.DirectoryAttribute
  id: DirectoryAttribute
  children:
  - System.DirectoryServices.Protocols.DirectoryAttribute.#ctor
  - System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Byte[])
  - System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Object[])
  - System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.String)
  - System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Uri)
  - System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Byte[])
  - System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.String)
  - System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Uri)
  - System.DirectoryServices.Protocols.DirectoryAttribute.AddRange(System.Object[])
  - System.DirectoryServices.Protocols.DirectoryAttribute.Contains(System.Object)
  - System.DirectoryServices.Protocols.DirectoryAttribute.CopyTo(System.Object[],System.Int32)
  - System.DirectoryServices.Protocols.DirectoryAttribute.GetValues(System.Type)
  - System.DirectoryServices.Protocols.DirectoryAttribute.IndexOf(System.Object)
  - System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Byte[])
  - System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.String)
  - System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Uri)
  - System.DirectoryServices.Protocols.DirectoryAttribute.Item(System.Int32)
  - System.DirectoryServices.Protocols.DirectoryAttribute.Name
  - System.DirectoryServices.Protocols.DirectoryAttribute.OnValidate(System.Object)
  - System.DirectoryServices.Protocols.DirectoryAttribute.Remove(System.Object)
  langs:
  - csharp
  name: DirectoryAttribute
  nameWithType: DirectoryAttribute
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute
  type: Class
  summary: "DirectoryAttribute 클래스에는 특성 값에 액세스할 수 있습니다."
  syntax:
    content: 'public class DirectoryAttribute : System.Collections.CollectionBase'
  inheritance:
  - System.Object
  - System.Collections.CollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.CollectionBase.Capacity
  - System.Collections.CollectionBase.Clear
  - System.Collections.CollectionBase.Count
  - System.Collections.CollectionBase.GetEnumerator
  - System.Collections.CollectionBase.InnerList
  - System.Collections.CollectionBase.List
  - System.Collections.CollectionBase.OnClear
  - System.Collections.CollectionBase.OnClearComplete
  - System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.RemoveAt(System.Int32)
  - System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot
  - System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IsFixedSize
  - System.Collections.CollectionBase.System#Collections#IList#IsReadOnly
  - System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
  - System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: DirectoryAttribute()
  nameWithType: DirectoryAttribute.DirectoryAttribute()
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.DirectoryAttribute()
  type: Constructor
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "DirectoryAttribute 생성자의 인스턴스를 만듭니다.는 <xref href=&quot;System.DirectoryServices.Protocols.DirectoryAttribute&quot;> </xref> 클래스입니다."
  syntax:
    content: public DirectoryAttribute ();
    parameters: []
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Byte[])
  id: '#ctor(System.String,System.Byte[])'
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: DirectoryAttribute(String,Byte[])
  nameWithType: DirectoryAttribute.DirectoryAttribute(String,Byte[])
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.DirectoryAttribute(String,Byte[])
  type: Constructor
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "DirectoryAttribute 생성자의 인스턴스를 만듭니다.는 <xref href=&quot;System.DirectoryServices.Protocols.DirectoryAttribute&quot;> </xref> 클래스 지정 된 특성 이름 및 값을 사용 합니다."
  syntax:
    content: public DirectoryAttribute (string name, byte[] value);
    parameters:
    - id: name
      type: System.String
      description: "특성 이름입니다."
    - id: value
      type: System.Byte[]
      description: "특성 값입니다."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>또는 <code>value</code> 에 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Object[])
  id: '#ctor(System.String,System.Object[])'
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: DirectoryAttribute(String,Object[])
  nameWithType: DirectoryAttribute.DirectoryAttribute(String,Object[])
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.DirectoryAttribute(String,Object[])
  type: Constructor
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "DirectoryAttribute 생성자의 인스턴스를 만듭니다.는 <xref href=&quot;System.DirectoryServices.Protocols.DirectoryAttribute&quot;> </xref> 클래스 지정 된 특성 이름 및 값을 사용 합니다."
  syntax:
    content: public DirectoryAttribute (string name, object[] values);
    parameters:
    - id: name
      type: System.String
      description: "특성 이름입니다."
    - id: values
      type: System.Object[]
      description: "특성에 대 한 값의 배열입니다."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>또는 <code>value</code> 에 null 참조 (<code>Nothing</code> Visual basic에서)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "요소 <code> values </code> string, byte, 또는 형식의 Uri 않습니다."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: DirectoryAttribute(String,String)
  nameWithType: DirectoryAttribute.DirectoryAttribute(String,String)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.DirectoryAttribute(String,String)
  type: Constructor
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "DirectoryAttribute 생성자의 인스턴스를 만듭니다.는 <xref href=&quot;System.DirectoryServices.Protocols.DirectoryAttribute&quot;> </xref> 클래스 지정 된 특성 이름 및 값을 사용 합니다."
  syntax:
    content: public DirectoryAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "특성 이름입니다."
    - id: value
      type: System.String
      description: "특성 값입니다."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>또는 <code>value</code> 에 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Uri)
  id: '#ctor(System.String,System.Uri)'
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: DirectoryAttribute(String,Uri)
  nameWithType: DirectoryAttribute.DirectoryAttribute(String,Uri)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.DirectoryAttribute(String,Uri)
  type: Constructor
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "DirectoryAttribute 생성자의 인스턴스를 만듭니다.는 <xref href=&quot;System.DirectoryServices.Protocols.DirectoryAttribute&quot;> </xref> 클래스 지정 된 특성 이름 및 값을 사용 합니다."
  syntax:
    content: public DirectoryAttribute (string name, Uri value);
    parameters:
    - id: name
      type: System.String
      description: "특성 이름입니다."
    - id: value
      type: System.Uri
      description: "특성 값입니다."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>또는 <code>value</code> 에 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Byte[])
  id: Add(System.Byte[])
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Add(Byte[])
  nameWithType: DirectoryAttribute.Add(Byte[])
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Add(Byte[])
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "Add 메서드는이 특성에 지정된 된 값을 추가 합니다."
  syntax:
    content: public int Add (byte[] value);
    parameters:
    - id: value
      type: System.Byte[]
      description: "추가할 값입니다."
    return:
      type: System.Int32
      description: "값을 추가한 인덱스입니다."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>Value</code>에 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.String)
  id: Add(System.String)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Add(String)
  nameWithType: DirectoryAttribute.Add(String)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Add(String)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "Add 메서드는이 특성에 지정된 된 값을 추가 합니다."
  syntax:
    content: public int Add (string value);
    parameters:
    - id: value
      type: System.String
      description: "추가할 값입니다."
    return:
      type: System.Int32
      description: "값을 추가한 인덱스입니다."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>Value</code>에 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Uri)
  id: Add(System.Uri)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Add(Uri)
  nameWithType: DirectoryAttribute.Add(Uri)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Add(Uri)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "Add 메서드는이 특성에 지정된 된 값을 추가 합니다."
  syntax:
    content: public int Add (Uri value);
    parameters:
    - id: value
      type: System.Uri
      description: "추가할 값입니다."
    return:
      type: System.Int32
      description: "값을 추가한 인덱스입니다."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>Value</code>에 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.AddRange(System.Object[])
  id: AddRange(System.Object[])
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: AddRange(Object[])
  nameWithType: DirectoryAttribute.AddRange(Object[])
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.AddRange(Object[])
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "AddRange 메서드 특성 값의 배열을 추가합니다."
  syntax:
    content: public void AddRange (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "추가할 값입니다."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.AddRange*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>values</code>byte] [, string 또는 Uri 아닙니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>Values</code>에 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: DirectoryAttribute.Contains(Object)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Contains(Object)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "Contains 메서드 특성 지정된 된 값을 포함 하는 경우를 결정 합니다."
  syntax:
    content: public bool Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "검색할 값입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 특성 값을 포함 하는 경우 또는 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 그렇지 않은 경우."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.CopyTo(System.Object[],System.Int32)
  id: CopyTo(System.Object[],System.Int32)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: CopyTo(Object[],Int32)
  nameWithType: DirectoryAttribute.CopyTo(Object[],Int32)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.CopyTo(Object[],Int32)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "CopyTo 메서드는 대상 배열의 지정한 인덱스에서 시작 하는&1; 차원 배열에 전체 컬렉션을 복사 합니다."
  syntax:
    content: public void CopyTo (object[] array, int index);
    parameters:
    - id: array
      type: System.Object[]
      description: "복사한 요소의 대상인&1; 차원 배열에서 <xref href=&quot;System.DirectoryServices.Protocols.DirectoryAttribute&quot;> </xref> 개체입니다."
    - id: index
      type: System.Int32
      description: "부터 `array` 복사를 시작 합니다."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>에 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>가&0; 보다 작습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "이 예외는 다음 조건 중 하나에서 발생할 수 있습니다:- <code> array </code> 다차원- <code> index </code> 가의 길이 보다 크거나 같거나 <code> array </code> -소스에 있는 요소의 수 <xref href=&quot;System.DirectoryServices.Protocols.DirectoryControlCollection&quot;> </xref> 에서 사용 가능한 공간 보다 큰 <code> index </code> 대상의 끝에 <code> array </code>합니다."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "소스의 형식을 <xref href=&quot;System.DirectoryServices.Protocols.DirectoryControlCollection&quot;> </xref> 대상의 형식으로 자동 캐스팅할 수 없는 <code> array </code>합니다."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.GetValues(System.Type)
  id: GetValues(System.Type)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: GetValues(Type)
  nameWithType: DirectoryAttribute.GetValues(Type)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.GetValues(Type)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "GetValues 메서드는 지정 된 형식의 모든 값을 반환합니다."
  syntax:
    content: public object[] GetValues (Type valuesType);
    parameters:
    - id: valuesType
      type: System.Type
      description: "A <xref:System.Type>반환할 값의 형식을 지정 하는 개체입니다.</xref:System.Type>"
    return:
      type: System.Object[]
      description: "배열을 <xref:System.Object>값을 포함 하는 개체입니다.</xref:System.Object>"
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.GetValues*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "값을 변환할 수 없는 <code> valuesType </code>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>valuesType</code>문자열 또는 바이트 여야 합니다."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.IndexOf(System.Object)
  id: IndexOf(System.Object)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: IndexOf(Object)
  nameWithType: DirectoryAttribute.IndexOf(Object)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.IndexOf(Object)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "IndexOf 메서드는 지정 된 첫 번째 요소의&0;부터 시작 인덱스를 반환 합니다. <xref:System.Object>에 <xref href=&quot;System.DirectoryServices.Protocols.DirectoryAttribute&quot;> </xref> 컬렉션.</xref:System.Object>"
  syntax:
    content: public int IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>반환 되는 값에 대 한.</xref:System.Object>"
    return:
      type: System.Int32
      description: "지정 된 인덱스 값 <xref:System.Object>이거나, 없는 경우, 그렇지 않으면-1.</xref:System.Object>"
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Byte[])
  id: Insert(System.Int32,System.Byte[])
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Insert(Int32,Byte[])
  nameWithType: DirectoryAttribute.Insert(Int32,Byte[])
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(Int32,Byte[])
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "Insert 메서드를 지정 된 삽입 <code> value </code> 에 <xref href=&quot;System.DirectoryServices.Protocols.DirectoryAttribute&quot;> </xref> 컬렉션에서 지정한 <code> index </code>합니다."
  syntax:
    content: public void Insert (int index, byte[] value);
    parameters:
    - id: index
      type: System.Int32
      description: "인덱스는 <xref href=&quot;System.DirectoryServices.Protocols.DirectoryAttribute&quot;> </xref> 을 삽입할 컬렉션의 `value`합니다."
    - id: value
      type: System.Byte[]
      description: "삽입할 값입니다."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>에 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>가&0; 보다 작은 또는 <xref uid=&quot;langword_csharp_index&quot; name=&quot;index&quot; href=&quot;&quot;> </xref> 의 요소 수보다 큽니다는 <xref href=&quot;System.DirectoryServices.Protocols.DirectoryAttribute&quot;> </xref> 개체입니다."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.String)
  id: Insert(System.Int32,System.String)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Insert(Int32,String)
  nameWithType: DirectoryAttribute.Insert(Int32,String)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(Int32,String)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "Insert 메서드를 지정 된 삽입 <code> value </code> 에 <xref href=&quot;System.DirectoryServices.Protocols.DirectoryAttribute&quot;> </xref> 컬렉션에서 지정한 <code> index </code>합니다."
  syntax:
    content: public void Insert (int index, string value);
    parameters:
    - id: index
      type: System.Int32
      description: "인덱스는 <xref href=&quot;System.DirectoryServices.Protocols.DirectoryAttribute&quot;> </xref> 을 삽입할 컬렉션의 `value`합니다."
    - id: value
      type: System.String
      description: "삽입할 값입니다."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>에 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>가&0; 보다 작은 또는 <code>index</code> 의 요소 수보다 큽니다는 <xref href=&quot;System.DirectoryServices.Protocols.DirectoryAttribute&quot;> </xref> 개체입니다."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Uri)
  id: Insert(System.Int32,System.Uri)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Insert(Int32,Uri)
  nameWithType: DirectoryAttribute.Insert(Int32,Uri)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(Int32,Uri)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "Insert 메서드를 지정 된 삽입 <code> value </code> 에 <xref href=&quot;System.DirectoryServices.Protocols.DirectoryAttribute&quot;> </xref> 컬렉션에서 지정한 <code> index </code>합니다."
  syntax:
    content: public void Insert (int index, Uri value);
    parameters:
    - id: index
      type: System.Int32
      description: "인덱스는 <xref href=&quot;System.DirectoryServices.Protocols.DirectoryAttribute&quot;> </xref> 을 삽입할 컬렉션의 `value`합니다."
    - id: value
      type: System.Uri
      description: "삽입할 값입니다."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>에 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>가&0; 보다 작은 또는 <code>index</code> 의 요소 수보다 큽니다는 <xref href=&quot;System.DirectoryServices.Protocols.DirectoryAttribute&quot;> </xref> 개체입니다."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DirectoryAttribute.Item(Int32)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Item(Int32)
  type: Property
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "Item 속성 가져오거나는 <xref href=&quot;System.DirectoryServices.Protocols.DirectoryAttribute&quot;> </xref> 지정된 된 인덱스에는 개체입니다."
  remarks: "항목의 Get 메서드 항상 변환한 다음 문자열로; 값 개체를 반환 하려고 시도 합니다. 그렇지 않으면 바이트 배열을 반환 합니다. 사용 하 여 더 나은 성능을 얻으려면는 <xref:System.DirectoryServices.Protocols.DirectoryAttribute.GetValues%2A>메서드 반환 형식의 특성 값을 알고 있는 경우.</xref:System.DirectoryServices.Protocols.DirectoryAttribute.GetValues%2A>"
  syntax:
    content: public object this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "0부터 시작 인덱스 값에서 <xref href=&quot;System.DirectoryServices.Protocols.DirectoryAttribute&quot;> </xref> 개체를 찾을 수 있습니다."
    return:
      type: System.Object
      description: "<xref href=&quot;System.DirectoryServices.Protocols.DirectoryAttribute&quot;> </xref> 지정된 된 인덱스에는 개체입니다."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>설정 된 잘못 된 형식입니다. 올바른 유형은 byte, 문자열 또는 URI입니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>에 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Name
  id: Name
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Name
  nameWithType: DirectoryAttribute.Name
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Name
  type: Property
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "Name 속성에는 특성 이름을 포함합니다."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "특성 이름입니다."
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Name*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>에 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: DirectoryAttribute.OnValidate(Object)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.OnValidate(Object)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "OnValidate 메서드를 확인 하는 <code> value </code> 는 <xref href=&quot;System.DirectoryServices.Protocols.DirectoryAttribute&quot;> </xref> 개체입니다."
  remarks: "이 메서드는 값을 반환 하지 않습니다. 지정 된 개체가 null 이거나 잘못 된 경우 예외가 throw 되는 대신, <xref:System.DirectoryServices.Protocols.DirectoryAttribute>개체입니다.</xref:System.DirectoryServices.Protocols.DirectoryAttribute>"
  syntax:
    content: protected override void OnValidate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>평가할.</xref:System.Object>"
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.OnValidate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>에 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>string, byte, 또는 URI 여야 합니다."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: DirectoryAttribute.Remove(Object)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Remove(Object)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "Remove 메서드는 지정 된 첫 번째 제거 <code> value </code> 특성의 목록에서 합니다."
  syntax:
    content: public void Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>제거 하려면.</xref:System.Object>"
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>에 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  platform:
  - net462
references:
- uid: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.CollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: DirectoryAttribute()
  nameWithType: DirectoryAttribute.DirectoryAttribute()
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.DirectoryAttribute()
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Byte[])
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: DirectoryAttribute(String,Byte[])
  nameWithType: DirectoryAttribute.DirectoryAttribute(String,Byte[])
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.DirectoryAttribute(String,Byte[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Object[])
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: DirectoryAttribute(String,Object[])
  nameWithType: DirectoryAttribute.DirectoryAttribute(String,Object[])
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.DirectoryAttribute(String,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.String)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: DirectoryAttribute(String,String)
  nameWithType: DirectoryAttribute.DirectoryAttribute(String,String)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.DirectoryAttribute(String,String)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Uri)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: DirectoryAttribute(String,Uri)
  nameWithType: DirectoryAttribute.DirectoryAttribute(String,Uri)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.DirectoryAttribute(String,Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Byte[])
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Add(Byte[])
  nameWithType: DirectoryAttribute.Add(Byte[])
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Add(Byte[])
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.String)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Add(String)
  nameWithType: DirectoryAttribute.Add(String)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Add(String)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Uri)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Add(Uri)
  nameWithType: DirectoryAttribute.Add(Uri)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Add(Uri)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.AddRange(System.Object[])
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: AddRange(Object[])
  nameWithType: DirectoryAttribute.AddRange(Object[])
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.AddRange(Object[])
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Contains(System.Object)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Contains(Object)
  nameWithType: DirectoryAttribute.Contains(Object)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.CopyTo(System.Object[],System.Int32)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: CopyTo(Object[],Int32)
  nameWithType: DirectoryAttribute.CopyTo(Object[],Int32)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.CopyTo(Object[],Int32)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.GetValues(System.Type)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: GetValues(Type)
  nameWithType: DirectoryAttribute.GetValues(Type)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.GetValues(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.IndexOf(System.Object)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: IndexOf(Object)
  nameWithType: DirectoryAttribute.IndexOf(Object)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.IndexOf(Object)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Byte[])
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Insert(Int32,Byte[])
  nameWithType: DirectoryAttribute.Insert(Int32,Byte[])
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(Int32,Byte[])
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.String)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Insert(Int32,String)
  nameWithType: DirectoryAttribute.Insert(Int32,String)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(Int32,String)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Uri)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Insert(Int32,Uri)
  nameWithType: DirectoryAttribute.Insert(Int32,Uri)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(Int32,Uri)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Item(System.Int32)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Item(Int32)
  nameWithType: DirectoryAttribute.Item(Int32)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Item(Int32)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Name
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Name
  nameWithType: DirectoryAttribute.Name
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Name
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.OnValidate(System.Object)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: OnValidate(Object)
  nameWithType: DirectoryAttribute.OnValidate(Object)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.OnValidate(Object)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Remove(System.Object)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Remove(Object)
  nameWithType: DirectoryAttribute.Remove(Object)
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute.Remove(Object)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: DirectoryAttribute
  nameWithType: DirectoryAttribute.DirectoryAttribute
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Add*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Add
  nameWithType: DirectoryAttribute.Add
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.AddRange*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: AddRange
  nameWithType: DirectoryAttribute.AddRange
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Contains*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Contains
  nameWithType: DirectoryAttribute.Contains
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.CopyTo*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: CopyTo
  nameWithType: DirectoryAttribute.CopyTo
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.GetValues*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: GetValues
  nameWithType: DirectoryAttribute.GetValues
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.IndexOf*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: IndexOf
  nameWithType: DirectoryAttribute.IndexOf
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Insert*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Insert
  nameWithType: DirectoryAttribute.Insert
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Item*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Item
  nameWithType: DirectoryAttribute.Item
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Name*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Name
  nameWithType: DirectoryAttribute.Name
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.OnValidate*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: OnValidate
  nameWithType: DirectoryAttribute.OnValidate
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Remove*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Remove
  nameWithType: DirectoryAttribute.Remove
