### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.EventWaitHandleAuditRule
  id: EventWaitHandleAuditRule
  children:
  - System.Security.AccessControl.EventWaitHandleAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights
  langs:
  - csharp
  name: EventWaitHandleAuditRule
  nameWithType: EventWaitHandleAuditRule
  fullName: System.Security.AccessControl.EventWaitHandleAuditRule
  type: Class
  summary: "사용자 또는 그룹에 대 한 감사 액세스 권한 집합을 나타냅니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "EventWaitHandleAuditRule 클래스에는 명명 된 시스템 이벤트에 대 한 Windows 액세스 제어 보안을 관리 하기 위한.NET Framework가 제공 하는 클래스 집합 중 하나입니다. 이러한 클래스와의 관계는 기본 Windows 액세스 제어 구조에 대해 간략하게 <xref:System.Security.AccessControl.EventWaitHandleSecurity>.</xref:System.Security.AccessControl.EventWaitHandleSecurity> 을 참조 하십시오.      > [!NOTE] > 명명 된 시스템 이벤트 Windows 액세스 제어 보안은에 대해서만 의미가 있습니다. 경우는 <xref:System.Threading.EventWaitHandle>개체가 로컬 이벤트를 나타내는 액세스 제어는 관련이 없습니다.</xref:System.Threading.EventWaitHandle>       명명된 된 이벤트에 현재 적용 된 감사 규칙의 목록을 가져오려면를 사용 하 여는 <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName>가져올 메서드를 프로그램 <xref:System.Security.AccessControl.EventWaitHandleSecurity>개체를 사용 하 여 해당 <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A>메서드 EventWaitHandleAuditRule 개체의 컬렉션을 가져옵니다.</xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> </xref:System.Security.AccessControl.EventWaitHandleSecurity> </xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName>       EventWaitHandleAuditRule 개체 내부 임의 액세스 제어 목록 (DACL)에서 액세스 제어 항목으로 일대일로 매핑되지 않습니다. 집합에 도달할 때의 모든 감사 이벤트에 대 한 규칙, 집합은 현재 모든 액세스 제어 항목을 나타내는 데 필요한 규칙의 최소 수를 포함 합니다.      > [!NOTE] > 기본 액세스 제어 항목 변경 적용 하 고 규칙을 제거 합니다. 규칙의 정보는 액세스 제어 항목의 가장 작은 수를 유지 하기 위해 가능 하면 병합 됩니다. 따라서 규칙의 현재 목록의 읽을 때 하지 같습니다 정확 하 게 사용자가 추가한 모든 규칙의 목록입니다.       EventWaitHandleAuditRule 개체를 사용 하 여 사용자 또는 그룹에 대 한 감사 액세스 권한을 지정 합니다. 명명된 된 시스템 이벤트에는 규칙을 적용 하려면 사용 하 여는 <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName>가져올 메서드를는 <xref:System.Security.AccessControl.EventWaitHandleSecurity>개체입니다.</xref:System.Security.AccessControl.EventWaitHandleSecurity> </xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName> 수정 된 <xref:System.Security.AccessControl.EventWaitHandleSecurity>추가 규칙을 사용 하 여 해당 메서드를 사용 하 여 개체는 <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName>메서드를 보안 개체를 다시 연결 합니다.</xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName> </xref:System.Security.AccessControl.EventWaitHandleSecurity>      > [!IMPORTANT] > 변경 하면는 <xref:System.Security.AccessControl.EventWaitHandleSecurity>개체를 호출 하기 전에 명명된 된 이벤트의 액세스 수준을 영향을 주지 않습니다는 <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName>명명된 된 이벤트에 변경 된 보안 개체를 할당 하는 메서드.</xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName> </xref:System.Security.AccessControl.EventWaitHandleSecurity>       EventWaitHandleAuditRule 개체는 변경할 수 없습니다. 이벤트에 대 한 보안의 메서드를 사용 하 여 수정 되는 <xref:System.Security.AccessControl.EventWaitHandleSecurity>규칙을 추가 하거나 제거 하는 클래스, 이렇게 하면 기본 액세스 제어 항목 수정 됩니다.</xref:System.Security.AccessControl.EventWaitHandleSecurity>      > [!NOTE] > 동기화 개체에 대 한 보안은 Windows 98 또는 Windows Millennium Edition에 대 한 지원 되지 않습니다."
  syntax:
    content: 'public sealed class EventWaitHandleAuditRule : System.Security.AccessControl.AuditRule'
  inheritance:
  - System.Object
  - System.Security.AccessControl.AuthorizationRule
  - System.Security.AccessControl.AuditRule
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.AuditRule.AuditFlags
  - System.Security.AccessControl.AuthorizationRule.AccessMask
  - System.Security.AccessControl.AuthorizationRule.IdentityReference
  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  - System.Security.AccessControl.AuthorizationRule.IsInherited
  - System.Security.AccessControl.AuthorizationRule.PropagationFlags
  platform:
  - net462
- uid: System.Security.AccessControl.EventWaitHandleAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.EventWaitHandleAuditRule
  langs:
  - csharp
  name: EventWaitHandleAuditRule(IdentityReference,EventWaitHandleRights,AuditFlags)
  nameWithType: EventWaitHandleAuditRule.EventWaitHandleAuditRule(IdentityReference,EventWaitHandleRights,AuditFlags)
  fullName: System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleAuditRule(IdentityReference,EventWaitHandleRights,AuditFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.AccessControl.EventWaitHandleAuditRule&quot;> </xref> 성공, 실패 또는 둘 모두를 감사할 수 여부와 클래스를 감사할 권한을 감사 하려면 사용자 또는 그룹을 지정 합니다."
  remarks: "만들려는 <xref:System.Security.Principal.NTAccount>사용자 또는 그룹 이름을 나타내는 문자열에서 개체를 가져오려면는 <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=fullName>생성자.</xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=fullName> </xref:System.Security.Principal.NTAccount>"
  syntax:
    content: public EventWaitHandleAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.EventWaitHandleRights eventRights, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "사용자 또는 규칙 그룹에 적용 됩니다. 형식 이어야 합니다 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> 또는 형식으로 <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> 변환할 수 있는 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>합니다."
    - id: eventRights
      type: System.Security.AccessControl.EventWaitHandleRights
      description: "비트 조합 <xref href=&quot;System.Security.AccessControl.EventWaitHandleRights&quot;> </xref> 감사에 대 한 액세스의 종류를 지정 하는 값입니다."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "비트 조합 <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> 성공, 실패 또는 둘 다 감사 여부를 지정 하는 값입니다."
  overload: System.Security.AccessControl.EventWaitHandleAuditRule.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>eventRights</code>잘못 된 값을 지정합니다.       -또는- <code>flags</code> 잘못 된 값을 지정 합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는- <code>eventRights</code> 은&0;입니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>identity</code>형식이 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> 아니고과 같은 형식 <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> 변환할 수 있는 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights
  id: EventWaitHandleRights
  parent: System.Security.AccessControl.EventWaitHandleAuditRule
  langs:
  - csharp
  name: EventWaitHandleRights
  nameWithType: EventWaitHandleAuditRule.EventWaitHandleRights
  fullName: System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "감사 규칙의 영향을 받는 액세스 권한을 가져옵니다."
  remarks: "<xref:System.Security.AccessControl.EventWaitHandleAuditRule>개체는 변경할 수 없습니다.</xref:System.Security.AccessControl.EventWaitHandleAuditRule> 다른 사용자, 서로 다른 권한을 또는 서로 다른 조합을 나타내는 새 감사 규칙을 만들 수 있습니다 <xref:System.Security.AccessControl.AuditFlags>있지만 플래그는 기존 감사 규칙을 수정할 수 없습니다.</xref:System.Security.AccessControl.AuditFlags>"
  syntax:
    content: public System.Security.AccessControl.EventWaitHandleRights EventWaitHandleRights { get; }
    return:
      type: System.Security.AccessControl.EventWaitHandleRights
      description: "비트 조합 <xref href=&quot;System.Security.AccessControl.EventWaitHandleRights&quot;> </xref> 감사 규칙의 영향을 받는 권한을 나타내는 값입니다."
  overload: System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.AuditRule
  isExternal: false
  name: System.Security.AccessControl.AuditRule
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.AccessControl.EventWaitHandleAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.EventWaitHandleAuditRule
  isExternal: false
  name: EventWaitHandleAuditRule(IdentityReference,EventWaitHandleRights,AuditFlags)
  nameWithType: EventWaitHandleAuditRule.EventWaitHandleAuditRule(IdentityReference,EventWaitHandleRights,AuditFlags)
  fullName: System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleAuditRule(IdentityReference,EventWaitHandleRights,AuditFlags)
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.AccessControl.EventWaitHandleRights
  parent: System.Security.AccessControl
  isExternal: false
  name: EventWaitHandleRights
  nameWithType: EventWaitHandleRights
  fullName: System.Security.AccessControl.EventWaitHandleRights
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights
  parent: System.Security.AccessControl.EventWaitHandleAuditRule
  isExternal: false
  name: EventWaitHandleRights
  nameWithType: EventWaitHandleAuditRule.EventWaitHandleRights
  fullName: System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights
- uid: System.Security.AccessControl.EventWaitHandleAuditRule.#ctor*
  parent: System.Security.AccessControl.EventWaitHandleAuditRule
  isExternal: false
  name: EventWaitHandleAuditRule
  nameWithType: EventWaitHandleAuditRule.EventWaitHandleAuditRule
- uid: System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights*
  parent: System.Security.AccessControl.EventWaitHandleAuditRule
  isExternal: false
  name: EventWaitHandleRights
  nameWithType: EventWaitHandleAuditRule.EventWaitHandleRights
