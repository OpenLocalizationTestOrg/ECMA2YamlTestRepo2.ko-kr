### YamlMime:ManagedReference
items:
- uid: System.Security.RightsManagement.UnsignedPublishLicense
  id: UnsignedPublishLicense
  children:
  - System.Security.RightsManagement.UnsignedPublishLicense.#ctor
  - System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)
  - System.Security.RightsManagement.UnsignedPublishLicense.ContentId
  - System.Security.RightsManagement.UnsignedPublishLicense.Grants
  - System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  - System.Security.RightsManagement.UnsignedPublishLicense.Owner
  - System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName
  - System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri
  - System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)
  - System.Security.RightsManagement.UnsignedPublishLicense.ToString
  langs:
  - csharp
  name: UnsignedPublishLicense
  nameWithType: UnsignedPublishLicense
  fullName: System.Security.RightsManagement.UnsignedPublishLicense
  type: Class
  summary: "서명 되지 않은 권한 관리 나타냅니다 <xref href=&quot;System.Security.RightsManagement.PublishLicense&quot;> </xref> / unsigned <xref href=&quot;System.Security.RightsManagement.PublishLicense&quot;> </xref> 서식 파일입니다."
  remarks: "<xref:System.Security.RightsManagement.PublishLicense>권한, 사용자 및 기타 보안 관련 정보에 대 한 보안 데이터를 정의합니다.</xref:System.Security.RightsManagement.PublishLicense>  라이선스는 특정 컴퓨터에서 특정 사용자에서 지정 된 권한 관리 콘텐츠를 사용 하는 방법을 정의 합니다.       게시 프로세스는 UnsignedPublishLicense의 권한 정보를 정의 하는 문서 작성자을 시작 합니다.  다음으로, 제작 응용 프로그램은 UnsignedPublishLicense를 호출합니다. <xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A>서명 된 <xref:System.Security.RightsManagement.PublishLicense>.</xref:System.Security.RightsManagement.PublishLicense> 만들려는 메서드</xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A>  서명 된 <xref:System.Security.RightsManagement.PublishLicense> <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> <xref:System.Security.RightsManagement.UseLicense>.</xref:System.Security.RightsManagement.UseLicense> 최종 사용자가 요청 하기 위해</xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> 호출할 수 있는 최종 사용자 클라이언트 응용 프로그램에 제공 될 수 있습니다</xref:System.Security.RightsManagement.PublishLicense>  반환 된 <xref:System.Security.RightsManagement.UseLicense>클라이언트 응용 프로그램 사용자에 게 부여 된 권한을 행사할 수 있도록 합니다.</xref:System.Security.RightsManagement.UseLicense>       문서 작성자 UnsignedPublishLicense 클래스 하거나 만드는 데 사용할 수는 부호 있는 <xref:System.Security.RightsManagement.PublishLicense>, 또는을 빌드하고 serialize 한 <xref:System.Security.RightsManagement.PublishLicense>템플릿.</xref:System.Security.RightsManagement.PublishLicense> </xref:System.Security.RightsManagement.PublishLicense>       다른와 마찬가지로 <xref:System.Security.RightsManagement>형식의 UnsignedPublishLicense이 완전 신뢰 응용 프로그램에서 사용할 수만 있습니다.</xref:System.Security.RightsManagement>      <a name=&quot;xamlTextUsage_UnsignedPublishLicense&quot;></a># #이 유형은에서 일반적으로 사용 되지 않습니다 XAML 텍스트 사용 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]합니다."
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public class UnsignedPublishLicense
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor
  id: '#ctor'
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: UnsignedPublishLicense()
  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense()
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.UnsignedPublishLicense()
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.RightsManagement.UnsignedPublishLicense&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Security.RightsManagement.UnsignedPublishLicense>빈 및 서명 되지 않은 게시 라이선스를 만듭니다.</xref:System.Security.RightsManagement.UnsignedPublishLicense>"
  syntax:
    content: public UnsignedPublishLicense ();
    parameters: []
  overload: System.Security.RightsManagement.UnsignedPublishLicense.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: UnsignedPublishLicense(String)
  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense(String)
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.UnsignedPublishLicense(String)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.RightsManagement.UnsignedPublishLicense&quot;> </xref> 에서 지정 된 클래스 [!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)] publish license 템플릿이 있습니다."
  remarks: "`publishLicenseTemplate` [!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)] `<RANGETIME>` 또는 `<INTERVALTIME>` 요소는 무시 됩니다 때는 <xref:System.Security.RightsManagement.UnsignedPublishLicense>UnsignedPublishLicense(String) 생성자에 의해 만들어집니다.</xref:System.Security.RightsManagement.UnsignedPublishLicense>  게시 라이선스에 대 한 이러한 값을 지정 하는 <xref:System.Security.RightsManagement.ContentGrant>에 대 한 속성 <xref:System.Security.RightsManagement.ContentGrant.ValidFrom%2A>및 <xref:System.Security.RightsManagement.ContentGrant.ValidUntil%2A>명시적으로 설정 해야 합니다.</xref:System.Security.RightsManagement.ContentGrant.ValidUntil%2A> </xref:System.Security.RightsManagement.ContentGrant.ValidFrom%2A> </xref:System.Security.RightsManagement.ContentGrant>  명시적으로 설정 하는 방법을 보여 주는 다음 예제는 <xref:System.Security.RightsManagement.ContentGrant.ValidFrom%2A>및 <xref:System.Security.RightsManagement.ContentGrant.ValidUntil%2A>속성.</xref:System.Security.RightsManagement.ContentGrant.ValidUntil%2A> </xref:System.Security.RightsManagement.ContentGrant.ValidFrom%2A>       [!code-vb[UnsignedPubLicense_snip #RmPkgPubGrants](~/add/codesnippet/visualbasic/unsignedpublicense/window1.xaml.vb#rmpkgpubgrants)][!code-cs[UnsignedPubLicense_snip #RmPkgPubGrants  ](~/add/codesnippet/csharp/UnsignedPubLicense/Window1.xaml.cs#rmpkgpubgrants)]"
  example:
  - "The following example shows how to use this constructor.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubunpublic)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubunpublic)]"
  syntax:
    content: public UnsignedPublishLicense (string publishLicenseTemplate);
    parameters:
    - id: publishLicenseTemplate
      type: System.String
      description: "[!INCLUDE[TLA#tla_xrml](~/add/includes/ajax-current-ext-md.md)] 이 라이선스를 만드는 데 사용할 publish license 템플릿이 있습니다."
  overload: System.Security.RightsManagement.UnsignedPublishLicense.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ContentId
  id: ContentId
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: ContentId
  nameWithType: UnsignedPublishLicense.ContentId
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ContentId
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "게시자가 만든 콘텐츠 식별자를 가져오거나 설정 합니다."
  remarks: "게시자 <xref:System.Security.RightsManagement.UseLicense>및 <xref:System.Security.RightsManagement.PublishLicense>.</xref:System.Security.RightsManagement.PublishLicense> </xref:System.Security.RightsManagement.UseLicense> 권한 관리 콘텐츠를 식별 하는 ContentId를 만듭니다."
  syntax:
    content: public Guid ContentId { get; set; }
    return:
      type: System.Guid
      description: "게시자가 만든 권한 관리 콘텐츠 식별자입니다."
  overload: System.Security.RightsManagement.UnsignedPublishLicense.ContentId*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Grants
  id: Grants
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: Grants
  nameWithType: UnsignedPublishLicense.Grants
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Grants
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "지정 된 사용자 권한 컬렉션을 가져옵니다."
  syntax:
    content: public System.Collections.Generic.ICollection<System.Security.RightsManagement.ContentGrant> Grants { get; }
    return:
      type: System.Collections.Generic.ICollection{System.Security.RightsManagement.ContentGrant}
      description: "이 라이선스에 제공 되는 지정 된 사용자 권한의 컬렉션입니다."
  overload: System.Security.RightsManagement.UnsignedPublishLicense.Grants*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  id: LocalizedNameDescriptionDictionary
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: LocalizedNameDescriptionDictionary
  nameWithType: UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "이름 / 설명 쌍의 컬렉션을 가져옵니다."
  syntax:
    content: public System.Collections.Generic.IDictionary<int,System.Security.RightsManagement.LocalizedNameDescriptionPair> LocalizedNameDescriptionDictionary { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.Int32,System.Security.RightsManagement.LocalizedNameDescriptionPair}
      description: "이름 / 설명 쌍의 컬렉션입니다."
  overload: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Owner
  id: Owner
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: Owner
  nameWithType: UnsignedPublishLicense.Owner
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Owner
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "콘텐츠 소유자를 가져오거나 설정 합니다."
  remarks: "소유자 <xref:System.Security.RightsManagement.PublishLicense>.</xref:System.Security.RightsManagement.PublishLicense> 소유 하는 사용자 지정       소유자가 발급 라이선스의 소유자 노드와 연결 된도 [!INCLUDE[TLA#tla_xrml](~/add/includes/ajax-current-ext-md.md)]합니다."
  example:
  - "The following example shows how to use this property to assign a <xref:System.Security.RightsManagement.ContentUser>.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubunpublic)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubunpublic)]"
  syntax:
    content: public System.Security.RightsManagement.ContentUser Owner { get; set; }
    return:
      type: System.Security.RightsManagement.ContentUser
      description: "게시 된 콘텐츠를 소유 하는 사용자입니다."
  overload: System.Security.RightsManagement.UnsignedPublishLicense.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName
  id: ReferralInfoName
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: ReferralInfoName
  nameWithType: UnsignedPublishLicense.ReferralInfoName
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "작성자 또는 콘텐츠 게시자에 대 한 연락처 이름을 가져오거나 설정 합니다."
  remarks: "<a name=&quot;xamlTextUsage_ReferralInfoName&quot;></a># #이 유형의 XAML 텍스트 사용 멤버에 일반적으로 사용 되지 않는 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]합니다."
  syntax:
    content: public string ReferralInfoName { get; set; }
    return:
      type: System.String
      description: "작성자 또는 콘텐츠 게시자에 대 한 연락처 이름입니다."
  overload: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri
  id: ReferralInfoUri
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: ReferralInfoUri
  nameWithType: UnsignedPublishLicense.ReferralInfoUri
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "연락처를 가져오거나 설정 합니다. [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] 작성자 또는 콘텐츠 게시자에 대 한 합니다."
  remarks: "<a name=&quot;xamlTextUsage_ReferralInfoUri&quot;></a># #이 유형의 XAML 텍스트 사용 멤버에 일반적으로 사용 되지 않는 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]합니다."
  syntax:
    content: public Uri ReferralInfoUri { get; set; }
    return:
      type: System.Uri
      description: "연락처 [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] 작성자 또는 콘텐츠 게시자에 대 한 합니다."
  overload: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)
  id: Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: Sign(SecureEnvironment,UseLicense)
  nameWithType: UnsignedPublishLicense.Sign(SecureEnvironment,UseLicense)
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Sign(SecureEnvironment,UseLicense)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "서명 된 만듭니다 <xref href=&quot;System.Security.RightsManagement.PublishLicense&quot;> </xref> 반환는 <xref href=&quot;System.Security.RightsManagement.UseLicense&quot;> </xref> 문서 작성자에 대 한 합니다."
  remarks: ''
  example:
  - "The following example shows how to use this class to initialize a <xref:System.Security.RightsManagement.PublishLicense>.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubencrypt)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubencrypt)]"
  syntax:
    content: public System.Security.RightsManagement.PublishLicense Sign (System.Security.RightsManagement.SecureEnvironment secureEnvironment, out System.Security.RightsManagement.UseLicense authorUseLicense);
    parameters:
    - id: secureEnvironment
      type: System.Security.RightsManagement.SecureEnvironment
      description: "라이선스 정품 인증 및 바인딩에 대 한 안전한 환경입니다."
    - id: authorUseLicense
      type: System.Security.RightsManagement.UseLicense
      description: "반환 된 <xref href=&quot;System.Security.RightsManagement.UseLicense&quot;> </xref> 문서 작성자에 대 한 합니다."
    return:
      type: System.Security.RightsManagement.PublishLicense
      description: "서명 <xref href=&quot;System.Security.RightsManagement.PublishLicense&quot;> </xref> 이 서명 하 여 만들어진 <xref href=&quot;System.Security.RightsManagement.UnsignedPublishLicense&quot;> </xref>합니다."
  overload: System.Security.RightsManagement.UnsignedPublishLicense.Sign*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ToString
  id: ToString
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: ToString()
  nameWithType: UnsignedPublishLicense.ToString()
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ToString()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "만든 직렬화 된 템플릿을 반환 된 [!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)] 의 <xref href=&quot;System.Security.RightsManagement.UnsignedPublishLicense&quot;> </xref>합니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "만든 직렬화 된 템플릿을 [!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)] 의 <xref href=&quot;System.Security.RightsManagement.UnsignedPublishLicense&quot;> </xref>합니다."
  overload: System.Security.RightsManagement.UnsignedPublishLicense.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: UnsignedPublishLicense()
  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense()
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.UnsignedPublishLicense()
- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: UnsignedPublishLicense(String)
  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense(String)
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.UnsignedPublishLicense(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ContentId
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ContentId
  nameWithType: UnsignedPublishLicense.ContentId
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ContentId
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Grants
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Grants
  nameWithType: UnsignedPublishLicense.Grants
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Grants
- uid: System.Collections.Generic.ICollection{System.Security.RightsManagement.ContentGrant}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<ContentGrant>
  nameWithType: ICollection<ContentGrant>
  fullName: System.Collections.Generic.ICollection<System.Security.RightsManagement.ContentGrant>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Security.RightsManagement.ContentGrant>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.RightsManagement.ContentGrant
    name: ContentGrant
    nameWithType: ContentGrant
    fullName: ContentGrant
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: LocalizedNameDescriptionDictionary
  nameWithType: UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary
- uid: System.Collections.Generic.IDictionary{System.Int32,System.Security.RightsManagement.LocalizedNameDescriptionPair}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<Int32,LocalizedNameDescriptionPair>
  nameWithType: IDictionary<Int32,LocalizedNameDescriptionPair>
  fullName: System.Collections.Generic.IDictionary<System.Int32,System.Security.RightsManagement.LocalizedNameDescriptionPair>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.Int32,System.Security.RightsManagement.LocalizedNameDescriptionPair>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Security.RightsManagement.LocalizedNameDescriptionPair
    name: LocalizedNameDescriptionPair
    nameWithType: LocalizedNameDescriptionPair
    fullName: LocalizedNameDescriptionPair
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Owner
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Owner
  nameWithType: UnsignedPublishLicense.Owner
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Owner
- uid: System.Security.RightsManagement.ContentUser
  parent: System.Security.RightsManagement
  isExternal: false
  name: ContentUser
  nameWithType: ContentUser
  fullName: System.Security.RightsManagement.ContentUser
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ReferralInfoName
  nameWithType: UnsignedPublishLicense.ReferralInfoName
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ReferralInfoUri
  nameWithType: UnsignedPublishLicense.ReferralInfoUri
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Sign(SecureEnvironment,UseLicense)
  nameWithType: UnsignedPublishLicense.Sign(SecureEnvironment,UseLicense)
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Sign(SecureEnvironment,UseLicense)
- uid: System.Security.RightsManagement.PublishLicense
  parent: System.Security.RightsManagement
  isExternal: false
  name: PublishLicense
  nameWithType: PublishLicense
  fullName: System.Security.RightsManagement.PublishLicense
- uid: System.Security.RightsManagement.SecureEnvironment
  parent: System.Security.RightsManagement
  isExternal: false
  name: SecureEnvironment
  nameWithType: SecureEnvironment
  fullName: System.Security.RightsManagement.SecureEnvironment
- uid: System.Security.RightsManagement.UseLicense
  parent: System.Security.RightsManagement
  isExternal: false
  name: UseLicense
  nameWithType: UseLicense
  fullName: System.Security.RightsManagement.UseLicense
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ToString
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ToString()
  nameWithType: UnsignedPublishLicense.ToString()
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ToString()
- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: UnsignedPublishLicense
  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ContentId*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ContentId
  nameWithType: UnsignedPublishLicense.ContentId
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Grants*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Grants
  nameWithType: UnsignedPublishLicense.Grants
- uid: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: LocalizedNameDescriptionDictionary
  nameWithType: UnsignedPublishLicense.LocalizedNameDescriptionDictionary
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Owner*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Owner
  nameWithType: UnsignedPublishLicense.Owner
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ReferralInfoName
  nameWithType: UnsignedPublishLicense.ReferralInfoName
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ReferralInfoUri
  nameWithType: UnsignedPublishLicense.ReferralInfoUri
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Sign*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Sign
  nameWithType: UnsignedPublishLicense.Sign
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ToString*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ToString
  nameWithType: UnsignedPublishLicense.ToString
