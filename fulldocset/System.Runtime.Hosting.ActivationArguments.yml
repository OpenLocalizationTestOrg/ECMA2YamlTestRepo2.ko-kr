### YamlMime:ManagedReference
items:
- uid: System.Runtime.Hosting.ActivationArguments
  id: ActivationArguments
  children:
  - System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext)
  - System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity)
  - System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext,System.String[])
  - System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity,System.String[])
  - System.Runtime.Hosting.ActivationArguments.ActivationContext
  - System.Runtime.Hosting.ActivationArguments.ActivationData
  - System.Runtime.Hosting.ActivationArguments.ApplicationIdentity
  - System.Runtime.Hosting.ActivationArguments.Clone
  langs:
  - csharp
  name: ActivationArguments
  nameWithType: ActivationArguments
  fullName: System.Runtime.Hosting.ActivationArguments
  type: Class
  summary: "응용 프로그램의 매니페스트 기반 활성화에 대 한 데이터를 제공합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "ActivationArguments 클래스는 <xref:System.AppDomainSetup>클래스</xref:System.AppDomainSetup> 에서 사용       매니페스트 기반 활성화 모델 정품 인증에 대 한 어셈블리 보다는 응용 프로그램 매니페스트를 사용합니다. 매니페스트는 응용 프로그램, 종속성, 보안 요구 사항 및 기타 완벽 하 게 설명 합니다. 매니페스트는 모델에는 웹 응용 프로그램에 대 한 특히 어셈블리 기반 정품 인증 모델에 대해 여러 이점이 있습니다. 예를 들어 매니페스트는 응용 프로그램에서 코드를 다운로드 하기 전에 실행할 수 있도록 여부를 결정할 수 있는 응용 프로그램의 보안 요구 사항을 포함 합니다. 또한 매니페스트는 응용 프로그램 종속성에 대 한 정보를 포함합니다."
  example:
  - "The following code example shows how to obtain the current ActivationArguments object from the <xref:System.AppDomainSetup> for the <xref:System.AppDomain> of a manifest-based application.  \n  \n [!code-vb[System.Runtime.Hosting.ApplicationActivator#1](~/add/codesnippet/visualbasic/t-system.runtime.hosting_1_1.vb)]\n [!code-cs[System.Runtime.Hosting.ApplicationActivator#1](~/add/codesnippet/csharp/t-system.runtime.hosting_1_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ActivationArguments : System.Security.Policy.EvidenceBase
  inheritance:
  - System.Object
  - System.Security.Policy.EvidenceBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext)
  id: '#ctor(System.ActivationContext)'
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ActivationArguments(ActivationContext)
  nameWithType: ActivationArguments.ActivationArguments(ActivationContext)
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ActivationContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;> </xref> 지정된 된 활성화 컨텍스트를 사용 하 여 클래스입니다."
  remarks: "<xref:System.ActivationContext>가 나타내는 개체는 `activationData` 매개 변수에 포함 된 <xref:System.ApplicationIdentity>및 매니페스트 기반 활성화에 대 한 컨텍스트 정보입니다.</xref:System.ApplicationIdentity> </xref:System.ActivationContext>"
  syntax:
    content: public ActivationArguments (ActivationContext activationData);
    parameters:
    - id: activationData
      type: System.ActivationContext
      description: "매니페스트 기반 활성화 응용 프로그램을 식별 하는 개체입니다."
  overload: System.Runtime.Hosting.ActivationArguments.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>activationData</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity)
  id: '#ctor(System.ApplicationIdentity)'
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ActivationArguments(ApplicationIdentity)
  nameWithType: ActivationArguments.ActivationArguments(ApplicationIdentity)
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ApplicationIdentity)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;> </xref> 지정 된 응용 프로그램 id 사용 하 여 클래스입니다."
  remarks: "응용 프로그램 id를 새 도메인에서 활성화할 수 매니페스트 기반 응용 프로그램을 고유 하 게 식별 합니다."
  syntax:
    content: public ActivationArguments (ApplicationIdentity applicationIdentity);
    parameters:
    - id: applicationIdentity
      type: System.ApplicationIdentity
      description: "매니페스트 기반 활성화 응용 프로그램을 식별 하는 개체입니다."
  overload: System.Runtime.Hosting.ActivationArguments.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>applicationIdentity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext,System.String[])
  id: '#ctor(System.ActivationContext,System.String[])'
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ActivationArguments(ActivationContext,String[])
  nameWithType: ActivationArguments.ActivationArguments(ActivationContext,String[])
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ActivationContext,String[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;> </xref> 클래스 지정 된 활성화 컨텍스트 및 정품 인증 데이터를 사용 합니다."
  remarks: "<xref:System.ActivationContext>가 나타내는 개체는 `activationContext` 매개 변수에 포함 된 <xref:System.ApplicationIdentity>및 매니페스트 기반 활성화에 대 한 컨텍스트 정보입니다.</xref:System.ApplicationIdentity> </xref:System.ActivationContext> 정품 인증 데이터 URL의 쿼리 문자열 부분은 같은 정보로 구성 됩니다."
  syntax:
    content: public ActivationArguments (ActivationContext activationContext, string[] activationData);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: "매니페스트 기반 활성화 응용 프로그램을 식별 하는 개체입니다."
    - id: activationData
      type: System.String[]
      description: "호스트에서 제공한 정품 인증 데이터를 포함 하는 문자열의 배열입니다."
  overload: System.Runtime.Hosting.ActivationArguments.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>activationContext</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity,System.String[])
  id: '#ctor(System.ApplicationIdentity,System.String[])'
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ActivationArguments(ApplicationIdentity,String[])
  nameWithType: ActivationArguments.ActivationArguments(ApplicationIdentity,String[])
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ApplicationIdentity,String[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;> </xref> 지정 된 응용 프로그램 id 및 정품 인증 데이터를 사용 하 여 클래스입니다."
  remarks: "응용 프로그램 id를 새 도메인에서 활성화할 수 매니페스트 기반 응용 프로그램을 고유 하 게 식별 합니다. 정품 인증 데이터 URL의 쿼리 문자열 부분은 같은 정보로 구성 됩니다."
  syntax:
    content: public ActivationArguments (ApplicationIdentity applicationIdentity, string[] activationData);
    parameters:
    - id: applicationIdentity
      type: System.ApplicationIdentity
      description: "매니페스트 기반 활성화 응용 프로그램을 식별 하는 개체입니다."
    - id: activationData
      type: System.String[]
      description: "호스트에서 제공한 정품 인증 데이터를 포함 하는 문자열의 배열입니다."
  overload: System.Runtime.Hosting.ActivationArguments.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>applicationIdentity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.ActivationContext
  id: ActivationContext
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ActivationContext
  nameWithType: ActivationArguments.ActivationContext
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationContext
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "응용 프로그램의 매니페스트 기반 활성화에 대 한 활성화 컨텍스트를 가져옵니다."
  remarks: "<xref:System.ActivationContext>개체에 포함 되어는 <xref:System.ApplicationIdentity>고 응용 프로그램 매니페스트를 내부 전용 액세스를 제공 합니다.</xref:System.ApplicationIdentity> </xref:System.ActivationContext> 활성화 컨텍스트를 설정 하는 도메인 정책을 고 응용 프로그램 기반 보안 모델을 제공 매니페스트 기반 활성화 하는 동안 사용 됩니다."
  example:
  - "The following code example shows how to obtain the value of the ActivationContext property from the <xref:System.Runtime.Hosting.ActivationArguments> for a manifest-based application.  \n  \n This code example is part of a larger example provided for the <xref:System.Runtime.Hosting.ActivationArguments> class.  \n  \n [!code-vb[System.Runtime.Hosting.ApplicationActivator#4](~/add/codesnippet/visualbasic/p-system.runtime.hosting_1.vb)]\n [!code-cs[System.Runtime.Hosting.ApplicationActivator#4](~/add/codesnippet/csharp/p-system.runtime.hosting_1.cs)]"
  syntax:
    content: public ActivationContext ActivationContext { get; }
    return:
      type: System.ActivationContext
      description: "매니페스트 기반 활성화 응용 프로그램을 식별 하는 개체입니다."
  overload: System.Runtime.Hosting.ActivationArguments.ActivationContext*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.ActivationData
  id: ActivationData
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ActivationData
  nameWithType: ActivationArguments.ActivationData
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationData
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "호스트에서 정품 인증 데이터를 가져옵니다."
  remarks: "정품 인증 데이터 URL의 쿼리 문자열 부분은 같은 정보로 구성 됩니다."
  syntax:
    content: public string[] ActivationData { get; }
    return:
      type: System.String[]
      description: "호스트에서 제공한 정품 인증 데이터를 포함 하는 문자열의 배열입니다."
  overload: System.Runtime.Hosting.ActivationArguments.ActivationData*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.ApplicationIdentity
  id: ApplicationIdentity
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ApplicationIdentity
  nameWithType: ActivationArguments.ApplicationIdentity
  fullName: System.Runtime.Hosting.ActivationArguments.ApplicationIdentity
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "매니페스트 활성 응용 프로그램에 대 한 응용 프로그램 id를 가져옵니다."
  remarks: "응용 프로그램 id를 새 도메인에서 활성화할 수 매니페스트 기반 응용 프로그램을 고유 하 게 식별 합니다."
  syntax:
    content: public ApplicationIdentity ApplicationIdentity { get; }
    return:
      type: System.ApplicationIdentity
      description: "매니페스트 기반 활성화에 대 한 응용 프로그램을 식별 하는 개체입니다."
  overload: System.Runtime.Hosting.ActivationArguments.ApplicationIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.Clone
  id: Clone
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: Clone()
  nameWithType: ActivationArguments.Clone()
  fullName: System.Runtime.Hosting.ActivationArguments.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "현재의 복사본을 생성 <xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;> </xref> 개체입니다."
  remarks: "이 메서드가 만드는 새 <xref:System.Runtime.Hosting.ActivationArguments>개체를 현재 <xref:System.Runtime.Hosting.ActivationArguments>개체</xref:System.Runtime.Hosting.ActivationArguments> 의 멤버의 복사본과 함께 다음 채웁니다.</xref:System.Runtime.Hosting.ActivationArguments>"
  syntax:
    content: public override System.Security.Policy.EvidenceBase Clone ();
    parameters: []
    return:
      type: System.Security.Policy.EvidenceBase
      description: "현재 개체의 복사본입니다."
  overload: System.Runtime.Hosting.ActivationArguments.Clone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Policy.EvidenceBase
  isExternal: false
  name: System.Security.Policy.EvidenceBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext)
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationArguments(ActivationContext)
  nameWithType: ActivationArguments.ActivationArguments(ActivationContext)
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ActivationContext)
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity)
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationArguments(ApplicationIdentity)
  nameWithType: ActivationArguments.ActivationArguments(ApplicationIdentity)
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ApplicationIdentity)
- uid: System.ApplicationIdentity
  parent: System
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ApplicationIdentity
  fullName: System.ApplicationIdentity
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext,System.String[])
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationArguments(ActivationContext,String[])
  nameWithType: ActivationArguments.ActivationArguments(ActivationContext,String[])
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ActivationContext,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity,System.String[])
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationArguments(ApplicationIdentity,String[])
  nameWithType: ActivationArguments.ActivationArguments(ApplicationIdentity,String[])
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ApplicationIdentity,String[])
- uid: System.Runtime.Hosting.ActivationArguments.ActivationContext
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationArguments.ActivationContext
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationContext
- uid: System.Runtime.Hosting.ActivationArguments.ActivationData
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationData
  nameWithType: ActivationArguments.ActivationData
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationData
- uid: System.Runtime.Hosting.ActivationArguments.ApplicationIdentity
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ActivationArguments.ApplicationIdentity
  fullName: System.Runtime.Hosting.ActivationArguments.ApplicationIdentity
- uid: System.Runtime.Hosting.ActivationArguments.Clone
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: Clone()
  nameWithType: ActivationArguments.Clone()
  fullName: System.Runtime.Hosting.ActivationArguments.Clone()
- uid: System.Runtime.Hosting.ActivationArguments.#ctor*
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationArguments
  nameWithType: ActivationArguments.ActivationArguments
- uid: System.Runtime.Hosting.ActivationArguments.ActivationContext*
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationArguments.ActivationContext
- uid: System.Runtime.Hosting.ActivationArguments.ActivationData*
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationData
  nameWithType: ActivationArguments.ActivationData
- uid: System.Runtime.Hosting.ActivationArguments.ApplicationIdentity*
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ActivationArguments.ApplicationIdentity
- uid: System.Runtime.Hosting.ActivationArguments.Clone*
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: Clone
  nameWithType: ActivationArguments.Clone
