### YamlMime:ManagedReference
items:
- uid: System.Globalization.HijriCalendar
  id: HijriCalendar
  children:
  - System.Globalization.HijriCalendar.#ctor
  - System.Globalization.HijriCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.HijriCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.HijriCalendar.AlgorithmType
  - System.Globalization.HijriCalendar.DaysInYearBeforeMinSupportedYear
  - System.Globalization.HijriCalendar.Eras
  - System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.GetEra(System.DateTime)
  - System.Globalization.HijriCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.GetMonth(System.DateTime)
  - System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.GetYear(System.DateTime)
  - System.Globalization.HijriCalendar.HijriAdjustment
  - System.Globalization.HijriCalendar.HijriEra
  - System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.MaxSupportedDateTime
  - System.Globalization.HijriCalendar.MinSupportedDateTime
  - System.Globalization.HijriCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.HijriCalendar.TwoDigitYearMax
  langs:
  - csharp
  name: HijriCalendar
  nameWithType: HijriCalendar
  fullName: System.Globalization.HijriCalendar
  type: Class
  summary: "회교식 달력을 나타냅니다."
  remarks: "The Hijri calendar recognizes one era: A.H. (Latin \"Anno Hegirae\", which means \"the year of the migration,\" in reference to the migration of Muhammad (PBUH) from Mecca).  \n  \n> [!NOTE]\n>  For information about using the HijriCalendar class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/add/includes/ajax-current-ext-md.md).  \n  \n In every 30-year cycle that ends with a year that is evenly divisible by 30, the 2nd, 5th, 7th, 10th, 13th, 16th, 18th, 21st, 24th, 26th, and 29th years are leap years. A common year has 354 days and a leap year has 355 days.  \n  \n The Hijri calendar has 12 months with 29 to 30 days each:  \n  \n|GetMonth value|Month|Days in common years|Days in leap years|  \n|--------------------|-----------|--------------------------|------------------------|  \n|1|محرم (Muharram)|30|30|  \n|2|صفر (Safar)|29|29|  \n|3|‏ربيع الاول (Rabi I)|30|30|  \n|4|‏ربيع الثاني (Rabi II)|29|29|  \n|5|جمادى الاولى (Jumada I)|30|30|  \n|6|جمادى الثانية (Jumada II)|29|29|  \n|7|رجب (Rajab)|30|30|  \n|8|شعبان (Shaban)|29|29|  \n|9|رمضان (Ramadan)|30|30|  \n|10|شوال (Shawwal)|29|29|  \n|11|ذو القعدة (Zulkadah)|30|30|  \n|12|ذو الحجة (Zulhijjah)|29|30|  \n  \n Ramadan, the month of fasting in the Muslim world, officially starts and ends according to a decree that is based on the observation of the new moon. Therefore, the number of days in Shaban and the number of days in Ramadan vary.  \n  \n The date January 1, 2001 A.D. in the Gregorian calendar is roughly equivalent to the sixth day of Shawwal in the year 1421 A.H. in the Hijri calendar.  \n  \n This implementation of the HijriCalendar class adjusts the calendar date by adding or subtracting a value from zero to two days to accommodate the variances in the start and the end of Ramadan and to accommodate the date difference between countries/regions. That value is stored in the <xref:System.Globalization.HijriCalendar.HijriAdjustment%2A> property. If <xref:System.Globalization.HijriCalendar.HijriAdjustment%2A> is not set explicitly, it derives its value from the settings in the regional and language options portion of Control Panel and is stored in the registry value HKEY_CURRENT_USER\\Control Panel\\International\\AddHijriDate. However, that information can change during the life of the <xref:System.AppDomain>. The HijriCalendar class does not detect changes in the system settings automatically.  \n  \n Each <xref:System.Globalization.CultureInfo> supports a set of calendars. The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture. To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> to a new <xref:System.Globalization.Calendar>."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class HijriCalendar : System.Globalization.Calendar
  inheritance:
  - System.Globalization.Calendar
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: HijriCalendar()
  nameWithType: HijriCalendar.HijriCalendar()
  fullName: System.Globalization.HijriCalendar.HijriCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Globalization.HijriCalendar&quot;> </xref> 클래스입니다."
  syntax:
    content: public HijriCalendar ();
    parameters: []
  overload: System.Globalization.HijriCalendar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: AddMonths(DateTime,Int32)
  nameWithType: HijriCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.HijriCalendar.AddMonths(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "<xref:System.DateTime>지정한 <xref:System.DateTime>.</xref:System.DateTime> 반대쪽 개월 즉 지정 된 수</xref:System.DateTime> 를 반환합니다."
  remarks: "결과의 날짜 부분 <xref:System.DateTime>결과 일 결과 결과 연도의 월에 유효한 날짜가 아닌 경우 영향을 받는.</xref:System.DateTime> 결과 결과 연도의 월에 유효 마지막 날짜로 변경 됩니다. 결과 <xref:System.DateTime>는 결과 월 <xref:System.DateTime>.</xref:System.DateTime> 지정 된 연도 범위를 벗어나는 경우 영향을</xref:System.DateTime> 의 연도 부분 이 구현은 현재 연대만 지원합니다. 따라서 <xref:System.ArgumentException>결과 연도 <xref:System.DateTime>.</xref:System.DateTime> 지정 된 연대를 벗어나는 경우 throw 됩니다</xref:System.ArgumentException> 시간 부분은 결과 <xref:System.DateTime>지정 <xref:System.DateTime>.</xref:System.DateTime> 동일 하 게 유지</xref:System.DateTime>       예를 들어 지정된 된 월이 줄 카 30 일인 경우 지정된 된 날짜 이며 그 달의 30 일의 값은 `months` 매개 변수는 3이 고 지정 된 연도, 월은 고, 결과 일은 30 일인 고 마지막 날인, 합니다.       경우의 값은 `months` 매개 변수는 음수 이면 결과 <xref:System.DateTime>에 지정 된 <xref:System.DateTime>.</xref:System.DateTime> 보다 빠릅니다.</xref:System.DateTime>       <xref:System.DateTime.Kind%2A>반환 된 <xref:System.DateTime>값을 항상 같음 <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> 의 속성</xref:System.DateTime.Kind%2A> 유지할 수 있습니다는 <xref:System.DateTime.Kind%2A>의 속성은 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>메서드를 다음 예제와 같이.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#5](~/add/codesnippet/visualbasic/m-system.globalization.h_21_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#5  ](~/add/codesnippet/csharp/m-system.globalization.h_21_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.  \n  \n [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_21_2.cpp)]\n [!code-cs[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_21_2.cs)]\n [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_21_2.vb)]"
  syntax:
    content: public override DateTime AddMonths (DateTime time, int months);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>월을.</xref:System.DateTime>"
    - id: months
      type: System.Int32
      description: "추가할 개월 수입니다."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime> <xref:System.DateTime>.</xref:System.DateTime> 지정한 월의 지정된 된 수를 더한 해당 결과</xref:System.DateTime>"
  overload: System.Globalization.HijriCalendar.AddMonths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "결과 <xref:System.DateTime>.</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>months</code>-120000 미만입니다.       -또는- <code>months</code> 120000 보다 큽니다."
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: AddYears(DateTime,Int32)
  nameWithType: HijriCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.HijriCalendar.AddYears(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "<xref:System.DateTime>즉는 지정 된 연도 수 만큼 경과한 지정된 <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> 반환"
  remarks: "결과의 날짜 부분 <xref:System.DateTime>결과 일 결과 결과 연도의 월에 유효한 날짜가 아닌 경우 영향을 받는.</xref:System.DateTime> 결과 결과 연도의 월에 유효 마지막 날짜로 변경 됩니다. <xref:System.DateTime>지정 된 <xref:System.DateTime>.</xref:System.DateTime> 동일 하 게 유지</xref:System.DateTime> 결과의 월 부분 이 구현은 현재 연대만 지원합니다. 따라서 <xref:System.ArgumentException>결과 연도 <xref:System.DateTime>.</xref:System.DateTime> 지정 된 연대를 벗어나는 경우 throw 됩니다</xref:System.ArgumentException> 시간 부분은 결과 <xref:System.DateTime>지정 <xref:System.DateTime>.</xref:System.DateTime> 동일 하 게 유지</xref:System.DateTime>       예를 들어 윤년 줄은 29 일, 제외 하 고 30 일 동안 할당 했을 때 윤년 합니다. 지정한 날짜가 윤년에서 자의 30 번째 날과 값 이면 `years` 1 이면 결과 날짜에는 다음 연도 자의 29 번째 날 수 있습니다.       경우 `years` 가 음수 이면 결과 <xref:System.DateTime>지정된 <xref:System.DateTime>.</xref:System.DateTime> 보다 빠릅니다.</xref:System.DateTime>       <xref:System.DateTime.Kind%2A>반환 된 <xref:System.DateTime>값을 항상 같음 <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> 의 속성</xref:System.DateTime.Kind%2A> 유지할 수 있습니다는 <xref:System.DateTime.Kind%2A>의 속성은 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>메서드를 다음 예제와 같이.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#8](~/add/codesnippet/visualbasic/m-system.globalization.h_4_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#8  ](~/add/codesnippet/csharp/m-system.globalization.h_4_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.  \n  \n [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_4_2.cpp)]\n [!code-cs[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_4_2.cs)]\n [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_4_2.vb)]"
  syntax:
    content: public override DateTime AddYears (DateTime time, int years);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>연도를.</xref:System.DateTime>"
    - id: years
      type: System.Int32
      description: "더할 연도 수입니다."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>결과로 표시 되는 지정 된 <xref:System.DateTime>.</xref:System.DateTime> 지정 된 년 수를 추가 합니다.</xref:System.DateTime>"
  overload: System.Globalization.HijriCalendar.AddYears*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "그 결과 <xref:System.DateTime>지원 되는 범위를 벗어납니다.</xref:System.DateTime>"
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.AlgorithmType
  id: AlgorithmType
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: AlgorithmType
  nameWithType: HijriCalendar.AlgorithmType
  fullName: System.Globalization.HijriCalendar.AlgorithmType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "현재 달력 지, 음력 인지 또는 둘의 조합을 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.  \n  \n [!code-cs[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/csharp/p-system.globalization.h_0_1.cs)]\n [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/visualbasic/p-system.globalization.h_0_1.vb)]"
  syntax:
    content: public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }
    return:
      type: System.Globalization.CalendarAlgorithmType
      description: "항상 반환 <xref href=&quot;System.Globalization.CalendarAlgorithmType&quot;> </xref>합니다."
  overload: System.Globalization.HijriCalendar.AlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.DaysInYearBeforeMinSupportedYear
  id: DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: HijriCalendar.DaysInYearBeforeMinSupportedYear
  fullName: System.Globalization.HijriCalendar.DaysInYearBeforeMinSupportedYear
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "지정 된 연도 앞에 오는 연도에서 일 수를 가져옵니다는 <xref:System.Globalization.HijriCalendar.MinSupportedDateTime*>속성.</xref:System.Globalization.HijriCalendar.MinSupportedDateTime*>"
  remarks: "이 속성 354의 상수 값을 반환합니다."
  syntax:
    content: protected override int DaysInYearBeforeMinSupportedYear { get; }
    return:
      type: System.Int32
      description: "<xref:System.Globalization.HijriCalendar.MinSupportedDateTime*>.</xref:System.Globalization.HijriCalendar.MinSupportedDateTime*> 지정 된 연도의 이전 연도에서 일 수"
  overload: System.Globalization.HijriCalendar.DaysInYearBeforeMinSupportedYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.Eras
  id: Eras
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: HijriCalendar.Eras
  fullName: System.Globalization.HijriCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "에 있는 연대의 목록을 가져옵니다는 <xref href=&quot;System.Globalization.HijriCalendar&quot;> </xref>합니다."
  remarks: '회교식 달력 한 연대를 인식: A.H. (라틴어 &quot;Anno Hegirae&quot;, &quot;연도 에&quot; 마이그레이션의 마 (PBUH) 메카에서 참조할 때는 즉). 이 속성에는 항상 하나의 요소만 있는 배열을 반환합니다.'
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "에 있는 연대를 나타내는 정수 배열에서 <xref href=&quot;System.Globalization.HijriCalendar&quot;> </xref>합니다."
  overload: System.Globalization.HijriCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetDayOfMonth(DateTime)
  nameWithType: HijriCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.HijriCalendar.GetDayOfMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "지정 된 <xref:System.DateTime>.</xref:System.DateTime> 해당 월의 일을 반환합니다."
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.  \n  \n [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_16_1.cpp)]\n [!code-cs[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_16_1.cs)]\n [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_16_1.vb)]"
  syntax:
    content: public override int GetDayOfMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>읽을 수 있습니다.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "30부터 1 까지의 <xref:System.DateTime>.</xref:System.DateTime> 지정한 월의 일을 나타내는 정수"
  overload: System.Globalization.HijriCalendar.GetDayOfMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetDayOfWeek(DateTime)
  nameWithType: HijriCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.HijriCalendar.GetDayOfWeek(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "지정한 <xref:System.DateTime>.</xref:System.DateTime> 주의 일을 반환합니다."
  remarks: "<xref:System.DayOfWeek>값은 다음과 같습니다: | DayOfWeek 값 | 나타내는 |   |---------------------|---------------------|   | 일요일 | الاحد (Al Ahad) |   | 월요일 | الاثنين (Al Ithnayn) |   | 화요일 | الثلاثاء (Thulaathaa에 &quot;) |   | 수요일 | الاربعاء (Al Arbi&quot;aa&quot;) |   | 목요일 | الخميس (Al Khamiis) |   | 금요일 | الجمعة (Al Jumu&quot;ah) |   | 토요일 | السبت (Sabt로) |</xref:System.DayOfWeek>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.  \n  \n [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_17_1.cpp)]\n [!code-cs[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_17_1.cs)]\n [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_17_1.vb)]"
  syntax:
    content: public override DayOfWeek GetDayOfWeek (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>읽을 수 있습니다.</xref:System.DateTime>"
    return:
      type: System.DayOfWeek
      description: "<xref:System.DayOfWeek>지정 된 <xref:System.DateTime>.</xref:System.DateTime> 요일을 나타내는 값</xref:System.DayOfWeek> 을"
  overload: System.Globalization.HijriCalendar.GetDayOfWeek*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetDayOfYear(DateTime)
  nameWithType: HijriCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.HijriCalendar.GetDayOfYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "지정한 <xref:System.DateTime>.</xref:System.DateTime> 연간 일을 반환합니다."
  remarks: "날짜의 해당 연도의 첫 번째 날부터의 일 수로 정의 됩니다. 예를 들어 GetDayOfYear 첫 번째 월의 첫 번째 날에 대 한 1을 반환 하 고 GetDayOfYear 지난 달의 마지막 날에 대 한 <xref:System.Globalization.HijriCalendar.GetDaysInYear%2A>.</xref:System.Globalization.HijriCalendar.GetDaysInYear%2A> 반환 되는 동일한 값이 해당 연도의 총 일 수를 반환 합니다."
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.  \n  \n [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_13_1.cpp)]\n [!code-cs[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_13_1.cs)]\n [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_13_1.vb)]"
  syntax:
    content: public override int GetDayOfYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>읽을 수 있습니다.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "355부터 1 까지의 지정 <xref:System.DateTime>.</xref:System.DateTime> 연간 일자를 나타내는 정수"
  overload: System.Globalization.HijriCalendar.GetDayOfYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: HijriCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.HijriCalendar.GetDaysInMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "지정 된 연도 및 연대의 지정된 된 월의 일 수를 반환합니다."
  remarks: "예를 들어이 메서드 30 예 (`month` = 12) 인지 여부에 따라 `year` 윤년 인지 합니다."
  example:
  - "The following code example calls `GetDaysInMonth` for the twelfth month in each of five years in each era.  \n  \n [!code-vb[System.Globalization.HijriCalendar.GetDaysInMonth#1](~/add/codesnippet/visualbasic/4f5a9e0a-9896-4180-95b7-_1.vb)]\n [!code-cs[System.Globalization.HijriCalendar.GetDaysInMonth#1](~/add/codesnippet/csharp/4f5a9e0a-9896-4180-95b7-_1.cs)]\n [!code-cpp[System.Globalization.HijriCalendar.GetDaysInMonth#1](~/add/codesnippet/cpp/4f5a9e0a-9896-4180-95b7-_1.cpp)]"
  syntax:
    content: public override int GetDaysInMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "연도 나타내는 정수입니다."
    - id: month
      type: System.Int32
      description: "월을 나타내는 1부터 12 정수입니다."
    - id: era
      type: System.Int32
      description: "연대를 나타내는 정수입니다."
    return:
      type: System.Int32
      description: "지정 된 연대의 지정 된 연도의 지정한 월의 일 수입니다."
  overload: System.Globalization.HijriCalendar.GetDaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>이 달력에서 지 원하는 범위를 벗어납니다.       -또는- <code>year</code> 이 달력에서 지 원하는 범위를 벗어났습니다.       -또는- <code>month</code> 이 달력에서 지 원하는 범위를 벗어났습니다."
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetDaysInYear(Int32,Int32)
  nameWithType: HijriCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.HijriCalendar.GetDaysInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "지정 된 연도 및 연대의 일 수를 반환합니다."
  remarks: ''
  example:
  - "The following code example calls `GetDaysInYear` for five years in each era.  \n  \n [!code-cs[System.Globalization.HijriCalendar.GetDaysInYear#1](~/add/codesnippet/csharp/m-system.globalization.h_3_1.cs)]\n [!code-cpp[System.Globalization.HijriCalendar.GetDaysInYear#1](~/add/codesnippet/cpp/m-system.globalization.h_3_1.cpp)]\n [!code-vb[System.Globalization.HijriCalendar.GetDaysInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.h_3_1.vb)]"
  syntax:
    content: public override int GetDaysInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "연도 나타내는 정수입니다."
    - id: era
      type: System.Int32
      description: "연대를 나타내는 정수입니다."
    return:
      type: System.Int32
      description: "지정 된 연도 및 연대의 일 수를 지정 합니다. 일 수는 평년 윤년에서 355 354 일이 됩니다."
  overload: System.Globalization.HijriCalendar.GetDaysInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>또는 <code>era</code> 이 달력에서 지 원하는 범위를 벗어났습니다."
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: HijriCalendar.GetEra(DateTime)
  fullName: System.Globalization.HijriCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "지정 된 <xref:System.DateTime>.</xref:System.DateTime> 연대를 반환합니다."
  remarks: '회교식 달력 한 연대를 인식: A.H. (라틴어 &quot;Anno Hegirae&quot;, &quot;연도 에&quot; 마이그레이션의 마 (PBUH) 메카에서 참조할 때는 즉).'
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.  \n  \n [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_14_1.cpp)]\n [!code-cs[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_14_1.cs)]\n [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_14_1.vb)]"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>읽을 수 있습니다.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "지정 된 <xref:System.DateTime>.</xref:System.DateTime> 연대를 나타내는 정수입니다"
  overload: System.Globalization.HijriCalendar.GetEra*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetLeapMonth(Int32,Int32)
  nameWithType: HijriCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.HijriCalendar.GetLeapMonth(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "지정 된 연도 및 연대의 윤 월을 계산합니다."
  remarks: "윤 월의 개념을 지 원하는 일정에서 윤 월에 특정 월 또는 연도의 모든 달이 지난 후 발생할 수 있습니다. 예를 들어는 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>메서드 13 지정된 된 날짜와 관련 된 달을 나타내는 1 사이의 숫자를 반환 합니다.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> 해당 연도의 8 및 9 번째 달을 윤 월 되어 있는 경우는 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>메서드가 윤 월에 대 한 9 및 10 번째 8 월에 대 한 8을 반환 합니다.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>"
  syntax:
    content: public override int GetLeapMonth (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "연도입니다."
    - id: era
      type: System.Int32
      description: "연대입니다. Specify <xref:System.Globalization.Calendar.CurrentEra> or <xref href=&quot;System.Globalization.HijriCalendar.HijriEra&quot;></xref>.</xref:System.Globalization.Calendar.CurrentEra>"
    return:
      type: System.Int32
      description: "항상 0 이므로 <xref href=&quot;System.Globalization.HijriCalendar&quot;> </xref> 형식은 윤 월의 개념을 지원 하지 않습니다."
  overload: System.Globalization.HijriCalendar.GetLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>보다 작은 경우 회교식 달력의 연도 9666 보다 1 이상       -or-       <code>era</code> is not <xref:System.Globalization.Calendar.CurrentEra> or <xref href=&quot;System.Globalization.HijriCalendar.HijriEra&quot;></xref>."
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetMonth(DateTime)
  nameWithType: HijriCalendar.GetMonth(DateTime)
  fullName: System.Globalization.HijriCalendar.GetMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "지정 된 <xref:System.DateTime>.</xref:System.DateTime> 월을 반환합니다."
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.  \n  \n [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_19_1.cpp)]\n [!code-cs[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_19_1.cs)]\n [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_19_1.vb)]"
  syntax:
    content: public override int GetMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>읽을 수 있습니다.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "1부터 12 까지의 정수 지정 <xref:System.DateTime>.</xref:System.DateTime> 월을 나타내는"
  overload: System.Globalization.HijriCalendar.GetMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: HijriCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.HijriCalendar.GetMonthsInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "지정 된 연도 및 연대의 개월 수를 반환합니다."
  remarks: ''
  example:
  - "The following code example calls the GetMonthsInYear method for five years in each era.  \n  \n [!code-cpp[System.Globalization.HijriCalendar.GetMonthsInYear#1](~/add/codesnippet/cpp/m-system.globalization.h_12_1.cpp)]\n [!code-vb[System.Globalization.HijriCalendar.GetMonthsInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.h_12_1.vb)]\n [!code-cs[System.Globalization.HijriCalendar.GetMonthsInYear#1](~/add/codesnippet/csharp/m-system.globalization.h_12_1.cs)]"
  syntax:
    content: public override int GetMonthsInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "연도 나타내는 정수입니다."
    - id: era
      type: System.Int32
      description: "연대를 나타내는 정수입니다."
    return:
      type: System.Int32
      description: "지정 된 연도 및 연대의 개월 수입니다."
  overload: System.Globalization.HijriCalendar.GetMonthsInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>이 달력에서 지 원하는 범위를 벗어납니다.       -또는- <code>year</code> 이 달력에서 지 원하는 범위를 벗어났습니다."
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetYear(DateTime)
  nameWithType: HijriCalendar.GetYear(DateTime)
  fullName: System.Globalization.HijriCalendar.GetYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "지정 된 <xref:System.DateTime>.</xref:System.DateTime> 연도 반환합니다."
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.  \n  \n [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_9_1.cpp)]\n [!code-cs[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_9_1.cs)]\n [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_9_1.vb)]"
  syntax:
    content: public override int GetYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>읽을 수 있습니다.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "지정 된 <xref:System.DateTime>.</xref:System.DateTime> 연도 나타내는 정수"
  overload: System.Globalization.HijriCalendar.GetYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.HijriAdjustment
  id: HijriAdjustment
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: HijriAdjustment
  nameWithType: HijriCalendar.HijriAdjustment
  fullName: System.Globalization.HijriCalendar.HijriAdjustment
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "추가 하거나 뺄 시작 및 끝 라마단의 차이 수용 하 고 국가/지역 간의 날짜 차이 조정 하기 달력에서 일 수를 가져오거나 설정 합니다."
  remarks: "이 구현에서 <xref:System.Globalization.HijriCalendar>클래스 추가 하거나 시작 및 끝 라마단의 차이 수용 하 고 국가/지역 간의 날짜 차이 조정 하기&2; 일&0;에서 값을 빼서 날짜를 조정 합니다.</xref:System.Globalization.HijriCalendar> 해당 값은 HijriAdjustment 속성에 저장 됩니다. HijriAdjustment 명시적으로 설정 되지 않은 경우 제어판의 국가 및 언어 옵션 부분에 설정에서 해당 값을 파생 하 고 HKEY_CURRENT_USER\\Control Panel\\International\\AddHijriDate 레지스트리 값에 저장 됩니다. 그러나 해당 정보 <xref:System.AppDomain>.</xref:System.AppDomain> 의 수명 동안 변경할 수 있습니다. <xref:System.Globalization.HijriCalendar>클래스 시스템 설정의 변경 내용을 검색 하지 않는 자동으로.</xref:System.Globalization.HijriCalendar>"
  example:
  - "The following code example shows how HijriAdjustment affects the date.  \n  \n [!code-cpp[System.Globalization.HijriCalendar.HijriAdjustment#1](~/add/codesnippet/cpp/p-system.globalization.h_2_1.cpp)]\n [!code-cs[System.Globalization.HijriCalendar.HijriAdjustment#1](~/add/codesnippet/csharp/p-system.globalization.h_2_1.cs)]\n [!code-vb[System.Globalization.HijriCalendar.HijriAdjustment#1](~/add/codesnippet/visualbasic/p-system.globalization.h_2_1.vb)]"
  syntax:
    content: public int HijriAdjustment { get; set; }
    return:
      type: System.Int32
      description: "-2에서 2 나타내는 정수를 추가 하거나 뺄 달력에서 일 수입니다."
  overload: System.Globalization.HijriCalendar.HijriAdjustment*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "속성이 잘못 된 값으로 설정 됩니다."
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.HijriEra
  id: HijriEra
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: HijriEra
  nameWithType: HijriCalendar.HijriEra
  fullName: System.Globalization.HijriCalendar.HijriEra
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "현재 연대를 나타냅니다. 이 필드는 상수입니다."
  remarks: "HijriEra 필드의 값은 1입니다.       회교식 달력 한 연대를 인식: A.H. (라틴어 &quot;Anno Hegirae&quot;, &quot;연도 에&quot; 마이그레이션의 마 (PBUH) 메카에서 참조할 때는 즉)."
  syntax:
    content: public static readonly int HijriEra;
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: HijriCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.HijriCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "지정한 날짜가 윤 일인지 여부를 결정 합니다."
  remarks: "30, 2, 5 번째, 7, 10, 13, 16th, 18, 21st, 427로 균등 하 게 나눌 수는 1 년 동안으로 끝나는 30 년 주기 마다 26 및 29 번째 연도 윤년 됩니다. 평년은 354 일이 고 윤년에 355 일 합니다.       윤 일은 윤년에만 있는 일입니다. 회교식 달력 자의 30 일이 유일한 윤 일입니다."
  example:
  - "The following code example calls the `IsLeapDay` method for the last day of the second month (February) for five years in each of the eras.  \n  \n [!code-cs[System.Globalization.HijriCalendar.IsLeapDay#1](~/add/codesnippet/csharp/6f043d10-1d5e-45a1-ab11-_1.cs)]\n [!code-cpp[System.Globalization.HijriCalendar.IsLeapDay#1](~/add/codesnippet/cpp/6f043d10-1d5e-45a1-ab11-_1.cpp)]\n [!code-vb[System.Globalization.HijriCalendar.IsLeapDay#1](~/add/codesnippet/visualbasic/6f043d10-1d5e-45a1-ab11-_1.vb)]"
  syntax:
    content: public override bool IsLeapDay (int year, int month, int day, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "연도 나타내는 정수입니다."
    - id: month
      type: System.Int32
      description: "월을 나타내는 1부터 12 정수입니다."
    - id: day
      type: System.Int32
      description: "정수 1에서 30 일을 나타내는입니다."
    - id: era
      type: System.Int32
      description: "연대를 나타내는 정수입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정 된 날짜가 윤 일 이면이 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Globalization.HijriCalendar.IsLeapDay*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>이 달력에서 지 원하는 범위를 벗어납니다.       -또는- <code>year</code> 이 달력에서 지 원하는 범위를 벗어났습니다.       -또는- <code>month</code> 이 달력에서 지 원하는 범위를 벗어났습니다.       -또는- <code>day</code> 이 달력에서 지 원하는 범위를 벗어났습니다."
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: HijriCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.HijriCalendar.IsLeapMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "지정 된 연도 및 연대의 지정된 된 월이 윤 월 인지 확인 합니다."
  remarks: "30, 2, 5 번째, 7, 10, 13, 16th, 18, 21st, 427로 균등 하 게 나눌 수는 1 년 동안으로 끝나는 30 년 주기 마다 26 및 29 번째 연도 윤년 됩니다. 평년은 354 일이 고 윤년에 355 일 합니다.       윤 월은 윤년에만 있는 한 전체 월. 회교식 달력 윤 월은 수 없습니다."
  example:
  - "The following code example calls `IsLeapMonth` for all the months in five years in the current era.  \n  \n [!code-cs[System.Globalization.HijriCalendar.IsLeapMonth#1](~/add/codesnippet/csharp/ab4078b3-e91f-4cfb-8fcf-_1.cs)]\n [!code-cpp[System.Globalization.HijriCalendar.IsLeapMonth#1](~/add/codesnippet/cpp/ab4078b3-e91f-4cfb-8fcf-_1.cpp)]\n [!code-vb[System.Globalization.HijriCalendar.IsLeapMonth#1](~/add/codesnippet/visualbasic/ab4078b3-e91f-4cfb-8fcf-_1.vb)]"
  syntax:
    content: public override bool IsLeapMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "연도 나타내는 정수입니다."
    - id: month
      type: System.Int32
      description: "월을 나타내는 1부터 12 정수입니다."
    - id: era
      type: System.Int32
      description: "연대를 나타내는 정수입니다."
    return:
      type: System.Boolean
      description: "이 메서드는 항상 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Globalization.HijriCalendar.IsLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>이 달력에서 지 원하는 범위를 벗어납니다.       -또는- <code>year</code> 이 달력에서 지 원하는 범위를 벗어났습니다.       -또는- <code>month</code> 이 달력에서 지 원하는 범위를 벗어났습니다."
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: IsLeapYear(Int32,Int32)
  nameWithType: HijriCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.HijriCalendar.IsLeapYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "지정 된 연대의 지정 된 연도가 윤년 인지 여부를 결정 합니다."
  remarks: "30, 2, 5 번째, 7, 10, 13, 16th, 18, 21st, 427로 균등 하 게 나눌 수는 1 년 동안으로 끝나는 30 년 주기 마다 26 및 29 번째 연도 윤년 됩니다. 평년은 354 일이 고 윤년에 355 일 합니다."
  example:
  - "The following code example calls the `IsLeapYear` method for five years in each of the eras.  \n  \n [!code-cpp[System.Globalization.HijriCalendar.IsLeapYear#1](~/add/codesnippet/cpp/m-system.globalization.h_0_1.cpp)]\n [!code-cs[System.Globalization.HijriCalendar.IsLeapYear#1](~/add/codesnippet/csharp/m-system.globalization.h_0_1.cs)]\n [!code-vb[System.Globalization.HijriCalendar.IsLeapYear#1](~/add/codesnippet/visualbasic/m-system.globalization.h_0_1.vb)]"
  syntax:
    content: public override bool IsLeapYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "연도 나타내는 정수입니다."
    - id: era
      type: System.Int32
      description: "연대를 나타내는 정수입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정된 된 연도가 윤년 이면 인지 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Globalization.HijriCalendar.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>이 달력에서 지 원하는 범위를 벗어납니다.       -또는- <code>year</code> 이 달력에서 지 원하는 범위를 벗어났습니다."
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: HijriCalendar.MaxSupportedDateTime
  fullName: System.Globalization.HijriCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "날짜와이 달력에서 지 원하는 시간을 가져옵니다."
  remarks: "서 기 9999 년 12 월 31 일 회교식 달력의 연간 9666의 4 번째 월의 3 번째 날에 해당 됩니다."
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.HijriCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.h_1_1.cs)]\n [!code-vb[System.Globalization.HijriCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.h_1_1.vb)]\n [!code-cpp[System.Globalization.HijriCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.h_1_1.cpp)]"
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "날짜와 시간에서 지원 되는 <xref href=&quot;System.Globalization.HijriCalendar&quot;> </xref> 서 기 9999 년 12 월 31 일의 마지막 순간에 해당 하는 형식 에 해당 합니다."
  overload: System.Globalization.HijriCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: HijriCalendar.MinSupportedDateTime
  fullName: System.Globalization.HijriCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "시작 날짜와이 달력에서 지 원하는 시간을 가져옵니다."
  remarks: "Microsoft Visual Basic <xref:System.DateTime>인 서 기 0001 년 1 월 1 일 형식</xref:System.DateTime> 에서 지 원하는 최소 날짜에 지정된 된 시간으로 하루 중 시간을 나타냅니다. 그러나는 <xref:System.Globalization.HijriCalendar>형식은 최소 날짜를 지원 하지 않습니다.</xref:System.Globalization.HijriCalendar> 따라서, 현재 달력을 사용 하 여 시간 서식을 지정 하는 메서드를 호출 하는 경우 형식 지정자를 지정 하지 않으면 서식 ISO 8601 정렬 가능한 유니버설 (&quot;s&quot;) 사용 하 여 날짜/시간 대신 기본 일반 (&quot;G&quot;)의 날짜/시간 패턴 서식 지정자 패턴 형식 지정자. 자세한 내용은 참조 [표준 날짜 및 시간 형식 문자열](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.HijriCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.h_3_1.cs)]\n [!code-vb[System.Globalization.HijriCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.h_3_1.vb)]\n [!code-cpp[System.Globalization.HijriCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.h_3_1.cpp)]"
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "시작 날짜와 시간에서 지원 되는 <xref href=&quot;System.Globalization.HijriCalendar&quot;> </xref> C.E. 622 년 7 월 18 일의 첫 번째 순간 형식 에 해당 합니다."
  overload: System.Globalization.HijriCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: HijriCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.HijriCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "반환 된 <xref:System.DateTime>지정 된 날짜, 시간 및 연대로 설정 되어 있는.</xref:System.DateTime>"
  syntax:
    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "연도 나타내는 정수입니다."
    - id: month
      type: System.Int32
      description: "월을 나타내는 1부터 12 정수입니다."
    - id: day
      type: System.Int32
      description: "정수 1에서 30 일을 나타내는입니다."
    - id: hour
      type: System.Int32
      description: "정수 0에서 23 시간을 나타냅니다."
    - id: minute
      type: System.Int32
      description: "정수 0에서 59 분을 나타냅니다."
    - id: second
      type: System.Int32
      description: "정수 0에서 59 초를 나타냅니다."
    - id: millisecond
      type: System.Int32
      description: "밀리초를 나타내는 0부터 999 정수입니다."
    - id: era
      type: System.Int32
      description: "연대를 나타내는 정수입니다."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>지정한 날짜와 현재 연대의 시간으로 설정 된.</xref:System.DateTime>"
  overload: System.Globalization.HijriCalendar.ToDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>이 달력에서 지 원하는 범위를 벗어납니다.       -또는- <code>year</code> 이 달력에서 지 원하는 범위를 벗어났습니다.       -또는- <code>month</code> 이 달력에서 지 원하는 범위를 벗어났습니다.       -또는- <code>day</code> 이 달력에서 지 원하는 범위를 벗어났습니다.       -또는- <code>hour</code> 가 0 보다 작거나 23 보다 큽니다.       -또는- <code>minute</code> 가 0 보다 작거나 59 보다 큽니다.       -또는- <code>second</code> 가 0 보다 작거나 59 보다 큽니다.       -또는- <code>millisecond</code> 가 0 보다 작거나 999 보다 큽니다."
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: ToFourDigitYear(Int32)
  nameWithType: HijriCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.HijriCalendar.ToFourDigitYear(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "사용 하 여 지정된 된 연도 네 자리 연도로 변환는 <xref:System.Globalization.HijriCalendar.TwoDigitYearMax*>속성을 적절 한 세기를 확인 합니다.</xref:System.Globalization.HijriCalendar.TwoDigitYearMax*>"
  remarks: "<xref:System.Globalization.HijriCalendar.TwoDigitYearMax%2A>두 자릿수 연도로 표시할 수 있는 100 년 범위의 마지막 연도입니다.</xref:System.Globalization.HijriCalendar.TwoDigitYearMax%2A> 세기 두 자리를 찾아 확인 `year` 100 년 간의 범위 내에서. 예를 들어 경우 <xref:System.Globalization.HijriCalendar.TwoDigitYearMax%2A>설정 1429로 100 년 범위의 1330에서 1429로 이며 따라서 30의 2 자리 숫자 값으로 해석 되 1330, 2 자리 값은 29 1429로 해석 됩니다.</xref:System.Globalization.HijriCalendar.TwoDigitYearMax%2A>       ToFourDigitYear 두 자리 연도 또는 네 자리 연도 지원합니다. 두 자리 연도 값 (100 미만)를 전달 하면이 메서드는 값에 따라 네 자릿수 값을 변환 하는 <xref:System.Globalization.HijriCalendar.TwoDigitYearMax%2A>적절 한 네 자리 연도 나타내는 값입니다.</xref:System.Globalization.HijriCalendar.TwoDigitYearMax%2A> ToFourDigitYear에 지원 되는 달력 범위 내에 있는 네 자리 연도 값을 제공 하는 응용 프로그램, 메서드는 실제 입력된 값을 반환 합니다. 지원 되는 달력 범위 밖에 있는&4; 자리 값을 제공 하는 응용 프로그램 또는 음수 값을 제공 하는 경우 메서드는 예외가 throw 됩니다."
  syntax:
    content: public override int ToFourDigitYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "변환할 연도를 나타내는 두 자리 또는 네 자리 정수입니다."
    return:
      type: System.Int32
      description: "네 자릿수로 표시를 포함 하는 정수 <code> year </code>합니다."
  overload: System.Globalization.HijriCalendar.ToFourDigitYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>이 달력에서 지 원하는 범위를 벗어납니다."
  platform:
  - net462
- uid: System.Globalization.HijriCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: TwoDigitYearMax
  nameWithType: HijriCalendar.TwoDigitYearMax
  fullName: System.Globalization.HijriCalendar.TwoDigitYearMax
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "두 자릿수 연도로 표시할 수 있는 100 년 범위의 마지막 연도 가져오거나 설정 합니다."
  remarks: "이 속성에는 2 자리 연도를를 4 자리 연도 변환할 수 있습니다. 예를 들어이 속성은 1429로 설정 하는 경우 100 년 간의 범위는 1330에서 1429로. 따라서 30의 2 자리 숫자 값 2 자리 값은 29 1429로 해석 됩니다 1330로 해석 됩니다.       이 속성의 초기 값은 제어판의 국가 및 언어 옵션 부분에 설정에서 파생 됩니다. 그러나 해당 정보 <xref:System.AppDomain>.</xref:System.AppDomain> 의 수명 동안 변경할 수 있습니다. <xref:System.Globalization.HijriCalendar>클래스 시스템 설정의 변경 내용을 검색 하지 않는 자동으로.</xref:System.Globalization.HijriCalendar>       응용 프로그램을 99 2 자리 연도 문자 그대로 해석 되도록 임을 나타내려면이 값을 설정 해야 합니다. 예를 들어이 속성이 99, 100 년 간의 범위는 0 (아닙니다: 대부분의 달력에 대 한 유효한 값)에서 99 사이로. 따라서 30의 2 자리 숫자 값은 30로 해석 됩니다."
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    return:
      type: System.Int32
      description: "두 자릿수 연도로 표시할 수 있는 100 년 범위의 마지막 연도입니다."
  overload: System.Globalization.HijriCalendar.TwoDigitYearMax*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 달력은 읽기 전용입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "집합 작업의 값 보다 작거나 100 보다 크거나 9666 합니다."
  platform:
  - net462
references:
- uid: System.Globalization.Calendar
  isExternal: false
  name: System.Globalization.Calendar
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Globalization.HijriCalendar.#ctor
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: HijriCalendar()
  nameWithType: HijriCalendar.HijriCalendar()
  fullName: System.Globalization.HijriCalendar.HijriCalendar()
- uid: System.Globalization.HijriCalendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: AddMonths(DateTime,Int32)
  nameWithType: HijriCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.HijriCalendar.AddMonths(DateTime,Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.HijriCalendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: AddYears(DateTime,Int32)
  nameWithType: HijriCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.HijriCalendar.AddYears(DateTime,Int32)
- uid: System.Globalization.HijriCalendar.AlgorithmType
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: HijriCalendar.AlgorithmType
  fullName: System.Globalization.HijriCalendar.AlgorithmType
- uid: System.Globalization.CalendarAlgorithmType
  parent: System.Globalization
  isExternal: false
  name: CalendarAlgorithmType
  nameWithType: CalendarAlgorithmType
  fullName: System.Globalization.CalendarAlgorithmType
- uid: System.Globalization.HijriCalendar.DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: HijriCalendar.DaysInYearBeforeMinSupportedYear
  fullName: System.Globalization.HijriCalendar.DaysInYearBeforeMinSupportedYear
- uid: System.Globalization.HijriCalendar.Eras
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: Eras
  nameWithType: HijriCalendar.Eras
  fullName: System.Globalization.HijriCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDayOfMonth(DateTime)
  nameWithType: HijriCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.HijriCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDayOfWeek(DateTime)
  nameWithType: HijriCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.HijriCalendar.GetDayOfWeek(DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDayOfYear(DateTime)
  nameWithType: HijriCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.HijriCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: HijriCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.HijriCalendar.GetDaysInMonth(Int32,Int32,Int32)
- uid: System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDaysInYear(Int32,Int32)
  nameWithType: HijriCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.HijriCalendar.GetDaysInYear(Int32,Int32)
- uid: System.Globalization.HijriCalendar.GetEra(System.DateTime)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: HijriCalendar.GetEra(DateTime)
  fullName: System.Globalization.HijriCalendar.GetEra(DateTime)
- uid: System.Globalization.HijriCalendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetLeapMonth(Int32,Int32)
  nameWithType: HijriCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.HijriCalendar.GetLeapMonth(Int32,Int32)
- uid: System.Globalization.HijriCalendar.GetMonth(System.DateTime)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetMonth(DateTime)
  nameWithType: HijriCalendar.GetMonth(DateTime)
  fullName: System.Globalization.HijriCalendar.GetMonth(DateTime)
- uid: System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: HijriCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.HijriCalendar.GetMonthsInYear(Int32,Int32)
- uid: System.Globalization.HijriCalendar.GetYear(System.DateTime)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetYear(DateTime)
  nameWithType: HijriCalendar.GetYear(DateTime)
  fullName: System.Globalization.HijriCalendar.GetYear(DateTime)
- uid: System.Globalization.HijriCalendar.HijriAdjustment
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: HijriAdjustment
  nameWithType: HijriCalendar.HijriAdjustment
  fullName: System.Globalization.HijriCalendar.HijriAdjustment
- uid: System.Globalization.HijriCalendar.HijriEra
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: HijriEra
  nameWithType: HijriCalendar.HijriEra
  fullName: System.Globalization.HijriCalendar.HijriEra
- uid: System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: HijriCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.HijriCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: HijriCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.HijriCalendar.IsLeapMonth(Int32,Int32,Int32)
- uid: System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: IsLeapYear(Int32,Int32)
  nameWithType: HijriCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.HijriCalendar.IsLeapYear(Int32,Int32)
- uid: System.Globalization.HijriCalendar.MaxSupportedDateTime
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: HijriCalendar.MaxSupportedDateTime
  fullName: System.Globalization.HijriCalendar.MaxSupportedDateTime
- uid: System.Globalization.HijriCalendar.MinSupportedDateTime
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: HijriCalendar.MinSupportedDateTime
  fullName: System.Globalization.HijriCalendar.MinSupportedDateTime
- uid: System.Globalization.HijriCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: HijriCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.HijriCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Globalization.HijriCalendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: ToFourDigitYear(Int32)
  nameWithType: HijriCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.HijriCalendar.ToFourDigitYear(Int32)
- uid: System.Globalization.HijriCalendar.TwoDigitYearMax
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: HijriCalendar.TwoDigitYearMax
  fullName: System.Globalization.HijriCalendar.TwoDigitYearMax
- uid: System.Globalization.HijriCalendar.#ctor*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: HijriCalendar
  nameWithType: HijriCalendar.HijriCalendar
- uid: System.Globalization.HijriCalendar.AddMonths*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: AddMonths
  nameWithType: HijriCalendar.AddMonths
- uid: System.Globalization.HijriCalendar.AddYears*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: AddYears
  nameWithType: HijriCalendar.AddYears
- uid: System.Globalization.HijriCalendar.AlgorithmType*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: HijriCalendar.AlgorithmType
- uid: System.Globalization.HijriCalendar.DaysInYearBeforeMinSupportedYear*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: HijriCalendar.DaysInYearBeforeMinSupportedYear
- uid: System.Globalization.HijriCalendar.Eras*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: Eras
  nameWithType: HijriCalendar.Eras
- uid: System.Globalization.HijriCalendar.GetDayOfMonth*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDayOfMonth
  nameWithType: HijriCalendar.GetDayOfMonth
- uid: System.Globalization.HijriCalendar.GetDayOfWeek*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDayOfWeek
  nameWithType: HijriCalendar.GetDayOfWeek
- uid: System.Globalization.HijriCalendar.GetDayOfYear*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDayOfYear
  nameWithType: HijriCalendar.GetDayOfYear
- uid: System.Globalization.HijriCalendar.GetDaysInMonth*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDaysInMonth
  nameWithType: HijriCalendar.GetDaysInMonth
- uid: System.Globalization.HijriCalendar.GetDaysInYear*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDaysInYear
  nameWithType: HijriCalendar.GetDaysInYear
- uid: System.Globalization.HijriCalendar.GetEra*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetEra
  nameWithType: HijriCalendar.GetEra
- uid: System.Globalization.HijriCalendar.GetLeapMonth*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetLeapMonth
  nameWithType: HijriCalendar.GetLeapMonth
- uid: System.Globalization.HijriCalendar.GetMonth*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetMonth
  nameWithType: HijriCalendar.GetMonth
- uid: System.Globalization.HijriCalendar.GetMonthsInYear*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetMonthsInYear
  nameWithType: HijriCalendar.GetMonthsInYear
- uid: System.Globalization.HijriCalendar.GetYear*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetYear
  nameWithType: HijriCalendar.GetYear
- uid: System.Globalization.HijriCalendar.HijriAdjustment*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: HijriAdjustment
  nameWithType: HijriCalendar.HijriAdjustment
- uid: System.Globalization.HijriCalendar.IsLeapDay*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: IsLeapDay
  nameWithType: HijriCalendar.IsLeapDay
- uid: System.Globalization.HijriCalendar.IsLeapMonth*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: IsLeapMonth
  nameWithType: HijriCalendar.IsLeapMonth
- uid: System.Globalization.HijriCalendar.IsLeapYear*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: IsLeapYear
  nameWithType: HijriCalendar.IsLeapYear
- uid: System.Globalization.HijriCalendar.MaxSupportedDateTime*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: HijriCalendar.MaxSupportedDateTime
- uid: System.Globalization.HijriCalendar.MinSupportedDateTime*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: HijriCalendar.MinSupportedDateTime
- uid: System.Globalization.HijriCalendar.ToDateTime*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: ToDateTime
  nameWithType: HijriCalendar.ToDateTime
- uid: System.Globalization.HijriCalendar.ToFourDigitYear*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: ToFourDigitYear
  nameWithType: HijriCalendar.ToFourDigitYear
- uid: System.Globalization.HijriCalendar.TwoDigitYearMax*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: HijriCalendar.TwoDigitYearMax
