### YamlMime:ManagedReference
items:
- uid: System.IO.Log.SequenceNumber
  id: SequenceNumber
  children:
  - System.IO.Log.SequenceNumber.#ctor(System.Byte[])
  - System.IO.Log.SequenceNumber.CompareTo(System.IO.Log.SequenceNumber)
  - System.IO.Log.SequenceNumber.Equals(System.IO.Log.SequenceNumber)
  - System.IO.Log.SequenceNumber.Equals(System.Object)
  - System.IO.Log.SequenceNumber.GetBytes
  - System.IO.Log.SequenceNumber.GetHashCode
  - System.IO.Log.SequenceNumber.Invalid
  - System.IO.Log.SequenceNumber.op_Equality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  - System.IO.Log.SequenceNumber.op_GreaterThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  - System.IO.Log.SequenceNumber.op_GreaterThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  - System.IO.Log.SequenceNumber.op_Inequality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  - System.IO.Log.SequenceNumber.op_LessThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  - System.IO.Log.SequenceNumber.op_LessThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  langs:
  - csharp
  name: SequenceNumber
  nameWithType: SequenceNumber
  fullName: System.IO.Log.SequenceNumber
  type: Struct
  summary: "레코드 시퀀스에서 로그 레코드에 할당 된 시퀀스 번호를 나타냅니다."
  remarks: "각 로그 레코드 시퀀스에서 앞에 추가 된 레코드의 시퀀스 번호 보다 큰 시퀀스 번호가 할당 됩니다. 시퀀스 번호를 비교할 수 있지만 조작 하지 않는 수 있습니다."
  syntax:
    content: 'public struct SequenceNumber : IComparable<System.IO.Log.SequenceNumber>'
  inheritance:
  - System.ValueType
  implements:
  - System.IComparable<System.IO.Log.SequenceNumber>
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: SequenceNumber(Byte[])
  nameWithType: SequenceNumber.SequenceNumber(Byte[])
  fullName: System.IO.Log.SequenceNumber.SequenceNumber(Byte[])
  type: Constructor
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> 클래스입니다."
  syntax:
    content: public SequenceNumber (byte[] sequenceNumber);
    parameters:
    - id: sequenceNumber
      type: System.Byte[]
      description: "시퀀스 번호를 구성 하는 바이트 수입니다."
  overload: System.IO.Log.SequenceNumber.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sequenceNumber</code>잘못 된 길이 되었거나 유효한 시퀀스 번호를 나타내지 않습니다."
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.CompareTo(System.IO.Log.SequenceNumber)
  id: CompareTo(System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: CompareTo(SequenceNumber)
  nameWithType: SequenceNumber.CompareTo(SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.CompareTo(SequenceNumber)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "지정된 된 개체와이 시퀀스 번호를 비교합니다."
  syntax:
    content: public int CompareTo (System.IO.Log.SequenceNumber other);
    parameters:
    - id: other
      type: System.IO.Log.SequenceNumber
      description: "현재 시퀀스 번호가으로 계산 되는 개체입니다."
    return:
      type: System.Int32
      description: "두 비교 대상 간의 어휘 관계를 나타내는 32 비트 부호 있는 정수입니다.       <table><tbody><tr><td> 값       </td><td> 조건       </td></tr><tr><td> 0 보다 작음       </td><td> 이 인스턴스는 보다 작은 <code> other </code>합니다.       </td></tr><tr><td> 0       </td><td> 이 인스턴스가 <code> other </code>합니다.       </td></tr><tr><td> 0 보다 큼       </td><td> 이 인스턴스는 보다 큰 <code> other </code>합니다.       </td></tr></tbody></table>"
  overload: System.IO.Log.SequenceNumber.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.Equals(System.IO.Log.SequenceNumber)
  id: Equals(System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: Equals(SequenceNumber)
  nameWithType: SequenceNumber.Equals(SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.Equals(SequenceNumber)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "이 인스턴스와 지정 된 시퀀스 번호가 같은지 여부를 나타냅니다."
  syntax:
    content: public bool Equals (System.IO.Log.SequenceNumber other);
    parameters:
    - id: other
      type: System.IO.Log.SequenceNumber
      description: "다른 <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> 와 비교할 수 있습니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <code> other </code> 이 인스턴스가 같은 값을 표시 하 고, 그러지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IO.Log.SequenceNumber.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SequenceNumber.Equals(Object)
  fullName: System.IO.Log.SequenceNumber.Equals(Object)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "이 인스턴스와 지정 된 개체가 같은지 여부를 나타냅니다."
  syntax:
    content: public override bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: "비교할 다른 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <code> other </code> 이 인스턴스가 동일한 형식이 고 동일한 값을 표시 하 고, 그러지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IO.Log.SequenceNumber.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.GetBytes
  id: GetBytes
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: GetBytes()
  nameWithType: SequenceNumber.GetBytes()
  fullName: System.IO.Log.SequenceNumber.GetBytes()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "현재 시퀀스 번호의 일부나 전부를 바이트 배열로 인코딩합니다."
  syntax:
    content: public byte[] GetBytes ();
    parameters: []
    return:
      type: System.Byte[]
      description: "현재 시퀀스 번호의 일부 또는 모두를 포함 하는 바이트 배열입니다."
  overload: System.IO.Log.SequenceNumber.GetBytes*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.GetHashCode
  id: GetHashCode
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SequenceNumber.GetHashCode()
  fullName: System.IO.Log.SequenceNumber.GetHashCode()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "이 인스턴스에 대 한 해시 코드를 반환합니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "부호 있는 32 비트 정수 해시 코드입니다."
  overload: System.IO.Log.SequenceNumber.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.Invalid
  id: Invalid
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: Invalid
  nameWithType: SequenceNumber.Invalid
  fullName: System.IO.Log.SequenceNumber.Invalid
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "잘못 된 시퀀스 번호를 나타내기 위한 기본값으로 사용 되는 시퀀스 번호를 가져옵니다."
  syntax:
    content: public static System.IO.Log.SequenceNumber Invalid { get; }
    return:
      type: System.IO.Log.SequenceNumber
      description: "A <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> UInt64 초기화<xref:System.UInt64.MaxValue> 잘못 된 시퀀스 번호를 나타내기 위한 기본값으로 사용 하는.</xref:System.UInt64.MaxValue>"
  overload: System.IO.Log.SequenceNumber.Invalid*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.op_Equality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  id: op_Equality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: op_Equality(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_Equality(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_Equality(SequenceNumber,SequenceNumber)
  type: Operator
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "두 <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> 같은지 여부를 결정 하는 인스턴스."
  syntax:
    content: public static bool op_Equality (System.IO.Log.SequenceNumber c1, System.IO.Log.SequenceNumber c2);
    parameters:
    - id: c1
      type: System.IO.Log.SequenceNumber
      description: "<xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> 연산자의 왼쪽에 있습니다."
    - id: c2
      type: System.IO.Log.SequenceNumber
      description: "<xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> 연산자의 오른쪽에 있습니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>두 <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> 같고, 그렇지 않으면 인스턴스는 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IO.Log.SequenceNumber.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.op_GreaterThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  id: op_GreaterThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: op_GreaterThan(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_GreaterThan(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_GreaterThan(SequenceNumber,SequenceNumber)
  type: Operator
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "두 개의 논리 비교를 수행 <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> 인스턴스를 첫 번째 두 번째 인스턴스보다 큰지 여부를 결정 합니다."
  syntax:
    content: public static bool op_GreaterThan (System.IO.Log.SequenceNumber c1, System.IO.Log.SequenceNumber c2);
    parameters:
    - id: c1
      type: System.IO.Log.SequenceNumber
      description: "<xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> 연산자의 왼쪽에 있습니다."
    - id: c2
      type: System.IO.Log.SequenceNumber
      description: "<xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> 연산자의 오른쪽에 있습니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>첫 번째 인스턴스가 두 번째 인스턴스, 보다 큰 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IO.Log.SequenceNumber.op_GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.op_GreaterThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  id: op_GreaterThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: op_GreaterThanOrEqual(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_GreaterThanOrEqual(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_GreaterThanOrEqual(SequenceNumber,SequenceNumber)
  type: Operator
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "두 개의 논리 비교를 수행 <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> 인스턴스를 두 번째 보다 크거나 같은 경우 첫 번째 적용 되는지 확인 합니다."
  syntax:
    content: public static bool op_GreaterThanOrEqual (System.IO.Log.SequenceNumber c1, System.IO.Log.SequenceNumber c2);
    parameters:
    - id: c1
      type: System.IO.Log.SequenceNumber
      description: "<xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> 연산자의 왼쪽에 있습니다."
    - id: c2
      type: System.IO.Log.SequenceNumber
      description: "<xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> 연산자의 오른쪽에 있습니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>첫 번째 인스턴스가 두 번째 인스턴스, 보다 크거나 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IO.Log.SequenceNumber.op_GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.op_Inequality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  id: op_Inequality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: op_Inequality(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_Inequality(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_Inequality(SequenceNumber,SequenceNumber)
  type: Operator
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "두 <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> 같지 않은지 여부를 결정 하는 인스턴스."
  syntax:
    content: public static bool op_Inequality (System.IO.Log.SequenceNumber c1, System.IO.Log.SequenceNumber c2);
    parameters:
    - id: c1
      type: System.IO.Log.SequenceNumber
      description: "<xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> 연산자의 왼쪽에 있습니다."
    - id: c2
      type: System.IO.Log.SequenceNumber
      description: "<xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> 연산자의 오른쪽에 있습니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>두 <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> 인스턴스가 같지 않은지, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IO.Log.SequenceNumber.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.op_LessThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  id: op_LessThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: op_LessThan(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_LessThan(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_LessThan(SequenceNumber,SequenceNumber)
  type: Operator
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "두 논리 비교를 수행 <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> 작은지를 확인 하는지 여부를 첫 번째 매개 변수가 두 번째 인스턴스보다 합니다."
  syntax:
    content: public static bool op_LessThan (System.IO.Log.SequenceNumber c1, System.IO.Log.SequenceNumber c2);
    parameters:
    - id: c1
      type: System.IO.Log.SequenceNumber
      description: "<xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> 연산자의 왼쪽에 있습니다."
    - id: c2
      type: System.IO.Log.SequenceNumber
      description: "<xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> 연산자의 오른쪽에 있습니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>첫 번째는 두 번째 인스턴스보다 작거나 인스턴스가, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IO.Log.SequenceNumber.op_LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.op_LessThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  id: op_LessThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: op_LessThanOrEqual(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_LessThanOrEqual(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_LessThanOrEqual(SequenceNumber,SequenceNumber)
  type: Operator
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "두 논리 비교를 수행 <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> 매개 변수를 첫 번째가 두 번째 보다 작은지 여부를 결정 합니다."
  syntax:
    content: public static bool op_LessThanOrEqual (System.IO.Log.SequenceNumber c1, System.IO.Log.SequenceNumber c2);
    parameters:
    - id: c1
      type: System.IO.Log.SequenceNumber
      description: "<xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> 연산자의 왼쪽에 있습니다."
    - id: c2
      type: System.IO.Log.SequenceNumber
      description: "<xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> 연산자의 오른쪽에 있습니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>첫 번째 인스턴스가 두 번째 인스턴스, 보다 작은 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IO.Log.SequenceNumber.op_LessThanOrEqual*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.Log.SequenceNumber.#ctor(System.Byte[])
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: SequenceNumber(Byte[])
  nameWithType: SequenceNumber.SequenceNumber(Byte[])
  fullName: System.IO.Log.SequenceNumber.SequenceNumber(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Log.SequenceNumber.CompareTo(System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: CompareTo(SequenceNumber)
  nameWithType: SequenceNumber.CompareTo(SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.CompareTo(SequenceNumber)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Log.SequenceNumber
  parent: System.IO.Log
  isExternal: false
  name: SequenceNumber
  nameWithType: SequenceNumber
  fullName: System.IO.Log.SequenceNumber
- uid: System.IO.Log.SequenceNumber.Equals(System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: Equals(SequenceNumber)
  nameWithType: SequenceNumber.Equals(SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.Equals(SequenceNumber)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Log.SequenceNumber.Equals(System.Object)
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: Equals(Object)
  nameWithType: SequenceNumber.Equals(Object)
  fullName: System.IO.Log.SequenceNumber.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IO.Log.SequenceNumber.GetBytes
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: GetBytes()
  nameWithType: SequenceNumber.GetBytes()
  fullName: System.IO.Log.SequenceNumber.GetBytes()
- uid: System.IO.Log.SequenceNumber.GetHashCode
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: GetHashCode()
  nameWithType: SequenceNumber.GetHashCode()
  fullName: System.IO.Log.SequenceNumber.GetHashCode()
- uid: System.IO.Log.SequenceNumber.Invalid
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: Invalid
  nameWithType: SequenceNumber.Invalid
  fullName: System.IO.Log.SequenceNumber.Invalid
- uid: System.IO.Log.SequenceNumber.op_Equality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_Equality(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_Equality(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_Equality(SequenceNumber,SequenceNumber)
- uid: System.IO.Log.SequenceNumber.op_GreaterThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_GreaterThan(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_GreaterThan(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_GreaterThan(SequenceNumber,SequenceNumber)
- uid: System.IO.Log.SequenceNumber.op_GreaterThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_GreaterThanOrEqual(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_GreaterThanOrEqual(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_GreaterThanOrEqual(SequenceNumber,SequenceNumber)
- uid: System.IO.Log.SequenceNumber.op_Inequality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_Inequality(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_Inequality(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_Inequality(SequenceNumber,SequenceNumber)
- uid: System.IO.Log.SequenceNumber.op_LessThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_LessThan(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_LessThan(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_LessThan(SequenceNumber,SequenceNumber)
- uid: System.IO.Log.SequenceNumber.op_LessThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_LessThanOrEqual(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_LessThanOrEqual(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_LessThanOrEqual(SequenceNumber,SequenceNumber)
- uid: System.IO.Log.SequenceNumber.#ctor*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: SequenceNumber
  nameWithType: SequenceNumber.SequenceNumber
- uid: System.IO.Log.SequenceNumber.CompareTo*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: CompareTo
  nameWithType: SequenceNumber.CompareTo
- uid: System.IO.Log.SequenceNumber.Equals*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: Equals
  nameWithType: SequenceNumber.Equals
- uid: System.IO.Log.SequenceNumber.GetBytes*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: GetBytes
  nameWithType: SequenceNumber.GetBytes
- uid: System.IO.Log.SequenceNumber.GetHashCode*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: GetHashCode
  nameWithType: SequenceNumber.GetHashCode
- uid: System.IO.Log.SequenceNumber.Invalid*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: Invalid
  nameWithType: SequenceNumber.Invalid
- uid: System.IO.Log.SequenceNumber.op_Equality*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_Equality
  nameWithType: SequenceNumber.op_Equality
- uid: System.IO.Log.SequenceNumber.op_GreaterThan*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_GreaterThan
  nameWithType: SequenceNumber.op_GreaterThan
- uid: System.IO.Log.SequenceNumber.op_GreaterThanOrEqual*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_GreaterThanOrEqual
  nameWithType: SequenceNumber.op_GreaterThanOrEqual
- uid: System.IO.Log.SequenceNumber.op_Inequality*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_Inequality
  nameWithType: SequenceNumber.op_Inequality
- uid: System.IO.Log.SequenceNumber.op_LessThan*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_LessThan
  nameWithType: SequenceNumber.op_LessThan
- uid: System.IO.Log.SequenceNumber.op_LessThanOrEqual*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_LessThanOrEqual
  nameWithType: SequenceNumber.op_LessThanOrEqual
