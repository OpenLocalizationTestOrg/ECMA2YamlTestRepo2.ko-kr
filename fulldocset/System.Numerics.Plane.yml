### YamlMime:ManagedReference
items:
- uid: System.Numerics.Plane
  id: Plane
  children:
  - System.Numerics.Plane.#ctor(System.Numerics.Vector4)
  - System.Numerics.Plane.#ctor(System.Numerics.Vector3,System.Single)
  - System.Numerics.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)
  - System.Numerics.Plane.CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Plane.D
  - System.Numerics.Plane.Dot(System.Numerics.Plane,System.Numerics.Vector4)
  - System.Numerics.Plane.DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)
  - System.Numerics.Plane.DotNormal(System.Numerics.Plane,System.Numerics.Vector3)
  - System.Numerics.Plane.Equals(System.Numerics.Plane)
  - System.Numerics.Plane.Equals(System.Object)
  - System.Numerics.Plane.GetHashCode
  - System.Numerics.Plane.Normal
  - System.Numerics.Plane.Normalize(System.Numerics.Plane)
  - System.Numerics.Plane.op_Equality(System.Numerics.Plane,System.Numerics.Plane)
  - System.Numerics.Plane.op_Inequality(System.Numerics.Plane,System.Numerics.Plane)
  - System.Numerics.Plane.ToString
  - System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)
  - System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Quaternion)
  langs:
  - csharp
  name: Plane
  nameWithType: Plane
  fullName: System.Numerics.Plane
  type: Struct
  summary: "3 차원 평면을 나타냅니다."
  syntax:
    content: 'public struct Plane : IEquatable<System.Numerics.Plane>'
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Numerics.Plane>
  platform:
  - net462
- uid: System.Numerics.Plane.#ctor(System.Numerics.Vector4)
  id: '#ctor(System.Numerics.Vector4)'
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: Plane(Vector4)
  nameWithType: Plane.Plane(Vector4)
  fullName: System.Numerics.Plane.Plane(Vector4)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "만듭니다는 <xref href=&quot;System.Numerics.Plane&quot;> </xref> 개체에서 지정된 된&4; 차원 벡터입니다."
  syntax:
    content: public Plane (System.Numerics.Vector4 value);
    parameters:
    - id: value
      type: System.Numerics.Vector4
      description: "처음 세 요소는 법선 벡터를이 고 설명 하는 벡터 <xref href=&quot;System.Numerics.Vector4&quot;> </xref> 법선 따라 원점 으로부터의 거리를 정의 합니다."
  overload: System.Numerics.Plane.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.#ctor(System.Numerics.Vector3,System.Single)
  id: '#ctor(System.Numerics.Vector3,System.Single)'
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: Plane(Vector3,Single)
  nameWithType: Plane.Plane(Vector3,Single)
  fullName: System.Numerics.Plane.Plane(Vector3,Single)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "만듭니다는 <xref href=&quot;System.Numerics.Plane&quot;> </xref> 개체에서 지정된 된 법선 및 법선을 따라 원점 으로부터의 거리입니다."
  syntax:
    content: public Plane (System.Numerics.Vector3 normal, float d);
    parameters:
    - id: normal
      type: System.Numerics.Vector3
      description: "평면의 법선 벡터입니다."
    - id: d
      type: System.Single
      description: "법선 벡터를 따라 원점 으로부터 평면의 거리입니다."
  overload: System.Numerics.Plane.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: Plane(Single,Single,Single,Single)
  nameWithType: Plane.Plane(Single,Single,Single,Single)
  fullName: System.Numerics.Plane.Plane(Single,Single,Single,Single)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "만듭니다는 <xref href=&quot;System.Numerics.Plane&quot;> </xref> 해당 법선 및 법선 원점 으로부터의 거리의 X, Y 및 Z 구성 요소에서 개체입니다."
  syntax:
    content: public Plane (float x, float y, float z, float d);
    parameters:
    - id: x
      type: System.Single
      description: "법선의의 X 구성 요소입니다."
    - id: y
      type: System.Single
      description: "법선의 Y 구성 요소입니다."
    - id: z
      type: System.Single
      description: "법선의의 Z 구성 요소입니다."
    - id: d
      type: System.Single
      description: "해당 법선 따라 원점 으로부터 평면의 거리입니다."
  overload: System.Numerics.Plane.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)
  id: CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: CreateFromVertices(Vector3,Vector3,Vector3)
  nameWithType: Plane.CreateFromVertices(Vector3,Vector3,Vector3)
  fullName: System.Numerics.Plane.CreateFromVertices(Vector3,Vector3,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "만듭니다는 <xref href=&quot;System.Numerics.Plane&quot;> </xref> 지정 된 세 점을 포함 하는 개체입니다."
  syntax:
    content: public static System.Numerics.Plane CreateFromVertices (System.Numerics.Vector3 point1, System.Numerics.Vector3 point2, System.Numerics.Vector3 point3);
    parameters:
    - id: point1
      type: System.Numerics.Vector3
      description: "평면을 정의 하는 첫 번째 점입니다."
    - id: point2
      type: System.Numerics.Vector3
      description: "평면을 정의 하는 두 번째 점입니다."
    - id: point3
      type: System.Numerics.Vector3
      description: "평면을 정의 하는 세 번째 점입니다."
    return:
      type: System.Numerics.Plane
      description: "세 점을 포함 하는 평면입니다."
  overload: System.Numerics.Plane.CreateFromVertices*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.D
  id: D
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: D
  nameWithType: Plane.D
  fullName: System.Numerics.Plane.D
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "해당 법선 따라 원점 으로부터 평면의 거리입니다."
  syntax:
    content: public float D;
    return:
      type: System.Single
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.Dot(System.Numerics.Plane,System.Numerics.Vector4)
  id: Dot(System.Numerics.Plane,System.Numerics.Vector4)
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: Dot(Plane,Vector4)
  nameWithType: Plane.Dot(Plane,Vector4)
  fullName: System.Numerics.Plane.Dot(Plane,Vector4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "평면과 4 차원 벡터의 내적을 계산합니다."
  syntax:
    content: public static float Dot (System.Numerics.Plane plane, System.Numerics.Vector4 value);
    parameters:
    - id: plane
      type: System.Numerics.Plane
      description: "평면입니다."
    - id: value
      type: System.Numerics.Vector4
      description: "4 차원 벡터입니다."
    return:
      type: System.Single
      description: "내적입니다."
  overload: System.Numerics.Plane.Dot*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)
  id: DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: DotCoordinate(Plane,Vector3)
  nameWithType: Plane.DotCoordinate(Plane,Vector3)
  fullName: System.Numerics.Plane.DotCoordinate(Plane,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "지정된 된&3; 차원 벡터와 간격을 더한이 평면의 법선 벡터의 내적을 반환 합니다 (<xref href=&quot;System.Numerics.Plane.D&quot;></xref>) 평면의 값입니다."
  syntax:
    content: public static float DotCoordinate (System.Numerics.Plane plane, System.Numerics.Vector3 value);
    parameters:
    - id: plane
      type: System.Numerics.Plane
      description: "평면입니다."
    - id: value
      type: System.Numerics.Vector3
      description: "3 차원 벡터입니다."
    return:
      type: System.Single
      description: "내적입니다."
  overload: System.Numerics.Plane.DotCoordinate*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.DotNormal(System.Numerics.Plane,System.Numerics.Vector3)
  id: DotNormal(System.Numerics.Plane,System.Numerics.Vector3)
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: DotNormal(Plane,Vector3)
  nameWithType: Plane.DotNormal(Plane,Vector3)
  fullName: System.Numerics.Plane.DotNormal(Plane,Vector3)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "지정된 된&3; 차원 벡터의 내적을 반환 및 <xref href=&quot;System.Numerics.Plane.Normal&quot;> </xref> 이 평면의 벡터입니다."
  syntax:
    content: public static float DotNormal (System.Numerics.Plane plane, System.Numerics.Vector3 value);
    parameters:
    - id: plane
      type: System.Numerics.Plane
      description: "평면입니다."
    - id: value
      type: System.Numerics.Vector3
      description: "3 차원 벡터입니다."
    return:
      type: System.Single
      description: "내적입니다."
  overload: System.Numerics.Plane.DotNormal*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.Equals(System.Numerics.Plane)
  id: Equals(System.Numerics.Plane)
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: Equals(Plane)
  nameWithType: Plane.Equals(Plane)
  fullName: System.Numerics.Plane.Equals(Plane)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "이 인스턴스와 다른 평면 개체가 같은지 여부를 나타내는 값을 반환 합니다."
  remarks: "두 개의 <xref:System.Numerics.Plane>개체가 서로 같은지 경우 해당 <xref:System.Numerics.Plane>및 <xref:System.Numerics.Plane>필드가 일치 하.</xref:System.Numerics.Plane> </xref:System.Numerics.Plane> </xref:System.Numerics.Plane>"
  syntax:
    content: public bool Equals (System.Numerics.Plane other);
    parameters:
    - id: other
      type: System.Numerics.Plane
      description: "다른 평면입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>두 평면이 같으면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Numerics.Plane.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Plane.Equals(Object)
  fullName: System.Numerics.Plane.Equals(Object)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "이 인스턴스와 지정 된 개체가 같은지 여부를 나타내는 값을 반환 합니다."
  remarks: "현재 인스턴스 및 `obj` 같은지 경우 `obj` 는 <xref:System.Numerics.Plane>개체 및 해당 <xref:System.Numerics.Plane.Normal>및 <xref:System.Numerics.Plane.D>필드가 일치 하.</xref:System.Numerics.Plane.D> </xref:System.Numerics.Plane.Normal> </xref:System.Numerics.Plane>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "현재 인스턴스와 비교할 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우 현재 인스턴스 및 <code> obj </code> 같고, 그렇지 않으면, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> <xref uid=&quot;langword_csharp_&quot; name=&quot;&quot; href=&quot;&quot;> </xref>합니다. If <code>obj</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, the method returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Plane.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.GetHashCode
  id: GetHashCode
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Plane.GetHashCode()
  fullName: System.Numerics.Plane.GetHashCode()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "이 인스턴스에 대 한 해시 코드를 반환합니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "해시 코드입니다."
  overload: System.Numerics.Plane.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.Normal
  id: Normal
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: Normal
  nameWithType: Plane.Normal
  fullName: System.Numerics.Plane.Normal
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "평면의 법선 벡터입니다."
  syntax:
    content: public System.Numerics.Vector3 Normal;
    return:
      type: System.Numerics.Vector3
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.Normalize(System.Numerics.Plane)
  id: Normalize(System.Numerics.Plane)
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: Normalize(Plane)
  nameWithType: Plane.Normalize(Plane)
  fullName: System.Numerics.Plane.Normalize(Plane)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "새 <xref href=&quot;System.Numerics.Plane&quot;> </xref> 법선 벡터인 소스 평면의 법선 벡터 개체를 정규화 합니다."
  syntax:
    content: public static System.Numerics.Plane Normalize (System.Numerics.Plane value);
    parameters:
    - id: value
      type: System.Numerics.Plane
      description: "원본 평면입니다."
    return:
      type: System.Numerics.Plane
      description: "정규화 된 평면입니다."
  overload: System.Numerics.Plane.Normalize*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.op_Equality(System.Numerics.Plane,System.Numerics.Plane)
  id: op_Equality(System.Numerics.Plane,System.Numerics.Plane)
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: op_Equality(Plane,Plane)
  nameWithType: Plane.op_Equality(Plane,Plane)
  fullName: System.Numerics.Plane.op_Equality(Plane,Plane)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "두 평면이 같은지 여부를 나타내는 값을 반환 합니다."
  remarks: "두 개의 <xref:System.Numerics.Plane>개체가 서로 같은지 경우 해당 <xref:System.Numerics.Plane>및 <xref:System.Numerics.Plane>필드가 일치 하.</xref:System.Numerics.Plane> </xref:System.Numerics.Plane> </xref:System.Numerics.Plane>       에 대 한 같음 연산자의 작업을 정의 하는 같음 메서드 <xref:System.Numerics.Plane>개체입니다.</xref:System.Numerics.Plane>"
  syntax:
    content: public static bool op_Equality (System.Numerics.Plane value1, System.Numerics.Plane value2);
    parameters:
    - id: value1
      type: System.Numerics.Plane
      description: "비교할 첫 번째 평면입니다."
    - id: value2
      type: System.Numerics.Plane
      description: "비교할 두 번째 평면입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>value1</code> and <code>value2</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Plane.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.op_Inequality(System.Numerics.Plane,System.Numerics.Plane)
  id: op_Inequality(System.Numerics.Plane,System.Numerics.Plane)
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: op_Inequality(Plane,Plane)
  nameWithType: Plane.op_Inequality(Plane,Plane)
  fullName: System.Numerics.Plane.op_Inequality(Plane,Plane)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "두 평면이 다른 지 여부를 나타내는 값을 반환 합니다."
  remarks: "같지 않음 연산자에 대 한 작업을 정의 하는 같지 않음 메서드 <xref:System.Numerics.Plane>개체입니다.</xref:System.Numerics.Plane>"
  syntax:
    content: public static bool op_Inequality (System.Numerics.Plane value1, System.Numerics.Plane value2);
    parameters:
    - id: value1
      type: System.Numerics.Plane
      description: "비교할 첫 번째 평면입니다."
    - id: value2
      type: System.Numerics.Plane
      description: "비교할 두 번째 평면입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>value1</code> and <code>value2</code> are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Plane.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.ToString
  id: ToString
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: ToString()
  nameWithType: Plane.ToString()
  fullName: System.Numerics.Plane.ToString()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "이 평면 개체의 문자열 표현을 반환합니다."
  remarks: "문자열 표현을 <xref:System.Numerics.Plane>개체는 반환 된 문자열에 숫자 값의 서식을 지정 하려면 현재 문화권의 서식 지정 규칙을 사용 합니다.</xref:System.Numerics.Plane> 예를 들어 한 <xref:System.Numerics.Plane>EN-US 문화권의 규칙을 사용 하 여 문자열 표현의 형식이 개체 페이지가 나타날 `{Normal:<1.1, 2.2, 3.3> D:4.4}`.</xref:System.Numerics.Plane>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "이 나타내는 문자열을 <xref href=&quot;System.Numerics.Plane&quot;> </xref> 개체입니다."
  overload: System.Numerics.Plane.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)
  id: Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: Transform(Plane,Matrix4x4)
  nameWithType: Plane.Transform(Plane,Matrix4x4)
  fullName: System.Numerics.Plane.Transform(Plane,Matrix4x4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "4x4 행렬으로 정규화 된 평면을 변형합니다."
  remarks: '`plane`이미 정규화 해야 되도록 해당 <xref:System.Numerics.Plane>이 메서드를 호출 하기 전에 벡터 단위 길이입니다.</xref:System.Numerics.Plane>'
  syntax:
    content: public static System.Numerics.Plane Transform (System.Numerics.Plane plane, System.Numerics.Matrix4x4 matrix);
    parameters:
    - id: plane
      type: System.Numerics.Plane
      description: "변환할 정규화 된 평면입니다."
    - id: matrix
      type: System.Numerics.Matrix4x4
      description: "에 적용할 변형 행렬 `plane`합니다."
    return:
      type: System.Numerics.Plane
      description: "변형 된 평면입니다."
  overload: System.Numerics.Plane.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Quaternion)
  id: Transform(System.Numerics.Plane,System.Numerics.Quaternion)
  parent: System.Numerics.Plane
  langs:
  - csharp
  name: Transform(Plane,Quaternion)
  nameWithType: Plane.Transform(Plane,Quaternion)
  fullName: System.Numerics.Plane.Transform(Plane,Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "쿼터 니 언 회전으로 정규화 된 평면을 변형합니다."
  remarks: '`plane`이미 정규화 해야 되도록 해당 <xref:System.Numerics.Plane>이 메서드를 호출 하기 전에 벡터 단위 길이입니다.</xref:System.Numerics.Plane>'
  syntax:
    content: public static System.Numerics.Plane Transform (System.Numerics.Plane plane, System.Numerics.Quaternion rotation);
    parameters:
    - id: plane
      type: System.Numerics.Plane
      description: "변환할 정규화 된 평면입니다."
    - id: rotation
      type: System.Numerics.Quaternion
      description: "평면에 적용할 쿼터 니 언 회전입니다."
    return:
      type: System.Numerics.Plane
      description: "쿼터 니 언 회전을 적용 한 결과인 새 평면입니다."
  overload: System.Numerics.Plane.Transform*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Numerics.Plane.#ctor(System.Numerics.Vector4)
  parent: System.Numerics.Plane
  isExternal: false
  name: Plane(Vector4)
  nameWithType: Plane.Plane(Vector4)
  fullName: System.Numerics.Plane.Plane(Vector4)
- uid: System.Numerics.Vector4
  parent: System.Numerics
  isExternal: false
  name: Vector4
  nameWithType: Vector4
  fullName: System.Numerics.Vector4
- uid: System.Numerics.Plane.#ctor(System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Plane
  isExternal: false
  name: Plane(Vector3,Single)
  nameWithType: Plane.Plane(Vector3,Single)
  fullName: System.Numerics.Plane.Plane(Vector3,Single)
- uid: System.Numerics.Vector3
  parent: System.Numerics
  isExternal: false
  name: Vector3
  nameWithType: Vector3
  fullName: System.Numerics.Vector3
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Numerics.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)
  parent: System.Numerics.Plane
  isExternal: false
  name: Plane(Single,Single,Single,Single)
  nameWithType: Plane.Plane(Single,Single,Single,Single)
  fullName: System.Numerics.Plane.Plane(Single,Single,Single,Single)
- uid: System.Numerics.Plane.CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Plane
  isExternal: false
  name: CreateFromVertices(Vector3,Vector3,Vector3)
  nameWithType: Plane.CreateFromVertices(Vector3,Vector3,Vector3)
  fullName: System.Numerics.Plane.CreateFromVertices(Vector3,Vector3,Vector3)
- uid: System.Numerics.Plane
  parent: System.Numerics
  isExternal: false
  name: Plane
  nameWithType: Plane
  fullName: System.Numerics.Plane
- uid: System.Numerics.Plane.D
  parent: System.Numerics.Plane
  isExternal: false
  name: D
  nameWithType: Plane.D
  fullName: System.Numerics.Plane.D
- uid: System.Numerics.Plane.Dot(System.Numerics.Plane,System.Numerics.Vector4)
  parent: System.Numerics.Plane
  isExternal: false
  name: Dot(Plane,Vector4)
  nameWithType: Plane.Dot(Plane,Vector4)
  fullName: System.Numerics.Plane.Dot(Plane,Vector4)
- uid: System.Numerics.Plane.DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)
  parent: System.Numerics.Plane
  isExternal: false
  name: DotCoordinate(Plane,Vector3)
  nameWithType: Plane.DotCoordinate(Plane,Vector3)
  fullName: System.Numerics.Plane.DotCoordinate(Plane,Vector3)
- uid: System.Numerics.Plane.DotNormal(System.Numerics.Plane,System.Numerics.Vector3)
  parent: System.Numerics.Plane
  isExternal: false
  name: DotNormal(Plane,Vector3)
  nameWithType: Plane.DotNormal(Plane,Vector3)
  fullName: System.Numerics.Plane.DotNormal(Plane,Vector3)
- uid: System.Numerics.Plane.Equals(System.Numerics.Plane)
  parent: System.Numerics.Plane
  isExternal: false
  name: Equals(Plane)
  nameWithType: Plane.Equals(Plane)
  fullName: System.Numerics.Plane.Equals(Plane)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Numerics.Plane.Equals(System.Object)
  parent: System.Numerics.Plane
  isExternal: false
  name: Equals(Object)
  nameWithType: Plane.Equals(Object)
  fullName: System.Numerics.Plane.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Numerics.Plane.GetHashCode
  parent: System.Numerics.Plane
  isExternal: false
  name: GetHashCode()
  nameWithType: Plane.GetHashCode()
  fullName: System.Numerics.Plane.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Numerics.Plane.Normal
  parent: System.Numerics.Plane
  isExternal: false
  name: Normal
  nameWithType: Plane.Normal
  fullName: System.Numerics.Plane.Normal
- uid: System.Numerics.Plane.Normalize(System.Numerics.Plane)
  parent: System.Numerics.Plane
  isExternal: false
  name: Normalize(Plane)
  nameWithType: Plane.Normalize(Plane)
  fullName: System.Numerics.Plane.Normalize(Plane)
- uid: System.Numerics.Plane.op_Equality(System.Numerics.Plane,System.Numerics.Plane)
  parent: System.Numerics.Plane
  isExternal: false
  name: op_Equality(Plane,Plane)
  nameWithType: Plane.op_Equality(Plane,Plane)
  fullName: System.Numerics.Plane.op_Equality(Plane,Plane)
- uid: System.Numerics.Plane.op_Inequality(System.Numerics.Plane,System.Numerics.Plane)
  parent: System.Numerics.Plane
  isExternal: false
  name: op_Inequality(Plane,Plane)
  nameWithType: Plane.op_Inequality(Plane,Plane)
  fullName: System.Numerics.Plane.op_Inequality(Plane,Plane)
- uid: System.Numerics.Plane.ToString
  parent: System.Numerics.Plane
  isExternal: false
  name: ToString()
  nameWithType: Plane.ToString()
  fullName: System.Numerics.Plane.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)
  parent: System.Numerics.Plane
  isExternal: false
  name: Transform(Plane,Matrix4x4)
  nameWithType: Plane.Transform(Plane,Matrix4x4)
  fullName: System.Numerics.Plane.Transform(Plane,Matrix4x4)
- uid: System.Numerics.Matrix4x4
  parent: System.Numerics
  isExternal: false
  name: Matrix4x4
  nameWithType: Matrix4x4
  fullName: System.Numerics.Matrix4x4
- uid: System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Quaternion)
  parent: System.Numerics.Plane
  isExternal: false
  name: Transform(Plane,Quaternion)
  nameWithType: Plane.Transform(Plane,Quaternion)
  fullName: System.Numerics.Plane.Transform(Plane,Quaternion)
- uid: System.Numerics.Quaternion
  parent: System.Numerics
  isExternal: false
  name: Quaternion
  nameWithType: Quaternion
  fullName: System.Numerics.Quaternion
- uid: System.Numerics.Plane.#ctor*
  parent: System.Numerics.Plane
  isExternal: false
  name: Plane
  nameWithType: Plane.Plane
- uid: System.Numerics.Plane.CreateFromVertices*
  parent: System.Numerics.Plane
  isExternal: false
  name: CreateFromVertices
  nameWithType: Plane.CreateFromVertices
- uid: System.Numerics.Plane.Dot*
  parent: System.Numerics.Plane
  isExternal: false
  name: Dot
  nameWithType: Plane.Dot
- uid: System.Numerics.Plane.DotCoordinate*
  parent: System.Numerics.Plane
  isExternal: false
  name: DotCoordinate
  nameWithType: Plane.DotCoordinate
- uid: System.Numerics.Plane.DotNormal*
  parent: System.Numerics.Plane
  isExternal: false
  name: DotNormal
  nameWithType: Plane.DotNormal
- uid: System.Numerics.Plane.Equals*
  parent: System.Numerics.Plane
  isExternal: false
  name: Equals
  nameWithType: Plane.Equals
- uid: System.Numerics.Plane.GetHashCode*
  parent: System.Numerics.Plane
  isExternal: false
  name: GetHashCode
  nameWithType: Plane.GetHashCode
- uid: System.Numerics.Plane.Normalize*
  parent: System.Numerics.Plane
  isExternal: false
  name: Normalize
  nameWithType: Plane.Normalize
- uid: System.Numerics.Plane.op_Equality*
  parent: System.Numerics.Plane
  isExternal: false
  name: op_Equality
  nameWithType: Plane.op_Equality
- uid: System.Numerics.Plane.op_Inequality*
  parent: System.Numerics.Plane
  isExternal: false
  name: op_Inequality
  nameWithType: Plane.op_Inequality
- uid: System.Numerics.Plane.ToString*
  parent: System.Numerics.Plane
  isExternal: false
  name: ToString
  nameWithType: Plane.ToString
- uid: System.Numerics.Plane.Transform*
  parent: System.Numerics.Plane
  isExternal: false
  name: Transform
  nameWithType: Plane.Transform
