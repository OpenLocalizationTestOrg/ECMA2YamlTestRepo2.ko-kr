### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.SyntaxCheck
  id: SyntaxCheck
  children:
  - System.ComponentModel.SyntaxCheck.CheckMachineName(System.String)
  - System.ComponentModel.SyntaxCheck.CheckPath(System.String)
  - System.ComponentModel.SyntaxCheck.CheckRootedPath(System.String)
  langs:
  - csharp
  name: SyntaxCheck
  nameWithType: SyntaxCheck
  fullName: System.ComponentModel.SyntaxCheck
  type: Class
  summary: "특정 구문을 준수 컴퓨터 이름 및 경로 확인 하는 메서드를 제공 합니다. 이 클래스는 상속 될 수 없습니다."
  syntax:
    content: public static class SyntaxCheck
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.SyntaxCheck.CheckMachineName(System.String)
  id: CheckMachineName(System.String)
  parent: System.ComponentModel.SyntaxCheck
  langs:
  - csharp
  name: CheckMachineName(String)
  nameWithType: SyntaxCheck.CheckMachineName(String)
  fullName: System.ComponentModel.SyntaxCheck.CheckMachineName(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "포함 하지 않는 것을 확인 하 라는 컴퓨터의 구문을 확인 &quot;\\&quot;합니다."
  syntax:
    content: public static bool CheckMachineName (string value);
    parameters:
    - id: value
      type: System.String
      description: "확인 하려면 컴퓨터 이름을 포함 하는 문자열입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <code> value </code> 적절 한 컴퓨터 이름 형식과 일치 하 고, 그렇지 않으면, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.SyntaxCheck.CheckMachineName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.SyntaxCheck.CheckPath(System.String)
  id: CheckPath(System.String)
  parent: System.ComponentModel.SyntaxCheck
  langs:
  - csharp
  name: CheckPath(String)
  nameWithType: SyntaxCheck.CheckPath(String)
  fullName: System.ComponentModel.SyntaxCheck.CheckPath(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "로 시작 하는지 여부를 확인에 대 한 경로의 구문을 확인 &quot;\\\\\\&quot;합니다."
  syntax:
    content: public static bool CheckPath (string value);
    parameters:
    - id: value
      type: System.String
      description: "경로 검사를 포함 하는 문자열입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <code> value </code> 적절 한 경로 형식과 일치 합니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.SyntaxCheck.CheckPath*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.SyntaxCheck.CheckRootedPath(System.String)
  id: CheckRootedPath(System.String)
  parent: System.ComponentModel.SyntaxCheck
  langs:
  - csharp
  name: CheckRootedPath(String)
  nameWithType: SyntaxCheck.CheckRootedPath(String)
  fullName: System.ComponentModel.SyntaxCheck.CheckRootedPath(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "로 시작 하는 경우 확인에 대 한 경로의 구문을 확인 &quot;\\&quot; 또는 드라이브 문자&quot;c:&quot;."
  syntax:
    content: public static bool CheckRootedPath (string value);
    parameters:
    - id: value
      type: System.String
      description: "경로 검사를 포함 하는 문자열입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <code> value </code> 적절 한 경로 형식과 일치 합니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.SyntaxCheck.CheckRootedPath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.SyntaxCheck.CheckMachineName(System.String)
  parent: System.ComponentModel.SyntaxCheck
  isExternal: false
  name: CheckMachineName(String)
  nameWithType: SyntaxCheck.CheckMachineName(String)
  fullName: System.ComponentModel.SyntaxCheck.CheckMachineName(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.SyntaxCheck.CheckPath(System.String)
  parent: System.ComponentModel.SyntaxCheck
  isExternal: false
  name: CheckPath(String)
  nameWithType: SyntaxCheck.CheckPath(String)
  fullName: System.ComponentModel.SyntaxCheck.CheckPath(String)
- uid: System.ComponentModel.SyntaxCheck.CheckRootedPath(System.String)
  parent: System.ComponentModel.SyntaxCheck
  isExternal: false
  name: CheckRootedPath(String)
  nameWithType: SyntaxCheck.CheckRootedPath(String)
  fullName: System.ComponentModel.SyntaxCheck.CheckRootedPath(String)
- uid: System.ComponentModel.SyntaxCheck.CheckMachineName*
  parent: System.ComponentModel.SyntaxCheck
  isExternal: false
  name: CheckMachineName
  nameWithType: SyntaxCheck.CheckMachineName
- uid: System.ComponentModel.SyntaxCheck.CheckPath*
  parent: System.ComponentModel.SyntaxCheck
  isExternal: false
  name: CheckPath
  nameWithType: SyntaxCheck.CheckPath
- uid: System.ComponentModel.SyntaxCheck.CheckRootedPath*
  parent: System.ComponentModel.SyntaxCheck
  isExternal: false
  name: CheckRootedPath
  nameWithType: SyntaxCheck.CheckRootedPath
