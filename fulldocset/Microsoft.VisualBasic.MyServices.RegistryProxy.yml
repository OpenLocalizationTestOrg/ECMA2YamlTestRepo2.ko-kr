### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy
  id: RegistryProxy
  children:
  - Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot
  - Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig
  - Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser
  - Microsoft.VisualBasic.MyServices.RegistryProxy.DynData
  - Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(System.String,System.String,System.Object)
  - Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine
  - Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData
  - Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object)
  - Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  - Microsoft.VisualBasic.MyServices.RegistryProxy.Users
  langs:
  - csharp
  name: RegistryProxy
  nameWithType: RegistryProxy
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy
  type: Class
  summary: "레지스트리를 조작 하기 위한 메서드와 속성을 제공 합니다."
  remarks: "이러한 속성을 사용 하려면에서 읽기 및 쓰기 권한이 있어야는 <xref:System.Security.Permissions.RegistryPermissionAccess>열거형.</xref:System.Security.Permissions.RegistryPermissionAccess> 완전 신뢰로 실행 되는 모든 코드 (기본 보안 정책에 따라이 사용자의 로컬 하드 드라이브에 설치 된 모든 코드)에서 레지스트리를 액세스 하는 데 필요한 권한을 보유 합니다. 자세한 내용은 <xref:System.Security.Permissions.RegistryPermission>클래스</xref:System.Security.Permissions.RegistryPermission> 를 참조 하십시오.       다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `My.Computer.Registry` 개체입니다.      | | 참조 |   |--------|---------|   | 레지스트리 키를 만들고 해당 값을 설정 | [하는 방법: 레지스트리 키를 만들고 해당 값을 설정](~/add/includes/ajax-current-ext-md.md)|   | 레지스트리 키를 삭제 | [하는 방법: 레지스트리 키를 삭제](~/add/includes/ajax-current-ext-md.md)|   | 레지스트리에서 데이터 읽기 | [하는 방법: 레지스트리 키에서 값 읽기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads the value `Name` from `HKEY_CURRENT_USER\\Software\\MyApp` and displays it in a message box.  \n  \n [!code-vb[VbVbalrMyRegistry#8](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._2_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      public class RegistryProxy
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot
  id: ClassesRoot
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: ClassesRoot
  nameWithType: RegistryProxy.ClassesRoot
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "반환 된 <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> 형식에 대 한 액세스를 제공 하는 <xref uid=&quot;langword_csharp_HKEY_CLASSES_ROOT&quot; name=&quot;HKEY_CLASSES_ROOT&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "`HKEY_CLASSES_ROOT`Windows의 파일 연결에 대 한 정보를 저장 주로 사용 됩니다.       <xref:System.Security.Permissions.RegistryPermission>에 있는 클래스는 <xref:System.Security.Permissions>네임 스페이스, 레지스트리 변수에 대 한 액세스를 제어 합니다.</xref:System.Security.Permissions> </xref:System.Security.Permissions.RegistryPermission> 레지스트리 변수 메모리 위치에 저장할 필요가 없이 코드 <xref:System.Security.Permissions.RegistryPermission>에 액세스할 수 있습니다.</xref:System.Security.Permissions.RegistryPermission> 마찬가지로, 권한을 부여할 때는 작업을 수행 하는 데 필요한 권한만 부여 합니다.       레지스트리 권한 액세스 값으로 정의 된는 <xref:System.Security.Permissions.RegistryPermissionAccess>열거형.</xref:System.Security.Permissions.RegistryPermissionAccess> 다음 표에서 해당 멤버에 자세히 설명 합니다.      | 값 | 설명 |   |-----------|-----------------|   | AllAccess | 만들기, 읽기 및 쓰기 레지스트리 변수에 액세스 합니다. |   | 만들기 | 레지스트리 변수에 대 한 액세스를 만듭니다. |   | 액세스 권한 없음 | 레지스트리 변수에 액세스할 수 없습니다. |   | 읽기 | 레지스트리 변수에 대 한 읽기 액세스입니다. |   | 쓰기 | 레지스트리 변수에 대 한 쓰기 액세스입니다. |       다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `My.Computer.Registry` 개체입니다.      | | 참조 |   |--------|---------|   | 레지스트리 키를 만들고 해당 값을 설정 | [하는 방법: 레지스트리 키를 만들고 해당 값을 설정](~/add/includes/ajax-current-ext-md.md)|   | 레지스트리 키를 삭제 | [하는 방법: 레지스트리 키를 삭제](~/add/includes/ajax-current-ext-md.md)|   | 레지스트리 키에서 값을 읽기 | [하는 방법: 레지스트리 키에서 값 읽기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example gets the names of the subkeys for the `ClassesRoot` registry key and adds them to `ListBox1`.  \n  \n [!code-vb[VbVbalrMyRegistry#10](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._0_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` in your project."
  syntax:
    content: public Microsoft.Win32.RegistryKey ClassesRoot { get; }
    return:
      type: Microsoft.Win32.RegistryKey
      description: <xref href="Microsoft.Win32.RegistryKey"></xref>
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig
  id: CurrentConfig
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: CurrentConfig
  nameWithType: RegistryProxy.CurrentConfig
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "반환 된 <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> 형식에 대 한 액세스를 제공 하는 <xref uid=&quot;langword_csharp_HKEY_CURRENT_CONFIG&quot; name=&quot;HKEY_CURRENT_CONFIG&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "`HKEY_CURRENT_CONFIG`컴퓨터에 있는 장치에 대 한 설정을 저장을 주로 사용 됩니다.       <xref:System.Security.Permissions.RegistryPermission>에 있는 클래스는 <xref:System.Security.Permissions>네임 스페이스, 레지스트리 변수에 대 한 액세스를 제어 합니다.</xref:System.Security.Permissions> </xref:System.Security.Permissions.RegistryPermission> 레지스트리 변수 메모리 위치에 저장할 필요가 없이 코드 <xref:System.Security.Permissions.RegistryPermission>에 액세스할 수 있습니다.</xref:System.Security.Permissions.RegistryPermission> 마찬가지로, 권한을 부여할 때는 작업을 수행 하는 데 필요한 권한만 부여 합니다.       레지스트리 권한 액세스 값으로 정의 된는 <xref:System.Security.Permissions.RegistryPermissionAccess>열거형.</xref:System.Security.Permissions.RegistryPermissionAccess> 다음 표에서 해당 멤버에 자세히 설명 합니다.      | 값 | 설명 |   |-----------|-----------------|   | AllAccess | 만들기, 읽기 및 쓰기 레지스트리 변수에 액세스 합니다. |   | 만들기 | 레지스트리 변수에 대 한 액세스를 만듭니다. |   | 액세스 권한 없음 | 레지스트리 변수에 액세스할 수 없습니다. |   | 읽기 | 레지스트리 변수에 대 한 읽기 액세스입니다. |   | 쓰기 | 레지스트리 변수에 대 한 쓰기 액세스입니다. |       다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `My.Computer.Registry` 개체입니다.      | | 참조 |   |--------|---------|   | 레지스트리 키를 만들고 해당 값을 설정 | [하는 방법: 레지스트리 키를 만들고 해당 값을 설정](~/add/includes/ajax-current-ext-md.md)|   | 레지스트리 키를 삭제 | [하는 방법: 레지스트리 키를 삭제](~/add/includes/ajax-current-ext-md.md)|   | 레지스트리 키에서 값을 읽기 | [하는 방법: 레지스트리 키에서 값 읽기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example creates the subkey `MyDeviceSettings`.  \n  \n [!code-vb[VbVbalrMyRegistry#5](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._48_1.vb)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey CurrentConfig { get; }
    return:
      type: Microsoft.Win32.RegistryKey
      description: <xref href="Microsoft.Win32.RegistryKey"></xref>
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser
  id: CurrentUser
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: CurrentUser
  nameWithType: RegistryProxy.CurrentUser
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "반환 된 <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> 형식에 대 한 액세스를 제공 하는 <xref uid=&quot;langword_csharp_HKEY_CURRENT_USER&quot; name=&quot;HKEY_CURRENT_USER&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "`HKEY_CURRENT_USER`Windows에 색상 및 글꼴, 같은 사용자별 설정을 저장할 주로 사용 됩니다. 키의 사용자에 따라 다릅니다.       <xref:System.Security.Permissions.RegistryPermission>에 있는 클래스는 <xref:System.Security.Permissions>네임 스페이스, 레지스트리 변수에 대 한 액세스를 제어 합니다.</xref:System.Security.Permissions> </xref:System.Security.Permissions.RegistryPermission> 레지스트리 변수 메모리 위치에 저장할 필요가 없이 코드 <xref:System.Security.Permissions.RegistryPermission>에 액세스할 수 있습니다.</xref:System.Security.Permissions.RegistryPermission> 마찬가지로, 권한을 부여할 때는 작업을 수행 하는 데 필요한 최소한의 권한을 부여 합니다.       레지스트리 권한 액세스 값으로 정의 된는 <xref:System.Security.Permissions.RegistryPermissionAccess>열거형.</xref:System.Security.Permissions.RegistryPermissionAccess> 다음 표에서 해당 멤버에 자세히 설명 합니다.      | 값 | 설명 |   |-----------|-----------------|   | AllAccess | 만들기, 읽기 및 쓰기 레지스트리 변수에 액세스 합니다. |   | 만들기 | 레지스트리 변수에 대 한 액세스를 만듭니다. |   | 액세스 권한 없음 | 레지스트리 변수에 액세스할 수 없습니다. |   | 읽기 | 레지스트리 변수에 대 한 읽기 액세스입니다. |   | 쓰기 | 레지스트리 변수에 대 한 쓰기 액세스입니다. |       다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `My.Computer.Registry` 개체입니다.      | | 참조 |   |--------|---------|   | 레지스트리 키를 만들고 해당 값을 설정 | [하는 방법: 레지스트리 키를 만들고 해당 값을 설정](~/add/includes/ajax-current-ext-md.md)|   | 레지스트리 키를 삭제 | [하는 방법: 레지스트리 키를 삭제](~/add/includes/ajax-current-ext-md.md)|   | 레지스트리 키에서 값을 읽기 | [하는 방법: 레지스트리 키에서 값 읽기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the subkey `Software\\MyCompany\\Preferences\\UserData`.  \n  \n [!code-vb[VbVbalrMyRegistry#2](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._47_1.vb)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey CurrentUser { get; }
    return:
      type: Microsoft.Win32.RegistryKey
      description: <xref href="Microsoft.Win32.RegistryKey"></xref>
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.DynData
  id: DynData
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: DynData
  nameWithType: RegistryProxy.DynData
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.DynData
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "반환 된 <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> 형식에 대 한 액세스를 제공 하는 <xref uid=&quot;langword_csharp_HKEY_DYNDATA&quot; name=&quot;HKEY_DYNDATA&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "`HKEY_DYNDATA`가상 장치 드라이버에서 사용 하는 것과 같은 동적 레지스트리 데이터를 저장 하는 데 사용 되 고 Windows 95/98 시스템 에서만 지원 됩니다. 비-Windows 95/98 시스템에서가 반환한 키의 모든 메서드를 호출 `Registry.DynData`와 같은 `CreateSubKey`, `DeleteSubKey`, `GetSubKeyCount`, `GetValueCount`등 <xref:System.IO.IOException>.</xref:System.IO.IOException> 을 throw 합니다       <xref:System.Security.Permissions.RegistryPermission>에 있는 클래스는 <xref:System.Security.Permissions>네임 스페이스, 레지스트리 변수에 대 한 액세스를 제어 합니다.</xref:System.Security.Permissions> </xref:System.Security.Permissions.RegistryPermission> 레지스트리 변수 메모리 위치에 저장할 필요가 없이 코드 <xref:System.Security.Permissions.RegistryPermission>에 액세스할 수 있습니다.</xref:System.Security.Permissions.RegistryPermission> 마찬가지로, 권한을 부여할 때는 작업을 수행 하는 데 필요한 최소한의 권한을 부여 합니다.       레지스트리 권한 액세스 값으로 정의 된는 <xref:System.Security.Permissions.RegistryPermissionAccess>열거형.</xref:System.Security.Permissions.RegistryPermissionAccess> 다음 표에서 해당 멤버에 자세히 설명 합니다.      | 값 | 설명 |   |-----------|-----------------|   | AllAccess | 만들기, 읽기 및 쓰기 레지스트리 변수에 액세스 합니다. |   | 만들기 | 레지스트리 변수에 대 한 액세스를 만듭니다. |   | 액세스 권한 없음 | 레지스트리 변수에 액세스할 수 없습니다. |   | 읽기 | 레지스트리 변수에 대 한 읽기 액세스입니다. |   | 쓰기 | 레지스트리 변수에 대 한 쓰기 액세스입니다. |       다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `My.Computer.Registry` 개체입니다.      | | 참조 |   |--------|---------|   | 레지스트리 키를 만들고 해당 값을 설정 | [하는 방법: 레지스트리 키를 만들고 해당 값을 설정](~/add/includes/ajax-current-ext-md.md)|   | 레지스트리 키를 삭제 | [하는 방법: 레지스트리 키를 삭제](~/add/includes/ajax-current-ext-md.md)|   | 레지스트리 키에서 값을 읽기 | [하는 방법: 레지스트리 키에서 값 읽기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the subkey tree `Software\\MyCompany\\Preferences`.  \n  \n [!code-vb[VbVbalrMyRegistry#1](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._54_1.vb)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey DynData { get; }
    return:
      type: Microsoft.Win32.RegistryKey
      description: <xref href="Microsoft.Win32.RegistryKey"></xref>
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.DynData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(System.String,System.String,System.Object)
  id: GetValue(System.String,System.String,System.Object)
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: GetValue(String,String,Object)
  nameWithType: RegistryProxy.GetValue(String,String,Object)
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(String,String,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "레지스트리 키에서 값을 가져옵니다."
  remarks: "`valueName`구분 하지 않습니다.       레지스트리 키 이름과 연결 되지 않은 하나의 값을 포함할 수 있습니다. 레지스트리 편집기에서 명명 되지 않은 값이 표시 되 면 &quot;(기본값)&quot; 문자열이 이름 대신 표시 됩니다. 를 검색 하기 위해 명명 되지 않은 값이 지정 null 또는 빈 문자열 (&quot;&quot;)에 대 한 `valueName`합니다.       다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `GetValue` 메서드.      | | 참조 |   |--------|---------|   | 레지스트리 키에서 값을 읽기 | [하는 방법: 레지스트리 키에서 값 읽기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads the value `Name` from `HKEY_CURRENT_USER\\Software\\MyApp` and displays it in a `MessageBox`.  \n  \n [!code-vb[VbVbalrMyRegistry#9](~/add/codesnippet/visualbasic/9a93dcf8-9de6-432f-a595-_1.vb)]"
  syntax:
    content: public object GetValue (string keyName, string valueName, object defaultValue);
    parameters:
    - id: keyName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 값이 있는 검색할 키입니다. 필수 사항입니다."
    - id: valueName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 값을 검색할 수 있습니다. 필수 사항입니다."
    - id: defaultValue
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>. 기본 값을 값 존재 하지 않는 경우 제공 해야 합니다. 필수 사항입니다."
    return:
      type: System.Object
      description: "레지스트리 키에서 값을 가져옵니다."
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에는 레지스트리 키에서 읽는 데 필요한 사용 권한이 없습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> 포함 된 지정 된 값 삭제 되도록 표시 되었습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>keyName</code>올바른 레지스트리 루트와 함께 시작 되지 않습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine
  id: LocalMachine
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: LocalMachine
  nameWithType: RegistryProxy.LocalMachine
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "반환 된 <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> 형식에 대 한 액세스를 제공 하는 <xref uid=&quot;langword_csharp_HKEY_LOCAL_MACHINE&quot; name=&quot;HKEY_LOCAL_MACHINE&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "`HKEY_LOCAL_MACHINE`Windows에서 사용자 마다 달라 지지 않는 설정을 저장 하 일반적으로 사용 됩니다. 컴퓨터의 모든 사용자가이 키를 공유 합니다. 5 개의 하위 키 (`Hardware`, `SAM`, `Security`, `Software`, 및 `System`) 로컬 컴퓨터에 대 한 구성 데이터를 유지 합니다.       <xref:System.Security.Permissions.RegistryPermission>에 있는 클래스는 <xref:System.Security.Permissions>네임 스페이스, 레지스트리 변수에 대 한 액세스를 제어 합니다.</xref:System.Security.Permissions> </xref:System.Security.Permissions.RegistryPermission> 레지스트리 변수 메모리 위치에 저장할 필요가 없이 코드 <xref:System.Security.Permissions.RegistryPermission>에 액세스할 수 있습니다.</xref:System.Security.Permissions.RegistryPermission> 마찬가지로, 권한을 부여할 때는 작업을 수행 하는 데 필요한 최소한의 권한을 부여 합니다.       레지스트리 권한 액세스 값으로 정의 된는 <xref:System.Security.Permissions.RegistryPermissionAccess>열거형.</xref:System.Security.Permissions.RegistryPermissionAccess> 다음 표에서 해당 멤버에 자세히 설명 합니다.      | 값 | 설명 |   |-----------|-----------------|   | AllAccess | 만들기, 읽기 및 쓰기 레지스트리 변수에 액세스 합니다. |   | 만들기 | 레지스트리 변수에 대 한 액세스를 만듭니다. |   | 액세스 권한 없음 | 레지스트리 변수에 액세스할 수 없습니다. |   | 읽기 | 레지스트리 변수에 대 한 읽기 액세스입니다. |   | 쓰기 | 레지스트리 변수에 대 한 쓰기 액세스입니다. |       다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `My.Computer.Registry` 개체입니다.      | | 참조 |   |--------|---------|   | 레지스트리 키를 만들고 해당 값을 설정 | [하는 방법: 레지스트리 키를 만들고 해당 값을 설정](~/add/includes/ajax-current-ext-md.md)|   | 레지스트리 키를 삭제 | [하는 방법: 레지스트리 키를 삭제](~/add/includes/ajax-current-ext-md.md)|   | 레지스트리 키에서 값을 읽기 | [하는 방법: 레지스트리 키에서 값 읽기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens the subkey `Software\\MyCompany\\Preferences` and sets the value `FontColor` to `\"red\"`.  \n  \n [!code-vb[VbVbalrMyRegistry#3](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._97_1.vb)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey LocalMachine { get; }
    return:
      type: Microsoft.Win32.RegistryKey
      description: <xref href="Microsoft.Win32.RegistryKey"></xref>
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData
  id: PerformanceData
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: PerformanceData
  nameWithType: RegistryProxy.PerformanceData
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "반환 된 <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> 형식에 대 한 액세스를 제공 하는 <xref uid=&quot;langword_csharp_HKEY_PERFORMANCE_DATA&quot; name=&quot;HKEY_PERFORMANCE_DATA&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "`HKEY_PERFORMANCE_DATA`소프트웨어 구성 요소에 대 한 성능 정보에 액세스 하는 데 사용 됩니다. 각 소프트웨어 구성 요소는가 설치 되어 실행 하는 동안 카운터 데이터를 기록 하는 경우 해당 개체와 카운터에 대 한 키를 만듭니다. 이 데이터에 액세스할 수는 레지스트리를 사용 해도 레지스트리에 저장 되지 않습니다. 통해 레지스트리 함수를 호출 하는 대신, `HKEY_PERFORMANCE_DATA` 하면 시스템을 적절 한 시스템 개체 관리자에서 데이터를 수집 합니다.       이 키가 Windows 98 시스템;에 없습니다. 호출 이외의 사용 하려는 시도가 `Name` 메서드는 <xref:System.IO.IOException>.</xref:System.IO.IOException> throw       이 키는 일반적으로 쓸 수 없습니다. 에 하위 키를 만들려고 <xref:System.IO.IOException>.</xref:System.IO.IOException> 시킵니다.       <xref:System.Security.Permissions.RegistryPermission>에 있는 클래스는 <xref:System.Security.Permissions>네임 스페이스, 레지스트리 변수에 대 한 액세스를 제어 합니다.</xref:System.Security.Permissions> </xref:System.Security.Permissions.RegistryPermission> 레지스트리 변수 메모리 위치에 저장할 필요가 없이 코드 <xref:System.Security.Permissions.RegistryPermission>에 액세스할 수 있습니다.</xref:System.Security.Permissions.RegistryPermission> 마찬가지로, 권한을 부여할 때는 작업을 수행 하는 데 필요한 최소한의 권한을 부여 합니다.       레지스트리 권한 액세스 값으로 정의 된는 <xref:System.Security.Permissions.RegistryPermissionAccess>열거형.</xref:System.Security.Permissions.RegistryPermissionAccess> 다음 표에서 해당 멤버에 자세히 설명 합니다.      | 값 | 설명 |   |-----------|-----------------|   | AllAccess | 만들기, 읽기 및 쓰기 레지스트리 변수에 액세스 합니다. |   | 만들기 | 레지스트리 변수에 대 한 액세스를 만듭니다. |   | 액세스 권한 없음 | 레지스트리 변수에 액세스할 수 없습니다. |   | 읽기 | 레지스트리 변수에 대 한 읽기 액세스입니다. |   | 쓰기 | 레지스트리 변수에 대 한 쓰기 액세스입니다. |       다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `My.Computer.Registry` 개체입니다.      | | 참조 |   |--------|---------|   | 레지스트리 키를 만들고 해당 값을 설정 | [하는 방법: 레지스트리 키를 만들고 해당 값을 설정](~/add/includes/ajax-current-ext-md.md)|   | 레지스트리 키를 삭제 | [하는 방법: 레지스트리 키를 삭제](~/add/includes/ajax-current-ext-md.md)|   | 레지스트리 키에서 값을 읽기 | [하는 방법: 레지스트리 키에서 값 읽기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example gets the value `ThisSoftwar`e from the `MyCompany` subkey.  \n  \n [!code-vb[VbVbalrMyRegistry#7](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._57_1.vb)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey PerformanceData { get; }
    return:
      type: Microsoft.Win32.RegistryKey
      description: <xref href="Microsoft.Win32.RegistryKey"></xref>
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object)
  id: SetValue(System.String,System.String,System.Object)
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: SetValue(String,String,Object)
  nameWithType: RegistryProxy.SetValue(String,String,Object)
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(String,String,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "레지스트리 키에 값을 씁니다."
  remarks: "지정 된 키 또는 값이 존재 하지 않는 경우 자동으로 만들어집니다.       관련 된 작업의 예로 `My.Computer.Registry.SetValue` 메서드.      | | 참조 |   |--------|---------|   | 레지스트리 키의 값을 설정 | [하는 방법: 레지스트리 키를 만들고 해당 값을 설정](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example sets the value `FontColor` to \"red\" in the key `HKEY_LOCAL_MACHINE\\Software\\MyCompany\\Preferences`.  \n  \n [!code-vb[VbVbalrMyRegistry#3](~/add/codesnippet/visualbasic/fde3d5e5-73de-4529-936f-_1.vb)]"
  syntax:
    content: public void SetValue (string keyName, string valueName, object value);
    parameters:
    - id: keyName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 쓸 키 이름입니다. 필수 사항입니다."
    - id: valueName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 쓸 값의 이름입니다. 필수 사항입니다."
    - id: value
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>. 쓸 값입니다. 필수 사항입니다."
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>keyName</code>올바른 레지스트리 루트와 함께 시작 되지 않습니다.       -또는- <code>valueName</code> 되는 최대 허용 길이 (255 자)를 초과 합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> 읽기 전용 이며 따라서 쓸 수 없는 않으면 예를 들어 루트 수준 노드인 또는 쓰기 액세스 권한이 있는 열려 있지..."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자 만들기 또는 레지스트리 키를 수정 하는 데 필요한 사용 권한이 없습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  id: SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: SetValue(String,String,Object,RegistryValueKind)
  nameWithType: RegistryProxy.SetValue(String,String,Object,RegistryValueKind)
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(String,String,Object,RegistryValueKind)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "레지스트리 키에 값을 씁니다."
  remarks: "지정 된 키 또는 값이 존재 하지 않는 경우 자동으로 만들어집니다.       관련 된 작업의 예로 `My.Computer.Registry.SetValue` 메서드.      | | 참조 |   |--------|---------|   | 레지스트리 키의 값을 설정 | [하는 방법: 레지스트리 키를 만들고 해당 값을 설정](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example sets the value `FontColor` to \"red\" in the key `HKEY_LOCAL_MACHINE\\Software\\MyCompany\\Preferences`.  \n  \n [!code-vb[VbVbalrMyRegistry#3](~/add/codesnippet/visualbasic/a630d4af-e057-4eda-b2b5-_1.vb)]"
  syntax:
    content: public void SetValue (string keyName, string valueName, object value, Microsoft.Win32.RegistryValueKind valueKind);
    parameters:
    - id: keyName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 쓸 키 이름입니다. 필수 사항입니다."
    - id: valueName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 쓸 값의 이름입니다. 필수 사항입니다."
    - id: value
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>. 쓸 값입니다. 필수 사항입니다."
    - id: valueKind
      type: Microsoft.Win32.RegistryValueKind
      description: "<xref href=&quot;Microsoft.Win32.RegistryValueKind&quot;></xref>. 필수 사항입니다."
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>keyName</code>올바른 레지스트리 루트와 함께 시작 되지 않습니다.       -또는- <code>keyName</code> 되는 최대 허용 길이 (255 자)를 초과 합니다.       -또는-유형의 <code>value</code> 로 지정 된 레지스트리 데이터 형식과 일치 하지 않습니다 <code>valueKind</code>, 데이터를 제대로 변환할 수 없는 따라서 합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> 읽기 전용 이며 따라서 쓸 수 없는 않으면 예를 들어 루트 수준 노드인 또는 쓰기 액세스 권한이 있는 열려 있지 합니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자 만들기 또는 레지스트리 키를 수정 하는 데 필요한 사용 권한이 없습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.Users
  id: Users
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: Users
  nameWithType: RegistryProxy.Users
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.Users
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "반환 된 <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> 형식에 대 한 액세스를 제공 하는 <xref uid=&quot;langword_csharp_HKEY_USERS&quot; name=&quot;HKEY_USERS&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "`HKEY_USERS`첫 번째 사용자에 대 한 기본 설정을 저장 하려면 주로 사용 됩니다.       <xref:System.Security.Permissions.RegistryPermission>에 있는 클래스는 <xref:System.Security.Permissions>네임 스페이스, 레지스트리 변수에 대 한 액세스를 제어 합니다.</xref:System.Security.Permissions> </xref:System.Security.Permissions.RegistryPermission> 레지스트리 변수 메모리 위치에 저장할 필요가 없이 코드 <xref:System.Security.Permissions.RegistryPermission>에 액세스할 수 있습니다.</xref:System.Security.Permissions.RegistryPermission> 마찬가지로, 권한을 부여할 때는 작업을 수행 하는 데 필요한 최소한의 권한을 부여 합니다.       레지스트리 권한 액세스 값으로 정의 된는 <xref:System.Security.Permissions.RegistryPermissionAccess>열거형.</xref:System.Security.Permissions.RegistryPermissionAccess> 다음 표에서 해당 멤버에 자세히 설명 합니다.      | 값 | 레지스트리 변수에 대 한 액세스 |   |-----------|----------------------------------|   | AllAccess | 만들기, 읽기 및 쓰기 |   | 만들기 | 만들기 |   | 액세스 권한 없음 | 액세스할 수 없습니다. |   | 읽기 | 읽기 |   | 쓰기 | 쓰기 |       다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `My.Computer.Registry` 개체입니다.      | **To**|**See**|   |------------|-------------|   | 레지스트리 키를 만들고 해당 값을 설정 | [하는 방법: 레지스트리 키를 만들고 해당 값을 설정](~/add/includes/ajax-current-ext-md.md)|   | 레지스트리 키를 삭제 | [하는 방법: 레지스트리 키를 삭제](~/add/includes/ajax-current-ext-md.md)|   | 레지스트리 키에서 값을 읽기 | [하는 방법: 레지스트리 키에서 값 읽기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example counts and displays the number of values in the registry key.  \n  \n [!code-vb[VbVbalrMyRegistry#4](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._74_1.vb)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey Users { get; }
    return:
      type: Microsoft.Win32.RegistryKey
      description: <xref href="Microsoft.Win32.RegistryKey"></xref>
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.Users*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: ClassesRoot
  nameWithType: RegistryProxy.ClassesRoot
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot
- uid: Microsoft.Win32.RegistryKey
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryKey
  nameWithType: RegistryKey
  fullName: Microsoft.Win32.RegistryKey
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: CurrentConfig
  nameWithType: RegistryProxy.CurrentConfig
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: CurrentUser
  nameWithType: RegistryProxy.CurrentUser
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.DynData
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: DynData
  nameWithType: RegistryProxy.DynData
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.DynData
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(System.String,System.String,System.Object)
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: GetValue(String,String,Object)
  nameWithType: RegistryProxy.GetValue(String,String,Object)
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(String,String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: LocalMachine
  nameWithType: RegistryProxy.LocalMachine
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: PerformanceData
  nameWithType: RegistryProxy.PerformanceData
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object)
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: SetValue(String,String,Object)
  nameWithType: RegistryProxy.SetValue(String,String,Object)
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(String,String,Object)
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: SetValue(String,String,Object,RegistryValueKind)
  nameWithType: RegistryProxy.SetValue(String,String,Object,RegistryValueKind)
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(String,String,Object,RegistryValueKind)
- uid: Microsoft.Win32.RegistryValueKind
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryValueKind
  nameWithType: RegistryValueKind
  fullName: Microsoft.Win32.RegistryValueKind
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.Users
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: Users
  nameWithType: RegistryProxy.Users
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.Users
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot*
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: ClassesRoot
  nameWithType: RegistryProxy.ClassesRoot
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig*
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: CurrentConfig
  nameWithType: RegistryProxy.CurrentConfig
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser*
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: CurrentUser
  nameWithType: RegistryProxy.CurrentUser
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.DynData*
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: DynData
  nameWithType: RegistryProxy.DynData
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue*
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: GetValue
  nameWithType: RegistryProxy.GetValue
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine*
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: LocalMachine
  nameWithType: RegistryProxy.LocalMachine
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData*
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: PerformanceData
  nameWithType: RegistryProxy.PerformanceData
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue*
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: SetValue
  nameWithType: RegistryProxy.SetValue
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.Users*
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: Users
  nameWithType: RegistryProxy.Users
