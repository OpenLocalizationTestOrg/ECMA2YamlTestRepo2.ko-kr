### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.LingerOption
  id: LingerOption
  children:
  - System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)
  - System.Net.Sockets.LingerOption.Enabled
  - System.Net.Sockets.LingerOption.LingerTime
  langs:
  - csharp
  name: LingerOption
  nameWithType: LingerOption
  fullName: System.Net.Sockets.LingerOption
  type: Class
  summary: "지정 여부는 <xref:System.Net.Sockets.Socket>를 호출한 후에 연결 되어 있습니다는 <> </> *> 또는 <> </> *> 연결 메서드와 유지 될 시간 길이를 보내도록 유지 되는 데이터입니다.</xref:System.Net.Sockets.Socket>"
  remarks: "여전히 제공 될 수 있습니다 데이터 나가는 네트워크 버퍼에서 응용 프로그램이 호출 후의 <xref:System.Net.Sockets.Socket>또는 <xref:System.Net.Sockets.TcpClient>메서드.</xref:System.Net.Sockets.TcpClient> </xref:System.Net.Sockets.Socket> 크기를 지정 하려는 경우에 <xref:System.Net.Sockets.Socket>와 LingerOption 만들기, 닫는 태그 뒤 되지 않은 데이터를 전송 하려고 합니다는 `enable` 매개 변수 설정 `true`, 및 `seconds` 매개 변수는 원하는 기간으로 설정 합니다.</xref:System.Net.Sockets.Socket> `seconds` 매개 변수는 원하는 시간을 나타내는 데 사용 되는 <xref:System.Net.Sockets.Socket>시간 초과 전까지 연결 하려면.</xref:System.Net.Sockets.Socket> 원하지 않는 경우는 <xref:System.Net.Sockets.Socket>닫힌 후 모든 길이 대 한 연결 상태 유지를 LingerOption 인스턴스를 만듭니다는 `enable` 매개 변수 설정 `true` 및 `seconds` 매개 변수를&0;으로 설정 합니다.</xref:System.Net.Sockets.Socket> 이 경우에 <xref:System.Net.Sockets.Socket>는 즉시 닫히고 전송 되지 않은 데이터는 손실 됩니다.</xref:System.Net.Sockets.Socket> 를 만든 후에 LingerOption 전달는 <xref:System.Net.Sockets.Socket.SetSocketOption%2A?displayProperty=fullName>메서드.</xref:System.Net.Sockets.Socket.SetSocketOption%2A?displayProperty=fullName> 보내고 사용 하 여 데이터를 받는 경우는 <xref:System.Net.Sockets.TcpClient>, 다음의 LingerOption 인스턴스를 설정 하는 <xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName>속성.</xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName> </xref:System.Net.Sockets.TcpClient>       IP 스택에서 연결의 왕복 시간을 기반으로 사용 하려면 기본 IP 프로토콜 제한 시간을 계산 합니다. 대부분의 경우에는 스택에서 계산 된 시간 제한은 응용 프로그램에 의해 정의 된 보다 상대적입니다. 이것이 기본 동작에 대 한는 <xref:System.Net.Sockets.Socket>때는 <xref:System.Net.Sockets.Socket.LingerState%2A>속성이 설정 되지 않은 및에 대 한는 <xref:System.Net.Sockets.TcpClient>때는 <xref:System.Net.Sockets.TcpClient.LingerState%2A>속성이 설정 되지 않았습니다.</xref:System.Net.Sockets.TcpClient.LingerState%2A> </xref:System.Net.Sockets.TcpClient> </xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.Socket>"
  example:
  - "The following example sets a previously created <xref:System.Net.Sockets.Socket> to linger one second after calling the <xref:System.Net.Sockets.Socket.Close%2A> method.  \n  \n [!code-cpp[Classic LingerOption Example#1](~/add/codesnippet/cpp/t-system.net.sockets.lin_1.cpp)]\n [!code-cs[Classic LingerOption Example#1](~/add/codesnippet/csharp/t-system.net.sockets.lin_1.cs)]\n [!code-vb[Classic LingerOption Example#1](~/add/codesnippet/visualbasic/t-system.net.sockets.lin_1.vb)]"
  syntax:
    content: public class LingerOption
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)
  id: '#ctor(System.Boolean,System.Int32)'
  parent: System.Net.Sockets.LingerOption
  langs:
  - csharp
  name: LingerOption(Boolean,Int32)
  nameWithType: LingerOption.LingerOption(Boolean,Int32)
  fullName: System.Net.Sockets.LingerOption.LingerOption(Boolean,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.Sockets.LingerOption&quot;> </xref> 클래스입니다."
  remarks: "여전히 제공 될 수 있습니다 데이터 나가는 네트워크 버퍼에 있는 <xref:System.Net.Sockets.Socket>.</xref:System.Net.Sockets.Socket> 를 닫은 후 사용 하 여는 `enable` 허용할지 여부를 지정 하려면 매개 변수는 <xref:System.Net.Sockets.Socket>close 메서드가 호출 된 후 전송 되지 않은 데이터를 전송 합니다. 계속 하려면.</xref:System.Net.Sockets.Socket> 사용 하 여는 `seconds` 원하는 기간을 나타내는 매개 변수를는 <xref:System.Net.Sockets.Socket>시간 초과 전까지 보내지 않은 데이터를 전송 하려고 합니다.</xref:System.Net.Sockets.Socket> 지정 하는 경우 `true` 에 대 한는 `enable` 매개 변수 및 0에 대 한는 `seconds` 매개 변수는 <xref:System.Net.Sockets.Socket>는 나가는 네트워크 버퍼에 데이터가 남아 있지 않을 때까지 데이터를 보내려고 시도 합니다.</xref:System.Net.Sockets.Socket> 지정 하는 경우 `false` 에 대 한는 `enable` 매개 변수는 <xref:System.Net.Sockets.Socket>는 즉시 닫히고 전송 되지 않은 데이터는 손실 됩니다.</xref:System.Net.Sockets.Socket>       동작을 설명 하는 다음 표에서 <xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName>및 <xref:System.Net.Sockets.TcpClient.Close%2A?displayProperty=fullName>의 가능한 값에 따라 메서드는 `enable` 및 `seconds` T:System.Net.Sockets.LingerOption 인스턴스를 만들고에서 설정 매개 변수는 <xref:System.Net.Sockets.Socket.LingerState%2A?displayProperty=fullName>또는 <xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName>속성.</xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName> </xref:System.Net.Sockets.Socket.LingerState%2A?displayProperty=fullName> </xref:System.Net.Sockets.TcpClient.Close%2A?displayProperty=fullName> </xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName>      | `enable`|`seconds`| 동작 |   |--------------|---------------|--------------|   | `false` (해제) 기본값 | 제한 시간이 적용 되지 않습니다 (기본값). | IP 프로토콜 제한 시간 기본값 될 때까지 보류 중인 연결 지향 소켓 (예: TCP)에 대 한 데이터 전송을 시도 만료. |   | `true` (사용) |&0;이 아닌 시간 제한 | 지정된 된 제한 시간이 만료 되 고 시도가 실패 하면 다음 Winsock 다시 설정 연결 될 때까지 보류 중인 데이터를 보내려고 시도 합니다. |   | `true` (사용) |&0; 시간 제한입니다. | 보류 중인 데이터를 삭제합니다. Winsock 소켓 연결 지향 (예: TCP)에 대 한 연결을 다시 설정 합니다. |       IP 스택에서 연결의 왕복 시간을 기반으로 사용 하려면 기본 IP 프로토콜 제한 시간을 계산 합니다. 대부분의 경우에는 스택에서 계산 된 시간 제한은 응용 프로그램에 의해 정의 된 보다 상대적입니다. 이 소켓에 대 한 기본 동작 때는 <xref:System.Net.Sockets.Socket.LingerState%2A>속성이 설정 되지 않았습니다.</xref:System.Net.Sockets.Socket.LingerState%2A>       경우는 <xref:System.Net.Sockets.LingerOption.LingerTime%2A>속성에 저장 된 <xref:System.Net.Sockets.Socket.LingerState%2A>속성이 기본 IP 프로토콜 제한 시간 보다 큰 설정 되어 있으면 기본 IP 프로토콜 시간 제한이 적용 되 고 재정의.</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.LingerOption.LingerTime%2A>"
  example:
  - "The following example sets a previously created <xref:System.Net.Sockets.Socket> to linger one second after calling the <xref:System.Net.Sockets.Socket.Close%2A> method.  \n  \n [!code-cpp[Classic LingerOption Example#1](~/add/codesnippet/cpp/m-system.net.sockets.lin_1.cpp)]\n [!code-cs[Classic LingerOption Example#1](~/add/codesnippet/csharp/m-system.net.sockets.lin_1.cs)]\n [!code-vb[Classic LingerOption Example#1](~/add/codesnippet/visualbasic/m-system.net.sockets.lin_1.vb)]"
  syntax:
    content: public LingerOption (bool enable, int seconds);
    parameters:
    - id: enable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>후 연결 상태를 유지 하는 &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt; 메서드 호출, 되지 않았으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: seconds
      type: System.Int32
      description: "후 연결 유지 시간 (초)의 수는 &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt; 메서드를 호출 합니다."
  overload: System.Net.Sockets.LingerOption.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.LingerOption.Enabled
  id: Enabled
  parent: System.Net.Sockets.LingerOption
  langs:
  - csharp
  name: Enabled
  nameWithType: LingerOption.Enabled
  fullName: System.Net.Sockets.LingerOption.Enabled
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "후 링거 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref:System.Net.Sockets.Socket>닫힙니다.</xref:System.Net.Sockets.Socket>"
  remarks: "Enabled 속성을 사용 하 여 확인 여부는 <xref:System.Net.Sockets.Socket>이 닫힌 후 링거.</xref:System.Net.Sockets.Socket> 이 값을 변경할 `true` 또는 `false` 변경 된 전달 <xref:System.Net.Sockets.LingerOption>에 <xref:System.Net.Sockets.Socket.SetSocketOption%2A>메서드나 집합은 <xref:System.Net.Sockets.TcpClient.LingerState%2A>또는 <xref:System.Net.Sockets.Socket.LingerState%2A>링거 활성화 하거나 비활성화 합니다.</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.TcpClient.LingerState%2A> </xref:System.Net.Sockets.Socket.SetSocketOption%2A> </xref:System.Net.Sockets.LingerOption>       다음 표에서 Enabled 속성의 가능한 값에 대 한 동작을 설명 및 <xref:System.Net.Sockets.LingerOption.LingerTime%2A>속성에 저장 된 <xref:System.Net.Sockets.Socket.LingerState%2A>속성.</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.LingerOption.LingerTime%2A>      | `enable`|`seconds`| 동작 |   |--------------|---------------|--------------|   | `false` (해제) 기본값 | 제한 시간이 적용 되지 않습니다 (기본값). | IP 프로토콜 제한 시간 기본값 될 때까지 보류 중인 연결 지향 소켓 (예: TCP)에 대 한 데이터 전송을 시도 만료. |   | `true` (사용) |&0;이 아닌 시간 제한 | 지정된 된 제한 시간이 만료 되 고 시도가 실패 하면 다음 Winsock 다시 설정 연결 될 때까지 보류 중인 데이터를 보내려고 시도 합니다. |   | `true` (사용) |&0; 시간 제한입니다. | 보류 중인 데이터를 삭제합니다. Winsock 소켓 연결 지향 (예: TCP)에 대 한 연결을 다시 설정 합니다. |       IP 스택에서 연결의 왕복 시간을 기반으로 사용 하려면 기본 IP 프로토콜 제한 시간을 계산 합니다. 대부분의 경우에는 스택에서 계산 된 시간 제한은 응용 프로그램에 의해 정의 된 보다 상대적입니다. 이 소켓에 대 한 기본 동작 때는 <xref:System.Net.Sockets.Socket.LingerState%2A>속성이 설정 되지 않았습니다.</xref:System.Net.Sockets.Socket.LingerState%2A>       경우는 <xref:System.Net.Sockets.LingerOption.LingerTime%2A>속성에 저장 된 <xref:System.Net.Sockets.Socket.LingerState%2A>속성이 기본 IP 프로토콜 제한 시간 보다 큰 설정 되어 있으면 기본 IP 프로토콜 시간 제한이 적용 되 고 재정의.</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.LingerOption.LingerTime%2A>"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.Net.Sockets.Socket>후 링거 해야 &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt; 고, 그러지 않으면 호출 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Net.Sockets.Socket>"
  overload: System.Net.Sockets.LingerOption.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.LingerOption.LingerTime
  id: LingerTime
  parent: System.Net.Sockets.LingerOption
  langs:
  - csharp
  name: LingerTime
  nameWithType: LingerOption.LingerTime
  fullName: System.Net.Sockets.LingerOption.LingerTime
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "호출한 후 연결 상태를 유지 하는 기간을 가져오거나 설정 합니다.는 &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt; 메서드 데이터를 보내도록 유지 되는 경우."
  remarks: "긴 닫힌 확인 하려는 경우이 값을 사용 하 여 <xref:System.Net.Sockets.Socket>시간 초과 전까지 되지 않은 데이터를 전송 하려고 합니다.</xref:System.Net.Sockets.Socket> 원하는 제한 시간 (초)을이 값을 설정할 수도 있습니다.       경우는 <xref:System.Net.Sockets.LingerOption.Enabled%2A>속성은 `true`, LingerTime 0으로 설정 하 고는 <xref:System.Net.Sockets.Socket>나가는 네트워크 버퍼에 보낼 데이터를 보류 중인 삭제.</xref:System.Net.Sockets.Socket> </xref:System.Net.Sockets.LingerOption.Enabled%2A> 이 값을 변경 하는 경우 변경 된 전달 해야 <xref:System.Net.Sockets.LingerOption>인스턴스는 <xref:System.Net.Sockets.Socket.SetSocketOption%2A>메서드 또는 집합은 <xref:System.Net.Sockets.TcpClient.LingerState%2A>또는 <xref:System.Net.Sockets.Socket.LingerState%2A>속성.</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.TcpClient.LingerState%2A> </xref:System.Net.Sockets.Socket.SetSocketOption%2A> </xref:System.Net.Sockets.LingerOption>       가능한 값에 대 한 동작을 설명 하는 다음 표에서 <xref:System.Net.Sockets.LingerOption.Enabled%2A>속성과 LingerTime 속성에 저장 된는 <xref:System.Net.Sockets.Socket.LingerState%2A>속성.</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.LingerOption.Enabled%2A>      | `enable`|`seconds`| 동작 |   |--------------|---------------|--------------|   | `false` (해제) 기본값 | 제한 시간이 적용 되지 않습니다 (기본값). | IP 프로토콜 제한 시간 기본값 될 때까지 보류 중인 연결 지향 소켓 (예: TCP)에 대 한 데이터 전송을 시도 만료. |   | `true` (사용) |&0;이 아닌 시간 제한 | 지정된 된 제한 시간이 만료 되 고 시도가 실패 하면 다음 Winsock 다시 설정 연결 될 때까지 보류 중인 데이터를 보내려고 시도 합니다. |   | `true` (사용) |&0; 시간 제한입니다. | 보류 중인 데이터를 삭제합니다. Winsock 소켓 연결 지향 (예: TCP)에 대 한 연결을 다시 설정 합니다. |       IP 스택에서 연결의 왕복 시간을 기반으로 사용 하려면 기본 IP 프로토콜 제한 시간을 계산 합니다. 대부분의 경우에는 스택에서 계산 된 시간 제한은 응용 프로그램에 의해 정의 된 보다 상대적입니다. 이 소켓에 대 한 기본 동작 때는 <xref:System.Net.Sockets.Socket.LingerState%2A>속성이 설정 되지 않았습니다.</xref:System.Net.Sockets.Socket.LingerState%2A>       LingerTime 속성에 저장 하는 경우는 <xref:System.Net.Sockets.Socket.LingerState%2A>속성이 기본 IP 프로토콜 제한 시간 보다 큰 설정 되어 있으면 기본 IP 프로토콜 시간 제한이 적용 되 고 재정의.</xref:System.Net.Sockets.Socket.LingerState%2A>"
  example:
  - "The following example displays the value of this property.  \n  \n [!code-cs[Socket_Socket_Options#2](~/add/codesnippet/csharp/p-system.net.sockets.lin_1.cs)]\n [!code-cpp[Socket_Socket_Options#2](~/add/codesnippet/cpp/p-system.net.sockets.lin_1.cpp)]\n [!code-vb[Socket_Socket_Options#2](~/add/codesnippet/visualbasic/p-system.net.sockets.lin_1.vb)]"
  syntax:
    content: public int LingerTime { get; set; }
    return:
      type: System.Int32
      description: "시간 (초)을 호출한 후에 연결 되어 &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt;합니다."
  overload: System.Net.Sockets.LingerOption.LingerTime*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerOption(Boolean,Int32)
  nameWithType: LingerOption.LingerOption(Boolean,Int32)
  fullName: System.Net.Sockets.LingerOption.LingerOption(Boolean,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.LingerOption.Enabled
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: Enabled
  nameWithType: LingerOption.Enabled
  fullName: System.Net.Sockets.LingerOption.Enabled
- uid: System.Net.Sockets.LingerOption.LingerTime
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerTime
  nameWithType: LingerOption.LingerTime
  fullName: System.Net.Sockets.LingerOption.LingerTime
- uid: System.Net.Sockets.LingerOption.#ctor*
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerOption
  nameWithType: LingerOption.LingerOption
- uid: System.Net.Sockets.LingerOption.Enabled*
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: Enabled
  nameWithType: LingerOption.Enabled
- uid: System.Net.Sockets.LingerOption.LingerTime*
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerTime
  nameWithType: LingerOption.LingerTime
