### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.SecurityTokenProvider
  id: SecurityTokenProvider
  children:
  - System.IdentityModel.Selectors.SecurityTokenProvider.#ctor
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)
  - System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(System.TimeSpan)
  - System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
  - System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
  langs:
  - csharp
  name: SecurityTokenProvider
  nameWithType: SecurityTokenProvider
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider
  type: Class
  summary: "SOAP 메시지 보낸 사람에 대 한 보안 토큰을 처리 하는 보안 토큰 공급자를 나타냅니다."
  remarks: "사용자 지정 보안 토큰은 필요한 경우 SecurityTokenProvider 클래스를 사용 합니다. 클라이언트에서 SOAP 메시지는 전송 및 보안 토큰은 클라이언트를 인증 하거나 SOAP 메시지를 보호 하려면 사용 하는 경우 보안 토큰을 얻을 수는 보안 토큰 공급자의 역할이입니다. 특히,는 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>메서드는 보안 토큰을 가져옵니다.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> 취소 하 고 사용 하 여 보안 갱신할 보안 토큰 공급자를 호출할 수도 있습니다는 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A>및 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A>메서드.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A> </xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A>       파생 된 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenManager>클래스 구현에서 <xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%2A>메서드를 보안 토큰 공급자는이 보안 토큰에 대 한 필요한 지 확인 합니다.</xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%2A> </xref:System.IdentityModel.Selectors.SecurityTokenManager>       <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager>및 <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager>클래스는 토큰 형식을 기본 제공 보안에 대 한 기본 구현을 제공 합니다.</xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager> </xref:System.ServiceModel.ClientCredentialsSecurityTokenManager> 사용자 지정 보안 토큰 시나리오에 대 한 중 하나에서 클래스를 파생 해야 합니다는 <xref:System.IdentityModel.Selectors.SecurityTokenManager>, <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager>, 또는 <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager>클래스 및 보안 토큰 공급자, 보안 토큰 인증자 및 사용자 지정 보안 토큰에 대 한 보안 토큰 serializer를 만드는 기능을 제공 합니다.</xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager> </xref:System.ServiceModel.ClientCredentialsSecurityTokenManager> </xref:System.IdentityModel.Selectors.SecurityTokenManager> [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]사용자 지정 토큰을 만드는 참조 [하는 방법: 사용자 지정 토큰 만들기](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - >-
    [!code-vb[SecurityTokenProvider#0](~/add/codesnippet/visualbasic/t-system.identitymodel.s_9_1.vb)]
     [!code-cs[SecurityTokenProvider#0](~/add/codesnippet/csharp/t-system.identitymodel.s_9_1.cs)]
  syntax:
    content: public abstract class SecurityTokenProvider
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: SecurityTokenProvider()
  nameWithType: SecurityTokenProvider.SecurityTokenProvider()
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenProvider()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenProvider&quot;> </xref> 클래스입니다."
  syntax:
    content: protected SecurityTokenProvider ();
    parameters: []
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  id: BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "보안 토큰을 취소 하기 위해 비동기 작업을 시작 합니다."
  remarks: "발급 된 토큰과 같이 취소할 수 있는 보안 토큰을 함께 수행 되는 경우 취소 하는 보안 토큰을 요청한 클라이언트가 수 있습니다."
  syntax:
    content: public IAsyncResult BeginCancelToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>보안 토큰을 취소 하는 메시지에 대 한 제한 시간 값을 지정 하는.</xref:System.TimeSpan>"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 취소 합니다."
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>비동기 닫기 작업의 완료에 대 한 알림을 수신 하는 대리자입니다.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "비동기 닫기 작업과 연결 된 상태 정보를 포함 하는 응용 프로그램이 지정한는 개체입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>비동기 취소 작업을 참조 하는.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  id: BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "보안 토큰을 취소 하기 위해 비동기 작업을 시작 합니다."
  remarks: "발급 된 토큰과 같이 취소할 수 있는 보안 토큰을 함께 수행 되는 경우 취소 하는 보안 토큰을 요청한 클라이언트가 수 있습니다."
  syntax:
    content: protected virtual IAsyncResult BeginCancelTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>보안 토큰을 취소 하는 메시지에 대 한 제한 시간 값을 지정 하는.</xref:System.TimeSpan>"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 취소 합니다."
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>비동기 닫기 작업의 완료에 대 한 알림을 수신 하는 대리자입니다.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "비동기 닫기 작업과 연결 된 상태 정보를 포함 하는 응용 프로그램이 지정한는 개체입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>비동기 취소 작업을 참조 하는.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginGetToken(TimeSpan,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginGetToken(TimeSpan,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "보안 토큰을 가져오기 위한 비동기 작업을 시작 합니다."
  remarks: "BeginGetToken 메서드 호출의 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A>메서드.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A>"
  syntax:
    content: public IAsyncResult BeginGetToken (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>보안 토큰을 가져오는 메시지에 대 한 제한 시간 값을 지정 하는.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>비동기 닫기 작업의 완료에 대 한 알림을 수신 하는 대리자입니다.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "비동기 닫기 작업과 연결 된 상태 정보를 포함 하는 응용 프로그램이 지정한는 개체입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>비동기 닫기 작업을 참조 하는.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "보안 토큰을 가져오기 위한 비동기 작업을 시작 합니다."
  remarks: "상속 하는 경우는 <xref:System.IdentityModel.Selectors.SecurityTokenProvider>비동기 메서드를 재정의 하지 않아도 됩니다 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenProvider>기본 클래스가 동기 메서드 기반의 비동기 지원을 제공 하므로.</xref:System.IdentityModel.Selectors.SecurityTokenProvider> </xref:System.IdentityModel.Selectors.SecurityTokenProvider> 따라서 않아도 됩니다 BeginGetTokenCore 메서드를 재정의 하 자체적인 비동기 구현을 제공 해야 합니다.       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A>메서드 BeginGetTokenCore 메서드를 호출 합니다.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A>"
  syntax:
    content: protected virtual IAsyncResult BeginGetTokenCore (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>보안 토큰을 가져오는 메시지에 대 한 제한 시간 값을 지정 하는.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>비동기 닫기 작업의 완료에 대 한 알림을 수신 하는 대리자입니다.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "비동기 닫기 작업과 연결 된 상태 정보를 포함 하는 응용 프로그램이 지정한는 개체입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>비동기 작업을 참조 하는.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  id: BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "보안 토큰을 갱신 하는 비동기 작업을 시작 합니다."
  remarks: "BeginRenewToken 메서드 호출의 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A>메서드.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A>"
  syntax:
    content: public IAsyncResult BeginRenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>보안 토큰을 갱신 하는 메시지에 대 한 제한 시간 값을 지정 하는.</xref:System.TimeSpan>"
    - id: tokenToBeRenewed
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 를 갱신 합니다."
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>비동기 닫기 작업의 완료에 대 한 알림을 수신 하는 대리자입니다.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "비동기 닫기 작업과 연결 된 상태 정보를 포함 하는 응용 프로그램이 지정한는 개체입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>비동기 작업을 참조 하는.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  id: BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "보안 토큰을 갱신 하는 비동기 작업을 시작 합니다."
  remarks: "상속 하는 경우는 <xref:System.IdentityModel.Selectors.SecurityTokenProvider>비동기 메서드를 재정의 하지 않아도 됩니다 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenProvider>기본 클래스가 동기 메서드 기반의 비동기 지원을 제공 하므로.</xref:System.IdentityModel.Selectors.SecurityTokenProvider> </xref:System.IdentityModel.Selectors.SecurityTokenProvider> 따라서 않아도 됩니다 BeginRenewTokenCore 메서드를 재정의 하 자체적인 비동기 구현을 제공 해야 합니다.       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A>메서드 BeginRenewTokenCore 메서드를 호출 합니다.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A>"
  syntax:
    content: protected virtual IAsyncResult BeginRenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>보안 토큰을 갱신 하는 메시지에 대 한 제한 시간 값을 지정 하는.</xref:System.TimeSpan>"
    - id: tokenToBeRenewed
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 를 갱신 합니다."
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>비동기 닫기 작업의 완료에 대 한 알림을 수신 하는 대리자입니다.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "비동기 닫기 작업과 연결 된 상태 정보를 포함 하는 응용 프로그램이 지정한는 개체입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>비동기 작업을 참조 하는.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  id: CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: CancelToken(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.CancelToken(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(TimeSpan,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "보안 토큰을 취소 합니다."
  remarks: "발급 된 토큰과 같이 취소할 수 있는 보안 토큰을 함께 수행 되는 경우 취소 하는 보안 토큰을 요청한 클라이언트가 수 있습니다.       CancelToken 메서드 호출 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A>메서드.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A>"
  syntax:
    content: public void CancelToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>보안 토큰을 취소 하는 메시지에 대 한 제한 시간 값을 지정 하는.</xref:System.TimeSpan>"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 취소 합니다."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  id: CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: CancelTokenCore(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.CancelTokenCore(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(TimeSpan,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "보안 토큰을 취소 합니다."
  remarks: "발급 된 토큰과 같이 취소할 수 있는 보안 토큰을 함께 수행 되는 경우 취소 하는 보안 토큰을 요청한 클라이언트가 수 있습니다.       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A>메서드 CancelTokenCore 메서드를 호출 합니다.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A>       throw 하면 CancelTokenCore 메서드를 재정의 하 고 토큰 매개 변수로 전달 된 보안 토큰을 취소할 수 없습니다는 <xref:System.IdentityModel.Tokens.SecurityTokenException>예외.</xref:System.IdentityModel.Tokens.SecurityTokenException>"
  syntax:
    content: protected virtual void CancelTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>보안 토큰을 취소 하는 메시지에 대 한 제한 시간 값을 지정 하는.</xref:System.TimeSpan>"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 취소 합니다."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)
  id: EndCancelToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndCancelToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndCancelToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "보안 토큰을 취소 하기 위해 비동기 작업을 완료 합니다."
  remarks: "발급 된 토큰과 같이 취소할 수 있는 보안 토큰을 함께 수행 되는 경우 취소 하는 보안 토큰을 요청한 클라이언트가 수 있습니다.       EndCancelToken 메서드 호출 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A>메서드.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A>"
  syntax:
    content: public void EndCancelToken (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>에 대 한 호출에서 반환 하는 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken*>메서드.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken*> </xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)
  id: EndCancelTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndCancelTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndCancelTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "보안 토큰을 취소 하기 위해 비동기 작업을 완료 합니다."
  remarks: "발급 된 토큰과 같이 취소할 수 있는 보안 토큰을 함께 수행 되는 경우 취소 하는 보안 토큰을 요청한 클라이언트가 수 있습니다.       상속 하는 경우는 <xref:System.IdentityModel.Selectors.SecurityTokenProvider>비동기 메서드를 재정의 하지 않아도 됩니다 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenProvider>기본 클래스가 동기 메서드 기반의 비동기 지원을 제공 하므로.</xref:System.IdentityModel.Selectors.SecurityTokenProvider> </xref:System.IdentityModel.Selectors.SecurityTokenProvider> 따라서 않아도 됩니다 EndCancelTokenCore 메서드를 재정의 하 자체적인 비동기 구현을 제공 해야 합니다.       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A>메서드 EndCancelTokenCore 메서드를 호출 합니다.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A>"
  syntax:
    content: protected virtual void EndCancelTokenCore (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>에 대 한 호출에서 반환 하는 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore*>메서드.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore*> </xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)
  id: EndGetToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndGetToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndGetToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "보안 토큰을 가져오기 위해 비동기 작업을 완료 합니다."
  remarks: "EndGetToken 메서드 호출의 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A>메서드.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken EndGetToken (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>에 대 한 호출에서 반환 하는 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken*>메서드.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 보안 토큰을 나타내는입니다."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)
  id: EndGetTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndGetTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndGetTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "보안 토큰을 가져오기 위해 비동기 작업을 완료 합니다."
  remarks: "상속 하는 경우는 <xref:System.IdentityModel.Selectors.SecurityTokenProvider>비동기 메서드를 재정의 하지 않아도 됩니다 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenProvider>기본 클래스가 동기 메서드 기반의 비동기 지원을 제공 하므로.</xref:System.IdentityModel.Selectors.SecurityTokenProvider> </xref:System.IdentityModel.Selectors.SecurityTokenProvider> 따라서 않아도 됩니다 EndGetTokenCore 메서드를 재정의 하 자체적인 비동기 구현을 제공 해야 합니다.       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A>메서드 EndGetTokenCore 메서드를 호출 합니다.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityToken EndGetTokenCore (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>에 대 한 호출에서 반환 하는 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore*>메서드.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 보안 토큰을 나타내는입니다."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)
  id: EndRenewToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndRenewToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndRenewToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "보안 토큰을 갱신 하기 위해 비동기 작업을 완료 합니다."
  remarks: "EndRenewToken 메서드 호출의 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A>메서드.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken EndRenewToken (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>에 대 한 호출에서 반환 하는 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken*>메서드.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 갱신 된 보안 토큰을 나타내는입니다."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)
  id: EndRenewTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndRenewTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndRenewTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "보안 토큰을 갱신 하기 위해 비동기 작업을 완료 합니다."
  remarks: "상속 하는 경우는 <xref:System.IdentityModel.Selectors.SecurityTokenProvider>비동기 메서드를 재정의 하지 않아도 됩니다 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenProvider>기본 클래스가 동기 메서드 기반의 비동기 지원을 제공 하므로.</xref:System.IdentityModel.Selectors.SecurityTokenProvider> </xref:System.IdentityModel.Selectors.SecurityTokenProvider> 따라서 않아도 됩니다 EndRenewTokenCore 메서드를 재정의 하 자체적인 비동기 구현을 제공 해야 합니다.       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A>메서드 EndRenewTokenCore 메서드를 호출 합니다.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityToken EndRenewTokenCore (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>에 대 한 호출에서 반환 하는 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore*>메서드.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 갱신 된 보안 토큰을 나타내는입니다."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)
  id: GetToken(System.TimeSpan)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: GetToken(TimeSpan)
  nameWithType: SecurityTokenProvider.GetToken(TimeSpan)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(TimeSpan)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "보안 토큰을 가져옵니다."
  remarks: "GetToken 메서드를 호출는 <xref:System.ServiceModel.Description.ClientCredentials>클라이언트가 SOAP 메시지를 보내고 보안 토큰은 필요한 경우 클래스.</xref:System.ServiceModel.Description.ClientCredentials>       GetToken 메서드 호출의 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A>메서드.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A>       대부분의 경우에는 `timeout` <xref:System.IdentityModel.Selectors.SecurityTokenProvider> <xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider>.</xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider> 등</xref:System.IdentityModel.Selectors.SecurityTokenProvider> 의 파생된 클래스에서 매개 변수를 사용 하지 않는 그러나 경우에 따라 보안 토큰을 검색 하려면 분산 메시징 합니다. 예로 <xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider>페더레이션된 서비스에 사용 되는.</xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider> 이러한 경우에는 `timeout` 네트워크 오류, 메시지 손실 및 기타 오류 조건에 의해 발생 된 예외를 방지 하기 위해 매개 변수를 사용 합니다."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken GetToken (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>보안 토큰을 가져오는 메시지에 대 한 제한 시간 값을 지정 하는.</xref:System.TimeSpan>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 가져올 보안 토큰을 나타내는입니다."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(System.TimeSpan)
  id: GetTokenCore(System.TimeSpan)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: GetTokenCore(TimeSpan)
  nameWithType: SecurityTokenProvider.GetTokenCore(TimeSpan)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(TimeSpan)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "보안 토큰을 가져옵니다."
  remarks: "throw 하면 GetTokenCore 메서드를 재정의 하 고 토큰 매개 변수로 전달 된 보안 토큰을 가져올 수 없습니다는 <xref:System.IdentityModel.Tokens.SecurityTokenException>예외.</xref:System.IdentityModel.Tokens.SecurityTokenException>       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>메서드는 <xref:System.ServiceModel.Description.ClientCredentials>클라이언트가 SOAP 메시지를 보내고 보안 토큰은 필요한 경우 클래스.</xref:System.ServiceModel.Description.ClientCredentials> </xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>메서드 GetTokenCore 메서드를 호출 합니다.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>"
  example:
  - >-
    [!code-vb[SecurityTokenProvider#1](~/add/codesnippet/visualbasic/501effc0-dded-4b3b-893a-_1.vb)]
     [!code-cs[SecurityTokenProvider#1](~/add/codesnippet/csharp/501effc0-dded-4b3b-893a-_1.cs)]
  syntax:
    content: protected abstract System.IdentityModel.Tokens.SecurityToken GetTokenCore (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>보안 토큰을 가져오는 메시지에 대 한 제한 시간 값을 지정 하는.</xref:System.TimeSpan>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 가져올 보안 토큰을 나타내는입니다."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  id: RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: RenewToken(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.RenewToken(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(TimeSpan,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "보안 토큰을 갱신 합니다."
  remarks: "갱신할 발급 된 보안 토큰을 갱신할 때 보안 토큰 되려고 하거나 만료 된 클라이언트가 수 있습니다.       RenewToken 메서드 호출의 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A>메서드.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken RenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>보안 토큰을 갱신 하는 메시지에 대 한 제한 시간 값을 지정 하는.</xref:System.TimeSpan>"
    - id: tokenToBeRenewed
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 를 갱신 합니다."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 갱신 된 보안 토큰을 나타내는입니다."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  id: RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: RenewTokenCore(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.RenewTokenCore(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(TimeSpan,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "보안 토큰을 갱신 합니다."
  remarks: "갱신할 발급 된 보안 토큰을 갱신할 때 보안 토큰 되려고 하거나 만료 된 클라이언트가 수 있습니다.       throw 때 RenewTokenCore 메서드를 재정의 하 고 토큰 매개 변수로 전달 된 보안 토큰을 갱신할 수 없습니다는 <xref:System.IdentityModel.Tokens.SecurityTokenException>예외.</xref:System.IdentityModel.Tokens.SecurityTokenException>       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A>메서드 RenewTokenCore 메서드를 호출 합니다.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityToken RenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>보안 토큰을 갱신 하는 메시지에 대 한 제한 시간 값을 지정 하는.</xref:System.TimeSpan>"
    - id: tokenToBeRenewed
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 를 갱신 합니다."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 갱신 된 보안 토큰을 나타내는입니다."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
  id: SupportsTokenCancellation
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: SupportsTokenCancellation
  nameWithType: SecurityTokenProvider.SupportsTokenCancellation
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "보안 토큰을 취소할 수 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "발급 된 토큰과 같이 취소할 수 있는 보안 토큰을 함께 수행 되는 경우 취소 하는 보안 토큰을 요청한 클라이언트가 수 있습니다."
  syntax:
    content: public virtual bool SupportsTokenCancellation { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>보안 토큰을 취소할 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
  id: SupportsTokenRenewal
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: SupportsTokenRenewal
  nameWithType: SecurityTokenProvider.SupportsTokenRenewal
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "보안 토큰을 갱신할 수 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "갱신할 발급 된 보안 토큰을 갱신할 때 보안 토큰 되려고 하거나 만료 된 클라이언트가 수 있습니다."
  syntax:
    content: public virtual bool SupportsTokenRenewal { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>보안 토큰을 갱신할 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.#ctor
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SecurityTokenProvider()
  nameWithType: SecurityTokenProvider.SecurityTokenProvider()
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenProvider()
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginGetToken(TimeSpan,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginGetToken(TimeSpan,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(TimeSpan,AsyncCallback,Object)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: CancelToken(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.CancelToken(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(TimeSpan,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: CancelTokenCore(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.CancelTokenCore(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(TimeSpan,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndCancelToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndCancelToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndCancelTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndCancelTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndGetToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndGetToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndGetTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndGetTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndRenewToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndRenewToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndRenewTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndRenewTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: GetToken(TimeSpan)
  nameWithType: SecurityTokenProvider.GetToken(TimeSpan)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(TimeSpan)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(System.TimeSpan)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: GetTokenCore(TimeSpan)
  nameWithType: SecurityTokenProvider.GetTokenCore(TimeSpan)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(TimeSpan)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: RenewToken(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.RenewToken(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(TimeSpan,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: RenewTokenCore(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.RenewTokenCore(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(TimeSpan,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SupportsTokenCancellation
  nameWithType: SecurityTokenProvider.SupportsTokenCancellation
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SupportsTokenRenewal
  nameWithType: SecurityTokenProvider.SupportsTokenRenewal
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.#ctor*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SecurityTokenProvider
  nameWithType: SecurityTokenProvider.SecurityTokenProvider
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginCancelToken
  nameWithType: SecurityTokenProvider.BeginCancelToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginCancelTokenCore
  nameWithType: SecurityTokenProvider.BeginCancelTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginGetToken
  nameWithType: SecurityTokenProvider.BeginGetToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginGetTokenCore
  nameWithType: SecurityTokenProvider.BeginGetTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginRenewToken
  nameWithType: SecurityTokenProvider.BeginRenewToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginRenewTokenCore
  nameWithType: SecurityTokenProvider.BeginRenewTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: CancelToken
  nameWithType: SecurityTokenProvider.CancelToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: CancelTokenCore
  nameWithType: SecurityTokenProvider.CancelTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndCancelToken
  nameWithType: SecurityTokenProvider.EndCancelToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndCancelTokenCore
  nameWithType: SecurityTokenProvider.EndCancelTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndGetToken
  nameWithType: SecurityTokenProvider.EndGetToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndGetTokenCore
  nameWithType: SecurityTokenProvider.EndGetTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndRenewToken
  nameWithType: SecurityTokenProvider.EndRenewToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndRenewTokenCore
  nameWithType: SecurityTokenProvider.EndRenewTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: GetToken
  nameWithType: SecurityTokenProvider.GetToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: GetTokenCore
  nameWithType: SecurityTokenProvider.GetTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: RenewToken
  nameWithType: SecurityTokenProvider.RenewToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: RenewTokenCore
  nameWithType: SecurityTokenProvider.RenewTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SupportsTokenCancellation
  nameWithType: SecurityTokenProvider.SupportsTokenCancellation
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SupportsTokenRenewal
  nameWithType: SecurityTokenProvider.SupportsTokenRenewal
