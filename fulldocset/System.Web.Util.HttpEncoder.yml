### YamlMime:ManagedReference
items:
- uid: System.Web.Util.HttpEncoder
  id: HttpEncoder
  children:
  - System.Web.Util.HttpEncoder.#ctor
  - System.Web.Util.HttpEncoder.Current
  - System.Web.Util.HttpEncoder.Default
  - System.Web.Util.HttpEncoder.HeaderNameValueEncode(System.String,System.String,System.String@,System.String@)
  - System.Web.Util.HttpEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)
  - System.Web.Util.HttpEncoder.HtmlDecode(System.String,System.IO.TextWriter)
  - System.Web.Util.HttpEncoder.HtmlEncode(System.String,System.IO.TextWriter)
  - System.Web.Util.HttpEncoder.JavaScriptStringEncode(System.String)
  - System.Web.Util.HttpEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)
  - System.Web.Util.HttpEncoder.UrlPathEncode(System.String)
  langs:
  - csharp
  name: HttpEncoder
  nameWithType: HttpEncoder
  fullName: System.Web.Util.HttpEncoder
  type: Class
  summary: "인코딩 및 디코딩 논리를 제공 합니다."
  remarks: "클래스에는 인코딩 및 디코딩와 같은 클래스의 메서드로 사용 되는 논리가 포함 되어 <xref:System.Web.HttpUtility>, <xref:System.Web.HttpServerUtility>, 및 <xref:System.Net.HttpResponseHeader>.</xref:System.Net.HttpResponseHeader> </xref:System.Web.HttpServerUtility> </xref:System.Web.HttpUtility>       HttpEncoder 클래스에서 상속할 수 있으며 기본 인코딩 및 디코딩 ASP.NET의 동작을 사용자 지정 하려면 동작을 재정의할 수 있습니다. <xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A> <xref:System.Web.Configuration.HttpRuntimeSection>사용자 지정 사용자 클래스를 구성 하는 클래스</xref:System.Web.Configuration.HttpRuntimeSection> 의 속성</xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A> 을 설정 합니다.       인코딩 및 디코딩을 위한 HttpEncoder에서 파생 되는 사용자 지정 클래스는 기본 제공 ASP.NET 인코딩 및 디코딩 동작을 재정의할 수 또는 변경에만 가지 설정을 선택 합니다.       에 대 한 사용자 지정 인코딩 형식을 대체 하거나 다음 인코딩 동작을 보완 하기 위해 ASP.NET에서 구성할 수 있습니다:--URL 경로 인코딩을-인코딩 HTML-HTML 특성 인코딩입니다-URL 인코딩 HTTP 헤더 이름 및 헤더 값으로 인코딩을 기본값, 사용 하도록 구성 된 ASP.NET 응용 프로그램은 <xref:System.Web.Security.AntiXss.AntiXssEncoder>인코딩 모든 출력에 대해를 입력 합니다.</xref:System.Web.Security.AntiXss.AntiXssEncoder>       다음 예제에서는 응용 프로그램 수준 Web.config 파일 표시에서 방법을 <xref:System.Web.Security.AntiXss.AntiXssEncoder>유형이 ASP.NET 응용 프로그램에 대해 설정 되어: `<httpRuntime requestValidationMode=&quot;4.5&quot; encoderType=&quot;System.Web.Security.AntiXss.AntiXssEncoder, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;/>` 의 예제에서는 구성 설정의 <xref:System.Web.Security.AntiXss.AntiXssEncoder>있는 모든 클래스는 응용 프로그램에서 인코딩 출력 합니다.</xref:System.Web.Security.AntiXss.AntiXssEncoder> </xref:System.Web.Security.AntiXss.AntiXssEncoder> 자세한 내용은 참조는 <xref:System.Web.Security.AntiXss.AntiXssEncoder>클래스 개요.</xref:System.Web.Security.AntiXss.AntiXssEncoder>"
  syntax:
    content: public class HttpEncoder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.#ctor
  id: '#ctor'
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: HttpEncoder()
  nameWithType: HttpEncoder.HttpEncoder()
  fullName: System.Web.Util.HttpEncoder.HttpEncoder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.Util.HttpEncoder&quot;> </xref> 클래스입니다."
  syntax:
    content: public HttpEncoder ();
    parameters: []
  overload: System.Web.Util.HttpEncoder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.Current
  id: Current
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: Current
  nameWithType: HttpEncoder.Current
  fullName: System.Web.Util.HttpEncoder.Current
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "가져오거나 설정은 <xref href=&quot;System.Web.Util.HttpEncoder&quot;> </xref> 응용 프로그램에서 사용 될 형식입니다."
  remarks: "파생 된 경우 <xref:System.Web.Util.HttpEncoder>형식 구성 파일에 지정 되는 현재 속성 사용자 지정 형식에 대 한 참조를 반환 합니다.</xref:System.Web.Util.HttpEncoder> 그러나 없는 사용자 지정 인코더를 사용 하 고, 속성은 기본 ASP.NET에 대 한 참조 반환 <xref:System.Web.Util.HttpEncoder>인스턴스.</xref:System.Web.Util.HttpEncoder>       현재 속성은 스레드로부터 안전 하지 않습니다. 응용 프로그램의 경우에이 속성을 설정 `Application_Start` 메서드를 때문에 `Application_Start` 는 단일 스레드를 실행 합니다."
  syntax:
    content: public static System.Web.Util.HttpEncoder Current { get; set; }
    return:
      type: System.Web.Util.HttpEncoder
      description: "사용 되는 인코더/디코더 형식에 대 한 참조입니다."
  overload: System.Web.Util.HttpEncoder.Current*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "이 속성에 할당 되는 인코더 인스턴스는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.Default
  id: Default
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: Default
  nameWithType: HttpEncoder.Default
  fullName: System.Web.Util.HttpEncoder.Default
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "ASP.NET에 대 한 기본 인코더에 대 한 참조를 가져옵니다."
  remarks: "일반적인 인코딩 문제 기본 ASP.NET은 <xref:System.Web.Util.HttpEncoder.UrlEncode%2A>동작 공간 &quot;+&quot; 문자가 변환.</xref:System.Web.Util.HttpEncoder.UrlEncode%2A> 지금까지 &quot;+&quot; 문자를 보다 읽기 쉬운 방식으로 URL에서 공백 문자 인코딩을 위한 인터넷 규약 되었습니다. 그러나 표준에 따르면 공백 문자 할 대신 &quot;%20&quot;로 인코딩할 수는 &quot;+&quot; 문자입니다. ASP.NET를 사용 하면 더 많은 표준 규격 인코딩 알고리즘 구현 수 있습니다."
  syntax:
    content: public static System.Web.Util.HttpEncoder Default { get; }
    return:
      type: System.Web.Util.HttpEncoder
      description: "기본 인코더에 대 한 참조입니다."
  overload: System.Web.Util.HttpEncoder.Default*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.HeaderNameValueEncode(System.String,System.String,System.String@,System.String@)
  id: HeaderNameValueEncode(System.String,System.String,System.String@,System.String@)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: HeaderNameValueEncode(String,String,String,String)
  nameWithType: HttpEncoder.HeaderNameValueEncode(String,String,String,String)
  fullName: System.Web.Util.HttpEncoder.HeaderNameValueEncode(String,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "HTTP 헤더도 사용할 수 있는 문자열에 헤더 이름 및 값을 인코딩합니다."
  remarks: "문자열 입력을 가져와서 메서드 HeaderNameValueEncode는 `headerName` 및 `headerValue` 매개 변수를 인코딩합니다. 인코딩된 값은 출력 매개 변수로 반환 됩니다.       HeaderNameValueEncode 메서드는 다음과 같은 논리를 사용 하 여 헤더 이름 및 값을 인코딩하는 데:-유니코드 값이 9, ASCII 문자를 제외 하 고 ASCII 문자 32 보다 작은 모든 문자는 URL로 인코딩된 형식으로 `%NN` 여기서는 `N` 문자 16 진수 값을 나타냅니다.      ASCII 문자 9 (가로 탭 문자) URL로 인코딩되지 않습니다.      ASCII 문자 127 바이트로 인코딩됩니다 `%7F`합니다.      -다른 모든 문자는 인코딩되지 않습니다.          > [!NOTE] > 유니코드 값에 대해이 메서드를 사용할 수 있지만 일반적으로 ASCII 범위에서 값에 사용 됩니다.       값을 반환 하는 HeaderNameValueEncode 메서드의 기본 구현 `headerValue` 에 `encodedHeaderValue` 경우 `headerValue` 은 `null` 은 빈 문자열 또는 합니다. 기본 구현은의 값을 반환 하는 마찬가지로, `headerName` 에 `encodedHeaderName` 경우 `headerName` 은 `null` 이거나 빈 문자열입니다."
  syntax:
    content: protected virtual void HeaderNameValueEncode (string headerName, string headerValue, out string encodedHeaderName, out string encodedHeaderValue);
    parameters:
    - id: headerName
      type: System.String
      description: "인코딩할 HTTP 헤더 이름입니다."
    - id: headerValue
      type: System.String
      description: "인코딩할 HTTP 헤더 값입니다."
    - id: encodedHeaderName
      type: System.String
      description: "이 메서드가 반환 될 때에 HTTP 헤더에 사용할 인코딩된 이름을 포함 합니다. 이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다."
    - id: encodedHeaderValue
      type: System.String
      description: "이 메서드가 반환 될 때 HTTP 헤더에 사용할 인코딩된 값을 포함 합니다. 이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다."
  overload: System.Web.Util.HttpEncoder.HeaderNameValueEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)
  id: HtmlAttributeEncode(System.String,System.IO.TextWriter)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: HtmlAttributeEncode(String,TextWriter)
  nameWithType: HttpEncoder.HtmlAttributeEncode(String,TextWriter)
  fullName: System.Web.Util.HttpEncoder.HtmlAttributeEncode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "작은따옴표 또는 큰따옴표를 사용 하 여 구분 된 HTML 특성에 삽입할 수 있는 문자열에 들어오는 값을 인코딩합니다."
  remarks: "The HtmlAttributeEncode method encodes characters by using the standard HTML entities. For example, the `<` (left angle bracket) is encoded as `<` and the `\\` (backslash) is encoded as `\\`.  \n  \n It is safe to use HtmlAttributeEncode within single-quoted and double-quoted attributes. The values must be quoted."
  syntax:
    content: protected virtual void HtmlAttributeEncode (string value, System.IO.TextWriter output);
    parameters:
    - id: value
      type: System.String
      description: "인코딩할 문자열입니다."
    - id: output
      type: System.IO.TextWriter
      description: "인코딩된 값을 쓸 텍스트 작성기입니다."
  overload: System.Web.Util.HttpEncoder.HtmlAttributeEncode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>output</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.HtmlDecode(System.String,System.IO.TextWriter)
  id: HtmlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: HtmlDecode(String,TextWriter)
  nameWithType: HttpEncoder.HtmlDecode(String,TextWriter)
  fullName: System.Web.Util.HttpEncoder.HtmlDecode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "HTML 인코딩된 문자열에서 값을 디코딩합니다."
  remarks: "다음 표에서 ASP.NET 디코딩 논리가 디코딩할 수 있는 문자 시퀀스를 보여 줍니다.      | 문자 시퀀스 | 규칙 |   |------------------------|----------|   | `&#NNN;` (ASCII 문자에 대 한&10; 진수 코드). | 지정 된 ASCII 문자로 디코딩됩니다. 문자 시퀀스는 # 문자 뒤 첫째 자리에서 시작 하 고 세미콜론 완료 합니다. |   | `&#xZZ;` (ASCII 문자에 대 한&16; 진수 코드). | 지정 된 ASCII 문자로 디코딩됩니다. 인코딩된 양식 대신&10; 진수 값을&16; 진수 문자를 사용 하 여 문자를 지정 합니다. 문자 시퀀스는 # 문자 뒤 첫째 자리에서 시작 하 고 세미콜론 완료 합니다. |   | 명명 된 HTML 엔터티. | ASCII 문자로으로 디코딩. |"
  syntax:
    content: protected virtual void HtmlDecode (string value, System.IO.TextWriter output);
    parameters:
    - id: value
      type: System.String
      description: "디코딩할 문자열입니다."
    - id: output
      type: System.IO.TextWriter
      description: "디코딩된 값을 쓸 텍스트 작성기입니다."
  overload: System.Web.Util.HttpEncoder.HtmlDecode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>output</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.HtmlEncode(System.String,System.IO.TextWriter)
  id: HtmlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: HtmlEncode(String,TextWriter)
  nameWithType: HttpEncoder.HtmlEncode(String,TextWriter)
  fullName: System.Web.Util.HttpEncoder.HtmlEncode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "HTML 인코딩된 문자열로 문자열을 인코딩합니다."
  remarks: "The following table lists the character sequences that the ASP.NET encoding logic can decode.  \n  \n|Character|Encoded as|  \n|---------------|----------------|  \n|`<` (left angle bracket)|`<`|  \n|`>` (right angle bracket)|`>`|  \n|`\"` (double quotation marks)|`\"`|  \n|`&` (ampersand)|`&`|  \n|`\\` (backslash)|`\\`|  \n|ASCII characters from 160 to 255|`&#NNN;`, where `NNN` is the three-digit decimal character code|  \n  \n If you override the HtmlEncode method, you must produce output that is also safe within double-quoted or single-quoted HTML attributes. This accommodates parsing by the Razor engine, where markup and code can be combined, such as \\<tag attr=\"@value\">. In addition, the @ operator is not context-aware when processed by the Razor engine, therefore it calls HtmlEncode rather than <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A>."
  syntax:
    content: protected virtual void HtmlEncode (string value, System.IO.TextWriter output);
    parameters:
    - id: value
      type: System.String
      description: "인코딩할 문자열입니다."
    - id: output
      type: System.IO.TextWriter
      description: "인코딩된 값을 쓸 텍스트 작성기입니다."
  overload: System.Web.Util.HttpEncoder.HtmlEncode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>output</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.JavaScriptStringEncode(System.String)
  id: JavaScriptStringEncode(System.String)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: JavaScriptStringEncode(String)
  nameWithType: HttpEncoder.JavaScriptStringEncode(String)
  fullName: System.Web.Util.HttpEncoder.JavaScriptStringEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "문자열을 인코딩합니다."
  remarks: "URL 인코딩은 되도록 모든 브라우저에서 URL 문자열의에서 텍스트를 올바르게 전달할 합니다. 물음표 (?), 앰퍼샌드 (&) 등의 문자 (/), 슬래시 및 공백이 잘립니다 되거나 일부 브라우저 수 있습니다. 따라서 이러한 문자를 인코딩해야 합니다."
  syntax:
    content: protected virtual string JavaScriptStringEncode (string value);
    parameters:
    - id: value
      type: System.String
      description: "인코딩할 문자열입니다."
    return:
      type: System.String
      description: "인코딩된 문자열입니다."
  overload: System.Web.Util.HttpEncoder.JavaScriptStringEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)
  id: UrlEncode(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: UrlEncode(Byte[],Int32,Int32)
  nameWithType: HttpEncoder.UrlEncode(Byte[],Int32,Int32)
  fullName: System.Web.Util.HttpEncoder.UrlEncode(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "URL에 해당 하는&16; 진수 문자 엔터티를 허용 하지 않는 문자 배열을 인코딩합니다."
  remarks: "<xref:System.Web.HttpUtility>클래스</xref:System.Web.HttpUtility> 의 일부 URL 인코딩 메서드 UrlEncode 메서드를 호출       URL로 인코딩하고 UrlEncode 메서드에 없는 ASCII 문자 집합 하는 모든 문자부터 안전한으로 간주 됩니다. 공백 ASCII로 인코딩됩니다 &quot;`+&quot;` 문자입니다. URL 지원 ASCII 문자를 ASCI 문자로 포함 (A ~ Z 및-z), 일부 문장 부호와 숫자 (0 ~ 9,)입니다. 다음 표에서 URL 로부터 안전한 ASCII 문자로 간주 되는 문장 부호를 나열 합니다.      | 문자 | 설명 |   |---------------|-----------------|   |-| 하이픈 |   |_| 밑줄 |   |.| 마침표 (.) |   |!| 느낌표 |   |*| 별표 (*) |   | (| 여는 괄호 |   |)| 닫는 괄호 |"
  syntax:
    content: protected virtual byte[] UrlEncode (byte[] bytes, int offset, int count);
    parameters:
    - id: bytes
      type: System.Byte[]
      description: "인코딩할 바이트 배열입니다."
    - id: offset
      type: System.Int32
      description: "위치는 `bytes` 인코딩을 시작 하는 배열입니다."
    - id: count
      type: System.Int32
      description: "항목 수는 `bytes` 인코딩할 배열입니다."
    return:
      type: System.Byte[]
      description: "인코딩된 문자 배열입니다."
  overload: System.Web.Util.HttpEncoder.UrlEncode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>가&0; 보다 작거나의 길이 보다 큰는 <code>bytes</code> 배열입니다.       -또는- <code>count</code> 가&0; 보다 작은 또는 <code>count</code> 플러스 <code>offset</code> 의 길이 보다 크면는 <code>bytes</code> 배열입니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>bytes</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.UrlPathEncode(System.String)
  id: UrlPathEncode(System.String)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: UrlPathEncode(String)
  nameWithType: HttpEncoder.UrlPathEncode(String)
  fullName: System.Web.Util.HttpEncoder.UrlPathEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "URL의 하위 섹션을 인코딩합니다."
  remarks: "UrlPathEncode 메서드에 의해 호출 됩니다는 <xref:System.Web.HttpUtility.UrlPathEncode%2A>메서드.</xref:System.Web.HttpUtility.UrlPathEncode%2A> <xref:System.Web.HttpUtility.UrlPathEncode%2A>메서드는 다음 단계를 수행:-URL (쿼리 문자열 제외)의 경로 부분에만를 UrlPathEncode 메서드의 인코딩 논리를 적용 합니다.</xref:System.Web.HttpUtility.UrlPathEncode%2A> 메서드는 URL을 u t F-8 문자열로 인코딩된는 가정 합니다.      -결과 인코드된 문자열에 있는 처음 128 자의 ASCII 문자 집합만 사용 되도록 비 공간 인코딩합니다. 모든 문자와 128을, 또는 32 크고, 유니코드 값은 URL로 인코딩됩니다.      -%20 공간을 인코딩합니다."
  syntax:
    content: protected virtual string UrlPathEncode (string value);
    parameters:
    - id: value
      type: System.String
      description: "인코딩할 문자열입니다."
    return:
      type: System.String
      description: "URL로 인코딩된 문자열입니다."
  overload: System.Web.Util.HttpEncoder.UrlPathEncode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.Util.HttpEncoder.#ctor
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HttpEncoder()
  nameWithType: HttpEncoder.HttpEncoder()
  fullName: System.Web.Util.HttpEncoder.HttpEncoder()
- uid: System.Web.Util.HttpEncoder.Current
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: Current
  nameWithType: HttpEncoder.Current
  fullName: System.Web.Util.HttpEncoder.Current
- uid: System.Web.Util.HttpEncoder
  parent: System.Web.Util
  isExternal: false
  name: HttpEncoder
  nameWithType: HttpEncoder
  fullName: System.Web.Util.HttpEncoder
- uid: System.Web.Util.HttpEncoder.Default
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: Default
  nameWithType: HttpEncoder.Default
  fullName: System.Web.Util.HttpEncoder.Default
- uid: System.Web.Util.HttpEncoder.HeaderNameValueEncode(System.String,System.String,System.String@,System.String@)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HeaderNameValueEncode(String,String,String,String)
  nameWithType: HttpEncoder.HeaderNameValueEncode(String,String,String,String)
  fullName: System.Web.Util.HttpEncoder.HeaderNameValueEncode(String,String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Util.HttpEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HtmlAttributeEncode(String,TextWriter)
  nameWithType: HttpEncoder.HtmlAttributeEncode(String,TextWriter)
  fullName: System.Web.Util.HttpEncoder.HtmlAttributeEncode(String,TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.Util.HttpEncoder.HtmlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HtmlDecode(String,TextWriter)
  nameWithType: HttpEncoder.HtmlDecode(String,TextWriter)
  fullName: System.Web.Util.HttpEncoder.HtmlDecode(String,TextWriter)
- uid: System.Web.Util.HttpEncoder.HtmlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HtmlEncode(String,TextWriter)
  nameWithType: HttpEncoder.HtmlEncode(String,TextWriter)
  fullName: System.Web.Util.HttpEncoder.HtmlEncode(String,TextWriter)
- uid: System.Web.Util.HttpEncoder.JavaScriptStringEncode(System.String)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: JavaScriptStringEncode(String)
  nameWithType: HttpEncoder.JavaScriptStringEncode(String)
  fullName: System.Web.Util.HttpEncoder.JavaScriptStringEncode(String)
- uid: System.Web.Util.HttpEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: UrlEncode(Byte[],Int32,Int32)
  nameWithType: HttpEncoder.UrlEncode(Byte[],Int32,Int32)
  fullName: System.Web.Util.HttpEncoder.UrlEncode(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Util.HttpEncoder.UrlPathEncode(System.String)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: UrlPathEncode(String)
  nameWithType: HttpEncoder.UrlPathEncode(String)
  fullName: System.Web.Util.HttpEncoder.UrlPathEncode(String)
- uid: System.Web.Util.HttpEncoder.#ctor*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HttpEncoder
  nameWithType: HttpEncoder.HttpEncoder
- uid: System.Web.Util.HttpEncoder.Current*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: Current
  nameWithType: HttpEncoder.Current
- uid: System.Web.Util.HttpEncoder.Default*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: Default
  nameWithType: HttpEncoder.Default
- uid: System.Web.Util.HttpEncoder.HeaderNameValueEncode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HeaderNameValueEncode
  nameWithType: HttpEncoder.HeaderNameValueEncode
- uid: System.Web.Util.HttpEncoder.HtmlAttributeEncode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HtmlAttributeEncode
  nameWithType: HttpEncoder.HtmlAttributeEncode
- uid: System.Web.Util.HttpEncoder.HtmlDecode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HtmlDecode
  nameWithType: HttpEncoder.HtmlDecode
- uid: System.Web.Util.HttpEncoder.HtmlEncode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HtmlEncode
  nameWithType: HttpEncoder.HtmlEncode
- uid: System.Web.Util.HttpEncoder.JavaScriptStringEncode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: JavaScriptStringEncode
  nameWithType: HttpEncoder.JavaScriptStringEncode
- uid: System.Web.Util.HttpEncoder.UrlEncode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: UrlEncode
  nameWithType: HttpEncoder.UrlEncode
- uid: System.Web.Util.HttpEncoder.UrlPathEncode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: UrlPathEncode
  nameWithType: HttpEncoder.UrlPathEncode
