### YamlMime:ManagedReference
items:
- uid: System.Text.RegularExpressions.RegexRunnerFactory
  id: RegexRunnerFactory
  children:
  - System.Text.RegularExpressions.RegexRunnerFactory.#ctor
  - System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance
  langs:
  - csharp
  name: RegexRunnerFactory
  nameWithType: RegexRunnerFactory
  fullName: System.Text.RegularExpressions.RegexRunnerFactory
  type: Class
  summary: "만듭니다는 <xref href=&quot;System.Text.RegularExpressions.RegexRunner&quot;> </xref> 컴파일된 정규식에 대 한 클래스입니다."
  remarks: "A <xref:System.Text.RegularExpressions.RegexRunner>컴파일된 정규식을 실행 하는 개체입니다.</xref:System.Text.RegularExpressions.RegexRunner> 정규식을 어셈블리로 컴파일되는 해당 어셈블리의 형식이 되며 해당 형식의 개체는 일반적으로 리플렉션을 사용 하 여 만듭니다. 그러나 리플렉션에 의해는 개체를 만들어는 비용이 많이 드는 작업입니다. RegexRunnerFactory 클래스를 제공 하 여.NET Framework의 성능이 향상 됩니다.는 <xref:System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance%2A>을 만드는 메서드를 <xref:System.Text.RegularExpressions.RegexRunner>특정 컴파일된 정규식에 대 한 개체입니다.</xref:System.Text.RegularExpressions.RegexRunner> </xref:System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance%2A>"
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      public abstract class RegexRunnerFactory
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexRunnerFactory.#ctor
  id: '#ctor'
  parent: System.Text.RegularExpressions.RegexRunnerFactory
  langs:
  - csharp
  name: RegexRunnerFactory()
  nameWithType: RegexRunnerFactory.RegexRunnerFactory()
  fullName: System.Text.RegularExpressions.RegexRunnerFactory.RegexRunnerFactory()
  type: Constructor
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Text.RegularExpressions.RegexRunnerFactory&quot;> </xref> 클래스입니다."
  syntax:
    content: protected RegexRunnerFactory ();
    parameters: []
  overload: System.Text.RegularExpressions.RegexRunnerFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance
  id: CreateInstance
  parent: System.Text.RegularExpressions.RegexRunnerFactory
  langs:
  - csharp
  name: CreateInstance()
  nameWithType: RegexRunnerFactory.CreateInstance()
  fullName: System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance()
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "파생된 클래스에서 재정의 된 경우는 <xref href=&quot;System.Text.RegularExpressions.RegexRunner&quot;> </xref> 특정 컴파일된 정규식에 대 한 개체입니다."
  syntax:
    content: protected abstract System.Text.RegularExpressions.RegexRunner CreateInstance ();
    parameters: []
    return:
      type: System.Text.RegularExpressions.RegexRunner
      description: "A <xref href=&quot;System.Text.RegularExpressions.RegexRunner&quot;> </xref> 개체는 특정 실행 하도록 설계 된 컴파일된 정규식입니다."
  overload: System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Text.RegularExpressions.RegexRunnerFactory.#ctor
  parent: System.Text.RegularExpressions.RegexRunnerFactory
  isExternal: false
  name: RegexRunnerFactory()
  nameWithType: RegexRunnerFactory.RegexRunnerFactory()
  fullName: System.Text.RegularExpressions.RegexRunnerFactory.RegexRunnerFactory()
- uid: System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance
  parent: System.Text.RegularExpressions.RegexRunnerFactory
  isExternal: false
  name: CreateInstance()
  nameWithType: RegexRunnerFactory.CreateInstance()
  fullName: System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance()
- uid: System.Text.RegularExpressions.RegexRunner
  parent: System.Text.RegularExpressions
  isExternal: false
  name: RegexRunner
  nameWithType: RegexRunner
  fullName: System.Text.RegularExpressions.RegexRunner
- uid: System.Text.RegularExpressions.RegexRunnerFactory.#ctor*
  parent: System.Text.RegularExpressions.RegexRunnerFactory
  isExternal: false
  name: RegexRunnerFactory
  nameWithType: RegexRunnerFactory.RegexRunnerFactory
- uid: System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance*
  parent: System.Text.RegularExpressions.RegexRunnerFactory
  isExternal: false
  name: CreateInstance
  nameWithType: RegexRunnerFactory.CreateInstance
