### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.RecognizeMode
  id: RecognizeMode
  children:
  - System.Speech.Recognition.RecognizeMode.Multiple
  - System.Speech.Recognition.RecognizeMode.Single
  langs:
  - csharp
  name: RecognizeMode
  nameWithType: RecognizeMode
  fullName: System.Speech.Recognition.RecognizeMode
  type: Enum
  summary: "인식 모드의 값을 열거합니다."
  remarks: "이 열거형은 <xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync%28System.Speech.Recognition.RecognizeMode%29>.</xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync%28System.Speech.Recognition.RecognizeMode%29> 를 인수로 사용"
  example:
  - "The following example shows the implementation of a start/stop button for an application that has a graphical user interface and uses <xref:System.Speech.Recognition.SpeechRecognitionEngine>. Depending on the state of the application, <xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync%28System.Speech.Recognition.RecognizeMode%29> is called with either Single or Multiple when the button is clicked.  \n  \n```  \nprivate void _startRecogButton_Click(object sender, EventArgs eventArgs)   \n{  \n  \n  // Toggle speech recognition on.  \n  if (_startRecogButton.Text == \"Start Speech Recognition\")   \n  {       \n    _startRecogButton.Text = \"Stop Speech Recognition\";  \n    if (_useMultiple)   \n    {  \n      _recognitionEngine.RecognizeAsync(RecognizeMode.Multiple);  \n    }   \n    else   \n    {  \n      _recognitionEngine.RecognizeAsync(RecognizeMode.Single);  \n    }  \n  }  \n  \n  // Toggle speech recognition off.   \n  else   \n  {                                                        \n    _startRecogButton.Text = \"Start Speech Recognition\";  \n  \n    // Stop after current phrase is finished.  \n    if (_friendlyStop)   \n    {       \n      _recognitionEngine.RecognizeAsyncStop();   \n    }  \n  \n    // Stop before current phrase is finished.  \n    else   \n    {        \n      _recognitionEngine.RecognizeAsyncCancel();   \n    }  \n  }  \n}  \n```"
  syntax:
    content: public enum RecognizeMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizeMode.Multiple
  id: Multiple
  parent: System.Speech.Recognition.RecognizeMode
  langs:
  - csharp
  name: Multiple
  nameWithType: RecognizeMode.Multiple
  fullName: System.Speech.Recognition.RecognizeMode.Multiple
  type: Field
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "인식 완료 된 후 종료 하지 않는 것을 지정 합니다."
  syntax:
    content: Multiple
    return:
      type: System.Speech.Recognition.RecognizeMode
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizeMode.Single
  id: Single
  parent: System.Speech.Recognition.RecognizeMode
  langs:
  - csharp
  name: Single
  nameWithType: RecognizeMode.Single
  fullName: System.Speech.Recognition.RecognizeMode.Single
  type: Field
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "인식 완료 한 후 종료를 지정 합니다."
  syntax:
    content: Single
    return:
      type: System.Speech.Recognition.RecognizeMode
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Speech.Recognition.RecognizeMode.Multiple
  parent: System.Speech.Recognition.RecognizeMode
  isExternal: false
  name: Multiple
  nameWithType: RecognizeMode.Multiple
  fullName: System.Speech.Recognition.RecognizeMode.Multiple
- uid: System.Speech.Recognition.RecognizeMode
  parent: System.Speech.Recognition
  isExternal: false
  name: RecognizeMode
  nameWithType: RecognizeMode
  fullName: System.Speech.Recognition.RecognizeMode
- uid: System.Speech.Recognition.RecognizeMode.Single
  parent: System.Speech.Recognition.RecognizeMode
  isExternal: false
  name: Single
  nameWithType: RecognizeMode.Single
  fullName: System.Speech.Recognition.RecognizeMode.Single
