### YamlMime:ManagedReference
items:
- uid: System.Web.UI.DataBinder
  id: DataBinder
  children:
  - System.Web.UI.DataBinder.#ctor
  - System.Web.UI.DataBinder.EnableCaching
  - System.Web.UI.DataBinder.Eval(System.Object,System.String)
  - System.Web.UI.DataBinder.Eval(System.Object,System.String,System.String)
  - System.Web.UI.DataBinder.GetDataItem(System.Object)
  - System.Web.UI.DataBinder.GetDataItem(System.Object,System.Boolean@)
  - System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String)
  - System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String,System.String)
  - System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String)
  - System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String,System.String)
  - System.Web.UI.DataBinder.IsBindableType(System.Type)
  langs:
  - csharp
  name: DataBinder
  nameWithType: DataBinder
  fullName: System.Web.UI.DataBinder
  type: Class
  summary: "(RAD) 디자이너를 생성 하 고 데이터 바인딩 식 구문을 분석할 신속한 응용 프로그램 개발에 대 한 지원을 제공 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "오버 로드 된 정적을 사용할 수 있습니다 <xref:System.Web.UI.DataBinder.Eval%2A>ASP.NET 웹 페이지에 데이터 바인딩 구문에서이 클래스의 메서드.</xref:System.Web.UI.DataBinder.Eval%2A> 표준 데이터 바인딩을 보다 작업이 구문을 제공 합니다. 그러나 때문에 `DataBinder.Eval` 자동 형식 변환 기능을 제공 성능이 저하 될 수 있습니다.       ASP.NET 데이터 바인딩, 식 및 구문에 대 한 자세한 내용은 참조 [데이터베이스에 바인딩](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742) 및 [데이터 바인딩 식 개요](~/add/includes/ajax-current-ext-md.md)합니다.       .NET Framework 4.5부터 이전 버전에서 데이터 바인딩을 통해 수행 해야 하는 작업의 일부를 간소화 하기 위해 모델 바인딩을 사용할 수 있습니다. Web Forms 모델 바인딩 사용에 자습서 시리즈를 참조 하십시오. [모델 바인딩 및 Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)합니다."
  example:
  - "The following example uses the static <xref:System.Web.UI.DataBinder.GetPropertyValue%2A> method to populate the fields of a <xref:System.Web.UI.WebControls.Repeater> control using an <xref:System.Collections.ArrayList> of `Product` objects. The <xref:System.Web.UI.DataBinder.Eval%2A> method could be applied with the same syntax, but it would not perform as quickly.  \n  \n This example uses a custom `Product` class which exposes a string `Model` property and a numeric `UnitPrice` property.  \n  \n [!code-vb[System.Web.UI.DataBinder#1](~/add/codesnippet/visualbasic/t-system.web.ui.databinder_1.aspx)]\n [!code-cs[System.Web.UI.DataBinder#1](~/add/codesnippet/csharp/t-system.web.ui.databinder_1.aspx)]  \n  \n The following code is the custom `Product` class. This code should be included in a separate class file in the App_Code directory, such as Product.cs or Product.vb.  \n  \n [!code-cs[System.Web.UI.DataBinder#2](~/add/codesnippet/csharp/t-system.web.ui.databinder_2.cs)]\n [!code-vb[System.Web.UI.DataBinder#2](~/add/codesnippet/visualbasic/t-system.web.ui.databinder_2.vb)]"
  syntax:
    content: public sealed class DataBinder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.#ctor
  id: '#ctor'
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: DataBinder()
  nameWithType: DataBinder.DataBinder()
  fullName: System.Web.UI.DataBinder.DataBinder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.DataBinder&quot;> </xref> 클래스입니다."
  syntax:
    content: public DataBinder ();
    parameters: []
  overload: System.Web.UI.DataBinder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.EnableCaching
  id: EnableCaching
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: EnableCaching
  nameWithType: DataBinder.EnableCaching
  fullName: System.Web.UI.DataBinder.EnableCaching
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "런타임 시 데이터 캐싱 사용 여부를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public static bool EnableCaching { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>에 대 한 캐시를 사용 하면는 <xref href=&quot;System.Web.UI.DataBinder&quot;> </xref> 클래스입니다; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.DataBinder.EnableCaching*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.Eval(System.Object,System.String)
  id: Eval(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: Eval(Object,String)
  nameWithType: DataBinder.Eval(Object,String)
  fullName: System.Web.UI.DataBinder.Eval(Object,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "런타임에 데이터 바인딩 식을 평가합니다."
  remarks: "값은 `expression` 공용 속성 매개 변수 여야 합니다.       이 메서드는 Visual Studio와 같은 RAD (개발) 신속한 응용 프로그램 디자이너에서 데이터 바인딩을 만들 때 자동으로 호출 됩니다. 또한 텍스트 문자열로 캐스팅을 간소화 하기 위해 선언적으로 사용할 수도 있습니다. 이 위해 사용 하는 `<%#  %>` 표준 ASP.NET 데이터 바인딩에 사용 되는 식 구문입니다.       이 메서드는 템플릿 기반 목록에 있는 컨트롤에 데이터를 바인딩할 때 특히 유용 합니다.      > [!NOTE] >이 메서드는 런타임에 바인딩된 평가 수행 하므로 리플렉션을 사용 하 여 런타임 시 발생할 수 있습니다를 눈에 띄게 표준 ASP.NET 데이터 바인딩 구문에 비해 성능입니다.       목록에 대 한 웹 같은 컨트롤 <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.DataList>, 또는 <xref:System.Web.UI.WebControls.Repeater>, `container` 해야 `Container.DataItem`.</xref:System.Web.UI.WebControls.Repeater> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 페이지에 바인딩하는 경우 `container` 해야 `Page`합니다.       .NET Framework 4.5부터 이전 버전에서 데이터 바인딩을 통해 수행 해야 하는 작업의 일부를 간소화 하기 위해 모델 바인딩을 사용할 수 있습니다. Web Forms 모델 바인딩 사용에 자습서 시리즈를 참조 하십시오. [모델 바인딩 및 Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)합니다."
  example:
  - "The following examples show how to use the `Eval` method to bind data to <xref:System.Web.UI.WebControls.Repeater> control. It requires a data class named Product.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#1](~/add/codesnippet/csharp/m-system.web.ui.databind_3_1.cs)]\n [!code-vb[System.Web.UI.DataBinder.Eval#1](~/add/codesnippet/visualbasic/m-system.web.ui.databind_3_1.vb)]  \n  \n The code-behind file loads test data and binds that data to a <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#2](~/add/codesnippet/csharp/m-system.web.ui.databind_3_2.cs)]\n [!code-vb[System.Web.UI.DataBinder.Eval#2](~/add/codesnippet/visualbasic/m-system.web.ui.databind_3_2.vb)]  \n  \n In the declarative syntax for the <xref:System.Web.UI.WebControls.Repeater> control, you use the Eval method with `Container.DataItem` for the `container` parameter.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#3](~/add/codesnippet/csharp/m-system.web.ui.databind_3_3.aspx)]\n [!code-vb[System.Web.UI.DataBinder.Eval#3](~/add/codesnippet/visualbasic/m-system.web.ui.databind_3_3.aspx)]  \n  \n Or, you can call `Eval` function and not include the `container` parameter.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#4](~/add/codesnippet/csharp/m-system.web.ui.databind_3_4.aspx)]\n [!code-vb[System.Web.UI.DataBinder.Eval#4](~/add/codesnippet/visualbasic/m-system.web.ui.databind_3_4.aspx)]"
  syntax:
    content: public static object Eval (object container, string expression);
    parameters:
    - id: container
      type: System.Object
      description: "식이 계산 되는 개체 참조입니다. 이 페이지의 지정 된 언어에는 유효한 개체 식별자 여야 합니다."
    - id: expression
      type: System.String
      description: "탐색 경로 `container` 개체 공용 속성 값 바인딩된 컨트롤 속성에 배치 됩니다. 와 같은 마침표로 구분 된 속성 또는 필드 이름의 문자열 이어야 합니다 `Tables[0].DefaultView.[0].Price` C# 또는 `Tables(0).DefaultView.(0).Price` Visual Basic의 합니다."
    return:
      type: System.Object
      description: "<xref:System.Object>인스턴스 데이터 바인딩 식의 계산 결과인.</xref:System.Object>"
  overload: System.Web.UI.DataBinder.Eval*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>expression</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 잘라낸 후은 빈 문자열 또는 합니다."
  platform:
  - net462
- uid: System.Web.UI.DataBinder.Eval(System.Object,System.String,System.String)
  id: Eval(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: Eval(Object,String,String)
  nameWithType: DataBinder.Eval(Object,String,String)
  fullName: System.Web.UI.DataBinder.Eval(Object,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "런타임에 데이터 바인딩 식을 평가 하 고 결과 문자열로 서식을 지정 합니다."
  remarks: "값 `expression` 공용 속성으로 계산 되어야 합니다.       .NET framework에서 형식 문자열에 대 한 자세한 내용은 참조 [형식 지정](~/add/includes/ajax-current-ext-md.md)합니다.       이 메서드는 Visual Studio와 같은 RAD (개발) 신속한 응용 프로그램 디자이너에서 데이터 바인딩을 만들 때 자동으로 호출 됩니다. 사용할 수 있습니다도 선언적으로는 <xref:System.Object>결과 <xref:System.String>.</xref:System.String> 에 데이터 바인딩 식에서</xref:System.Object> 변환 하려면  사용 하 여 메서드를 선언적으로 사용 하는 `<%#   %>` 표준 ASP.NET 데이터 바인딩에 사용 되는 식 구문입니다.       이 메서드는 템플릿 기반 목록에 있는 컨트롤에 데이터를 바인딩할 때 특히 유용 합니다.      > [!NOTE] >이 메서드는 런타임에 바인딩된 평가 수행 하므로 리플렉션을 사용 하 여 런타임 시 발생할 수 있습니다를 눈에 띄게 표준 ASP.NET 데이터 바인딩 구문에 비해 성능입니다. 필요 하지 않은 문자열 서식 지정 하는 경우에 특히 주의 해 서,이 메서드를 사용 합니다.       목록에 대 한 웹 같은 컨트롤 <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.DataList>, 또는 <xref:System.Web.UI.WebControls.Repeater>, `container` 해야 `Container.DataItem`.</xref:System.Web.UI.WebControls.Repeater> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 페이지에 바인딩하는 경우 `container` 해야 `Page`합니다.       .NET Framework 4.5부터 이전 버전에서 데이터 바인딩을 통해 수행 해야 하는 작업의 일부를 간소화 하기 위해 모델 바인딩을 사용할 수 있습니다. Web Forms 모델 바인딩 사용에 자습서 시리즈를 참조 하십시오. [모델 바인딩 및 Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)합니다."
  example:
  - "The following examples show how to use the `Eval` method to bind data to <xref:System.Web.UI.WebControls.Repeater> control. It requires a data class named Product.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#1](~/add/codesnippet/csharp/m-system.web.ui.databind_2_1.cs)]\n [!code-vb[System.Web.UI.DataBinder.Eval#1](~/add/codesnippet/visualbasic/m-system.web.ui.databind_2_1.vb)]  \n  \n The code-behind file loads test data and binds that data to a <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#2](~/add/codesnippet/csharp/m-system.web.ui.databind_2_2.cs)]\n [!code-vb[System.Web.UI.DataBinder.Eval#2](~/add/codesnippet/visualbasic/m-system.web.ui.databind_2_2.vb)]  \n  \n In the declarative syntax for the <xref:System.Web.UI.WebControls.Repeater> control, you use the Eval method with `Container.DataItem` for the `container` parameter.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#3](~/add/codesnippet/csharp/m-system.web.ui.databind_2_3.aspx)]\n [!code-vb[System.Web.UI.DataBinder.Eval#3](~/add/codesnippet/visualbasic/m-system.web.ui.databind_2_3.aspx)]  \n  \n Or, you can call `Eval` function and not include the `container` parameter.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#4](~/add/codesnippet/csharp/m-system.web.ui.databind_2_4.aspx)]\n [!code-vb[System.Web.UI.DataBinder.Eval#4](~/add/codesnippet/visualbasic/m-system.web.ui.databind_2_4.aspx)]"
  syntax:
    content: public static string Eval (object container, string expression, string format);
    parameters:
    - id: container
      type: System.Object
      description: "식이 계산 되는 개체 참조입니다. 이 페이지의 지정 된 언어에는 유효한 개체 식별자 여야 합니다."
    - id: expression
      type: System.String
      description: "탐색 경로 `container` 개체 공용 속성 값 바인딩된 컨트롤 속성에 배치 됩니다. 와 같은 마침표로 구분 된 속성 또는 필드 이름의 문자열 이어야 합니다 `Tables[0].DefaultView.[0].Price` C# 또는 `Tables(0).DefaultView.(0).Price` Visual Basic의 합니다."
    - id: format
      type: System.String
      description: ".NET Framework 형식 문자열 (에서 사용 되는 같은 &lt;xref:System.String.Format%2A?displayProperty=fullName&gt;) 변환 하는 <xref:System.Object>에 데이터 바인딩 식에서 반환 된 인스턴스는 <xref:System.String>개체입니다.</xref:System.String> </xref:System.Object>"
    return:
      type: System.String
      description: "A <xref:System.String>결과로 데이터 바인딩 식을 평가 하 고 문자열 형식으로 변환할 개체입니다.</xref:System.String>"
  overload: System.Web.UI.DataBinder.Eval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetDataItem(System.Object)
  id: GetDataItem(System.Object)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetDataItem(Object)
  nameWithType: DataBinder.GetDataItem(Object)
  fullName: System.Web.UI.DataBinder.GetDataItem(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "개체의 선언 된 데이터 항목을 검색합니다."
  remarks: "이 메서드를 호출는 <xref:System.Web.UI.DataBinder.GetDataItem%28System.Object%2CSystem.Boolean%40%29>메서드를 무시 하 고 해당 `foundDataItem` 결과 반환할 때 매개 변수.</xref:System.Web.UI.DataBinder.GetDataItem%28System.Object%2CSystem.Boolean%40%29>       개체의 데이터 항목은 다음 두 가지 방법 중 하나에서 식별 됩니다. 컨테이너 개체를 구현 하는 경우는 <xref:System.Web.UI.IDataItemContainer>인터페이스는 <xref:System.Web.UI.IDataItemContainer.DataItem%2A>데이터 항목을 식별 하는 속성 및 해당 값이 반환 됩니다.</xref:System.Web.UI.IDataItemContainer.DataItem%2A> </xref:System.Web.UI.IDataItemContainer> 그렇지 않으면 메서드를 해결 하 고 &quot;DataItem&quot; 이라는 컨테이너 속성을 반환 하려고 합니다."
  syntax:
    content: public static object GetDataItem (object container);
    parameters:
    - id: container
      type: System.Object
      description: "식이 계산 되는 개체 참조입니다. 이 페이지의 지정 된 언어에는 유효한 개체 식별자 여야 합니다."
    return:
      type: System.Object
      description: "컨테이너의 선언 된 데이터 항목을 나타내는 개체입니다. 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 데이터 항목이 없거나 또는 컨테이너의 결과가 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.DataBinder.GetDataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetDataItem(System.Object,System.Boolean@)
  id: GetDataItem(System.Object,System.Boolean@)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetDataItem(Object,Boolean)
  nameWithType: DataBinder.GetDataItem(Object,Boolean)
  fullName: System.Web.UI.DataBinder.GetDataItem(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "성공 또는 실패를 나타내는 개체의 선언 된 데이터 항목을 검색 합니다."
  remarks: "개체의 데이터 항목에는 두 가지 방법으로 식별 됩니다. 컨테이너 개체를 구현 하는 경우는 <xref:System.Web.UI.IDataItemContainer>인터페이스는 <xref:System.Web.UI.IDataItemContainer.DataItem%2A>속성 데이터 항목을 식별 하 고 반환 됩니다.</xref:System.Web.UI.IDataItemContainer.DataItem%2A> </xref:System.Web.UI.IDataItemContainer> 그렇지 않으면 메서드를 해결 하 고 &quot;DataItem&quot; 이라는 컨테이너 속성을 반환 하려고 합니다."
  syntax:
    content: public static object GetDataItem (object container, out bool foundDataItem);
    parameters:
    - id: container
      type: System.Object
      description: "식이 계산 되는 개체 참조입니다. 이 페이지의 지정 된 언어에는 유효한 개체 식별자 여야 합니다."
    - id: foundDataItem
      type: System.Boolean
      description: "데이터 항목이 성공적으로 해결 되 고 반환 하는지 여부를 나타내는 부울 값입니다. 이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다."
    return:
      type: System.Object
      description: "컨테이너의 선언 된 데이터 항목을 나타내는 개체입니다. 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 데이터 항목이 없거나 또는 컨테이너의 결과가 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.DataBinder.GetDataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String)
  id: GetIndexedPropertyValue(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetIndexedPropertyValue(Object,String)
  nameWithType: DataBinder.GetIndexedPropertyValue(Object,String)
  fullName: System.Web.UI.DataBinder.GetIndexedPropertyValue(Object,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "지정 된 컨테이너와 탐색 경로의 속성의 값을 검색합니다."
  remarks: "값 `expr` 공용 속성으로 계산 되어야 합니다.       목록에 대 한 웹 같은 컨트롤 <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.DataList>, 또는 <xref:System.Web.UI.WebControls.Repeater>, `container` 해야 `Container.DataItem`.</xref:System.Web.UI.WebControls.Repeater> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 페이지에 바인딩하는 경우 `container` 해야 `Page`합니다."
  syntax:
    content: public static object GetIndexedPropertyValue (object container, string expr);
    parameters:
    - id: container
      type: System.Object
      description: "개체 참조는 `expr` 평가 됩니다. 이 페이지에 대 한 지정된 된 언어에는 유효한 개체 식별자 여야 합니다."
    - id: expr
      type: System.String
      description: "탐색 경로 `container` 개체에 바인딩된 컨트롤 속성에 public 속성 값입니다. 와 같은 마침표로 구분 된 속성 또는 필드 이름의 문자열 이어야 합니다 `Tables[0].DefaultView.[0].Price` C# 또는 `Tables(0).DefaultView.(0).Price` Visual Basic의 합니다."
    return:
      type: System.Object
      description: "데이터 바인딩 식의 계산의 결과로 생성 되는 개체입니다."
  overload: System.Web.UI.DataBinder.GetIndexedPropertyValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>container</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>expr</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\")."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>expr</code> is not a valid indexed expression.  \n  \n \\- or -  \n  \n <code>expr</code> does not allow indexed access."
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String,System.String)
  id: GetIndexedPropertyValue(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetIndexedPropertyValue(Object,String,String)
  nameWithType: DataBinder.GetIndexedPropertyValue(Object,String,String)
  fullName: System.Web.UI.DataBinder.GetIndexedPropertyValue(Object,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "지정된 된 컨테이너에 대 한 지정된 된 속성의 값을 검색 하 고 결과 형식을 지정 합니다."
  remarks: "GetIndexedPropertyValue 메서드가 호출 하는 <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A>메서드를 사용 하 여는 <xref:System.String.Format%2A?displayProperty=fullName>에 지정 된 대로 결과 형식을 지정 하는 메서드는 `format` 매개 변수.</xref:System.String.Format%2A?displayProperty=fullName> </xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> .NET Framework 형식 문자열 (에서 사용 되는 같은 <xref:System.String.Format%2A?displayProperty=fullName>) 변환는 <xref:System.Object>에 데이터 바인딩 식에서 반환 된 인스턴스는 <xref:System.String>개체입니다.</xref:System.String> </xref:System.Object> </xref:System.String.Format%2A?displayProperty=fullName>       에 대해 throw 되는 예외는 <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A>메서드 GetIndexedPropertyValue 메서드에 적용 합니다.</xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A>"
  example:
  - "The following code example demonstrates how to use the GetIndexedPropertyValue method declaratively to bind to an indexed value.  \n  \n [!code-vb[Classic DataBinder.Eval Example#2](~/add/codesnippet/visualbasic/38557d34-9d41-4e37-9929-_1.aspx)]\n [!code-cs[Classic DataBinder.Eval Example#2](~/add/codesnippet/csharp/38557d34-9d41-4e37-9929-_1.aspx)]"
  syntax:
    content: public static string GetIndexedPropertyValue (object container, string propName, string format);
    parameters:
    - id: container
      type: System.Object
      description: "식이 계산 되는 개체 참조입니다. 이 페이지에 대 한 지정된 된 언어에는 유효한 개체 식별자 여야 합니다."
    - id: propName
      type: System.String
      description: "검색할 값을 포함 하는 속성의 이름입니다."
    - id: format
      type: System.String
      description: "결과 표시 하는 형식을 지정 하는 문자열입니다."
    return:
      type: System.String
      description: "지정 된 형식에서 지정된 된 속성의 값 <code> format </code>합니다."
  overload: System.Web.UI.DataBinder.GetIndexedPropertyValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String)
  id: GetPropertyValue(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetPropertyValue(Object,String)
  nameWithType: DataBinder.GetPropertyValue(Object,String)
  fullName: System.Web.UI.DataBinder.GetPropertyValue(Object,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "지정된 된 개체의 지정된 된 속성의 값을 검색합니다."
  remarks: "GetPropertyValue 메서드는 개체의 속성 값을 검색 하려면 사용 됩니다."
  example:
  - The example for <xref:System.Web.UI.DataBinder> demonstrates the use of this method.
  syntax:
    content: public static object GetPropertyValue (object container, string propName);
    parameters:
    - id: container
      type: System.Object
      description: "속성을 포함 하는 개체입니다."
    - id: propName
      type: System.String
      description: "검색할 값을 포함 하는 속성의 이름입니다."
    return:
      type: System.Object
      description: "지정된 된 속성의 값입니다."
  overload: System.Web.UI.DataBinder.GetPropertyValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>container</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는- <code>propName</code> 은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 빈 문자열 (&quot;&quot;)."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "개체 <code> container </code> 변수로 지정한 속성이 없는 <code> propName </code>합니다."
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String,System.String)
  id: GetPropertyValue(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetPropertyValue(Object,String,String)
  nameWithType: DataBinder.GetPropertyValue(Object,String,String)
  fullName: System.Web.UI.DataBinder.GetPropertyValue(Object,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "지정된 된 개체의 지정된 된 속성의 값을 검색 하 고 결과 형식을 지정 합니다."
  remarks: "검색 한 개체의 속성 값의 서식을 지정 하는이 버전의 GetPropertyValue 메서드 사용 됩니다."
  example:
  - The example for <xref:System.Web.UI.DataBinder> demonstrates the use of this method.
  syntax:
    content: public static string GetPropertyValue (object container, string propName, string format);
    parameters:
    - id: container
      type: System.Object
      description: "속성을 포함 하는 개체입니다."
    - id: propName
      type: System.String
      description: "검색할 값을 포함 하는 속성의 이름입니다."
    - id: format
      type: System.String
      description: "결과 표시 하는 형식을 지정 하는 문자열입니다."
    return:
      type: System.String
      description: "지정 된 형식에서 지정된 된 속성의 값 <code> format </code>합니다."
  overload: System.Web.UI.DataBinder.GetPropertyValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>container</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>propName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\")."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "개체 <code> container </code> 변수로 지정한 속성이 없는 <code> propName </code>합니다."
  platform:
  - net462
- uid: System.Web.UI.DataBinder.IsBindableType(System.Type)
  id: IsBindableType(System.Type)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: IsBindableType(Type)
  nameWithType: DataBinder.IsBindableType(Type)
  fullName: System.Web.UI.DataBinder.IsBindableType(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "지정된 된 데이터 형식을 바인딩할 수 있는지 여부를 결정 합니다."
  syntax:
    content: public static bool IsBindableType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>테스트할 데이터 형식을 나타내는</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>형식에 대 한 일 수 있는 자동으로; 컨트롤에 바인딩된 데이터 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.DataBinder.IsBindableType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.DataBinder.#ctor
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: DataBinder()
  nameWithType: DataBinder.DataBinder()
  fullName: System.Web.UI.DataBinder.DataBinder()
- uid: System.Web.UI.DataBinder.EnableCaching
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: EnableCaching
  nameWithType: DataBinder.EnableCaching
  fullName: System.Web.UI.DataBinder.EnableCaching
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.DataBinder.Eval(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: Eval(Object,String)
  nameWithType: DataBinder.Eval(Object,String)
  fullName: System.Web.UI.DataBinder.Eval(Object,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.DataBinder.Eval(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: Eval(Object,String,String)
  nameWithType: DataBinder.Eval(Object,String,String)
  fullName: System.Web.UI.DataBinder.Eval(Object,String,String)
- uid: System.Web.UI.DataBinder.GetDataItem(System.Object)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetDataItem(Object)
  nameWithType: DataBinder.GetDataItem(Object)
  fullName: System.Web.UI.DataBinder.GetDataItem(Object)
- uid: System.Web.UI.DataBinder.GetDataItem(System.Object,System.Boolean@)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetDataItem(Object,Boolean)
  nameWithType: DataBinder.GetDataItem(Object,Boolean)
  fullName: System.Web.UI.DataBinder.GetDataItem(Object,Boolean)
- uid: System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetIndexedPropertyValue(Object,String)
  nameWithType: DataBinder.GetIndexedPropertyValue(Object,String)
  fullName: System.Web.UI.DataBinder.GetIndexedPropertyValue(Object,String)
- uid: System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetIndexedPropertyValue(Object,String,String)
  nameWithType: DataBinder.GetIndexedPropertyValue(Object,String,String)
  fullName: System.Web.UI.DataBinder.GetIndexedPropertyValue(Object,String,String)
- uid: System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetPropertyValue(Object,String)
  nameWithType: DataBinder.GetPropertyValue(Object,String)
  fullName: System.Web.UI.DataBinder.GetPropertyValue(Object,String)
- uid: System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetPropertyValue(Object,String,String)
  nameWithType: DataBinder.GetPropertyValue(Object,String,String)
  fullName: System.Web.UI.DataBinder.GetPropertyValue(Object,String,String)
- uid: System.Web.UI.DataBinder.IsBindableType(System.Type)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: IsBindableType(Type)
  nameWithType: DataBinder.IsBindableType(Type)
  fullName: System.Web.UI.DataBinder.IsBindableType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.DataBinder.#ctor*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: DataBinder
  nameWithType: DataBinder.DataBinder
- uid: System.Web.UI.DataBinder.EnableCaching*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: EnableCaching
  nameWithType: DataBinder.EnableCaching
- uid: System.Web.UI.DataBinder.Eval*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: Eval
  nameWithType: DataBinder.Eval
- uid: System.Web.UI.DataBinder.GetDataItem*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetDataItem
  nameWithType: DataBinder.GetDataItem
- uid: System.Web.UI.DataBinder.GetIndexedPropertyValue*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetIndexedPropertyValue
  nameWithType: DataBinder.GetIndexedPropertyValue
- uid: System.Web.UI.DataBinder.GetPropertyValue*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetPropertyValue
  nameWithType: DataBinder.GetPropertyValue
- uid: System.Web.UI.DataBinder.IsBindableType*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: IsBindableType
  nameWithType: DataBinder.IsBindableType
