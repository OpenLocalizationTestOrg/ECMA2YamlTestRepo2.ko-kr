### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Timer
  id: Timer
  children:
  - System.Web.UI.Timer.#ctor
  - System.Web.UI.Timer.Enabled
  - System.Web.UI.Timer.GetScriptDescriptors
  - System.Web.UI.Timer.GetScriptReferences
  - System.Web.UI.Timer.Interval
  - System.Web.UI.Timer.OnPreRender(System.EventArgs)
  - System.Web.UI.Timer.OnTick(System.EventArgs)
  - System.Web.UI.Timer.RaisePostBackEvent(System.String)
  - System.Web.UI.Timer.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Timer.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptDescriptors
  - System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptReferences
  - System.Web.UI.Timer.Tick
  - System.Web.UI.Timer.Visible
  langs:
  - csharp
  name: Timer
  nameWithType: Timer
  fullName: System.Web.UI.Timer
  type: Class
  summary: "정의 된 간격으로 비동기 또는 동기 웹 페이지 포스트백을 수행 합니다."
  remarks: "이 항목의:- [소개](#introduction)      -   [선언적 구문](#declarative_syntax) <a name=&quot;introduction&quot;> </a> # # 소개 The 타이머 컨트롤을 사용 하면 지정된 된 간격으로 다시 게시를 수행할 수 있습니다.       타이머 컨트롤에 대 한 트리거를 사용 하는 경우는 <xref:System.Web.UI.UpdatePanel>컨트롤은 <xref:System.Web.UI.UpdatePanel>비동기, 부분 페이지 업데이트를 사용 하 여 컨트롤을 업데이트 합니다.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> 포함 해야 합니다는 <xref:System.Web.UI.ScriptManager>타이머 컨트롤을 사용 하도록 웹 페이지에는 개체입니다.</xref:System.Web.UI.ScriptManager>       타이머 컨트롤을 사용 하 여 업데이트는 <xref:System.Web.UI.UpdatePanel>내 타이머를 포함 하 여 컨트롤의 <xref:System.Web.UI.UpdatePanel>컨트롤.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> 또는 외부 타이머를 배치할 수 있습니다는 <xref:System.Web.UI.UpdatePanel>제어 하 고 트리거로 타이머를 설정 합니다.</xref:System.Web.UI.UpdatePanel>       웹 페이지에서 Timer 컨트롤을 포함 하 여 및에 대 한 트리거로 설정 하지 않으면 전체 웹 페이지의 전체 포스트백을 시작할 수도 있습니다는 <xref:System.Web.UI.UpdatePanel>컨트롤.</xref:System.Web.UI.UpdatePanel>       에 대 한 이벤트 처리기를 만들어 타이머 간격이 경과 하는 경우에 서버 코드를 실행할 수는 <xref:System.Web.UI.Timer.Tick>이벤트.</xref:System.Web.UI.Timer.Tick> 이벤트 처리기를 동적으로 타이머 컨트롤의 동작을 조정 하는 코드를 포함할 수 있습니다.       설정의 <xref:System.Web.UI.Timer.Interval%2A>빈도 지정 하는 속성 포스트백 발생 합니다.</xref:System.Web.UI.Timer.Interval%2A> <xref:System.Web.UI.Timer.Enabled%2A>는 타이머 또는 해제 하도록</xref:System.Web.UI.Timer.Enabled%2A> 설정      > [!NOTE] > Timer 컨트롤 웹 서버에 다시 게시 하는 경우의 정확도 ECMAScript (JavaScript)의 정확도에 따라 달라 집니다 `window.setTimeout` 브라우저에서 실행 되는 함수입니다.       <xref:System.Web.UI.Timer.Interval%2A>속성은 밀리초 단위로 정의 됩니다.</xref:System.Web.UI.Timer.Interval%2A> 설정 해야 합니다는 <xref:System.Web.UI.Timer.Interval%2A>속성을 하나 이상 비동기 포스트백이 발생할 수 있는 값으로 다음 포스트백을 시작 하기 전에 완료 됩니다.</xref:System.Web.UI.Timer.Interval%2A> 타이머 컨트롤 벗어납니다는 <xref:System.Web.UI.UpdatePanel>컨트롤 내용의 하는 동안 실행 타이머가 계속는 <xref:System.Web.UI.UpdatePanel>컨트롤 새로 고쳐집니다.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> 이전 포스트백을 처리 하는 동안 새 포스트백이 시작 되 면 첫 번째 포스트백 취소 됩니다. 기본값은 60, 000 밀리초 (60 초)입니다.      > [!NOTE] >의 값이 작은 타이머 컨트롤 추가 <xref:System.Web.UI.Timer.Interval%2A>속성에는 웹 서버에서 중요 한 트래픽이 증가할 수 있습니다.</xref:System.Web.UI.Timer.Interval%2A> 타이머 컨트롤 콘텐츠를만 필요한 만큼 자주 새로 고치는 데 있습니다.      <a name=&quot;declarative_syntax&quot;></a># # 선언적 구문```   <asp:Timer       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       ID=&quot;string&quot;       Interval=&quot;integer&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnTick=&quot;Tick event handler&quot;       OnUnload=&quot;Unload handler&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       Visible=&quot;True|False&quot;   />   ```"
  example:
  - "The following example shows an <xref:System.Web.UI.UpdatePanel> control that displays a randomly generated stock price and the time that the stock price was generated. The Timer control updates the content in the <xref:System.Web.UI.UpdatePanel> control every 10 seconds.  \n  \n> [!NOTE]\n>  In this example, the timer interval is set to 10 seconds so that when you run the example, you do not have to wait a long time to see the results. Because each timer interval causes a postback that causes network traffic, in a production application you should set the interval to the longest time that is still practical for your application.  \n  \n [!code-vb[System.Web.UI.Controls.Timer#1](~/add/codesnippet/visualbasic/t-system.web.ui.timer_1.aspx)]\n [!code-cs[System.Web.UI.Controls.Timer#1](~/add/codesnippet/csharp/t-system.web.ui.timer_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Tick")]

      [System.ComponentModel.DefaultProperty("Interval")]

      [System.ComponentModel.Designer("System.Web.UI.Design.TimerDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]

      [System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), "System.Web.Resources.Timer.bmp")]

      [System.Web.UI.NonVisualControl]

      [System.Web.UI.SupportsEventValidation]

      public class Timer : System.Web.UI.Control, System.Web.UI.IPostBackEventHandler, System.Web.UI.IScriptControl
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements:
  - System.Web.UI.IPostBackEventHandler
  - System.Web.UI.IScriptControl
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableTheming
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  platform:
  - net462
- uid: System.Web.UI.Timer.#ctor
  id: '#ctor'
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: Timer()
  nameWithType: Timer.Timer()
  fullName: System.Web.UI.Timer.Timer()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.Timer&quot;> </xref> 클래스입니다."
  syntax:
    content: public Timer ();
    parameters: []
  overload: System.Web.UI.Timer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Timer.Enabled
  id: Enabled
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: Enabled
  nameWithType: Timer.Enabled
  fullName: System.Web.UI.Timer.Enabled
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "표시 하는 값을 가져오거나 설정 합니다. 여부는 <xref href=&quot;System.Web.UI.Timer&quot;> </xref> 컨트롤에 지정 된 시간 (밀리초)이 지나면 서버에 대 한 포스트백을 시작는 <xref:System.Web.UI.Timer.Interval*>속성 경과.</xref:System.Web.UI.Timer.Interval*>"
  remarks: "Enabled 속성을 사용 하 여는 <xref:System.Web.UI.Timer>컨트롤에 및 해제를</xref:System.Web.UI.Timer> 설정 하려면 Enabled를 설정 하면 `true`, <xref:System.Web.UI.Timer>컨트롤이 웹 페이지를 렌더링할 때 타이머를 세기 시작 합니다.</xref:System.Web.UI.Timer>       다시 게시 될 Enabled 속성의 속성 값을 변경할 수 있습니다 및 브라우저에서 웹 페이지 콘텐츠를 렌더링할 때 변경 내용이 반영 됩니다. Enabled 속성을 변경 하 고 동일한 다시 게시 하는 동안 원래 값으로 다시 변경 된 <xref:System.Web.UI.Timer>변하지가 적용 하는 경우 실행을 제어 합니다.</xref:System.Web.UI.Timer>"
  example:
  - "The following example shows an <xref:System.Web.UI.UpdatePanel> control that displays a randomly generated stock price and the time that the stock price was generated. By default, the <xref:System.Web.UI.Timer> control updates the content in the <xref:System.Web.UI.UpdatePanel> control every 10 seconds. The user can decide to update the stock price every 10 seconds, every 60 seconds, or not at all. When the user decides not to update the stock price, the Enabled property is set to `false`.  \n  \n [!code-vb[System.Web.UI.Controls.Timer.Interval#1](~/add/codesnippet/visualbasic/p-system.web.ui.timer.en_1.aspx)]\n [!code-cs[System.Web.UI.Controls.Timer.Interval#1](~/add/codesnippet/csharp/p-system.web.ui.timer.en_1.aspx)]"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <xref href=&quot;System.Web.UI.Timer&quot;> </xref> 포스트백을 시작 하는, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Timer.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Timer.GetScriptDescriptors
  id: GetScriptDescriptors
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: GetScriptDescriptors()
  nameWithType: Timer.GetScriptDescriptors()
  fullName: System.Web.UI.Timer.GetScriptDescriptors()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "속성을 검색 한 <xref href=&quot;System.Web.UI.Timer&quot;> </xref> 브라우저에서 타이머 논리를 구현 하는 클라이언트 구성 요소에 전달 되는 개체입니다."
  remarks: "GetScriptDescriptors 메서드 추가 <xref:System.Web.UI.Timer.Interval%2A>및 <xref:System.Web.UI.Timer.Enabled%2A>속성의 인스턴스에서 <xref:System.Web.UI.Timer>에 클래스는 <xref:System.Web.UI.ScriptDescriptor>개체.</xref:System.Web.UI.ScriptDescriptor> </xref:System.Web.UI.Timer> </xref:System.Web.UI.Timer.Enabled%2A> </xref:System.Web.UI.Timer.Interval%2A> 클라이언트 구성 요소는 값에 액세스 하 고 스크립트에 해당 하는 값을 설정 합니다."
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<System.Web.UI.ScriptDescriptor> GetScriptDescriptors ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Web.UI.ScriptDescriptor}
      description: "형식의 배열 <xref href=&quot;System.Web.UI.ScriptDescriptor&quot;> </xref>합니다."
  overload: System.Web.UI.Timer.GetScriptDescriptors*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Timer.GetScriptReferences
  id: GetScriptReferences
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: GetScriptReferences()
  nameWithType: Timer.GetScriptReferences()
  fullName: System.Web.UI.Timer.GetScriptReferences()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "에 대 한 클라이언트 스크립트를 검색 된 <xref href=&quot;System.Web.UI.Timer&quot;> </xref> 제어 합니다."
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<System.Web.UI.ScriptReference> GetScriptReferences ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Web.UI.ScriptReference}
      description: "A <xref href=&quot;System.Web.UI.ScriptReference&quot;> </xref> 개체에 대 한 클라이언트 스크립트를 포함 하는 <xref href=&quot;System.Web.UI.Timer&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.Timer.GetScriptReferences*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Timer.Interval
  id: Interval
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: Interval
  nameWithType: Timer.Interval
  fullName: System.Web.UI.Timer.Interval
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "포스트백을 시작 하기 전에 대기할 밀리초 수를 가져오거나 설정 합니다."
  remarks: "간격 속성을 사용 하 여 빈도 설정 하는 <xref:System.Web.UI.Timer>제어 서버에 대 한 포스트백을 시작 합니다.</xref:System.Web.UI.Timer> 에 대 한 이벤트 처리기에서와 같은 서버 코드에서 간격 속성의 값을 다시 게시 한 후 변경할 수는 <xref:System.Web.UI.Timer.Tick>이벤트.</xref:System.Web.UI.Timer.Tick> 경우 정확도 <xref:System.Web.UI.Timer>웹 서버에 다시 제어 게시물 ECMAScript (JavaScript)의 정확성에 따라 달라 집니다 `window.setTimeout` 브라우저에서 실행 되는 함수.</xref:System.Web.UI.Timer>      > [!NOTE] > Interval 속성을 작은 값으로 설정 하 고 웹 서버에서 중요 한 트래픽이 증가할 수 있습니다. 사용 하 여는 <xref:System.Web.UI.Timer>만 필요한 만큼 자주 내용을 새로 고치려면 컨트롤.</xref:System.Web.UI.Timer>       Interval 속성의 값을 변경 하면 업데이트가 렌더링 될 때 브라우저에서 실행 되는 ECMAScript 타이밍 코드를 다시 설정 됩니다."
  example:
  - "The following example shows an <xref:System.Web.UI.UpdatePanel> control that displays a randomly generated stock price and the time that the stock price was generated. By default, the <xref:System.Web.UI.Timer> control updates the content in the <xref:System.Web.UI.UpdatePanel> control every 10 seconds. The user can decide to update the stock price every 10 seconds, every 60 seconds, or not at all. The Interval property is set to the user's choice.  \n  \n [!code-vb[System.Web.UI.Controls.Timer.Interval#1](~/add/codesnippet/visualbasic/p-system.web.ui.timer.in_1.aspx)]\n [!code-cs[System.Web.UI.Controls.Timer.Interval#1](~/add/codesnippet/csharp/p-system.web.ui.timer.in_1.aspx)]"
  syntax:
    content: public int Interval { get; set; }
    return:
      type: System.Int32
      description: "포스트백을 시작 하기 전에 대기할 밀리초 수입니다. 기본값은 60000 (60 초)입니다."
  overload: System.Web.UI.Timer.Interval*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정된 된 값 보다 작거나&0;입니다."
  platform:
  - net462
- uid: System.Web.UI.Timer.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: Timer.OnPreRender(EventArgs)
  fullName: System.Web.UI.Timer.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "발생는 <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref> 의 이벤트는 <xref href=&quot;System.Web.UI.Timer&quot;> </xref> 제어 합니다."
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는 개체입니다.</xref:System.EventArgs>"
  overload: System.Web.UI.Timer.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Timer.OnTick(System.EventArgs)
  id: OnTick(System.EventArgs)
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: OnTick(EventArgs)
  nameWithType: Timer.OnTick(EventArgs)
  fullName: System.Web.UI.Timer.OnTick(EventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "발생는 <xref href=&quot;System.Web.UI.Timer.Tick&quot;> </xref> 의 이벤트는 <xref href=&quot;System.Web.UI.Timer&quot;> </xref> 제어 합니다."
  remarks: "<xref:System.Web.UI.Timer.Tick>이벤트는에 지정 된 시간 (밀리초)는 <xref:System.Web.UI.Timer.Interval%2A>웹 페이지가 렌더링 된 후 이후 또는 이전 속성 경과 <xref:System.Web.UI.Timer.Tick>이벤트.</xref:System.Web.UI.Timer.Tick> </xref:System.Web.UI.Timer.Interval%2A> </xref:System.Web.UI.Timer.Tick>"
  example:
  - "The following example shows an <xref:System.Web.UI.UpdatePanel> control that displays a randomly generated stock price and the time that the stock price was generated. The <xref:System.Web.UI.Timer> control updates the content in the <xref:System.Web.UI.UpdatePanel> control every 10 seconds. The stock price and the time are set in a handler for the <xref:System.Web.UI.Timer.Tick> event.  \n  \n [!code-vb[System.Web.UI.Controls.Timer#1](~/add/codesnippet/visualbasic/m-system.web.ui.timer.on_1.aspx)]\n [!code-cs[System.Web.UI.Controls.Timer#1](~/add/codesnippet/csharp/m-system.web.ui.timer.on_1.aspx)]"
  syntax:
    content: protected virtual void OnTick (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는 개체입니다.</xref:System.EventArgs>"
  overload: System.Web.UI.Timer.OnTick*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Timer.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: Timer.RaisePostBackEvent(String)
  fullName: System.Web.UI.Timer.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "수 있도록는 <xref href=&quot;System.Web.UI.Timer&quot;> </xref> 를 발생 시키는 컨트롤의 <xref href=&quot;System.Web.UI.Timer.Tick&quot;> </xref> 페이지가 서버에 게시 될 때 이벤트입니다."
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "이벤트 처리기에 전달할 선택적 인수는 문자열입니다."
  overload: System.Web.UI.Timer.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Timer.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: Timer.Render(HtmlTextWriter)
  fullName: System.Web.UI.Timer.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "렌더링 된 <xref href=&quot;System.Web.UI.Timer&quot;> </xref> 내용을 클라이언트 브라우저에 지정 된를 사용 하 여 제어 <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> 개체입니다."
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> 렌더링 하는 데 사용 되는 개체는 <xref href=&quot;System.Web.UI.Timer&quot;> </xref> 브라우저에 콘텐츠를 제어 합니다."
  overload: System.Web.UI.Timer.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Timer.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: Timer.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.Timer.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "발생는 <xref href=&quot;System.Web.UI.Timer.Tick&quot;> </xref> 페이지가 서버에 게시 될 때 이벤트입니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.Timer>인스턴스로 캐스팅 되는 <xref:System.Web.UI.IPostBackEventHandler>인터페이스.</xref:System.Web.UI.IPostBackEventHandler> </xref:System.Web.UI.Timer>"
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "이벤트 처리기에 전달할 선택적 인수는 문자열입니다."
  overload: System.Web.UI.Timer.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptDescriptors
  id: System#Web#UI#IScriptControl#GetScriptDescriptors
  isEii: true
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: System.Web.UI.IScriptControl.GetScriptDescriptors()
  nameWithType: Timer.System.Web.UI.IScriptControl.GetScriptDescriptors()
  fullName: System.Web.UI.Timer.System.Web.UI.IScriptControl.GetScriptDescriptors()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "속성을 검색 한 <xref href=&quot;System.Web.UI.Timer&quot;> </xref> 클라이언트 구성 요소에 전달 되는 개체입니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.Timer>인스턴스로 캐스팅 되는 <xref:System.Web.UI.IScriptControl>인터페이스.</xref:System.Web.UI.IScriptControl> </xref:System.Web.UI.Timer>       <xref:System.Web.UI.Timer.GetScriptDescriptors%2A>메서드 추가 <xref:System.Web.UI.Timer.Interval%2A>및 <xref:System.Web.UI.Timer.Enabled%2A>속성의 인스턴스에서 <xref:System.Web.UI.Timer>에 클래스는 <xref:System.Web.UI.ScriptDescriptor>개체.</xref:System.Web.UI.ScriptDescriptor> </xref:System.Web.UI.Timer> </xref:System.Web.UI.Timer.Enabled%2A> </xref:System.Web.UI.Timer.Interval%2A> </xref:System.Web.UI.Timer.GetScriptDescriptors%2A> 클라이언트 구성 요소 값을 검색 하 고 스크립트에 해당 하는 값을 설정 합니다."
  syntax:
    content: System.Collections.Generic.IEnumerable<System.Web.UI.ScriptDescriptor> IScriptControl.GetScriptDescriptors ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Web.UI.ScriptDescriptor}
      description: "형식의 배열 <xref href=&quot;System.Web.UI.ScriptDescriptor&quot;> </xref>합니다."
  overload: System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptDescriptors*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptReferences
  id: System#Web#UI#IScriptControl#GetScriptReferences
  isEii: true
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: System.Web.UI.IScriptControl.GetScriptReferences()
  nameWithType: Timer.System.Web.UI.IScriptControl.GetScriptReferences()
  fullName: System.Web.UI.Timer.System.Web.UI.IScriptControl.GetScriptReferences()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "에 대 한 클라이언트 스크립트를 검색 된 <xref href=&quot;System.Web.UI.Timer&quot;> </xref> 제어 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.Timer>인스턴스로 캐스팅 되는 <xref:System.Web.UI.IScriptControl>인터페이스.</xref:System.Web.UI.IScriptControl> </xref:System.Web.UI.Timer>"
  syntax:
    content: System.Collections.Generic.IEnumerable<System.Web.UI.ScriptReference> IScriptControl.GetScriptReferences ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Web.UI.ScriptReference}
      description: "A <xref href=&quot;System.Web.UI.ScriptReference&quot;> </xref> 개체에 대 한 클라이언트 스크립트를 포함 하는 <xref href=&quot;System.Web.UI.Timer&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptReferences*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Timer.Tick
  id: Tick
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: Tick
  nameWithType: Timer.Tick
  fullName: System.Web.UI.Timer.Tick
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "에 지정 된 시간 (밀리초)의 경우에 발생는 <xref:System.Web.UI.Timer.Interval*>속성 경과 되 고 페이지는 서버에 게시 됩니다.</xref:System.Web.UI.Timer.Interval*>"
  remarks: "에 지정 된 밀리초 수 때 Tick 이벤트 발생는 <xref:System.Web.UI.Timer.Interval%2A>속성 웹 페이지 마지막으로 렌더링 된 후 또는 이전 Tick 이벤트 이후 경과한.</xref:System.Web.UI.Timer.Interval%2A> 각 다시 게시 하는 동안 작업을 수행 해야 할 경우 Tick 이벤트를 처리 합니다."
  example:
  - "The following example shows an <xref:System.Web.UI.UpdatePanel> control that displays a randomly generated stock price and the time that the stock price was generated. The <xref:System.Web.UI.Timer> control updates the content in the <xref:System.Web.UI.UpdatePanel> control every 10 seconds. The stock price and the time are set in a handler for the Tick event.  \n  \n [!code-vb[System.Web.UI.Controls.Timer#1](~/add/codesnippet/visualbasic/e-system.web.ui.timer.tick_1.aspx)]\n [!code-cs[System.Web.UI.Controls.Timer#1](~/add/codesnippet/csharp/e-system.web.ui.timer.tick_1.aspx)]"
  syntax:
    content: public event EventHandler<EventArgs> Tick;
    return:
      type: System.EventHandler{System.EventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Timer.Visible
  id: Visible
  parent: System.Web.UI.Timer
  langs:
  - csharp
  name: Visible
  nameWithType: Timer.Visible
  fullName: System.Web.UI.Timer.Visible
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "재정의 <xref:System.Web.UI.Control.Visible*>의 속성은 <xref href=&quot;System.Web.UI.Control&quot;> </xref> 설정에서이 값을 방지 하기 위해 클래스.</xref:System.Web.UI.Control.Visible*>"
  remarks: "`Visible` 속성에서 재정의 되는 <xref:System.Web.UI.Timer>을이 속성을 설정할.</xref:System.Web.UI.Timer> `Visible` 속성에서 반환 `true` 경우의 클라이언트 구성 요소는 <xref:System.Web.UI.Timer>클래스가 웹 페이지에 포함 되어 경우에 <xref:System.Web.UI.Timer.Enabled%2A>로 설정 된 `false`.</xref:System.Web.UI.Timer.Enabled%2A> </xref:System.Web.UI.Timer> `Visible` 속성에서 반환 `false` 되었을 때와 컨테이너 내부와 같은 프로그램 <xref:System.Web.UI.UpdatePanel>컨트롤을 `Visible` 속성이 `false`.</xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: public override bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 페이지에 렌더링 되는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Timer.Visible*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "값에 할당 되는 `Visible` 속성입니다."
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotImplementedException
  isExternal: true
  name: System.NotImplementedException
- uid: System.Web.UI.Timer.#ctor
  parent: System.Web.UI.Timer
  isExternal: false
  name: Timer()
  nameWithType: Timer.Timer()
  fullName: System.Web.UI.Timer.Timer()
- uid: System.Web.UI.Timer.Enabled
  parent: System.Web.UI.Timer
  isExternal: false
  name: Enabled
  nameWithType: Timer.Enabled
  fullName: System.Web.UI.Timer.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.Timer.GetScriptDescriptors
  parent: System.Web.UI.Timer
  isExternal: false
  name: GetScriptDescriptors()
  nameWithType: Timer.GetScriptDescriptors()
  fullName: System.Web.UI.Timer.GetScriptDescriptors()
- uid: System.Collections.Generic.IEnumerable{System.Web.UI.ScriptDescriptor}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ScriptDescriptor>
  nameWithType: IEnumerable<ScriptDescriptor>
  fullName: System.Collections.Generic.IEnumerable<System.Web.UI.ScriptDescriptor>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Web.UI.ScriptDescriptor>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.ScriptDescriptor
    name: ScriptDescriptor
    nameWithType: ScriptDescriptor
    fullName: ScriptDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.Timer.GetScriptReferences
  parent: System.Web.UI.Timer
  isExternal: false
  name: GetScriptReferences()
  nameWithType: Timer.GetScriptReferences()
  fullName: System.Web.UI.Timer.GetScriptReferences()
- uid: System.Collections.Generic.IEnumerable{System.Web.UI.ScriptReference}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ScriptReference>
  nameWithType: IEnumerable<ScriptReference>
  fullName: System.Collections.Generic.IEnumerable<System.Web.UI.ScriptReference>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Web.UI.ScriptReference>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.ScriptReference
    name: ScriptReference
    nameWithType: ScriptReference
    fullName: ScriptReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.Timer.Interval
  parent: System.Web.UI.Timer
  isExternal: false
  name: Interval
  nameWithType: Timer.Interval
  fullName: System.Web.UI.Timer.Interval
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.Timer.OnPreRender(System.EventArgs)
  parent: System.Web.UI.Timer
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: Timer.OnPreRender(EventArgs)
  fullName: System.Web.UI.Timer.OnPreRender(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.Timer.OnTick(System.EventArgs)
  parent: System.Web.UI.Timer
  isExternal: false
  name: OnTick(EventArgs)
  nameWithType: Timer.OnTick(EventArgs)
  fullName: System.Web.UI.Timer.OnTick(EventArgs)
- uid: System.Web.UI.Timer.RaisePostBackEvent(System.String)
  parent: System.Web.UI.Timer
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: Timer.RaisePostBackEvent(String)
  fullName: System.Web.UI.Timer.RaisePostBackEvent(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.Timer.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Timer
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: Timer.Render(HtmlTextWriter)
  fullName: System.Web.UI.Timer.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.Timer.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.Timer
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: Timer.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.Timer.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptDescriptors
  parent: System.Web.UI.Timer
  isExternal: false
  name: System.Web.UI.IScriptControl.GetScriptDescriptors()
  nameWithType: Timer.System.Web.UI.IScriptControl.GetScriptDescriptors()
  fullName: System.Web.UI.Timer.System.Web.UI.IScriptControl.GetScriptDescriptors()
- uid: System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptReferences
  parent: System.Web.UI.Timer
  isExternal: false
  name: System.Web.UI.IScriptControl.GetScriptReferences()
  nameWithType: Timer.System.Web.UI.IScriptControl.GetScriptReferences()
  fullName: System.Web.UI.Timer.System.Web.UI.IScriptControl.GetScriptReferences()
- uid: System.Web.UI.Timer.Tick
  parent: System.Web.UI.Timer
  isExternal: false
  name: Tick
  nameWithType: Timer.Tick
  fullName: System.Web.UI.Timer.Tick
- uid: System.EventHandler{System.EventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EventArgs>
  nameWithType: EventHandler<EventArgs>
  fullName: System.EventHandler<System.EventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.EventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: EventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.Timer.Visible
  parent: System.Web.UI.Timer
  isExternal: false
  name: Visible
  nameWithType: Timer.Visible
  fullName: System.Web.UI.Timer.Visible
- uid: System.Web.UI.Timer.#ctor*
  parent: System.Web.UI.Timer
  isExternal: false
  name: Timer
  nameWithType: Timer.Timer
- uid: System.Web.UI.Timer.Enabled*
  parent: System.Web.UI.Timer
  isExternal: false
  name: Enabled
  nameWithType: Timer.Enabled
- uid: System.Web.UI.Timer.GetScriptDescriptors*
  parent: System.Web.UI.Timer
  isExternal: false
  name: GetScriptDescriptors
  nameWithType: Timer.GetScriptDescriptors
- uid: System.Web.UI.Timer.GetScriptReferences*
  parent: System.Web.UI.Timer
  isExternal: false
  name: GetScriptReferences
  nameWithType: Timer.GetScriptReferences
- uid: System.Web.UI.Timer.Interval*
  parent: System.Web.UI.Timer
  isExternal: false
  name: Interval
  nameWithType: Timer.Interval
- uid: System.Web.UI.Timer.OnPreRender*
  parent: System.Web.UI.Timer
  isExternal: false
  name: OnPreRender
  nameWithType: Timer.OnPreRender
- uid: System.Web.UI.Timer.OnTick*
  parent: System.Web.UI.Timer
  isExternal: false
  name: OnTick
  nameWithType: Timer.OnTick
- uid: System.Web.UI.Timer.RaisePostBackEvent*
  parent: System.Web.UI.Timer
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: Timer.RaisePostBackEvent
- uid: System.Web.UI.Timer.Render*
  parent: System.Web.UI.Timer
  isExternal: false
  name: Render
  nameWithType: Timer.Render
- uid: System.Web.UI.Timer.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.Timer
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: Timer.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptDescriptors*
  parent: System.Web.UI.Timer
  isExternal: false
  name: System.Web.UI.IScriptControl.GetScriptDescriptors
  nameWithType: Timer.System.Web.UI.IScriptControl.GetScriptDescriptors
- uid: System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptReferences*
  parent: System.Web.UI.Timer
  isExternal: false
  name: System.Web.UI.IScriptControl.GetScriptReferences
  nameWithType: Timer.System.Web.UI.IScriptControl.GetScriptReferences
- uid: System.Web.UI.Timer.Visible*
  parent: System.Web.UI.Timer
  isExternal: false
  name: Visible
  nameWithType: Timer.Visible
