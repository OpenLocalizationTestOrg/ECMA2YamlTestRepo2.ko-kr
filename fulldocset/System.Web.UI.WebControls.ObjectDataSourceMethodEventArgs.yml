### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
  id: ObjectDataSourceMethodEventArgs
  children:
  - System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.#ctor(System.Collections.Specialized.IOrderedDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters
  langs:
  - csharp
  name: ObjectDataSourceMethodEventArgs
  nameWithType: ObjectDataSourceMethodEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
  type: Class
  summary: "에 대 한 데이터를 제공는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.Inserting&quot;> </xref>, <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.Updating&quot;> </xref>, 및 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.Deleting&quot;> </xref> 의 이벤트는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> 제어 합니다."
  remarks: "ObjectDataSourceMethodEventArgs 클래스에 사용 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A>, 및 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A>에 전달 되는 입력된 매개 변수에 대 한 액세스를 제공 하는 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>, 및 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>의 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> 이러한 매개 변수를 사용 하 여 액세스는 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>속성.</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> 처리 하는 대리자를 추가 하 여는 <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>, <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, 또는 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>이벤트를 검토 하 고 매개 변수 값을 조작 하 고 필요한 모든 추가 전처리를 수행할 수 있습니다.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> </xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> </xref:System.Web.UI.WebControls.ObjectDataSource.Updating> </xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> 이 사전에 있는 매개 변수 변경 내용이 작업에 대해 호출 됩니다는 메서드 오버 로드에 영향을 줍니다. 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>속성은 <xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤 설정만이 사전에 있는 항목에 대 한 데이터 개체 속성을 수정할 수 있습니다; 매개 변수를 제거 하거나 추가할 수 없습니다.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 을 참조 하십시오.       <xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤 수명 주기에서 다양 한 시간에는 기본 비즈니스 개체와 작동 하도록 처리할 수 있는 많은 이벤트를 노출 합니다.</xref:System.Web.UI.WebControls.ObjectDataSource> 다음 표에서 이벤트를 나열 및 관련 <xref:System.EventArgs>클래스와 이벤트 처리기 대리자.</xref:System.EventArgs>      | 이벤트 | `EventArgs` 클래스 | 이벤트 처리기 대리자 |   |-----------|-----------------------|---------------------------|   | <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating><br /><br /> 비즈니스 개체의 인스턴스가 생성 되는 바로 전에 발생 합니다. | <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs><br /><br /> 비즈니스 개체의 인스턴스를 만든 직후에 발생 합니다. | <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Selecting></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs><br /><br /> 데이터를 검색 하기 전에 발생 합니다. | <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>, and <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleting></xref:System.Web.UI.WebControls.ObjectDataSource.Updating></xref:System.Web.UI.WebControls.ObjectDataSource.Inserting></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs><br /><br /> 업데이트 또는 삭제 작업이 수행 되는 삽입 하기 전에 발생 합니다. | ObjectDataSourceMethodEventArgs | <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>.</xref:System.Web.UI.WebControls.ObjectDataSource.Selected></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler><br /><br /> 데이터를 검색 한 후에 발생 합니다. | <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, and <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted></xref:System.Web.UI.WebControls.ObjectDataSource.Updated></xref:System.Web.UI.WebControls.ObjectDataSource.Inserted></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs><br /><br /> 업데이트 또는 삭제 작업이 완료 되는 삽입 이후의 발생 합니다. | <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs><br /><br /> 비즈니스 개체를 제거 하기 전에 발생 합니다. | <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|</xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example middle-tier business object that is used by the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The <xref:System.Web.UI.WebControls.DetailsView> initially displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button, and the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> property will identify which method performs the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> action.  \n  \n In this example, the `UpdateEmployeeInfo` method is used to perform an insert; however, it requires a `NorthwindEmployee` parameter to insert the data. For this reason, the collection of strings that the <xref:System.Web.UI.WebControls.DetailsView> control passes automatically is not sufficient. The `NorthwindEmployeeInserting` delegate is an <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> object that handles the <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> event and enables you to manipulate the input parameters before the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operation proceeds. Because the `UpdateEmployeeInfo` method requires a `NorthwindEmployee` object as a parameter, one is created using the collection of strings and is added to the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> collection.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_181_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_181_1.aspx)]  \n  \n The following code example provides an example middle-tier business object that the preceding code example uses. The following list describes the two major classes that are defined in the code example:  \n  \n-   The `EmployeeLogic` class, which is a stateless class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n In addition, a `NorthwindDataException` class is provided as a convenience.  \n  \n This set of example classes uses the Northwind Traders database, which is an example database available with Microsoft SQL Server and Microsoft Access. For a complete working example, use these classes by placing them in the App_Code directory under the application root or by compiling them and placing the resulting DLL in the Bin directory. The `UpdateEmployeeInfo` method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this example.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_181_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_181_2.cs)]"
  syntax:
    content: 'public class ObjectDataSourceMethodEventArgs : System.ComponentModel.CancelEventArgs'
  inheritance:
  - System.ComponentModel.CancelEventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.#ctor(System.Collections.Specialized.IOrderedDictionary)
  id: '#ctor(System.Collections.Specialized.IOrderedDictionary)'
  parent: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
  langs:
  - csharp
  name: ObjectDataSourceMethodEventArgs(IOrderedDictionary)
  nameWithType: ObjectDataSourceMethodEventArgs.ObjectDataSourceMethodEventArgs(IOrderedDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.ObjectDataSourceMethodEventArgs(IOrderedDictionary)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&quot;> </xref> 클래스 지정 된 입력된 매개 변수 컬렉션을 사용 합니다."
  syntax:
    content: public ObjectDataSourceMethodEventArgs (System.Collections.Specialized.IOrderedDictionary inputParameters);
    parameters:
    - id: inputParameters
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> 의 <xref href=&quot;System.Web.UI.WebControls.Parameter&quot;> </xref> 비즈니스 개체 메서드 및 연결 된 값의 매개 변수 이름을 나타내는 개체입니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters
  id: InputParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
  langs:
  - csharp
  name: InputParameters
  nameWithType: ObjectDataSourceMethodEventArgs.InputParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "비즈니스 개체에 대 한 메서드 매개 변수 및 해당 값을 포함 하는 컬렉션을 가져옵니다."
  remarks: "매개 변수 값 또는 참조로 비즈니스 개체 메서드를 전달할 수 있습니다. 사용 하는 경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>개체를 처리 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting>, 또는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>이벤트에 액세스 하 고 조작할 수 InputParameters 속성을 사용 하 여 이러한 매개 변수.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> 이 사전에 있는 매개 변수 변경 내용이 작업에 대해 호출 됩니다는 메서드 오버 로드에 영향을 줍니다.  경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>속성은 <xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤 설정만이 사전에 있는 항목에 대 한 데이터 개체 속성을 수정할 수 있습니다; 매개 변수를 제거 하거나 추가할 수 없습니다.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 을 참조 하십시오.       참조로 전달 되는 매개 변수 반환 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A>의 속성은 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>개체입니다.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A>"
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a Northwind Employee, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> property contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList> control, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> method is only enabled after an employee is selected.  \n  \n In this example, the `NorthwindEmployeeUpdating` method is called before the <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> method to add the correct parameters and values to the InputParameters collection. You can add the parameters and values dynamically, as demonstrated, or declaratively.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_736_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_736_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary InputParameters { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref:System.Collections.IDictionary>비즈니스 개체 메서드 매개 변수 및 해당 값을 나타내는 이름/값 쌍의.</xref:System.Collections.IDictionary>"
  overload: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.CancelEventArgs
  isExternal: false
  name: System.ComponentModel.CancelEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.#ctor(System.Collections.Specialized.IOrderedDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
  isExternal: false
  name: ObjectDataSourceMethodEventArgs(IOrderedDictionary)
  nameWithType: ObjectDataSourceMethodEventArgs.ObjectDataSourceMethodEventArgs(IOrderedDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.ObjectDataSourceMethodEventArgs(IOrderedDictionary)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
  isExternal: false
  name: InputParameters
  nameWithType: ObjectDataSourceMethodEventArgs.InputParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.#ctor*
  parent: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
  isExternal: false
  name: ObjectDataSourceMethodEventArgs
  nameWithType: ObjectDataSourceMethodEventArgs.ObjectDataSourceMethodEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
  isExternal: false
  name: InputParameters
  nameWithType: ObjectDataSourceMethodEventArgs.InputParameters
