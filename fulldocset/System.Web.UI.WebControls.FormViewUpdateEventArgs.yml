### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs
  id: FormViewUpdateEventArgs
  children:
  - System.Web.UI.WebControls.FormViewUpdateEventArgs.#ctor(System.Object)
  - System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument
  - System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys
  - System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues
  - System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues
  langs:
  - csharp
  name: FormViewUpdateEventArgs
  nameWithType: FormViewUpdateEventArgs
  fullName: System.Web.UI.WebControls.FormViewUpdateEventArgs
  type: Class
  summary: "에 대 한 데이터를 제공는 <xref href=&quot;System.Web.UI.WebControls.FormView.ItemUpdating&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Web.UI.WebControls.FormView>발생는 <xref:System.Web.UI.WebControls.FormView.ItemUpdating>업데이트 단추 이벤트 (된 단추 해당 `CommandName` 속성이 &quot;업데이트&quot;로 설정) 컨트롤 내에서 클릭 하기 전에 <xref:System.Web.UI.WebControls.FormView>레코드를 업데이트 합니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemUpdating> </xref:System.Web.UI.WebControls.FormView> 이 옵션을 사용 하면 HTML 인코딩 또는 레코드 값이이 이벤트가 발생할 때마다 데이터 원본에서 업데이트 하기 전에 유효성을 검사 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       FormViewUpdateEventArgs 개체에 전송 하는 선택적 명령 인수의 값을 확인할 수 있는 이벤트 처리 메서드에 전달 되는 <xref:System.Web.UI.WebControls.FormView>제어 하 고 업데이트 작업을 취소 해야 하는지 여부를 나타내는.</xref:System.Web.UI.WebControls.FormView> 사용 하 여 명령 인수의 값을 확인 하려면는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A>속성.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A> 업데이트 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>속성을 `true`.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 업데이트 되는 레코드에 대 한 원래 키 필드 값에 액세스를 사용 해야 하는 경우는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>속성.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 키가 아닌 필드의 원래 값을 사용 하 여 액세스할 수는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A>속성.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> 업데이트 된 값 (키 필드를 편집 하려면 사용자를 허용 하는 경우 업데이트 된 키 필드 값을 포함)를 사용 하 여 액세스는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>속성.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.       목록이 FormViewUpdateEventArgs 클래스의 인스턴스에 대 한 초기 속성 값에 대 한 참조는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.%23ctor%2A>생성자.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.%23ctor%2A>"
  example:
  - "The following example demonstrates how to use the FormViewUpdateEventArgs object passed to the event-handling method for the <xref:System.Web.UI.WebControls.FormView.ItemUpdating> event to validate the values entered by the user.  \n  \n [!code-cs[FormViewUpdateEventArgs#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_164_1.aspx)]\n [!code-vb[FormViewUpdateEventArgs#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_164_1.aspx)]"
  syntax:
    content: 'public class FormViewUpdateEventArgs : System.ComponentModel.CancelEventArgs'
  inheritance:
  - System.ComponentModel.CancelEventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs
  langs:
  - csharp
  name: FormViewUpdateEventArgs(Object)
  nameWithType: FormViewUpdateEventArgs.FormViewUpdateEventArgs(Object)
  fullName: System.Web.UI.WebControls.FormViewUpdateEventArgs.FormViewUpdateEventArgs(Object)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.FormViewUpdateEventArgs&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs>클래스</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> 의 새 인스턴스를 초기화 하려면이 생성자를 사용 합니다.       다음 표에서 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs>클래스</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> 의 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 초기 값 |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A>| 값은 `commandArgument` 매개 변수입니다. |      > [!NOTE] > 이벤트를 발생 시킬 때이 생성자는 주로 컨트롤 개발자가 사용 합니다.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A>"
  syntax:
    content: public FormViewUpdateEventArgs (object commandArgument);
    parameters:
    - id: commandArgument
      type: System.Object
      description: "로 전달 되는 선택적 명령 인수는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.FormViewUpdateEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument
  id: CommandArgument
  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs
  langs:
  - csharp
  name: CommandArgument
  nameWithType: FormViewUpdateEventArgs.CommandArgument
  fullName: System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 전달 되는 업데이트 작업에 대 한 명령 인수를 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "템플릿 중 하나에 대 한 업데이트 단추를 만들 때는 <xref:System.Web.UI.WebControls.FormView>컨트롤을 사용 하 여 필요에 따라 단추에 대 한 명령 인수를 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.IButtonControl.CommandArgument%2A?displayProperty=fullName>속성.</xref:System.Web.UI.WebControls.IButtonControl.CommandArgument%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.FormView> 명령 인수는 일반적으로 키 필드에 대 한 값과 같은 update 명령에 표시할의 선택적 정보를 포함 합니다. <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A>속성은 업데이트 단추 명령 인수의 값을 결정 하는 편리한 방법을 제공 합니다.</xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A>"
  syntax:
    content: public object CommandArgument { get; }
    return:
      type: System.Object
      description: "로 전달 되는 업데이트 작업에 대 한 명령 인수는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys
  id: Keys
  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs
  langs:
  - csharp
  name: Keys
  nameWithType: FormViewUpdateEventArgs.Keys
  fullName: System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "업데이트에 레코드에 대 한 키 필드의 원래 이름/값 쌍을 포함 하는 사전을 가져옵니다."
  remarks: "키 속성에 나열 된 키 필드의 원래 값이 포함 된 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>속성의는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> 업데이트할 레코드에 대 한 키 필드의 원래 값에 액세스 하려면 키 속성을 사용 합니다. 예를 들어 업데이트 된 레코드의 로그를 유지할 이러한 값을 사용할 수 있습니다.      > [!NOTE] > 키 필드의 값을 업데이트 하려는 사용자를 허용 하는 경우 키 속성 키 필드의 원래 값에 포함 합니다. 업데이트 된 값에 저장 됩니다는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>속성.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>       키 속성은 반환 된 <xref:System.Collections.Specialized.OrderedDictionary>구현 하는 개체는 <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName>인터페이스.</xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> <xref:System.Collections.Specialized.OrderedDictionary>개체에 포함 되어 <xref:System.Collections.DictionaryEntry?displayProperty=fullName>업데이트 된 레코드의 필드를 나타내는 개체입니다.</xref:System.Collections.DictionaryEntry?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> 필드 이름에 액세스 하려면 사용 하 여는 <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>의 속성은 <xref:System.Collections.Specialized.OrderedDictionary>개체입니다.</xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> 마찬가지로, 사용 하 여 필드 값에 액세스할 수 있습니다는 <xref:System.Collections.Specialized.OrderedDictionary.Values%2A>속성.</xref:System.Collections.Specialized.OrderedDictionary.Values%2A>      > [!NOTE] >를 사용할 수도 있습니다의 인덱서는 <xref:System.Collections.Specialized.OrderedDictionary>직접 값 필드에 액세스 하는 개체입니다.</xref:System.Collections.Specialized.OrderedDictionary> 데이터 소스 필드 순서를 사용 하는 컨트롤 (예: <xref:System.Web.UI.WebControls.AccessDataSource>) 인덱스로 필드 값에 액세스할 수 있습니다.</xref:System.Web.UI.WebControls.AccessDataSource>"
  example:
  - "The following example demonstrates how to use the Keys property to access the value of the key field for the record being updated.  \n  \n [!code-cs[FormViewUpdateEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_878_1.aspx)]\n [!code-vb[FormViewUpdateEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_878_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary Keys { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> 업데이트할 레코드에 대 한 키 필드의 원래 이름/값 쌍의 사전에 들어 있는입니다."
  overload: System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues
  id: NewValues
  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs
  langs:
  - csharp
  name: NewValues
  nameWithType: FormViewUpdateEventArgs.NewValues
  fullName: System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "업데이트 하는 레코드에 대 한 필드의 새 이름/값 쌍을 포함 하는 사전을 가져옵니다."
  remarks: "새 값 속성을 사용 하 여 업데이트할 레코드에 대 한 새 필드 값에 액세스 하도록 합니다. 예를 들어 업데이트 된 레코드의 로그를 유지할 이러한 값을 사용할 수 있습니다.      > [!NOTE] > 키 필드의 값을 업데이트 하는 사용자를 허용 하는 경우는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>속성 키 필드의 원래 값을 포함 합니다.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 업데이트 된 값은 새 값 속성에 저장 됩니다.       NewValues 속성은 반환 된 <xref:System.Collections.Specialized.OrderedDictionary>구현 하는 개체는 <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName>인터페이스.</xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> <xref:System.Collections.Specialized.OrderedDictionary>개체에 포함 되어 <xref:System.Collections.DictionaryEntry?displayProperty=fullName>업데이트 된 레코드의 필드를 나타내는 개체입니다.</xref:System.Collections.DictionaryEntry?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> 필드 이름에 액세스 하려면 사용 하 여는 <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>의 속성은 <xref:System.Collections.Specialized.OrderedDictionary>개체입니다.</xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> 마찬가지로, 사용 하 여 필드 값에 액세스할 수 있습니다는 <xref:System.Collections.Specialized.OrderedDictionary.Values%2A>속성.</xref:System.Collections.Specialized.OrderedDictionary.Values%2A>      > [!NOTE] >를 사용할 수도 있습니다의 인덱서는 <xref:System.Collections.Specialized.OrderedDictionary>직접 값 필드에 액세스 하는 개체입니다.</xref:System.Collections.Specialized.OrderedDictionary> 데이터 소스 필드 순서를 사용 하는 컨트롤 (예: <xref:System.Web.UI.WebControls.AccessDataSource>) 인덱스로 필드 값에 액세스할 수 있습니다.</xref:System.Web.UI.WebControls.AccessDataSource>"
  example:
  - "The following example demonstrates how to use the NewValues property to access the new values entered by the user for the non-key fields of the record being updated.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1083_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1083_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary NewValues { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> 업데이트 하는 레코드에 대 한 필드의 새 이름/값 쌍의 사전에 들어 있는입니다."
  overload: System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues
  id: OldValues
  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs
  langs:
  - csharp
  name: OldValues
  nameWithType: FormViewUpdateEventArgs.OldValues
  fullName: System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "업데이트에 레코드에 대 한 키가 아닌 필드의 원래 이름/값 쌍을 포함 하는 사전을 가져옵니다."
  remarks: "업데이트 된 레코드에 대 한 키가 아닌 필드의 원래 값에 액세스 하려면 OldValues 속성을 사용 합니다. 예를 들어 업데이트 된 레코드의 로그를 유지할 이러한 값을 사용할 수 있습니다. 일부 데이터 소스와 같은 컨트롤는 <xref:System.Web.UI.WebControls.SqlDataSource>및 <xref:System.Web.UI.WebControls.ObjectDataSource>지원 충돌 감지 (낙관적 동시성 검사)를 제어 합니다.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>이러한 컨트롤 중 하나의 속성이로 설정 되어 `ConflictOptions.CompareAllValues`, 레코드의 원래 값이 업데이트 작업을 수행 하기 전에 데이터 원본에 있는 값에 대해 비교 됩니다.</xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 레코드가 수정 된 경우 다른 사용자가 동시에, 레코드 업데이트 되지 않습니다.      > [!NOTE] > The OldValues 속성 키 필드가 포함 되지 않습니다. 키 필드의 값을 업데이트 하려는 사용자를 허용 하는 경우 키 필드의 원래 값에 저장 됩니다는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>속성.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 업데이트 된 값에 저장 됩니다는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>속성.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>       <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A>속성에서 반환 된 <xref:System.Collections.Specialized.OrderedDictionary>구현 하는 개체는 <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName>인터페이스.</xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> <xref:System.Collections.Specialized.OrderedDictionary>개체에 포함 되어 <xref:System.Collections.DictionaryEntry?displayProperty=fullName>업데이트 된 레코드의 필드를 나타내는 개체입니다.</xref:System.Collections.DictionaryEntry?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> 필드 이름에 액세스 하려면 사용 하 여는 <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>의 속성은 <xref:System.Collections.Specialized.OrderedDictionary>개체입니다.</xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> 마찬가지로, 사용 하 여 필드 값에 액세스할 수 있습니다는 <xref:System.Collections.Specialized.OrderedDictionary.Values%2A>속성.</xref:System.Collections.Specialized.OrderedDictionary.Values%2A>      > [!NOTE] >를 사용할 수도 있습니다의 인덱서는 <xref:System.Collections.Specialized.OrderedDictionary>직접 값 필드에 액세스 하는 개체입니다.</xref:System.Collections.Specialized.OrderedDictionary> 데이터 소스 필드 순서를 사용 하는 컨트롤 (예: <xref:System.Web.UI.WebControls.AccessDataSource>) 인덱스로 필드 값에 액세스할 수 있습니다.</xref:System.Web.UI.WebControls.AccessDataSource>"
  example:
  - "The following example demonstrates how to use the OldValues property to access the original values of the non-key fields for the record being updated.  \n  \n [!code-cs[FormViewUpdateEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_277_1.aspx)]\n [!code-vb[FormViewUpdateEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_277_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary OldValues { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> 업데이트할 레코드에 대 한 키가 아닌 필드의 원래 이름/값 쌍의 사전에 들어 있는입니다."
  overload: System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.CancelEventArgs
  isExternal: false
  name: System.ComponentModel.CancelEventArgs
- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.#ctor(System.Object)
  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs
  isExternal: false
  name: FormViewUpdateEventArgs(Object)
  nameWithType: FormViewUpdateEventArgs.FormViewUpdateEventArgs(Object)
  fullName: System.Web.UI.WebControls.FormViewUpdateEventArgs.FormViewUpdateEventArgs(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument
  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs
  isExternal: false
  name: CommandArgument
  nameWithType: FormViewUpdateEventArgs.CommandArgument
  fullName: System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument
- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys
  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs
  isExternal: false
  name: Keys
  nameWithType: FormViewUpdateEventArgs.Keys
  fullName: System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues
  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs
  isExternal: false
  name: NewValues
  nameWithType: FormViewUpdateEventArgs.NewValues
  fullName: System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues
- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues
  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs
  isExternal: false
  name: OldValues
  nameWithType: FormViewUpdateEventArgs.OldValues
  fullName: System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues
- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.#ctor*
  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs
  isExternal: false
  name: FormViewUpdateEventArgs
  nameWithType: FormViewUpdateEventArgs.FormViewUpdateEventArgs
- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument*
  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs
  isExternal: false
  name: CommandArgument
  nameWithType: FormViewUpdateEventArgs.CommandArgument
- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys*
  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs
  isExternal: false
  name: Keys
  nameWithType: FormViewUpdateEventArgs.Keys
- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues*
  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs
  isExternal: false
  name: NewValues
  nameWithType: FormViewUpdateEventArgs.NewValues
- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues*
  parent: System.Web.UI.WebControls.FormViewUpdateEventArgs
  isExternal: false
  name: OldValues
  nameWithType: FormViewUpdateEventArgs.OldValues
