### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  id: ECDiffieHellmanKeyDerivationFunction
  children:
  - System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
  - System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
  - System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
  langs:
  - csharp
  name: ECDiffieHellmanKeyDerivationFunction
  nameWithType: ECDiffieHellmanKeyDerivationFunction
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  type: Enum
  summary: "키 파생 하는 함수에 지정 된 <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanCng&quot;> </xref> 클래스 비밀 계약 키 자료를 변환 하기 위해 사용 됩니다."
  remarks: "ECDiffieHellmanKeyDerivationFunction 열거형에는 키 자료에 원시 비밀 계약 변환 하는 데 사용할 알고리즘의 형식을 정의 합니다. 비밀 계약에는 개인 키와 다른 당사자의 공개 키, 키 교환의 일부로 생성 되는 값입니다. 에 의해 생성 된 키 자료에 대 한 시드 값은 고 <xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A>메서드.</xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A>       <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> <xref:System.Security.Cryptography.ECDiffieHellmanCng>클래스</xref:System.Security.Cryptography.ECDiffieHellmanCng> 에 대 한 키 파생 함수를 가져오려는이 열거형을 사용 하는 속성</xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A>"
  syntax:
    content: public enum ECDiffieHellmanKeyDerivationFunction
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
  id: Hash
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  langs:
  - csharp
  name: Hash
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hash
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
  type: Field
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "키를 생성 하는 해시 알고리즘이 사용 됩니다. <xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm*>속성을 사용 하는 알고리즘의 이름을 지정 합니다.</xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm*> 알고리즘 이름을 지정 하지 않으면 <xref href=&quot;System.Security.Cryptography.SHA256&quot;> </xref> 기본 알고리즘으로 사용 됩니다."
  remarks: "지정할 수 있습니다는 <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>및 <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A>속성, 있지만 필요 하지 않습니다.</xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> </xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>       생성 되는 키 자료의 양은 지정된 된 알고리즘에 대 한 해시 값의 크기와 같습니다."
  syntax:
    content: Hash
    return:
      type: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
  id: Hmac
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  langs:
  - csharp
  name: Hmac
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hmac
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
  type: Field
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "키를 생성 하는 HMAC 해시 기반 메시지 인증 코드 () 알고리즘이 사용 됩니다. <> </> *> 속성에 사용할 키를 지정 합니다. 이 두 속성 중 하나를 설정 해야 합니다 또는 <> </> *> 속성으로 설정 되어 있어야 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, 그렇지 않으면는 <xref href=&quot;System.Security.Cryptography.CryptographicException&quot;> </xref> Hmac를 사용 하는 경우에 throw 됩니다. 두 속성 모두 설정 된 경우 비밀 계약 HMAC 키로 사용 됩니다."
  remarks: "지정할 수 있습니다는 <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>및 <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A>속성, 있지만 필요 하지 않습니다.</xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> </xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>       생성 되는 키 자료의 양은 HMAC 값의 크기와 같습니다."
  syntax:
    content: Hmac
    return:
      type: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
  id: Tls
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  langs:
  - csharp
  name: Tls
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Tls
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
  type: Field
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "키를 생성 하는 보안 TLS (전송 계층) 프로토콜 사용 됩니다. <> </> *> 및 <> </> *> 속성이 고, 그렇지 않으면 설정 해야는 <xref href=&quot;System.Security.Cryptography.CryptographicException&quot;> </xref> Tls를 사용 하는 경우에 throw 됩니다."
  remarks: "이 값은 160 비트의 키 자료를 생성합니다."
  syntax:
    content: Tls
    return:
      type: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  isExternal: false
  name: Hash
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hash
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  parent: System.Security.Cryptography
  isExternal: false
  name: ECDiffieHellmanKeyDerivationFunction
  nameWithType: ECDiffieHellmanKeyDerivationFunction
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  isExternal: false
  name: Hmac
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hmac
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  isExternal: false
  name: Tls
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Tls
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
