### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  id: MultiTargetingSupportService
  children:
  - System.Activities.Presentation.Hosting.MultiTargetingSupportService.#ctor
  - System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)
  - System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionType(System.Type)
  - System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetRuntimeType(System.Type)
  - System.Activities.Presentation.Hosting.MultiTargetingSupportService.IsSupportedType(System.Type)
  langs:
  - csharp
  name: MultiTargetingSupportService
  nameWithType: MultiTargetingSupportService
  fullName: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  type: Class
  summary: "다중 대상 지정에 대 한 추상 클래스를 나타냅니다. 서비스를 지원 합니다."
  syntax:
    content: 'public abstract class MultiTargetingSupportService : System.Activities.Presentation.Hosting.IMultiTargetingSupportService'
  inheritance:
  - System.Object
  implements:
  - System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  langs:
  - csharp
  name: MultiTargetingSupportService()
  nameWithType: MultiTargetingSupportService.MultiTargetingSupportService()
  fullName: System.Activities.Presentation.Hosting.MultiTargetingSupportService.MultiTargetingSupportService()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Activities.Presentation.Hosting.MultiTargetingSupportService&quot;> </xref> 클래스입니다."
  syntax:
    content: protected MultiTargetingSupportService ();
    parameters: []
  overload: System.Activities.Presentation.Hosting.MultiTargetingSupportService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)
  id: GetReflectionAssembly(System.Reflection.AssemblyName)
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  langs:
  - csharp
  name: GetReflectionAssembly(AssemblyName)
  nameWithType: MultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
  fullName: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: "어셈블리 이름이 지정 된 리플렉션 어셈블리를 가져옵니다."
  syntax:
    content: public abstract System.Reflection.Assembly GetReflectionAssembly (System.Reflection.AssemblyName targetAssemblyName);
    parameters:
    - id: targetAssemblyName
      type: System.Reflection.AssemblyName
      description: "대상 어셈블리 이름입니다."
    return:
      type: System.Reflection.Assembly
      description: "리플렉션 어셈블리 대상 어셈블리 이름을 확인할 수 없습니다."
  overload: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionType(System.Type)
  id: GetReflectionType(System.Type)
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  langs:
  - csharp
  name: GetReflectionType(Type)
  nameWithType: MultiTargetingSupportService.GetReflectionType(Type)
  fullName: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionType(Type)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: "리플렉션 형식 지정 개체 유형을 가져옵니다."
  syntax:
    content: public abstract Type GetReflectionType (Type objectType);
    parameters:
    - id: objectType
      type: System.Type
      description: "개체 유형입니다."
    return:
      type: System.Type
      description: "리플렉션 형식입니다."
  overload: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionType*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetRuntimeType(System.Type)
  id: GetRuntimeType(System.Type)
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  langs:
  - csharp
  name: GetRuntimeType(Type)
  nameWithType: MultiTargetingSupportService.GetRuntimeType(Type)
  fullName: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetRuntimeType(Type)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: "지정 된 리플렉션 유형의 런타임 형식을 가져옵니다."
  syntax:
    content: public abstract Type GetRuntimeType (Type reflectionType);
    parameters:
    - id: reflectionType
      type: System.Type
      description: "리플렉션 형식입니다."
    return:
      type: System.Type
      description: "리플렉션 형식과 연결 된 런타임 형식입니다."
  overload: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetRuntimeType*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.IsSupportedType(System.Type)
  id: IsSupportedType(System.Type)
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  langs:
  - csharp
  name: IsSupportedType(Type)
  nameWithType: MultiTargetingSupportService.IsSupportedType(Type)
  fullName: System.Activities.Presentation.Hosting.MultiTargetingSupportService.IsSupportedType(Type)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: "지정된 된 형식을 대상 프레임 워크에 의해 지원 되는지 확인 합니다."
  syntax:
    content: public abstract bool IsSupportedType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "확인할 형식입니다."
    return:
      type: System.Boolean
      description: "대상 프레임 워크에서 지원 되는 지정 된 형식입니다."
  overload: System.Activities.Presentation.Hosting.MultiTargetingSupportService.IsSupportedType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.#ctor
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  isExternal: false
  name: MultiTargetingSupportService()
  nameWithType: MultiTargetingSupportService.MultiTargetingSupportService()
  fullName: System.Activities.Presentation.Hosting.MultiTargetingSupportService.MultiTargetingSupportService()
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  isExternal: false
  name: GetReflectionAssembly(AssemblyName)
  nameWithType: MultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
  fullName: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: true
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionType(System.Type)
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  isExternal: false
  name: GetReflectionType(Type)
  nameWithType: MultiTargetingSupportService.GetReflectionType(Type)
  fullName: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetRuntimeType(System.Type)
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  isExternal: false
  name: GetRuntimeType(Type)
  nameWithType: MultiTargetingSupportService.GetRuntimeType(Type)
  fullName: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetRuntimeType(Type)
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.IsSupportedType(System.Type)
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  isExternal: false
  name: IsSupportedType(Type)
  nameWithType: MultiTargetingSupportService.IsSupportedType(Type)
  fullName: System.Activities.Presentation.Hosting.MultiTargetingSupportService.IsSupportedType(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.#ctor*
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  isExternal: false
  name: MultiTargetingSupportService
  nameWithType: MultiTargetingSupportService.MultiTargetingSupportService
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionAssembly*
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  isExternal: false
  name: GetReflectionAssembly
  nameWithType: MultiTargetingSupportService.GetReflectionAssembly
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetReflectionType*
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  isExternal: false
  name: GetReflectionType
  nameWithType: MultiTargetingSupportService.GetReflectionType
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.GetRuntimeType*
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  isExternal: false
  name: GetRuntimeType
  nameWithType: MultiTargetingSupportService.GetRuntimeType
- uid: System.Activities.Presentation.Hosting.MultiTargetingSupportService.IsSupportedType*
  parent: System.Activities.Presentation.Hosting.MultiTargetingSupportService
  isExternal: false
  name: IsSupportedType
  nameWithType: MultiTargetingSupportService.IsSupportedType
