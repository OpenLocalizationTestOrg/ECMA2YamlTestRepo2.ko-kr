### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Messaging.InternalMessageWrapper
  id: InternalMessageWrapper
  children:
  - System.Runtime.Remoting.Messaging.InternalMessageWrapper.#ctor(System.Runtime.Remoting.Messaging.IMessage)
  - System.Runtime.Remoting.Messaging.InternalMessageWrapper.WrappedMessage
  langs:
  - csharp
  name: InternalMessageWrapper
  nameWithType: InternalMessageWrapper
  fullName: System.Runtime.Remoting.Messaging.InternalMessageWrapper
  type: Class
  summary: "하거나 서버에 클라이언트의 요청에 대 한 후속 응답에 대 한 메시지 싱크 간에 전달에 대 한 원격 데이터를 래핑합니다."
  remarks: "InternalMessageWrapper 클래스는에 대 한 기본 클래스는 <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper>및 <xref:System.Runtime.Remoting.Messaging.MethodReturnMessageWrapper>원격 개체에 메서드 호출에 대 한 메시지를 래핑하는 클래스입니다.</xref:System.Runtime.Remoting.Messaging.MethodReturnMessageWrapper> </xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper>       InternalMessageWrapper는.NET Framework의 인프라에 의해 사용 됩니다. InternalMessageWrapper의 인스턴스를 만들 필요가 없습니다 <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper>, 및 <xref:System.Runtime.Remoting.Messaging.MethodReturnMessageWrapper>클래스를 직접.</xref:System.Runtime.Remoting.Messaging.MethodReturnMessageWrapper> </xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public class InternalMessageWrapper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.InternalMessageWrapper.#ctor(System.Runtime.Remoting.Messaging.IMessage)
  id: '#ctor(System.Runtime.Remoting.Messaging.IMessage)'
  parent: System.Runtime.Remoting.Messaging.InternalMessageWrapper
  langs:
  - csharp
  name: InternalMessageWrapper(IMessage)
  nameWithType: InternalMessageWrapper.InternalMessageWrapper(IMessage)
  fullName: System.Runtime.Remoting.Messaging.InternalMessageWrapper.InternalMessageWrapper(IMessage)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Runtime.Remoting.Messaging.InternalMessageWrapper&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Runtime.Remoting.Messaging.InternalMessageWrapper>클래스는.NET Framework의 원격 인프라에서 사용 됩니다.</xref:System.Runtime.Remoting.Messaging.InternalMessageWrapper> 만들 필요가 없습니다는 <xref:System.Runtime.Remoting.Messaging.InternalMessageWrapper>직접.</xref:System.Runtime.Remoting.Messaging.InternalMessageWrapper>       <xref:System.Runtime.Remoting.Messaging.IMessage>매개 변수 파생된 인터페이스 구현 <xref:System.Runtime.Remoting.Messaging.IMethodMessage>, 메시지 역할 요청 또는 원격 메서드 호출에 대 한 응답으로 역할을 나타냅니다.</xref:System.Runtime.Remoting.Messaging.IMethodMessage> </xref:System.Runtime.Remoting.Messaging.IMessage> <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage>및 <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage>에서 인터페이스를 상속 된 <xref:System.Runtime.Remoting.Messaging.IMethodMessage>인터페이스.</xref:System.Runtime.Remoting.Messaging.IMethodMessage> </xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage> </xref:System.Runtime.Remoting.Messaging.IMethodCallMessage>"
  syntax:
    content: public InternalMessageWrapper (System.Runtime.Remoting.Messaging.IMessage msg);
    parameters:
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "원격 개체에 대해 나가는 메서드 호출 또는 후속 응답으로 동작 하는 메시지입니다."
  overload: System.Runtime.Remoting.Messaging.InternalMessageWrapper.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.InternalMessageWrapper.WrappedMessage
  id: WrappedMessage
  parent: System.Runtime.Remoting.Messaging.InternalMessageWrapper
  langs:
  - csharp
  name: WrappedMessage
  nameWithType: InternalMessageWrapper.WrappedMessage
  fullName: System.Runtime.Remoting.Messaging.InternalMessageWrapper.WrappedMessage
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "요청 또는 응답 나타냅니다 <xref href=&quot;System.Runtime.Remoting.Messaging.IMethodMessage&quot;> </xref> 메시지 래퍼에서 래핑하는 인터페이스입니다."
  syntax:
    content: protected System.Runtime.Remoting.Messaging.IMessage WrappedMessage;
    return:
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Remoting.Messaging.InternalMessageWrapper.#ctor(System.Runtime.Remoting.Messaging.IMessage)
  parent: System.Runtime.Remoting.Messaging.InternalMessageWrapper
  isExternal: false
  name: InternalMessageWrapper(IMessage)
  nameWithType: InternalMessageWrapper.InternalMessageWrapper(IMessage)
  fullName: System.Runtime.Remoting.Messaging.InternalMessageWrapper.InternalMessageWrapper(IMessage)
- uid: System.Runtime.Remoting.Messaging.IMessage
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessage
  nameWithType: IMessage
  fullName: System.Runtime.Remoting.Messaging.IMessage
- uid: System.Runtime.Remoting.Messaging.InternalMessageWrapper.WrappedMessage
  parent: System.Runtime.Remoting.Messaging.InternalMessageWrapper
  isExternal: false
  name: WrappedMessage
  nameWithType: InternalMessageWrapper.WrappedMessage
  fullName: System.Runtime.Remoting.Messaging.InternalMessageWrapper.WrappedMessage
- uid: System.Runtime.Remoting.Messaging.InternalMessageWrapper.#ctor*
  parent: System.Runtime.Remoting.Messaging.InternalMessageWrapper
  isExternal: false
  name: InternalMessageWrapper
  nameWithType: InternalMessageWrapper.InternalMessageWrapper
