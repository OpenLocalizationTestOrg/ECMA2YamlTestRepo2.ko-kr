### YamlMime:ManagedReference
items:
- uid: System.Windows.RequestBringIntoViewEventArgs
  id: RequestBringIntoViewEventArgs
  children:
  - System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  - System.Windows.RequestBringIntoViewEventArgs.TargetObject
  - System.Windows.RequestBringIntoViewEventArgs.TargetRect
  langs:
  - csharp
  name: RequestBringIntoViewEventArgs
  nameWithType: RequestBringIntoViewEventArgs
  fullName: System.Windows.RequestBringIntoViewEventArgs
  type: Class
  summary: "에 대 한 데이터를 제공는 <xref href=&quot;System.Windows.FrameworkElement.RequestBringIntoView&quot;> </xref> 라우트된 이벤트입니다."
  remarks: "<xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>이벤트는 요소에 의해 호출 하는 경우 <xref:System.Windows.FrameworkElement.BringIntoView%2A>해당 요소에서.</xref:System.Windows.FrameworkElement.BringIntoView%2A> </xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> 일반적으로이 라우트된 이벤트 원본에 의해 처리 되지 않습니다. 스크롤 가능한 영역 또는 클립 콘텐츠 이벤트를 처리 하지 않도록 하는 비슷한 개념을 구현 하지 않는 중간 클래스입니다.  이 이벤트는 스크롤 가능한 영역을 구현 하거나 그렇지 않은 경우 지정 하는 부모 요소에 버블 허용할지 <xref:System.Windows.UIElement.ClipToBounds%2A> `false`.</xref:System.Windows.UIElement.ClipToBounds%2A> 같은 부모 요소에 대 한 클래스 처리 일반적으로 제공 된 <xref:System.Windows.FrameworkElement.RequestBringIntoView>은 필요한 렌더링 논리는 수행 됩니다 클립 영역 내에서 지정된 된 요소에서 요청할 때마다 발생 하는 이벤트입니다.</xref:System.Windows.FrameworkElement.RequestBringIntoView>       콘텐츠 요소는 이벤트를 콘텐츠 호스트에 의해 발생 될 수 있습니다 (호출을 통해 <xref:System.Windows.FrameworkContentElement.BringIntoView%2A>및 발생 <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>는 콘텐츠 호스트에서).</xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement.BringIntoView%2A> 마찬가지로, 논리적 트리 도우미 메서드로 <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName>.</xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName> 보기에 맞게 수정할 수 요소를 요청할 수 있습니다.       <xref:System.Windows.Controls.ListBox> <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>.</xref:System.Windows.Controls.ListBox.ScrollIntoView%2A> 관련 하지만 서로 다른 메서드를 구현 하</xref:System.Windows.Controls.ListBox> 는"
  syntax:
    content: 'public class RequestBringIntoViewEventArgs : System.Windows.RoutedEventArgs'
  inheritance:
  - System.EventArgs
  - System.Windows.RoutedEventArgs
  implements: []
  inheritedMembers:
  - System.Windows.RoutedEventArgs.Handled
  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  - System.Windows.RoutedEventArgs.OriginalSource
  - System.Windows.RoutedEventArgs.RoutedEvent
  - System.Windows.RoutedEventArgs.Source
  platform:
  - net462
- uid: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  id: InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.RequestBringIntoViewEventArgs
  langs:
  - csharp
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: RequestBringIntoViewEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(Delegate,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "이벤트 시스템 효율성을 높일 수 있는 형식별 방법으로 이벤트 처리기를 호출 합니다."
  remarks: "이 구현와으로 <xref:System.Windows.RequestBringIntoViewEventHandler>다음 호출 합니다.</xref:System.Windows.RequestBringIntoViewEventHandler> 제네릭 처리기 캐스팅 이 구현 패턴 및는 이유에 대 한 내용은 참조 하십시오. <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A>및 [라우트된 이벤트 개요](~/add/includes/ajax-current-ext-md.md).</xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A>"
  syntax:
    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);
    parameters:
    - id: genericHandler
      type: System.Delegate
      description: "제네릭 처리기 유형별 방식에서으로 호출입니다."
    - id: genericTarget
      type: System.Object
      description: "대상 처리기가 호출입니다."
  overload: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetObject
  id: TargetObject
  parent: System.Windows.RequestBringIntoViewEventArgs
  langs:
  - csharp
  name: TargetObject
  nameWithType: RequestBringIntoViewEventArgs.TargetObject
  fullName: System.Windows.RequestBringIntoViewEventArgs.TargetObject
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "이벤트에 대 한 응답으로 표시할 개체를 가져옵니다."
  remarks: "<xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName>.</xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName> 에서 반환 된이 개체는 일반적으로 동일한 개체"
  syntax:
    content: public System.Windows.DependencyObject TargetObject { get; }
    return:
      type: System.Windows.DependencyObject
      description: "<xref:System.Windows.FrameworkElement.BringIntoView*>.</xref:System.Windows.FrameworkElement.BringIntoView*> 를 호출 하는 개체"
  overload: System.Windows.RequestBringIntoViewEventArgs.TargetObject*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetRect
  id: TargetRect
  parent: System.Windows.RequestBringIntoViewEventArgs
  langs:
  - csharp
  name: TargetRect
  nameWithType: RequestBringIntoViewEventArgs.TargetRect
  fullName: System.Windows.RequestBringIntoViewEventArgs.TargetRect
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "표시할 개체의 좌표 공간에서 사각형 영역을 가져옵니다."
  remarks: "하는 경우의 서명을 <xref:System.Windows.FrameworkElement.BringIntoView%2A>호출 되어 이벤트를 발생 시킬 대상 사각형을 지정 하지 않은 경우이 속성 수 있습니다는 <xref:System.Windows.Rect.Empty%2A>의 값은 <xref:System.Windows.Rect>구조.</xref:System.Windows.Rect> </xref:System.Windows.Rect.Empty%2A> </xref:System.Windows.FrameworkElement.BringIntoView%2A>"
  syntax:
    content: public System.Windows.Rect TargetRect { get; }
    return:
      type: System.Windows.Rect
      description: "요청 된 사각형 공간입니다."
  overload: System.Windows.RequestBringIntoViewEventArgs.TargetRect*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.RoutedEventArgs
  isExternal: false
  name: System.Windows.RoutedEventArgs
- uid: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: RequestBringIntoViewEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(Delegate,Object)
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetObject
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: TargetObject
  nameWithType: RequestBringIntoViewEventArgs.TargetObject
  fullName: System.Windows.RequestBringIntoViewEventArgs.TargetObject
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetRect
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: TargetRect
  nameWithType: RequestBringIntoViewEventArgs.TargetRect
  fullName: System.Windows.RequestBringIntoViewEventArgs.TargetRect
- uid: System.Windows.Rect
  parent: System.Windows
  isExternal: false
  name: Rect
  nameWithType: Rect
  fullName: System.Windows.Rect
- uid: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler*
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: InvokeEventHandler
  nameWithType: RequestBringIntoViewEventArgs.InvokeEventHandler
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetObject*
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: TargetObject
  nameWithType: RequestBringIntoViewEventArgs.TargetObject
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetRect*
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: TargetRect
  nameWithType: RequestBringIntoViewEventArgs.TargetRect
