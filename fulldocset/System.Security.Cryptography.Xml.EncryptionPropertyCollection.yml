### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  id: EncryptionPropertyCollection
  children:
  - System.Security.Cryptography.Xml.EncryptionPropertyCollection.#ctor
  - System.Security.Cryptography.Xml.EncryptionPropertyCollection.Add(System.Security.Cryptography.Xml.EncryptionProperty)
  - System.Security.Cryptography.Xml.EncryptionPropertyCollection.Clear
  - System.Security.Cryptography.Xml.EncryptionPropertyCollection.Contains(System.Security.Cryptography.Xml.EncryptionProperty)
  - System.Security.Cryptography.Xml.EncryptionPropertyCollection.CopyTo(System.Array,System.Int32)
  - System.Security.Cryptography.Xml.EncryptionPropertyCollection.CopyTo(System.Security.Cryptography.Xml.EncryptionProperty[],System.Int32)
  - System.Security.Cryptography.Xml.EncryptionPropertyCollection.Count
  - System.Security.Cryptography.Xml.EncryptionPropertyCollection.GetEnumerator
  - System.Security.Cryptography.Xml.EncryptionPropertyCollection.IndexOf(System.Security.Cryptography.Xml.EncryptionProperty)
  - System.Security.Cryptography.Xml.EncryptionPropertyCollection.Insert(System.Int32,System.Security.Cryptography.Xml.EncryptionProperty)
  - System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsFixedSize
  - System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsReadOnly
  - System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsSynchronized
  - System.Security.Cryptography.Xml.EncryptionPropertyCollection.Item(System.Int32)
  - System.Security.Cryptography.Xml.EncryptionPropertyCollection.ItemOf(System.Int32)
  - System.Security.Cryptography.Xml.EncryptionPropertyCollection.Remove(System.Security.Cryptography.Xml.EncryptionProperty)
  - System.Security.Cryptography.Xml.EncryptionPropertyCollection.RemoveAt(System.Int32)
  - System.Security.Cryptography.Xml.EncryptionPropertyCollection.SyncRoot
  - System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Add(System.Object)
  - System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Contains(System.Object)
  - System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Item(System.Int32)
  - System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: EncryptionPropertyCollection
  nameWithType: EncryptionPropertyCollection
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  type: Class
  summary: "컬렉션을 나타냅니다 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionProperty&quot;> </xref> XML 암호화에 사용 되는 클래스입니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "<xref:System.Security.Cryptography.Xml.EncryptionProperty>클래스에 캡슐화 하면 `<EncryptionProperty>` http://www.w3.org/TR/xmlenc-core/에 World Wide Web Consortium XML 암호화 사양에 정의 된 요소가 있는.</xref:System.Security.Cryptography.Xml.EncryptionProperty>       사용 하는 <xref:System.Security.Cryptography.Xml.EncryptionProperty>클래스와 관련 된 추가 암호화 정보를 제공 하는 <xref:System.Security.Cryptography.Xml.EncryptedData>및 <xref:System.Security.Cryptography.Xml.EncryptedKey>요소.</xref:System.Security.Cryptography.Xml.EncryptedKey> </xref:System.Security.Cryptography.Xml.EncryptedData> </xref:System.Security.Cryptography.Xml.EncryptionProperty>  예를 들어, 타임 스탬프를 지정 하려면이 클래스를 사용할 수 있습니다."
  example:
  - "The following code example encrypts and decrypts an XML document.  This code example creates an <xref:System.Security.Cryptography.Xml.EncryptionProperty> object that contains custom information about the <xref:System.Security.Cryptography.Xml.EncryptedKey> element, and adds the <xref:System.Security.Cryptography.Xml.EncryptionProperty> object to the EncryptionPropertyCollection collection of the <xref:System.Security.Cryptography.Xml.EncryptedXml> class.  Finally, this code example displays information about the <xref:System.Security.Cryptography.Xml.EncryptionProperty> object and the EncryptionPropertyCollection collection.  \n  \n [!code-vb[Cryptography.XML.EncryptionProperty#1](~/add/codesnippet/visualbasic/t-system.security.crypto_21_1.vb)]\n [!code-cs[Cryptography.XML.EncryptionProperty#1](~/add/codesnippet/csharp/t-system.security.crypto_21_1.cs)]"
  syntax:
    content: 'public sealed class EncryptionPropertyCollection : System.Collections.IList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  langs:
  - csharp
  name: EncryptionPropertyCollection()
  nameWithType: EncryptionPropertyCollection.EncryptionPropertyCollection()
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.EncryptionPropertyCollection()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 클래스입니다."
  remarks: ''
  example:
  - "The following code example encrypts and decrypts an XML document.  This code example creates an <xref:System.Security.Cryptography.Xml.EncryptionProperty> object that contains custom information about the <xref:System.Security.Cryptography.Xml.EncryptedKey> element, and adds the <xref:System.Security.Cryptography.Xml.EncryptionProperty> object to the <xref:System.Security.Cryptography.Xml.EncryptionPropertyCollection> collection of the <xref:System.Security.Cryptography.Xml.EncryptedXml> class.  Finally, this code example displays information about the <xref:System.Security.Cryptography.Xml.EncryptionProperty> object and the <xref:System.Security.Cryptography.Xml.EncryptionPropertyCollection> collection.  \n  \n [!code-vb[Cryptography.XML.EncryptionProperty#1](~/add/codesnippet/visualbasic/m-system.security.crypto_59_1.vb)]\n [!code-cs[Cryptography.XML.EncryptionProperty#1](~/add/codesnippet/csharp/m-system.security.crypto_59_1.cs)]"
  syntax:
    content: public EncryptionPropertyCollection ();
    parameters: []
  overload: System.Security.Cryptography.Xml.EncryptionPropertyCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Add(System.Security.Cryptography.Xml.EncryptionProperty)
  id: Add(System.Security.Cryptography.Xml.EncryptionProperty)
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  langs:
  - csharp
  name: Add(EncryptionProperty)
  nameWithType: EncryptionPropertyCollection.Add(EncryptionProperty)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Add(EncryptionProperty)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "추가 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionProperty&quot;> </xref> 개체의 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 개체입니다."
  remarks: ''
  example:
  - "The following code example encrypts and decrypts an XML document.  This code example creates an <xref:System.Security.Cryptography.Xml.EncryptionProperty> object that contains custom information about the <xref:System.Security.Cryptography.Xml.EncryptedKey> element, and adds the <xref:System.Security.Cryptography.Xml.EncryptionProperty> object to the <xref:System.Security.Cryptography.Xml.EncryptionPropertyCollection> collection of the <xref:System.Security.Cryptography.Xml.EncryptedXml> class.  Finally, this code example displays information about the <xref:System.Security.Cryptography.Xml.EncryptionProperty> object and the <xref:System.Security.Cryptography.Xml.EncryptionPropertyCollection> collection.  \n  \n [!code-vb[Cryptography.XML.EncryptionProperty#1](~/add/codesnippet/visualbasic/bd95ac70-afdd-4b73-b98a-_1.vb)]\n [!code-cs[Cryptography.XML.EncryptionProperty#1](~/add/codesnippet/csharp/bd95ac70-afdd-4b73-b98a-_1.cs)]"
  syntax:
    content: public int Add (System.Security.Cryptography.Xml.EncryptionProperty value);
    parameters:
    - id: value
      type: System.Security.Cryptography.Xml.EncryptionProperty
      description: "<xref href=&quot;System.Security.Cryptography.Xml.EncryptionProperty&quot;> </xref> 개체에 추가 하는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 개체입니다."
    return:
      type: System.Int32
      description: "새 요소가 삽입 되는 위치입니다."
  overload: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Clear
  id: Clear
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: EncryptionPropertyCollection.Clear()
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Clear()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "모든 항목을 제거 하면 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 개체입니다."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Contains(System.Security.Cryptography.Xml.EncryptionProperty)
  id: Contains(System.Security.Cryptography.Xml.EncryptionProperty)
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  langs:
  - csharp
  name: Contains(EncryptionProperty)
  nameWithType: EncryptionPropertyCollection.Contains(EncryptionProperty)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Contains(EncryptionProperty)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "결정 여부는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 개체에 특정 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionProperty&quot;> </xref> 개체입니다."
  syntax:
    content: public bool Contains (System.Security.Cryptography.Xml.EncryptionProperty value);
    parameters:
    - id: value
      type: System.Security.Cryptography.Xml.EncryptionProperty
      description: "<xref href=&quot;System.Security.Cryptography.Xml.EncryptionProperty&quot;> </xref> 에서 찾을 개체의 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionProperty&quot;> </xref> 개체에서 발견 되는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 그렇지 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: EncryptionPropertyCollection.CopyTo(Array,Int32)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "요소를 복사 하면 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 개체를 특정 배열 인덱스에서 시작 하 여 배열 합니다."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "1 차원 <xref:System.Array>에서 복사한 요소의 대상인 개체는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 개체입니다.</xref:System.Array> 배열에는&0;부터 시작 하는 인덱스가 있어야 합니다."
    - id: index
      type: System.Int32
      description: "인덱스는&0;부터 시작 `array` 복사가 시작 되는 합니다."
  overload: System.Security.Cryptography.Xml.EncryptionPropertyCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.CopyTo(System.Security.Cryptography.Xml.EncryptionProperty[],System.Int32)
  id: CopyTo(System.Security.Cryptography.Xml.EncryptionProperty[],System.Int32)
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  langs:
  - csharp
  name: CopyTo(EncryptionProperty[],Int32)
  nameWithType: EncryptionPropertyCollection.CopyTo(EncryptionProperty[],Int32)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.CopyTo(EncryptionProperty[],Int32)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "요소를 복사 하면 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 개체의 배열에 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionProperty&quot;> </xref> 특정 배열 인덱스부터 시작 합니다."
  syntax:
    content: public void CopyTo (System.Security.Cryptography.Xml.EncryptionProperty[] array, int index);
    parameters:
    - id: array
      type: System.Security.Cryptography.Xml.EncryptionProperty[]
      description: "1 차원 배열입니다 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionProperty&quot;> </xref> 개체에서 복사한 요소의 대상인의 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 개체입니다. 배열에는&0;부터 시작 하는 인덱스가 있어야 합니다."
    - id: index
      type: System.Int32
      description: "인덱스는&0;부터 시작 `array` 복사가 시작 되는 합니다."
  overload: System.Security.Cryptography.Xml.EncryptionPropertyCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Count
  id: Count
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  langs:
  - csharp
  name: Count
  nameWithType: EncryptionPropertyCollection.Count
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Count
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "에 포함 된 요소의 수를 가져옵니다는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 개체입니다."
  remarks: ''
  example:
  - "The following code example encrypts and decrypts an XML document.  This code example creates an <xref:System.Security.Cryptography.Xml.EncryptionProperty> object that contains custom information about the <xref:System.Security.Cryptography.Xml.EncryptedKey> element, and adds the <xref:System.Security.Cryptography.Xml.EncryptionProperty> object to the <xref:System.Security.Cryptography.Xml.EncryptionPropertyCollection> collection of the <xref:System.Security.Cryptography.Xml.EncryptedXml> class.  Finally, this code example displays information about the <xref:System.Security.Cryptography.Xml.EncryptionProperty> object and the <xref:System.Security.Cryptography.Xml.EncryptionPropertyCollection> collection.  \n  \n [!code-vb[Cryptography.XML.EncryptionProperty#1](~/add/codesnippet/visualbasic/p-system.security.crypto_96_1.vb)]\n [!code-cs[Cryptography.XML.EncryptionProperty#1](~/add/codesnippet/csharp/p-system.security.crypto_96_1.cs)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "에 포함 된 요소의 수는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: EncryptionPropertyCollection.GetEnumerator()
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "반복 하는 열거자를 반환 된 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 개체입니다."
  remarks: "열거자는 컬렉션의 데이터를 읽기만 허용 합니다. 내부 컬렉션을 수정 하 여 열거자를 사용할 수 없습니다."
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>반복 하는 데 사용할 수 있는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 개체입니다.</xref:System.Collections.IEnumerator>"
  overload: System.Security.Cryptography.Xml.EncryptionPropertyCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.IndexOf(System.Security.Cryptography.Xml.EncryptionProperty)
  id: IndexOf(System.Security.Cryptography.Xml.EncryptionProperty)
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  langs:
  - csharp
  name: IndexOf(EncryptionProperty)
  nameWithType: EncryptionPropertyCollection.IndexOf(EncryptionProperty)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.IndexOf(EncryptionProperty)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "특정 항목의 인덱스를 확인 하면 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 개체입니다."
  syntax:
    content: public int IndexOf (System.Security.Cryptography.Xml.EncryptionProperty value);
    parameters:
    - id: value
      type: System.Security.Cryptography.Xml.EncryptionProperty
      description: "<xref href=&quot;System.Security.Cryptography.Xml.EncryptionProperty&quot;> </xref> 에서 찾을 개체의 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 개체입니다."
    return:
      type: System.Int32
      description: "인덱스 <code> value </code> 컬렉션에서 그렇지 않으면,-1입니다."
  overload: System.Security.Cryptography.Xml.EncryptionPropertyCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Insert(System.Int32,System.Security.Cryptography.Xml.EncryptionProperty)
  id: Insert(System.Int32,System.Security.Cryptography.Xml.EncryptionProperty)
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  langs:
  - csharp
  name: Insert(Int32,EncryptionProperty)
  nameWithType: EncryptionPropertyCollection.Insert(Int32,EncryptionProperty)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Insert(Int32,EncryptionProperty)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "삽입 하는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionProperty&quot;> </xref> 개체의 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 개체를 지정된 된 위치에."
  syntax:
    content: public void Insert (int index, System.Security.Cryptography.Xml.EncryptionProperty value);
    parameters:
    - id: index
      type: System.Int32
      description: "인덱스&0;부터 시작 `value` 삽입 해야 합니다."
    - id: value
      type: System.Security.Cryptography.Xml.EncryptionProperty
      description: "<xref href=&quot;System.Security.Cryptography.Xml.EncryptionProperty&quot;> </xref> 개체에 삽입 하는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsFixedSize
  id: IsFixedSize
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: EncryptionPropertyCollection.IsFixedSize
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsFixedSize
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 개체의 크기가 고정 되어 있습니다."
  remarks: "컬렉션 크기가 고정된 된 컬렉션 만들어지기는 하지만 기존 요소를 수정할 수는 다음에 추가 하거나 제거할 요소의 수 없습니다.       크기가 고정된 된 컬렉션에 요소 추가 및 제거를 방지 하는 래퍼가 있는 컬렉션이입니다. 따라서 추가 또는 제거의 요소를 포함 하 여 내부 컬렉션이 변경 되 면 고정 크기 컬렉션에 이러한 변경 사항이 반영 됩니다."
  syntax:
    content: public bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 개체가 고정 되어 고, 그렇지 않으면 크기가 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: EncryptionPropertyCollection.IsReadOnly
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 개체가 읽기 전용입니다."
  remarks: "읽기 전용 컬렉션에서는 컬렉션을 만든 후에 추가, 제거 또는 요소를 수정할 수 없습니다.       읽기 전용 컬렉션은 지정 된 컬렉션을 수정 하지 못하도록 하는 래퍼 컬렉션 따라서 기본 컬렉션이 변경 될 경우 읽기 전용 컬렉션 해당 변경 내용을 반영 합니다."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 개체 읽기 전용, 되지 않았으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: EncryptionPropertyCollection.IsSynchronized
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "나타내는 값을 가져옵니다 여부에 대 한 액세스는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 개체가 동기화 되어 스레드로부터 안전한."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우에 대 한 액세스는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 개체가 동기화 되었는지 (스레드로부터 안전함), 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: EncryptionPropertyCollection.Item(Int32)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Item(Int32)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "반환 된 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionProperty&quot;> </xref> 개체의 지정 된 인덱스입니다."
  syntax:
    content: public System.Security.Cryptography.Xml.EncryptionProperty Item (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "인덱스는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionProperty&quot;> </xref> 개체를 반환 합니다."
    return:
      type: System.Security.Cryptography.Xml.EncryptionProperty
      description: "<xref href=&quot;System.Security.Cryptography.Xml.EncryptionProperty&quot;> </xref> 지정된 된 인덱스에는 개체입니다."
  overload: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.ItemOf(System.Int32)
  id: ItemOf(System.Int32)
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  langs:
  - csharp
  name: ItemOf(Int32)
  nameWithType: EncryptionPropertyCollection.ItemOf(Int32)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.ItemOf(Int32)
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "가져오거나는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionProperty&quot;> </xref> 지정된 된 인덱스에는 개체입니다."
  syntax:
    content: public System.Security.Cryptography.Xml.EncryptionProperty this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "인덱스는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionProperty&quot;> </xref> 개체를 반환 합니다."
    return:
      type: System.Security.Cryptography.Xml.EncryptionProperty
      description: "<xref href=&quot;System.Security.Cryptography.Xml.EncryptionProperty&quot;> </xref> 지정된 된 인덱스에는 개체입니다."
  overload: System.Security.Cryptography.Xml.EncryptionPropertyCollection.ItemOf*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Remove(System.Security.Cryptography.Xml.EncryptionProperty)
  id: Remove(System.Security.Cryptography.Xml.EncryptionProperty)
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  langs:
  - csharp
  name: Remove(EncryptionProperty)
  nameWithType: EncryptionPropertyCollection.Remove(EncryptionProperty)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Remove(EncryptionProperty)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "맨 처음 발견 되는 특정 제거 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionProperty&quot;> </xref> 에서 개체는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 개체입니다."
  syntax:
    content: public void Remove (System.Security.Cryptography.Xml.EncryptionProperty value);
    parameters:
    - id: value
      type: System.Security.Cryptography.Xml.EncryptionProperty
      description: "<xref href=&quot;System.Security.Cryptography.Xml.EncryptionProperty&quot;> </xref> 에서 제거할 개체의 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: EncryptionPropertyCollection.RemoveAt(Int32)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "제거는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionProperty&quot;> </xref> 지정된 된 인덱스에 있는 개체입니다."
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "부터 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionProperty&quot;> </xref> 개체를 제거 합니다."
  overload: System.Security.Cryptography.Xml.EncryptionPropertyCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.SyncRoot
  id: SyncRoot
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: EncryptionPropertyCollection.SyncRoot
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.SyncRoot
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 개체입니다."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.Xml.EncryptionPropertyCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: EncryptionPropertyCollection.System.Collections.IList.Add(Object)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "<xref:System.Collections.IList>.</xref:System.Collections.IList> 에 항목을 추가"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object> <xref:System.Collections.IList>.</xref:System.Collections.IList> 에 추가 하려면</xref:System.Object>"
    return:
      type: System.Int32
      description: "새 요소가 삽입 된 위치입니다."
  overload: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>잘못 된 개체 형식을 사용합니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: EncryptionPropertyCollection.System.Collections.IList.Contains(Object)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "결정 여부는 <xref:System.Collections.IList>특정 값을 포함 합니다.</xref:System.Collections.IList>"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object> <xref:System.Collections.IList>.</xref:System.Collections.IList> 에서 찾을 수</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.Object>에서 발견 되는 <xref:System.Collections.IList>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IList> </xref:System.Object>"
  overload: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Contains*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>잘못 된 개체 형식을 사용합니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: EncryptionPropertyCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "<xref:System.Collections.IList>.</xref:System.Collections.IList> 에서 특정 항목의 인덱스를 결정합니다."
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object> <xref:System.Collections.IList>.</xref:System.Collections.IList> 에서 찾을 수</xref:System.Object>"
    return:
      type: System.Int32
      description: "인덱스 <code> value </code> 목록에 고, 그렇지 않으면-1입니다."
  overload: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#IndexOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>잘못 된 개체 형식을 사용합니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: EncryptionPropertyCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "항목을 삽입의 <xref:System.Collections.IList>지정된 된 인덱스에.</xref:System.Collections.IList>"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "인덱스&0;부터 시작 `value` 삽입 해야 합니다."
    - id: value
      type: System.Object
      description: "<xref:System.Object> <xref:System.Collections.IList>.</xref:System.Collections.IList> 에 삽입 하려면</xref:System.Object>"
  overload: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Insert*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>잘못 된 개체 형식을 사용합니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: EncryptionPropertyCollection.System.Collections.IList.Item(Int32)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "지정된 된 인덱스에 요소를 가져옵니다."
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "<xref:System.Object> <xref:System.Collections.IList>.</xref:System.Collections.IList> 에서 제거 하려면</xref:System.Object>"
    return:
      type: System.Object
      description: "지정된 된 인덱스에 요소입니다."
  overload: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: EncryptionPropertyCollection.System.Collections.IList.Remove(Object)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "<xref:System.Collections.IList>.</xref:System.Collections.IList> 에서 맨 처음 발견 되는 특정 개체를 제거합니다."
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object> <xref:System.Collections.IList>.</xref:System.Collections.IList> 에서 제거 하려면</xref:System.Object>"
  overload: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Remove*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>잘못 된 개체 형식을 사용합니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.#ctor
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: EncryptionPropertyCollection()
  nameWithType: EncryptionPropertyCollection.EncryptionPropertyCollection()
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.EncryptionPropertyCollection()
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Add(System.Security.Cryptography.Xml.EncryptionProperty)
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: Add(EncryptionProperty)
  nameWithType: EncryptionPropertyCollection.Add(EncryptionProperty)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Add(EncryptionProperty)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.Xml.EncryptionProperty
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: EncryptionProperty
  nameWithType: EncryptionProperty
  fullName: System.Security.Cryptography.Xml.EncryptionProperty
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Clear
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: Clear()
  nameWithType: EncryptionPropertyCollection.Clear()
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Clear()
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Contains(System.Security.Cryptography.Xml.EncryptionProperty)
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: Contains(EncryptionProperty)
  nameWithType: EncryptionPropertyCollection.Contains(EncryptionProperty)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Contains(EncryptionProperty)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.CopyTo(System.Array,System.Int32)
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: EncryptionPropertyCollection.CopyTo(Array,Int32)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.CopyTo(System.Security.Cryptography.Xml.EncryptionProperty[],System.Int32)
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: CopyTo(EncryptionProperty[],Int32)
  nameWithType: EncryptionPropertyCollection.CopyTo(EncryptionProperty[],Int32)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.CopyTo(EncryptionProperty[],Int32)
- uid: System.Security.Cryptography.Xml.EncryptionProperty[]
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: EncryptionProperty
  nameWithType: EncryptionProperty
  fullName: System.Security.Cryptography.Xml.EncryptionProperty[]
  spec.csharp:
  - uid: System.Security.Cryptography.Xml.EncryptionProperty
    name: EncryptionProperty
    nameWithType: EncryptionProperty
    fullName: EncryptionProperty[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Count
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: Count
  nameWithType: EncryptionPropertyCollection.Count
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Count
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.GetEnumerator
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: EncryptionPropertyCollection.GetEnumerator()
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.IndexOf(System.Security.Cryptography.Xml.EncryptionProperty)
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: IndexOf(EncryptionProperty)
  nameWithType: EncryptionPropertyCollection.IndexOf(EncryptionProperty)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.IndexOf(EncryptionProperty)
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Insert(System.Int32,System.Security.Cryptography.Xml.EncryptionProperty)
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: Insert(Int32,EncryptionProperty)
  nameWithType: EncryptionPropertyCollection.Insert(Int32,EncryptionProperty)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Insert(Int32,EncryptionProperty)
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsFixedSize
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: IsFixedSize
  nameWithType: EncryptionPropertyCollection.IsFixedSize
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsFixedSize
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsReadOnly
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: EncryptionPropertyCollection.IsReadOnly
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsReadOnly
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsSynchronized
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: EncryptionPropertyCollection.IsSynchronized
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsSynchronized
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Item(System.Int32)
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: EncryptionPropertyCollection.Item(Int32)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Item(Int32)
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.ItemOf(System.Int32)
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: ItemOf(Int32)
  nameWithType: EncryptionPropertyCollection.ItemOf(Int32)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.ItemOf(Int32)
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Remove(System.Security.Cryptography.Xml.EncryptionProperty)
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: Remove(EncryptionProperty)
  nameWithType: EncryptionPropertyCollection.Remove(EncryptionProperty)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Remove(EncryptionProperty)
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.RemoveAt(System.Int32)
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: EncryptionPropertyCollection.RemoveAt(Int32)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.RemoveAt(Int32)
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.SyncRoot
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: SyncRoot
  nameWithType: EncryptionPropertyCollection.SyncRoot
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.SyncRoot
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Add(System.Object)
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: EncryptionPropertyCollection.System.Collections.IList.Add(Object)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System.Collections.IList.Add(Object)
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: EncryptionPropertyCollection.System.Collections.IList.Contains(Object)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System.Collections.IList.Contains(Object)
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: EncryptionPropertyCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: EncryptionPropertyCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: EncryptionPropertyCollection.System.Collections.IList.Item(Int32)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System.Collections.IList.Item(Int32)
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: EncryptionPropertyCollection.System.Collections.IList.Remove(Object)
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System.Collections.IList.Remove(Object)
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.#ctor*
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: EncryptionPropertyCollection
  nameWithType: EncryptionPropertyCollection.EncryptionPropertyCollection
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Add*
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: Add
  nameWithType: EncryptionPropertyCollection.Add
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Clear*
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: Clear
  nameWithType: EncryptionPropertyCollection.Clear
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Contains*
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: Contains
  nameWithType: EncryptionPropertyCollection.Contains
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.CopyTo*
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: CopyTo
  nameWithType: EncryptionPropertyCollection.CopyTo
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Count*
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: Count
  nameWithType: EncryptionPropertyCollection.Count
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.GetEnumerator*
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: EncryptionPropertyCollection.GetEnumerator
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.IndexOf*
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: IndexOf
  nameWithType: EncryptionPropertyCollection.IndexOf
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Insert*
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: Insert
  nameWithType: EncryptionPropertyCollection.Insert
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsFixedSize*
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: IsFixedSize
  nameWithType: EncryptionPropertyCollection.IsFixedSize
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsReadOnly*
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: EncryptionPropertyCollection.IsReadOnly
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsSynchronized*
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: EncryptionPropertyCollection.IsSynchronized
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Item*
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: Item
  nameWithType: EncryptionPropertyCollection.Item
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.ItemOf*
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: ItemOf
  nameWithType: EncryptionPropertyCollection.ItemOf
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.Remove*
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: Remove
  nameWithType: EncryptionPropertyCollection.Remove
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.RemoveAt*
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: RemoveAt
  nameWithType: EncryptionPropertyCollection.RemoveAt
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.SyncRoot*
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: SyncRoot
  nameWithType: EncryptionPropertyCollection.SyncRoot
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Add*
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: EncryptionPropertyCollection.System.Collections.IList.Add
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Contains*
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: EncryptionPropertyCollection.System.Collections.IList.Contains
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#IndexOf*
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: EncryptionPropertyCollection.System.Collections.IList.IndexOf
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Insert*
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: EncryptionPropertyCollection.System.Collections.IList.Insert
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Item*
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: EncryptionPropertyCollection.System.Collections.IList.Item
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Remove*
  parent: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: EncryptionPropertyCollection.System.Collections.IList.Remove
