### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.MenuItem
  id: MenuItem
  children:
  - System.Windows.Forms.MenuItem.#ctor
  - System.Windows.Forms.MenuItem.#ctor(System.String)
  - System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)
  - System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])
  - System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)
  - System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])
  - System.Windows.Forms.MenuItem.BarBreak
  - System.Windows.Forms.MenuItem.Break
  - System.Windows.Forms.MenuItem.Checked
  - System.Windows.Forms.MenuItem.Click
  - System.Windows.Forms.MenuItem.CloneMenu
  - System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)
  - System.Windows.Forms.MenuItem.DefaultItem
  - System.Windows.Forms.MenuItem.Dispose(System.Boolean)
  - System.Windows.Forms.MenuItem.DrawItem
  - System.Windows.Forms.MenuItem.Enabled
  - System.Windows.Forms.MenuItem.Index
  - System.Windows.Forms.MenuItem.IsParent
  - System.Windows.Forms.MenuItem.MdiList
  - System.Windows.Forms.MenuItem.MeasureItem
  - System.Windows.Forms.MenuItem.MenuID
  - System.Windows.Forms.MenuItem.MergeMenu
  - System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)
  - System.Windows.Forms.MenuItem.MergeOrder
  - System.Windows.Forms.MenuItem.MergeType
  - System.Windows.Forms.MenuItem.Mnemonic
  - System.Windows.Forms.MenuItem.OnClick(System.EventArgs)
  - System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  - System.Windows.Forms.MenuItem.OnInitMenuPopup(System.EventArgs)
  - System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)
  - System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)
  - System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)
  - System.Windows.Forms.MenuItem.OwnerDraw
  - System.Windows.Forms.MenuItem.Parent
  - System.Windows.Forms.MenuItem.PerformClick
  - System.Windows.Forms.MenuItem.PerformSelect
  - System.Windows.Forms.MenuItem.Popup
  - System.Windows.Forms.MenuItem.RadioCheck
  - System.Windows.Forms.MenuItem.Select
  - System.Windows.Forms.MenuItem.Shortcut
  - System.Windows.Forms.MenuItem.ShowShortcut
  - System.Windows.Forms.MenuItem.Text
  - System.Windows.Forms.MenuItem.ToString
  - System.Windows.Forms.MenuItem.Visible
  langs:
  - csharp
  name: MenuItem
  nameWithType: MenuItem
  fullName: System.Windows.Forms.MenuItem
  type: Class
  summary: "내에서 표시 되는 개별 항목을 나타냅니다는 <xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref> 또는 <xref href=&quot;System.Windows.Forms.ContextMenu&quot;> </xref>합니다. 하지만 <xref href=&quot;System.Windows.Forms.ToolStripMenuItem&quot;> </xref> 대체 하 고 추가 기능을 이전 버전의 MenuItem 컨트롤 메뉴 항목은 유지 이전 버전과 호환성 및 이후 사용 하도록 선택할 수 있습니다."
  remarks: "표시할 MenuItem 추가 해야 <xref:System.Windows.Forms.MainMenu>나 <xref:System.Windows.Forms.ContextMenu>.</xref:System.Windows.Forms.ContextMenu> </xref:System.Windows.Forms.MainMenu> 하위 메뉴를 만들려면 MenuItem 개체를 추가할 수 있습니다는 <xref:System.Windows.Forms.Menu.MenuItems%2A>부모 MenuItem.</xref:System.Windows.Forms.Menu.MenuItems%2A>       MenuItem 클래스 모양 및 메뉴 항목의 기능을 구성할 수 있는 속성을 제공 합니다. 메뉴 항목 옆에 있는 확인 표시를 표시 하려면 사용 된 <xref:System.Windows.Forms.MenuItem.Checked%2A>속성.</xref:System.Windows.Forms.MenuItem.Checked%2A> 상호 배타적인 메뉴 항목의 목록에서 선택 된 메뉴 항목을 식별 하려면이 기능을 사용할 수 있습니다. 예를 들어, 메뉴 항목의 텍스트 색을 설정 하기 위한 집합이 있는 경우는 <xref:System.Windows.Forms.TextBox>컨트롤, 있습니다 사용할 수 있습니다는 <xref:System.Windows.Forms.MenuItem.Checked%2A>현재 선택 된 색을 식별 하는 속성.</xref:System.Windows.Forms.MenuItem.Checked%2A> </xref:System.Windows.Forms.TextBox> <xref:System.Windows.Forms.MenuItem.Shortcut%2A>를 눌러 메뉴 항목을 선택할 수 있는 키보드 조합을 정의 속성을 사용할 수 있습니다.</xref:System.Windows.Forms.MenuItem.Shortcut%2A>       문서 MDI (다중 인터페이스) 응용 프로그램에 표시 되는 MenuItem 개체를 사용할 수 있습니다는 <xref:System.Windows.Forms.MenuItem.MergeMenu%2A>MDI 메뉴를 병합 하는 방법에 대 한 통합된 메뉴 구조를 만들려면 자식 폼의 부모입니다.</xref:System.Windows.Forms.MenuItem.MergeMenu%2A> MenuItem은 다시 사용할 수 없습니다 여러 위치에서 같은 시간에 같은 때문에 <xref:System.Windows.Forms.MainMenu>및 <xref:System.Windows.Forms.ContextMenu>를 사용할 수 있습니다는 <xref:System.Windows.Forms.MenuItem.CloneMenu%2A>메서드를 다른 위치에 사용 하기 위해 MenuItem의 복사본을 만듭니다.</xref:System.Windows.Forms.MenuItem.CloneMenu%2A> </xref:System.Windows.Forms.ContextMenu> </xref:System.Windows.Forms.MainMenu>       <xref:System.Windows.Forms.MenuItem.Popup>이벤트를 사용 하면 메뉴가 표시 되기 전에 작업을 수행할 수 있습니다.</xref:System.Windows.Forms.MenuItem.Popup> 예를 들어이 이벤트를 표시 하거나 코드의 상태에 따라 메뉴 항목 숨기기에 대 한 이벤트 처리기를 만들 수 있습니다. <xref:System.Windows.Forms.MenuItem.Select>이벤트를 사용 하면 사용자가 메뉴 항목 위로 마우스 포인터를 놓을 때 응용 프로그램의 메뉴 항목에 대 한 자세한 도움말을 제공 하는 등 작업을 수행할 수 있습니다.</xref:System.Windows.Forms.MenuItem.Select>"
  example:
  - "The following code example creates a menu structure for a form. The example code adds a MenuItem to represent the top-level menu item, adds a submenu item to it for selecting a font size, and then adds two submenu items to that menu item that represent large and small font choices in an application. The example requires that there is a <xref:System.Windows.Forms.MainMenu> object named `mainMenu1` and four MenuItem objects named `menuItem1`, `menuItem2`, `menuItem3`, and `menuItem4`.  \n  \n [!code-cpp[Classic Menu Example#1](~/add/codesnippet/cpp/t-system.windows.forms.m_8_1.cpp)]\n [!code-cs[Classic Menu Example#1](~/add/codesnippet/csharp/t-system.windows.forms.m_8_1.cs)]\n [!code-vb[Classic Menu Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.m_8_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Click")]

      [System.ComponentModel.DefaultProperty("Text")]

      [System.ComponentModel.DesignTimeVisible(false)]

      [System.ComponentModel.ToolboxItem(false)]

      public class MenuItem : System.Windows.Forms.Menu
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Windows.Forms.Menu
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Windows.Forms.Menu.CloneMenu(System.Windows.Forms.Menu)
  - System.Windows.Forms.Menu.CreateMenuHandle
  - System.Windows.Forms.Menu.FindHandle
  - System.Windows.Forms.Menu.FindMenuItem(System.Int32,System.IntPtr)
  - System.Windows.Forms.Menu.FindMergePosition(System.Int32)
  - System.Windows.Forms.Menu.FindShortcut
  - System.Windows.Forms.Menu.GetContextMenu
  - System.Windows.Forms.Menu.GetMainMenu
  - System.Windows.Forms.Menu.Handle
  - System.Windows.Forms.Menu.MdiListItem
  - System.Windows.Forms.Menu.MenuItems
  - System.Windows.Forms.Menu.MergeMenu(System.Windows.Forms.Menu)
  - System.Windows.Forms.Menu.Name
  - System.Windows.Forms.Menu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  - System.Windows.Forms.Menu.Tag
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: MenuItem()
  nameWithType: MenuItem.MenuItem()
  fullName: System.Windows.Forms.MenuItem.MenuItem()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "초기화는 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> 빈 캡션을 사용 하 여 합니다."
  remarks: "<xref:System.Windows.Forms.MenuItem>이 생성자를 사용 하는 데 <xref:System.Windows.Forms.MenuItem>모양과 <xref:System.Windows.Forms.MenuItem>.</xref:System.Windows.Forms.MenuItem> 의 동작을 지정 하는 클래스</xref:System.Windows.Forms.MenuItem> 의 메서드와 속성을</xref:System.Windows.Forms.MenuItem> 빈 만든 후"
  example:
  - "The following code example creates a <xref:System.Windows.Forms.MenuItem> using this version of the constructor.  \n  \n [!code-vb[Classic MenuItem.MenuItem Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_13_1.vb)]\n [!code-cpp[Classic MenuItem.MenuItem Example#1](~/add/codesnippet/cpp/m-system.windows.forms.m_13_1.cpp)]\n [!code-cs[Classic MenuItem.MenuItem Example#1](~/add/codesnippet/csharp/m-system.windows.forms.m_13_1.cs)]"
  syntax:
    content: public MenuItem ();
    parameters: []
  overload: System.Windows.Forms.MenuItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: MenuItem(String)
  nameWithType: MenuItem.MenuItem(String)
  fullName: System.Windows.Forms.MenuItem.MenuItem(String)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> 메뉴 항목에 대 한 지정 된 캡션 사용 하 여 클래스입니다."
  remarks: "메뉴 항목에 대 한 캡션을 지정 하는 경우는 `text` 매개 변수를 지정할 수도 있습니다 선택 키 액세스 키로 사용할 문자의 앞에 &quot;/&quot; / 문자를 배치 하 여 합니다. 예를 들어 &quot;File&quot;의 &quot;F&quot;가 선택 키를 지정 하려면 있습니다 것으로 메뉴 항목에 대 한 캡션을 지정 &quot;/ / 파일&quot;입니다. 메뉴에 대 한 키보드 탐색을 제공 하려면이 기능을 사용할 수 있습니다.       설정의 `text` 매개 변수를 &quot;`-`&quot; 표준 메뉴 항목 대신 구분 기호 (가로 선)으로 표시 될 메뉴 항목을 발생 합니다."
  example:
  - "The following code example creates a <xref:System.Windows.Forms.MenuItem> that specifies the caption of the menu item at the time it is constructed.  \n  \n [!code-cpp[Classic MenuItem.MenuItem1 Example#1](~/add/codesnippet/cpp/m-system.windows.forms.m_1_1.cpp)]\n [!code-cs[Classic MenuItem.MenuItem1 Example#1](~/add/codesnippet/csharp/m-system.windows.forms.m_1_1.cs)]\n [!code-vb[Classic MenuItem.MenuItem1 Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_1_1.vb)]"
  syntax:
    content: public MenuItem (string text);
    parameters:
    - id: text
      type: System.String
      description: "메뉴 항목에 대 한 캡션입니다."
  overload: System.Windows.Forms.MenuItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)
  id: '#ctor(System.String,System.EventHandler)'
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: MenuItem(String,EventHandler)
  nameWithType: MenuItem.MenuItem(String,EventHandler)
  fullName: System.Windows.Forms.MenuItem.MenuItem(String,EventHandler)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "에 대 한 지정 된 캡션 및 이벤트 처리기를 사용 하 여 클래스의 새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Forms.MenuItem.Click&quot;> </xref> 메뉴 항목의 이벤트입니다."
  remarks: "메뉴 항목에 대 한 캡션을 지정 하는 경우는 `text` 매개 변수를 지정할 수도 있습니다 선택 키는 &quot;/ /&quot; 선택 키로 사용할 문자의 앞에 배치 하 여 합니다. 예를 들어 &quot;File&quot;의 &quot;F&quot;가 선택 키를 지정 하려면 있습니다 것으로 메뉴 항목에 대 한 캡션을 지정 &quot;/ / 파일&quot;입니다. 메뉴에 대 한 키보드 탐색을 제공 하려면이 기능을 사용할 수 있습니다.       설정의 `text` 매개 변수를 &quot;`-`&quot; 표준 메뉴 항목 대신 구분 기호 (가로 선)으로 표시 될 메뉴 항목을 발생 합니다.       또한 처리 하는 대리자를 지정 하려면이 생성자를 사용할 수는 <xref:System.Windows.Forms.MenuItem.Click>만드는 메뉴 항목에 대 한 이벤트입니다.</xref:System.Windows.Forms.MenuItem.Click> <xref:System.EventHandler>이 생성자에 전달 하면 처리할 수 있는 이벤트 처리기를 호출 하도록 구성 되어야 합니다는 <xref:System.Windows.Forms.MenuItem.Click>이벤트.</xref:System.Windows.Forms.MenuItem.Click> </xref:System.EventHandler> 이벤트 처리에 대 한 자세한 내용은 참조 하십시오. [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example creates a <xref:System.Windows.Forms.MenuItem> object with a specified caption and an <xref:System.EventHandler> delegate connected to an event handler that will handle the <xref:System.Windows.Forms.MenuItem.Click> event for the menu item.  \n  \n [!code-cpp[Classic MenuItem.MenuItem2 Example#1](~/add/codesnippet/cpp/m-system.windows.forms.m_4_1.cpp)]\n [!code-cs[Classic MenuItem.MenuItem2 Example#1](~/add/codesnippet/csharp/m-system.windows.forms.m_4_1.cs)]\n [!code-vb[Classic MenuItem.MenuItem2 Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_4_1.vb)]"
  syntax:
    content: public MenuItem (string text, EventHandler onClick);
    parameters:
    - id: text
      type: System.String
      description: "메뉴 항목에 대 한 캡션입니다."
    - id: onClick
      type: System.EventHandler
      description: "<xref:System.EventHandler>처리 하는 <xref href=&quot;System.Windows.Forms.MenuItem.Click&quot;> </xref> 이 메뉴 항목에 대 한 이벤트입니다.</xref:System.EventHandler>"
  overload: System.Windows.Forms.MenuItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])
  id: '#ctor(System.String,System.Windows.Forms.MenuItem[])'
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: MenuItem(String,MenuItem[])
  nameWithType: MenuItem.MenuItem(String,MenuItem[])
  fullName: System.Windows.Forms.MenuItem.MenuItem(String,MenuItem[])
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "메뉴 항목에 대해 정의 된 하위 메뉴 항목의 배열 및 지정 된 캡션 사용 하 여 클래스의 새 인스턴스를 초기화 합니다."
  remarks: "메뉴 항목에 대 한 캡션을 지정 하는 경우는 `text` 매개 변수를 지정할 수도 있습니다 선택 키는 &quot;/ /&quot; 선택 키로 사용할 문자의 앞에 배치 하 여 합니다. 예를 들어 &quot;File&quot;의 &quot;F&quot;가 선택 키를 지정 하려면 있습니다 것으로 메뉴 항목에 대 한 캡션을 지정 &quot;/ / 파일&quot;입니다. 메뉴에 대 한 키보드 탐색을 제공 하려면이 기능을 사용할 수 있습니다.       설정의 `text` 매개 변수를 &quot;`-`&quot; 표준 메뉴 항목 대신 구분 기호 (가로 선)으로 표시 될 메뉴 항목을 발생 합니다.       `items` 매개 변수를 사용 하면이 메뉴 항목의 하위 메뉴를 정의 하는 메뉴 항목의 배열에 할당할 수 있습니다. 배열의 각 항목에 할당 된 메뉴 항목의 배열을 포함할 수도 있습니다. 이 메뉴 항목에 대 한 생성자에 게 할당 하 고 전체 메뉴 구조를 만들 수 있습니다.       이벤트 처리에 대 한 자세한 내용은 참조 하십시오. [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example creates an object with a specified caption, an event handler connected to a method that will handle the event each menu item in an array of submenu items.  \n  \n [!code-cpp[Classic MenuItem.MenuItem4 Example#1](~/add/codesnippet/cpp/cfa20f10-2c8a-466e-a0e8-_1.cpp)]\n [!code-vb[Classic MenuItem.MenuItem4 Example#1](~/add/codesnippet/visualbasic/cfa20f10-2c8a-466e-a0e8-_1.vb)]\n [!code-cs[Classic MenuItem.MenuItem4 Example#1](~/add/codesnippet/csharp/cfa20f10-2c8a-466e-a0e8-_1.cs)]"
  syntax:
    content: public MenuItem (string text, System.Windows.Forms.MenuItem[] items);
    parameters:
    - id: text
      type: System.String
      description: "메뉴 항목에 대 한 캡션입니다."
    - id: items
      type: System.Windows.Forms.MenuItem[]
      description: "배열을 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> 이 메뉴 항목에 대 한 하위 메뉴 항목에 포함 된 개체입니다."
  overload: System.Windows.Forms.MenuItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)
  id: '#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)'
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: MenuItem(String,EventHandler,Shortcut)
  nameWithType: MenuItem.MenuItem(String,EventHandler,Shortcut)
  fullName: System.Windows.Forms.MenuItem.MenuItem(String,EventHandler,Shortcut)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정한 캡션, 이벤트 처리기 및 메뉴 항목에 대 한 관련 된 바로 가기 키를 사용 하 여 클래스의 새 인스턴스를 초기화합니다."
  remarks: "메뉴 항목에 대 한 캡션을 지정 하는 경우는 `text` 매개 변수를 지정할 수도 있습니다 선택 키는 &quot;/ /&quot; 선택 키로 사용할 문자의 앞에 배치 하 여 합니다. 예를 들어 &quot;File&quot;의 &quot;F&quot;가 선택 키를 지정 하려면 있습니다 것으로 메뉴 항목에 대 한 캡션을 지정 &quot;/ / 파일&quot;입니다. 메뉴에 대 한 키보드 탐색을 제공 하려면이 기능을 사용할 수 있습니다. 이 생성자를 사용 하면 키보드 탐색을 제공 하는 액세스 키 외에도 바로 가기 키를 지정할 수 있습니다. 바로 가기 키를 사용 하 여 메뉴 항목을 활성화 하는 데 사용할 수 있는 키의 조합을 지정할 수 있습니다.       설정의 `text` 매개 변수를 &quot;`-`&quot; 표준 메뉴 항목 대신 구분 기호 (가로 선)으로 표시 될 메뉴 항목을 발생 합니다.       또한 처리 하는 대리자를 지정 하려면이 생성자를 사용할 수는 <xref:System.Windows.Forms.MenuItem.Click>만드는 메뉴 항목에 대 한 이벤트입니다.</xref:System.Windows.Forms.MenuItem.Click> <xref:System.EventHandler>이 생성자에 전달 하면 처리할 수 있는 이벤트 처리기를 호출 하도록 구성 되어야 합니다는 <xref:System.Windows.Forms.MenuItem.Click>이벤트.</xref:System.Windows.Forms.MenuItem.Click> </xref:System.EventHandler> 이벤트 처리에 대 한 자세한 내용은 참조 하십시오. [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example creates an object with a specified caption, shortcut key, and an event handler connected to a method that will handle the event for the menu item.  \n  \n [!code-cpp[Classic MenuItem.MenuItem3 Example#1](~/add/codesnippet/cpp/feb14794-39b6-433b-90a5-_1.cpp)]\n [!code-vb[Classic MenuItem.MenuItem3 Example#1](~/add/codesnippet/visualbasic/feb14794-39b6-433b-90a5-_1.vb)]\n [!code-cs[Classic MenuItem.MenuItem3 Example#1](~/add/codesnippet/csharp/feb14794-39b6-433b-90a5-_1.cs)]"
  syntax:
    content: public MenuItem (string text, EventHandler onClick, System.Windows.Forms.Shortcut shortcut);
    parameters:
    - id: text
      type: System.String
      description: "메뉴 항목에 대 한 캡션입니다."
    - id: onClick
      type: System.EventHandler
      description: "<xref:System.EventHandler>처리 하는 <xref href=&quot;System.Windows.Forms.MenuItem.Click&quot;> </xref> 이 메뉴 항목에 대 한 이벤트입니다.</xref:System.EventHandler>"
    - id: shortcut
      type: System.Windows.Forms.Shortcut
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.Shortcut&quot;> </xref> 값입니다."
  overload: System.Windows.Forms.MenuItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])
  id: '#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])'
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: MenuItem(MenuMerge,Int32,Shortcut,String,EventHandler,EventHandler,EventHandler,MenuItem[])
  nameWithType: MenuItem.MenuItem(MenuMerge,Int32,Shortcut,String,EventHandler,EventHandler,EventHandler,MenuItem[])
  fullName: System.Windows.Forms.MenuItem.MenuItem(MenuMerge,Int32,Shortcut,String,EventHandler,EventHandler,EventHandler,MenuItem[])
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> 지정 된 캡션과 클래스;에 대해 정의 된 이벤트 처리기는 <xref href=&quot;System.Windows.Forms.MenuItem.Click&quot;> </xref>, <xref href=&quot;System.Windows.Forms.MenuItem.Select&quot;> </xref> 및 <xref href=&quot;System.Windows.Forms.MenuItem.Popup&quot;> </xref> 이벤트; 바로 가기 키 병합 유형; 및 메뉴 항목에 대해 지정 된 순서입니다."
  remarks: "메뉴 항목에 대 한 캡션을 지정 하는 경우는 `text` 매개 변수를 지정할 수도 있습니다 선택 키는 &quot;/ /&quot; 선택 키로 사용할 문자의 앞에 배치 하 여 합니다. 예를 들어 &quot;File&quot;의 &quot;F&quot;가 선택 키를 지정 하려면 있습니다 것으로 메뉴 항목에 대 한 캡션을 지정 &quot;/ / 파일&quot;입니다. 메뉴에 대 한 키보드 탐색을 제공 하려면이 기능을 사용할 수 있습니다.       설정의 `text` 매개 변수를 &quot;`-`&quot; 표준 메뉴 항목 대신 구분 기호 (가로 선)으로 표시 될 메뉴 항목을 발생 합니다.       `items` 매개 변수를 사용 하면이 메뉴 항목의 하위 메뉴를 정의 하는 메뉴 항목의 배열에 할당할 수 있습니다. 배열의 각 항목에 할당 된 메뉴 항목의 배열을 포함할 수도 있습니다. 이 메뉴 항목에 대 한 생성자에 게 할당 하 고 전체 메뉴 구조를 만들 수 있습니다.       `mergeType` 및 `mergeOrder` 매개 변수를 사용 하는 메뉴 항목은 다른 메뉴와 병합 될 때이 메뉴 항목이 동작 하는 방법을 확인할 수 있습니다. 에 대해 지정 하는 값에 따라는 `mergeType` 매개 변수를 추가, 제거을 대체 하거나 메뉴 항목 및 해당 하위 메뉴 항목와 병합할 메뉴와 병합 합니다. `mergeOrder` 매개 변수는 메뉴 병합 될 때 만드는 메뉴 항목 배치 될 위치를 결정 합니다.       만드는 데이 생성자를 사용할 수는 또한는 <xref:System.Windows.Forms.MenuItem>메뉴 항목의 클릭에서 처리 하는 코드에서 이벤트 처리기에 연결 되어 있습니다.</xref:System.Windows.Forms.MenuItem> <xref:System.EventHandler>이 생성자에 전달 하면 처리할 수 있는 이벤트 처리기를 호출 하도록 구성 해야는 <xref:System.Windows.Forms.MenuItem.Click>이벤트.</xref:System.Windows.Forms.MenuItem.Click> </xref:System.EventHandler> 이 생성자 버전을 사용 하 여 연결할 수도 있습니다는 <xref:System.Windows.Forms.MenuItem.Popup>및 <xref:System.Windows.Forms.MenuItem.Select>이 메뉴 항목을 선택 하는 시기를 확인할 수 있습니다.</xref:System.Windows.Forms.MenuItem.Select> </xref:System.Windows.Forms.MenuItem.Popup> 하위 메뉴 항목 옆에 있는 확인 표시를 사용 하도록 설정 또는 응용 프로그램의 상태에 따라 메뉴 항목을 사용 하지 않도록 설정 하려면 여부를 결정 하는 등 작업에 대 한 이러한 이벤트를 사용할 수 있습니다. <xref:System.Windows.Forms.MenuItem.Select>및 <xref:System.Windows.Forms.MenuItem.Click>에 대해서만 발생 하는 <xref:System.Windows.Forms.MenuItem>부모 메뉴 항목이 아닌 개체에.</xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.MenuItem.Click> </xref:System.Windows.Forms.MenuItem.Select> 이벤트 처리에 대 한 자세한 내용은 참조 하십시오. [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example creates a menu item that has a caption and shortcut key. The menu item also has event handlers defined for the <xref:System.Windows.Forms.MenuItem.Popup>, <xref:System.Windows.Forms.MenuItem.Click>, and <xref:System.Windows.Forms.MenuItem.Select> events. If this menu item is merged, it will add the menu item to the menu with the merge order of zero.  \n  \n [!code-cs[Classic MenuItem.MenuItem5 Example#1](~/add/codesnippet/csharp/a423d634-c30f-4d0b-905e-_1.cs)]\n [!code-cpp[Classic MenuItem.MenuItem5 Example#1](~/add/codesnippet/cpp/a423d634-c30f-4d0b-905e-_1.cpp)]\n [!code-vb[Classic MenuItem.MenuItem5 Example#1](~/add/codesnippet/visualbasic/a423d634-c30f-4d0b-905e-_1.vb)]"
  syntax:
    content: public MenuItem (System.Windows.Forms.MenuMerge mergeType, int mergeOrder, System.Windows.Forms.Shortcut shortcut, string text, EventHandler onClick, EventHandler onPopup, EventHandler onSelect, System.Windows.Forms.MenuItem[] items);
    parameters:
    - id: mergeType
      type: System.Windows.Forms.MenuMerge
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.MenuMerge&quot;> </xref> 값입니다."
    - id: mergeOrder
      type: System.Int32
      description: "이 메뉴 항목 병합된 된 메뉴에 걸리는 상대 위치입니다."
    - id: shortcut
      type: System.Windows.Forms.Shortcut
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.Shortcut&quot;> </xref> 값입니다."
    - id: text
      type: System.String
      description: "메뉴 항목에 대 한 캡션입니다."
    - id: onClick
      type: System.EventHandler
      description: "<xref:System.EventHandler>처리 하는 <xref href=&quot;System.Windows.Forms.MenuItem.Click&quot;> </xref> 이 메뉴 항목에 대 한 이벤트입니다.</xref:System.EventHandler>"
    - id: onPopup
      type: System.EventHandler
      description: "<xref:System.EventHandler>처리 하는 <xref href=&quot;System.Windows.Forms.MenuItem.Popup&quot;> </xref> 이 메뉴 항목에 대 한 이벤트입니다.</xref:System.EventHandler>"
    - id: onSelect
      type: System.EventHandler
      description: "<xref:System.EventHandler>처리 하는 <xref href=&quot;System.Windows.Forms.MenuItem.Select&quot;> </xref> 이 메뉴 항목에 대 한 이벤트입니다.</xref:System.EventHandler>"
    - id: items
      type: System.Windows.Forms.MenuItem[]
      description: "배열을 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> 이 메뉴 항목에 대 한 하위 메뉴 항목에 포함 된 개체입니다."
  overload: System.Windows.Forms.MenuItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.BarBreak
  id: BarBreak
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: BarBreak
  nameWithType: MenuItem.BarBreak
  fullName: System.Windows.Forms.MenuItem.BarBreak
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "나타내는 값을 가져오거나 여부는 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> 새 줄에 배치 됩니다 (메뉴 항목에 추가 <xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref> 개체) 또는 새 열에 (하위 메뉴 항목 또는에 표시 된 메뉴 항목에 대 한는 <xref href=&quot;System.Windows.Forms.ContextMenu&quot;> </xref>)."
  remarks: "각 메뉴 항목 위치 가로로 대신 서로 옆에 있는 세로 목록에 메뉴를 만들려면 BarBreak 속성을 사용할 수 있습니다. 또한 최상위 메뉴 항목의 여러 행을 포함 하는 메뉴 모음을 만들려면이 속성을 사용할 수 있습니다.       이 속성에서 다른는 <xref:System.Windows.Forms.MenuItem.Break%2A>막대 각 메뉴 항목의 왼쪽된 가장자리에 표시 되는 속성이 고 <xref:System.Windows.Forms.MenuItem.Break%2A>속성이로 설정 `true`.</xref:System.Windows.Forms.MenuItem.Break%2A> </xref:System.Windows.Forms.MenuItem.Break%2A> 막대는 메뉴 항목은 최상위 메뉴 항목을 하는 경우에 표시 됩니다."
  example:
  - "The following code example creates a <xref:System.Windows.Forms.MenuItem> with two submenu items. The two submenu items are displayed horizontally instead of vertically using the BarBreak property.  \n  \n [!code-cs[Classic MenuItem.BarBreak Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_7_1.cs)]\n [!code-cpp[Classic MenuItem.BarBreak Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_7_1.cpp)]\n [!code-vb[Classic MenuItem.BarBreak Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_7_1.vb)]"
  syntax:
    content: public bool BarBreak { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>메뉴 항목은 새 줄에 이나 새 열에 배치 하는 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 메뉴 항목의 기본 위치에 남아 있는 경우. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.MenuItem.BarBreak*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.Break
  id: Break
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: Break
  nameWithType: MenuItem.Break
  fullName: System.Windows.Forms.MenuItem.Break
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "항목을 새 줄에 배치 되는지 여부를 나타내는 값을 가져오거나 설정 합니다. (메뉴 항목에 추가 <xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref> 개체) 또는 새 열에 (메뉴 항목 또는 하위 메뉴 항목에 표시 되는 <xref href=&quot;System.Windows.Forms.ContextMenu&quot;> </xref>)."
  remarks: "각 메뉴 위치 가로로 대신 서로 옆에 있는 세로 목록에 메뉴를 만들려면 나누기 속성을 사용할 수 있습니다. 또한 최상위 메뉴 항목의 여러 행을 포함 하는 메뉴 모음을 만들려면이 속성을 사용할 수 있습니다."
  example:
  - "The following code example creates a menu with two top-level menu items on the top row and one menu item on the bottom row.  \n  \n [!code-cs[Classic MenuItem.Break Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_31_1.cs)]\n [!code-vb[Classic MenuItem.Break Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_31_1.vb)]\n [!code-cpp[Classic MenuItem.Break Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_31_1.cpp)]"
  syntax:
    content: public bool Break { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>메뉴 항목은 새 줄에 이나 새 열에 배치 하는 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 메뉴 항목의 기본 위치에 남아 있는 경우. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.MenuItem.Break*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.Checked
  id: Checked
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: Checked
  nameWithType: MenuItem.Checked
  fullName: System.Windows.Forms.MenuItem.Checked
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "메뉴 항목의 텍스트 옆에 확인 표시가 표시 되는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "응용 프로그램에 대 한 상태를 제공 하는 메뉴에서 다른 메뉴 항목과 함께에서 Checked 속성을 사용할 수 있습니다. 예를 들어 응용 프로그램에서 텍스트에 대해 표시 되는 글꼴 크기를 식별 하는 항목의 그룹에 있는 메뉴 항목에 확인 표시를 배치할 수 있습니다. 또한 함께 사용할 수 없는 메뉴 항목 그룹에 선택한 메뉴 항목을 식별 하는 Checked 속성을 사용할 수 있습니다.      > [!NOTE] >로이 속성을 설정할 수 없습니다 `true` 최상위 메뉴 항목에 대 한 합니다."
  example:
  - "The following code example uses the Checked property to provide the state in an application. In this example, a group of menu items are used to specify the color for the text in a <xref:System.Windows.Forms.TextBox> control. The event handler provided is used by the <xref:System.Windows.Forms.MenuItem.Click> event of three menu items. Each menu item specifies a text color, `menuItemRed` (Red), `menuItemGreen` (Green), or `menuItemBlue` (Blue). The event handler determines which menu item was clicked, places a checkmark to the selected menu item, and changes the text color of the form's <xref:System.Windows.Forms.TextBox> control. The example requires that the <xref:System.Drawing> namespace has been added to the form that this code is placed in. The example also requires that a <xref:System.Windows.Forms.TextBox> has been added to the form that this example code is located in that is named `textBox1`.  \n  \n [!code-cpp[Classic MenuItem.Checked Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_32_1.cpp)]\n [!code-cs[Classic MenuItem.Checked Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_32_1.cs)]\n [!code-vb[Classic MenuItem.Checked Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_32_1.vb)]"
  syntax:
    content: public bool Checked { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>메뉴 항목; 옆에 확인 표시가 없는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.MenuItem.Checked*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> 최상위 메뉴 또는 자식이 있습니다."
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.Click
  id: Click
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: Click
  nameWithType: MenuItem.Click
  fullName: System.Windows.Forms.MenuItem.Click
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "메뉴 항목에 대해 정의 된 바로 가기 키 또는 선택 키를 사용 하 여 메뉴 항목을 클릭 하거나 선택할 때 발생 합니다."
  remarks: "Click 이벤트가 발생 하면이 <xref:System.Windows.Forms.MenuItem>사용자가 클릭.</xref:System.Windows.Forms.MenuItem> 이 이벤트는 또한 사용자가 키보드를 사용 하 여 메뉴 항목을 선택 하는 경우에 발생 하 고 Enter 키를 누르거나 합니다. 선택 키 경우도 발생할 수 있습니다 또는 바로 가기 키를 누르면 <xref:System.Windows.Forms.MenuItem>.</xref:System.Windows.Forms.MenuItem> 와 연결 된 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > 경우는 <xref:System.Windows.Forms.Menu.MenuItems%2A>속성에 대 한는 <xref:System.Windows.Forms.MenuItem>모든 항목이 포함 된이 이벤트가 발생 하지 않습니다.</xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.Menu.MenuItems%2A> 부모 메뉴 항목에 대해서는이 이벤트가 발생 하지 않습니다."
  example:
  - "The following code example demonstrates how to use the Click event to perform tasks when a <xref:System.Windows.Forms.MenuItem> is clicked. The example creates a <xref:System.Windows.Forms.MainMenu> called `mainMenu1` and adds two <xref:System.Windows.Forms.MenuItem> objects, `topMenuItem` (`File`) and `menuItem1` (`Open`). It then connects the `Click` event to the `menuItem1_Click` event handler. When the user clicks the `Open` menu item, an <xref:System.Windows.Forms.OpenFileDialog> is initialized and displayed. The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[MenuItemClick#1](~/add/codesnippet/csharp/e-system.windows.forms.m_15_1.cs)]\n [!code-cpp[MenuItemClick#1](~/add/codesnippet/cpp/e-system.windows.forms.m_15_1.cpp)]\n [!code-vb[MenuItemClick#1](~/add/codesnippet/visualbasic/e-system.windows.forms.m_15_1.vb)]"
  syntax:
    content: public event EventHandler Click;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.CloneMenu
  id: CloneMenu
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: CloneMenu()
  nameWithType: MenuItem.CloneMenu()
  fullName: System.Windows.Forms.MenuItem.CloneMenu()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "현재의 복사본을 만듭니다 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref>합니다."
  remarks: "<xref:System.Windows.Forms.MenuItem><xref:System.Windows.Forms.MenuItem>.</xref:System.Windows.Forms.MenuItem> 의 사본을 취득 하지 않으면 여러 위치에서 개체를 사용할 수 없습니다.</xref:System.Windows.Forms.MenuItem> 사용 하기 위해이 메뉴 항목의 복사본을 만들려면이 메서드를 호출할 수는 <xref:System.Windows.Forms.ContextMenu>, <xref:System.Windows.Forms.MainMenu>, 또는 기타 <xref:System.Windows.Forms.MenuItem>응용 프로그램 내에서.</xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.MainMenu> </xref:System.Windows.Forms.ContextMenu> 메뉴 항목이 복제 되는 경우 원래 메뉴 항목에 지정 된 모든 이벤트 처리기는 메뉴 항목의 복제 버전에서 작동 하는 데 계속 됩니다. 예를 들어 만든는 <xref:System.Windows.Forms.MenuItem>및 연결 된 해당 <xref:System.Windows.Forms.MenuItem.Click>이벤트를 이벤트 처리기.</xref:System.Windows.Forms.MenuItem.Click> </xref:System.Windows.Forms.MenuItem> 메뉴 항목이 복제 되는 경우 복제 된 메뉴 항목에서는 동일한 이벤트 처리기를 호출 합니다."
  example:
  - "The following code example clones a <xref:System.Windows.Forms.MenuItem> and displays it in a <xref:System.Windows.Forms.ContextMenu>. The example requires that a <xref:System.Windows.Forms.MenuItem> exists in a <xref:System.Windows.Forms.MainMenu> on a form with the name of `menuItem1` and that a <xref:System.Windows.Forms.ContextMenu> object named `contextMenu1` also exists on the form.  \n  \n [!code-cs[Classic MenuItem.CloneMenu Example#1](~/add/codesnippet/csharp/m-system.windows.forms.m_17_1.cs)]\n [!code-cpp[Classic MenuItem.CloneMenu Example#1](~/add/codesnippet/cpp/m-system.windows.forms.m_17_1.cpp)]\n [!code-vb[Classic MenuItem.CloneMenu Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_17_1.vb)]"
  syntax:
    content: public virtual System.Windows.Forms.MenuItem CloneMenu ();
    parameters: []
    return:
      type: System.Windows.Forms.MenuItem
      description: "A <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> 복제 된 메뉴 항목을 나타내는입니다."
  overload: System.Windows.Forms.MenuItem.CloneMenu*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)
  id: CloneMenu(System.Windows.Forms.MenuItem)
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: CloneMenu(MenuItem)
  nameWithType: MenuItem.CloneMenu(MenuItem)
  fullName: System.Windows.Forms.MenuItem.CloneMenu(MenuItem)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정 된 복사본을 만듭니다 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref>합니다."
  remarks: "이미 만든 바로 가기 메뉴 또는 다른 메뉴 구조에서 사용 하기 위해 응용 프로그램 내에서 메뉴 항목의 복사본을 만들고이 메서드를 호출 합니다. 이 버전의 <xref:System.Windows.Forms.MenuItem.CloneMenu%2A>특정을 지정할 수 있습니다 <xref:System.Windows.Forms.MenuItem>메서드를 호출 하는 메뉴 항목 대신 복사 합니다.</xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.MenuItem.CloneMenu%2A> 이 메서드를 사용 하 여 새 <xref:System.Windows.Forms.MenuItem>다른 <xref:System.Windows.Forms.MenuItem>.</xref:System.Windows.Forms.MenuItem> 의 복사본 인 개체</xref:System.Windows.Forms.MenuItem> 를 초기화 하려면 메뉴 항목이 복제 되는 경우 원래 메뉴 항목에 지정 된 모든 이벤트 처리기는 메뉴 항목의 복제 버전에서 작동 하는 데 계속 됩니다. 예를 들어 만든는 <xref:System.Windows.Forms.MenuItem>및 연결 된 해당 <xref:System.Windows.Forms.MenuItem.Click>이벤트를 이벤트 처리기.</xref:System.Windows.Forms.MenuItem.Click> </xref:System.Windows.Forms.MenuItem> 메뉴 항목이 복제 되는 경우 복제 된 메뉴 항목에서는 동일한 이벤트 처리기를 호출 합니다."
  example:
  - "The following code example initializes a new <xref:System.Windows.Forms.MenuItem> with a copy of an existing <xref:System.Windows.Forms.MenuItem> that is used in a <xref:System.Windows.Forms.MainMenu> on a form. The code then adds the cloned <xref:System.Windows.Forms.MenuItem> to a <xref:System.Windows.Forms.ContextMenu> on the form. This example requires that a <xref:System.Windows.Forms.MenuItem> is already created and named `menuItem1` and that a <xref:System.Windows.Forms.ContextMenu> control has been created and named `contextMenu1`.  \n  \n [!code-cs[Classic MenuItem.CloneMenu1 Example#1](~/add/codesnippet/csharp/m-system.windows.forms.m_14_1.cs)]\n [!code-cpp[Classic MenuItem.CloneMenu1 Example#1](~/add/codesnippet/cpp/m-system.windows.forms.m_14_1.cpp)]\n [!code-vb[Classic MenuItem.CloneMenu1 Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_14_1.vb)]"
  syntax:
    content: protected void CloneMenu (System.Windows.Forms.MenuItem itemSrc);
    parameters:
    - id: itemSrc
      type: System.Windows.Forms.MenuItem
      description: "<xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> 복사할 메뉴 항목을 나타내는입니다."
  overload: System.Windows.Forms.MenuItem.CloneMenu*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.DefaultItem
  id: DefaultItem
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: DefaultItem
  nameWithType: MenuItem.DefaultItem
  fullName: System.Windows.Forms.MenuItem.DefaultItem
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "메뉴 항목의 기본 메뉴 항목 인지를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "메뉴가 기본 메뉴 항목은 굵은 글꼴로 지정 합니다. 기본 항목을 포함 하는 하위 메뉴를 두 번 클릭할 때 기본 항목을 선택 및 하위 메뉴를 닫을 합니다. DefaultItem 속성을 사용 하 여 결과, 메뉴 또는 바로 가기 메뉴에 예상 되는 기본 동작입니다."
  example:
  - "The following code example creates a menu item with two submenu items. The example sets `menuItem2` as the default menu item using the DefaultItem property.  \n  \n [!code-cs[Classic MenuItem.DefaultItem Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_5_1.cs)]\n [!code-cpp[Classic MenuItem.DefaultItem Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_5_1.cpp)]\n [!code-vb[Classic MenuItem.DefaultItem Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_5_1.vb)]"
  syntax:
    content: public bool DefaultItem { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>메뉴 항목을 메뉴;의 기본 항목 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.MenuItem.DefaultItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: MenuItem.Dispose(Boolean)
  fullName: System.Windows.Forms.MenuItem.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "사용 하는 리소스 (메모리 제외) 삭제는 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref>합니다."
  remarks: "<xref:System.Windows.Forms.MenuItem>.</xref:System.Windows.Forms.MenuItem> 를 사용 하 여 작업을 마쳤으면 Dispose를 호출 합니다. Dispose 메서드는 <xref:System.Windows.Forms.MenuItem>불안정 한 상태가.</xref:System.Windows.Forms.MenuItem> Dispose를 호출한 후에 대 한 모든 참조를 해제 해야는 <xref:System.Windows.Forms.MenuItem>차지 했던 메모리를 가비지 수집에 의해 회수 될 수 있도록 합니다.</xref:System.Windows.Forms.MenuItem>      > [!NOTE] > <xref:System.Windows.Forms.MenuItem>.</xref:System.Windows.Forms.MenuItem> 에 대 한 마지막 참조를 해제 하기 전에 항상 호출 삭제 그렇지 않으면 리소스는 <xref:System.Windows.Forms.MenuItem>가 사용 하 여 해제 되지 것입니다 가비지 컬렉션 호출할 때까지 <xref:System.Windows.Forms.MenuItem>개체의 소멸자가.</xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.MenuItem>"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.Windows.Forms.MenuItem.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.DrawItem
  id: DrawItem
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: DrawItem
  nameWithType: MenuItem.DrawItem
  fullName: System.Windows.Forms.MenuItem.DrawItem
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우는 <xref:System.Windows.Forms.MenuItem.OwnerDraw*>메뉴 항목의 속성이로 설정 되어 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 고 메뉴 항목을 그리는 요청이.</xref:System.Windows.Forms.MenuItem.OwnerDraw*>"
  remarks: "<xref:System.Windows.Forms.DrawItemEventArgs>DrawItem 이벤트 처리기에 전달 된 인수를 제공는 <xref:System.Drawing.Graphics>그리기 및 메뉴 항목의 화면에 다른 그래픽 작업을 수행할 수 있는 개체입니다.</xref:System.Drawing.Graphics> </xref:System.Windows.Forms.DrawItemEventArgs> 응용 프로그램의 요구를 충족 하는 사용자 지정 메뉴를 만드는이 이벤트 처리기를 사용할 수 있습니다. 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to handle the DrawItem event. This example draws a menu item using a <xref:System.Drawing.Brush> and a <xref:System.Drawing.Font>, and then draws a <xref:System.Drawing.Rectangle> around the menu item. The drawing is performed through the <xref:System.Drawing.Graphics> object, which is passed to the event handler in the <xref:System.Windows.Forms.DrawItemEventArgs> parameter. This example requires that you have initialized the <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> property for the item to `true`. For the C# example, add the following code in the form's constructor, after `InitializeComponent`, to hook up the event:  \n  \n `this.menuItem1.DrawItem += new DrawItemEventHandler(menuItem1_DrawItem);`  \n  \n [!code-cs[OwnerDraw example#1](~/add/codesnippet/csharp/e-system.windows.forms.m_10_1.cs)]\n [!code-cpp[OwnerDraw example#1](~/add/codesnippet/cpp/e-system.windows.forms.m_10_1.cpp)]\n [!code-vb[OwnerDraw example#1](~/add/codesnippet/visualbasic/e-system.windows.forms.m_10_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DrawItemEventHandler DrawItem;
    return:
      type: System.Windows.Forms.DrawItemEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.Enabled
  id: Enabled
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: Enabled
  nameWithType: MenuItem.Enabled
  fullName: System.Windows.Forms.MenuItem.Enabled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "메뉴 항목을 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "A <xref:System.Windows.Forms.MenuItem>즉 사용 안 함 상태를 나타내기 위해 회색으로 표시 됩니다.</xref:System.Windows.Forms.MenuItem> 부모 메뉴 항목이 비활성화 되 면 모든 하위 메뉴 항목이 표시 되지 않습니다."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Popup> event to determine whether <xref:System.Windows.Forms.MenuItem> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown. The example determines if `textBox1`, a <xref:System.Windows.Forms.TextBox> control on the form, is enabled, has input focus, and has text selected before enabling the <xref:System.Windows.Forms.MenuItem> objects. This example requires that three <xref:System.Windows.Forms.MenuItem> objects are created named `menuCut`, `menuCopy`, and `menuDelete` have been created.  \n  \n [!code-cs[MenuItem.Popup#1](~/add/codesnippet/csharp/p-system.windows.forms.m_23_1.cs)]\n [!code-cpp[MenuItem.Popup#1](~/add/codesnippet/cpp/p-system.windows.forms.m_23_1.cpp)]\n [!code-vb[MenuItem.Popup#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_23_1.vb)]"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>메뉴 항목을 사용 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.MenuItem.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.Index
  id: Index
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: Index
  nameWithType: MenuItem.Index
  fullName: System.Windows.Forms.MenuItem.Index
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "부모 메뉴에서 메뉴 항목의 위치를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "이 속성은 부모 메뉴의 메뉴 항목 컬렉션의 메뉴 항목의 인덱싱된 위치를 제공합니다. 메뉴 내의 다른 위치에 메뉴 항목 위치를 변경 하려면이 속성을 사용할 수 있습니다. 만들 때에이 속성을 사용할 수 있습니다는 <xref:System.Windows.Forms.MenuItem>생성 시의 메뉴 구조에서의 위치를 지정할 수 있습니다.</xref:System.Windows.Forms.MenuItem>"
  example:
  - "The following code example switches the position of two menu items in a menu. The following code example requires that two <xref:System.Windows.Forms.MenuItem> objects are created named `menuItem1` and `menuItem2`. The `menuItem1` menu item moves down one position in the menu, while `menuItem2` moves up one position.  \n  \n [!code-cpp[Classic MenuItem.Index Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_27_1.cpp)]\n [!code-cs[Classic MenuItem.Index Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_27_1.cs)]\n [!code-vb[Classic MenuItem.Index Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_27_1.vb)]"
  syntax:
    content: public int Index { get; set; }
    return:
      type: System.Int32
      description: "부모 메뉴에 메뉴 항목의 위치를 나타내는&0;부터 시작 하는 인덱스입니다."
  overload: System.Windows.Forms.MenuItem.Index*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "할당 된 값은&0; 보다 작거나 항목 개수 보다 큽니다."
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.IsParent
  id: IsParent
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: IsParent
  nameWithType: MenuItem.IsParent
  fullName: System.Windows.Forms.MenuItem.IsParent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "메뉴 항목에 자식 메뉴 항목이 포함 되어 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "이 속성을 사용할 수는 <xref:System.Windows.Forms.MenuItem.Parent%2A>속성 전체 메뉴 구조를 통해 코드를 탐색할 수 있습니다.</xref:System.Windows.Forms.MenuItem.Parent%2A>"
  example:
  - "The following code example determines whether there are any submenus associated with a <xref:System.Windows.Forms.MenuItem> named `menuItem1`. If any submenus exist, it disables them by setting the <xref:System.Windows.Forms.MenuItem.Enabled%2A> property to `false`. The example requires that there is a <xref:System.Windows.Forms.MenuItem> created named `menuItem1`.  \n  \n [!code-cs[Classic MenuItem.IsParent Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_17_1.cs)]\n [!code-cpp[Classic MenuItem.IsParent Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_17_1.cpp)]\n [!code-vb[Classic MenuItem.IsParent Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_17_1.vb)]"
  syntax:
    content: public override bool IsParent { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>메뉴 항목에 자식 메뉴 항목이; 포함 된 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 메뉴가 있는 경우 독립 실행형 메뉴 항목입니다."
  overload: System.Windows.Forms.MenuItem.IsParent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.MdiList
  id: MdiList
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: MdiList
  nameWithType: MenuItem.MdiList
  fullName: System.Windows.Forms.MenuItem.MdiList
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "메뉴 항목이 관련된 폼 내에서 표시 되는 문서 MDI (다중 인터페이스) 자식 창의 목록으로 채워집니다 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "MDI 자식 창 목록을 표시 하려면 메뉴 항목을 선택 하면 목록 메뉴 항목의 하위도 표시 됩니다. MDI 자식 폼으로 정의 된 양식에 창 목록에 표시 됩니다. 한 번에&9; 개의 자식 창은 표시할 수 있습니다. 있는 경우 표시 되는&10; 개 이상 자식 창, 창 목록의 끝에 &quot;기타 창...&quot; 메뉴 항목 표시 됩니다. 이 메뉴 항목을 클릭 하면 현재 활성화 되어 있는 자식 창의 전체 목록이 있는 대화 상자가 표시 됩니다."
  example:
  - "The following code example creates a <xref:System.Windows.Forms.MenuItem> that is used to display the list of currently open MDI child forms in an MDI form.  \n  \n [!code-cs[Classic MenuItem.MdiList Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_41_1.cs)]\n [!code-cpp[Classic MenuItem.MdiList Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_41_1.cpp)]\n [!code-vb[Classic MenuItem.MdiList Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_41_1.vb)]"
  syntax:
    content: public bool MdiList { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>MDI 자식 창의 목록을;이 메뉴 항목에 표시 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.MenuItem.MdiList*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.MeasureItem
  id: MeasureItem
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: MeasureItem
  nameWithType: MenuItem.MeasureItem
  fullName: System.Windows.Forms.MenuItem.MeasureItem
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "그리기 전에 메뉴 항목의 크기를 알아야 할 때 발생 합니다."
  remarks: "이 이벤트를 발생에 대 한 순서로 있어야는 <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A>메뉴 항목의 속성이로 설정 `true`.</xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> 이 이벤트는 소유자 그리기 메뉴는 메뉴 항목의 크기 지정에 그려질 수 있도록 그리기 전에 발생 합니다. 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MeasureItem event. This report helps you to learn when the event occurs and can assist you in debugging.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.MenuItem> named `MenuItem1`. Then ensure that the event handler is associated with the MeasureItem event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#499](~/add/codesnippet/csharp/e-system.windows.forms.m_11_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#499](~/add/codesnippet/visualbasic/e-system.windows.forms.m_11_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.MeasureItemEventHandler MeasureItem;
    return:
      type: System.Windows.Forms.MeasureItemEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.MenuID
  id: MenuID
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: MenuID
  nameWithType: MenuItem.MenuID
  fullName: System.Windows.Forms.MenuItem.MenuID
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 메뉴 항목에 대 한 Windows 식별자를 나타내는 값을 가져옵니다."
  syntax:
    content: protected int MenuID { get; }
    return:
      type: System.Int32
      description: "이 메뉴 항목에 대 한 Windows 식별자입니다."
  overload: System.Windows.Forms.MenuItem.MenuID*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.MergeMenu
  id: MergeMenu
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: MergeMenu()
  nameWithType: MenuItem.MergeMenu()
  fullName: System.Windows.Forms.MenuItem.MergeMenu()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 병합 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> 다른 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> 결과 병합 된 반환 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref>합니다."
  remarks: "이 버전의 MergeMenu 호출 하는 경우는 <xref:System.Windows.Forms.MenuItem>은 현재 메뉴 항목 병합 될 수 있는 현재 항목의 기능에 영향을 주지 않고 다른 메뉴 항목과 복사본을 반환 합니다.</xref:System.Windows.Forms.MenuItem> 이 버전의 MergeMenu 메서드 호출에 비슷합니다.는 <xref:System.Windows.Forms.MenuItem.CloneMenu%2A>매개 변수를 포함 하는 메서드입니다.</xref:System.Windows.Forms.MenuItem.CloneMenu%2A>"
  syntax:
    content: public virtual System.Windows.Forms.MenuItem MergeMenu ();
    parameters: []
    return:
      type: System.Windows.Forms.MenuItem
      description: "A <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> 병합된 된 메뉴 항목을 나타내는입니다."
  overload: System.Windows.Forms.MenuItem.MergeMenu*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)
  id: MergeMenu(System.Windows.Forms.MenuItem)
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: MergeMenu(MenuItem)
  nameWithType: MenuItem.MergeMenu(MenuItem)
  fullName: System.Windows.Forms.MenuItem.MergeMenu(MenuItem)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 메뉴 항목과 다른 메뉴 항목을 병합 합니다."
  remarks: "메뉴 항목의 메뉴 항목의 값에 따라 병합 됩니다 <xref:System.Windows.Forms.MenuItem.MergeType%2A>및 <xref:System.Windows.Forms.MenuItem.MergeOrder%2A>속성.</xref:System.Windows.Forms.MenuItem.MergeOrder%2A> </xref:System.Windows.Forms.MenuItem.MergeType%2A> 이 버전의는 <xref:System.Windows.Forms.MenuItem.MergeMenu%2A>메서드 두 병합 하면 <xref:System.Windows.Forms.MenuItem>개체 (및 해당 하위 메뉴)를 단일 메뉴로.</xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.MenuItem.MergeMenu%2A> 메뉴 병합은 인터페이스 MDI (다중 문서) 부모 폼과 자식 메뉴를 포함 하는 경우 자동으로 처리 됩니다. 이 버전의 메서드를 사용 하 여 병합할 두 개의 <xref:System.Windows.Forms.MenuItem> <xref:System.Windows.Forms.MainMenu>에 <xref:System.Windows.Forms.ContextMenu>.</xref:System.Windows.Forms.ContextMenu> 내에서 단일 메뉴에 컨트롤</xref:System.Windows.Forms.MainMenu> 에 있는 개체 (및 해당 하위 메뉴 항목)</xref:System.Windows.Forms.MenuItem> 예를 들어이 버전의 <xref:System.Windows.Forms.MenuItem.MergeMenu%2A>단일에 <xref:System.Windows.Forms.MenuItem>다음에 추가 및 표시 될 수 <xref:System.Windows.Forms.ContextMenu>.</xref:System.Windows.Forms.ContextMenu> </xref:System.Windows.Forms.MenuItem> 파일 및 편집 메뉴의 메뉴 항목을 병합 하는 메서드</xref:System.Windows.Forms.MenuItem.MergeMenu%2A> 를 호출할 수 있습니다."
  example:
  - "The following code example uses this version of the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method to create a copy of a <xref:System.Windows.Forms.MenuItem> and merge it with another. The merged <xref:System.Windows.Forms.MenuItem> is then added to a <xref:System.Windows.Forms.ContextMenu> control. This example requires that there are two menu items called `menuItem1` and `menuItem2` that contain submenu items within them and a <xref:System.Windows.Forms.ContextMenu> named `contextMenu1` to display the menu items. `menuItem1` and `menuItem2` have different menu items contained within them. After the call to <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> is made, a consolidated menu is created.  \n  \n [!code-vb[Classic MenuItem.MergeMenu1 Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_12_1.vb)]\n [!code-cpp[Classic MenuItem.MergeMenu1 Example#1](~/add/codesnippet/cpp/m-system.windows.forms.m_12_1.cpp)]\n [!code-cs[Classic MenuItem.MergeMenu1 Example#1](~/add/codesnippet/csharp/m-system.windows.forms.m_12_1.cs)]"
  syntax:
    content: public void MergeMenu (System.Windows.Forms.MenuItem itemSrc);
    parameters:
    - id: itemSrc
      type: System.Windows.Forms.MenuItem
      description: "A <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> 이것과 병합 메뉴 항목을 지정 하는 합니다."
  overload: System.Windows.Forms.MenuItem.MergeMenu*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.MergeOrder
  id: MergeOrder
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: MergeOrder
  nameWithType: MenuItem.MergeOrder
  fullName: System.Windows.Forms.MenuItem.MergeOrder
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "다른 항목과 병합 될 때 메뉴 항목의 상대 위치를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "이 메뉴 항목의 메뉴 구조 하는 경우 수행 하는 상대 위치를 지정 하는 메뉴 항목의 병합 순서는 <xref:System.Windows.Forms.MenuItem>포함 된 다른 항목과 병합 될.</xref:System.Windows.Forms.MenuItem>"
  example:
  - "The following code example demonstrates using the MergeOrder property to control the way a merged menu is displayed. This is a complete example, ready to run once you add it to your project.  \n  \n [!code-cs[System.Windows.Forms.MenuItemMergeOrder#1](~/add/codesnippet/csharp/p-system.windows.forms.m_47_1.cs)]\n [!code-cpp[System.Windows.Forms.MenuItemMergeOrder#1](~/add/codesnippet/cpp/p-system.windows.forms.m_47_1.cpp)]\n [!code-vb[System.Windows.Forms.MenuItemMergeOrder#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_47_1.vb)]"
  syntax:
    content: public int MergeOrder { get; set; }
    return:
      type: System.Int32
      description: "이 메뉴 항목의 병합 순서 위치를 나타내는&0;부터 시작 인덱스입니다. 기본값은 0입니다."
  overload: System.Windows.Forms.MenuItem.MergeOrder*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.MergeType
  id: MergeType
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: MergeType
  nameWithType: MenuItem.MergeType
  fullName: System.Windows.Forms.MenuItem.MergeType
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "메뉴의 다른 항목과 병합 될 때이 메뉴 항목의 동작을 나타내는 값을 가져오거나 설정 합니다."
  remarks: "메뉴 항목의 병합 유형 메뉴 항목 병합 순서와 병합 하는 다른 메뉴 항목에 있을 때 동작 하는 방식을 나타냅니다. 두 개 이상의 기존 메뉴에 따라 통합된 메뉴를 만들려면 병합 된 메뉴를 사용할 수 있습니다."
  example:
  - "The following code example creates a <xref:System.Windows.Forms.MenuItem> with the MergeType and <xref:System.Windows.Forms.MenuItem.MergeOrder%2A> specified so that the menu item is added to the merged menu at first position.  \n  \n [!code-cpp[Classic MenuItem.MergeType Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_8_1.cpp)]\n [!code-cs[Classic MenuItem.MergeType Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_8_1.cs)]\n [!code-vb[Classic MenuItem.MergeType Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_8_1.vb)]"
  syntax:
    content: public System.Windows.Forms.MenuMerge MergeType { get; set; }
    return:
      type: System.Windows.Forms.MenuMerge
      description: "A <xref href=&quot;System.Windows.Forms.MenuMerge&quot;> </xref> 메뉴 항목의 종류를 나타내는 값입니다."
  overload: System.Windows.Forms.MenuItem.MergeType*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "할당 된 값 중 하나이 고 <xref href=&quot;System.Windows.Forms.MenuMerge&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.Mnemonic
  id: Mnemonic
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: Mnemonic
  nameWithType: MenuItem.Mnemonic
  fullName: System.Windows.Forms.MenuItem.Mnemonic
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 메뉴 항목과 연결 된 니모닉 문자를 나타내는 값을 가져옵니다."
  remarks: "니모닉 문자는 첫 번째 문자 <xref:System.Windows.Forms.MenuItem>.</xref:System.Windows.Forms.MenuItem> 텍스트에 앰퍼샌드 문자 (&) 한 후 이 속성의 텍스트에 앰퍼샌드를 표시 하는 경우 앰퍼샌드가 사용 되 고 두 개의 앰퍼샌드 문자 함께 배치 된 경우 니모닉을 반환 하지 것입니다는 <xref:System.Windows.Forms.MenuItem>니모닉 문자를 정의 하는 대신.</xref:System.Windows.Forms.MenuItem>"
  syntax:
    content: public char Mnemonic { get; }
    return:
      type: System.Char
      description: "이 메뉴 항목과 연결 된 니모닉 문자를 나타내는 문자입니다. NUL 문자 (ASCII 값 0)의 텍스트에 없는 니모닉 문자를 지정 하는 경우 반환 된 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref>합니다."
  overload: System.Windows.Forms.MenuItem.Mnemonic*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.OnClick(System.EventArgs)
  id: OnClick(System.EventArgs)
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: OnClick(EventArgs)
  nameWithType: MenuItem.OnClick(EventArgs)
  fullName: System.Windows.Forms.MenuItem.OnClick(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.MenuItem.Click&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Click> event to perform tasks when a <xref:System.Windows.Forms.MenuItem> is clicked. The example creates a <xref:System.Windows.Forms.MainMenu> called `mainMenu1` and adds two <xref:System.Windows.Forms.MenuItem> objects, `topMenuItem` (`File`) and `menuItem1` (`Open`). It then connects the `Click` event to the `menuItem1_Click` event handler. When the user clicks the `Open` menu item, an <xref:System.Windows.Forms.OpenFileDialog> is initialized and displayed. The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[MenuItemClick#1](~/add/codesnippet/csharp/m-system.windows.forms.m_3_1.cs)]\n [!code-cpp[MenuItemClick#1](~/add/codesnippet/cpp/m-system.windows.forms.m_3_1.cpp)]\n [!code-vb[MenuItemClick#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_3_1.vb)]"
  syntax:
    content: protected virtual void OnClick (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.MenuItem.OnClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  id: OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: OnDrawItem(DrawItemEventArgs)
  nameWithType: MenuItem.OnDrawItem(DrawItemEventArgs)
  fullName: System.Windows.Forms.MenuItem.OnDrawItem(DrawItemEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.MenuItem.DrawItem&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: protected virtual void OnDrawItem (System.Windows.Forms.DrawItemEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DrawItemEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DrawItemEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.MenuItem.OnDrawItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.OnInitMenuPopup(System.EventArgs)
  id: OnInitMenuPopup(System.EventArgs)
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: OnInitMenuPopup(EventArgs)
  nameWithType: MenuItem.OnInitMenuPopup(EventArgs)
  fullName: System.Windows.Forms.MenuItem.OnInitMenuPopup(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.MenuItem.Popup&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected virtual void OnInitMenuPopup (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.MenuItem.OnInitMenuPopup*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)
  id: OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: OnMeasureItem(MeasureItemEventArgs)
  nameWithType: MenuItem.OnMeasureItem(MeasureItemEventArgs)
  fullName: System.Windows.Forms.MenuItem.OnMeasureItem(MeasureItemEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.MenuItem.MeasureItem&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: protected virtual void OnMeasureItem (System.Windows.Forms.MeasureItemEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.MeasureItemEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.MeasureItemEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.MenuItem.OnMeasureItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)
  id: OnPopup(System.EventArgs)
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: OnPopup(EventArgs)
  nameWithType: MenuItem.OnPopup(EventArgs)
  fullName: System.Windows.Forms.MenuItem.OnPopup(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.MenuItem.Popup&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Popup> event to determine whether <xref:System.Windows.Forms.MenuItem> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown. The example determines if `textBox1`, a <xref:System.Windows.Forms.TextBox> control on the form, is enabled, has input focus, and has text selected before enabling the <xref:System.Windows.Forms.MenuItem> objects. This example requires that three <xref:System.Windows.Forms.MenuItem> objects are created named `menuCut`, `menuCopy`, and `menuDelete` have been created.  \n  \n [!code-cs[MenuItem.Popup#1](~/add/codesnippet/csharp/m-system.windows.forms.m_25_1.cs)]\n [!code-cpp[MenuItem.Popup#1](~/add/codesnippet/cpp/m-system.windows.forms.m_25_1.cpp)]\n [!code-vb[MenuItem.Popup#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_25_1.vb)]"
  syntax:
    content: protected virtual void OnPopup (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.MenuItem.OnPopup*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)
  id: OnSelect(System.EventArgs)
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: OnSelect(EventArgs)
  nameWithType: MenuItem.OnSelect(EventArgs)
  fullName: System.Windows.Forms.MenuItem.OnSelect(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.MenuItem.Select&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Select> event of the <xref:System.Windows.Forms.MenuItem> class to assign help text to a <xref:System.Windows.Forms.StatusBarPanel> of a <xref:System.Windows.Forms.StatusBar> control. This example requires that <xref:System.Windows.Forms.MenuItem> objects named `menuOpen`, `menuSave`, and `menuExit` are added to a <xref:System.Windows.Forms.MainMenu> control on a form. The example also requires that a <xref:System.Windows.Forms.StatusBar> control, named `statusBar1` has been added to the form. The <xref:System.Windows.Forms.StatusBar> control should contain a <xref:System.Windows.Forms.StatusBarPanel>.  \n  \n [!code-vb[MenuItem.Select#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_19_1.vb)]\n [!code-cs[MenuItem.Select#1](~/add/codesnippet/csharp/m-system.windows.forms.m_19_1.cs)]\n [!code-cpp[MenuItem.Select#1](~/add/codesnippet/cpp/m-system.windows.forms.m_19_1.cpp)]"
  syntax:
    content: protected virtual void OnSelect (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.MenuItem.OnSelect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.OwnerDraw
  id: OwnerDraw
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: OwnerDraw
  nameWithType: MenuItem.OwnerDraw
  fullName: System.Windows.Forms.MenuItem.OwnerDraw
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "사용자가 제공한 코드 항목을 그리는지 또는 Windows 항목을 그리는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "OwnerDraw 속성이로 설정 되 면 `true`, 메뉴 항목의 모든 그리기를 처리 해야 합니다. 사용자 고유의 특별 한 메뉴 표시를 만들려면이 기능을 사용할 수 있습니다."
  example:
  - "The following code example demonstrates a menu with an owner-drawn menu item. This example set the OwnerDraw property and uses the `AddHandler` statement and the `AddressOf` operator to designate a delegate to handle the <xref:System.Windows.Forms.MenuItem.DrawItem> event. To run the example, paste it in a form that imports the <xref:System>, <xref:System.Windows.Forms>, and <xref:System.Drawing> namespaces. Call `InitializeMenu` from the form's constructor or `Load` method.  \n  \n [!code-cs[System.Windows.Forms.MenuItemOwnerDraw#1](~/add/codesnippet/csharp/p-system.windows.forms.m_22_1.cs)]\n [!code-cpp[System.Windows.Forms.MenuItemOwnerDraw#1](~/add/codesnippet/cpp/p-system.windows.forms.m_22_1.cpp)]\n [!code-vb[System.Windows.Forms.MenuItemOwnerDraw#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_22_1.vb)]"
  syntax:
    content: public bool OwnerDraw { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>메뉴 항목이; 코드를 사용 하 여 그릴 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 해당 메뉴 항목은 Windows에서 그릴 경우. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.MenuItem.OwnerDraw*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.Parent
  id: Parent
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: Parent
  nameWithType: MenuItem.Parent
  fullName: System.Windows.Forms.MenuItem.Parent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 메뉴 항목을 포함 하는 메뉴를 나타내는 값을 가져옵니다."
  remarks: "이 속성을 사용 하 여 가져올는 <xref:System.Windows.Forms.Menu>하위 메뉴에 대 한 개체입니다.</xref:System.Windows.Forms.Menu> <xref:System.Windows.Forms.Menu> <xref:System.Windows.Forms.MenuItem>개체를 조작 합니다.가</xref:System.Windows.Forms.MenuItem> 이 속성에서 반환 된 개체</xref:System.Windows.Forms.Menu> 를 캐스팅할 수 있습니다."
  example:
  - "In this example, you create a main menu and a top-level menu item, `menuItem1` (`File`). You also create two menu items, `menuItem2` (`New`) and `menuItem3` (`Open`), and add them to the menu item list of `menuItem1`. Then you check to see if `menuItem3` has got a parent menu, which is true, and display the information of this parent menu in message box. This example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[ParentMenu#1](~/add/codesnippet/csharp/p-system.windows.forms.m_25_1.cs)]\n [!code-cpp[ParentMenu#1](~/add/codesnippet/cpp/p-system.windows.forms.m_25_1.cpp)]\n [!code-vb[ParentMenu#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_25_1.vb)]"
  syntax:
    content: public System.Windows.Forms.Menu Parent { get; }
    return:
      type: System.Windows.Forms.Menu
      description: "A <xref href=&quot;System.Windows.Forms.Menu&quot;> </xref> 이 메뉴 항목을 포함 하는 메뉴를 나타내는입니다."
  overload: System.Windows.Forms.MenuItem.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.PerformClick
  id: PerformClick
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: PerformClick()
  nameWithType: MenuItem.PerformClick()
  fullName: System.Windows.Forms.MenuItem.PerformClick()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "생성 한 <xref href=&quot;System.Windows.Forms.Control.Click&quot;> </xref> 에 대 한 이벤트는 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref>, 사용자가 한 번의 클릭을 시뮬레이션 합니다."
  remarks: "이벤트 정보를 전달 하지 않고 코드를 통해 메뉴 항목을 활성화 하려면이 메뉴를 사용할 수 있습니다. 예를 들어 응용 프로그램에서 발생 하는 동작에 따라 메뉴 항목을 활성화 하려는 경우 호출할 수 있습니다 PerformClick 메서드 <xref:System.Windows.Forms.MenuItem>.</xref:System.Windows.Forms.MenuItem>"
  example:
  - "In this example you programmatically click a menu item by using the `PerformClick` method. First, you create a main menu (`mainMenu1`) and add to it two menu items, `menuItem1` (`File`) and `menuItem2` (`Edit`). You also use the <xref:System.Windows.Forms.MenuItem.Click> event to send data to the event handler when a menu item is clicked. Then you use the `PerformClick` method to click the `File` menu item. When you start the application, the `File` menu item is activated, and a message box that contains the text \"The File menu is clicked.\" appears on the screen. The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[PerformClick#1](~/add/codesnippet/cpp/m-system.windows.forms.m_0_1.cpp)]\n [!code-cs[PerformClick#1](~/add/codesnippet/csharp/m-system.windows.forms.m_0_1.cs)]\n [!code-vb[PerformClick#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_0_1.vb)]"
  syntax:
    content: public void PerformClick ();
    parameters: []
  overload: System.Windows.Forms.MenuItem.PerformClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.PerformSelect
  id: PerformSelect
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: PerformSelect()
  nameWithType: MenuItem.PerformSelect()
  fullName: System.Windows.Forms.MenuItem.PerformSelect()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.MenuItem.Select&quot;> </xref> 이 메뉴 항목에 대 한 이벤트입니다."
  remarks: "이 메서드를 사용 하면 늘릴 수 있습니다는 <xref:System.Windows.Forms.MenuItem.Select>이벤트의 이벤트 처리기에 이벤트 정보를 전달 하지 않고.</xref:System.Windows.Forms.MenuItem.Select>"
  example:
  - "In this example you programmatically select a menu item by using the `PerformSelect` method. First, you create a main menu (`mainMenu1`) and add to it two menu items, `menuItem1` (`File`) and `menuItem2` (`Edit`). You also use the <xref:System.Windows.Forms.MenuItem.Select> event to send data to the event handler when a menu item is selected. Then you use the `PerformSelect` method to select the `File` menu item. When you start the application, the `File` menu item is selected, and a message box that contains the text \"The File menu is selected.\" appears on the screen. The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[PerformSelect#1](~/add/codesnippet/cpp/m-system.windows.forms.m_16_1.cpp)]\n [!code-cs[PerformSelect#1](~/add/codesnippet/csharp/m-system.windows.forms.m_16_1.cs)]\n [!code-vb[PerformSelect#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_16_1.vb)]"
  syntax:
    content: public virtual void PerformSelect ();
    parameters: []
  overload: System.Windows.Forms.MenuItem.PerformSelect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.Popup
  id: Popup
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: Popup
  nameWithType: MenuItem.Popup
  fullName: System.Windows.Forms.MenuItem.Popup
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "메뉴 항목의 메뉴 항목의 목록이 표시 되기 전에 발생 합니다."
  remarks: "이 이벤트는 메뉴 항목에 하위 메뉴 항목 표시 하는 경우에 발생 합니다. 이 이벤트 처리기를 사용 하 여 추가, 제거, 사용, 사용 안 함, 확인 또는 표시 되기 전에 응용 프로그램의 상태에 따라 메뉴 항목을 선택 취소 합니다. 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to use the Popup event to determine whether <xref:System.Windows.Forms.MenuItem> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown. The example determines if `textBox1`, a <xref:System.Windows.Forms.TextBox> control on the form, is enabled, has input focus, and has text selected before enabling the <xref:System.Windows.Forms.MenuItem> objects. This example requires that three <xref:System.Windows.Forms.MenuItem> objects are created named `menuCut`, `menuCopy`, and `menuDelete` have been created.  \n  \n [!code-cs[MenuItem.Popup#1](~/add/codesnippet/csharp/e-system.windows.forms.m_8_1.cs)]\n [!code-cpp[MenuItem.Popup#1](~/add/codesnippet/cpp/e-system.windows.forms.m_8_1.cpp)]\n [!code-vb[MenuItem.Popup#1](~/add/codesnippet/visualbasic/e-system.windows.forms.m_8_1.vb)]"
  syntax:
    content: public event EventHandler Popup;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.RadioCheck
  id: RadioCheck
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: RadioCheck
  nameWithType: MenuItem.RadioCheck
  fullName: System.Windows.Forms.MenuItem.RadioCheck
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "나타내는 값을 가져오거나 여부는 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref>옵션을 선택 하는 경우 확인 표시가 대신 라디오 단추를 표시 합니다."
  remarks: "확인 표시가 있는 메뉴 항목 그룹에 대 한 상호 배타적인 상태 반드시 의미 하지는 않습니다. 메뉴 항목의 확인 표시는 함께 사용할 수 없는 사용자에 게 나타내기 위해이 속성을 사용할 수 있습니다."
  example:
  - "The following code example uses the <xref:System.Windows.Forms.MenuItem.Checked%2A> property to change the state of an application. In the example, a group of menu items are provided that are used to specify the color for the text in an <xref:System.Windows.Forms.TextBox> control. In the example, the event handler provided is used by the <xref:System.Windows.Forms.MenuItem.Click> event of the three menu items. Each menu item specifies a color, `menuItemRed`, `menuItemGreen`, or `menuItemBlue`. The event handler determines which menu item was clicked, places a checkmark to the selected menu item, and changes the text color of the form's <xref:System.Windows.Forms.TextBox> control, named `textBox1`. The example also uses the RadioCheck property to demonstrate how a radio-button check is used to show menu items that are mutually exclusive. This example requires that the <xref:System.Drawing?displayProperty=fullName> namespace has been added to the form that contains this code.  \n  \n [!code-cs[Classic MenuItem.RadioCheck Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_14_1.cs)]\n [!code-vb[Classic MenuItem.RadioCheck Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_14_1.vb)]\n [!code-cpp[Classic MenuItem.RadioCheck Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_14_1.cpp)]"
  syntax:
    content: public bool RadioCheck { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>라디오 단추가 확인 표시; 대신 사용할 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 표준 확인 표시는 메뉴 항목을 선택할 때 표시 될 경우. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.MenuItem.RadioCheck*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.Select
  id: Select
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: Select
  nameWithType: MenuItem.Select
  fullName: System.Windows.Forms.MenuItem.Select
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "메뉴 항목 위에 포인터를 놓으면 발생 합니다."
  remarks: "이 이벤트는 일반적으로 메뉴 항목 위로 마우스 포인터를 놓으면 발생 됩니다. 또한 메뉴 항목으로 화살표 키를 가진 스크롤하면 키보드를 사용 하 여 메뉴 항목을 강조 표시할 때이 이벤트가 발생 합니다. 응용 프로그램의 상태 표시줄에서이 메뉴 항목에 대 한 자세한 도움말 문자열을 표시 하려면이 이벤트를 사용할 수 있습니다. 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > 경우는 <xref:System.Windows.Forms.Menu.MenuItems%2A>속성에 대 한는 <xref:System.Windows.Forms.MenuItem>모든 항목이 포함 된이 이벤트가 발생 하지 않습니다.</xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.Menu.MenuItems%2A> 부모 메뉴 항목에 대해서는이 이벤트가 발생 하지 않습니다."
  example:
  - "The following code example demonstrates how to use the Select event of the <xref:System.Windows.Forms.MenuItem> class to assign help text to a <xref:System.Windows.Forms.StatusBarPanel> of a <xref:System.Windows.Forms.StatusBar> control. This example requires that <xref:System.Windows.Forms.MenuItem> objects named `menuOpen`, `menuSave`, and `menuExit` are added to a <xref:System.Windows.Forms.MainMenu> control on a form. The example also requires that a <xref:System.Windows.Forms.StatusBar> control, named `statusBar1` has been added to the form. The <xref:System.Windows.Forms.StatusBar> control should contain a <xref:System.Windows.Forms.StatusBarPanel>.  \n  \n [!code-vb[MenuItem.Select#1](~/add/codesnippet/visualbasic/e-system.windows.forms.m_0_1.vb)]\n [!code-cs[MenuItem.Select#1](~/add/codesnippet/csharp/e-system.windows.forms.m_0_1.cs)]\n [!code-cpp[MenuItem.Select#1](~/add/codesnippet/cpp/e-system.windows.forms.m_0_1.cpp)]"
  syntax:
    content: public event EventHandler Select;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.Shortcut
  id: Shortcut
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: Shortcut
  nameWithType: MenuItem.Shortcut
  fullName: System.Windows.Forms.MenuItem.Shortcut
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "메뉴 항목과 연결 된 바로 가기 키를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "사용자가 자주 활성화에 대 한 메서드 마우스 또는 다른 포인터 장치에 대 한 액세스를 갖고 있지 않은 사용자에 대 한 응용 프로그램에 대 한 키보드 액세스를 제공 하 고 메뉴 시스템에서 메뉴 항목 사용 되는 바로 가기 키를 제공 합니다."
  example:
  - "The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item. The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.  \n  \n [!code-cs[Classic MenuItem.Text Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_39_1.cs)]\n [!code-cpp[Classic MenuItem.Text Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_39_1.cpp)]\n [!code-vb[Classic MenuItem.Text Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_39_1.vb)]"
  syntax:
    content: public System.Windows.Forms.Shortcut Shortcut { get; set; }
    return:
      type: System.Windows.Forms.Shortcut
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.Shortcut&quot;> </xref> 값입니다. 기본값은 <xref uid=&quot;langword_csharp_Shortcut.None&quot; name=&quot;Shortcut.None&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.MenuItem.Shortcut*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "할당 된 값 중 하나이 고 <xref href=&quot;System.Windows.Forms.Shortcut&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.ShowShortcut
  id: ShowShortcut
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: ShowShortcut
  nameWithType: MenuItem.ShowShortcut
  fullName: System.Windows.Forms.MenuItem.ShowShortcut
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "메뉴 항목과 연결 된 바로 가기 키 메뉴 항목 캡션 옆에 표시 되는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "사용자가 메뉴에서 옵션 메뉴 공간을 절약 하거나 바로 가기 키 표시 되지 않도록 숨기려면 수 있도록이 속성을 사용할 수 있습니다."
  example:
  - "The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item. The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.  \n  \n [!code-cs[Classic MenuItem.Text Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_30_1.cs)]\n [!code-cpp[Classic MenuItem.Text Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_30_1.cpp)]\n [!code-vb[Classic MenuItem.Text Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_30_1.vb)]"
  syntax:
    content: public bool ShowShortcut { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>바로 가기 키 조합을 메뉴 항목 캡션; 옆에 표시 되 면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 바로 가기 키 조합을 표시 되지 않습니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.MenuItem.ShowShortcut*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.Text
  id: Text
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: Text
  nameWithType: MenuItem.Text
  fullName: System.Windows.Forms.MenuItem.Text
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "메뉴 항목의 캡션을 나타내는 값을 가져오거나 설정 합니다."
  remarks: "메뉴 항목에 대 한 캡션을 지정 하는 경우에는 &quot;/ /&quot; 선택 키로 사용할 문자의 앞에 배치 하 여 액세스 키를 지정할 수 있습니다. 예를 들어 &quot;File&quot;의 &quot;F&quot;가 선택 키를 지정 하려면 있습니다 것으로 메뉴 항목에 대 한 캡션을 지정 &quot;/ / 파일&quot;입니다. 메뉴에 대 한 키보드 탐색을 제공 하려면이 기능을 사용할 수 있습니다.       이 속성을 &quot;`-`&quot; 표준 메뉴 항목 대신 구분 기호 (가로 선)으로 표시 될 메뉴 항목을 발생 합니다."
  example:
  - "The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item. The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.  \n  \n [!code-cs[Classic MenuItem.Text Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_56_1.cs)]\n [!code-cpp[Classic MenuItem.Text Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_56_1.cpp)]\n [!code-vb[Classic MenuItem.Text Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_56_1.vb)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "메뉴 항목의 텍스트 캡션입니다."
  overload: System.Windows.Forms.MenuItem.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.ToString
  id: ToString
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: ToString()
  nameWithType: MenuItem.ToString()
  fullName: System.Windows.Forms.MenuItem.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "나타내는 문자열을 반환 된 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref>합니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "현재 나타내는 string <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref>합니다. 이 문자열에는 형식 및 <xref:System.Windows.Forms.MenuItem.Text*>컨트롤의 속성입니다.</xref:System.Windows.Forms.MenuItem.Text*>"
  overload: System.Windows.Forms.MenuItem.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.Visible
  id: Visible
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: Visible
  nameWithType: MenuItem.Visible
  fullName: System.Windows.Forms.MenuItem.Visible
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "메뉴 항목 표시 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "메뉴를 병합 하거나 메뉴를 사용 하지 않도록 설정할 필요 없이 메뉴 구조를 수정 하려면이 속성을 사용할 수 있습니다. 예를 들어 응용 프로그램에 대 한 메뉴에서 기능의 전체 섹션 숨기려는 경우 숨길 수 있습니다 이러한 사용자 로부터이 속성을 설정 하 여 `false`합니다."
  example:
  - "The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item. The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.  \n  \n [!code-cs[Classic MenuItem.Text Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_51_1.cs)]\n [!code-cpp[Classic MenuItem.Text Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_51_1.cpp)]\n [!code-vb[Classic MenuItem.Text Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_51_1.vb)]"
  syntax:
    content: public bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>메뉴 항목 볼 수 있게 됩니다; 메뉴의 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.MenuItem.Visible*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.Menu
  isExternal: false
  name: System.Windows.Forms.Menu
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.Windows.Forms.MenuItem.#ctor
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MenuItem()
  nameWithType: MenuItem.MenuItem()
  fullName: System.Windows.Forms.MenuItem.MenuItem()
- uid: System.Windows.Forms.MenuItem.#ctor(System.String)
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MenuItem(String)
  nameWithType: MenuItem.MenuItem(String)
  fullName: System.Windows.Forms.MenuItem.MenuItem(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MenuItem(String,EventHandler)
  nameWithType: MenuItem.MenuItem(String,EventHandler)
  fullName: System.Windows.Forms.MenuItem.MenuItem(String,EventHandler)
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MenuItem(String,MenuItem[])
  nameWithType: MenuItem.MenuItem(String,MenuItem[])
  fullName: System.Windows.Forms.MenuItem.MenuItem(String,MenuItem[])
- uid: System.Windows.Forms.MenuItem[]
  parent: System.Windows.Forms
  isExternal: false
  name: MenuItem
  nameWithType: MenuItem
  fullName: System.Windows.Forms.MenuItem[]
  spec.csharp:
  - uid: System.Windows.Forms.MenuItem
    name: MenuItem
    nameWithType: MenuItem
    fullName: MenuItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MenuItem(String,EventHandler,Shortcut)
  nameWithType: MenuItem.MenuItem(String,EventHandler,Shortcut)
  fullName: System.Windows.Forms.MenuItem.MenuItem(String,EventHandler,Shortcut)
- uid: System.Windows.Forms.Shortcut
  parent: System.Windows.Forms
  isExternal: false
  name: Shortcut
  nameWithType: Shortcut
  fullName: System.Windows.Forms.Shortcut
- uid: System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MenuItem(MenuMerge,Int32,Shortcut,String,EventHandler,EventHandler,EventHandler,MenuItem[])
  nameWithType: MenuItem.MenuItem(MenuMerge,Int32,Shortcut,String,EventHandler,EventHandler,EventHandler,MenuItem[])
  fullName: System.Windows.Forms.MenuItem.MenuItem(MenuMerge,Int32,Shortcut,String,EventHandler,EventHandler,EventHandler,MenuItem[])
- uid: System.Windows.Forms.MenuMerge
  parent: System.Windows.Forms
  isExternal: false
  name: MenuMerge
  nameWithType: MenuMerge
  fullName: System.Windows.Forms.MenuMerge
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.MenuItem.BarBreak
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: BarBreak
  nameWithType: MenuItem.BarBreak
  fullName: System.Windows.Forms.MenuItem.BarBreak
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.MenuItem.Break
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Break
  nameWithType: MenuItem.Break
  fullName: System.Windows.Forms.MenuItem.Break
- uid: System.Windows.Forms.MenuItem.Checked
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Checked
  nameWithType: MenuItem.Checked
  fullName: System.Windows.Forms.MenuItem.Checked
- uid: System.Windows.Forms.MenuItem.Click
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Click
  nameWithType: MenuItem.Click
  fullName: System.Windows.Forms.MenuItem.Click
- uid: System.Windows.Forms.MenuItem.CloneMenu
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: CloneMenu()
  nameWithType: MenuItem.CloneMenu()
  fullName: System.Windows.Forms.MenuItem.CloneMenu()
- uid: System.Windows.Forms.MenuItem
  parent: System.Windows.Forms
  isExternal: false
  name: MenuItem
  nameWithType: MenuItem
  fullName: System.Windows.Forms.MenuItem
- uid: System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: CloneMenu(MenuItem)
  nameWithType: MenuItem.CloneMenu(MenuItem)
  fullName: System.Windows.Forms.MenuItem.CloneMenu(MenuItem)
- uid: System.Windows.Forms.MenuItem.DefaultItem
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: DefaultItem
  nameWithType: MenuItem.DefaultItem
  fullName: System.Windows.Forms.MenuItem.DefaultItem
- uid: System.Windows.Forms.MenuItem.Dispose(System.Boolean)
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: MenuItem.Dispose(Boolean)
  fullName: System.Windows.Forms.MenuItem.Dispose(Boolean)
- uid: System.Windows.Forms.MenuItem.DrawItem
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: DrawItem
  nameWithType: MenuItem.DrawItem
  fullName: System.Windows.Forms.MenuItem.DrawItem
- uid: System.Windows.Forms.DrawItemEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DrawItemEventHandler
  nameWithType: DrawItemEventHandler
  fullName: System.Windows.Forms.DrawItemEventHandler
- uid: System.Windows.Forms.MenuItem.Enabled
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Enabled
  nameWithType: MenuItem.Enabled
  fullName: System.Windows.Forms.MenuItem.Enabled
- uid: System.Windows.Forms.MenuItem.Index
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Index
  nameWithType: MenuItem.Index
  fullName: System.Windows.Forms.MenuItem.Index
- uid: System.Windows.Forms.MenuItem.IsParent
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: IsParent
  nameWithType: MenuItem.IsParent
  fullName: System.Windows.Forms.MenuItem.IsParent
- uid: System.Windows.Forms.MenuItem.MdiList
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MdiList
  nameWithType: MenuItem.MdiList
  fullName: System.Windows.Forms.MenuItem.MdiList
- uid: System.Windows.Forms.MenuItem.MeasureItem
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MeasureItem
  nameWithType: MenuItem.MeasureItem
  fullName: System.Windows.Forms.MenuItem.MeasureItem
- uid: System.Windows.Forms.MeasureItemEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: MeasureItemEventHandler
  nameWithType: MeasureItemEventHandler
  fullName: System.Windows.Forms.MeasureItemEventHandler
- uid: System.Windows.Forms.MenuItem.MenuID
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MenuID
  nameWithType: MenuItem.MenuID
  fullName: System.Windows.Forms.MenuItem.MenuID
- uid: System.Windows.Forms.MenuItem.MergeMenu
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MergeMenu()
  nameWithType: MenuItem.MergeMenu()
  fullName: System.Windows.Forms.MenuItem.MergeMenu()
- uid: System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MergeMenu(MenuItem)
  nameWithType: MenuItem.MergeMenu(MenuItem)
  fullName: System.Windows.Forms.MenuItem.MergeMenu(MenuItem)
- uid: System.Windows.Forms.MenuItem.MergeOrder
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MergeOrder
  nameWithType: MenuItem.MergeOrder
  fullName: System.Windows.Forms.MenuItem.MergeOrder
- uid: System.Windows.Forms.MenuItem.MergeType
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MergeType
  nameWithType: MenuItem.MergeType
  fullName: System.Windows.Forms.MenuItem.MergeType
- uid: System.Windows.Forms.MenuItem.Mnemonic
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Mnemonic
  nameWithType: MenuItem.Mnemonic
  fullName: System.Windows.Forms.MenuItem.Mnemonic
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Windows.Forms.MenuItem.OnClick(System.EventArgs)
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OnClick(EventArgs)
  nameWithType: MenuItem.OnClick(EventArgs)
  fullName: System.Windows.Forms.MenuItem.OnClick(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OnDrawItem(DrawItemEventArgs)
  nameWithType: MenuItem.OnDrawItem(DrawItemEventArgs)
  fullName: System.Windows.Forms.MenuItem.OnDrawItem(DrawItemEventArgs)
- uid: System.Windows.Forms.DrawItemEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DrawItemEventArgs
  nameWithType: DrawItemEventArgs
  fullName: System.Windows.Forms.DrawItemEventArgs
- uid: System.Windows.Forms.MenuItem.OnInitMenuPopup(System.EventArgs)
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OnInitMenuPopup(EventArgs)
  nameWithType: MenuItem.OnInitMenuPopup(EventArgs)
  fullName: System.Windows.Forms.MenuItem.OnInitMenuPopup(EventArgs)
- uid: System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OnMeasureItem(MeasureItemEventArgs)
  nameWithType: MenuItem.OnMeasureItem(MeasureItemEventArgs)
  fullName: System.Windows.Forms.MenuItem.OnMeasureItem(MeasureItemEventArgs)
- uid: System.Windows.Forms.MeasureItemEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: MeasureItemEventArgs
  nameWithType: MeasureItemEventArgs
  fullName: System.Windows.Forms.MeasureItemEventArgs
- uid: System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OnPopup(EventArgs)
  nameWithType: MenuItem.OnPopup(EventArgs)
  fullName: System.Windows.Forms.MenuItem.OnPopup(EventArgs)
- uid: System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OnSelect(EventArgs)
  nameWithType: MenuItem.OnSelect(EventArgs)
  fullName: System.Windows.Forms.MenuItem.OnSelect(EventArgs)
- uid: System.Windows.Forms.MenuItem.OwnerDraw
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OwnerDraw
  nameWithType: MenuItem.OwnerDraw
  fullName: System.Windows.Forms.MenuItem.OwnerDraw
- uid: System.Windows.Forms.MenuItem.Parent
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Parent
  nameWithType: MenuItem.Parent
  fullName: System.Windows.Forms.MenuItem.Parent
- uid: System.Windows.Forms.MenuItem.PerformClick
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: PerformClick()
  nameWithType: MenuItem.PerformClick()
  fullName: System.Windows.Forms.MenuItem.PerformClick()
- uid: System.Windows.Forms.MenuItem.PerformSelect
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: PerformSelect()
  nameWithType: MenuItem.PerformSelect()
  fullName: System.Windows.Forms.MenuItem.PerformSelect()
- uid: System.Windows.Forms.MenuItem.Popup
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Popup
  nameWithType: MenuItem.Popup
  fullName: System.Windows.Forms.MenuItem.Popup
- uid: System.Windows.Forms.MenuItem.RadioCheck
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: RadioCheck
  nameWithType: MenuItem.RadioCheck
  fullName: System.Windows.Forms.MenuItem.RadioCheck
- uid: System.Windows.Forms.MenuItem.Select
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Select
  nameWithType: MenuItem.Select
  fullName: System.Windows.Forms.MenuItem.Select
- uid: System.Windows.Forms.MenuItem.Shortcut
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Shortcut
  nameWithType: MenuItem.Shortcut
  fullName: System.Windows.Forms.MenuItem.Shortcut
- uid: System.Windows.Forms.MenuItem.ShowShortcut
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: ShowShortcut
  nameWithType: MenuItem.ShowShortcut
  fullName: System.Windows.Forms.MenuItem.ShowShortcut
- uid: System.Windows.Forms.MenuItem.Text
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Text
  nameWithType: MenuItem.Text
  fullName: System.Windows.Forms.MenuItem.Text
- uid: System.Windows.Forms.MenuItem.ToString
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: ToString()
  nameWithType: MenuItem.ToString()
  fullName: System.Windows.Forms.MenuItem.ToString()
- uid: System.Windows.Forms.MenuItem.Visible
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Visible
  nameWithType: MenuItem.Visible
  fullName: System.Windows.Forms.MenuItem.Visible
- uid: System.Windows.Forms.MenuItem.#ctor*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MenuItem
  nameWithType: MenuItem.MenuItem
- uid: System.Windows.Forms.MenuItem.BarBreak*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: BarBreak
  nameWithType: MenuItem.BarBreak
- uid: System.Windows.Forms.MenuItem.Break*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Break
  nameWithType: MenuItem.Break
- uid: System.Windows.Forms.MenuItem.Checked*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Checked
  nameWithType: MenuItem.Checked
- uid: System.Windows.Forms.MenuItem.CloneMenu*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: CloneMenu
  nameWithType: MenuItem.CloneMenu
- uid: System.Windows.Forms.MenuItem.DefaultItem*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: DefaultItem
  nameWithType: MenuItem.DefaultItem
- uid: System.Windows.Forms.MenuItem.Dispose*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Dispose
  nameWithType: MenuItem.Dispose
- uid: System.Windows.Forms.MenuItem.Enabled*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Enabled
  nameWithType: MenuItem.Enabled
- uid: System.Windows.Forms.MenuItem.Index*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Index
  nameWithType: MenuItem.Index
- uid: System.Windows.Forms.MenuItem.IsParent*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: IsParent
  nameWithType: MenuItem.IsParent
- uid: System.Windows.Forms.MenuItem.MdiList*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MdiList
  nameWithType: MenuItem.MdiList
- uid: System.Windows.Forms.MenuItem.MenuID*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MenuID
  nameWithType: MenuItem.MenuID
- uid: System.Windows.Forms.MenuItem.MergeMenu*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MergeMenu
  nameWithType: MenuItem.MergeMenu
- uid: System.Windows.Forms.MenuItem.MergeOrder*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MergeOrder
  nameWithType: MenuItem.MergeOrder
- uid: System.Windows.Forms.MenuItem.MergeType*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MergeType
  nameWithType: MenuItem.MergeType
- uid: System.Windows.Forms.MenuItem.Mnemonic*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Mnemonic
  nameWithType: MenuItem.Mnemonic
- uid: System.Windows.Forms.MenuItem.OnClick*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OnClick
  nameWithType: MenuItem.OnClick
- uid: System.Windows.Forms.MenuItem.OnDrawItem*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OnDrawItem
  nameWithType: MenuItem.OnDrawItem
- uid: System.Windows.Forms.MenuItem.OnInitMenuPopup*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OnInitMenuPopup
  nameWithType: MenuItem.OnInitMenuPopup
- uid: System.Windows.Forms.MenuItem.OnMeasureItem*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OnMeasureItem
  nameWithType: MenuItem.OnMeasureItem
- uid: System.Windows.Forms.MenuItem.OnPopup*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OnPopup
  nameWithType: MenuItem.OnPopup
- uid: System.Windows.Forms.MenuItem.OnSelect*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OnSelect
  nameWithType: MenuItem.OnSelect
- uid: System.Windows.Forms.MenuItem.OwnerDraw*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OwnerDraw
  nameWithType: MenuItem.OwnerDraw
- uid: System.Windows.Forms.MenuItem.Parent*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Parent
  nameWithType: MenuItem.Parent
- uid: System.Windows.Forms.MenuItem.PerformClick*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: PerformClick
  nameWithType: MenuItem.PerformClick
- uid: System.Windows.Forms.MenuItem.PerformSelect*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: PerformSelect
  nameWithType: MenuItem.PerformSelect
- uid: System.Windows.Forms.MenuItem.RadioCheck*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: RadioCheck
  nameWithType: MenuItem.RadioCheck
- uid: System.Windows.Forms.MenuItem.Shortcut*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Shortcut
  nameWithType: MenuItem.Shortcut
- uid: System.Windows.Forms.MenuItem.ShowShortcut*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: ShowShortcut
  nameWithType: MenuItem.ShowShortcut
- uid: System.Windows.Forms.MenuItem.Text*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Text
  nameWithType: MenuItem.Text
- uid: System.Windows.Forms.MenuItem.ToString*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: ToString
  nameWithType: MenuItem.ToString
- uid: System.Windows.Forms.MenuItem.Visible*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Visible
  nameWithType: MenuItem.Visible
