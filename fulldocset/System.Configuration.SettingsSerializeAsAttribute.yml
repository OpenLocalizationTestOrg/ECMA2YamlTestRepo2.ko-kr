### YamlMime:ManagedReference
items:
- uid: System.Configuration.SettingsSerializeAsAttribute
  id: SettingsSerializeAsAttribute
  children:
  - System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)
  - System.Configuration.SettingsSerializeAsAttribute.SerializeAs
  langs:
  - csharp
  name: SettingsSerializeAsAttribute
  nameWithType: SettingsSerializeAsAttribute
  fullName: System.Configuration.SettingsSerializeAsAttribute
  type: Class
  summary: "설정 공급자를 사용 해야 하는 serialization 메커니즘을 지정 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "종종 설정 공급자에서.NET Framework 표준 serialization 스키마 중 하나에 여러 개 지원합니다. 이러한 스키마에서 설명 된는 <xref:System.Configuration.SettingsSerializeAs>열거형, 일반 텍스트, XML 및 이진 serialization을 포함 합니다.</xref:System.Configuration.SettingsSerializeAs> 또한 공급자는 사용자 지정 직렬화 구성표를 필요에 따라 지원할 수 있습니다.       SettingsSerializeAsAttribute, 특정된 응용 프로그램 설정 클래스 또는 속성에 사용할 serialization 메커니즘을 사용 해야 지정할 수 있습니다. 이 특성에는 설정 공급자에 대 한 요청으로 간주 됩니다. 인스턴스가 무시 될 수 있거나 공급자 또는 개별 속성 형식이 지정된 된 serialization 체계를 지원 하지 않는 경우 오류가 발생 합니다. 이 특성이 없으면는 공급자 기본 serialization 메커니즘을 가장 일반적으로 일반 텍스트를 일반적으로 제공 합니다.       설정 공급자 런타임 중 serialization 메커니즘을 동적으로 변경 하는 방법을 제공할 수, 있지만 일반적인 기능은 아닙니다."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Property)]

      public sealed class SettingsSerializeAsAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)
  id: '#ctor(System.Configuration.SettingsSerializeAs)'
  parent: System.Configuration.SettingsSerializeAsAttribute
  langs:
  - csharp
  name: SettingsSerializeAsAttribute(SettingsSerializeAs)
  nameWithType: SettingsSerializeAsAttribute.SettingsSerializeAsAttribute(SettingsSerializeAs)
  fullName: System.Configuration.SettingsSerializeAsAttribute.SettingsSerializeAsAttribute(SettingsSerializeAs)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "인스턴스를 초기화는 <xref href=&quot;System.Configuration.SettingsSerializeAsAttribute&quot;> </xref> 클래스입니다."
  remarks: "설정 공급자 또는 속성의 형식을 변환할 수로 지정 된 serialization 체계를 지원 하지 않는 경우는 `serializeAs` 매개 변수를 미칠 수 있습니다 다음 결과 중 하나:-설정 공급자는 해당 특성이 무시 하 고 기본 serialization 스키마를 사용할 수 있습니다.      -Serialization 프로세스가 응답 하지 않고 실패할 수 있습니다. 응용 프로그램 설정 속성은 유지 되지 않습니다.      -예외는 직렬화 하는 동안 발생할 수 있습니다."
  syntax:
    content: public SettingsSerializeAsAttribute (System.Configuration.SettingsSerializeAs serializeAs);
    parameters:
    - id: serializeAs
      type: System.Configuration.SettingsSerializeAs
      description: "A <xref href=&quot;System.Configuration.SettingsSerializeAs&quot;> </xref> serialization 체계를 지정 하는 값을 열거 합니다."
  overload: System.Configuration.SettingsSerializeAsAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsSerializeAsAttribute.SerializeAs
  id: SerializeAs
  parent: System.Configuration.SettingsSerializeAsAttribute
  langs:
  - csharp
  name: SerializeAs
  nameWithType: SettingsSerializeAsAttribute.SerializeAs
  fullName: System.Configuration.SettingsSerializeAsAttribute.SerializeAs
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "가져옵니다는 <xref href=&quot;System.Configuration.SettingsSerializeAs&quot;> </xref> serialization 체계를 지정 하는 열거형 값입니다."
  remarks: "이 속성는 <xref:System.Configuration.SettingsSerializeAsAttribute.%23ctor%2A>생성자.</xref:System.Configuration.SettingsSerializeAsAttribute.%23ctor%2A>"
  syntax:
    content: public System.Configuration.SettingsSerializeAs SerializeAs { get; }
    return:
      type: System.Configuration.SettingsSerializeAs
      description: "A <xref href=&quot;System.Configuration.SettingsSerializeAs&quot;> </xref> serialization 체계를 지정 하는 값을 열거 합니다."
  overload: System.Configuration.SettingsSerializeAsAttribute.SerializeAs*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)
  parent: System.Configuration.SettingsSerializeAsAttribute
  isExternal: false
  name: SettingsSerializeAsAttribute(SettingsSerializeAs)
  nameWithType: SettingsSerializeAsAttribute.SettingsSerializeAsAttribute(SettingsSerializeAs)
  fullName: System.Configuration.SettingsSerializeAsAttribute.SettingsSerializeAsAttribute(SettingsSerializeAs)
- uid: System.Configuration.SettingsSerializeAs
  parent: System.Configuration
  isExternal: false
  name: SettingsSerializeAs
  nameWithType: SettingsSerializeAs
  fullName: System.Configuration.SettingsSerializeAs
- uid: System.Configuration.SettingsSerializeAsAttribute.SerializeAs
  parent: System.Configuration.SettingsSerializeAsAttribute
  isExternal: false
  name: SerializeAs
  nameWithType: SettingsSerializeAsAttribute.SerializeAs
  fullName: System.Configuration.SettingsSerializeAsAttribute.SerializeAs
- uid: System.Configuration.SettingsSerializeAsAttribute.#ctor*
  parent: System.Configuration.SettingsSerializeAsAttribute
  isExternal: false
  name: SettingsSerializeAsAttribute
  nameWithType: SettingsSerializeAsAttribute.SettingsSerializeAsAttribute
- uid: System.Configuration.SettingsSerializeAsAttribute.SerializeAs*
  parent: System.Configuration.SettingsSerializeAsAttribute
  isExternal: false
  name: SerializeAs
  nameWithType: SettingsSerializeAsAttribute.SerializeAs
