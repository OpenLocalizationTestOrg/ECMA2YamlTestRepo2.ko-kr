### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.IDataObject
  id: IDataObject
  children:
  - System.Windows.Forms.IDataObject.GetData(System.String)
  - System.Windows.Forms.IDataObject.GetData(System.Type)
  - System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  - System.Windows.Forms.IDataObject.GetFormats
  - System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  - System.Windows.Forms.IDataObject.SetData(System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  langs:
  - csharp
  name: IDataObject
  nameWithType: IDataObject
  fullName: System.Windows.Forms.IDataObject
  type: Interface
  summary: "데이터를 전송 하기 위한 형식 독립적 메커니즘을 제공 합니다."
  remarks: "`IDataObject` 인터페이스에서 사용 되는 <xref:System.Windows.Forms.Clipboard>클래스 및 끌어서 놓기 작업에서.</xref:System.Windows.Forms.Clipboard>       클래스에서 구현 하는 경우 IDataObject 메서드 클래스의 인스턴스에 대 한 여러 형식에 데이터를 저장할 수 있습니다. 여러 가지 형식에 데이터 저장을 사용 하면 모를 수도 형식 요구 사항을 대상 응용 프로그램에서 저장 된 데이터를 검색할 수 보장 합니다. IDataObject의 인스턴스로 데이터를 저장 하려면 호출 된 <xref:System.Windows.Forms.IDataObject.SetData%2A>메서드 데이터 형식을 지정 하 고는 `format` 매개 변수.</xref:System.Windows.Forms.IDataObject.SetData%2A> 설정의 `autoConvert` 매개 변수를 `false` 경우 원하지 않는 저장 된 데이터를 검색할 때는 다른 형식으로 변환 합니다. 호출 <xref:System.Windows.Forms.IDataObject.SetData%2A>여러 번에 하나의 인스턴스만 IDataObject 둘 이상의 형식에 데이터를 저장 합니다.</xref:System.Windows.Forms.IDataObject.SetData%2A>       호출 하 여 프로그램 IDataObject에서 저장 된 데이터를 검색할는 <xref:System.Windows.Forms.IDataObject.GetData%2A>에 서식을 메서드 및 데이터를 지정 하는 `format` 매개 변수.</xref:System.Windows.Forms.IDataObject.GetData%2A> 설정의 `autoConvert` 매개 변수를 `false` 만 지정된 된 형식으로 저장 된 데이터를 검색 합니다. 저장된 된 데이터를 지정 된 형식으로 변환 하려면 설정 `autoConvert` 를 `true`, 하거나 사용 하지 마십시오 `autoConvert`합니다.       IDataObject는에 저장 된 데이터의 서식을 확인 하려면 다음 IDataObject 방법을 사용 합니다.      -호출는 <xref:System.Windows.Forms.IDataObject.GetFormats%2A>데이터를 사용할 수 있는 모든 형식의 배열을 검색 하는 메서드입니다.</xref:System.Windows.Forms.IDataObject.GetFormats%2A> 설정의 `autoConvert` 매개 변수를 `false` 데이터가 저장 되는 형식만 얻으려고 합니다. 설정 데이터를 사용할 수 있는 모든 형식을 얻으려고 `autoConvert` 를 `true`, 또는이 매개 변수를 사용 하지 않습니다.      -호출 된 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>저장 된 데이터를 사용할 수 있는 특정 형식 인지 확인 하는 메서드.</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> 저장 된 데이터를 지정된 된 형식으로 변환 하지 않으려면 경우 설정의 `autoConvert` 매개 변수를 `false`합니다.       참조는 <xref:System.Windows.Forms.DataObject>이 인터페이스의 구현에 대 한 클래스입니다.</xref:System.Windows.Forms.DataObject> 참조는 <xref:System.Windows.Forms.DataFormats>미리 정의 된에 대 한 클래스 <xref:System.Windows.Forms.Clipboard>데이터 형식.</xref:System.Windows.Forms.Clipboard> </xref:System.Windows.Forms.DataFormats>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IDataObject
  implements: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.String)
  id: GetData(System.String)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(String)
  nameWithType: IDataObject.GetData(String)
  fullName: System.Windows.Forms.IDataObject.GetData(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 데이터 형식과 연관 된 데이터를 검색 합니다."
  remarks: "이 메서드는 지정 된 형식의 데이터를 찾을 수 없습니다, 데이터 형식으로 변환 하려고 합니다. 이 메서드가 반환 하는 경우 데이터 지정된 된 형식으로 변환할 수 없습니다, `null`합니다.       데이터 연결 된 하거나 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> 를 호출 하기 전에</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> 호출 된 형식으로 변환할 수 있는지 확인 하려면 호출 <xref:System.Windows.Forms.IDataObject.GetFormats%2A>이 인스턴스에 저장 된 데이터에 대 한 유효한 형식 목록은.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > 요청한 형식이 저장 된와 호환 되 면 및 변환이 가능 하도록 지정를 저장 한 경우 데이터가 다른 형식으로 변환 될 수 있습니다. 유니코드 텍스트로 변환할 수로 저장 된 데이터 예를 들어 있습니다.       이 메서드의 구현을 <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName> 을 참조 하십시오."
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject,` to demonstrate the use of the `GetData` method. The method is used to retrieve the data stored in `myDataObject`, which is associated with the `Text` format. The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.  \n  \n [!code-cpp[GetData1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_9_1.cpp)]\n [!code-cs[GetData1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_9_1.cs)]\n [!code-vb[GetData1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_9_1.vb)]"
  syntax:
    content: public object GetData (string format);
    parameters:
    - id: format
      type: System.String
      description: "검색할 데이터의 형식입니다. 참조 <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> 미리 정의 된 형식에 대 한 합니다."
    return:
      type: System.Object
      description: "지정된 된 형식으로 연관 된 데이터 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.Type)
  id: GetData(System.Type)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(Type)
  nameWithType: IDataObject.GetData(Type)
  fullName: System.Windows.Forms.IDataObject.GetData(Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정 된 클래스 형식과 관련 된 데이터를 검색 합니다."
  remarks: "이 메서드는 지정 된 형식의 데이터를 찾을 수 없습니다, 데이터 형식으로 변환 하려고 합니다. 이 메서드가 반환 하는 경우 데이터 지정된 된 형식으로 변환할 수 없습니다, `null`합니다.       데이터 연결 된 하거나 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> 를 호출 하기 전에</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> 호출 된 형식으로 변환할 수 있는지 확인 하려면 호출 <xref:System.Windows.Forms.IDataObject.GetFormats%2A>이 인스턴스에 저장 된 데이터에 대 한 유효한 형식 목록은.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > 요청한 형식이 저장 된와 호환 되 면 및 변환이 가능 하도록 지정를 저장 한 경우 데이터가 다른 형식으로 변환 될 수 있습니다. 유니코드 텍스트로 변환할 수로 저장 된 데이터 예를 들어 있습니다.       이 메서드의 구현을 <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName> 을 참조 하십시오."
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method. The method is used to retrieve the data stored in `myObject`, which is associated with a specific type, `myType`. The type of the retrieved data is displayed in a message box. The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[GetData2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_4_1.cpp)]\n [!code-cs[GetData2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_4_1.cs)]\n [!code-vb[GetData2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_4_1.vb)]"
  syntax:
    content: public object GetData (Type format);
    parameters:
    - id: format
      type: System.Type
      description: "A <xref:System.Type>검색할 데이터의 형식을 나타내는.</xref:System.Type> 참조 <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> 미리 정의 된 형식에 대 한 합니다."
    return:
      type: System.Object
      description: "지정된 된 형식으로 연관 된 데이터 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  id: GetData(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(String,Boolean)
  nameWithType: IDataObject.GetData(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetData(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "데이터 형식으로 변환할지 여부를 결정 하는 부울 값을 사용 하 여 지정 된 데이터 형식에 연결 된 데이터를 검색 합니다."
  remarks: "경우는 `autoConvert` 매개 변수는 `true` 이 메서드가 지정 된 형식의 데이터를 찾을 수 없습니다 및 데이터 형식으로 변환 하려고 시도 합니다. 지정된 된 형식으로 데이터를 변환할 수 없는 경우 또는 상태 데이터를 저장 하는 경우는 `autoConvert` 매개 변수 설정 `false`,이 메서드가 반환 `null`합니다.       경우는 `autoConvert` 매개 변수는 `false`,이 메서드는 지정 된 형식의 데이터를 반환 하거나 `null` 이 형식에 데이터가 없는 찾을 수 있는 합니다.       데이터 연결 된 형식으로 변환할 수 하는지 여부를 확인 하려면 호출 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>GetData 호출 하기 전에.</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> 호출 <xref:System.Windows.Forms.IDataObject.GetFormats%2A>이 인스턴스에 저장 된 데이터에 대 한 유효한 형식 목록은.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > 요청한 형식이 저장 된와 호환 되 면 및 변환이 가능 하도록 지정를 저장 한 경우 데이터가 다른 형식으로 변환 될 수 있습니다. 유니코드 텍스트로 변환할 수로 저장 된 데이터 예를 들어 있습니다.       이 메서드의 구현을 <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName> 을 참조 하십시오."
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method. The example retrieves the data stored in a `DataObject`, using the `autoConvert` parameter to specify whether or not to convert the data format. First, `myDataObject` is created with text data. Then the example tries twice to retrieve the data. In the first trial, it specifies its format as a string and sets the `autoConvert` parameter to `false`. This trial fails, and the result is displayed in a message box labeled \"Message #1.\" In the second trial, the example retrieves the same data with the `autoConvert` parameter set to `true`. This trial succeeds, and the result is displayed in a message box labeled \"Message #2.\" The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetData3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_14_1.cs)]\n [!code-cpp[GetData3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_14_1.cpp)]\n [!code-vb[GetData3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_14_1.vb)]"
  syntax:
    content: public object GetData (string format, bool autoConvert);
    parameters:
    - id: format
      type: System.String
      description: "검색할 데이터의 형식입니다. 참조 <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> 미리 정의 된 형식에 대 한 합니다."
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정 된 형식으로 데이터를 변환 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Object
      description: "지정된 된 형식으로 연관 된 데이터 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  id: GetDataPresent(System.String)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(String)
  nameWithType: IDataObject.GetDataPresent(String)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 인스턴스에 저장 된 데이터 연결 된 또는 지정된 된 형식으로 변환할 수 있는지 여부를 결정 합니다."
  remarks: "형식에서이 <xref:System.Windows.Forms.DataObject> <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> 를 호출 하기 전에</xref:System.Windows.Forms.DataObject> 있는지 여부를 확인 하려면이 메서드를 호출 합니다. 호출 <xref:System.Windows.Forms.IDataObject.GetFormats%2A>이 인스턴스에 사용할 수 있는 형식에 대 한.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > 요청한 형식이 저장 된와 호환 되 면 및 변환이 가능 하도록 지정를 저장 한 경우 데이터가 다른 형식으로 변환 될 수 있습니다. 유니코드 텍스트로 변환할 수로 저장 된 데이터 예를 들어 있습니다.       이 메서드의 구현을 <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName> 을 참조 하십시오."
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a data object using a string and the `Text` format. Then it verifies that the data is present in the `Text` format and displays the results in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[GetDataPresent1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_12_1.vb)]\n [!code-cs[GetDataPresent1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_12_1.cs)]\n [!code-cpp[GetDataPresent1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_12_1.cpp)]"
  syntax:
    content: public bool GetDataPresent (string format);
    parameters:
    - id: format
      type: System.String
      description: "확인 하기 위한 형식입니다. 참조 <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> 미리 정의 된 형식에 대 한 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 인스턴스와 연관 된 또는; 지정된 된 형식으로 변환할 수 데이터에 저장 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  id: GetDataPresent(System.Type)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(Type)
  nameWithType: IDataObject.GetDataPresent(Type)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 인스턴스에 저장 된 데이터 연결 된 또는 지정된 된 형식으로 변환할 수 있는지 여부를 결정 합니다."
  remarks: "형식에서이 <xref:System.Windows.Forms.DataObject> <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> 를 호출 하기 전에</xref:System.Windows.Forms.DataObject> 있는지 여부를 확인 하려면이 메서드를 호출 합니다. 호출 <xref:System.Windows.Forms.IDataObject.GetFormats%2A>이 인스턴스에 사용할 수 있는 형식에 대 한.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > 요청한 형식이 저장 된와 호환 되 면 및 변환이 가능 하도록 지정를 저장 한 경우 데이터가 다른 형식으로 변환 될 수 있습니다. 유니코드 텍스트로 변환할 수로 저장 된 데이터 예를 들어 있습니다.       이 메서드의 구현을 <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName> 을 참조 하십시오."
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`). Then it checks whether the specified data is stored in `myDataObject`. If the test evaluates `true`, it displays the result in a message box and displays the data type in a text box. This example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.  \n  \n [!code-cs[GetDataPresent2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_15_1.cs)]\n [!code-cpp[GetDataPresent2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_15_1.cpp)]\n [!code-vb[GetDataPresent2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_15_1.vb)]"
  syntax:
    content: public bool GetDataPresent (Type format);
    parameters:
    - id: format
      type: System.Type
      description: "A <xref:System.Type>를 확인 하기 위한 형식을 나타내는.</xref:System.Type> 참조 <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> 미리 정의 된 형식에 대 한 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 인스턴스와 연관 된 또는; 지정된 된 형식으로 변환할 수 데이터에 저장 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  id: GetDataPresent(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(String,Boolean)
  nameWithType: IDataObject.GetDataPresent(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 인스턴스에 저장 된 데이터와 데이터 형식으로 변환할지 여부를 결정 하는 부울 값을 사용 하 여 지정된 된 형식으로 연결 하는지를 결정 합니다."
  remarks: "형식에서이 <xref:System.Windows.Forms.DataObject> <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> 를 호출 하기 전에</xref:System.Windows.Forms.DataObject> 있는지 여부를 확인 하려면이 메서드를 호출 합니다. 호출 <xref:System.Windows.Forms.IDataObject.GetFormats%2A>이 인스턴스에 사용할 수 있는 형식에 대 한.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>       이 메서드가 반환 `true` 경우:- `autoConvert` 매개 변수는 `true` 와 데이터는 적절 한 형식으로 변환 될 수 있는 형식입니다.      - `autoConvert` 매개 변수는 `false` 와 적절 한 형식의 데이터는 합니다.       이 메서드가 반환 `false` 경우:- `autoConvert` 매개 변수는 `true` 하 고이 메서드가 지정 된 형식의 데이터를 찾을 수 없습니다 및 데이터를 지정 된 형식으로 변환할 수 또는 상태 데이터를 저장 `autoConvert` 로 설정 `false`합니다.      - `autoConvert` 매개 변수는 `false`, 이며이 인스턴스에서 지정 된 형식의 데이터 존재 하지 않습니다.      > [!NOTE] > 요청한 형식이 저장 된와 호환 되 면 및 변환이 가능 하도록 지정를 저장 한 경우 데이터가 다른 형식으로 변환 될 수 있습니다. 유니코드 텍스트로 변환할 수로 저장 된 데이터 예를 들어 있습니다.       이 메서드의 구현을 <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName> 을 참조 하십시오."
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a data object (`myDataObject`) using a string and the `Text` format. Then it queries the object for data associated with the `Text` format, with the `autoConvert` parameter set to `false`. This trial fails, and the result is displayed in a message box labeled \"Message #1.\" In the second trial, it sets the `autoConvert` parameter to `true`. This trial succeeds, and the result is displayed in a message box labeled \"Message #2.\" The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetDataPresent3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_17_1.cs)]\n [!code-cpp[GetDataPresent3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_17_1.cpp)]\n [!code-vb[GetDataPresent3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_17_1.vb)]"
  syntax:
    content: public bool GetDataPresent (string format, bool autoConvert);
    parameters:
    - id: format
      type: System.String
      description: "확인 하기 위한 형식입니다. 참조 <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> 미리 정의 된 형식에 대 한 합니다."
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 인스턴스의 데이터 저장 여부를 확인 하려면 변환할 수는 지정 된 형식으로 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 데이터가 지정 된 형식에서 인지 여부를 확인 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>데이터 형식이 있거나; 지정된 된 형식으로 변환 될 수 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetFormats
  id: GetFormats
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetFormats()
  nameWithType: IDataObject.GetFormats()
  fullName: System.Windows.Forms.IDataObject.GetFormats()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 인스턴스에 저장 된 데이터와 연결 된 되거나으로 변환 될 수 있는 모든 형식 목록을 반환 합니다."
  remarks: "이 메서드를 호출 하기 전에 지원 되는 데이터 형식을 가져오려면는 <xref:System.Windows.Forms.IDataObject.GetData%2A>메서드.</xref:System.Windows.Forms.IDataObject.GetData%2A> 참조는 <xref:System.Windows.Forms.DataFormats>미리 정의 된 형식에 대 한 클래스입니다.</xref:System.Windows.Forms.DataFormats>      > [!NOTE] > 요청한 형식이 저장 된와 호환 되 면 및 변환이 가능 하도록 지정를 저장 한 경우 데이터가 다른 형식으로 변환 될 수 있습니다. 유니코드 텍스트로 변환할 수로 저장 된 데이터 예를 들어 있습니다.       이 메서드의 구현을 <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName> 을 참조 하십시오."
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method. First, it creates a data object (`myDataObject`) using a string and the `Text` format. Then it retrieves all the data formats and data conversion formats in the data object, and displays the resulting list in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetFormats1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_3_1.cs)]\n [!code-cpp[GetFormats1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_3_1.cpp)]\n [!code-vb[GetFormats1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_3_1.vb)]"
  syntax:
    content: public string[] GetFormats ();
    parameters: []
    return:
      type: System.String[]
      description: "이 개체에 저장 된 데이터에서 지 원하는 모든 형식의 목록을 나타내는 배열 이름입니다."
  overload: System.Windows.Forms.IDataObject.GetFormats*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  id: GetFormats(System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetFormats(Boolean)
  nameWithType: IDataObject.GetFormats(Boolean)
  fullName: System.Windows.Forms.IDataObject.GetFormats(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 인스턴스에 저장 된 데이터와 관련 되어 있거나 서식을 모든 데이터를 변환할 수 있는 형식 또는 네이티브 데이터를 검색할 수 있는지 여부를 결정 하는 부울 값을 사용 하 여으로 변환 될 수 있는 모든 형식의 목록을 가져옵니다."
  remarks: "이 메서드를 호출 하기 전에 지원 되는 데이터 형식을 가져오려면는 <xref:System.Windows.Forms.IDataObject.GetData%2A>메서드.</xref:System.Windows.Forms.IDataObject.GetData%2A> 참조는 <xref:System.Windows.Forms.DataFormats>미리 정의 된 형식에 대 한 클래스입니다.</xref:System.Windows.Forms.DataFormats>      > [!NOTE] > 요청한 형식이 저장 된와 호환 되 면 및 변환이 가능 하도록 지정를 저장 한 경우 데이터가 다른 형식으로 변환 될 수 있습니다. 유니코드 텍스트로 변환할 수로 저장 된 데이터 예를 들어 있습니다.       이 메서드의 구현을 <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName> 을 참조 하십시오."
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method. First, it creates a data object (`myDataObject`) using a string and the `UnicodeText` format. Then it makes two queries to get the formats associated with the data. In the first query, it sets the `autoConvert` parameter to `false` : in this case, only the native format of the data is returned. In the second query, it sets the `autoConvert` parameter to `true`, so that it gets the list of formats, including the formats that the data can be converted to. In each case, the resulting list is displayed in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[GetFormats2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_13_1.vb)]\n [!code-cpp[GetFormats2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_13_1.cpp)]\n [!code-cs[GetFormats2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_13_1.cs)]"
  syntax:
    content: public string[] GetFormats (bool autoConvert);
    parameters:
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>모든 형식을 검색 하려면이 인스턴스에 저장 된 데이터와 연결 된 또는;로 변환할 수 있습니다. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 를 네이티브 데이터 형식에만 검색 합니다."
    return:
      type: System.String[]
      description: "이 개체에 저장 된 데이터에서 지 원하는 모든 형식의 목록을 나타내는 배열 이름입니다."
  overload: System.Windows.Forms.IDataObject.GetFormats*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.Object)
  id: SetData(System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(Object)
  nameWithType: IDataObject.SetData(Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "형식에 대 한 데이터의 클래스를 사용 하 여이 인스턴스에서 지정된 된 데이터를 저장 합니다."
  remarks: "형식은은 데이터 클래스에서 파생 됩니다.       이 메서드를 사용 하 여 저장 된 데이터 검색 시 호환 형식으로 변환할 수 있습니다.       이 메서드의 구현을 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName> 을 참조 하십시오."
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`). Then it checks whether the specified data is stored in the data object, and displays the result in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[SetData1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_1_1.cs)]\n [!code-vb[SetData1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_1_1.vb)]\n [!code-cpp[SetData1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_1_1.cpp)]"
  syntax:
    content: public void SetData (object data);
    parameters:
    - id: data
      type: System.Object
      description: "데이터를 저장 하는입니다."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  id: SetData(System.String,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(String,Object)
  nameWithType: IDataObject.SetData(String,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 인스턴스에서 지정된 된 데이터와 관련 된 형식을 저장합니다."
  remarks: "대상 응용 프로그램의 형식을 모르는 경우이 메서드를 사용 하 여 여러 형식의 데이터를 저장할 수 있습니다.       이 메서드를 사용 하 여 저장 된 데이터 검색 시 호환 형식으로 변환할 수 있습니다.       이 메서드의 구현을 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName> 을 참조 하십시오."
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a data object (`myDataObject`) and stores a string in the object specifying the `UnicodeText` format. Then it retrieves that data stored in the object specifying the `Text` format, so that the data is converted to the `Text` format. The result is displayed in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[SetData2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_0_1.cs)]\n [!code-cpp[SetData2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_0_1.cpp)]\n [!code-vb[SetData2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_0_1.vb)]"
  syntax:
    content: public void SetData (string format, object data);
    parameters:
    - id: format
      type: System.String
      description: "데이터와 연결 된 형식입니다. 참조 <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> 미리 정의 된 형식에 대 한 합니다."
    - id: data
      type: System.Object
      description: "데이터를 저장 하는입니다."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  id: SetData(System.Type,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(Type,Object)
  nameWithType: IDataObject.SetData(Type,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Type,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 인스턴스에 지정된 된 데이터와 관련 된 클래스 형식 저장합니다."
  remarks: "대상 응용 프로그램의 형식을 모르는 경우이 메서드를 사용 하 여 여러 형식의 데이터를 저장할 수 있습니다.       이 메서드를 사용 하 여 저장 된 데이터 검색 시 호환 형식으로 변환할 수 있습니다.       이 메서드의 구현을 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName> 을 참조 하십시오."
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`), using `myType` to specify the data format. Then it checks whether the data of the specified type is stored in the object, and displays the result in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[SetData3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_11_1.vb)]\n [!code-cpp[SetData3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_11_1.cpp)]\n [!code-cs[SetData3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_11_1.cs)]"
  syntax:
    content: public void SetData (Type format, object data);
    parameters:
    - id: format
      type: System.Type
      description: "A <xref:System.Type>데이터와 관련 된 형식을 나타내는.</xref:System.Type> 참조 <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> 미리 정의 된 형식에 대 한 합니다."
    - id: data
      type: System.Object
      description: "데이터를 저장 하는입니다."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  id: SetData(System.String,System.Boolean,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(String,Boolean,Object)
  nameWithType: IDataObject.SetData(String,Boolean,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Boolean,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "데이터를 다른 형식으로 변환할 수 있는지 여부를 지정 하는 부울 값을 사용 하 여이 인스턴스에서 지정된 된 데이터와 관련 된 형식을 저장 합니다."
  remarks: "대상 응용 프로그램의 형식을 모르는 경우이 메서드를 사용 하 여 여러 형식의 데이터를 저장할 수 있습니다.       이 메서드의 구현을 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName> 을 참조 하십시오."
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a data object (`myDataObject`) and stores a `UnicodeText` string in it, with the `autoConvert` parameter set to `false`. Then it retrieves the format(s) associated with the data stored in the object and displays the result in a message box. The only format associated with the data is the `UnicodeText` format. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[SetData4#1](~/add/codesnippet/cpp/14ad2ca0-1678-4ad5-a287-_1.cpp)]\n [!code-vb[SetData4#1](~/add/codesnippet/visualbasic/14ad2ca0-1678-4ad5-a287-_1.vb)]\n [!code-cs[SetData4#1](~/add/codesnippet/csharp/14ad2ca0-1678-4ad5-a287-_1.cs)]"
  syntax:
    content: public void SetData (string format, bool autoConvert, object data);
    parameters:
    - id: format
      type: System.String
      description: "데이터와 연결 된 형식입니다. 참조 <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> 미리 정의 된 형식에 대 한 합니다."
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>데이터를 다른 형식으로 변환할 수 있게 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: data
      type: System.Object
      description: "데이터를 저장 하는입니다."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.IDataObject.GetData(System.String)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(String)
  nameWithType: IDataObject.GetData(String)
  fullName: System.Windows.Forms.IDataObject.GetData(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.IDataObject.GetData(System.Type)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(Type)
  nameWithType: IDataObject.GetData(Type)
  fullName: System.Windows.Forms.IDataObject.GetData(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(String,Boolean)
  nameWithType: IDataObject.GetData(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetData(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(String)
  nameWithType: IDataObject.GetDataPresent(String)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String)
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(Type)
  nameWithType: IDataObject.GetDataPresent(Type)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(Type)
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(String,Boolean)
  nameWithType: IDataObject.GetDataPresent(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String,Boolean)
- uid: System.Windows.Forms.IDataObject.GetFormats
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats()
  nameWithType: IDataObject.GetFormats()
  fullName: System.Windows.Forms.IDataObject.GetFormats()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats(Boolean)
  nameWithType: IDataObject.GetFormats(Boolean)
  fullName: System.Windows.Forms.IDataObject.GetFormats(Boolean)
- uid: System.Windows.Forms.IDataObject.SetData(System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(Object)
  nameWithType: IDataObject.SetData(Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(String,Object)
  nameWithType: IDataObject.SetData(String,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(Type,Object)
  nameWithType: IDataObject.SetData(Type,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Type,Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(String,Boolean,Object)
  nameWithType: IDataObject.SetData(String,Boolean,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Boolean,Object)
- uid: System.Windows.Forms.IDataObject.GetData*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData
  nameWithType: IDataObject.GetData
- uid: System.Windows.Forms.IDataObject.GetDataPresent*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent
  nameWithType: IDataObject.GetDataPresent
- uid: System.Windows.Forms.IDataObject.GetFormats*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats
  nameWithType: IDataObject.GetFormats
- uid: System.Windows.Forms.IDataObject.SetData*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData
  nameWithType: IDataObject.SetData
