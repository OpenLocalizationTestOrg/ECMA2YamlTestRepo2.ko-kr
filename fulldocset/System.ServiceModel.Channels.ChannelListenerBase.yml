### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.ChannelListenerBase
  id: ChannelListenerBase
  children:
  - System.ServiceModel.Channels.ChannelListenerBase.#ctor
  - System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)
  - System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout
  - System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout
  - System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout
  - System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout
  - System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)
  - System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1
  - System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)
  - System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)
  - System.ServiceModel.Channels.ChannelListenerBase.Uri
  - System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)
  langs:
  - csharp
  name: ChannelListenerBase
  nameWithType: ChannelListenerBase
  fullName: System.ServiceModel.Channels.ChannelListenerBase
  type: Class
  summary: "채널 수신기는 서비스에 대 한 공통 기본 구현을 제공합니다."
  remarks: "서비스의 채널 수신기에 대 한 기다린 후 클라이언트의 팩터리에서 만들어지는 채널을 수락 합니다. 클라이언트와 서비스 간에 채널 연결이 설정 되 면 메시지를 교환할 수 있습니다 및 분산된 응용 프로그램이 통신할 수 있습니다. 수신기에서 제공 하는 처리 기능을 선택할 때 모듈성을 제공 하는 채널 수신기의 집합으로 계층화 되는 [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] 배포할 기능입니다. 서비스 스택의 각 채널 수신기는 클라이언트 스택의 한 채널 팩터리에 해당합니다. 팩터리에서 만든 채널은 실제로 허용 되 고 서비스의 수신기에 스택에서 처리 되는 채널 스택입니다."
  syntax:
    content: 'public abstract class ChannelListenerBase : System.ServiceModel.Channels.ChannelManagerBase, System.ServiceModel.Channels.IChannelListener'
  inheritance:
  - System.ServiceModel.Channels.ChannelManagerBase
  implements:
  - System.ServiceModel.Channels.IChannelListener
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: ChannelListenerBase()
  nameWithType: ChannelListenerBase.ChannelListenerBase()
  fullName: System.ServiceModel.Channels.ChannelListenerBase.ChannelListenerBase()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.Channels.ChannelListenerBase&quot;> </xref> 클래스입니다."
  remarks: "기본 생성자는 메시지를 교환할 때 서비스 모델 시간 제한 값을 사용 하 여 제한 시간 속성을 초기화 합니다. 기본값은 1 분 열기, 보내고 작업 및 수신 작업에 10 분을 닫습니다. 사용 하 여 <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>이 작업 시간 제한에 대 한 다른 값을 지정 하려는 경우.</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>"
  syntax:
    content: protected ChannelListenerBase ();
    parameters: []
  overload: System.ServiceModel.Channels.ChannelListenerBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)
  id: '#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)'
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: ChannelListenerBase(IDefaultCommunicationTimeouts)
  nameWithType: ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.Channels.ChannelListenerBase&quot;> </xref> 클래스 지정 된 기본 통신 시간 제한 사용 합니다."
  remarks: "Open, send에 대 한 사용자 값을 지정 하 고 받고 닫기 서비스 모델의 기본값을 사용 하는 대신 작업의 시간 제한 하려는 경우에 기본 생성자 대신 ChannelListenerBase를 사용 합니다."
  syntax:
    content: protected ChannelListenerBase (System.ServiceModel.IDefaultCommunicationTimeouts timeouts);
    parameters:
    - id: timeouts
      type: System.ServiceModel.IDefaultCommunicationTimeouts
      description: "<xref:System.ServiceModel.IDefaultCommunicationTimeouts>송신, 수신, 및 닫기 작업 메시지를 교환할 때 열기에 대 한 기본 시간 제한을 지정 하는.</xref:System.ServiceModel.IDefaultCommunicationTimeouts>"
  overload: System.ServiceModel.Channels.ChannelListenerBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelListenerBase.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "파생된 클래스에서 구현 된 경우 채널 도착을 대기 하는 비동기 작업을 시작 합니다."
  syntax:
    content: public IAsyncResult BeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>채널 작업이 대기에서 시간이 초과 되기 전에 완료 해야 기간을 지정 하는.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>채널 작업에 대 한 대기의 비동기 완료에 대 한 알림을 수신 하는 대리자입니다.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "비동기 채널 작업이 대기와 관련 된 상태 정보를 포함 하는 응용 프로그램이 지정한는 개체입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>채널 작업이 비동기 대기를 참조 하는.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "채널 수신기가 아직 열려 있지 및 사용할 수 없습니다."
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout
  id: DefaultCloseTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: DefaultCloseTimeout
  nameWithType: ChannelListenerBase.DefaultCloseTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "기본 간격을 닫기 작업을 완료를 위해 제공 된 시간을 가져옵니다."
  remarks: "새로 만들 때이 값은 설정 <xref:System.ServiceModel.Channels.ChannelListenerBase>개체입니다.</xref:System.ServiceModel.Channels.ChannelListenerBase> 기본 <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor>생성자 DefaultCloseTimeout 속성을 1 분의 값을 설정 합니다.</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> 사용 하 여 <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>이 시간 제한에 다른 값을 지정 하려는 경우.</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>"
  syntax:
    content: protected override TimeSpan DefaultCloseTimeout { get; }
    return:
      type: System.TimeSpan
      description: "기본 <xref:System.TimeSpan>닫기 작업에서 시간이 초과 되기 전에 완료 해야 기간을 지정 하는.</xref:System.TimeSpan>"
  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout
  id: DefaultOpenTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: DefaultOpenTimeout
  nameWithType: ChannelListenerBase.DefaultOpenTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "기본 간격을 열기 작업이 완료 되기를 제공 된 시간을 가져옵니다."
  remarks: "새로 만들 때이 값은 설정 <xref:System.ServiceModel.Channels.ChannelListenerBase>개체입니다.</xref:System.ServiceModel.Channels.ChannelListenerBase> 기본 <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor>생성자 DefaultOpenTimeout 속성을 1 분의 값을 설정 합니다.</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> 사용 하 여 <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>이 시간 제한에 다른 값을 지정 하려는 경우.</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>"
  syntax:
    content: protected override TimeSpan DefaultOpenTimeout { get; }
    return:
      type: System.TimeSpan
      description: "기본 <xref:System.TimeSpan>열기 작업이 시간이 초과 되기 전에 완료 해야 기간을 지정 하는.</xref:System.TimeSpan>"
  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout
  id: DefaultReceiveTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: DefaultReceiveTimeout
  nameWithType: ChannelListenerBase.DefaultReceiveTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "기본 간격을 받기 작업을 완료에 대 한 제공 된 시간을 가져옵니다."
  remarks: "새로 만들 때이 값은 설정 <xref:System.ServiceModel.Channels.ChannelListenerBase>개체입니다.</xref:System.ServiceModel.Channels.ChannelListenerBase> 기본 <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor>생성자 DefaultReceiveTimeout 속성 값을 10 분을 설정 합니다.</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> 사용 하 여 <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>이 시간 제한에 다른 값을 지정 하려는 경우.</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>"
  syntax:
    content: protected override TimeSpan DefaultReceiveTimeout { get; }
    return:
      type: System.TimeSpan
      description: "기본 <xref:System.TimeSpan>수신 작업에서 시간이 초과 되기 전에 완료 해야 기간을 지정 하는.</xref:System.TimeSpan>"
  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout
  id: DefaultSendTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: DefaultSendTimeout
  nameWithType: ChannelListenerBase.DefaultSendTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "기본 간격을 보내기 작업을 완료에 대 한 제공 된 시간을 가져옵니다."
  remarks: "새로 만들 때이 값은 설정 <xref:System.ServiceModel.Channels.ChannelListenerBase>개체입니다.</xref:System.ServiceModel.Channels.ChannelListenerBase> 기본 <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor>생성자 DefaultSendTimeout 속성을 1 분의 값을 설정 합니다.</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> 사용 하 여 <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>이 시간 제한에 다른 값을 지정 하려는 경우.</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>"
  syntax:
    content: protected override TimeSpan DefaultSendTimeout { get; }
    return:
      type: System.TimeSpan
      description: "기본 <xref:System.TimeSpan>보내기 작업에서 시간이 초과 되기 전에 완료 해야 기간을 지정 하는.</xref:System.TimeSpan>"
  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)
  id: EndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: EndWaitForChannel(IAsyncResult)
  nameWithType: ChannelListenerBase.EndWaitForChannel(IAsyncResult)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "파생된 클래스에서 구현 된 경우 채널 도착을 대기 하는 비동기 작업을 완료 합니다."
  syntax:
    content: public bool EndWaitForChannel (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>EndWaitForChannel 메서드를 호출 하 여 반환 합니다.</xref:System.IAsyncResult>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>메시지가 도착; 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1
  id: GetProperty``1
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: GetProperty()
  nameWithType: ChannelListenerBase.GetProperty()
  fullName: System.ServiceModel.Channels.ChannelListenerBase.GetProperty()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public virtual T GetProperty<T> () where T : class;'
    parameters: []
    return:
      type: T
      description: "추가할 수 있습니다."
  overload: System.ServiceModel.Channels.ChannelListenerBase.GetProperty<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelListenerBase.OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "파생된 클래스에서 구현 된 경우 채널 도착 대기를 시작할 때 확장성 지점을 제공 합니다."
  syntax:
    content: protected abstract IAsyncResult OnBeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>on 시작 대기 작업이 시간이 초과 되기 전에 완료 해야 기간을 지정 하는.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>시작 대기 완료에 비동기 작업에 대 한 알림을 받는 대리자입니다.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "에 연결 된 비동기 상태 정보를 포함 하는 응용 프로그램에 의해 지정 되는 개체로, 대기 작업을 시작 합니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>참조 비동기 시작 대기 작업이.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)
  id: OnEndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: OnEndWaitForChannel(IAsyncResult)
  nameWithType: ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "파생된 클래스에서 구현 된 경우 채널 도착 대기를 종료할 때 확장성 지점을 제공 합니다."
  syntax:
    content: protected abstract bool OnEndWaitForChannel (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>에 대 한 호출에서 반환 되는 &lt;xref:System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt; 메서드.</xref:System.IAsyncResult>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정 된 시간 간격 전에 메서드가 완료 되는 경우는 <code> timeout </code> 고, 그렇지 않으면 만료 된 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)
  id: OnWaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: OnWaitForChannel(TimeSpan)
  nameWithType: ChannelListenerBase.OnWaitForChannel(TimeSpan)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "파생된 클래스에서 재정의 하는 경우 채널 도착을 대기 하는 경우 확장성 지점을 제공 합니다."
  syntax:
    content: protected abstract bool OnWaitForChannel (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>채널 작업이 on 대기에서 시간이 초과 되기 전에 완료 해야 기간을 지정 하는.</xref:System.TimeSpan>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정 된 시간 간격 전에 메서드가 완료 되는 경우는 <code> timeout </code> 고, 그렇지 않으면 만료 된 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.Uri
  id: Uri
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: Uri
  nameWithType: ChannelListenerBase.Uri
  fullName: System.ServiceModel.Channels.ChannelListenerBase.Uri
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "파생된 클래스에서 구현 하는 경우에 채널 수신기가 수신 들어오는 채널에 대 한 URI를 가져옵니다."
  syntax:
    content: public abstract Uri Uri { get; }
    return:
      type: System.Uri
      description: "<xref:System.Uri>에 들어오는 채널에 대 한 채널 수신기가 수신입니다.</xref:System.Uri>"
  overload: System.ServiceModel.Channels.ChannelListenerBase.Uri*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)
  id: WaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: WaitForChannel(TimeSpan)
  nameWithType: ChannelListenerBase.WaitForChannel(TimeSpan)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "파생된 클래스에서 구현 된 경우 채널 도착을 대기 합니다."
  syntax:
    content: public bool WaitForChannel (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>채널 작업이 대기에서 시간이 초과 되기 전에 완료 해야 기간을 지정 하는.</xref:System.TimeSpan>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>에 지정 된 시간 간격 전에 채널이 도착 하는 경우는 <code> timeout </code> 고, 그렇지 않으면 만료 된 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.ChannelManagerBase
  isExternal: false
  name: System.ServiceModel.Channels.ChannelManagerBase
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: ChannelListenerBase()
  nameWithType: ChannelListenerBase.ChannelListenerBase()
  fullName: System.ServiceModel.Channels.ChannelListenerBase.ChannelListenerBase()
- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: ChannelListenerBase(IDefaultCommunicationTimeouts)
  nameWithType: ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)
- uid: System.ServiceModel.IDefaultCommunicationTimeouts
  parent: System.ServiceModel
  isExternal: true
  name: IDefaultCommunicationTimeouts
  nameWithType: IDefaultCommunicationTimeouts
  fullName: System.ServiceModel.IDefaultCommunicationTimeouts
- uid: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelListenerBase.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ChannelListenerBase.DefaultCloseTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ChannelListenerBase.DefaultOpenTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultReceiveTimeout
  nameWithType: ChannelListenerBase.DefaultReceiveTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultSendTimeout
  nameWithType: ChannelListenerBase.DefaultSendTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: EndWaitForChannel(IAsyncResult)
  nameWithType: ChannelListenerBase.EndWaitForChannel(IAsyncResult)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(IAsyncResult)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: GetProperty()
  nameWithType: ChannelListenerBase.GetProperty()
  fullName: System.ServiceModel.Channels.ChannelListenerBase.GetProperty()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelListenerBase.OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnEndWaitForChannel(IAsyncResult)
  nameWithType: ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnWaitForChannel(TimeSpan)
  nameWithType: ChannelListenerBase.OnWaitForChannel(TimeSpan)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(TimeSpan)
- uid: System.ServiceModel.Channels.ChannelListenerBase.Uri
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: Uri
  nameWithType: ChannelListenerBase.Uri
  fullName: System.ServiceModel.Channels.ChannelListenerBase.Uri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: WaitForChannel(TimeSpan)
  nameWithType: ChannelListenerBase.WaitForChannel(TimeSpan)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(TimeSpan)
- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: ChannelListenerBase
  nameWithType: ChannelListenerBase.ChannelListenerBase
- uid: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: BeginWaitForChannel
  nameWithType: ChannelListenerBase.BeginWaitForChannel
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ChannelListenerBase.DefaultCloseTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ChannelListenerBase.DefaultOpenTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultReceiveTimeout
  nameWithType: ChannelListenerBase.DefaultReceiveTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultSendTimeout
  nameWithType: ChannelListenerBase.DefaultSendTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: EndWaitForChannel
  nameWithType: ChannelListenerBase.EndWaitForChannel
- uid: System.ServiceModel.Channels.ChannelListenerBase.GetProperty<T>*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: GetProperty<T>
  nameWithType: ChannelListenerBase.GetProperty<T>
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnBeginWaitForChannel
  nameWithType: ChannelListenerBase.OnBeginWaitForChannel
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnEndWaitForChannel
  nameWithType: ChannelListenerBase.OnEndWaitForChannel
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnWaitForChannel
  nameWithType: ChannelListenerBase.OnWaitForChannel
- uid: System.ServiceModel.Channels.ChannelListenerBase.Uri*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: Uri
  nameWithType: ChannelListenerBase.Uri
- uid: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: WaitForChannel
  nameWithType: ChannelListenerBase.WaitForChannel
