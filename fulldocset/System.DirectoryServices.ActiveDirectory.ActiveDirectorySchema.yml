### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  id: ActiveDirectorySchema
  children:
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(System.Boolean)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(System.DirectoryServices.ActiveDirectory.SchemaClassType)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(System.String)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(System.String)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(System.String)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(System.String)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner
  langs:
  - csharp
  name: ActiveDirectorySchema
  nameWithType: ActiveDirectorySchema
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  type: Class
  summary: "ActiveDirectorySchema 클래스에는 특정 도메인에 대 한 스키마 파티션을 나타냅니다."
  syntax:
    content: 'public class ActiveDirectorySchema : System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition'
  inheritance:
  - System.Object
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition
  implements: []
  inheritedMembers:
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ActiveDirectorySchema.Dispose(Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "사용 되는 관리 되는 리소스를 해제는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema&quot;> </xref> 개체 및 필요에 따라 릴리스 관리 되지 않는 리소스입니다."
  remarks: "`disposing` 매개 변수 관리 되는 리소스의 해제에만 영향을 줍니다. 관리 되지 않는 리소스는 항상이 메서드에 의해 해제 됩니다."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false &quot; name=&quot;false &quot; href=&quot;&quot;> </xref>만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses
  id: FindAllClasses
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindAllClasses()
  nameWithType: ActiveDirectorySchema.FindAllClasses()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "스키마의 모든 Active Directory 도메인 서비스 클래스를 검색합니다."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection FindAllClasses ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection&quot;> </xref> 개체의 컬렉션을 포함 하는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass&quot;> </xref> 검색 된 클래스에 대 한 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "현재 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(System.DirectoryServices.ActiveDirectory.SchemaClassType)
  id: FindAllClasses(System.DirectoryServices.ActiveDirectory.SchemaClassType)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindAllClasses(SchemaClassType)
  nameWithType: ActiveDirectorySchema.FindAllClasses(SchemaClassType)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(SchemaClassType)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "스키마에 지정 된 형식의 모든 Active Directory 도메인 서비스 클래스를 검색 합니다."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection FindAllClasses (System.DirectoryServices.ActiveDirectory.SchemaClassType type);
    parameters:
    - id: type
      type: System.DirectoryServices.ActiveDirectory.SchemaClassType
      description: "중 하나는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.SchemaClassType&quot;> </xref> 검색 하기 위해 클래스의 형식을 식별 하는 멤버입니다."
    return:
      type: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection&quot;> </xref> 개체의 컬렉션을 포함 하는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass&quot;> </xref> 검색 된 클래스에 대 한 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "현재 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses
  id: FindAllDefunctClasses
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindAllDefunctClasses()
  nameWithType: ActiveDirectorySchema.FindAllDefunctClasses()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "모든 스키마에 존재 하지 않는 Active Directory 도메인 서비스 클래스를 검색합니다."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection FindAllDefunctClasses ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection&quot;> </xref> 개체의 컬렉션을 포함 하는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass&quot;> </xref> 검색 된 클래스에 대 한 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "현재 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties
  id: FindAllDefunctProperties
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindAllDefunctProperties()
  nameWithType: ActiveDirectorySchema.FindAllDefunctProperties()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "모든 스키마에 존재 하지 않는 Active Directory 도메인 서비스 속성을 검색합니다."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection FindAllDefunctProperties ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection&quot;> </xref> 개체의 컬렉션을 포함 하는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty&quot;> </xref> 검색 된 속성에 대 한 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "현재 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties
  id: FindAllProperties
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindAllProperties()
  nameWithType: ActiveDirectorySchema.FindAllProperties()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "모든 스키마의 Active Directory 도메인 서비스 속성을 검색합니다."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection FindAllProperties ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection&quot;> </xref> 개체의 컬렉션을 포함 하는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty&quot;> </xref> 검색 된 속성에 대 한 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "현재 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)
  id: FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindAllProperties(PropertyTypes)
  nameWithType: ActiveDirectorySchema.FindAllProperties(PropertyTypes)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(PropertyTypes)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "지정 된 형식의 스키마에서 Active Directory 도메인 서비스 속성을 모두 검색합니다."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection FindAllProperties (System.DirectoryServices.ActiveDirectory.PropertyTypes type);
    parameters:
    - id: type
      type: System.DirectoryServices.ActiveDirectory.PropertyTypes
      description: "중 하나는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.PropertyTypes&quot;> </xref> 검색할 속성의 형식을 식별 하는 멤버입니다."
    return:
      type: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection&quot;> </xref> 개체의 컬렉션을 포함 하는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty&quot;> </xref> 검색 된 속성에 대 한 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "현재 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(System.String)
  id: FindClass(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindClass(String)
  nameWithType: ActiveDirectorySchema.FindClass(String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "지정된 된 이름 사용 하 여 클래스를 검색합니다."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass FindClass (string ldapDisplayName);
    parameters:
    - id: ldapDisplayName
      type: System.String
      description: "검색할 클래스의 LDAP 표시 이름입니다."
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass&quot;> </xref> 지정된 된 이름 사용 하 여 클래스를 나타내는 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "지정된 된 이름 사용 하는 클래스를 찾을 수 없습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ldapDisplayName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ldapDisplayName</code>길이가&0;입니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "현재 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(System.String)
  id: FindDefunctClass(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindDefunctClass(String)
  nameWithType: ActiveDirectorySchema.FindDefunctClass(String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "지정 된 일반 이름이 존재 하지 않는 클래스를 검색 합니다."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass FindDefunctClass (string commonName);
    parameters:
    - id: commonName
      type: System.String
      description: "검색할 존재 하지 않는 클래스의 일반 이름입니다."
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass&quot;> </xref> 지정된 된 일반 이름 사용 하 여 클래스를 나타내는 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "지정된 된 이름 사용 하는 클래스를 찾을 수 없습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>commonName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>commonName</code>길이가&0;입니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "현재 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(System.String)
  id: FindDefunctProperty(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindDefunctProperty(String)
  nameWithType: ActiveDirectorySchema.FindDefunctProperty(String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "지정된 된 일반 이름을 가진 존재 하지 않는 속성을 검색 합니다."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty FindDefunctProperty (string commonName);
    parameters:
    - id: commonName
      type: System.String
      description: "존재 하지 않는 찾을 속성의 일반 이름입니다."
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty&quot;> </xref> 속성을 나타내는 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "지정 된 이름의 속성을 찾을 수 없습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>commonName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>commonName</code>길이가&0;입니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "현재 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(System.String)
  id: FindProperty(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindProperty(String)
  nameWithType: ActiveDirectorySchema.FindProperty(String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "지정 된 이름의 속성을 검색합니다."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty FindProperty (string ldapDisplayName);
    parameters:
    - id: ldapDisplayName
      type: System.String
      description: "찾을 속성의 LDAP 표시 이름입니다."
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty&quot;> </xref> 지정 된 이름의 속성을 나타내는 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "지정 된 이름의 속성을 찾을 수 없습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>propertyName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>propertyName</code>길이가&0;입니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "현재 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema
  id: GetCurrentSchema
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: GetCurrentSchema()
  nameWithType: ActiveDirectorySchema.GetCurrentSchema()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "현재 로그온 한 사용자의 구성원 인 포리스트에 대 한 스키마 개체를 가져옵니다."
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema GetCurrentSchema ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema&quot;> </xref> 로컬 컴퓨터의 구성원 인 도메인에 대 한 스키마를 나타내는 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "로컬 도메인에 연결할 수 없습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry
  id: GetDirectoryEntry
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: GetDirectoryEntry()
  nameWithType: ActiveDirectorySchema.GetDirectoryEntry()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "검색 한 <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> 디렉터리 파티션을 나타내는 개체입니다."
  syntax:
    content: public override System.DirectoryServices.DirectoryEntry GetDirectoryEntry ();
    parameters: []
    return:
      type: System.DirectoryServices.DirectoryEntry
      description: "A <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> 디렉터리 파티션을 나타내는 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "현재 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  id: GetSchema(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: GetSchema(DirectoryContext)
  nameWithType: ActiveDirectorySchema.GetSchema(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(DirectoryContext)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "지정 된 컨텍스트에 대 한 스키마 개체를 검색합니다."
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema GetSchema (System.DirectoryServices.ActiveDirectory.DirectoryContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;> </xref> 개체를 검색 하는 데 자격 증명이 포함 된 개체입니다. 컨텍스트의 대상은 포리스트나 디렉터리 서버 구성 집합 이어야 합니다."
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema&quot;> </xref> 지정된 된 컨텍스트에 대 한 스키마를 나타내는 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "에 지정 된 대상에 대 한 연결 <code> context </code> 만들 수 없습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>context</code>잘못 되었습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema
  id: RefreshSchema
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: RefreshSchema()
  nameWithType: ActiveDirectorySchema.RefreshSchema()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "클라이언트 컴퓨터에서 스키마 캐시를 새로 고칩니다."
  syntax:
    content: public void RefreshSchema ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner
  id: SchemaRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: SchemaRoleOwner
  nameWithType: ActiveDirectorySchema.SchemaRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "스키마 마스터 역할 소유자를 가져옵니다."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DirectoryServer SchemaRoleOwner { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DirectoryServer
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryServer&quot;> </xref> 있는 스키마 마스터 서버를 나타내는 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "현재 개체가 삭제 되었습니다."
  platform:
  - net462
references:
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition
  isExternal: false
  name: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryObjectNotFoundException
  nameWithType: ActiveDirectoryObjectNotFoundException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ActiveDirectorySchema.Dispose(Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllClasses()
  nameWithType: ActiveDirectorySchema.FindAllClasses()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses()
- uid: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReadOnlyActiveDirectorySchemaClassCollection
  nameWithType: ReadOnlyActiveDirectorySchemaClassCollection
  fullName: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(System.DirectoryServices.ActiveDirectory.SchemaClassType)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllClasses(SchemaClassType)
  nameWithType: ActiveDirectorySchema.FindAllClasses(SchemaClassType)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(SchemaClassType)
- uid: System.DirectoryServices.ActiveDirectory.SchemaClassType
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: SchemaClassType
  nameWithType: SchemaClassType
  fullName: System.DirectoryServices.ActiveDirectory.SchemaClassType
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllDefunctClasses()
  nameWithType: ActiveDirectorySchema.FindAllDefunctClasses()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses()
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllDefunctProperties()
  nameWithType: ActiveDirectorySchema.FindAllDefunctProperties()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties()
- uid: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReadOnlyActiveDirectorySchemaPropertyCollection
  nameWithType: ReadOnlyActiveDirectorySchemaPropertyCollection
  fullName: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllProperties()
  nameWithType: ActiveDirectorySchema.FindAllProperties()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties()
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllProperties(PropertyTypes)
  nameWithType: ActiveDirectorySchema.FindAllProperties(PropertyTypes)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(PropertyTypes)
- uid: System.DirectoryServices.ActiveDirectory.PropertyTypes
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: PropertyTypes
  nameWithType: PropertyTypes
  fullName: System.DirectoryServices.ActiveDirectory.PropertyTypes
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindClass(String)
  nameWithType: ActiveDirectorySchema.FindClass(String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(String)
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectorySchemaClass
  nameWithType: ActiveDirectorySchemaClass
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindDefunctClass(String)
  nameWithType: ActiveDirectorySchema.FindDefunctClass(String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(String)
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindDefunctProperty(String)
  nameWithType: ActiveDirectorySchema.FindDefunctProperty(String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(String)
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectorySchemaProperty
  nameWithType: ActiveDirectorySchemaProperty
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindProperty(String)
  nameWithType: ActiveDirectorySchema.FindProperty(String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(String)
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: GetCurrentSchema()
  nameWithType: ActiveDirectorySchema.GetCurrentSchema()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema()
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectorySchema
  nameWithType: ActiveDirectorySchema
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: GetDirectoryEntry()
  nameWithType: ActiveDirectorySchema.GetDirectoryEntry()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry()
- uid: System.DirectoryServices.DirectoryEntry
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: System.DirectoryServices.DirectoryEntry
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: GetSchema(DirectoryContext)
  nameWithType: ActiveDirectorySchema.GetSchema(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(DirectoryContext)
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DirectoryContext
  nameWithType: DirectoryContext
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: RefreshSchema()
  nameWithType: ActiveDirectorySchema.RefreshSchema()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema()
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: SchemaRoleOwner
  nameWithType: ActiveDirectorySchema.SchemaRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DirectoryServer
  nameWithType: DirectoryServer
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: Dispose
  nameWithType: ActiveDirectorySchema.Dispose
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllClasses
  nameWithType: ActiveDirectorySchema.FindAllClasses
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllDefunctClasses
  nameWithType: ActiveDirectorySchema.FindAllDefunctClasses
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllDefunctProperties
  nameWithType: ActiveDirectorySchema.FindAllDefunctProperties
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllProperties
  nameWithType: ActiveDirectorySchema.FindAllProperties
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindClass
  nameWithType: ActiveDirectorySchema.FindClass
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindDefunctClass
  nameWithType: ActiveDirectorySchema.FindDefunctClass
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindDefunctProperty
  nameWithType: ActiveDirectorySchema.FindDefunctProperty
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindProperty
  nameWithType: ActiveDirectorySchema.FindProperty
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: GetCurrentSchema
  nameWithType: ActiveDirectorySchema.GetCurrentSchema
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: GetDirectoryEntry
  nameWithType: ActiveDirectorySchema.GetDirectoryEntry
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: GetSchema
  nameWithType: ActiveDirectorySchema.GetSchema
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: RefreshSchema
  nameWithType: ActiveDirectorySchema.RefreshSchema
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: SchemaRoleOwner
  nameWithType: ActiveDirectorySchema.SchemaRoleOwner
