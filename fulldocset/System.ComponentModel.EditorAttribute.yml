### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.EditorAttribute
  id: EditorAttribute
  children:
  - System.ComponentModel.EditorAttribute.#ctor
  - System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)
  - System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)
  - System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)
  - System.ComponentModel.EditorAttribute.EditorBaseTypeName
  - System.ComponentModel.EditorAttribute.EditorTypeName
  - System.ComponentModel.EditorAttribute.Equals(System.Object)
  - System.ComponentModel.EditorAttribute.GetHashCode
  - System.ComponentModel.EditorAttribute.TypeId
  langs:
  - csharp
  name: EditorAttribute
  nameWithType: EditorAttribute
  fullName: System.ComponentModel.EditorAttribute
  type: Class
  summary: "속성을 변경 하는 데 편집기를 지정 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "속성을 편집할 때 비주얼 디자이너 대화 상자 또는 드롭다운 창을 통해 지정된 된 편집기의 새 인스턴스를 만들어야 합니다.       사용 하 여는 <xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A>속성이이 편집기의 기본 형식을 찾으려고 합니다.</xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A> 만 사용할 수 있는 기본 형식이 <xref:System.Drawing.Design.UITypeEditor>.</xref:System.Drawing.Design.UITypeEditor>       사용 하 여는 <xref:System.ComponentModel.EditorAttribute.EditorTypeName%2A>속성이이 특성과 관련 된 편집기 유형의 이름을 가져오지 못했습니다.</xref:System.ComponentModel.EditorAttribute.EditorTypeName%2A>       에 대 한 일반적인 내용은 특성을 사용 하 여 합니다. 참조 [특성](~/add/includes/ajax-current-ext-md.md)합니다. 디자인 타임 특성에 대 한 자세한 내용은 참조 하십시오. [특성 및 디자인 타임 지원](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example creates the `MyImage` class. The class is marked with an EditorAttribute that specifies the <xref:System.Drawing.Design.ImageEditor> as its editor.  \n  \n [!code-cs[Classic EditorAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._81_1.cs)]\n [!code-cpp[Classic EditorAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._81_1.cpp)]\n [!code-vb[Classic EditorAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._81_1.vb)]  \n  \n The following code example creates an instance of the `MyImage` class, gets the attributes for the class, and then prints the name of the editor used by `myNewImage`.  \n  \n [!code-cs[Classic EditorAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._81_2.cs)]\n [!code-cpp[Classic EditorAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._81_2.cpp)]\n [!code-vb[Classic EditorAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._81_2.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.All, AllowMultiple=true, Inherited=true)]

      public sealed class EditorAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorAttribute()
  nameWithType: EditorAttribute.EditorAttribute()
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.EditorAttribute&quot;> </xref> 편집기 없음 기본 편집기를 사용 하 여 클래스입니다."
  syntax:
    content: public EditorAttribute ();
    parameters: []
  overload: System.ComponentModel.EditorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorAttribute(String,String)
  nameWithType: EditorAttribute.EditorAttribute(String,String)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.EditorAttribute&quot;> </xref> 클래스 편집기의 기본 형식 이름 및 형식 이름입니다."
  remarks: "`typeName` 매개 변수에서 여야는 <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>형식.</xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>       <xref:System.Type>나타내는 `typeName` 매개 변수 중 하나에서 파생 하거나 구현 해야 합니다. 기본 클래스</xref:System.Type>       <xref:System.Type>나타내는 `baseTypeName` 매개 변수를 사용을 키로 특정 편집기를 찾는 데이터 형식에는 이와 관련 된 둘 이상의 편집기 있을 수 있으므로</xref:System.Type> 모든 클래스 수는 있지만 일반적으로 <xref:System.Drawing.Design.UITypeEditor>또는 <xref:System.ComponentModel.ComponentEditor>.</xref:System.ComponentModel.ComponentEditor> </xref:System.Drawing.Design.UITypeEditor> 이"
  syntax:
    content: public EditorAttribute (string typeName, string baseTypeName);
    parameters:
    - id: typeName
      type: System.String
      description: "편집기의 정규화 된 형식 이름입니다."
    - id: baseTypeName
      type: System.String
      description: "기본 클래스 또는 편집기에 대 한 조회 키로 사용 하는 인터페이스의 정규화 된 형식 이름입니다. 이 클래스 수 해야 하거나이 로부터 파생할 <xref href=&quot;System.Drawing.Design.UITypeEditor&quot;> </xref>합니다."
  overload: System.ComponentModel.EditorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorAttribute(String,Type)
  nameWithType: EditorAttribute.EditorAttribute(String,Type)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(String,Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.EditorAttribute&quot;> </xref> 된 형식 이름 및 기본 형식입니다."
  remarks: "`typeName` 매개 변수에서 여야는 <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>형식.</xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>       <xref:System.Type>나타내는 `typeName` 에서 파생 해야 하거나 기본 클래스 구현</xref:System.Type>       `baseType` 매개 변수를 사용을 키로 특정 편집기를 찾는 데이터 형식을 둘 이상의 편집기가 연결을 가질 수 있으므로 합니다."
  syntax:
    content: public EditorAttribute (string typeName, Type baseType);
    parameters:
    - id: typeName
      type: System.String
      description: "편집기의 정규화 된 형식 이름입니다."
    - id: baseType
      type: System.Type
      description: "<xref:System.Type>기본 클래스 또는 편집기에 대 한 조회 키로 사용 하는 인터페이스입니다.</xref:System.Type> 이 클래스 수 해야 하거나이 로부터 파생할 <xref href=&quot;System.Drawing.Design.UITypeEditor&quot;> </xref>합니다."
  overload: System.ComponentModel.EditorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)
  id: '#ctor(System.Type,System.Type)'
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorAttribute(Type,Type)
  nameWithType: EditorAttribute.EditorAttribute(Type,Type)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(Type,Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.EditorAttribute&quot;> </xref> 클래스 형식 및 기본 형식을 사용 합니다."
  remarks: "<xref:System.Type>나타내는 `type` 매개 변수 중 하나에서 파생 하거나 구현 해야 합니다. 기본 클래스</xref:System.Type>       `baseType` 매개 변수를 사용을 키로 특정 편집기를 찾는 데이터 형식을 둘 이상의 편집기가 연결을 가질 수 있으므로 합니다."
  syntax:
    content: public EditorAttribute (Type type, Type baseType);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>편집기의 형식을 나타내는.</xref:System.Type>"
    - id: baseType
      type: System.Type
      description: "<xref:System.Type>기본 클래스 또는 편집기에 대 한 조회 키로 사용 하는 인터페이스입니다.</xref:System.Type> 이 클래스 수 해야 하거나이 로부터 파생할 <xref href=&quot;System.Drawing.Design.UITypeEditor&quot;> </xref>합니다."
  overload: System.ComponentModel.EditorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.EditorBaseTypeName
  id: EditorBaseTypeName
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorBaseTypeName
  nameWithType: EditorAttribute.EditorBaseTypeName
  fullName: System.ComponentModel.EditorAttribute.EditorBaseTypeName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "기본 클래스 또는이 편집기에 대 한 조회 키로 인터페이스의 이름을 가져옵니다."
  remarks: "EditorBaseTypeName 속성 어셈블리 정규화 된 형식 이름입니다. [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] 둘 다 제공 <xref:System.Drawing.Design.UITypeEditor>및 <xref:System.ComponentModel.ComponentEditor>올바른 기본 클래스 하지만 모든 값은 유효한 여기.</xref:System.ComponentModel.ComponentEditor> </xref:System.Drawing.Design.UITypeEditor>"
  syntax:
    content: public string EditorBaseTypeName { get; }
    return:
      type: System.String
      description: "기본 클래스 또는이 편집기에 대 한 조회 키로 인터페이스의 이름입니다."
  overload: System.ComponentModel.EditorAttribute.EditorBaseTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.EditorTypeName
  id: EditorTypeName
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorTypeName
  nameWithType: EditorAttribute.EditorTypeName
  fullName: System.ComponentModel.EditorAttribute.EditorTypeName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "편집기 클래스의 이름을 가져옵니다는 &lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName&gt; 형식입니다."
  syntax:
    content: public string EditorTypeName { get; }
    return:
      type: System.String
      description: "편집기 클래스의 이름을 &lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName&gt; 형식입니다."
  overload: System.ComponentModel.EditorAttribute.EditorTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: EditorAttribute.Equals(Object)
  fullName: System.ComponentModel.EditorAttribute.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "지정된 된 개체의 값을 현재 같은지 여부를 반환 <xref href=&quot;System.ComponentModel.EditorAttribute&quot;> </xref>합니다."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "값이 같은지를 테스트 하는 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정된 된 개체의 값은; 현재 개체의 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.EditorAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: EditorAttribute.GetHashCode()
  fullName: System.ComponentModel.EditorAttribute.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "이 인스턴스에 대 한 해시 코드를 반환합니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "부호 있는 32 비트 정수 해시 코드입니다."
  overload: System.ComponentModel.EditorAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.TypeId
  id: TypeId
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: TypeId
  nameWithType: EditorAttribute.TypeId
  fullName: System.ComponentModel.EditorAttribute.TypeId
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "이 특성 유형에 대 한 고유 ID를 가져옵니다."
  remarks: "TypeId 속성은 동일한 형식이 두 가지 특성을 식별 하려면 필터링 알고리즘에서 사용 됩니다. 대부분의 특성에 대 한이 반환 된 <xref:System.Type>특성에 대 한 인스턴스.</xref:System.Type> <xref:System.ComponentModel.EditorAttribute>편집기 기본 형식 유형을 포함 하려면이 옵션을 재정의 합니다.</xref:System.ComponentModel.EditorAttribute>"
  syntax:
    content: public override object TypeId { get; }
    return:
      type: System.Object
      description: "이 특성 유형에 대 한 고유 ID입니다."
  overload: System.ComponentModel.EditorAttribute.TypeId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.EditorAttribute.#ctor
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorAttribute()
  nameWithType: EditorAttribute.EditorAttribute()
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute()
- uid: System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorAttribute(String,String)
  nameWithType: EditorAttribute.EditorAttribute(String,String)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorAttribute(String,Type)
  nameWithType: EditorAttribute.EditorAttribute(String,Type)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(String,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorAttribute(Type,Type)
  nameWithType: EditorAttribute.EditorAttribute(Type,Type)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(Type,Type)
- uid: System.ComponentModel.EditorAttribute.EditorBaseTypeName
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorBaseTypeName
  nameWithType: EditorAttribute.EditorBaseTypeName
  fullName: System.ComponentModel.EditorAttribute.EditorBaseTypeName
- uid: System.ComponentModel.EditorAttribute.EditorTypeName
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorTypeName
  nameWithType: EditorAttribute.EditorTypeName
  fullName: System.ComponentModel.EditorAttribute.EditorTypeName
- uid: System.ComponentModel.EditorAttribute.Equals(System.Object)
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: EditorAttribute.Equals(Object)
  fullName: System.ComponentModel.EditorAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.EditorAttribute.GetHashCode
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: EditorAttribute.GetHashCode()
  fullName: System.ComponentModel.EditorAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.EditorAttribute.TypeId
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: TypeId
  nameWithType: EditorAttribute.TypeId
  fullName: System.ComponentModel.EditorAttribute.TypeId
- uid: System.ComponentModel.EditorAttribute.#ctor*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorAttribute
  nameWithType: EditorAttribute.EditorAttribute
- uid: System.ComponentModel.EditorAttribute.EditorBaseTypeName*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorBaseTypeName
  nameWithType: EditorAttribute.EditorBaseTypeName
- uid: System.ComponentModel.EditorAttribute.EditorTypeName*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorTypeName
  nameWithType: EditorAttribute.EditorTypeName
- uid: System.ComponentModel.EditorAttribute.Equals*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: Equals
  nameWithType: EditorAttribute.Equals
- uid: System.ComponentModel.EditorAttribute.GetHashCode*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: EditorAttribute.GetHashCode
- uid: System.ComponentModel.EditorAttribute.TypeId*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: TypeId
  nameWithType: EditorAttribute.TypeId
