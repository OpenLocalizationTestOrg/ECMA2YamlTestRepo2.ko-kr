### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.CreateChildAccessRule
  id: CreateChildAccessRule
  children:
  - System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)
  - System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)
  - System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)
  - System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)
  - System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)
  - System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)
  langs:
  - csharp
  name: CreateChildAccessRule
  nameWithType: CreateChildAccessRule
  fullName: System.DirectoryServices.CreateChildAccessRule
  type: Class
  summary: "CreateChildAccessRule 클래스는 특정 형식의 권한을 허용 하거나 거부 Active Directory 도메인 서비스 개체의 하위 개체를 만들 데 사용 되는 액세스 규칙을 나타냅니다."
  syntax:
    content: 'public sealed class CreateChildAccessRule : System.DirectoryServices.ActiveDirectoryAccessRule'
  inheritance:
  - System.Object
  - System.Security.AccessControl.AuthorizationRule
  - System.Security.AccessControl.AccessRule
  - System.Security.AccessControl.ObjectAccessRule
  - System.DirectoryServices.ActiveDirectoryAccessRule
  implements: []
  inheritedMembers:
  - System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights
  - System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType
  - System.Security.AccessControl.AccessRule.AccessControlType
  - System.Security.AccessControl.AuthorizationRule.AccessMask
  - System.Security.AccessControl.AuthorizationRule.IdentityReference
  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  - System.Security.AccessControl.AuthorizationRule.IsInherited
  - System.Security.AccessControl.AuthorizationRule.PropagationFlags
  - System.Security.AccessControl.ObjectAccessRule.InheritedObjectType
  - System.Security.AccessControl.ObjectAccessRule.ObjectFlags
  - System.Security.AccessControl.ObjectAccessRule.ObjectType
  platform:
  - net462
- uid: System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)'
  parent: System.DirectoryServices.CreateChildAccessRule
  langs:
  - csharp
  name: CreateChildAccessRule(IdentityReference,AccessControlType)
  nameWithType: CreateChildAccessRule.CreateChildAccessRule(IdentityReference,AccessControlType)
  fullName: System.DirectoryServices.CreateChildAccessRule.CreateChildAccessRule(IdentityReference,AccessControlType)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.DirectoryServices.CreateChildAccessRule&quot;> </xref> 지정 된 id 참조와 액세스 제어 형식 사용 합니다."
  remarks: "이 생성자를 사용 하는 경우 모든 하위 형식에 적용 되는 create 자식 액세스 규칙을 만듭니다."
  syntax:
    content: public CreateChildAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> 액세스 규칙의 트러스티를 식별 하는 개체입니다."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> 액세스 규칙 형식을 지정 하는 열거형 값입니다."
  overload: System.DirectoryServices.CreateChildAccessRule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)'
  parent: System.DirectoryServices.CreateChildAccessRule
  langs:
  - csharp
  name: CreateChildAccessRule(IdentityReference,AccessControlType,ActiveDirectorySecurityInheritance)
  nameWithType: CreateChildAccessRule.CreateChildAccessRule(IdentityReference,AccessControlType,ActiveDirectorySecurityInheritance)
  fullName: System.DirectoryServices.CreateChildAccessRule.CreateChildAccessRule(IdentityReference,AccessControlType,ActiveDirectorySecurityInheritance)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.DirectoryServices.CreateChildAccessRule&quot;> </xref> 된 지정 된 id 참조, 액세스 제어 형식 및 Active Directory 도메인 서비스 보안 상속 정보입니다."
  remarks: "이 생성자를 사용 하는 경우 모든 하위 형식에 적용 되는 create 자식 액세스 규칙을 만듭니다."
  syntax:
    content: public CreateChildAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.AccessControlType type, System.DirectoryServices.ActiveDirectorySecurityInheritance inheritanceType);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> 액세스 규칙의 트러스티를 식별 하는 개체입니다."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> 액세스 규칙 형식을 지정 하는 열거형 값입니다."
    - id: inheritanceType
      type: System.DirectoryServices.ActiveDirectorySecurityInheritance
      description: "중 하나는 <xref href=&quot;System.DirectoryServices.ActiveDirectorySecurityInheritance&quot;> </xref> 액세스 규칙의 상속 형식을 지정 하는 열거형 값입니다."
  overload: System.DirectoryServices.CreateChildAccessRule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)'
  parent: System.DirectoryServices.CreateChildAccessRule
  langs:
  - csharp
  name: CreateChildAccessRule(IdentityReference,AccessControlType,Guid)
  nameWithType: CreateChildAccessRule.CreateChildAccessRule(IdentityReference,AccessControlType,Guid)
  fullName: System.DirectoryServices.CreateChildAccessRule.CreateChildAccessRule(IdentityReference,AccessControlType,Guid)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.DirectoryServices.CreateChildAccessRule&quot;> </xref> 클래스 지정 된 id 참조, 액세스 제어 형식 및 자식 개체 유형을 포함 합니다."
  syntax:
    content: public CreateChildAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.AccessControlType type, Guid childType);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> 액세스 규칙의 트러스티를 식별 하는 개체입니다."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> 액세스 규칙 형식을 지정 하는 열거형 값입니다."
    - id: childType
      type: System.Guid
      description: "스키마의 GUID 만들 수 없거나 또는 수 있는 자식 개체의 형식입니다. 이것이 <xref:System.Guid>, 모든 자식 형식에 대 한 액세스 규칙이 적용 됩니다.</xref:System.Guid>"
  overload: System.DirectoryServices.CreateChildAccessRule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)'
  parent: System.DirectoryServices.CreateChildAccessRule
  langs:
  - csharp
  name: CreateChildAccessRule(IdentityReference,AccessControlType,ActiveDirectorySecurityInheritance,Guid)
  nameWithType: CreateChildAccessRule.CreateChildAccessRule(IdentityReference,AccessControlType,ActiveDirectorySecurityInheritance,Guid)
  fullName: System.DirectoryServices.CreateChildAccessRule.CreateChildAccessRule(IdentityReference,AccessControlType,ActiveDirectorySecurityInheritance,Guid)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.DirectoryServices.CreateChildAccessRule&quot;> </xref> 클래스 지정 된 id 참조, 액세스 제어 형식, Active Directory 도메인 서비스 보안 상속 정보 및 상속 된 개체 유형을 포함 합니다."
  remarks: "이 생성자를 사용 하는 경우 모든 하위 형식에 적용 되는 create 자식 액세스 규칙을 만듭니다."
  syntax:
    content: public CreateChildAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.AccessControlType type, System.DirectoryServices.ActiveDirectorySecurityInheritance inheritanceType, Guid inheritedObjectType);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> 액세스 규칙의 트러스티를 식별 하는 개체입니다."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> 액세스 규칙 형식을 지정 하는 열거형 값입니다."
    - id: inheritanceType
      type: System.DirectoryServices.ActiveDirectorySecurityInheritance
      description: "중 하나는 <xref href=&quot;System.DirectoryServices.ActiveDirectorySecurityInheritance&quot;> </xref> 액세스 규칙의 상속 형식을 지정 하는 열거형 값입니다."
    - id: inheritedObjectType
      type: System.Guid
      description: "스키마의 GUID이 액세스 규칙을 상속할 수 있는 자식 개체 형식입니다."
  overload: System.DirectoryServices.CreateChildAccessRule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)'
  parent: System.DirectoryServices.CreateChildAccessRule
  langs:
  - csharp
  name: CreateChildAccessRule(IdentityReference,AccessControlType,Guid,ActiveDirectorySecurityInheritance)
  nameWithType: CreateChildAccessRule.CreateChildAccessRule(IdentityReference,AccessControlType,Guid,ActiveDirectorySecurityInheritance)
  fullName: System.DirectoryServices.CreateChildAccessRule.CreateChildAccessRule(IdentityReference,AccessControlType,Guid,ActiveDirectorySecurityInheritance)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.DirectoryServices.CreateChildAccessRule&quot;> </xref> 된 지정 된 id 참조, 액세스 제어 형식, 자식 개체 유형 및 Active Directory 도메인 서비스 보안 상속 정보입니다."
  syntax:
    content: public CreateChildAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.AccessControlType type, Guid childType, System.DirectoryServices.ActiveDirectorySecurityInheritance inheritanceType);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> 액세스 규칙의 트러스티를 식별 하는 개체입니다."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> 액세스 규칙 형식을 지정 하는 열거형 값입니다."
    - id: childType
      type: System.Guid
      description: "스키마의 GUID 만들 수 없거나 또는 수 있는 자식 개체의 형식입니다. 이것이 <xref:System.Guid>, 모든 자식 형식에 대 한 액세스 규칙이 적용 됩니다.</xref:System.Guid>"
    - id: inheritanceType
      type: System.DirectoryServices.ActiveDirectorySecurityInheritance
      description: "중 하나는 <xref href=&quot;System.DirectoryServices.ActiveDirectorySecurityInheritance&quot;> </xref> 액세스 규칙의 상속 형식을 지정 하는 열거형 값입니다."
  overload: System.DirectoryServices.CreateChildAccessRule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)'
  parent: System.DirectoryServices.CreateChildAccessRule
  langs:
  - csharp
  name: CreateChildAccessRule(IdentityReference,AccessControlType,Guid,ActiveDirectorySecurityInheritance,Guid)
  nameWithType: CreateChildAccessRule.CreateChildAccessRule(IdentityReference,AccessControlType,Guid,ActiveDirectorySecurityInheritance,Guid)
  fullName: System.DirectoryServices.CreateChildAccessRule.CreateChildAccessRule(IdentityReference,AccessControlType,Guid,ActiveDirectorySecurityInheritance,Guid)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.DirectoryServices.CreateChildAccessRule&quot;> </xref> 지정 된 id 참조, 액세스 제어 형식, 자식 개체 유형, Active Directory 도메인 서비스 보안 상속 정보 및 상속 된 개체 클래스입니다."
  syntax:
    content: public CreateChildAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.AccessControlType type, Guid childType, System.DirectoryServices.ActiveDirectorySecurityInheritance inheritanceType, Guid inheritedObjectType);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> 액세스 규칙의 트러스티를 식별 하는 개체입니다."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> 액세스 규칙 형식을 지정 하는 열거형 값입니다."
    - id: childType
      type: System.Guid
      description: "스키마의 GUID 만들 수 없거나 또는 수 있는 자식 개체의 형식입니다. 이것이 <xref:System.Guid>, 모든 자식 형식에 대 한 액세스 규칙이 적용 됩니다.</xref:System.Guid>"
    - id: inheritanceType
      type: System.DirectoryServices.ActiveDirectorySecurityInheritance
      description: "중 하나는 <xref href=&quot;System.DirectoryServices.ActiveDirectorySecurityInheritance&quot;> </xref> 액세스 규칙의 상속 형식을 지정 하는 열거형 값입니다."
    - id: inheritedObjectType
      type: System.Guid
      description: "스키마의 GUID이 액세스 규칙을 상속할 수 있는 자식 개체 형식입니다."
  overload: System.DirectoryServices.CreateChildAccessRule.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.DirectoryServices.ActiveDirectoryAccessRule
  isExternal: false
  name: System.DirectoryServices.ActiveDirectoryAccessRule
- uid: System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)
  parent: System.DirectoryServices.CreateChildAccessRule
  isExternal: false
  name: CreateChildAccessRule(IdentityReference,AccessControlType)
  nameWithType: CreateChildAccessRule.CreateChildAccessRule(IdentityReference,AccessControlType)
  fullName: System.DirectoryServices.CreateChildAccessRule.CreateChildAccessRule(IdentityReference,AccessControlType)
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)
  parent: System.DirectoryServices.CreateChildAccessRule
  isExternal: false
  name: CreateChildAccessRule(IdentityReference,AccessControlType,ActiveDirectorySecurityInheritance)
  nameWithType: CreateChildAccessRule.CreateChildAccessRule(IdentityReference,AccessControlType,ActiveDirectorySecurityInheritance)
  fullName: System.DirectoryServices.CreateChildAccessRule.CreateChildAccessRule(IdentityReference,AccessControlType,ActiveDirectorySecurityInheritance)
- uid: System.DirectoryServices.ActiveDirectorySecurityInheritance
  parent: System.DirectoryServices
  isExternal: false
  name: ActiveDirectorySecurityInheritance
  nameWithType: ActiveDirectorySecurityInheritance
  fullName: System.DirectoryServices.ActiveDirectorySecurityInheritance
- uid: System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)
  parent: System.DirectoryServices.CreateChildAccessRule
  isExternal: false
  name: CreateChildAccessRule(IdentityReference,AccessControlType,Guid)
  nameWithType: CreateChildAccessRule.CreateChildAccessRule(IdentityReference,AccessControlType,Guid)
  fullName: System.DirectoryServices.CreateChildAccessRule.CreateChildAccessRule(IdentityReference,AccessControlType,Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)
  parent: System.DirectoryServices.CreateChildAccessRule
  isExternal: false
  name: CreateChildAccessRule(IdentityReference,AccessControlType,ActiveDirectorySecurityInheritance,Guid)
  nameWithType: CreateChildAccessRule.CreateChildAccessRule(IdentityReference,AccessControlType,ActiveDirectorySecurityInheritance,Guid)
  fullName: System.DirectoryServices.CreateChildAccessRule.CreateChildAccessRule(IdentityReference,AccessControlType,ActiveDirectorySecurityInheritance,Guid)
- uid: System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)
  parent: System.DirectoryServices.CreateChildAccessRule
  isExternal: false
  name: CreateChildAccessRule(IdentityReference,AccessControlType,Guid,ActiveDirectorySecurityInheritance)
  nameWithType: CreateChildAccessRule.CreateChildAccessRule(IdentityReference,AccessControlType,Guid,ActiveDirectorySecurityInheritance)
  fullName: System.DirectoryServices.CreateChildAccessRule.CreateChildAccessRule(IdentityReference,AccessControlType,Guid,ActiveDirectorySecurityInheritance)
- uid: System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)
  parent: System.DirectoryServices.CreateChildAccessRule
  isExternal: false
  name: CreateChildAccessRule(IdentityReference,AccessControlType,Guid,ActiveDirectorySecurityInheritance,Guid)
  nameWithType: CreateChildAccessRule.CreateChildAccessRule(IdentityReference,AccessControlType,Guid,ActiveDirectorySecurityInheritance,Guid)
  fullName: System.DirectoryServices.CreateChildAccessRule.CreateChildAccessRule(IdentityReference,AccessControlType,Guid,ActiveDirectorySecurityInheritance,Guid)
- uid: System.DirectoryServices.CreateChildAccessRule.#ctor*
  parent: System.DirectoryServices.CreateChildAccessRule
  isExternal: false
  name: CreateChildAccessRule
  nameWithType: CreateChildAccessRule.CreateChildAccessRule
