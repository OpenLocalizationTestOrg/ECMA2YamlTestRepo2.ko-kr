### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ScriptReference
  id: ScriptReference
  children:
  - System.Web.UI.ScriptReference.#ctor
  - System.Web.UI.ScriptReference.#ctor(System.String)
  - System.Web.UI.ScriptReference.#ctor(System.String,System.String)
  - System.Web.UI.ScriptReference.Assembly
  - System.Web.UI.ScriptReference.GetUrl(System.Web.UI.ScriptManager,System.Boolean)
  - System.Web.UI.ScriptReference.IgnoreScriptPath
  - System.Web.UI.ScriptReference.IsAjaxFrameworkScript(System.Web.UI.ScriptManager)
  - System.Web.UI.ScriptReference.IsFromSystemWebExtensions
  - System.Web.UI.ScriptReference.Name
  - System.Web.UI.ScriptReference.ToString
  langs:
  - csharp
  name: ScriptReference
  nameWithType: ScriptReference
  fullName: System.Web.UI.ScriptReference
  type: Class
  summary: "ASP.NET 웹 페이지에서 사용 하기 위해 ECMAScript (JavaScript) 파일을 등록합니다."
  remarks: "ScriptReference 개체를 통해 등록 하 여 ASP.NET 웹 페이지에서 JavaScript 파일을 포함할 수 있습니다. 웹 사이트에서.js 파일 (정적 스크립트 파일)로 있는 스크립트 파일을 등록할 수 있습니다. 또한 어셈블리에 리소스로 포함 된 스크립트 파일을 등록할 수 있습니다. 스크립트 파일을 등록 한 후 웹 페이지에서 클라이언트 스크립트에서 해당 함수를 사용할 수 있습니다.       설정 하는 정적 스크립트 파일을 등록 하려면는 <xref:System.Web.UI.ScriptReferenceBase.Path%2A>파일의 상대 위치를 ScriptReference 개체의 속성입니다.</xref:System.Web.UI.ScriptReferenceBase.Path%2A>       어셈블리에 리소스로 포함 된 스크립트 파일을 등록 하려면 설정는 <xref:System.Web.UI.ScriptReference.Assembly%2A>속성 파일을 포함 하는 어셈블리의 이름입니다.</xref:System.Web.UI.ScriptReference.Assembly%2A> 다음 설정의 <xref:System.Web.UI.ScriptReference.Name%2A>속성을 어셈블리에 포함 된.js 파일의 이름입니다.</xref:System.Web.UI.ScriptReference.Name%2A> 이 경우 스크립트 파일이 포함 되어야 합니다, 연결 되지 않습니다.       <xref:System.Web.UI.ScriptReferenceBase.ScriptMode%2A>디버그 스크립트의 버전을 출시을 사용할지를 나타내는 속성을</xref:System.Web.UI.ScriptReferenceBase.ScriptMode%2A> 설정 하면       <xref:System.Web.UI.ScriptMode>독립 실행형 스크립트 파일 또는 어셈블리에 리소스로 포함 하는 스크립트 파일을 참조 하는지 여부에 따라 다른 결과 생성 하는 값입니다.</xref:System.Web.UI.ScriptMode> 독립 실행형 스크립트 파일을 사용 하 여 정의 된 <xref:System.Web.UI.ScriptReferenceBase.Path%2A>속성.</xref:System.Web.UI.ScriptReferenceBase.Path%2A> 어셈블리 참조를 통해 액세스 해야는 <xref:System.Web.UI.ScriptReference.Name%2A>및 <xref:System.Web.UI.ScriptReference.Assembly%2A>속성.</xref:System.Web.UI.ScriptReference.Assembly%2A> </xref:System.Web.UI.ScriptReference.Name%2A> 에 대 한 결과 <xref:System.Web.UI.ScriptMode>값은 다음과 같습니다:-독립 실행형 스크립트 파일에 적용 되는 경우 여기서는 <xref:System.Web.UI.ScriptReferenceBase.Path%2A>속성이 지정 된 <xref:System.Web.UI.ScriptMode>값은 <xref:System.Web.UI.ScriptMode>.</xref:System.Web.UI.ScriptMode> </xref:System.Web.UI.ScriptMode> </xref:System.Web.UI.ScriptReferenceBase.Path%2A> </xref:System.Web.UI.ScriptMode>      -스크립트 참조에 <xref:System.Web.UI.ScriptMode>해당 <xref:System.Web.UI.ScriptMode>.</xref:System.Web.UI.ScriptMode> 하</xref:System.Web.UI.ScriptMode> 는 어셈블리에 적용 된 경우 경우에 <xref:System.Web.UI.ScriptReference.Name%2A>지정 된, 스크립트를 참조 하는 데 사용 됩니다</xref:System.Web.UI.ScriptReference.Name%2A> 때 <xref:System.Web.UI.ScriptReference.Name%2A>및 <xref:System.Web.UI.ScriptReferenceBase.Path%2A>속성이 둘 다 지정는 <xref:System.Web.UI.ScriptReferenceBase.Path%2A>대신 속성은 사용 <xref:System.Web.UI.ScriptReference.Name%2A>, 하지만 <xref:System.Web.UI.ScriptMode>값은 여전히 <xref:System.Web.UI.ScriptMode>.</xref:System.Web.UI.ScriptMode> </xref:System.Web.UI.ScriptMode> </xref:System.Web.UI.ScriptReference.Name%2A> </xref:System.Web.UI.ScriptReferenceBase.Path%2A> </xref:System.Web.UI.ScriptReferenceBase.Path%2A> </xref:System.Web.UI.ScriptReference.Name%2A>"
  example:
  - "The following example shows how to reference a custom control and a JavaScript file that is embedded in the control assembly. The assembly is assumed to be in the Bin folder of the Web site. The custom control animates <xref:System.Web.UI.UpdatePanel> controls. The JavaScript file is compiled as an embedded resource that is named SampleControl.UpdatePanelAnimation.js. You register the embedded JavaScript file by using the <xref:System.Web.UI.ScriptReference.Assembly%2A> and <xref:System.Web.UI.ScriptReference.Name%2A> properties.  \n  \n To use this example, compile the JavaScript file that is shown in the example as an embedded resource with the custom control. Put the resulting assembly into the Bin folder of the Web site. For an example of how to embed a JavaScript file in an assembly, see [Walkthrough: Embedding a JavaScript File as a Resource in an Assembly](~/add/includes/ajax-current-ext-md.md).  \n  \n The following example shows a page that uses the custom control.  \n  \n [!code-cs[System.Web.UI.ScriptReference#1](~/add/codesnippet/csharp/t-system.web.ui.scriptre_0_1.aspx)]\n [!code-vb[System.Web.UI.ScriptReference#1](~/add/codesnippet/visualbasic/t-system.web.ui.scriptre_0_1.aspx)]  \n  \n The following example shows the custom control class definition.  \n  \n [!code-cs[System.Web.UI.ScriptReference#2](~/add/codesnippet/csharp/t-system.web.ui.scriptre_0_2.cs)]\n [!code-vb[System.Web.UI.ScriptReference#2](~/add/codesnippet/visualbasic/t-system.web.ui.scriptre_0_2.vb)]  \n  \n The following example shows the supporting JavaScript file.  \n  \n [!code-javascript[System.Web.UI.ScriptReference#3](~/add/codesnippet/javascript/t-system.web.ui.scriptre_0_3.js)]  \n  \n The following example shows code that you must add to the AssemblyInfo file of the project that contains the custom control and the JavaScript file.  \n  \n [!code-cs[System.Web.UI.ScriptReference#4](~/add/codesnippet/csharp/t-system.web.ui.scriptre_0_4.cs)]\n [!code-vb[System.Web.UI.ScriptReference#4](~/add/codesnippet/visualbasic/t-system.web.ui.scriptre_0_4.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Path")]

      public class ScriptReference : System.Web.UI.ScriptReferenceBase
  inheritance:
  - System.Object
  - System.Web.UI.ScriptReferenceBase
  implements: []
  inheritedMembers:
  - System.Web.UI.ScriptReferenceBase.NotifyScriptLoaded
  - System.Web.UI.ScriptReferenceBase.Path
  - System.Web.UI.ScriptReferenceBase.ReplaceExtension(System.String)
  - System.Web.UI.ScriptReferenceBase.ResourceUICultures
  - System.Web.UI.ScriptReferenceBase.ScriptMode
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.#ctor
  id: '#ctor'
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: ScriptReference()
  nameWithType: ScriptReference.ScriptReference()
  fullName: System.Web.UI.ScriptReference.ScriptReference()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.ScriptReference&quot;> </xref> 클래스입니다."
  syntax:
    content: public ScriptReference ();
    parameters: []
  overload: System.Web.UI.ScriptReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: ScriptReference(String)
  nameWithType: ScriptReference.ScriptReference(String)
  fullName: System.Web.UI.ScriptReference.ScriptReference(String)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.ScriptReference&quot;> </xref> 지정된 된 경로 사용 하 여 클래스입니다."
  syntax:
    content: public ScriptReference (string path);
    parameters:
    - id: path
      type: System.String
      description: "웹 페이지를 기준으로 클라이언트 스크립트 파일의 경로입니다."
  overload: System.Web.UI.ScriptReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: ScriptReference(String,String)
  nameWithType: ScriptReference.ScriptReference(String,String)
  fullName: System.Web.UI.ScriptReference.ScriptReference(String,String)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.ScriptReference&quot;> </xref> 지정한 이름 및 어셈블리를 사용 하 여 클래스입니다."
  syntax:
    content: public ScriptReference (string name, string assembly);
    parameters:
    - id: name
      type: System.String
      description: "어셈블리에 포함 하는 스크립트 파일의 이름입니다."
    - id: assembly
      type: System.String
      description: "포함된 리소스는 클라이언트 스크립트 파일을 포함 하는 어셈블리의 이름입니다."
  overload: System.Web.UI.ScriptReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.Assembly
  id: Assembly
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: Assembly
  nameWithType: ScriptReference.Assembly
  fullName: System.Web.UI.ScriptReference.Assembly
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "포함된 리소스는 클라이언트 스크립트 파일을 포함 하는 어셈블리의 이름을 가져오거나 설정 합니다."
  remarks: "어셈블리에 포함 리소스로 포함 된 클라이언트 스크립트 파일을 참조할 때 어셈블리 속성을 설정 합니다. 정규화 되거나 부분적으로 정규화 된 어셈블리 이름으로 어셈블리를 설정 합니다. 정규화 된 어셈블리 이름에는 이름, culture, 공개 키 및 버전 번호 포함 됩니다. 부분적으로 정규화 된 어셈블리 이름에는 이름만 포함 됩니다.       에 포함된 된 리소스의 이름을 지정 하 고 또한 해야 어셈블리에 대 한 값을 지정 하는 경우는 <xref:System.Web.UI.ScriptReference.Name%2A>속성.</xref:System.Web.UI.ScriptReference.Name%2A> 그렇지 않은 경우는 <xref:System.InvalidOperationException>throw 됩니다.</xref:System.InvalidOperationException>       참조 되는 어셈블리를 전역 어셈블리 캐시 또는 웹 사이트의 Bin 폴더에 있어야 합니다."
  example:
  - "The following example shows how to reference a custom control and a JavaScript file that is embedded in the control assembly. The assembly is assumed to be in the Bin folder of the Web site. The custom control animates <xref:System.Web.UI.UpdatePanel> controls. The JavaScript file is compiled as an embedded resource that is named SampleControl.UpdatePanelAnimation.js. You register the embedded JavaScript file by using the Assembly and <xref:System.Web.UI.ScriptReference.Name%2A> properties.  \n  \n To use this example, compile the JavaScript file that is shown in the example as an embedded resource with the custom control. Put the resulting assembly into the Bin folder of the Web site. For an example of how to embed a JavaScript file in an assembly, see [Walkthrough: Embedding a JavaScript File as a Resource in an Assembly](~/add/includes/ajax-current-ext-md.md).  \n  \n The following example shows a page that uses the custom control.  \n  \n [!code-cs[System.Web.UI.ScriptReference#1](~/add/codesnippet/csharp/p-system.web.ui.scriptre_1_1.aspx)]\n [!code-vb[System.Web.UI.ScriptReference#1](~/add/codesnippet/visualbasic/p-system.web.ui.scriptre_1_1.aspx)]  \n  \n The following example shows the custom control class definition.  \n  \n [!code-cs[System.Web.UI.ScriptReference#2](~/add/codesnippet/csharp/p-system.web.ui.scriptre_1_2.cs)]\n [!code-vb[System.Web.UI.ScriptReference#2](~/add/codesnippet/visualbasic/p-system.web.ui.scriptre_1_2.vb)]  \n  \n The following example shows the supporting JavaScript file.  \n  \n [!code-javascript[System.Web.UI.ScriptReference#3](~/add/codesnippet/javascript/p-system.web.ui.scriptre_1_3.js)]  \n  \n The following example shows code that you must add to the AssemblyInfo file of the project that contains the custom control and the JavaScript file.  \n  \n [!code-cs[System.Web.UI.ScriptReference#4](~/add/codesnippet/csharp/p-system.web.ui.scriptre_1_4.cs)]\n [!code-vb[System.Web.UI.ScriptReference#4](~/add/codesnippet/visualbasic/p-system.web.ui.scriptre_1_4.vb)]"
  syntax:
    content: public string Assembly { get; set; }
    return:
      type: System.String
      description: "포함 리소스로 클라이언트 스크립트 파일을 포함 하는 어셈블리의 정규화 또는 부분적으로 정규화 된 이름입니다."
  overload: System.Web.UI.ScriptReference.Assembly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.GetUrl(System.Web.UI.ScriptManager,System.Boolean)
  id: GetUrl(System.Web.UI.ScriptManager,System.Boolean)
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: GetUrl(ScriptManager,Boolean)
  nameWithType: ScriptReference.GetUrl(ScriptManager,Boolean)
  fullName: System.Web.UI.ScriptReference.GetUrl(ScriptManager,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "URL의 값으로 렌더링 되는 검색는 <xref uid=&quot;langword_csharp_src&quot; name=&quot;src&quot; href=&quot;&quot;> </xref> 특성에는 <xref uid=&quot;langword_csharp_script&quot; name=&quot;script&quot; href=&quot;&quot;> </xref> 요소입니다."
  syntax:
    content: protected override string GetUrl (System.Web.UI.ScriptManager scriptManager, bool zip);
    parameters:
    - id: scriptManager
      type: System.Web.UI.ScriptManager
      description: "<xref uid=&quot;langword_csharp_ScriptManager&quot; name=&quot;ScriptManager&quot; href=&quot;&quot;> </xref> 대상 웹 페이지에서 제어 합니다."
    - id: zip
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>스크립트; 압축 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.String
      description: "값으로 렌더링 되는 URL을 포함 하는 문자열은 <xref uid=&quot;langword_csharp_src&quot; name=&quot;src&quot; href=&quot;&quot;> </xref> 특성에는 <xref uid=&quot;langword_csharp_script&quot; name=&quot;script&quot; href=&quot;&quot;> </xref> 요소입니다."
  overload: System.Web.UI.ScriptReference.GetUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.IgnoreScriptPath
  id: IgnoreScriptPath
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: IgnoreScriptPath
  nameWithType: ScriptReference.IgnoreScriptPath
  fullName: System.Web.UI.ScriptReference.IgnoreScriptPath
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "표시 하는 값을 가져오거나 설정 합니다. 여부는 <xref:System.Web.UI.ScriptManager.ScriptPath*>속성 리소스에서 클라이언트 스크립트 파일을 등록할 때 URL에 포함 되어 있습니다.</xref:System.Web.UI.ScriptManager.ScriptPath*>"
  remarks: "IgnoreScriptPath을 설정 하면 `true` 클라이언트 스크립트 파일을 포함 하지 않고 등록 하려는 경우는 <xref:System.Web.UI.ScriptManager.ScriptPath%2A>스크립트 파일의 URL의 값입니다.</xref:System.Web.UI.ScriptManager.ScriptPath%2A>"
  syntax:
    content: public bool IgnoreScriptPath { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>클라이언트 스크립트;을 등록 하는 경우 스크립트 경로 사용 하지 않는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.ScriptReference.IgnoreScriptPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.IsAjaxFrameworkScript(System.Web.UI.ScriptManager)
  id: IsAjaxFrameworkScript(System.Web.UI.ScriptManager)
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: IsAjaxFrameworkScript(ScriptManager)
  nameWithType: ScriptReference.IsAjaxFrameworkScript(ScriptManager)
  fullName: System.Web.UI.ScriptReference.IsAjaxFrameworkScript(ScriptManager)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "스크립트 참조에 AJAX 스크립트 인지 확인 합니다."
  syntax:
    content: protected override bool IsAjaxFrameworkScript (System.Web.UI.ScriptManager scriptManager);
    parameters:
    - id: scriptManager
      type: System.Web.UI.ScriptManager
      description: "A <xref href=&quot;System.Web.UI.ScriptManager&quot;></xref> object."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>스크립트 참조에 AJAX 스크립트; 이면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.ScriptReference.IsAjaxFrameworkScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.IsFromSystemWebExtensions
  id: IsFromSystemWebExtensions
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: IsFromSystemWebExtensions()
  nameWithType: ScriptReference.IsFromSystemWebExtensions()
  fullName: System.Web.UI.ScriptReference.IsFromSystemWebExtensions()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "복합 스크립트 ASP.NET AJAX framework 스크립트에 대 한 참조가 포함 되어 있는지 여부를 나타냅니다."
  syntax:
    content: protected override bool IsFromSystemWebExtensions ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>복합 스크립트 ASP.NET AJAX framework 스크립트;에 대 한 참조를 포함 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.ScriptReference.IsFromSystemWebExtensions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.Name
  id: Name
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: Name
  nameWithType: ScriptReference.Name
  fullName: System.Web.UI.ScriptReference.Name
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "클라이언트 스크립트 파일을 포함 하는 포함 된 리소스의 이름을 가져오거나 설정 합니다."
  remarks: "설정한 Name 속성은 어셈블리에 리소스로 포함 된 클라이언트 스크립트 파일을 참조 합니다.       모두에 대 한 값을 정의 하는 경우는 <xref:System.Web.UI.ScriptReferenceBase.Path%2A>및 이름 속성 동일한 스크립트 참조에는 <xref:System.Web.UI.ScriptReferenceBase.Path%2A>속성이 우선 합니다.</xref:System.Web.UI.ScriptReferenceBase.Path%2A> </xref:System.Web.UI.ScriptReferenceBase.Path%2A>"
  example:
  - "The following example shows how to reference a custom control and a JavaScript file that is embedded in the control assembly. The assembly is assumed to be in the Bin folder of the Web site. The custom control animates <xref:System.Web.UI.UpdatePanel> controls. The JavaScript file is compiled as an embedded resource that is named SampleControl.UpdatePanelAnimation.js. You register the embedded JavaScript file by using the <xref:System.Web.UI.ScriptReference.Assembly%2A> and Name properties.  \n  \n To use this example, compile the JavaScript file that is shown in the example as an embedded resource with the custom control. Put the resulting assembly into the Bin folder of the Web site. For an example of how to embed a JavaScript file in an assembly, see [Walkthrough: Embedding a JavaScript File as a Resource in an Assembly](~/add/includes/ajax-current-ext-md.md).  \n  \n The following example shows a page that uses the custom control.  \n  \n [!code-cs[System.Web.UI.ScriptReference#1](~/add/codesnippet/csharp/p-system.web.ui.scriptre_4_1.aspx)]\n [!code-vb[System.Web.UI.ScriptReference#1](~/add/codesnippet/visualbasic/p-system.web.ui.scriptre_4_1.aspx)]  \n  \n The following example shows the custom control class definition.  \n  \n [!code-cs[System.Web.UI.ScriptReference#2](~/add/codesnippet/csharp/p-system.web.ui.scriptre_4_2.cs)]\n [!code-vb[System.Web.UI.ScriptReference#2](~/add/codesnippet/visualbasic/p-system.web.ui.scriptre_4_2.vb)]  \n  \n The following example shows the supporting JavaScript file.  \n  \n [!code-javascript[System.Web.UI.ScriptReference#3](~/add/codesnippet/javascript/p-system.web.ui.scriptre_4_3.js)]  \n  \n The following example shows code that you must add to the AssemblyInfo file of the project that contains the custom control and the JavaScript file.  \n  \n [!code-cs[System.Web.UI.ScriptReference#4](~/add/codesnippet/csharp/p-system.web.ui.scriptre_4_4.cs)]\n [!code-vb[System.Web.UI.ScriptReference#4](~/add/codesnippet/visualbasic/p-system.web.ui.scriptre_4_4.vb)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "어셈블리에 리소스로 포함 하는 클라이언트 스크립트 파일의 이름입니다."
  overload: System.Web.UI.ScriptReference.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.ToString
  id: ToString
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: ToString()
  nameWithType: ScriptReference.ToString()
  fullName: System.Web.UI.ScriptReference.ToString()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "값을 나타내는 문자열을 반환는 <> </> *> 속성에는 <> </> *> 속성 또는 형식 이름입니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "값은 <> </> *> 정의 되어 있는 경우 속성의 값 이나는 <> </> *> 정의 된 상태가 아니면 속성 값는 <xref:System.Reflection.MemberInfo.Name*>속성.</xref:System.Reflection.MemberInfo.Name*>"
  overload: System.Web.UI.ScriptReference.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.ScriptReferenceBase
  isExternal: false
  name: System.Web.UI.ScriptReferenceBase
- uid: System.Web.UI.ScriptReference.#ctor
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: ScriptReference()
  nameWithType: ScriptReference.ScriptReference()
  fullName: System.Web.UI.ScriptReference.ScriptReference()
- uid: System.Web.UI.ScriptReference.#ctor(System.String)
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: ScriptReference(String)
  nameWithType: ScriptReference.ScriptReference(String)
  fullName: System.Web.UI.ScriptReference.ScriptReference(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ScriptReference.#ctor(System.String,System.String)
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: ScriptReference(String,String)
  nameWithType: ScriptReference.ScriptReference(String,String)
  fullName: System.Web.UI.ScriptReference.ScriptReference(String,String)
- uid: System.Web.UI.ScriptReference.Assembly
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: Assembly
  nameWithType: ScriptReference.Assembly
  fullName: System.Web.UI.ScriptReference.Assembly
- uid: System.Web.UI.ScriptReference.GetUrl(System.Web.UI.ScriptManager,System.Boolean)
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: GetUrl(ScriptManager,Boolean)
  nameWithType: ScriptReference.GetUrl(ScriptManager,Boolean)
  fullName: System.Web.UI.ScriptReference.GetUrl(ScriptManager,Boolean)
- uid: System.Web.UI.ScriptManager
  parent: System.Web.UI
  isExternal: false
  name: ScriptManager
  nameWithType: ScriptManager
  fullName: System.Web.UI.ScriptManager
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ScriptReference.IgnoreScriptPath
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: IgnoreScriptPath
  nameWithType: ScriptReference.IgnoreScriptPath
  fullName: System.Web.UI.ScriptReference.IgnoreScriptPath
- uid: System.Web.UI.ScriptReference.IsAjaxFrameworkScript(System.Web.UI.ScriptManager)
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: IsAjaxFrameworkScript(ScriptManager)
  nameWithType: ScriptReference.IsAjaxFrameworkScript(ScriptManager)
  fullName: System.Web.UI.ScriptReference.IsAjaxFrameworkScript(ScriptManager)
- uid: System.Web.UI.ScriptReference.IsFromSystemWebExtensions
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: IsFromSystemWebExtensions()
  nameWithType: ScriptReference.IsFromSystemWebExtensions()
  fullName: System.Web.UI.ScriptReference.IsFromSystemWebExtensions()
- uid: System.Web.UI.ScriptReference.Name
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: Name
  nameWithType: ScriptReference.Name
  fullName: System.Web.UI.ScriptReference.Name
- uid: System.Web.UI.ScriptReference.ToString
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: ToString()
  nameWithType: ScriptReference.ToString()
  fullName: System.Web.UI.ScriptReference.ToString()
- uid: System.Web.UI.ScriptReference.#ctor*
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: ScriptReference
  nameWithType: ScriptReference.ScriptReference
- uid: System.Web.UI.ScriptReference.Assembly*
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: Assembly
  nameWithType: ScriptReference.Assembly
- uid: System.Web.UI.ScriptReference.GetUrl*
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: GetUrl
  nameWithType: ScriptReference.GetUrl
- uid: System.Web.UI.ScriptReference.IgnoreScriptPath*
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: IgnoreScriptPath
  nameWithType: ScriptReference.IgnoreScriptPath
- uid: System.Web.UI.ScriptReference.IsAjaxFrameworkScript*
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: IsAjaxFrameworkScript
  nameWithType: ScriptReference.IsAjaxFrameworkScript
- uid: System.Web.UI.ScriptReference.IsFromSystemWebExtensions*
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: IsFromSystemWebExtensions
  nameWithType: ScriptReference.IsFromSystemWebExtensions
- uid: System.Web.UI.ScriptReference.Name*
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: Name
  nameWithType: ScriptReference.Name
- uid: System.Web.UI.ScriptReference.ToString*
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: ToString
  nameWithType: ScriptReference.ToString
