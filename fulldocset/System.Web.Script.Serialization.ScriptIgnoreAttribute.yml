### YamlMime:ManagedReference
items:
- uid: System.Web.Script.Serialization.ScriptIgnoreAttribute
  id: ScriptIgnoreAttribute
  children:
  - System.Web.Script.Serialization.ScriptIgnoreAttribute.#ctor
  - System.Web.Script.Serialization.ScriptIgnoreAttribute.ApplyToOverrides
  langs:
  - csharp
  name: ScriptIgnoreAttribute
  nameWithType: ScriptIgnoreAttribute
  fullName: System.Web.Script.Serialization.ScriptIgnoreAttribute
  type: Class
  summary: "지정 하는 <xref href=&quot;System.Web.Script.Serialization.JavaScriptSerializer&quot;> </xref> 공용 속성 또는 public 필드를 serialize 하지 것입니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "다음 공용 속성 또는 클래스의 public 필드 ScriptIgnoreAttribute을 적용 하는 경우 <xref:System.Web.Script.Serialization.JavaScriptSerializer>를 무시 또는 개체 JSON (JavaScript Notation) 형식으로 클래스의 인스턴스를 직렬화 할 때 멤버를 건너뜁니다.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       ScriptIgnoreAttribute 경우 영향을 미치지 것입니다는 <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>속성이 `Xml`.</xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A> XML 형식으로 직렬화 할 때 동일한 동작을 포함 하려는 경우 <xref:System.Xml.Serialization.XmlIgnoreAttribute>속성 또는 필드에 적용 해야 대신.</xref:System.Xml.Serialization.XmlIgnoreAttribute> 즉, <xref:System.Xml.Serialization.XmlSerializer> <xref:System.Web.Script.Serialization.JavaScriptSerializer>.</xref:System.Web.Script.Serialization.JavaScriptSerializer> 대신</xref:System.Xml.Serialization.XmlSerializer> 사용 하 여 serialize 되는 클래스       두 ScriptIgnoreAttribute 적용할 수 있습니다 및 <xref:System.Xml.Serialization.XmlIgnoreAttribute>속성 또는 필드에.</xref:System.Xml.Serialization.XmlIgnoreAttribute> 이 경우, 속성 또는 필드에는 JSON 및 XML 응답 형식에 대 한 무시 됩니다.       특성을 사용 하는 방법에 대 한 자세한 내용은 참조 [특성](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example demonstrates how to apply ScriptIgnoreAttribute to the `Comment` field in the custom class named `Group`. This instructs <xref:System.Web.Script.Serialization.JavaScriptSerializer> to ignore the field when serializing an instance of the class to JSON format.  \n  \n [!code-vb[System.Web.Script.Serialization.ScriptIgnoreAttribute#1](~/add/codesnippet/visualbasic/t-system.web.script.seri_4_1.vb)]\n [!code-cs[System.Web.Script.Serialization.ScriptIgnoreAttribute#1](~/add/codesnippet/csharp/t-system.web.script.seri_4_1.cs)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false, Inherited=true)]

      public sealed class ScriptIgnoreAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.ScriptIgnoreAttribute.#ctor
  id: '#ctor'
  parent: System.Web.Script.Serialization.ScriptIgnoreAttribute
  langs:
  - csharp
  name: ScriptIgnoreAttribute()
  nameWithType: ScriptIgnoreAttribute.ScriptIgnoreAttribute()
  fullName: System.Web.Script.Serialization.ScriptIgnoreAttribute.ScriptIgnoreAttribute()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.Script.Serialization.ScriptIgnoreAttribute&quot;> </xref> 클래스입니다."
  syntax:
    content: public ScriptIgnoreAttribute ();
    parameters: []
  overload: System.Web.Script.Serialization.ScriptIgnoreAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.ScriptIgnoreAttribute.ApplyToOverrides
  id: ApplyToOverrides
  parent: System.Web.Script.Serialization.ScriptIgnoreAttribute
  langs:
  - csharp
  name: ApplyToOverrides
  nameWithType: ScriptIgnoreAttribute.ApplyToOverrides
  fullName: System.Web.Script.Serialization.ScriptIgnoreAttribute.ApplyToOverrides
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "재정의할지 여부를 설정 하거나 가져옵니다는 <xref href=&quot;System.Web.Script.Serialization.ScriptIgnoreAttribute&quot;> </xref> 있도록는 <xref href=&quot;System.Web.Script.Serialization.JavaScriptSerializer&quot;> </xref> 공용 속성이 나 공용 필드의 serialization을 고려 합니다."
  syntax:
    content: public bool ApplyToOverrides { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>재정의 하는 <xref href=&quot;System.Web.Script.Serialization.ScriptIgnoreAttribute&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Script.Serialization.ScriptIgnoreAttribute.ApplyToOverrides*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Web.Script.Serialization.ScriptIgnoreAttribute.#ctor
  parent: System.Web.Script.Serialization.ScriptIgnoreAttribute
  isExternal: false
  name: ScriptIgnoreAttribute()
  nameWithType: ScriptIgnoreAttribute.ScriptIgnoreAttribute()
  fullName: System.Web.Script.Serialization.ScriptIgnoreAttribute.ScriptIgnoreAttribute()
- uid: System.Web.Script.Serialization.ScriptIgnoreAttribute.ApplyToOverrides
  parent: System.Web.Script.Serialization.ScriptIgnoreAttribute
  isExternal: false
  name: ApplyToOverrides
  nameWithType: ScriptIgnoreAttribute.ApplyToOverrides
  fullName: System.Web.Script.Serialization.ScriptIgnoreAttribute.ApplyToOverrides
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Script.Serialization.ScriptIgnoreAttribute.#ctor*
  parent: System.Web.Script.Serialization.ScriptIgnoreAttribute
  isExternal: false
  name: ScriptIgnoreAttribute
  nameWithType: ScriptIgnoreAttribute.ScriptIgnoreAttribute
- uid: System.Web.Script.Serialization.ScriptIgnoreAttribute.ApplyToOverrides*
  parent: System.Web.Script.Serialization.ScriptIgnoreAttribute
  isExternal: false
  name: ApplyToOverrides
  nameWithType: ScriptIgnoreAttribute.ApplyToOverrides
