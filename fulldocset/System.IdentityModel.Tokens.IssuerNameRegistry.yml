### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.IssuerNameRegistry
  id: IssuerNameRegistry
  children:
  - System.IdentityModel.Tokens.IssuerNameRegistry.#ctor
  - System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)
  - System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName
  - System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)
  langs:
  - csharp
  name: IssuerNameRegistry
  nameWithType: IssuerNameRegistry
  fullName: System.IdentityModel.Tokens.IssuerNameRegistry
  type: Class
  summary: "발급자 이름 레지스트리에 대 한 추상 기본 클래스입니다. 발급자 이름 레지스트리 해당 발급자에 의해 생성 되는 토큰의 서명을 확인 하는 데 필요한 암호화 자료에 니모닉 이름을 연결 하는 데 사용 됩니다. 발급자 이름 레지스트리 신뢰 당사자 (RP) 응용 프로그램에서 신뢰할 수 있는 발급자 목록을 유지 관리 합니다."
  remarks: "The issuer name registry is used to associate a mnemonic name to the cryptographic material needed to verify signatures of tokens produced by the corresponding issuer. This name is then used to set the <xref:System.Security.Claims.Claim.Issuer%2A> or the <xref:System.Security.Claims.Claim.OriginalIssuer%2A> property of a claim. The methods exposed by the IssuerNameRegistry class are called from the pipeline by the security token handler that is processing the token. Tokens signed by material that is not mapped by an issuer name registry are discarded as untrusted. The name returned by the issuer name registry should be unique within the context of an RP application.  \n  \n In code, you can specify the issuer name registry to use by setting the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=fullName> property. In a configuration file, the issuer name registry can be specified by specifying the [\\&lt;issuerNameRegistry\\&gt;](../Topic/%3CissuerNameRegistry%3E.md) element under the [\\&lt;securityTokenHandlerConfiguration\\&gt;](../Topic/%3CsecurityTokenHandlerConfiguration%3E.md) element.  \n  \n Windows Identity Foundation (WIF) provides an implementation of the IssuerNameRegistry class out of the box: the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> class. When you use this implementation you can specify the list of trusted issuers in the configuration file of the RP application under the [\\&lt;trustedIssuers\\&gt;](../Topic/%3CtrustedIssuers%3E.md) element, which is a child element of the `<issuerNameRegistry>` element when the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>.class is referenced in that element’s `type` attribute. Under the `<trustedIssuers>` element, each issuer name is mapped to the X.509 certificate that should be used to verify its signature.  \n  \n To create a custom issuer name registry, you must override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName> method. This method returns the issuer name for the specified security token. You can optionally override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%2CSystem.String%29?displayProperty=fullName> method to provide a hinting mechanism when retrieving issuer names and the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName%2A> method if you want to provide an issuer name for Windows tokens that is different from <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>. Override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> method to enable your issuer name registry to be initialized from a configuration file."
  example:
  - "The following code shows an implementation of the IssuerNameRegistry class that only accepts issuers that use certificates with subject “CN=localhost”.  \n  \n> [!WARNING]\n>  The following code is for illustrative purposes only. Validating certificates based on subject name is not a good practice. This code should not be used as is in production.  \n  \n [!code-cs[WifIssuerNameRegistry#1](~/add/codesnippet/csharp/claimsawaremvcapp/trustedissuernameregistry.cs#1)]  \n  \n The following shows the XML necessary to configure an application with the trusted issuer name registry.  \n  \n```xml  \n<system.identityModel>  \n  <identityConfiguration>  \n    <issuerNameRegistry type=\"System.IdentityModel.Samples.TrustedIssuerNameRegistry, MyApp\" />  \n  </identityConfiguration>  \n</system.identityModel>  \n```"
  syntax:
    content: 'public abstract class IssuerNameRegistry : System.IdentityModel.Configuration.ICustomIdentityConfiguration'
  inheritance:
  - System.Object
  implements:
  - System.IdentityModel.Configuration.ICustomIdentityConfiguration
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  langs:
  - csharp
  name: IssuerNameRegistry()
  nameWithType: IssuerNameRegistry.IssuerNameRegistry()
  fullName: System.IdentityModel.Tokens.IssuerNameRegistry.IssuerNameRegistry()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.IssuerNameRegistry&quot;> </xref> 클래스입니다."
  syntax:
    content: protected IssuerNameRegistry ();
    parameters: []
  overload: System.IdentityModel.Tokens.IssuerNameRegistry.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)
  id: GetIssuerName(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  langs:
  - csharp
  name: GetIssuerName(SecurityToken)
  nameWithType: IssuerNameRegistry.GetIssuerName(SecurityToken)
  fullName: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "파생된 클래스에서 재정의 되 면 지정된 된 보안 토큰의 발급자의 이름을 반환 합니다."
  remarks: "구현에서는 인식 된 발급자를 식별 하는 null이 아니고 비어 있지 않은 문자열 또는 null 문자열을 인식할 수 없는 발급자를 식별 반환 해야 합니다.       토큰을 처리 하는 보안 토큰 처리기에서 처리 파이프라인에서 호출 됩니다. 메서드는 RP 응용 프로그램의 컨텍스트 내에서 발급자에 대 한 고유 이름을 반환 해야 합니다."
  example:
  - "The following code shows the GetIssuerName method for an issuer name registry. The full sample is in the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class overview topic.  \n  \n> [!WARNING]\n>  The following code is for illustrative purposes only. Validating certificates based on subject name is not a good practice. This code should not be used as is in production.  \n  \n [!code-cs[WifIssuerNameRegistry#2](~/add/codesnippet/csharp/claimsawaremvcapp/trustedissuernameregistry.cs#2)]"
  syntax:
    content: public abstract string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken);
    parameters:
    - id: securityToken
      type: System.IdentityModel.Tokens.SecurityToken
      description: "발급자 이름을 반환할에 대 한 보안 토큰입니다."
    return:
      type: System.String
      description: "발급자 이름입니다."
  overload: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)
  id: GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  langs:
  - csharp
  name: GetIssuerName(SecurityToken,String)
  nameWithType: IssuerNameRegistry.GetIssuerName(SecurityToken,String)
  fullName: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(SecurityToken,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "파생된 클래스에서 재정의 되 면 지정된 된 보안 토큰의 발급자의 이름을 반환 합니다. 지정 된 발급자 이름 반환할 발급자 이름을 결정 하는 데 고려 될 수 있습니다."
  remarks: "기본 구현에서 무시 된 `requestedIssuerName` 매개 변수 및 호출 하는 <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName>메서드.</xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName>       토큰을 처리 하는 보안 토큰 처리기에서 처리 파이프라인에서 호출 됩니다. 메서드는 RP 응용 프로그램의 컨텍스트 내에서 발급자에 대 한 고유 이름을 반환 해야 합니다."
  syntax:
    content: public virtual string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken, string requestedIssuerName);
    parameters:
    - id: securityToken
      type: System.IdentityModel.Tokens.SecurityToken
      description: "발급자 이름을 반환할에 대 한 보안 토큰입니다."
    - id: requestedIssuerName
      type: System.String
      description: "요청에서 고려 하는 발급자 이름입니다."
    return:
      type: System.String
      description: "발급자 이름입니다."
  overload: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName
  id: GetWindowsIssuerName
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  langs:
  - csharp
  name: GetWindowsIssuerName()
  nameWithType: IssuerNameRegistry.GetWindowsIssuerName()
  fullName: System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Windows 클레임에 사용할 기본 발급자 이름을 반환 합니다."
  remarks: "기본 구현 <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.</xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer> 를 반환합니다.       토큰을 처리 하는 보안 토큰 처리기에서 처리 파이프라인에서 호출 됩니다. 메서드는 RP 응용 프로그램의 컨텍스트 내에서 발급자에 대 한 고유 이름을 반환 해야 합니다."
  syntax:
    content: public virtual string GetWindowsIssuerName ();
    parameters: []
    return:
      type: System.String
      description: "Windows 클레임에 대 한 기본 발급자 이름입니다."
  overload: System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)
  id: LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  langs:
  - csharp
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: IssuerNameRegistry.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(XmlNodeList)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "파생된 클래스에서 재정의 되 면 사용자 지정 구성을 XML에서 로드 합니다."
  remarks: "The LoadCustomConfiguration method is called by the configuration infrastructure. When this method is called, the `nodelist` will contain the top-level child elements of the [\\&lt;issuerNameRegistry\\&gt;](../Topic/%3CissuerNameRegistry%3E.md) element from the configuration file. Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.  \n  \n The default implementation throws a <xref:System.NotImplementedException>. Override this method in your derived class to enable initialization of your issuer name registry from a configuration file."
  syntax:
    content: public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);
    parameters:
    - id: nodelist
      type: System.Xml.XmlNodeList
      description: "구성 XML 요소입니다. 형식의 목록에 각 노드는 <xref href=&quot;System.Xml.XmlElement&quot;> </xref>합니다."
  overload: System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.#ctor
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  isExternal: false
  name: IssuerNameRegistry()
  nameWithType: IssuerNameRegistry.IssuerNameRegistry()
  fullName: System.IdentityModel.Tokens.IssuerNameRegistry.IssuerNameRegistry()
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  isExternal: false
  name: GetIssuerName(SecurityToken)
  nameWithType: IssuerNameRegistry.GetIssuerName(SecurityToken)
  fullName: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(SecurityToken)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  isExternal: false
  name: GetIssuerName(SecurityToken,String)
  nameWithType: IssuerNameRegistry.GetIssuerName(SecurityToken,String)
  fullName: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(SecurityToken,String)
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  isExternal: false
  name: GetWindowsIssuerName()
  nameWithType: IssuerNameRegistry.GetWindowsIssuerName()
  fullName: System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName()
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  isExternal: false
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: IssuerNameRegistry.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(XmlNodeList)
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.#ctor*
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  isExternal: false
  name: IssuerNameRegistry
  nameWithType: IssuerNameRegistry.IssuerNameRegistry
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName*
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  isExternal: false
  name: GetIssuerName
  nameWithType: IssuerNameRegistry.GetIssuerName
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName*
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  isExternal: false
  name: GetWindowsIssuerName
  nameWithType: IssuerNameRegistry.GetWindowsIssuerName
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration*
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  isExternal: false
  name: LoadCustomConfiguration
  nameWithType: IssuerNameRegistry.LoadCustomConfiguration
