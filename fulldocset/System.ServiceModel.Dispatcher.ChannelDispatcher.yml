### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher
  id: ChannelDispatcher
  children:
  - System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled
  - System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName
  - System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers
  - System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput
  - System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout
  - System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout
  - System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints
  - System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers
  - System.ServiceModel.Dispatcher.ChannelDispatcher.Host
  - System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults
  - System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept
  - System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive
  - System.ServiceModel.Dispatcher.ChannelDispatcher.Listener
  - System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing
  - System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives
  - System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize
  - System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(System.TimeSpan)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(System.TimeSpan)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening
  - System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled
  - System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously
  - System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously
  - System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle
  - System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel
  - System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout
  langs:
  - csharp
  name: ChannelDispatcher
  nameWithType: ChannelDispatcher
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher
  type: Class
  summary: "채널을 수락 하는 서비스에 연결 하는 구성 요소입니다."
  remarks: "ChannelDispatcher 개체에 연결 된 <xref:System.ServiceModel.Channels.IChannelListener>서비스의 인스턴스는 특정 uri (수신 대기 URI 라고 함).</xref:System.ServiceModel.Channels.IChannelListener> 각 <xref:System.ServiceModel.ServiceHost>각각 서로 다른 수신기와 연결 된 하 고 해당 서비스에 대 한 수신 대기 URI을 개체 많은 ChannelDispatcher 개체를 가질 수 있습니다.</xref:System.ServiceModel.ServiceHost>       메시지가 도착할 때 ChannelDispatcher 측정할 사이트의 각 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>끝점 메시지를 수락 하 고 해당 가능한 책갈피로 메시지를 전달 하는지 여부를 개체합니다</xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 에 연결 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>개체는 메시지의 대상 주소와 일치 하는 경우 ChannelDispatcher의 메시지를 처리 합니다는 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A>속성과 일치 하 고 메시지 동작이 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A>속성.</xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> </xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> </xref:System.ServiceModel.Dispatcher.EndpointDispatcher>       수명과 채널 세션의 동작을 제어 하는 모든 속성 ChannelDispatcher 개체를 검사 하거나 수정할 수 있습니다. 이외에 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>, 여기에 사용자 지정 <xref:System.ServiceModel.Dispatcher.IChannelInitializer>개체는 <xref:System.ServiceModel.Channels.IChannelListener>, <xref:System.ServiceModel.ServiceHost>, 연결 및 <xref:System.ServiceModel.InstanceContext>.</xref:System.ServiceModel.InstanceContext> </xref:System.ServiceModel.ServiceHost> </xref:System.ServiceModel.Channels.IChannelListener> </xref:System.ServiceModel.Dispatcher.IChannelInitializer> </xref:System.ServiceModel.Dispatcher.EndpointDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#0](~/add/codesnippet/csharp/t-system.servicemodel.di_0_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#0](~/add/codesnippet/visualbasic/t-system.servicemodel.di_0_1.vb)]
  syntax:
    content: 'public class ChannelDispatcher : System.ServiceModel.Dispatcher.ChannelDispatcherBase'
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener)
  id: '#ctor(System.ServiceModel.Channels.IChannelListener)'
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ChannelDispatcher(IChannelListener)
  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelDispatcher(IChannelListener)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.Dispatcher.ChannelDispatcher&quot;> </xref> 클래스입니다."
  remarks: "새 인스턴스를 초기화는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>시스템에서 제공한 기본 시간 제한 제공된 된 수신기에서 클래스.</xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#1](~/add/codesnippet/csharp/c36e66cf-4fd5-4f92-a03a-_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#1](~/add/codesnippet/visualbasic/c36e66cf-4fd5-4f92-a03a-_1.vb)]
  syntax:
    content: public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener);
    parameters:
    - id: listener
      type: System.ServiceModel.Channels.IChannelListener
      description: "<xref href=&quot;System.ServiceModel.Channels.IChannelListener&quot;> </xref> 채널 디스패처에 대 한 합니다."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>listener</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String)
  id: '#ctor(System.ServiceModel.Channels.IChannelListener,System.String)'
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ChannelDispatcher(IChannelListener,String)
  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener,String)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelDispatcher(IChannelListener,String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.Dispatcher.ChannelDispatcher&quot;> </xref> 클래스입니다."
  remarks: "새 인스턴스를 초기화는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>클래스에서 제공 된 수신기 및 바인딩에서 시스템의 기본 시간 제한 사용 합니다.</xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#2](~/add/codesnippet/csharp/a9625d03-f4da-4d72-ae2d-_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#2](~/add/codesnippet/visualbasic/a9625d03-f4da-4d72-ae2d-_1.vb)]
  syntax:
    content: public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener, string bindingName);
    parameters:
    - id: listener
      type: System.ServiceModel.Channels.IChannelListener
      description: "<xref href=&quot;System.ServiceModel.Channels.IChannelListener&quot;> </xref> 채널 디스패처에 대 한 합니다."
    - id: bindingName
      type: System.String
      description: "서비스 구성에 사용 되는 바인딩의 이름입니다."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>listener</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)
  id: '#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)'
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ChannelDispatcher(IChannelListener,String,IDefaultCommunicationTimeouts)
  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener,String,IDefaultCommunicationTimeouts)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelDispatcher(IChannelListener,String,IDefaultCommunicationTimeouts)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.Dispatcher.ChannelDispatcher&quot;> </xref> 클래스입니다."
  remarks: "새 인스턴스를 초기화는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>클래스에서 제공 된 수신기 및 바인딩에서 지정 된 기본 시간 제한 사용 합니다.</xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#3](~/add/codesnippet/csharp/cadf0641-a6e2-46bb-8257-_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#3](~/add/codesnippet/visualbasic/cadf0641-a6e2-46bb-8257-_1.vb)]
  syntax:
    content: public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener, string bindingName, System.ServiceModel.IDefaultCommunicationTimeouts timeouts);
    parameters:
    - id: listener
      type: System.ServiceModel.Channels.IChannelListener
      description: "<xref href=&quot;System.ServiceModel.Channels.IChannelListener&quot;> </xref> 서비스에 대 한 합니다."
    - id: bindingName
      type: System.String
      description: "서비스 구성에 사용 되는 바인딩의 이름입니다."
    - id: timeouts
      type: System.ServiceModel.IDefaultCommunicationTimeouts
      description: "<xref:System.ServiceModel.IDefaultCommunicationTimeouts>서비스에 대 한.</xref:System.ServiceModel.IDefaultCommunicationTimeouts>"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>listener</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled
  id: AsynchronousTransactedAcceptEnabled
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: AsynchronousTransactedAcceptEnabled
  nameWithType: ChannelDispatcher.AsynchronousTransactedAcceptEnabled
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "트랜잭션 처리에서 허용 되는지를 수신기에 대 한 메서드는 비동기 작업을 나타내는 값을 가져옵니다."
  syntax:
    content: public bool AsynchronousTransactedAcceptEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>수신기에서 메서드 호출에 트랜잭션 된 동의 비동기 작업입니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(System.ServiceModel.ServiceHostBase)
  id: Attach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: Attach(ServiceHostBase)
  nameWithType: ChannelDispatcher.Attach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "호스트에 채널 디스패처를 연결 합니다."
  remarks: "이 속성만 경우 설정할 수의 인스턴스는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>에 <xref:System.ServiceModel.CommunicationState>상태는 변경 가능 하면서 삭제 되지 않은 유일한 상태 이것이.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  syntax:
    content: protected override void Attach (System.ServiceModel.ServiceHostBase host);
    parameters:
    - id: host
      type: System.ServiceModel.ServiceHostBase
      description: "<xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref> 서비스에 대 한 합니다."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.Attach*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName
  id: BindingName
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: BindingName
  nameWithType: ChannelDispatcher.BindingName
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "서비스 구성에 사용 되는 바인딩의 이름을 가져옵니다."
  remarks: "이 채널 디스패처가 연결 된 바인딩의 이름을 가져오는 하는 데 사용 합니다."
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#4](~/add/codesnippet/csharp/p-system.servicemodel.di_13_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#4](~/add/codesnippet/visualbasic/p-system.servicemodel.di_13_1.vb)]
  syntax:
    content: public string BindingName { get; }
    return:
      type: System.String
      description: "서비스의 바인딩 이름입니다."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers
  id: ChannelInitializers
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ChannelInitializers
  nameWithType: ChannelDispatcher.ChannelInitializers
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "집합을 가져옵니다 <xref href=&quot;System.ServiceModel.Dispatcher.IChannelInitializer&quot;> </xref> 검사 하 고 처음 생성 될 때 채널 상태에 추가 하는 데 사용할 수 있는 개체입니다."
  remarks: "검사 하거나 생성 될 때 채널의 상태를 수정 하 고 초기화 컬렉션에 사용자 지정 채널 이니셜라이저를 삽입 하려면이 속성을 사용 합니다. 디스패처에 연결 된 계약이 이중 계약인 경우 나가는 채널에서 동일한 동작을 수행 하는 데 유용 이기도 합니다."
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#5](~/add/codesnippet/csharp/p-system.servicemodel.di_14_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#5](~/add/codesnippet/visualbasic/p-system.servicemodel.di_14_1.vb)]
  syntax:
    content: public System.Collections.Generic.SynchronizedCollection<System.ServiceModel.Dispatcher.IChannelInitializer> ChannelInitializers { get; }
    return:
      type: System.Collections.Generic.SynchronizedCollection{System.ServiceModel.Dispatcher.IChannelInitializer}
      description: "A &lt;xref:System.Collections.Generic.SynchronizedCollection%601&gt; 형식의 <xref href=&quot;System.ServiceModel.Dispatcher.IChannelInitializer&quot;> </xref> 개체입니다."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput
  id: CloseInput
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: CloseInput()
  nameWithType: ChannelDispatcher.CloseInput()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "새 채널을 수락에서 수신기를 중지 합니다."
  remarks: "이 메서드를 호출 하면 수신기의 수신이 중지 됩니다."
  syntax:
    content: public override void CloseInput ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout
  id: DefaultCloseTimeout
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: DefaultCloseTimeout
  nameWithType: ChannelDispatcher.DefaultCloseTimeout
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "채널 디스패처를 닫는 데 허용 되는 시간 기본 간격을 가져옵니다."
  remarks: "<xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>.</xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29> 를 사용 하 여이 기본 닫기 제한 시간을 설정할 수 있습니다. 그렇지 않으면 서비스 모델 기본값인 1 분이 사용 됩니다."
  syntax:
    content: protected override TimeSpan DefaultCloseTimeout { get; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>채널 디스패처를 닫는 데 허용 되는 시간 기본 간격을 지정 하는.</xref:System.TimeSpan>"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout
  id: DefaultOpenTimeout
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: DefaultOpenTimeout
  nameWithType: ChannelDispatcher.DefaultOpenTimeout
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "채널 디스패처를 여 허용 되는 시간 기본 간격을 가져옵니다."
  remarks: "<xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>.</xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29> 를 사용 하 여이 기본 열기 제한 시간을 설정할 수 있습니다. 그렇지 않으면 서비스 모델 기본값인 1 분이 사용 됩니다."
  syntax:
    content: protected override TimeSpan DefaultOpenTimeout { get; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>채널 디스패처를 닫는 데 허용 되는 시간 기본 간격을 지정 하는.</xref:System.TimeSpan>"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(System.ServiceModel.ServiceHostBase)
  id: Detach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: Detach(ServiceHostBase)
  nameWithType: ChannelDispatcher.Detach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "서비스 호스트를 채널 디스패처에서 분리합니다."
  remarks: "<xref:System.ServiceModel.ServiceHostBase>만 경우 분리할 수의 인스턴스는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>에 <xref:System.ServiceModel.CommunicationState>상태는 변경 가능 하면서 삭제 되지 않은 유일한 상태 이것이.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher> </xref:System.ServiceModel.ServiceHostBase>       설정 된 <xref:System.ServiceModel.ServiceHostBase>를 채널 디스패처에 연결 된 `null`.</xref:System.ServiceModel.ServiceHostBase>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#18](~/add/codesnippet/csharp/334cfaeb-0991-457b-b54b-_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#18](~/add/codesnippet/visualbasic/334cfaeb-0991-457b-b54b-_1.vb)]
  syntax:
    content: protected override void Detach (System.ServiceModel.ServiceHostBase host);
    parameters:
    - id: host
      type: System.ServiceModel.ServiceHostBase
      description: "<xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref> 서비스에 대 한 합니다."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.Detach*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>host</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints
  id: Endpoints
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: Endpoints
  nameWithType: ChannelDispatcher.Endpoints
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "메시지를 채널 끝점에 전달 하는 끝점 디스패처를 가져옵니다."
  remarks: "<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>에 고유한 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>채널에서 지원할 수 있는 각 끝점에 대 한.</xref:System.ServiceModel.Dispatcher.EndpointDispatcher> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>       사용 하 여는 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>전체 끝점에서 런타임을 사용자 지정할 수 있도록 하는 런타임 속성에 대 한 액세스를 얻으려고 합니다.</xref:System.ServiceModel.Dispatcher.EndpointDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#6](~/add/codesnippet/csharp/p-system.servicemodel.di_17_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#6](~/add/codesnippet/visualbasic/p-system.servicemodel.di_17_1.vb)]
  syntax:
    content: public System.Collections.Generic.SynchronizedCollection<System.ServiceModel.Dispatcher.EndpointDispatcher> Endpoints { get; }
    return:
      type: System.Collections.Generic.SynchronizedCollection{System.ServiceModel.Dispatcher.EndpointDispatcher}
      description: "A &lt;xref:System.Collections.Generic.SynchronizedCollection%601&gt; 의 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>를 채널 끝점에 메시지를 전달 하는입니다.</xref:System.ServiceModel.Dispatcher.EndpointDispatcher>"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers
  id: ErrorHandlers
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ErrorHandlers
  nameWithType: ChannelDispatcher.ErrorHandlers
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "집합을 가져옵니다 <xref href=&quot;System.ServiceModel.Dispatcher.IErrorHandler&quot;> </xref> 사용자 지정 오류 처리 끝점에 대 한 기능을 삽입 하는 데 사용할 수 있습니다."
  remarks: ''
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#7](~/add/codesnippet/csharp/p-system.servicemodel.di_10_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#7](~/add/codesnippet/visualbasic/p-system.servicemodel.di_10_1.vb)]
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.ServiceModel.Dispatcher.IErrorHandler> ErrorHandlers { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.IErrorHandler}
      description: "A &lt;xref:System.Collections.Generic.SynchronizedCollection%601&gt; 의 <xref href=&quot;System.ServiceModel.Dispatcher.IErrorHandler&quot;> </xref> 개체입니다."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Host
  id: Host
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: Host
  nameWithType: ChannelDispatcher.Host
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Host
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "디스패처에 연결 된 서비스에 대 한 호스트를 가져옵니다."
  remarks: "각 <xref:System.ServiceModel.ServiceHost>개체 수는 많은 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>개체, 연결 된 다른 <xref:System.ServiceModel.Channels.IChannelListener>해당 서비스에 대 한.</xref:System.ServiceModel.Channels.IChannelListener> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher> </xref:System.ServiceModel.ServiceHost>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#8](~/add/codesnippet/csharp/p-system.servicemodel.di_8_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#8](~/add/codesnippet/visualbasic/p-system.servicemodel.di_8_1.vb)]
  syntax:
    content: public override System.ServiceModel.ServiceHostBase Host { get; }
    return:
      type: System.ServiceModel.ServiceHostBase
      description: "<xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref> 디스패처에 연결 된 서비스에 대 한 합니다."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.Host*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults
  id: IncludeExceptionDetailInFaults
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: IncludeExceptionDetailInFaults
  nameWithType: ChannelDispatcher.IncludeExceptionDetailInFaults
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "오류에 예외에 대 한 세부 정보를 포함할지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "이 속성만 경우 설정할 수의 인스턴스는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>에 <xref:System.ServiceModel.CommunicationState>상태는 변경 가능 하면서 삭제 되지 않은 유일한 상태 이것이.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#19](~/add/codesnippet/csharp/01ac9eb7-71a0-4d33-b665-_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#19](~/add/codesnippet/visualbasic/01ac9eb7-71a0-4d33-b665-_1.vb)]
  syntax:
    content: public bool IncludeExceptionDetailInFaults { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>예외에 대 한 세부 정보; 오류에 포함 된 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept
  id: IsTransactedAccept
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: IsTransactedAccept
  nameWithType: ChannelDispatcher.IsTransactedAccept
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "수신기에 대 한 accept 메서드 호출이 트랜잭션에서 수행 되는지 여부를 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#9](~/add/codesnippet/csharp/p-system.servicemodel.di_7_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#9](~/add/codesnippet/visualbasic/p-system.servicemodel.di_7_1.vb)]
  syntax:
    content: public bool IsTransactedAccept { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>수신기에 대 한 accept 메서드 호출이 트랜잭션에서; 수행 되는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive
  id: IsTransactedReceive
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: IsTransactedReceive
  nameWithType: ChannelDispatcher.IsTransactedReceive
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "수신기에 대 한 receive 메서드 호출이 트랜잭션에서 수행 되는지 여부를 나타내는 값을 가져옵니다."
  remarks: "IsTransactedReceive 속성만 경우 설정할 수의 인스턴스는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>에 <xref:System.ServiceModel.CommunicationState>상태는 변경 가능 하면서 삭제 되지 않은 유일한 상태 이것이.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#10](~/add/codesnippet/csharp/p-system.servicemodel.di_11_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#10](~/add/codesnippet/visualbasic/p-system.servicemodel.di_11_1.vb)]
  syntax:
    content: public bool IsTransactedReceive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>수신기에 대 한 receive 메서드 호출이 트랜잭션에서; 수행 되는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Listener
  id: Listener
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: Listener
  nameWithType: ChannelDispatcher.Listener
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Listener
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "채널 디스패처에 연결 된 수신기를 가져옵니다."
  remarks: "A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>연결는 <xref:System.ServiceModel.Channels.IChannelListener>서비스의 인스턴스는 특정 uri.</xref:System.ServiceModel.Channels.IChannelListener> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#11](~/add/codesnippet/csharp/p-system.servicemodel.di_5_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#11](~/add/codesnippet/visualbasic/p-system.servicemodel.di_5_1.vb)]
  syntax:
    content: public override System.ServiceModel.Channels.IChannelListener Listener { get; }
    return:
      type: System.ServiceModel.Channels.IChannelListener
      description: "<xref href=&quot;System.ServiceModel.Channels.IChannelListener&quot;> </xref> 채널 디스패처에 연결 된입니다."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.Listener*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing
  id: ManualAddressing
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ManualAddressing
  nameWithType: ChannelDispatcher.ManualAddressing
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "채널 디스패처에서 요청-회신 메시지에 주소 헤더를 추가할지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "이 속성만 경우 설정할 수의 인스턴스는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>에 <xref:System.ServiceModel.CommunicationState>상태는 변경 가능 하면서 삭제 되지 않은 유일한 상태 이것이.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>       설정 된 <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A>속성을 `true` 클라이언트가 메시지 ID를 추가 하지 못하도록 하려는 경우와 ReplyTo 주소 헤더 요청/응답 메시지를 응용 프로그램에서 이러한 헤더를 제어할 수 있도록 합니다.</xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#12](~/add/codesnippet/csharp/p-system.servicemodel.di_6_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#12](~/add/codesnippet/visualbasic/p-system.servicemodel.di_6_1.vb)]
  syntax:
    content: public bool ManualAddressing { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>프록시에서 주소 헤더; 추가 하지 않는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 설명 부분을 참조 하십시오."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives
  id: MaxPendingReceives
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: MaxPendingReceives
  nameWithType: ChannelDispatcher.MaxPendingReceives
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "최대 보류 메시지 채널당을 가져오거나 설정 합니다."
  syntax:
    content: public int MaxPendingReceives { get; set; }
    return:
      type: System.Int32
      description: "최대 메시지 수를 나타내는 정수입니다."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize
  id: MaxTransactedBatchSize
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: MaxTransactedBatchSize
  nameWithType: ChannelDispatcher.MaxTransactedBatchSize
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "트랜잭션된 된 일괄 처리에 대 한 최대 크기를 가져오거나 설정 합니다."
  remarks: "MaxTransactedBatchSize 속성만 경우 설정할 수의 인스턴스는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>에 <xref:System.ServiceModel.CommunicationState>상태는 변경 가능 하면서 삭제 되지 않은 유일한 상태 이것이.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#13](~/add/codesnippet/csharp/p-system.servicemodel.di_9_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#13](~/add/codesnippet/visualbasic/p-system.servicemodel.di_9_1.vb)]
  syntax:
    content: public int MaxTransactedBatchSize { get; set; }
    return:
      type: System.Int32
      description: "트랜잭션된 된 일괄 처리에 대 한 최대 크기입니다."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "설정 값은&0; 보다 작은 경우"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion
  id: MessageVersion
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: MessageVersion
  nameWithType: ChannelDispatcher.MessageVersion
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "SOAP 메시지 및 Ws-addressing 버전 사용 되거나 예상 되는 값을 가져오거나 설정 합니다."
  remarks: "된 메시지 및 해당 교환과 연결 된 SOAP 및 Ws-addressing의 버전을 지정 합니다.       이 속성만 경우 설정할 수의 인스턴스는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>에 <xref:System.ServiceModel.CommunicationState>상태는 변경 가능 하면서 삭제 되지 않은 유일한 상태 이것이.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#20](~/add/codesnippet/csharp/p-system.servicemodel.di_1_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#20](~/add/codesnippet/visualbasic/p-system.servicemodel.di_1_1.vb)]
  syntax:
    content: public System.ServiceModel.Channels.MessageVersion MessageVersion { get; set; }
    return:
      type: System.ServiceModel.Channels.MessageVersion
      description: "<xref:System.ServiceModel.Channels.MessageVersion>사용 되거나 예상 되는.</xref:System.ServiceModel.Channels.MessageVersion>"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort
  id: OnAbort
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnAbort()
  nameWithType: ChannelDispatcher.OnAbort()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "디스패처에 연결 된 수신기를 중단 합니다."
  syntax:
    content: protected override void OnAbort ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnBeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelDispatcher.OnBeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "에 대 한 지정된 된 시간 간격 내에 완료 해야 하는 디스패처의 채널 수신기를 닫기 위해 비동기 작업을 시작 합니다."
  syntax:
    content: protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>닫기 작업에서 시간이 초과 되기 전에 완료 해야 기간을 지정 하는.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>닫기 작업의 비동기 완료에 대 한 알림을 수신 하는 대리자입니다.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "비동기 닫기 작업과 연결 된 상태 정보를 포함 하는 응용 프로그램이 지정한는 개체입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>발송자에 대 한 채널 수신기를 닫기 위해 비동기 작업을 참조 하는.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnBeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelDispatcher.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "에 대 한 지정된 된 시간 간격 내에 완료 해야 하는 디스패처의 채널 수신기를 열기 위해 비동기 작업을 시작 합니다."
  remarks: "채널 디스패처를 비와 연결 되어 있어야`null` 이 메서드를 호출할 때 서비스 호스트입니다."
  syntax:
    content: protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>열기 작업이 시간이 초과 되기 전에 완료 해야 기간을 지정 하는.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>열기 작업의 비동기 완료에 대 한 알림을 수신 하는 대리자입니다.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "비동기 열기 작업과 연결 된 상태 정보를 포함 하는 응용 프로그램이 지정한는 개체입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>발송자에 대 한 채널 수신기를 열기 위해 비동기 작업을 참조 하는.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "호스트 또는 메시지 버전이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(System.TimeSpan)
  id: OnClose(System.TimeSpan)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnClose(TimeSpan)
  nameWithType: ChannelDispatcher.OnClose(TimeSpan)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "지정된 된 시간 간격 내에 디스패처에 연결 된 채널 수신기를 닫습니다."
  syntax:
    content: protected override void OnClose (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>수신기를 닫는 허용 되는 시간 간격을 지정 하는.</xref:System.TimeSpan>"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed
  id: OnClosed
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnClosed()
  nameWithType: ChannelDispatcher.OnClosed()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "채널 디스패처에 연결 된 끝점 디스패처의 닫기 추적을 제공 합니다."
  syntax:
    content: protected override void OnClosed ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(System.IAsyncResult)
  id: OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnEndClose(IAsyncResult)
  nameWithType: ChannelDispatcher.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "발송자에 대 한 채널 수신기를 닫기 위해 비동기 작업을 완료 합니다."
  syntax:
    content: protected override void OnEndClose (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>에 대 한 호출에서 반환 되는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose*>메서드.</xref:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose*> </xref:System.IAsyncResult>"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(System.IAsyncResult)
  id: OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnEndOpen(IAsyncResult)
  nameWithType: ChannelDispatcher.OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "발송자에 대 한 채널 수신기를 열기 위해 비동기 작업을 완료 합니다."
  syntax:
    content: protected override void OnEndOpen (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>에 대 한 호출에서 반환 되는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen*>메서드.</xref:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen*> </xref:System.IAsyncResult>"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(System.TimeSpan)
  id: OnOpen(System.TimeSpan)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnOpen(TimeSpan)
  nameWithType: ChannelDispatcher.OnOpen(TimeSpan)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "채널 디스패처에 연결 된 수신기를 엽니다."
  remarks: "채널 디스패처를 비와 연결 되어 있어야`null` 이 메서드가 호출 되 고 메시지 버전 비-으로 설정 되어 있어야 하는 경우 서비스 호스트`null` 값입니다."
  syntax:
    content: protected override void OnOpen (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>열려는 수신기에 대 한 허용 되는 시간 간격을 지정 하는.</xref:System.TimeSpan>"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "호스트 또는 메시지 버전이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened
  id: OnOpened
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnOpened()
  nameWithType: ChannelDispatcher.OnOpened()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "채우고 끝점에 디스패치 하는 데 사용 되는 필터 테이블의 유효성을 검사 합니다."
  remarks: "채널 디스패처를 비와 연결 되어 있어야`null` 이 메서드를 호출할 때 서비스 호스트입니다."
  syntax:
    content: protected override void OnOpened ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "호스트는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening
  id: OnOpening
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnOpening()
  nameWithType: ChannelDispatcher.OnOpening()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "채널 디스패처가 호스트에 연결 되는지 여부를 확인 합니다."
  remarks: "채널 디스패처를 비와 연결 되어 있어야`null` 열기에 대 한 서비스 호스트입니다."
  syntax:
    content: protected override void OnOpening ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "호스트는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled
  id: ReceiveContextEnabled
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ReceiveContextEnabled
  nameWithType: ChannelDispatcher.ReceiveContextEnabled
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "ReceiveContext를 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "ReceiveContext 예: 필요한 경우 메시지의 잠금는 서비스에서 메시지를 처리 하는 방식으로 제어 합니다."
  syntax:
    content: public bool ReceiveContextEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ReceiveContext를 사용 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously
  id: ReceiveSynchronously
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ReceiveSynchronously
  nameWithType: ChannelDispatcher.ReceiveSynchronously
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "채널에서 메시지를 읽으려면 디스패처가 동기 호출을 사용 하는지 여부를 지정 하는 값을 가져오거나 설정 합니다."
  remarks: "바인딩을 구현 하는 경우 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] 의 값에 할당 된 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>속성을이 속성.</xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> </xref:System.ServiceModel.Channels.IBindingRuntimePreferences> 따라서이 값은 경우 `true`, `false` 의 기본값 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>재정의 됩니다.</xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>       이 속성만 경우 설정할 수의 인스턴스는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>에 <xref:System.ServiceModel.CommunicationState>상태는 변경 가능 하면서 삭제 되지 않은 유일한 상태 이것이.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#14](~/add/codesnippet/csharp/p-system.servicemodel.di_3_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#14](~/add/codesnippet/visualbasic/p-system.servicemodel.di_3_1.vb)]
  syntax:
    content: public bool ReceiveSynchronously { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>디스패처가 동기 메서드를 사용 하 여 채널에서 메시지를 읽으려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously
  id: SendAsynchronously
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: SendAsynchronously
  nameWithType: ChannelDispatcher.SendAsynchronously
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "메시지의 비동기 전송 여부를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public bool SendAsynchronously { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>메시지를 비동기적으로 보내는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle
  id: ServiceThrottle
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ServiceThrottle
  nameWithType: ChannelDispatcher.ServiceThrottle
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "채널 디스패처에 연결 된 서비스에 대 한 서비스 스로틀을 가져오거나 설정 합니다."
  remarks: "가용성 및 서비스의 성능을 최적화 하기 위해 사용 되는 컨트롤에 대 한 액세스를 제공 합니다.       이 속성만 경우 설정할 수의 인스턴스는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>에 <xref:System.ServiceModel.CommunicationState>상태는 변경 가능 하면서 삭제 되지 않은 유일한 상태 이것이.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#15](~/add/codesnippet/csharp/p-system.servicemodel.di_16_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#15](~/add/codesnippet/visualbasic/p-system.servicemodel.di_16_1.vb)]
  syntax:
    content: public System.ServiceModel.Dispatcher.ServiceThrottle ServiceThrottle { get; set; }
    return:
      type: System.ServiceModel.Dispatcher.ServiceThrottle
      description: "A <xref href=&quot;System.ServiceModel.Dispatcher.ServiceThrottle&quot;></xref> object."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel
  id: TransactionIsolationLevel
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: TransactionIsolationLevel
  nameWithType: ChannelDispatcher.TransactionIsolationLevel
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "트랜잭션의 기본 격리 수준을 가져오거나 설정 합니다."
  remarks: "TransactionIsolationLevel 속성을 사용 하 여 서비스의 디스패처에서 만든 새 트랜잭션의 기본 격리 수준을 가져오거나 설정 합니다.       이 속성만 경우 설정할 수의 인스턴스는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>에 <xref:System.ServiceModel.CommunicationState>상태는 변경 가능 하면서 삭제 되지 않은 유일한 상태 이것이.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#16](~/add/codesnippet/csharp/p-system.servicemodel.di_2_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#16](~/add/codesnippet/visualbasic/p-system.servicemodel.di_2_1.vb)]
  syntax:
    content: public System.Transactions.IsolationLevel TransactionIsolationLevel { get; set; }
    return:
      type: System.Transactions.IsolationLevel
      description: "중 하나는 <xref href=&quot;System.Transactions.IsolationLevel&quot;> </xref> 값입니다. 기본값은 <xref href=&quot;System.Transactions.IsolationLevel&quot;> </xref>합니다."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "격리 수준 설정이 정의 되지 않았습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout
  id: TransactionTimeout
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: TransactionTimeout
  nameWithType: ChannelDispatcher.TransactionTimeout
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "서비스 대신 디스패처에서 만든 새 트랜잭션의 기본 제한 시간을 지정 하는 값을 가져오거나 설정 합니다."
  remarks: "이 속성만 경우 설정할 수의 인스턴스는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>에 <xref:System.ServiceModel.CommunicationState>상태는 변경 가능 하면서 삭제 되지 않은 유일한 상태 이것이.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#17](~/add/codesnippet/csharp/p-system.servicemodel.di_0_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#17](~/add/codesnippet/visualbasic/p-system.servicemodel.di_0_1.vb)]
  syntax:
    content: public TimeSpan TransactionTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>트랜잭션에 대 한 기본 제한 시간을 나타내는 값입니다.</xref:System.TimeSpan> 기본값은 <xref:System.TimeSpan>.</xref:System.TimeSpan>"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "설정 값은 음수 이거나 너무 큽니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "통신 개체가 <xref:System.ServiceModel.CommunicationState>상태.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: System.ServiceModel.Dispatcher.ChannelDispatcherBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ServiceModel.CommunicationObjectFaultedException
  isExternal: true
  name: System.ServiceModel.CommunicationObjectFaultedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ChannelDispatcher(IChannelListener)
  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelDispatcher(IChannelListener)
- uid: System.ServiceModel.Channels.IChannelListener
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelListener
  nameWithType: IChannelListener
  fullName: System.ServiceModel.Channels.IChannelListener
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ChannelDispatcher(IChannelListener,String)
  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener,String)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelDispatcher(IChannelListener,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ChannelDispatcher(IChannelListener,String,IDefaultCommunicationTimeouts)
  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener,String,IDefaultCommunicationTimeouts)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelDispatcher(IChannelListener,String,IDefaultCommunicationTimeouts)
- uid: System.ServiceModel.IDefaultCommunicationTimeouts
  parent: System.ServiceModel
  isExternal: true
  name: IDefaultCommunicationTimeouts
  nameWithType: IDefaultCommunicationTimeouts
  fullName: System.ServiceModel.IDefaultCommunicationTimeouts
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: AsynchronousTransactedAcceptEnabled
  nameWithType: ChannelDispatcher.AsynchronousTransactedAcceptEnabled
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Attach(ServiceHostBase)
  nameWithType: ChannelDispatcher.Attach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(ServiceHostBase)
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: BindingName
  nameWithType: ChannelDispatcher.BindingName
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ChannelInitializers
  nameWithType: ChannelDispatcher.ChannelInitializers
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers
- uid: System.Collections.Generic.SynchronizedCollection{System.ServiceModel.Dispatcher.IChannelInitializer}
  parent: System.Collections.Generic
  isExternal: false
  name: SynchronizedCollection<IChannelInitializer>
  nameWithType: SynchronizedCollection<IChannelInitializer>
  fullName: System.Collections.Generic.SynchronizedCollection<System.ServiceModel.Dispatcher.IChannelInitializer>
  spec.csharp:
  - uid: System.Collections.Generic.SynchronizedCollection`1
    name: SynchronizedCollection
    nameWithType: SynchronizedCollection
    fullName: SynchronizedCollection<System.ServiceModel.Dispatcher.IChannelInitializer>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Dispatcher.IChannelInitializer
    name: IChannelInitializer
    nameWithType: IChannelInitializer
    fullName: IChannelInitializer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: CloseInput()
  nameWithType: ChannelDispatcher.CloseInput()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ChannelDispatcher.DefaultCloseTimeout
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ChannelDispatcher.DefaultOpenTimeout
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Detach(ServiceHostBase)
  nameWithType: ChannelDispatcher.Detach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(ServiceHostBase)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Endpoints
  nameWithType: ChannelDispatcher.Endpoints
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints
- uid: System.Collections.Generic.SynchronizedCollection{System.ServiceModel.Dispatcher.EndpointDispatcher}
  parent: System.Collections.Generic
  isExternal: false
  name: SynchronizedCollection<EndpointDispatcher>
  nameWithType: SynchronizedCollection<EndpointDispatcher>
  fullName: System.Collections.Generic.SynchronizedCollection<System.ServiceModel.Dispatcher.EndpointDispatcher>
  spec.csharp:
  - uid: System.Collections.Generic.SynchronizedCollection`1
    name: SynchronizedCollection
    nameWithType: SynchronizedCollection
    fullName: SynchronizedCollection<System.ServiceModel.Dispatcher.EndpointDispatcher>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Dispatcher.EndpointDispatcher
    name: EndpointDispatcher
    nameWithType: EndpointDispatcher
    fullName: EndpointDispatcher
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ErrorHandlers
  nameWithType: ChannelDispatcher.ErrorHandlers
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.IErrorHandler}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<IErrorHandler>
  nameWithType: Collection<IErrorHandler>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Dispatcher.IErrorHandler>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.ServiceModel.Dispatcher.IErrorHandler>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Dispatcher.IErrorHandler
    name: IErrorHandler
    nameWithType: IErrorHandler
    fullName: IErrorHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Host
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Host
  nameWithType: ChannelDispatcher.Host
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Host
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: IncludeExceptionDetailInFaults
  nameWithType: ChannelDispatcher.IncludeExceptionDetailInFaults
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: IsTransactedAccept
  nameWithType: ChannelDispatcher.IsTransactedAccept
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: IsTransactedReceive
  nameWithType: ChannelDispatcher.IsTransactedReceive
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Listener
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Listener
  nameWithType: ChannelDispatcher.Listener
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Listener
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ManualAddressing
  nameWithType: ChannelDispatcher.ManualAddressing
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: MaxPendingReceives
  nameWithType: ChannelDispatcher.MaxPendingReceives
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: MaxTransactedBatchSize
  nameWithType: ChannelDispatcher.MaxTransactedBatchSize
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: MessageVersion
  nameWithType: ChannelDispatcher.MessageVersion
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion
- uid: System.ServiceModel.Channels.MessageVersion
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageVersion
  nameWithType: MessageVersion
  fullName: System.ServiceModel.Channels.MessageVersion
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnAbort()
  nameWithType: ChannelDispatcher.OnAbort()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnBeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelDispatcher.OnBeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnBeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelDispatcher.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(System.TimeSpan)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnClose(TimeSpan)
  nameWithType: ChannelDispatcher.OnClose(TimeSpan)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(TimeSpan)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnClosed()
  nameWithType: ChannelDispatcher.OnClosed()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnEndClose(IAsyncResult)
  nameWithType: ChannelDispatcher.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(IAsyncResult)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnEndOpen(IAsyncResult)
  nameWithType: ChannelDispatcher.OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(IAsyncResult)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(System.TimeSpan)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnOpen(TimeSpan)
  nameWithType: ChannelDispatcher.OnOpen(TimeSpan)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(TimeSpan)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnOpened()
  nameWithType: ChannelDispatcher.OnOpened()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnOpening()
  nameWithType: ChannelDispatcher.OnOpening()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ReceiveContextEnabled
  nameWithType: ChannelDispatcher.ReceiveContextEnabled
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ReceiveSynchronously
  nameWithType: ChannelDispatcher.ReceiveSynchronously
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: SendAsynchronously
  nameWithType: ChannelDispatcher.SendAsynchronously
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ServiceThrottle
  nameWithType: ChannelDispatcher.ServiceThrottle
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle
- uid: System.ServiceModel.Dispatcher.ServiceThrottle
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: ServiceThrottle
  nameWithType: ServiceThrottle
  fullName: System.ServiceModel.Dispatcher.ServiceThrottle
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: TransactionIsolationLevel
  nameWithType: ChannelDispatcher.TransactionIsolationLevel
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel
- uid: System.Transactions.IsolationLevel
  parent: System.Transactions
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Transactions.IsolationLevel
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: TransactionTimeout
  nameWithType: ChannelDispatcher.TransactionTimeout
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ChannelDispatcher
  nameWithType: ChannelDispatcher.ChannelDispatcher
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: AsynchronousTransactedAcceptEnabled
  nameWithType: ChannelDispatcher.AsynchronousTransactedAcceptEnabled
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Attach*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Attach
  nameWithType: ChannelDispatcher.Attach
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: BindingName
  nameWithType: ChannelDispatcher.BindingName
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ChannelInitializers
  nameWithType: ChannelDispatcher.ChannelInitializers
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: CloseInput
  nameWithType: ChannelDispatcher.CloseInput
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ChannelDispatcher.DefaultCloseTimeout
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ChannelDispatcher.DefaultOpenTimeout
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Detach*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Detach
  nameWithType: ChannelDispatcher.Detach
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Endpoints
  nameWithType: ChannelDispatcher.Endpoints
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ErrorHandlers
  nameWithType: ChannelDispatcher.ErrorHandlers
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Host*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Host
  nameWithType: ChannelDispatcher.Host
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: IncludeExceptionDetailInFaults
  nameWithType: ChannelDispatcher.IncludeExceptionDetailInFaults
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: IsTransactedAccept
  nameWithType: ChannelDispatcher.IsTransactedAccept
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: IsTransactedReceive
  nameWithType: ChannelDispatcher.IsTransactedReceive
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Listener*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Listener
  nameWithType: ChannelDispatcher.Listener
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ManualAddressing
  nameWithType: ChannelDispatcher.ManualAddressing
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: MaxPendingReceives
  nameWithType: ChannelDispatcher.MaxPendingReceives
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: MaxTransactedBatchSize
  nameWithType: ChannelDispatcher.MaxTransactedBatchSize
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: MessageVersion
  nameWithType: ChannelDispatcher.MessageVersion
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnAbort
  nameWithType: ChannelDispatcher.OnAbort
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnBeginClose
  nameWithType: ChannelDispatcher.OnBeginClose
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnBeginOpen
  nameWithType: ChannelDispatcher.OnBeginOpen
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnClose
  nameWithType: ChannelDispatcher.OnClose
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnClosed
  nameWithType: ChannelDispatcher.OnClosed
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnEndClose
  nameWithType: ChannelDispatcher.OnEndClose
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnEndOpen
  nameWithType: ChannelDispatcher.OnEndOpen
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnOpen
  nameWithType: ChannelDispatcher.OnOpen
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnOpened
  nameWithType: ChannelDispatcher.OnOpened
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnOpening
  nameWithType: ChannelDispatcher.OnOpening
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ReceiveContextEnabled
  nameWithType: ChannelDispatcher.ReceiveContextEnabled
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ReceiveSynchronously
  nameWithType: ChannelDispatcher.ReceiveSynchronously
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: SendAsynchronously
  nameWithType: ChannelDispatcher.SendAsynchronously
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ServiceThrottle
  nameWithType: ChannelDispatcher.ServiceThrottle
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: TransactionIsolationLevel
  nameWithType: ChannelDispatcher.TransactionIsolationLevel
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: TransactionTimeout
  nameWithType: ChannelDispatcher.TransactionTimeout
