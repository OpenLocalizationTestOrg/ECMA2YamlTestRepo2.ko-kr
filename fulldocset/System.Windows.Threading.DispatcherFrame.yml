### YamlMime:ManagedReference
items:
- uid: System.Windows.Threading.DispatcherFrame
  id: DispatcherFrame
  children:
  - System.Windows.Threading.DispatcherFrame.#ctor
  - System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)
  - System.Windows.Threading.DispatcherFrame.Continue
  langs:
  - csharp
  name: DispatcherFrame
  nameWithType: DispatcherFrame
  fullName: System.Windows.Threading.DispatcherFrame
  type: Class
  summary: "실행 루프를 나타냅니다는 <xref href=&quot;System.Windows.Threading.Dispatcher&quot;> </xref>합니다."
  remarks: "DispatcherFrame 개체는 일반적으로 두 범주로 나누어집니다:-장기 실행 되는 일반 용도 프레임 하도록 지시 하는 경우에 해당 종료 합니다.  이러한 프레임 요청 될 때 종료 되어야 합니다.      -짧은 실행 중, 매우 구체적인 중요 한 조건이 충족 될 때 해당 종료를 프레임입니다.  이러한 프레임 종료 조건이 충족 되어야 기다리므로 요청 될 때 종료 하지 것을 고려할 수 있습니다.  이러한 프레임에 관련 된 제한 시간이 있어야 합니다.      <a name=&quot;xamlTextUsage_DispatcherFrame&quot;></a># #에서 관리 되는이 클래스를 사용할 수 없습니다 XAML 텍스트 사용 하면 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]합니다."
  example:
  - "The following example shows how to use a DispatcherFrame to achieve similar results as the [!INCLUDE[TLA#tla_winforms](~/add/includes/ajax-current-ext-md.md)] <xref:System.Windows.Forms.Application.DoEvents%2A> method.  \n  \n [!code-vb[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/add/codesnippet/visualbasic/dispatchersnippets/window1.xaml.vb#dispatcherdispatcherframedoevents)]\n [!code-cs[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/add/codesnippet/csharp/DispatcherSnippets/Window1.xaml.cs#dispatcherdispatcherframedoevents)]"
  syntax:
    content: 'public class DispatcherFrame : System.Windows.Threading.DispatcherObject'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherFrame.#ctor
  id: '#ctor'
  parent: System.Windows.Threading.DispatcherFrame
  langs:
  - csharp
  name: DispatcherFrame()
  nameWithType: DispatcherFrame.DispatcherFrame()
  fullName: System.Windows.Threading.DispatcherFrame.DispatcherFrame()
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Threading.DispatcherFrame&quot;> </xref> 클래스입니다."
  syntax:
    content: public DispatcherFrame ();
    parameters: []
  overload: System.Windows.Threading.DispatcherFrame.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Windows.Threading.DispatcherFrame
  langs:
  - csharp
  name: DispatcherFrame(Boolean)
  nameWithType: DispatcherFrame.DispatcherFrame(Boolean)
  fullName: System.Windows.Threading.DispatcherFrame.DispatcherFrame(Boolean)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Threading.DispatcherFrame&quot;> </xref> 클래스, 지정 된를 사용 하 여 요청 플래그를 종료 합니다."
  remarks: "<xref:System.Windows.Threading.DispatcherFrame>일반적으로 두 범주로 나누어집니다:-장기 실행, 일반 하도록 지시 하는 경우에 종료 되는 프레임의 용도 위해 합니다.</xref:System.Windows.Threading.DispatcherFrame>  이러한 프레임 요청 될 때 종료 되어야 합니다.      -짧은 실행 중, 매우 구체적인 중요 한 조건이 충족 될 때 해당 종료를 프레임입니다.  이러한 프레임 종료 조건이 충족 되어야 기다리므로 요청 될 때 종료 되지 않고 것을 고려할 수 있습니다.  이러한 프레임에 관련 된 제한 시간이 있어야 합니다.      -응용 프로그램 종료 시 모든 프레임은 종료를 요청 합니다."
  syntax:
    content: public DispatcherFrame (bool exitWhenRequested);
    parameters:
    - id: exitWhenRequested
      type: System.Boolean
      description: "모든 프레임 종료 되도록 요청 될이 프레임을 끝내 지 여부를 나타냅니다."
  overload: System.Windows.Threading.DispatcherFrame.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherFrame.Continue
  id: Continue
  parent: System.Windows.Threading.DispatcherFrame
  langs:
  - csharp
  name: Continue
  nameWithType: DispatcherFrame.Continue
  fullName: System.Windows.Threading.DispatcherFrame.Continue
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "표시 하는 값을 가져오거나 설정 합니다. 여부이 <xref href=&quot;System.Windows.Threading.DispatcherFrame&quot;> </xref> 계속 해야 합니다."
  remarks: "계속 각 디스패처 루프의 맨 위쪽에 쿼리 됩니다.       응용 프로그램 종료 시 모든 프레임은 종료를 요청 합니다.      <a name=&quot;xamlTextUsage_Continue&quot;></a># #이 클래스의 XAML 텍스트 사용 멤버는 대개 사용 되지에 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]에서 사용할 수 없습니다 또는 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]합니다."
  example:
  - "The following example shows how to use a <xref:System.Windows.Threading.DispatcherFrame> to achieve similar results as the [!INCLUDE[TLA#tla_winforms](~/add/includes/ajax-current-ext-md.md)] <xref:System.Windows.Forms.Application.DoEvents%2A> method.  \n  \n [!code-vb[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/add/codesnippet/visualbasic/dispatchersnippets/window1.xaml.vb#dispatcherdispatcherframedoevents)]\n [!code-cs[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/add/codesnippet/csharp/DispatcherSnippets/Window1.xaml.cs#dispatcherdispatcherframedoevents)]"
  syntax:
    content: public bool Continue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>프레임을 계속 합니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다.  기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Threading.DispatcherFrame.Continue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: System.Windows.Threading.DispatcherObject
- uid: System.Windows.Threading.DispatcherFrame.#ctor
  parent: System.Windows.Threading.DispatcherFrame
  isExternal: false
  name: DispatcherFrame()
  nameWithType: DispatcherFrame.DispatcherFrame()
  fullName: System.Windows.Threading.DispatcherFrame.DispatcherFrame()
- uid: System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)
  parent: System.Windows.Threading.DispatcherFrame
  isExternal: false
  name: DispatcherFrame(Boolean)
  nameWithType: DispatcherFrame.DispatcherFrame(Boolean)
  fullName: System.Windows.Threading.DispatcherFrame.DispatcherFrame(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Threading.DispatcherFrame.Continue
  parent: System.Windows.Threading.DispatcherFrame
  isExternal: false
  name: Continue
  nameWithType: DispatcherFrame.Continue
  fullName: System.Windows.Threading.DispatcherFrame.Continue
- uid: System.Windows.Threading.DispatcherFrame.#ctor*
  parent: System.Windows.Threading.DispatcherFrame
  isExternal: false
  name: DispatcherFrame
  nameWithType: DispatcherFrame.DispatcherFrame
- uid: System.Windows.Threading.DispatcherFrame.Continue*
  parent: System.Windows.Threading.DispatcherFrame
  isExternal: false
  name: Continue
  nameWithType: DispatcherFrame.Continue
