### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.LinkButton
  id: LinkButton
  children:
  - System.Web.UI.WebControls.LinkButton.#ctor
  - System.Web.UI.WebControls.LinkButton.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.LinkButton.AddParsedSubObject(System.Object)
  - System.Web.UI.WebControls.LinkButton.CausesValidation
  - System.Web.UI.WebControls.LinkButton.Click
  - System.Web.UI.WebControls.LinkButton.Command
  - System.Web.UI.WebControls.LinkButton.CommandArgument
  - System.Web.UI.WebControls.LinkButton.CommandName
  - System.Web.UI.WebControls.LinkButton.GetPostBackOptions
  - System.Web.UI.WebControls.LinkButton.LoadViewState(System.Object)
  - System.Web.UI.WebControls.LinkButton.OnClick(System.EventArgs)
  - System.Web.UI.WebControls.LinkButton.OnClientClick
  - System.Web.UI.WebControls.LinkButton.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  - System.Web.UI.WebControls.LinkButton.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.LinkButton.PostBackUrl
  - System.Web.UI.WebControls.LinkButton.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.LinkButton.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.LinkButton.SupportsDisabledAttribute
  - System.Web.UI.WebControls.LinkButton.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.LinkButton.Text
  - System.Web.UI.WebControls.LinkButton.ValidationGroup
  langs:
  - csharp
  name: LinkButton
  nameWithType: LinkButton
  fullName: System.Web.UI.WebControls.LinkButton
  type: Class
  summary: "웹 페이지에 하이퍼링크 스타일 단추 컨트롤을 표시 합니다."
  remarks: "이 항목의:- [소개](#introduction)      -   [LinkButton 컨트롤 및 유효성 검사](#ButtonControlsAndValidation)      -   [선언적 구문](#DeclarativeSyntax) <a name=&quot;introduction&quot;> </a> # # 소개 LinkButton 컨트롤을 사용 웹 페이지에 하이퍼링크 스타일 단추를 만들 수 있습니다.       LinkButton 컨트롤에 동일한 모양으로는 <xref:System.Web.UI.WebControls.HyperLink>컨트롤과 같지만와 동일한 기능을 <xref:System.Web.UI.WebControls.Button>컨트롤.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.HyperLink> 컨트롤을 클릭할 때 다른 웹 페이지에 연결 하려는 경우를 사용해는 <xref:System.Web.UI.WebControls.HyperLink>컨트롤.</xref:System.Web.UI.WebControls.HyperLink>      > [!NOTE] > The LinkButton 컨트롤이 클라이언트 브라우저에 JavaScript를 렌더링 합니다. 클라이언트 브라우저에 제대로 작동 하려면 JavaScript이이 컨트롤에 사용 해야 합니다. 클라이언트 스크립트에 대 한 자세한 내용은 참조 하십시오. [ASP.NET 웹 페이지에서 클라이언트 스크립트](~/add/includes/ajax-current-ext-md.md)합니다.       제출 단추 또는 명령 단추를 만들 수 있습니다. 제출 단추는 연결 된 명령 이름을 없습니다. 단추는 단순히 다시 서버에 웹 페이지를 게시 합니다. 기본적으로 LinkButton 컨트롤은 전송 단추를 사용 합니다. 에 대 한 이벤트 처리기를 제공할 수 있습니다는 <xref:System.Web.UI.WebControls.LinkButton.Click>제출 단추를 클릭할 때 이벤트는 작업을 프로그래밍 방식으로 제어를 수행 합니다.</xref:System.Web.UI.WebControls.LinkButton.Click> 반면에 명령 단추에는 단추와 같은 연관 되는 명령 이름을 `Sort`합니다. 설정의 <xref:System.Web.UI.WebControls.LinkButton.CommandName%2A>명령 이름을 지정 하는 속성입니다.</xref:System.Web.UI.WebControls.LinkButton.CommandName%2A> 이 웹 페이지에 있는 여러 LinkButton 컨트롤을 만들고 프로그래밍 방식으로 어떤 LinkButton 컨트롤을 클릭 하면 확인 수 있습니다. 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.LinkButton.CommandArgument%2A>오름차순을 지정 하는 등을 수행 하려면 명령에 대 한 추가 정보를 제공 하는 명령 단추를 사용 하 여 속성.</xref:System.Web.UI.WebControls.LinkButton.CommandArgument%2A> 에 대 한 이벤트 처리기를 제공할 수도 있습니다는 <xref:System.Web.UI.WebControls.LinkButton.Command>명령 단추를 클릭할 때 이벤트는 작업을 프로그래밍 방식으로 제어를 수행 합니다.</xref:System.Web.UI.WebControls.LinkButton.Command>      > [!CAUTION] > 악의적인 클라이언트 스크립트가 포함 될 수 있습니다는 사용자 입력을 표시 하려면이 컨트롤을 사용할 수 있습니다. 텍스트 HTML LinkButton 컨트롤에 표시 되기 전에 인코딩되지 않습니다. 응용 프로그램에 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 보낸 모든 정보를 확인 합니다. ASP.NET은 사용자 입력에 있는 스크립트 블록 및 HTML에 있는 입력된 요청 유효성 검사 기능을 제공 합니다. 유효성 검사 서버 컨트롤이 사용자 입력을 평가 하기 위해 제공 됩니다. 자세한 내용은 참조 [유효성 검사 서버 컨트롤 구문](http://msdn.microsoft.com/en-us/96d2c59e-693c-4079-9b53-b3ff0d9e9133)합니다.      <a name=&quot;ButtonControlsAndValidation&quot;></a># # LinkButton 컨트롤 및 유효성 검사 하 여 기본적으로 페이지의 유효성 검사는 LinkButton 컨트롤을 클릭할 때 수행 됩니다. 페이지 유효성 검사는 입력된 컨트롤과 모두 유효성 검사 컨트롤에 의해 지정 된 유효성 검사 규칙을 통과 하는 페이지에 유효성 검사 컨트롤 연관 있는지 여부를 결정 합니다. 페이지 유효성 검사가 수행을 방지 하려면 설정는 <xref:System.Web.UI.WebControls.LinkButton.CausesValidation%2A>속성을 `false`.</xref:System.Web.UI.WebControls.LinkButton.CausesValidation%2A>      <a name=&quot;DeclarativeSyntax&quot;></a># # 선언적 구문```   <asp:LinkButton       AccessKey=&quot;string&quot;       BackColor=&quot;color name|#dddddd&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       CausesValidation=&quot;True|False&quot;       CommandArgument=&quot;string&quot;       CommandName=&quot;string&quot;       CssClass=&quot;string&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       ForeColor=&quot;color name|#dddddd&quot;       Height=&quot;size&quot;       ID=&quot;string&quot;       OnClick=&quot;Click event handler&quot;       OnClientClick=&quot;string&quot;       OnCommand=&quot;Command event handler&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       PostBackUrl=&quot;uri&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       Text=&quot;string&quot;       ToolTip=&quot;string&quot;       ValidationGroup=&quot;string&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   />   ```"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192872).  \n  \n The following example demonstrates how to create a LinkButton control that displays text in a <xref:System.Web.UI.WebControls.Label> control when the link is clicked.  \n  \n [!code-vb[Classic LinkButton Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_69_1.aspx)]\n [!code-cs[Classic LinkButton Example#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_69_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Click")]

      [System.ComponentModel.DefaultProperty("Text")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LinkButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.LinkButtonControlBuilder))]

      [System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.ParseChildren(false)]

      [System.Web.UI.SupportsEventValidation]

      [System.Web.UI.ToolboxData("<{0}:LinkButton runat="server">LinkButton</{0}:LinkButton>")]

      public class LinkButton : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  implements:
  - System.Web.UI.IPostBackEventHandler
  - System.Web.UI.WebControls.IButtonControl
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CreateControlStyle
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SaveViewState
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagKey
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.TrackViewState
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinkButton.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.LinkButton
  langs:
  - csharp
  name: LinkButton()
  nameWithType: LinkButton.LinkButton()
  fullName: System.Web.UI.WebControls.LinkButton.LinkButton()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.LinkButton&quot;> </xref> 클래스입니다."
  remarks: "이 생성자를 사용 하 여 만들고의 새 인스턴스를 초기화 하는 <xref:System.Web.UI.WebControls.LinkButton>컨트롤.</xref:System.Web.UI.WebControls.LinkButton>"
  example:
  - "The following example illustrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.LinkButton> control.  \n  \n [!code-vb[Classic LinkButton.LinkButton Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_159_1.aspx)]\n [!code-cs[Classic LinkButton.LinkButton Example#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_159_1.aspx)]"
  syntax:
    content: public LinkButton ();
    parameters: []
  overload: System.Web.UI.WebControls.LinkButton.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinkButton.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  id: AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.LinkButton
  langs:
  - csharp
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: LinkButton.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.LinkButton.AddAttributesToRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "특성을 추가 <xref href=&quot;System.Web.UI.WebControls.LinkButton&quot;> </xref> 클라이언트에 렌더링 하기 위한 출력 스트림에 컨트롤입니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to override the AddAttributesToRender method in a custom server control, so that the <xref:System.Web.UI.WebControls.LinkButton> list item text always appears bold.  \n  \n [!code-cs[CustomLinkButtonAddAttributesToRender#1](~/add/codesnippet/csharp/69a2699c-196b-44a7-9f0f-_1.aspx)]\n [!code-vb[CustomLinkButtonAddAttributesToRender#1](~/add/codesnippet/visualbasic/69a2699c-196b-44a7-9f0f-_1.aspx)]  \n[!code-cs[CustomLinkButtonAddAttributesToRender#2](~/add/codesnippet/csharp/69a2699c-196b-44a7-9f0f-_2.cs)]\n[!code-vb[CustomLinkButtonAddAttributesToRender#2](~/add/codesnippet/visualbasic/69a2699c-196b-44a7-9f0f-_2.vb)]"
  syntax:
    content: protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "A <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> 클라이언트에 렌더링할 출력 스트림이 들어 있는입니다."
  overload: System.Web.UI.WebControls.LinkButton.AddAttributesToRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinkButton.AddParsedSubObject(System.Object)
  id: AddParsedSubObject(System.Object)
  parent: System.Web.UI.WebControls.LinkButton
  langs:
  - csharp
  name: AddParsedSubObject(Object)
  nameWithType: LinkButton.AddParsedSubObject(Object)
  fullName: System.Web.UI.WebControls.LinkButton.AddParsedSubObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "XML 또는 HTML 요소를 구문 분석, 및를 컨트롤의 요소를 추가 컨트롤에 알리고 <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> 개체입니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to override the AddParsedSubObject method in a custom <xref:System.Web.UI.WebControls.LinkButton> server control so that it either sets the text property to the parsed object's text property, if the parsed object is a <xref:System.Web.UI.WebControls.Literal> object, or to an empty string otherwise.  \n  \n [!code-vb[CustomLinkButtonAddParsedSubObject#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_52_1.aspx)]\n [!code-cs[CustomLinkButtonAddParsedSubObject#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_52_1.aspx)]  \n[!code-cs[CustomLinkButtonAddParsedSubObject#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_52_2.cs)]\n[!code-vb[CustomLinkButtonAddParsedSubObject#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_52_2.vb)]"
  syntax:
    content: protected override void AddParsedSubObject (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>구문 분석된 한 요소를 나타내는입니다.</xref:System.Object>"
  overload: System.Web.UI.WebControls.LinkButton.AddParsedSubObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinkButton.CausesValidation
  id: CausesValidation
  parent: System.Web.UI.WebControls.LinkButton
  langs:
  - csharp
  name: CausesValidation
  nameWithType: LinkButton.CausesValidation
  fullName: System.Web.UI.WebControls.LinkButton.CausesValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "유효성 검사를 수행할지 여부를 나타내는 값을 가져오거나 설정 합니다. 때는 <xref href=&quot;System.Web.UI.WebControls.LinkButton&quot;> </xref> 컨트롤을 클릭 합니다."
  remarks: "기본적으로 페이지 유효성 검사가 수행 됩니다 때는 <xref:System.Web.UI.WebControls.LinkButton>컨트롤을 클릭 합니다.</xref:System.Web.UI.WebControls.LinkButton> 페이지 유효성 검사는 입력된 컨트롤과 모두 유효성 검사 컨트롤에 의해 지정 된 유효성 검사 규칙을 통과 하는 페이지에 유효성 검사 컨트롤 연관 있는지 여부를 결정 합니다.       사용자 수 지정 (또는 결정) 클라이언트와 서버 모두에서 유효성 검사를 수행 하는 여부 때는 <xref:System.Web.UI.WebControls.LinkButton>CausesValidation 속성을 사용 하 여 컨트롤을 클릭 합니다.</xref:System.Web.UI.WebControls.LinkButton> 유효성 검사가 수행 되지를 방지 하려면 CausesValidation 속성을 설정 `false`합니다.       이 속성은 보통 설정 `false` 다시 설정 또는 지우기 단추는 단추를 클릭할 때 수행 되 고 유효성 검사가 되지 않도록 합니다.       CausesValidation 속성 값을로 설정 된 경우 `true`를 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.LinkButton.ValidationGroup%2A>속성을 유효성 검사 그룹의 이름을 지정 하는 <xref:System.Web.UI.WebControls.LinkButton>이 컨트롤로 유효성 검사.</xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.LinkButton.ValidationGroup%2A>       테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following example demonstrates how to use the CausesValidation property to prevent page validation from occurring. Notice how the <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> method activates each validation control independently.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[LinkButtonCausesValidation#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_589_1.aspx)]\n [!code-cs[LinkButtonCausesValidation#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_589_1.aspx)]"
  syntax:
    content: public virtual bool CausesValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>유효성 검사가 수행 되는 경우는 <xref href=&quot;System.Web.UI.WebControls.LinkButton&quot;> </xref> 제어 되 고, 그러지 않으면 클릭 한 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.LinkButton.CausesValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinkButton.Click
  id: Click
  parent: System.Web.UI.WebControls.LinkButton
  langs:
  - csharp
  name: Click
  nameWithType: LinkButton.Click
  fullName: System.Web.UI.WebControls.LinkButton.Click
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 경우는 <xref href=&quot;System.Web.UI.WebControls.LinkButton&quot;> </xref> 컨트롤을 클릭 합니다."
  remarks: "클릭 이벤트가 발생 하면는 <xref:System.Web.UI.WebControls.LinkButton>컨트롤을 클릭 합니다.</xref:System.Web.UI.WebControls.LinkButton> 명령 이름이 없는 연결 된 경우이 이벤트는 주로 사용은 <xref:System.Web.UI.WebControls.LinkButton>전송 단추의 경우를 제어 합니다.</xref:System.Web.UI.WebControls.LinkButton>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to specify and code a handler for the Click event to display a message when the <xref:System.Web.UI.WebControls.LinkButton> control is clicked.  \n  \n [!code-vb[Classic LinkButton Example#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_65_1.aspx)]\n [!code-cs[Classic LinkButton Example#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_65_1.aspx)]"
  syntax:
    content: public event EventHandler Click;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinkButton.Command
  id: Command
  parent: System.Web.UI.WebControls.LinkButton
  langs:
  - csharp
  name: Command
  nameWithType: LinkButton.Command
  fullName: System.Web.UI.WebControls.LinkButton.Command
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 경우는 <xref href=&quot;System.Web.UI.WebControls.LinkButton&quot;> </xref> 컨트롤을 클릭 합니다."
  remarks: "명령 이벤트가 발생 하면는 <xref:System.Web.UI.WebControls.LinkButton>컨트롤을 클릭 합니다.</xref:System.Web.UI.WebControls.LinkButton> 이 이벤트는 일반적는 명령 이름을 같은 `Sort`, 연결 된는 <xref:System.Web.UI.WebControls.LinkButton>컨트롤.</xref:System.Web.UI.WebControls.LinkButton> 이렇게 하면 여러 개 만들 수 있습니다 <xref:System.Web.UI.WebControls.LinkButton>웹 페이지 컨트롤과 프로그래밍 방식으로 결정 <xref:System.Web.UI.WebControls.LinkButton>컨트롤을 클릭 합니다.</xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.LinkButton>      > [!NOTE] > The 명령 이벤트의 형태로 컨트롤 계층 구조를 통해 발생 된 `BubbleEvent`합니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.LinkButton.Click> event to display a message when the <xref:System.Web.UI.WebControls.LinkButton> control is clicked.  \n  \n [!code-vb[Classic LinkButton.CommandName Example#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_60_1.aspx)]\n [!code-cs[Classic LinkButton.CommandName Example#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_60_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.CommandEventHandler Command;
    return:
      type: System.Web.UI.WebControls.CommandEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinkButton.CommandArgument
  id: CommandArgument
  parent: System.Web.UI.WebControls.LinkButton
  langs:
  - csharp
  name: CommandArgument
  nameWithType: LinkButton.CommandArgument
  fullName: System.Web.UI.WebControls.LinkButton.CommandArgument
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 전달 되는 선택적 인수를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.LinkButton.Command&quot;> </xref> 함께 연결 된 이벤트 처리기 <xref:System.Web.UI.WebControls.LinkButton.CommandName*>속성.</xref:System.Web.UI.WebControls.LinkButton.CommandName*>"
  remarks: "CommandArgument 속성을 사용 하 여 보완 하는 인수를 지정 하는 <xref:System.Web.UI.WebControls.LinkButton.CommandName%2A>속성.</xref:System.Web.UI.WebControls.LinkButton.CommandName%2A>      > [!NOTE] > The CommandArgument 속성은 경우에 사용 일반적으로 <xref:System.Web.UI.WebControls.LinkButton.CommandName%2A>속성을 설정 합니다.</xref:System.Web.UI.WebControls.LinkButton.CommandName%2A>       CommandArgument 속성 보완은 <xref:System.Web.UI.WebControls.LinkButton.CommandName%2A>수행 하기 위한 명령에 대 한 추가 정보를 제공 하는 속성.</xref:System.Web.UI.WebControls.LinkButton.CommandName%2A> 예를 들어, 설정할 수는 <xref:System.Web.UI.WebControls.LinkButton.CommandName%2A>속성을 `Sort` CommandArgument 속성을 설정 하 고 `Ascending` 오름차순으로 정렬 하려면 명령을 지정 하려면.</xref:System.Web.UI.WebControls.LinkButton.CommandName%2A>       테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following example demonstrates how to use the CommandArgument property to specify an optional argument that complements the command name for a <xref:System.Web.UI.WebControls.LinkButton> control.  \n  \n [!code-vb[Classic LinkButton.CommandName Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_303_1.aspx)]\n [!code-cs[Classic LinkButton.CommandName Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_303_1.aspx)]"
  syntax:
    content: public string CommandArgument { get; set; }
    return:
      type: System.String
      description: "로 전달 되는 선택적 인수는 <xref href=&quot;System.Web.UI.WebControls.LinkButton.Command&quot;> </xref> 함께 연결 된 이벤트 처리기 <xref:System.Web.UI.WebControls.LinkButton.CommandName*>속성.</xref:System.Web.UI.WebControls.LinkButton.CommandName*> 기본값은 &lt;xref:System.String.Empty?displayProperty=fullName&gt;합니다."
  overload: System.Web.UI.WebControls.LinkButton.CommandArgument*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinkButton.CommandName
  id: CommandName
  parent: System.Web.UI.WebControls.LinkButton
  langs:
  - csharp
  name: CommandName
  nameWithType: LinkButton.CommandName
  fullName: System.Web.UI.WebControls.LinkButton.CommandName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "연결 된 명령 이름을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.LinkButton&quot;> </xref> 제어 합니다. 이 값이 전달 된 <xref href=&quot;System.Web.UI.WebControls.LinkButton.Command&quot;> </xref> 와 함께 이벤트 처리기는 <xref:System.Web.UI.WebControls.LinkButton.CommandArgument*>속성.</xref:System.Web.UI.WebControls.LinkButton.CommandArgument*>"
  remarks: "여러 개 <xref:System.Web.UI.WebControls.LinkButton>CommandName 속성에 연결 된 명령 이름을 지정 하거나 확인을 사용 하는 웹 페이지에 컨트롤의 <xref:System.Web.UI.WebControls.LinkButton>컨트롤을 클릭 합니다.</xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.LinkButton> 수행할 명령을 식별 하는 모든 문자열을 사용 하 여 CommandName 속성을 설정할 수 있습니다. 명령 이름을 프로그래밍 방식으로 확인 한 다음 수는 <xref:System.Web.UI.WebControls.LinkButton>제어 하 고 적절 한 조치를 수행 합니다.</xref:System.Web.UI.WebControls.LinkButton>       명령에 대 한 자세한 내용은 같은 `Ascending` 정렬 순서를 사용 하 여 지정할 수는 <xref:System.Web.UI.WebControls.LinkButton.CommandArgument%2A>속성.</xref:System.Web.UI.WebControls.LinkButton.CommandArgument%2A>       테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following example demonstrates how to use the CommandName property to specify a command name for a <xref:System.Web.UI.WebControls.LinkButton> control.  \n  \n [!code-vb[Classic LinkButton.CommandName Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1080_1.aspx)]\n [!code-cs[Classic LinkButton.CommandName Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1080_1.aspx)]"
  syntax:
    content: public string CommandName { get; set; }
    return:
      type: System.String
      description: "명령 이름은 <xref href=&quot;System.Web.UI.WebControls.LinkButton&quot;> </xref> 제어 합니다. 기본값은 &lt;xref:System.String.Empty?displayProperty=fullName&gt;합니다."
  overload: System.Web.UI.WebControls.LinkButton.CommandName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinkButton.GetPostBackOptions
  id: GetPostBackOptions
  parent: System.Web.UI.WebControls.LinkButton
  langs:
  - csharp
  name: GetPostBackOptions()
  nameWithType: LinkButton.GetPostBackOptions()
  fullName: System.Web.UI.WebControls.LinkButton.GetPostBackOptions()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "만듭니다는 <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> 을 나타내는 개체는 <xref href=&quot;System.Web.UI.WebControls.LinkButton&quot;> </xref> 컨트롤의 포스트백 동작 합니다."
  remarks: "GetPostBackOptions 메서드 만듭니다는 <xref:System.Web.UI.PostBackOptions>을 나타내는 개체는 <xref:System.Web.UI.WebControls.LinkButton>컨트롤의 포스트백 동작.</xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.PostBackOptions> <xref:System.Web.UI.PostBackOptions>에 일반적으로 전달 된 다음이 개체는 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=fullName>클라이언트 쪽 스크립트 함수에 대 한 참조를 가져올 호출에 사용 되는 메서드를 선택 하면 서버는 페이지에 다시 게시를.</xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=fullName> </xref:System.Web.UI.PostBackOptions>       <xref:System.Web.UI.WebControls.LinkButton>클래스</xref:System.Web.UI.WebControls.LinkButton> 를 확장할 때 주로 컨트롤 개발자가이 메서드는"
  syntax:
    content: protected virtual System.Web.UI.PostBackOptions GetPostBackOptions ();
    parameters: []
    return:
      type: System.Web.UI.PostBackOptions
      description: "A <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> 나타내는 <xref href=&quot;System.Web.UI.WebControls.LinkButton&quot;> </xref> 컨트롤의 포스트백 동작 합니다."
  overload: System.Web.UI.WebControls.LinkButton.GetPostBackOptions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinkButton.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.LinkButton
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: LinkButton.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.LinkButton.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "저장 한 이전 요청에서 뷰 상태 정보가 복원 되는 <xref:System.Web.UI.WebControls.WebControl.SaveViewState*>메서드.</xref:System.Web.UI.WebControls.WebControl.SaveViewState*>"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "복원할 컨트롤 상태를 나타내는 개체입니다."
  overload: System.Web.UI.WebControls.LinkButton.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinkButton.OnClick(System.EventArgs)
  id: OnClick(System.EventArgs)
  parent: System.Web.UI.WebControls.LinkButton
  langs:
  - csharp
  name: OnClick(EventArgs)
  nameWithType: LinkButton.OnClick(EventArgs)
  fullName: System.Web.UI.WebControls.LinkButton.OnClick(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생는 <xref href=&quot;System.Web.UI.WebControls.LinkButton.Click&quot;> </xref> 의 이벤트는 <xref href=&quot;System.Web.UI.WebControls.LinkButton&quot;> </xref> 제어 합니다."
  remarks: "<xref:System.Web.UI.WebControls.LinkButton.Click>이벤트가 발생할 때는 <xref:System.Web.UI.WebControls.LinkButton>컨트롤을 클릭 합니다.</xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.LinkButton.Click> 명령 이름이 없는 연결 된 경우이 이벤트는 주로 사용은 <xref:System.Web.UI.WebControls.LinkButton>전송 단추의 경우를 제어 합니다.</xref:System.Web.UI.WebControls.LinkButton>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnClick 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.LinkButton.Click> event to display which <xref:System.Web.UI.WebControls.LinkButton> control is clicked.  \n  \n [!code-vb[Classic LinkButton Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_126_1.aspx)]\n [!code-cs[Classic LinkButton Example#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_126_1.aspx)]"
  syntax:
    content: protected virtual void OnClick (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "A &lt;xref:System.EventArgs?displayProperty=fullName&gt; 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.LinkButton.OnClick*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinkButton.OnClientClick
  id: OnClientClick
  parent: System.Web.UI.WebControls.LinkButton
  langs:
  - csharp
  name: OnClientClick
  nameWithType: LinkButton.OnClientClick
  fullName: System.Web.UI.WebControls.LinkButton.OnClientClick
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "때 실행 되는 클라이언트 쪽 스크립트를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.LinkButton&quot;> </xref> 컨트롤의 <xref href=&quot;System.Web.UI.WebControls.LinkButton.Click&quot;> </xref> 이벤트 발생"
  remarks: "OnClientClick 속성을 사용 하 여 때 실행 되는 추가 클라이언트 쪽 스크립트를 지정 하는 <xref:System.Web.UI.WebControls.LinkButton>컨트롤의 <xref:System.Web.UI.WebControls.LinkButton.Click>이벤트가 발생 합니다.</xref:System.Web.UI.WebControls.LinkButton.Click> </xref:System.Web.UI.WebControls.LinkButton> 이 속성은 렌더링에 대해 지정 하는 스크립트는 <xref:System.Web.UI.WebControls.LinkButton>컨트롤의 `OnClick` 특성 컨트롤의 외에도 클라이언트 쪽 스크립트를 미리 정의 된</xref:System.Web.UI.WebControls.LinkButton>       테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the OnClientClick property to specify additional client-side script that executes when a <xref:System.Web.UI.WebControls.LinkButton> control is clicked.  \n  \n [!code-cs[LinkButton.OnClientClick#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_456_1.aspx)]\n [!code-vb[LinkButton.OnClientClick#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_456_1.aspx)]"
  syntax:
    content: public virtual string OnClientClick { get; set; }
    return:
      type: System.String
      description: "클라이언트 쪽 스크립트 때 실행 되는 <xref href=&quot;System.Web.UI.WebControls.LinkButton&quot;> </xref> 컨트롤의 <xref href=&quot;System.Web.UI.WebControls.LinkButton.Click&quot;> </xref> 이벤트가 발생 합니다."
  overload: System.Web.UI.WebControls.LinkButton.OnClientClick*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinkButton.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  id: OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.LinkButton
  langs:
  - csharp
  name: OnCommand(CommandEventArgs)
  nameWithType: LinkButton.OnCommand(CommandEventArgs)
  fullName: System.Web.UI.WebControls.LinkButton.OnCommand(CommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생는 <xref href=&quot;System.Web.UI.WebControls.LinkButton.Command&quot;> </xref> 의 이벤트는 <xref href=&quot;System.Web.UI.WebControls.LinkButton&quot;> </xref> 제어 합니다."
  remarks: "<xref:System.Web.UI.WebControls.LinkButton.Command>이벤트가 발생할 때는 <xref:System.Web.UI.WebControls.LinkButton>컨트롤을 클릭 합니다.</xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.LinkButton.Command> 이 이벤트는 일반적는 명령 이름을 같은 `Sort`, 연결 된는 <xref:System.Web.UI.WebControls.LinkButton>컨트롤.</xref:System.Web.UI.WebControls.LinkButton> 이렇게 하면 여러 개 만들 수 있습니다 <xref:System.Web.UI.WebControls.LinkButton>웹 페이지 컨트롤과 프로그래밍 방식으로 결정 <xref:System.Web.UI.WebControls.LinkButton>컨트롤을 클릭 합니다.</xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.LinkButton>      > [!NOTE] >는 <xref:System.Web.UI.WebControls.LinkButton.Command>의 형태로 컨트롤 계층 구조를 통해 이벤트는 `BubbleEvent`.</xref:System.Web.UI.WebControls.LinkButton.Command>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnCommand 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.LinkButton.Command> event to display which <xref:System.Web.UI.WebControls.LinkButton> control is clicked.  \n  \n [!code-vb[Classic LinkButton.CommandName Example#1](~/add/codesnippet/visualbasic/a227dc92-ba40-4752-8c73-_1.aspx)]\n [!code-cs[Classic LinkButton.CommandName Example#1](~/add/codesnippet/csharp/a227dc92-ba40-4752-8c73-_1.aspx)]"
  syntax:
    content: protected virtual void OnCommand (System.Web.UI.WebControls.CommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.CommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.CommandEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.LinkButton.OnCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinkButton.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.LinkButton
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: LinkButton.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.LinkButton.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref> 이벤트입니다."
  remarks: "OnPreRender 메서드 알립니다는 <xref:System.Web.UI.WebControls.LinkButton>컨트롤을 클라이언트에 저장 된 뷰 상태 및 콘텐츠 렌더링 하기 전에 필요한 모든 사전 렌더링 단계를 수행 합니다.</xref:System.Web.UI.WebControls.LinkButton>"
  example:
  - "The following code example demonstrates how to override the OnPreRender method so that a border is never displayed in a custom <xref:System.Web.UI.WebControls.LinkButton> control.  \n  \n [!code-vb[CustomLinkButtonOnPreRender#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_70_1.aspx)]\n [!code-cs[CustomLinkButtonOnPreRender#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_70_1.aspx)]  \n[!code-cs[CustomLinkButtonOnPreRender#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_70_2.cs)]\n[!code-vb[CustomLinkButtonOnPreRender#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_70_2.vb)]"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는 개체입니다.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.LinkButton.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinkButton.PostBackUrl
  id: PostBackUrl
  parent: System.Web.UI.WebControls.LinkButton
  langs:
  - csharp
  name: PostBackUrl
  nameWithType: LinkButton.PostBackUrl
  fullName: System.Web.UI.WebControls.LinkButton.PostBackUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "게시할 때 페이지에서 현재 페이지의 URL을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.LinkButton&quot;> </xref> 컨트롤을 클릭 합니다."
  remarks: "PostBackUrl 속성을 사용 하면 페이지 간 post를 사용 하 여 수행 하는 <xref:System.Web.UI.WebControls.LinkButton>컨트롤.</xref:System.Web.UI.WebControls.LinkButton> PostBackUrl 속성 때 게시할 웹 페이지의 URL로 설정 된 <xref:System.Web.UI.WebControls.LinkButton>컨트롤을 클릭 합니다.</xref:System.Web.UI.WebControls.LinkButton> 예를 들어 Page2.aspx를 지정 하면 포함 된 페이지는 <xref:System.Web.UI.WebControls.LinkButton>를 `Page2.aspx`.</xref:System.Web.UI.WebControls.LinkButton> PostBackUrl 속성에 대 한 값을 지정 하지 않는 경우 페이지는 자신에 게 다시 게시 합니다.      > [!IMPORTANT] > 있는지 확인 해야 컨트롤과 서버 쪽 유효성 검사와 페이지 간 포스트백을 수행 하는 경우 페이지의 <xref:System.Web.UI.Page.IsValid%2A>속성은 `true` 포스트백을 처리 하기 전에.</xref:System.Web.UI.Page.IsValid%2A> 페이지 간 포스트백 확인 하려면 페이지의 PreviousPage는입니다. 다음 Visual Basic 코드에서는 과정을 보여 줍니다.: ```   Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load           If Page.PreviousPage.IsValid Then               &quot; Handle the post back           Else               Response.Write(&quot;Invalid&quot;)           End If   End Sub   ``` 페이지 간 게시 방법에 대 한 자세한 내용은 참조 하십시오. [ASP.NET Web Forms의 게시 페이지 간](~/add/includes/ajax-current-ext-md.md)합니다.       테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the PostBackUrl property to perform a cross-page post. When the user clicks the <xref:System.Web.UI.WebControls.LinkButton> control, the page posts the value entered in the text box to the target page specified by the PostBackUrl property. To run this sample, you must also create a file for the target page in the same directory as this code example. The code for the target page is provided in the next example.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[LinkButton.PostBackUrlProperty#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_276_1.aspx)]\n [!code-vb[LinkButton.PostBackUrlProperty#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_276_1.aspx)]  \n  \n The following code example demonstrates how to use the <xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=fullName> property to access a value that was posted from another page using the PostBackUrl property. This page gets the string that was posted from the previous page and displays it to the user. If you attempt to run this code example directly, you will get an error because the value of the `text` field will be `null`. Instead, use this code to create a target page and place the file in the same directory as the code for the previous example. The name of the file must correspond to the value specified for the PostBackUrl property in the previous example. When you run the code for the previous example, this page will execute automatically when the cross-page post occurs.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](../Topic/Script%20Exploits%20Overview.md).  \n  \n [!code-cs[LinkButton.PostBackUrlPage2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_276_2.aspx)]\n [!code-vb[LinkButton.PostBackUrlPage2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_276_2.aspx)]"
  syntax:
    content: public virtual string PostBackUrl { get; set; }
    return:
      type: System.String
      description: "게시할 때 페이지에서 현재 웹 페이지의 URL은 <xref href=&quot;System.Web.UI.WebControls.LinkButton&quot;> </xref> 컨트롤을 클릭 합니다. 기본값은 빈 문자열 (&quot;&quot;),이 경우에 다시 게시 하는 페이지가 있습니다."
  overload: System.Web.UI.WebControls.LinkButton.PostBackUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinkButton.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.LinkButton
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: LinkButton.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.LinkButton.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 이벤트를 발생 시키는 <xref href=&quot;System.Web.UI.WebControls.LinkButton&quot;> </xref> 서버에 다시 게시 될 때 제어 합니다."
  remarks: "이 이벤트는 내부적으로 사용는 <xref:System.Web.UI.WebControls.LinkButton>컨트롤이 발생 시키는 클릭할 때 한 <xref:System.Web.UI.WebControls.LinkButton.Click>이벤트를 정의 하는 경우는 <xref:System.Web.UI.WebControls.LinkButton.Command>이벤트.</xref:System.Web.UI.WebControls.LinkButton.Command> </xref:System.Web.UI.WebControls.LinkButton.Click> </xref:System.Web.UI.WebControls.LinkButton>"
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "이벤트에 대 한 인수입니다."
  overload: System.Web.UI.WebControls.LinkButton.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinkButton.RenderContents(System.Web.UI.HtmlTextWriter)
  id: RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.LinkButton
  langs:
  - csharp
  name: RenderContents(HtmlTextWriter)
  nameWithType: LinkButton.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.LinkButton.RenderContents(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤의 내용이 지정된 된 작성기에 렌더링합니다."
  remarks: "이 메서드는 주로 컨트롤 개발자가 사용 됩니다."
  example:
  - "The following code example demonstrates how to override the RenderContents method in a custom server control so that some text is appended to the <xref:System.Web.UI.WebControls.LinkButton>.  \n  \n [!code-cs[CustomLinkButtonRenderContents#1](~/add/codesnippet/csharp/e6315aa1-81f2-4917-8b09-_1.aspx)]\n [!code-vb[CustomLinkButtonRenderContents#1](~/add/codesnippet/visualbasic/e6315aa1-81f2-4917-8b09-_1.aspx)]  \n[!code-vb[CustomLinkButtonRenderContents#2](~/add/codesnippet/visualbasic/e6315aa1-81f2-4917-8b09-_2.vb)]\n[!code-cs[CustomLinkButtonRenderContents#2](~/add/codesnippet/csharp/e6315aa1-81f2-4917-8b09-_2.cs)]"
  syntax:
    content: protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "A <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> HTML 클라이언트에서 콘텐츠를 렌더링 하기 위한 출력 스트림을 나타내는입니다."
  overload: System.Web.UI.WebControls.LinkButton.RenderContents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinkButton.SupportsDisabledAttribute
  id: SupportsDisabledAttribute
  parent: System.Web.UI.WebControls.LinkButton
  langs:
  - csharp
  name: SupportsDisabledAttribute
  nameWithType: LinkButton.SupportsDisabledAttribute
  fullName: System.Web.UI.WebControls.LinkButton.SupportsDisabledAttribute
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤 설정할지 여부를 나타내는 값을 가져옵니다는 <xref uid=&quot;langword_csharp_disabled&quot; name=&quot;disabled&quot; href=&quot;&quot;> </xref> 에 렌더링 된 HTML 요소의 특성 &quot;disabled&quot; 컨트롤의 <xref:System.Web.UI.WebControls.WebControl.IsEnabled*>속성은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.WebControl.IsEnabled*>"
  remarks: "이 속성 방법을 ASP.NET HTML을 렌더링할지 컨트롤에 대 한 컨트롤을 사용 하지 것을 나타냅니다. 이 속성이 `true`, ASP.NET에서 렌더링 한 `disabled` 컨트롤을 사용 하지 않으면 합니다. 이 속성이 `false`, ASP.NET에서 렌더링 한 `class` 컨트롤을 사용 하지 않으면 합니다. 자세한 내용은 <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A?displayProperty=fullName>.</xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A?displayProperty=fullName> 을 참조 하십시오."
  syntax:
    content: public override bool SupportsDisabledAttribute { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 &lt;xref:System.Web.UI.Control.RenderingCompatibility%2A?displayProperty=fullName&gt; 속성 보다 낮은 ASP.NET 버전을 나타내면 `4.0`, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.LinkButton.SupportsDisabledAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinkButton.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.LinkButton
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: LinkButton.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.LinkButton.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.LinkButton>인스턴스로 캐스팅 되는 <xref:System.Web.UI.IPostBackEventHandler>인터페이스.</xref:System.Web.UI.IPostBackEventHandler> </xref:System.Web.UI.WebControls.LinkButton>"
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "이벤트에 대 한 인수입니다."
  overload: System.Web.UI.WebControls.LinkButton.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinkButton.Text
  id: Text
  parent: System.Web.UI.WebControls.LinkButton
  langs:
  - csharp
  name: Text
  nameWithType: LinkButton.Text
  fullName: System.Web.UI.WebControls.LinkButton.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 표시 되는 텍스트 캡션을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.LinkButton&quot;> </xref> 제어 합니다."
  remarks: "Text 속성을 지정 하거나 확인에 표시할 캡션을 사용 하 여는 <xref:System.Web.UI.WebControls.LinkButton>컨트롤.</xref:System.Web.UI.WebControls.LinkButton>      > [!CAUTION] > 악의적인 클라이언트 스크립트가 포함 될 수 있습니다는 사용자 입력을 표시 하려면이 컨트롤을 사용할 수 있습니다. 응용 프로그램에 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 보낸 모든 정보를 확인 합니다. ASP.NET은 사용자 입력에 있는 스크립트 블록 및 HTML에 있는 입력된 요청 유효성 검사 기능을 제공 합니다. 유효성 검사 서버 컨트롤이 사용자 입력을 평가 하기 위해 제공 됩니다. 자세한 내용은 참조 [유효성 검사 서버 컨트롤 구문](http://msdn.microsoft.com/en-us/96d2c59e-693c-4079-9b53-b3ff0d9e9133)합니다.       이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute>및 [전역화 및 지역화](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to use the Text property to specify the caption that appears on the <xref:System.Web.UI.WebControls.LinkButton> control.  \n  \n [!code-vb[Classic LinkButton.CommandName Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_3_1.aspx)]\n [!code-cs[Classic LinkButton.CommandName Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_3_1.aspx)]"
  syntax:
    content: public virtual string Text { get; set; }
    return:
      type: System.String
      description: "에 표시할 텍스트 캡션입니다는 <xref href=&quot;System.Web.UI.WebControls.LinkButton&quot;> </xref> 제어 합니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.LinkButton.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinkButton.ValidationGroup
  id: ValidationGroup
  parent: System.Web.UI.WebControls.LinkButton
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: LinkButton.ValidationGroup
  fullName: System.Web.UI.WebControls.LinkButton.ValidationGroup
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤 그룹을 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.LinkButton&quot;> </xref> 제어 서버에 다시 게시 될 때 유효성 검사가 수행 됩니다."
  remarks: "유효성 검사 그룹을 사용 하는 페이지에 유효성 검사 컨트롤 특정 범주에 할당할 수 있습니다. 각 유효성 검사 그룹 페이지에서 다른 유효성 검사 그룹 별개로 검사할 수 있습니다. ValidationGroup 속성을 사용 하 여 유효성 검사 그룹의 이름을 지정 하는 <xref:System.Web.UI.WebControls.LinkButton>제어 서버에 다시 게시 될 때 유효성 검사가 수행 됩니다.</xref:System.Web.UI.WebControls.LinkButton>       이 속성은 적용 경우에만의 값은 <xref:System.Web.UI.WebControls.LinkButton.CausesValidation%2A>속성이 `true`.</xref:System.Web.UI.WebControls.LinkButton.CausesValidation%2A> 지정된 된 그룹의 일부인 경우 값을 지정 하면 ValidationGroup 속성에 대 한 유효성 검사 컨트롤에 때 유효성이 검사 되는 <xref:System.Web.UI.WebControls.LinkButton>컨트롤이 서버에 다시 게시 합니다.</xref:System.Web.UI.WebControls.LinkButton> 이 속성의 값을 지정 하지 않으면 및 <xref:System.Web.UI.WebControls.LinkButton.CausesValidation%2A>속성이 `true`, 페이지에서 유효성 검사 그룹에 할당 되지 않은 모든 유효성 검사 컨트롤에는 컨트롤이 서버에 다시 게시 될 때 유효성이 검사 됩니다.</xref:System.Web.UI.WebControls.LinkButton.CausesValidation%2A>       테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the ValidationGroup property to specify the controls that are to be validated when a <xref:System.Web.UI.WebControls.LinkButton> control posts back to the server. The page contains three text boxes to capture data from the user and three <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls to ensure that the user does not leave a text box blank. The <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls for the first two text boxes are in the `PersonalInfoGroup` validation group and the <xref:System.Web.UI.WebControls.RequiredFieldValidator> control for the third text box is in the `LocationInfoGroup` validation group. When `LinkButton1` is clicked, only the controls in validation group `PersonalInfoGroup` are validated. When `LinkButton2` is clicked, only the control in validation group `LocationInfoGroup` is validated.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[LinkButton.ValidationGroup#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1270_1.aspx)]\n [!code-cs[LinkButton.ValidationGroup#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1270_1.aspx)]"
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "되는 컨트롤 그룹의 <xref href=&quot;System.Web.UI.WebControls.LinkButton&quot;> </xref> 제어 서버에 다시 게시 될 때 유효성 검사가 수행 됩니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.LinkButton.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: System.Web.UI.WebControls.WebControl
- uid: System.Web.UI.WebControls.LinkButton.#ctor
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: LinkButton()
  nameWithType: LinkButton.LinkButton()
  fullName: System.Web.UI.WebControls.LinkButton.LinkButton()
- uid: System.Web.UI.WebControls.LinkButton.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: LinkButton.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.LinkButton.AddAttributesToRender(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.LinkButton.AddParsedSubObject(System.Object)
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: AddParsedSubObject(Object)
  nameWithType: LinkButton.AddParsedSubObject(Object)
  fullName: System.Web.UI.WebControls.LinkButton.AddParsedSubObject(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.LinkButton.CausesValidation
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: CausesValidation
  nameWithType: LinkButton.CausesValidation
  fullName: System.Web.UI.WebControls.LinkButton.CausesValidation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.LinkButton.Click
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: Click
  nameWithType: LinkButton.Click
  fullName: System.Web.UI.WebControls.LinkButton.Click
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.LinkButton.Command
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: Command
  nameWithType: LinkButton.Command
  fullName: System.Web.UI.WebControls.LinkButton.Command
- uid: System.Web.UI.WebControls.CommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: CommandEventHandler
  nameWithType: CommandEventHandler
  fullName: System.Web.UI.WebControls.CommandEventHandler
- uid: System.Web.UI.WebControls.LinkButton.CommandArgument
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: CommandArgument
  nameWithType: LinkButton.CommandArgument
  fullName: System.Web.UI.WebControls.LinkButton.CommandArgument
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.LinkButton.CommandName
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: CommandName
  nameWithType: LinkButton.CommandName
  fullName: System.Web.UI.WebControls.LinkButton.CommandName
- uid: System.Web.UI.WebControls.LinkButton.GetPostBackOptions
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: GetPostBackOptions()
  nameWithType: LinkButton.GetPostBackOptions()
  fullName: System.Web.UI.WebControls.LinkButton.GetPostBackOptions()
- uid: System.Web.UI.PostBackOptions
  parent: System.Web.UI
  isExternal: false
  name: PostBackOptions
  nameWithType: PostBackOptions
  fullName: System.Web.UI.PostBackOptions
- uid: System.Web.UI.WebControls.LinkButton.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: LinkButton.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.LinkButton.LoadViewState(Object)
- uid: System.Web.UI.WebControls.LinkButton.OnClick(System.EventArgs)
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: OnClick(EventArgs)
  nameWithType: LinkButton.OnClick(EventArgs)
  fullName: System.Web.UI.WebControls.LinkButton.OnClick(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.LinkButton.OnClientClick
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: OnClientClick
  nameWithType: LinkButton.OnClientClick
  fullName: System.Web.UI.WebControls.LinkButton.OnClientClick
- uid: System.Web.UI.WebControls.LinkButton.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: OnCommand(CommandEventArgs)
  nameWithType: LinkButton.OnCommand(CommandEventArgs)
  fullName: System.Web.UI.WebControls.LinkButton.OnCommand(CommandEventArgs)
- uid: System.Web.UI.WebControls.CommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: CommandEventArgs
  nameWithType: CommandEventArgs
  fullName: System.Web.UI.WebControls.CommandEventArgs
- uid: System.Web.UI.WebControls.LinkButton.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: LinkButton.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.LinkButton.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.LinkButton.PostBackUrl
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: PostBackUrl
  nameWithType: LinkButton.PostBackUrl
  fullName: System.Web.UI.WebControls.LinkButton.PostBackUrl
- uid: System.Web.UI.WebControls.LinkButton.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: LinkButton.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.LinkButton.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.LinkButton.RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: RenderContents(HtmlTextWriter)
  nameWithType: LinkButton.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.LinkButton.RenderContents(HtmlTextWriter)
- uid: System.Web.UI.WebControls.LinkButton.SupportsDisabledAttribute
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: SupportsDisabledAttribute
  nameWithType: LinkButton.SupportsDisabledAttribute
  fullName: System.Web.UI.WebControls.LinkButton.SupportsDisabledAttribute
- uid: System.Web.UI.WebControls.LinkButton.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: LinkButton.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.LinkButton.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.LinkButton.Text
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: Text
  nameWithType: LinkButton.Text
  fullName: System.Web.UI.WebControls.LinkButton.Text
- uid: System.Web.UI.WebControls.LinkButton.ValidationGroup
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: ValidationGroup
  nameWithType: LinkButton.ValidationGroup
  fullName: System.Web.UI.WebControls.LinkButton.ValidationGroup
- uid: System.Web.UI.WebControls.LinkButton.#ctor*
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: LinkButton
  nameWithType: LinkButton.LinkButton
- uid: System.Web.UI.WebControls.LinkButton.AddAttributesToRender*
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: AddAttributesToRender
  nameWithType: LinkButton.AddAttributesToRender
- uid: System.Web.UI.WebControls.LinkButton.AddParsedSubObject*
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: AddParsedSubObject
  nameWithType: LinkButton.AddParsedSubObject
- uid: System.Web.UI.WebControls.LinkButton.CausesValidation*
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: CausesValidation
  nameWithType: LinkButton.CausesValidation
- uid: System.Web.UI.WebControls.LinkButton.CommandArgument*
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: CommandArgument
  nameWithType: LinkButton.CommandArgument
- uid: System.Web.UI.WebControls.LinkButton.CommandName*
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: CommandName
  nameWithType: LinkButton.CommandName
- uid: System.Web.UI.WebControls.LinkButton.GetPostBackOptions*
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: GetPostBackOptions
  nameWithType: LinkButton.GetPostBackOptions
- uid: System.Web.UI.WebControls.LinkButton.LoadViewState*
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: LoadViewState
  nameWithType: LinkButton.LoadViewState
- uid: System.Web.UI.WebControls.LinkButton.OnClick*
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: OnClick
  nameWithType: LinkButton.OnClick
- uid: System.Web.UI.WebControls.LinkButton.OnClientClick*
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: OnClientClick
  nameWithType: LinkButton.OnClientClick
- uid: System.Web.UI.WebControls.LinkButton.OnCommand*
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: OnCommand
  nameWithType: LinkButton.OnCommand
- uid: System.Web.UI.WebControls.LinkButton.OnPreRender*
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: OnPreRender
  nameWithType: LinkButton.OnPreRender
- uid: System.Web.UI.WebControls.LinkButton.PostBackUrl*
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: PostBackUrl
  nameWithType: LinkButton.PostBackUrl
- uid: System.Web.UI.WebControls.LinkButton.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: LinkButton.RaisePostBackEvent
- uid: System.Web.UI.WebControls.LinkButton.RenderContents*
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: RenderContents
  nameWithType: LinkButton.RenderContents
- uid: System.Web.UI.WebControls.LinkButton.SupportsDisabledAttribute*
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: SupportsDisabledAttribute
  nameWithType: LinkButton.SupportsDisabledAttribute
- uid: System.Web.UI.WebControls.LinkButton.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: LinkButton.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.WebControls.LinkButton.Text*
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: Text
  nameWithType: LinkButton.Text
- uid: System.Web.UI.WebControls.LinkButton.ValidationGroup*
  parent: System.Web.UI.WebControls.LinkButton
  isExternal: false
  name: ValidationGroup
  nameWithType: LinkButton.ValidationGroup
