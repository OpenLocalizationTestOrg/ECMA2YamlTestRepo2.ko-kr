### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle
  id: SafePipeHandle
  children:
  - Microsoft.Win32.SafeHandles.SafePipeHandle.#ctor(System.IntPtr,System.Boolean)
  - Microsoft.Win32.SafeHandles.SafePipeHandle.ReleaseHandle
  langs:
  - csharp
  name: SafePipeHandle
  nameWithType: SafePipeHandle
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle
  type: Class
  summary: "파이프 핸들에 대 한 래퍼 클래스를 나타냅니다."
  remarks: "이 클래스는 <xref:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid>.</xref:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid> 에서 파생 잘못 된 파이프 핸들은 0 또는-1 값이입니다.      > [!IMPORTANT] >이 형식이 구현 하는 <xref:System.IDisposable>인터페이스.</xref:System.IDisposable> 형식을 사용 하 여 마쳤으면는 삭제 해야의 직접 또는 간접적으로 합니다. 직접 형식의 삭제 하려면 해당 <xref:System.IDisposable.Dispose%2A>에서 메서드는 `try` / `catch` 블록.</xref:System.IDisposable.Dispose%2A> 작업을 삭제할 하지 직접,를 사용 하 여 언어 구문와 같은 `using` (C#에서) 또는 `Using` (Visual Basic)에서는 합니다. 자세한 내용은의 &quot;를 사용 하는 개체는 구현 IDisposable&quot; 섹션을 참조 하십시오.는 <xref:System.IDisposable>인터페이스 항목.</xref:System.IDisposable>"
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public sealed class SafePipeHandle : Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  inheritance:
  - System.Runtime.InteropServices.SafeHandle
  - Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  implements: []
  inheritedMembers:
  - Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle.#ctor(System.IntPtr,System.Boolean)
  id: '#ctor(System.IntPtr,System.Boolean)'
  parent: Microsoft.Win32.SafeHandles.SafePipeHandle
  langs:
  - csharp
  name: SafePipeHandle(IntPtr,Boolean)
  nameWithType: SafePipeHandle.SafePipeHandle(IntPtr,Boolean)
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle.SafePipeHandle(IntPtr,Boolean)
  type: Constructor
  assemblies:
  - System.Core
  namespace: Microsoft.Win32.SafeHandles
  summary: "새 인스턴스를 초기화는 <xref href=&quot;Microsoft.Win32.SafeHandles.SafePipeHandle&quot;> </xref> 클래스입니다."
  syntax:
    content: public SafePipeHandle (IntPtr preexistingHandle, bool ownsHandle);
    parameters:
    - id: preexistingHandle
      type: System.IntPtr
      description: "<xref:System.IntPtr>사용할 기존 핸들을 나타내는 개체입니다.</xref:System.IntPtr>"
    - id: ownsHandle
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>종료 단계 안정적으로 핸들을 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 되지 않게 하려면 (권장 하지 않음)."
  overload: Microsoft.Win32.SafeHandles.SafePipeHandle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle.ReleaseHandle
  id: ReleaseHandle
  parent: Microsoft.Win32.SafeHandles.SafePipeHandle
  langs:
  - csharp
  name: ReleaseHandle()
  nameWithType: SafePipeHandle.ReleaseHandle()
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle.ReleaseHandle()
  type: Method
  assemblies:
  - System.Core
  namespace: Microsoft.Win32.SafeHandles
  syntax:
    content: protected override bool ReleaseHandle ();
    parameters: []
    return:
      type: System.Boolean
      description: "추가할 수 있습니다."
  overload: Microsoft.Win32.SafeHandles.SafePipeHandle.ReleaseHandle*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  isExternal: false
  name: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle.#ctor(System.IntPtr,System.Boolean)
  parent: Microsoft.Win32.SafeHandles.SafePipeHandle
  isExternal: false
  name: SafePipeHandle(IntPtr,Boolean)
  nameWithType: SafePipeHandle.SafePipeHandle(IntPtr,Boolean)
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle.SafePipeHandle(IntPtr,Boolean)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle.ReleaseHandle
  parent: Microsoft.Win32.SafeHandles.SafePipeHandle
  isExternal: false
  name: ReleaseHandle()
  nameWithType: SafePipeHandle.ReleaseHandle()
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle.ReleaseHandle()
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle.#ctor*
  parent: Microsoft.Win32.SafeHandles.SafePipeHandle
  isExternal: false
  name: SafePipeHandle
  nameWithType: SafePipeHandle.SafePipeHandle
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle.ReleaseHandle*
  parent: Microsoft.Win32.SafeHandles.SafePipeHandle
  isExternal: false
  name: ReleaseHandle
  nameWithType: SafePipeHandle.ReleaseHandle
