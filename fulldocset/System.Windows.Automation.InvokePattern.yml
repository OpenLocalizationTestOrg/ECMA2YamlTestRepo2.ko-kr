### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.InvokePattern
  id: InvokePattern
  children:
  - System.Windows.Automation.InvokePattern.Invoke
  - System.Windows.Automation.InvokePattern.InvokedEvent
  - System.Windows.Automation.InvokePattern.Pattern
  langs:
  - csharp
  name: InvokePattern
  nameWithType: InvokePattern
  fullName: System.Windows.Automation.InvokePattern
  type: Class
  summary: "또는 시작 하 고,는 명확한 단일 작업을 수행 하 고, 활성화 되었을 때 상태를 유지 하지 않는 하는 컨트롤을 나타냅니다."
  remarks: "동일한 동작이 다른 컨트롤 패턴을 통해 노출 되지 않으면 컨트롤이 InvokePattern을 지원 합니다. 예를 들어 경우는 <xref:System.Windows.Automation.InvokePattern.Invoke%2A>메서드가 동일한 작업을 수행 된 <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A>또는 <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A>메서드, 컨트롤이 InvokePattern을 지원 하지 것입니다.</xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> </xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> </xref:System.Windows.Automation.InvokePattern.Invoke%2A>       [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]확인란 및 라디오 단추 상태를 유지 하는 등의 컨트롤을 나타내는 요소 <xref:System.Windows.Automation.TogglePattern>또는 <xref:System.Windows.Automation.SelectionItemPattern>.</xref:System.Windows.Automation.SelectionItemPattern> </xref:System.Windows.Automation.TogglePattern> 대신 지원"
  syntax:
    content: 'public class InvokePattern : System.Windows.Automation.BasePattern'
  inheritance:
  - System.Object
  - System.Windows.Automation.BasePattern
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Automation.InvokePattern.Invoke
  id: Invoke
  parent: System.Windows.Automation.InvokePattern
  langs:
  - csharp
  name: Invoke()
  nameWithType: InvokePattern.Invoke()
  fullName: System.Windows.Automation.InvokePattern.Invoke()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "컨트롤을 활성화 하 고 해당 명확한 단일 작업을 시작 하는 요청을 보냅니다."
  remarks: "Invoke에 대 한 호출을 차단 하지 않고 즉시 반환 해야 합니다. 그러나이 동작은 전적으로 의존는 [!INCLUDE[TLA#tla_uiautomation](~/add/includes/tlasharptla-uiautomation-md.md)] 공급자 구현 합니다. 여기서 Invoke 호출로 인해 차단 문제 (예: 모달 대화 상자) 별도 도우미 시나리오에서 스레드 메서드를 호출 해야 할 수 있습니다."
  example:
  - "In the following example an <xref:System.Windows.Automation.InvokePattern>control pattern is obtained from a control and the Invoke method is called.  \n  \n [!code-cs[UIAInvokePattern_snip#101](~/add/codesnippet/csharp/UIAInvokePattern_snip/UIAInvokePattern_snippets.cs#101)]\n [!code-vb[UIAInvokePattern_snip#101](~/add/codesnippet/visualbasic/UIAInvokePattern_snip/UIAInvokePattern_snippets.vb#101)]"
  syntax:
    content: public void Invoke ();
    parameters: []
  overload: System.Windows.Automation.InvokePattern.Invoke*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "요소를 지원 하지 않습니다는 <xref href=&quot;System.Windows.Automation.InvokePattern&quot;> </xref> 컨트롤 패턴은 숨겨져 있거나 차단 되었습니다."
  - type: System.Windows.Automation.ElementNotEnabledException
    commentId: T:System.Windows.Automation.ElementNotEnabledException
    description: "요소를 사용할 수 없습니다. UI 자동화 공급자가 자체 처리를 구현 하는 경우 발생할 수 있습니다는 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled*>속성.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled*>"
  platform:
  - net462
- uid: System.Windows.Automation.InvokePattern.InvokedEvent
  id: InvokedEvent
  parent: System.Windows.Automation.InvokePattern
  langs:
  - csharp
  name: InvokedEvent
  nameWithType: InvokePattern.InvokedEvent
  fullName: System.Windows.Automation.InvokePattern.InvokedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "컨트롤이 호출 되거나 활성화 될 때 발생 하는 이벤트를 식별 합니다."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.InvokePatternIdentifiers>.</xref:System.Windows.Automation.InvokePatternIdentifiers> 해당 필드를 사용 해야       InvokedEvent 식별자 <xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A>.</xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A> 매개 변수로 전달 됩니다."
  example:
  - "In the following example, the event handler identifies the event as an Invoked event by comparing the <xref:System.Windows.Automation.AutomationEventArgs.EventId%2A> in the event arguments with the InvokedEvent identifier field.  \n  \n [!code-vb[UIAClient_snip#101](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#101)]\n [!code-cs[UIAClient_snip#101](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#101)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent InvokedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.InvokePattern.Pattern
  id: Pattern
  parent: System.Windows.Automation.InvokePattern
  langs:
  - csharp
  name: Pattern
  nameWithType: InvokePattern.Pattern
  fullName: System.Windows.Automation.InvokePattern.Pattern
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "식별 된 <xref href=&quot;System.Windows.Automation.InvokePattern&quot;> </xref> 컨트롤 패턴."
  remarks: "이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다. UI 자동화 공급자 <xref:System.Windows.Automation.InvokePatternIdentifiers>.</xref:System.Windows.Automation.InvokePatternIdentifiers> 해당 필드를 사용 해야       패턴 식별자에 <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>지정 된 <xref:System.Windows.Automation.AutomationElement>.</xref:System.Windows.Automation.AutomationElement> 에서 필요한 컨트롤 패턴을 검색 하</xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> 는 등 메서드에 전달 됩니다."
  example:
  - "In the following example an <xref:System.Windows.Automation.InvokePattern> control pattern is obtained from a control and the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method is called.  \n  \n [!code-cs[UIAInvokePattern_snip#101](~/add/codesnippet/csharp/UIAInvokePattern_snip/UIAInvokePattern_snippets.cs#101)]\n [!code-vb[UIAInvokePattern_snip#101](~/add/codesnippet/visualbasic/UIAInvokePattern_snip/UIAInvokePattern_snippets.vb#101)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationPattern Pattern;
    return:
      type: System.Windows.Automation.AutomationPattern
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Automation.BasePattern
  isExternal: false
  name: System.Windows.Automation.BasePattern
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Automation.ElementNotEnabledException
  parent: System.Windows.Automation
  isExternal: false
  name: ElementNotEnabledException
  nameWithType: ElementNotEnabledException
  fullName: System.Windows.Automation.ElementNotEnabledException
- uid: System.Windows.Automation.InvokePattern.Invoke
  parent: System.Windows.Automation.InvokePattern
  isExternal: false
  name: Invoke()
  nameWithType: InvokePattern.Invoke()
  fullName: System.Windows.Automation.InvokePattern.Invoke()
- uid: System.Windows.Automation.InvokePattern.InvokedEvent
  parent: System.Windows.Automation.InvokePattern
  isExternal: false
  name: InvokedEvent
  nameWithType: InvokePattern.InvokedEvent
  fullName: System.Windows.Automation.InvokePattern.InvokedEvent
- uid: System.Windows.Automation.AutomationEvent
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationEvent
  nameWithType: AutomationEvent
  fullName: System.Windows.Automation.AutomationEvent
- uid: System.Windows.Automation.InvokePattern.Pattern
  parent: System.Windows.Automation.InvokePattern
  isExternal: false
  name: Pattern
  nameWithType: InvokePattern.Pattern
  fullName: System.Windows.Automation.InvokePattern.Pattern
- uid: System.Windows.Automation.AutomationPattern
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationPattern
  nameWithType: AutomationPattern
  fullName: System.Windows.Automation.AutomationPattern
- uid: System.Windows.Automation.InvokePattern.Invoke*
  parent: System.Windows.Automation.InvokePattern
  isExternal: false
  name: Invoke
  nameWithType: InvokePattern.Invoke
