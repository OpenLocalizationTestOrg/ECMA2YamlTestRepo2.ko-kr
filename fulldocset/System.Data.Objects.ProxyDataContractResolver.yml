### YamlMime:ManagedReference
items:
- uid: System.Data.Objects.ProxyDataContractResolver
  id: ProxyDataContractResolver
  children:
  - System.Data.Objects.ProxyDataContractResolver.#ctor
  - System.Data.Objects.ProxyDataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)
  - System.Data.Objects.ProxyDataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)
  langs:
  - csharp
  name: ProxyDataContractResolver
  nameWithType: ProxyDataContractResolver
  fullName: System.Data.Objects.ProxyDataContractResolver
  type: Class
  summary: "이 클래스는 프록시 형식에 대해 생성 된 해결 [지 속성 무시](http://msdn.microsoft.com/en-us/5e0fb82a-b6d1-41a1-b37b-c12db61629d3) 데이터 클래스를 지 속성 무시 개체의 실제 형식입니다."
  remarks: "ProxyDataContractResolver 클래스 <xref:System.Runtime.Serialization.DataContractSerializer>.</xref:System.Runtime.Serialization.DataContractSerializer> 함께 사용 됩니다."
  syntax:
    content: 'public class ProxyDataContractResolver : System.Runtime.Serialization.DataContractResolver'
  inheritance:
  - System.Runtime.Serialization.DataContractResolver
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Objects.ProxyDataContractResolver.#ctor
  id: '#ctor'
  parent: System.Data.Objects.ProxyDataContractResolver
  langs:
  - csharp
  name: ProxyDataContractResolver()
  nameWithType: ProxyDataContractResolver.ProxyDataContractResolver()
  fullName: System.Data.Objects.ProxyDataContractResolver.ProxyDataContractResolver()
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Objects.ProxyDataContractResolver&quot;> </xref> 클래스입니다."
  syntax:
    content: public ProxyDataContractResolver ();
    parameters: []
  overload: System.Data.Objects.ProxyDataContractResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ProxyDataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)
  id: ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)
  parent: System.Data.Objects.ProxyDataContractResolver
  langs:
  - csharp
  name: ResolveName(String,String,Type,DataContractResolver)
  nameWithType: ProxyDataContractResolver.ResolveName(String,String,Type,DataContractResolver)
  fullName: System.Data.Objects.ProxyDataContractResolver.ResolveName(String,String,Type,DataContractResolver)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "역직렬화 하는 동안 모든 매핑합니다 <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;> </xref> 의 실제 형식에 대 한 정보는 [지 속성 무시](http://msdn.microsoft.com/en-us/5e0fb82a-b6d1-41a1-b37b-c12db61629d3) 개체입니다."
  remarks: '자세한 내용은 참조: [POCO 엔터티 작업](http://msdn.microsoft.com/en-us/5e0fb82a-b6d1-41a1-b37b-c12db61629d3)합니다.'
  syntax:
    content: public override Type ResolveName (string typeName, string typeNamespace, Type declaredType, System.Runtime.Serialization.DataContractResolver knownTypeResolver);
    parameters:
    - id: typeName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;> </xref> 매핑할 정보입니다."
    - id: typeNamespace
      type: System.String
      description: "네임 스페이스는 <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;> </xref>합니다."
    - id: declaredType
      type: System.Type
      description: "선언 된 형식입니다."
    - id: knownTypeResolver
      type: System.Runtime.Serialization.DataContractResolver
      description: "인스턴스 <xref href=&quot;System.Data.Objects.ProxyDataContractResolver&quot;> </xref>합니다."
    return:
      type: System.Type
      description: "형식을 반환는 <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;> </xref> 매핑됩니다. 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 알려진된 형식이 일치 하는 경우는 <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Objects.ProxyDataContractResolver.ResolveName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ProxyDataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)
  id: TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)
  parent: System.Data.Objects.ProxyDataContractResolver
  langs:
  - csharp
  name: TryResolveType(Type,Type,DataContractResolver,XmlDictionaryString,XmlDictionaryString)
  nameWithType: ProxyDataContractResolver.TryResolveType(Type,Type,DataContractResolver,XmlDictionaryString,XmlDictionaryString)
  fullName: System.Data.Objects.ProxyDataContractResolver.TryResolveType(Type,Type,DataContractResolver,XmlDictionaryString,XmlDictionaryString)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Serialization 도중에, 실제 형식을 매핑합니다 <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;> </xref> 정보입니다."
  remarks: '자세한 내용은 참조: [POCO 엔터티 작업](http://msdn.microsoft.com/en-us/5e0fb82a-b6d1-41a1-b37b-c12db61629d3)합니다.'
  syntax:
    content: public override bool TryResolveType (Type dataContractType, Type declaredType, System.Runtime.Serialization.DataContractResolver knownTypeResolver, out System.Xml.XmlDictionaryString typeName, out System.Xml.XmlDictionaryString typeNamespace);
    parameters:
    - id: dataContractType
      type: System.Type
      description: "지 속성 무시 개체의 실제 형식입니다."
    - id: declaredType
      type: System.Type
      description: "선언 된 형식입니다."
    - id: knownTypeResolver
      type: System.Runtime.Serialization.DataContractResolver
      description: "인스턴스 <xref href=&quot;System.Data.Objects.ProxyDataContractResolver&quot;> </xref>합니다."
    - id: typeName
      type: System.Xml.XmlDictionaryString
      description: "이 메서드가 반환 될 때의 목록이 들어 <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;> </xref> 선언 합니다."
    - id: typeNamespace
      type: System.Xml.XmlDictionaryString
      description: "이 메서드가 반환 될 때 사용 되는 네임 스페이스 목록을 포함 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>형식이 확인 되었으면; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Objects.ProxyDataContractResolver.TryResolveType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Serialization.DataContractResolver
  isExternal: false
  name: System.Runtime.Serialization.DataContractResolver
- uid: System.Data.Objects.ProxyDataContractResolver.#ctor
  parent: System.Data.Objects.ProxyDataContractResolver
  isExternal: false
  name: ProxyDataContractResolver()
  nameWithType: ProxyDataContractResolver.ProxyDataContractResolver()
  fullName: System.Data.Objects.ProxyDataContractResolver.ProxyDataContractResolver()
- uid: System.Data.Objects.ProxyDataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)
  parent: System.Data.Objects.ProxyDataContractResolver
  isExternal: false
  name: ResolveName(String,String,Type,DataContractResolver)
  nameWithType: ProxyDataContractResolver.ResolveName(String,String,Type,DataContractResolver)
  fullName: System.Data.Objects.ProxyDataContractResolver.ResolveName(String,String,Type,DataContractResolver)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.ProxyDataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)
  parent: System.Data.Objects.ProxyDataContractResolver
  isExternal: false
  name: TryResolveType(Type,Type,DataContractResolver,XmlDictionaryString,XmlDictionaryString)
  nameWithType: ProxyDataContractResolver.TryResolveType(Type,Type,DataContractResolver,XmlDictionaryString,XmlDictionaryString)
  fullName: System.Data.Objects.ProxyDataContractResolver.TryResolveType(Type,Type,DataContractResolver,XmlDictionaryString,XmlDictionaryString)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlDictionaryString
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryString
  nameWithType: XmlDictionaryString
  fullName: System.Xml.XmlDictionaryString
- uid: System.Data.Objects.ProxyDataContractResolver.#ctor*
  parent: System.Data.Objects.ProxyDataContractResolver
  isExternal: false
  name: ProxyDataContractResolver
  nameWithType: ProxyDataContractResolver.ProxyDataContractResolver
- uid: System.Data.Objects.ProxyDataContractResolver.ResolveName*
  parent: System.Data.Objects.ProxyDataContractResolver
  isExternal: false
  name: ResolveName
  nameWithType: ProxyDataContractResolver.ResolveName
- uid: System.Data.Objects.ProxyDataContractResolver.TryResolveType*
  parent: System.Data.Objects.ProxyDataContractResolver
  isExternal: false
  name: TryResolveType
  nameWithType: ProxyDataContractResolver.TryResolveType
