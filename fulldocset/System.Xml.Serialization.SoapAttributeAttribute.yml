### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.SoapAttributeAttribute
  id: SoapAttributeAttribute
  children:
  - System.Xml.Serialization.SoapAttributeAttribute.#ctor
  - System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)
  - System.Xml.Serialization.SoapAttributeAttribute.AttributeName
  - System.Xml.Serialization.SoapAttributeAttribute.DataType
  - System.Xml.Serialization.SoapAttributeAttribute.Namespace
  langs:
  - csharp
  name: SoapAttributeAttribute
  nameWithType: SoapAttributeAttribute
  fullName: System.Xml.Serialization.SoapAttributeAttribute
  type: Class
  summary: "지정 된 <xref:System.Xml.Serialization.XmlSerializer>클래스 멤버는 인코딩된 SOAP 특성으로 직렬화 해야 합니다.</xref:System.Xml.Serialization.XmlSerializer>"
  remarks: "SoapAttributeAttribute 클래스 제어 되는 특성의 집합에 속합니다 방법을 <xref:System.Xml.Serialization.XmlSerializer>serialize 되 고 또는 인코딩된 SOAP XML로 개체를 역직렬화 합니다.</xref:System.Xml.Serialization.XmlSerializer> 결과 XML은 World Wide Web 컨소시엄 (www.w3.org) 문서의 &quot;Simple Object Access Protocol (SOAP) 1.1&quot; 섹션 5 준수합니다. 비슷한 특성의 전체 목록은 참조 하십시오. [특성을 제어 인코딩된 SOAP Serialization](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Serialization.XmlSerializer> <xref:System.Xml.Serialization.XmlTypeMapping> <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> <xref:System.Xml.Serialization.SoapReflectionImporter>클래스</xref:System.Xml.Serialization.SoapReflectionImporter> 의 메서드</xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> 를 사용 하 여 만든</xref:System.Xml.Serialization.XmlTypeMapping> 사용 하 여</xref:System.Xml.Serialization.XmlSerializer> 구성 해야 개체를 인코딩된 SOAP 메시지로 serialize 하려면       SoapAttributeAttribute 지정 하는 공용 필드에 적용 된 <xref:System.Xml.Serialization.XmlSerializer>필드를 XML 특성으로 serialize 합니다.</xref:System.Xml.Serialization.XmlSerializer> 설정 하 여 특성에 대해 다른 이름을 지정할 수 있습니다는 <xref:System.Xml.Serialization.SoapAttributeAttribute.AttributeName%2A>속성.</xref:System.Xml.Serialization.SoapAttributeAttribute.AttributeName%2A> 설정 된 <xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A>특성에는 특정 XML 스키마 정의 언어 (XSD) 데이터 형식을 지정 해야 하는 경우.</xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A> 특성에 있는 특정 XML 네임 스페이스에 속한 경우 설정 된 <xref:System.Xml.Serialization.SoapAttributeAttribute.Namespace%2A>속성.</xref:System.Xml.Serialization.SoapAttributeAttribute.Namespace%2A>       특성을 사용 하는 방법에 대 한 자세한 내용은 참조 [특성](~/add/includes/ajax-current-ext-md.md)       >  [!NOTE] > 라는 단어를 사용할 수 있습니다 `SoapAttribute` 긴 SoapAttributeAttribute 대신 코드에서."
  example:
  - "The following example serializes a class that contains several fields to which a SoapAttributeAttribute is applied.  \n  \n [!code-cs[SoapAttribute#1](~/add/codesnippet/csharp/t-system.xml.serializati_15_1.cs)]\n [!code-vb[SoapAttribute#1](~/add/codesnippet/visualbasic/t-system.xml.serializati_15_1.vb)]\n [!code-cpp[SoapAttribute#1](~/add/codesnippet/cpp/t-system.xml.serializati_15_1.cpp)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue)]

      public class SoapAttributeAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapAttributeAttribute.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.SoapAttributeAttribute
  langs:
  - csharp
  name: SoapAttributeAttribute()
  nameWithType: SoapAttributeAttribute.SoapAttributeAttribute()
  fullName: System.Xml.Serialization.SoapAttributeAttribute.SoapAttributeAttribute()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Xml.Serialization.SoapAttributeAttribute&quot;> </xref> 클래스입니다."
  remarks: "이 생성자를 사용 하는 <xref:System.Xml.Serialization.SoapAttributeAttribute>클래스 멤버의 직렬화를 재정의 하는 경우.</xref:System.Xml.Serialization.SoapAttributeAttribute> 만들기는 <xref:System.Xml.Serialization.SoapAttributeAttribute>속성을 설정 하 고 개체를 설정는 <xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A>속성은 <xref:System.Xml.Serialization.SoapAttributes>개체.</xref:System.Xml.Serialization.SoapAttributes> </xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A> </xref:System.Xml.Serialization.SoapAttributeAttribute> 자세한 내용은 참조는 <xref:System.Xml.Serialization.SoapAttributeOverrides>클래스 개요.</xref:System.Xml.Serialization.SoapAttributeOverrides>"
  example:
  - "The following example creates a new <xref:System.Xml.Serialization.SoapAttributeAttribute> that is used to override the serialization of a field. After creating a <xref:System.Xml.Serialization.SoapAttributeAttribute> and setting its properties, the object is set to the <xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A> property of a <xref:System.Xml.Serialization.SoapAttributes>. The <xref:System.Xml.Serialization.SoapAttributes> is then added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlSerializer>.  \n  \n [!code-cpp[SoapAttributeAttributeEx2#1](~/add/codesnippet/cpp/m-system.xml.serializati_10_1.cpp)]\n [!code-vb[SoapAttributeAttributeEx2#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_10_1.vb)]\n [!code-cs[SoapAttributeAttributeEx2#1](~/add/codesnippet/csharp/m-system.xml.serializati_10_1.cs)]"
  syntax:
    content: public SoapAttributeAttribute ();
    parameters: []
  overload: System.Xml.Serialization.SoapAttributeAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Xml.Serialization.SoapAttributeAttribute
  langs:
  - csharp
  name: SoapAttributeAttribute(String)
  nameWithType: SoapAttributeAttribute.SoapAttributeAttribute(String)
  fullName: System.Xml.Serialization.SoapAttributeAttribute.SoapAttributeAttribute(String)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Xml.Serialization.SoapAttributeAttribute&quot;> </xref> 클래스는 XML 특성의 이름으로 지정된 된 값을 사용 합니다."
  remarks: ''
  example:
  - "The following example serializes a class that contains several fields to which a <xref:System.Xml.Serialization.SoapAttributeAttribute> is applied.  \n  \n [!code-cs[SoapAttribute#1](~/add/codesnippet/csharp/m-system.xml.serializati_2_1.cs)]\n [!code-vb[SoapAttribute#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_2_1.vb)]\n [!code-cpp[SoapAttribute#1](~/add/codesnippet/cpp/m-system.xml.serializati_2_1.cpp)]"
  syntax:
    content: public SoapAttributeAttribute (string attributeName);
    parameters:
    - id: attributeName
      type: System.String
      description: "XML 특성의 이름입니다."
  overload: System.Xml.Serialization.SoapAttributeAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapAttributeAttribute.AttributeName
  id: AttributeName
  parent: System.Xml.Serialization.SoapAttributeAttribute
  langs:
  - csharp
  name: AttributeName
  nameWithType: SoapAttributeAttribute.AttributeName
  fullName: System.Xml.Serialization.SoapAttributeAttribute.AttributeName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "<xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer> 에 의해 생성 된 XML 특성의 이름을 가져오거나 설정 합니다."
  remarks: "AttributeName 속성을 사용 하 여 기본값을 사용할 수 없는 경우 XML 특성 이름을 지정 합니다. 예를 들어 XML 특성 이름, 멤버 식별자로 올바르지 않으면 AttributeName 잘못 된 이름으로 설정 하는 동안 식별자에 대 한 올바른 이름을 사용 합니다."
  example:
  - "The following example serializes a class that contains several fields to which the <xref:System.Xml.Serialization.SoapAttributeAttribute> is applied. The AttributeName property is set for the `Today` field.  \n  \n [!code-cs[SoapAttribute#1](~/add/codesnippet/csharp/p-system.xml.serializati_0_1.cs)]\n [!code-vb[SoapAttribute#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_0_1.vb)]\n [!code-cpp[SoapAttribute#1](~/add/codesnippet/cpp/p-system.xml.serializati_0_1.cpp)]"
  syntax:
    content: public string AttributeName { get; set; }
    return:
      type: System.String
      description: "XML 특성의 이름입니다. 기본값은 멤버 식별자입니다."
  overload: System.Xml.Serialization.SoapAttributeAttribute.AttributeName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapAttributeAttribute.DataType
  id: DataType
  parent: System.Xml.Serialization.SoapAttributeAttribute
  langs:
  - csharp
  name: DataType
  nameWithType: SoapAttributeAttribute.DataType
  fullName: System.Xml.Serialization.SoapAttributeAttribute.DataType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "에 <xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer> 생성 된 SOAP 특성의 XML 스키마 정의 언어 (XSD) 데이터 형식을 가져오거나 설정 합니다."
  remarks: "다음 표에서 XML 스키마 단순 데이터 형식 및 해당를 나열합니다.       XML 스키마에 대 한 `base64Binary` 및 `hexBinary` 데이터 형식을 사용 하 여 배열을 <xref:System.Byte>, 구조 및 적용 한 <xref:System.Xml.Serialization.SoapAttributeAttribute>&quot;base64Binary&quot; 또는 &quot;hexBinary&quot;로 설정 하는 DataType로 적절 하 게.</xref:System.Xml.Serialization.SoapAttributeAttribute> </xref:System.Byte> XML 스키마에 대 한 `time` 및 `date` 데이터 형식을 사용 하 여는 <xref:System.DateTime>입력 및 적용 된 <xref:System.Xml.Serialization.SoapAttributeAttribute>&quot;date&quot; 또는 &quot;시간&quot;로 설정 하는 DataType로.</xref:System.Xml.Serialization.SoapAttributeAttribute> </xref:System.DateTime>       문자열에 매핑되는 모든 XML 스키마 데이터 형식에 대 한 적용 된 <xref:System.Xml.Serialization.SoapAttributeAttribute>DataType 속성이 XML 스키마 데이터 형식으로 설정 된.</xref:System.Xml.Serialization.SoapAttributeAttribute> Serialization 형식으로 된 멤버에 대 한 스키마만 바뀌지 않으면이 note 합니다.      > [!NOTE] > 속성은 대/소문자 구분, XML 스키마 데이터 형식 중 하나를 정확 하 게 설정 해야 합니다.      > [!NOTE] >는 XML 요소에 이진 데이터를 전달 하는 것이 더 효율적 XML 특성으로 전달 합니다.       XML 스키마 데이터 형식에 대 한 자세한 내용은 &quot;XML 스키마 파트 2:: 데이터 형식&quot; 이라는 World Wide 컨소시엄 (www.w3.org) 문서를 참조 하십시오.      | XSD 데이터 형식이 | 합니다. 순수한 데이터 형식 |   |-------------------|--------------------|   | anyURI | <xref:System.String>|   | base64Binary | <xref:System.Byte>개체의 배열 |   | 부울 | <xref:System.Boolean>|   | 바이트 | <xref:System.SByte>|   | 날짜 | <xref:System.DateTime>|   | dateTime | <xref:System.DateTime>|   |&10; 진수 | <xref:System.Decimal>|   | double | <xref:System.Double>|   | 엔터티 | <xref:System.String>|   | 엔터티 | <xref:System.String>|   | float | <xref:System.Single>|   | gDay | <xref:System.String>|   | gMonth | <xref:System.String>|   | gMonthDay | <xref:System.String>|   | gYear | <xref:System.String>|   | gYearMonth | <xref:System.String>|   | hexBinary | <xref:System.Byte>개체의 배열 |   | ID | <xref:System.String>|   | IDREF | <xref:System.String>|   | IDREFS | <xref:System.String>|   | int | <xref:System.Int32>|   | 정수 | <xref:System.String>|   | 언어 | <xref:System.String>|   | 긴 | <xref:System.Int64>|   | 이름 | <xref:System.String>|   | NCName | <xref:System.String>|   | negativeInteger | <xref:System.String>|   | NMTOKEN | <xref:System.String>|   | NMTOKENS | <xref:System.String>|   | normalizedString | <xref:System.String>|   | nonNegativeInteger | <xref:System.String>|   | nonPositiveInteger | <xref:System.String>|   | 표기법 | <xref:System.String>|   | positiveInteger | <xref:System.String>|   | QName | <xref:System.Xml.XmlQualifiedName>|   | 기간 | <xref:System.String>|   | 문자열 | <xref:System.String>|   | 짧은 | <xref:System.Int16>|   | 시간 | <xref:System.DateTime>|   | 토큰 | <xref:System.String>|   | unsignedByte | <xref:System.Byte>|   | unsignedInt | <xref:System.UInt32>|   | unsignedLong | <xref:System.UInt64>|   | unsignedShort | <xref:System.UInt16>|</xref:System.UInt16></xref:System.UInt64></xref:System.UInt32></xref:System.Byte></xref:System.String></xref:System.DateTime></xref:System.Int16></xref:System.String></xref:System.String></xref:System.Xml.XmlQualifiedName></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.Int64></xref:System.String></xref:System.String></xref:System.Int32></xref:System.String></xref:System.String></xref:System.String></xref:System.Byte></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.Single></xref:System.String></xref:System.String></xref:System.Double></xref:System.Decimal></xref:System.DateTime></xref:System.DateTime></xref:System.SByte></xref:System.Boolean></xref:System.Byte></xref:System.String>"
  example:
  - "The following example serializes a class that contains several fields to which a <xref:System.Xml.Serialization.SoapAttributeAttribute> is applied. The DataType property is set for the `GroupNumber` and the `Today` fields.  \n  \n [!code-cs[SoapAttribute#1](~/add/codesnippet/csharp/p-system.xml.serializati_31_1.cs)]\n [!code-vb[SoapAttribute#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_31_1.vb)]\n [!code-cpp[SoapAttribute#1](~/add/codesnippet/cpp/p-system.xml.serializati_31_1.cpp)]"
  syntax:
    content: public string DataType { get; set; }
    return:
      type: System.String
      description: 'World Wide Web 컨소시엄 (www.w3.org) 문서에 정의 된 대로 XML 스키마 데이터 형식 이름이 &quot;XML 스키마 파트 2:: 데이터 형식&quot;입니다.'
  overload: System.Xml.Serialization.SoapAttributeAttribute.DataType*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "지정한 XML 스키마 데이터 형식.NET 데이터 형식에 매핑할 수 없습니다."
  platform:
  - net462
- uid: System.Xml.Serialization.SoapAttributeAttribute.Namespace
  id: Namespace
  parent: System.Xml.Serialization.SoapAttributeAttribute
  langs:
  - csharp
  name: Namespace
  nameWithType: SoapAttributeAttribute.Namespace
  fullName: System.Xml.Serialization.SoapAttributeAttribute.Namespace
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "XML 특성의 XML 네임 스페이스를 가져오거나 설정 합니다."
  remarks: "<xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A>속성 사양을 준수 하는 World Wide Web 컨소시엄 (www.w3.org) &quot;네임 스페이스에 XML&quot;입니다.</xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A>       접두사와 연결 된 네임 스페이스를 만들려면 만들어야는 <xref:System.Xml.Serialization.XmlSerializerNamespaces>네임 스페이스 및 XML 문서에 사용 되는 접두사를 포함 하는.</xref:System.Xml.Serialization.XmlSerializerNamespaces> 각 <xref:System.Xml.Serialization.XmlAttributeAttribute>네임 스페이스 <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</xref:System.Xml.Serialization.XmlSerializerNamespaces> 중 하 나와 일치 해야</xref:System.Xml.Serialization.XmlAttributeAttribute> 하는 것에 대 한 설정의 네임 스페이스 경우는 <xref:System.Xml.Serialization.XmlSerializer>XML 코드에서는 발생 하는 각 특성 이름 접두사를 붙입니다.</xref:System.Xml.Serialization.XmlSerializer>"
  example:
  - "The following example serializes a class that contains several fields to which a <xref:System.Xml.Serialization.SoapAttributeAttribute> is applied. The Namespace property is set for the `GroupName` the field.  \n  \n [!code-cs[SoapAttribute#1](~/add/codesnippet/csharp/p-system.xml.serializati_28_1.cs)]\n [!code-vb[SoapAttribute#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_28_1.vb)]\n [!code-cpp[SoapAttribute#1](~/add/codesnippet/cpp/p-system.xml.serializati_28_1.cpp)]"
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "XML 특성의 XML 네임 스페이스입니다."
  overload: System.Xml.Serialization.SoapAttributeAttribute.Namespace*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Xml.Serialization.SoapAttributeAttribute.#ctor
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: SoapAttributeAttribute()
  nameWithType: SoapAttributeAttribute.SoapAttributeAttribute()
  fullName: System.Xml.Serialization.SoapAttributeAttribute.SoapAttributeAttribute()
- uid: System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: SoapAttributeAttribute(String)
  nameWithType: SoapAttributeAttribute.SoapAttributeAttribute(String)
  fullName: System.Xml.Serialization.SoapAttributeAttribute.SoapAttributeAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Serialization.SoapAttributeAttribute.AttributeName
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: AttributeName
  nameWithType: SoapAttributeAttribute.AttributeName
  fullName: System.Xml.Serialization.SoapAttributeAttribute.AttributeName
- uid: System.Xml.Serialization.SoapAttributeAttribute.DataType
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: DataType
  nameWithType: SoapAttributeAttribute.DataType
  fullName: System.Xml.Serialization.SoapAttributeAttribute.DataType
- uid: System.Xml.Serialization.SoapAttributeAttribute.Namespace
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: Namespace
  nameWithType: SoapAttributeAttribute.Namespace
  fullName: System.Xml.Serialization.SoapAttributeAttribute.Namespace
- uid: System.Xml.Serialization.SoapAttributeAttribute.#ctor*
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: SoapAttributeAttribute
  nameWithType: SoapAttributeAttribute.SoapAttributeAttribute
- uid: System.Xml.Serialization.SoapAttributeAttribute.AttributeName*
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: AttributeName
  nameWithType: SoapAttributeAttribute.AttributeName
- uid: System.Xml.Serialization.SoapAttributeAttribute.DataType*
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: DataType
  nameWithType: SoapAttributeAttribute.DataType
- uid: System.Xml.Serialization.SoapAttributeAttribute.Namespace*
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: Namespace
  nameWithType: SoapAttributeAttribute.Namespace
