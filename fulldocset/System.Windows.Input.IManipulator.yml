### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.IManipulator
  id: IManipulator
  children:
  - System.Windows.Input.IManipulator.GetPosition(System.Windows.IInputElement)
  - System.Windows.Input.IManipulator.Id
  - System.Windows.Input.IManipulator.ManipulationEnded(System.Boolean)
  - System.Windows.Input.IManipulator.Updated
  langs:
  - csharp
  name: IManipulator
  nameWithType: IManipulator
  fullName: System.Windows.Input.IManipulator
  type: Interface
  summary: "만드는 조작 하는 데 필요한 입력의 위치를 제공 합니다."
  remarks: "각 터치 포인트 IManipulator 개체입니다.  예를 들어, 개체, 크기 조정 두 손가락을 사용 하는 경우는 <xref:System.Windows.Input.TouchDevice>, IManipulator를 구현 하는, 각 손가락에 대해 만들어집니다.</xref:System.Windows.Input.TouchDevice>"
  syntax:
    content: public interface IManipulator
  implements: []
  platform:
  - net462
- uid: System.Windows.Input.IManipulator.GetPosition(System.Windows.IInputElement)
  id: GetPosition(System.Windows.IInputElement)
  parent: System.Windows.Input.IManipulator
  langs:
  - csharp
  name: GetPosition(IInputElement)
  nameWithType: IManipulator.GetPosition(IInputElement)
  fullName: System.Windows.Input.IManipulator.GetPosition(IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "위치를 반환 하는 <xref href=&quot;System.Windows.Input.IManipulator&quot;> </xref> 개체입니다."
  syntax:
    content: public System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);
    parameters:
    - id: relativeTo
      type: System.Windows.IInputElement
      description: "위치를 계산 하기 위한 참조 프레임으로 사용할 요소는 <xref href=&quot;System.Windows.Input.IManipulator&quot;> </xref>합니다."
    return:
      type: System.Windows.Point
      description: "위치는 <xref href=&quot;System.Windows.Input.IManipulator&quot;> </xref> 개체입니다."
  overload: System.Windows.Input.IManipulator.GetPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.IManipulator.Id
  id: Id
  parent: System.Windows.Input.IManipulator
  langs:
  - csharp
  name: Id
  nameWithType: IManipulator.Id
  fullName: System.Windows.Input.IManipulator.Id
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "개체에 대 한 고유 식별자를 가져오거나 설정 합니다."
  remarks: "Id 속성은 특정 종류의 각 개체에 대해 고유 해야 합니다.  예를 들어 경우 형식을 `Manipulator1` 및 `Manipulator2` 구현 <xref:System.Windows.Input.IManipulator>, 모든 형식의 개체 `Maniplulator1` 고유 Id 값을 하지만 형식의 개체가 있어야 `Manipulator1` 형식의 개체와 동일한 Id를 할 수 `Manipulator2`.</xref:System.Windows.Input.IManipulator>"
  syntax:
    content: public int Id { get; }
    return:
      type: System.Int32
      description: "개체에 대 한 고유 식별자입니다."
  overload: System.Windows.Input.IManipulator.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.IManipulator.ManipulationEnded(System.Boolean)
  id: ManipulationEnded(System.Boolean)
  parent: System.Windows.Input.IManipulator
  langs:
  - csharp
  name: ManipulationEnded(Boolean)
  nameWithType: IManipulator.ManipulationEnded(Boolean)
  fullName: System.Windows.Input.IManipulator.ManipulationEnded(Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "조작 종료 될 때 호출 됩니다."
  syntax:
    content: public void ManipulationEnded (bool cancel);
    parameters:
    - id: cancel
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>조작; 취소 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Input.IManipulator.ManipulationEnded*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.IManipulator.Updated
  id: Updated
  parent: System.Windows.Input.IManipulator
  langs:
  - csharp
  name: Updated
  nameWithType: IManipulator.Updated
  fullName: System.Windows.Input.IManipulator.Updated
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "발생 경우는 <xref href=&quot;System.Windows.Input.IManipulator&quot;> </xref> 개체 위치를 변경 합니다."
  syntax:
    content: public event EventHandler Updated;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Input.IManipulator.GetPosition(System.Windows.IInputElement)
  parent: System.Windows.Input.IManipulator
  isExternal: false
  name: GetPosition(IInputElement)
  nameWithType: IManipulator.GetPosition(IInputElement)
  fullName: System.Windows.Input.IManipulator.GetPosition(IInputElement)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.IManipulator.Id
  parent: System.Windows.Input.IManipulator
  isExternal: false
  name: Id
  nameWithType: IManipulator.Id
  fullName: System.Windows.Input.IManipulator.Id
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Input.IManipulator.ManipulationEnded(System.Boolean)
  parent: System.Windows.Input.IManipulator
  isExternal: false
  name: ManipulationEnded(Boolean)
  nameWithType: IManipulator.ManipulationEnded(Boolean)
  fullName: System.Windows.Input.IManipulator.ManipulationEnded(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.IManipulator.Updated
  parent: System.Windows.Input.IManipulator
  isExternal: false
  name: Updated
  nameWithType: IManipulator.Updated
  fullName: System.Windows.Input.IManipulator.Updated
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Input.IManipulator.GetPosition*
  parent: System.Windows.Input.IManipulator
  isExternal: false
  name: GetPosition
  nameWithType: IManipulator.GetPosition
- uid: System.Windows.Input.IManipulator.Id*
  parent: System.Windows.Input.IManipulator
  isExternal: false
  name: Id
  nameWithType: IManipulator.Id
- uid: System.Windows.Input.IManipulator.ManipulationEnded*
  parent: System.Windows.Input.IManipulator
  isExternal: false
  name: ManipulationEnded
  nameWithType: IManipulator.ManipulationEnded
