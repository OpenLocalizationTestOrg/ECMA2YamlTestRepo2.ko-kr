### YamlMime:ManagedReference
items:
- uid: System.Windows.Documents.TextRange
  id: TextRange
  children:
  - System.Windows.Documents.TextRange.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  - System.Windows.Documents.TextRange.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.Documents.TextRange.CanLoad(System.String)
  - System.Windows.Documents.TextRange.CanSave(System.String)
  - System.Windows.Documents.TextRange.Changed
  - System.Windows.Documents.TextRange.ClearAllProperties
  - System.Windows.Documents.TextRange.Contains(System.Windows.Documents.TextPointer)
  - System.Windows.Documents.TextRange.End
  - System.Windows.Documents.TextRange.GetPropertyValue(System.Windows.DependencyProperty)
  - System.Windows.Documents.TextRange.IsEmpty
  - System.Windows.Documents.TextRange.Load(System.IO.Stream,System.String)
  - System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String)
  - System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String,System.Boolean)
  - System.Windows.Documents.TextRange.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  - System.Windows.Documents.TextRange.Start
  - System.Windows.Documents.TextRange.Text
  langs:
  - csharp
  name: TextRange
  nameWithType: TextRange
  fullName: System.Windows.Documents.TextRange
  type: Class
  summary: "두 콘텐츠의 선택을 나타냅니다 <xref href=&quot;System.Windows.Documents.TextPointer&quot;> </xref> 위치입니다."
  remarks: "TextRange 클래스는 다음과 같은 용어를 소개합니다.      - **선택** -A TextRange는 선택 된 가리키는 두 위치 간에 콘텐츠의 **TextPointers**합니다.  다음 중 하나는 선택 항목을 기준으로 고정된 앵커를 위치 하 고 일부는 다른 위치를 이동할 수 합니다.  이것은 마우스나 키보드를 사용 하 여 사용자가 선택한 동작 하는 방법을 비슷합니다.      - **현재 선택 영역** -으로 TextRange 가리키는 선택 항목에 참조 하는 TextRange 콘텐츠에서 선택한 항목에 항상 나타내므로 의미가 *현재 선택 영역*합니다.      - **텍스트 컨테이너** - *텍스트 컨테이너* 최종 테두리에 유동 콘텐츠를 구성 하는 요소 않으면 가리키는 TextRange는 항상 대체 텍스트 컨테이너 내에서 선택 합니다.  현재 텍스트 컨테이너 중 하나는 여야 <xref:System.Windows.Documents.FlowDocument>나 <xref:System.Windows.Controls.TextBlock>.</xref:System.Windows.Controls.TextBlock> </xref:System.Windows.Documents.FlowDocument>      - **문서** -텍스트 컨테이너 내에서 전체적으로 포함 된 콘텐츠 라고는 *문서*합니다.       다른 방법에 대 한 자세한 내용은 관련와 같은 용어에 대 한 *위치*, <xref:System.Windows.Documents.TextPointer>.</xref:System.Windows.Documents.TextPointer> 를 참조 하세요."
  example:
  - "The following example demonstrates using the <xref:System.Windows.Documents.TextRange.Text%2A> property of a TextRange to return the plain text representation of a specified <xref:System.Windows.Documents.FlowDocument>.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_Text](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_text)]\n [!code-vb[TextPointer_Snippets#_TextRange_Text](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_text)]"
  syntax:
    content: public class TextRange
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  id: '#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)'
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: TextRange(TextPointer,TextPointer)
  nameWithType: TextRange.TextRange(TextPointer,TextPointer)
  fullName: System.Windows.Documents.TextRange.TextRange(TextPointer,TextPointer)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Documents.TextRange&quot;> </xref> 지정 된 두 개의 클래스 <xref href=&quot;System.Windows.Documents.TextPointer&quot;> </xref> 새 범위에 대 한 시작 및 끝 위치를 위치입니다."
  remarks: "A <xref:System.Windows.Documents.TextRange>형식으로 표시 하는 두 위치 간에 선택 영역에서 파생 **TextPointers**.</xref:System.Windows.Documents.TextRange>  이러한 위치 중 하나 (으로 표시 `position1`) 다른 위치 선택 항목을 기준으로 고정 되 (가리키는 `position2`)를 이동할 수 있습니다.  이것은 마우스나 키보드를 사용 하 여 사용자가 선택한 동작 하는 방법을 비슷합니다.       실제 끝의 새 <xref:System.Windows.Documents.TextRange> <xref:System.Windows.Documents.TextRange>.</xref:System.Windows.Documents.TextRange> 새 포함 된 문서에 해당 하는 선택 휴리스틱 일치 하도록 조정할 수 있습니다</xref:System.Windows.Documents.TextRange>"
  example:
  - "The following example demonstrates the use of the <xref:System.Windows.Documents.TextRange> constructor.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_Text](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_text)]\n [!code-vb[TextPointer_Snippets#_TextRange_Text](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_text)]"
  syntax:
    content: public TextRange (System.Windows.Documents.TextPointer position1, System.Windows.Documents.TextPointer position2);
    parameters:
    - id: position1
      type: System.Windows.Documents.TextPointer
      description: "새 형성 하는 데 사용 된 선택의 한쪽 끝을 표시 하는 고정된 앵커 위치 <xref href=&quot;System.Windows.Documents.TextRange&quot;> </xref>합니다."
    - id: position2
      type: System.Windows.Documents.TextPointer
      description: "새 형성 하는 데 사용 된 선택의 다른 끝을 표시 하는 이동 가능한 위치 <xref href=&quot;System.Windows.Documents.TextRange&quot;> </xref>합니다."
  overload: System.Windows.Documents.TextRange.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "발생 경우 <code> position1 </code> 및 <code> position2 </code> 같은 문서 내에 배치 되지 않은 합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Occurs when <code>position1</code> or <code>position2</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)
  id: ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: ApplyPropertyValue(DependencyProperty,Object)
  nameWithType: TextRange.ApplyPropertyValue(DependencyProperty,Object)
  fullName: System.Windows.Documents.TextRange.ApplyPropertyValue(DependencyProperty,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "현재 선택 영역에 지정 된 서식 속성 및 값을 적용합니다."
  remarks: "이 메서드는 적절 한 <xref:System.Windows.Documents.Inline> <xref:System.Windows.Documents.Bold> <xref:System.Windows.Documents.Italic>선택 영역에이 <xref:System.Windows.Documents.TextRange>.</xref:System.Windows.Documents.TextRange> 로 표시</xref:System.Windows.Documents.Italic> 와</xref:System.Windows.Documents.Bold> 같은 요소를</xref:System.Windows.Documents.Inline> 삽입 하 여 서식을 적용 됩니다."
  example:
  - "The following example demonstrates the use of the ApplyPropertyValue method.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]"
  syntax:
    content: public void ApplyPropertyValue (System.Windows.DependencyProperty formattingProperty, object value);
    parameters:
    - id: formattingProperty
      type: System.Windows.DependencyProperty
      description: "서식 지정 하는 속성을 적용 합니다."
    - id: value
      type: System.Object
      description: "서식 속성에 대 한 값입니다."
  overload: System.Windows.Documents.TextRange.ApplyPropertyValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "발생 경우 <code> formattingProperty </code> 올바른 서식 지정 속성을 지정 하지 않습니다 또는 <code> value </code> 에 잘못 된 값을 지정 <code> formattingProperty </code>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Occurs when <code>formattingProperty</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.CanLoad(System.String)
  id: CanLoad(System.String)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: CanLoad(String)
  nameWithType: TextRange.CanLoad(String)
  fullName: System.Windows.Documents.TextRange.CanLoad(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "지정된 된 데이터 형식에는 콘텐츠와 함께 현재 선택 영역을 로드할 수 있는지 여부를 확인 합니다."
  remarks: "해당 사용 하 여 <xref:System.Windows.Documents.TextRange.Load%2A>실제로 지정된 된 데이터 형식에서 현재 선택 영역에 콘텐츠를 로드 하는 메서드.</xref:System.Windows.Documents.TextRange.Load%2A>"
  example:
  - "The following example demonstrates the use of the CanLoad method.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]"
  syntax:
    content: public bool CanLoad (string dataFormat);
    parameters:
    - id: dataFormat
      type: System.String
      description: "현재 선택 영역에 로드 호환성을 확인 하는 데이터 형식입니다.  참조 <xref href=&quot;System.Windows.DataFormats&quot;> </xref> 미리 정의 된 데이터 형식의 목록은 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>현재 선택 영역에 지정 된 데이터 형식의 콘텐츠를 로드할 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Documents.TextRange.CanLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.CanSave(System.String)
  id: CanSave(System.String)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: CanSave(String)
  nameWithType: TextRange.CanSave(String)
  fullName: System.Windows.Documents.TextRange.CanSave(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "현재 선택 영역 지정된 된 데이터 형식으로 저장할 수 있는지 여부를 확인 합니다."
  remarks: "해당 사용 하 여 <xref:System.Windows.Documents.TextRange.Save%2A>실제로 지정된 된 데이터 형식에서 현재 선택 영역을 저장 하는 메서드.</xref:System.Windows.Documents.TextRange.Save%2A>"
  example:
  - "The following example demonstrates the use of the CanSave method.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]"
  syntax:
    content: public bool CanSave (string dataFormat);
    parameters:
    - id: dataFormat
      type: System.String
      description: "확인 하려면 데이터 형식 호환성 현재 선택 영역을 저장 합니다.  참조 <xref href=&quot;System.Windows.DataFormats&quot;> </xref> 미리 정의 된 데이터 형식의 목록은 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>현재 선택 된 지정 된 데이터 형식으로 저장할 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Documents.TextRange.CanSave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.Changed
  id: Changed
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Changed
  nameWithType: TextRange.Changed
  fullName: System.Windows.Documents.TextRange.Changed
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "범위 콘텐츠의 새 범위를 변경할 때 발생 합니다."
  syntax:
    content: public event EventHandler Changed;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.ClearAllProperties
  id: ClearAllProperties
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: ClearAllProperties()
  nameWithType: TextRange.ClearAllProperties()
  fullName: System.Windows.Documents.TextRange.ClearAllProperties()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "서식 지정 속성을 모두 제거 (나타내는 <xref href=&quot;System.Windows.Documents.Inline&quot;> </xref> 요소)에서 현재 선택 영역입니다."
  remarks: "이 메서드는 <xref:System.Windows.Documents.Inline>서식 지정 <xref:System.Windows.Documents.Bold>또는 <xref:System.Windows.Documents.Italic>.</xref:System.Windows.Documents.Italic> </xref:System.Windows.Documents.Bold> 같은 요소</xref:System.Windows.Documents.Inline> 적용 단락 및 기타 바깥쪽에 설정 된 속성 <xref:System.Windows.Documents.Block>요소는 변경 되지 않습니다.</xref:System.Windows.Documents.Block>"
  syntax:
    content: public void ClearAllProperties ();
    parameters: []
  overload: System.Windows.Documents.TextRange.ClearAllProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.Contains(System.Windows.Documents.TextPointer)
  id: Contains(System.Windows.Documents.TextPointer)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Contains(TextPointer)
  nameWithType: TextRange.Contains(TextPointer)
  fullName: System.Windows.Documents.TextRange.Contains(TextPointer)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "위치 있는지 여부를 확인 (에 지정 된는 <xref href=&quot;System.Windows.Documents.TextPointer&quot;> </xref>)은 현재 선택 영역 내에 있습니다."
  remarks: "현재 선택의 양쪽 끝 위치 (가리키는 <xref:System.Windows.Documents.TextRange.Start%2A>및 <xref:System.Windows.Documents.TextRange.End%2A>) 현재 선택 항목의 일부가 될 것으로 간주 됩니다.</xref:System.Windows.Documents.TextRange.End%2A> </xref:System.Windows.Documents.TextRange.Start%2A>"
  example:
  - "The following example demonstrates the use of the Contains method.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_StartEnd](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_startend)]\n [!code-vb[TextPointer_Snippets#_TextRange_StartEnd](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_startend)]"
  syntax:
    content: public bool Contains (System.Windows.Documents.TextPointer textPointer);
    parameters:
    - id: textPointer
      type: System.Windows.Documents.TextPointer
      description: "현재 선택한 항목의 포함 여부를 테스트 하는 위치입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정된 된 위치에서 현재 선택 영역 안에 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Documents.TextRange.Contains*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "발생 경우 *textPointer* 현재 선택 항목으로 같은 문서에 없는 합니다."
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.End
  id: End
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: End
  nameWithType: TextRange.End
  fullName: System.Windows.Documents.TextRange.End
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "현재 선택 항목의 끝을 표시 하는 위치를 가져옵니다."
  remarks: ''
  example:
  - "The following example demonstrates the use of the End property.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_StartEnd](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_startend)]\n [!code-vb[TextPointer_Snippets#_TextRange_StartEnd](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_startend)]"
  syntax:
    content: public System.Windows.Documents.TextPointer End { get; }
    return:
      type: System.Windows.Documents.TextPointer
      description: "A <xref href=&quot;System.Windows.Documents.TextPointer&quot;> </xref> 하는 현재 선택 항목의 끝을 가리킵니다."
  overload: System.Windows.Documents.TextRange.End*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.GetPropertyValue(System.Windows.DependencyProperty)
  id: GetPropertyValue(System.Windows.DependencyProperty)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: GetPropertyValue(DependencyProperty)
  nameWithType: TextRange.GetPropertyValue(DependencyProperty)
  fullName: System.Windows.Documents.TextRange.GetPropertyValue(DependencyProperty)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "현재 선택한 내용에 지정된 된 서식 속성의 유효 값을 반환합니다."
  remarks: "전체 속성 값을 반환 하기 위해 <xref:System.Windows.Documents.TextRange>에 대 한 값을 하나만로 텍스트를 확장 해야 합니다는 `formattingProperty`.</xref:System.Windows.Documents.TextRange> 경우는 <xref:System.Windows.Documents.TextRange>확장에 대 한 두 개 이상의 서로 다른 값으로는 텍스트 포인터로 `formattingProperty`, <xref:System.Windows.DependencyProperty.UnsetValue>반환 됩니다.</xref:System.Windows.DependencyProperty.UnsetValue> </xref:System.Windows.Documents.TextRange>"
  syntax:
    content: public object GetPropertyValue (System.Windows.DependencyProperty formattingProperty);
    parameters:
    - id: formattingProperty
      type: System.Windows.DependencyProperty
      description: "서식 지정 하는 속성을 현재 선택 영역에 대 한 값을 가져옵니다."
    return:
      type: System.Object
      description: "지정된 된 문화권별 형식 지정 속성의 값을 지정 하는 개체입니다."
  overload: System.Windows.Documents.TextRange.GetPropertyValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "발생 경우 <code> formattingProperty </code> 올바른 서식 지정 속성을 지정 하지 않습니다 또는 <code> value </code> 에 잘못 된 값을 지정 <code> formattingProperty </code>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Occurs when <code>formattingProperty</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.IsEmpty
  id: IsEmpty
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: IsEmpty
  nameWithType: TextRange.IsEmpty
  fullName: System.Windows.Documents.TextRange.IsEmpty
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "현재 선택 영역이 비어 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "A <xref:System.Windows.Documents.TextRange>경우 빈 것으로 간주 되는 <xref:System.Windows.Documents.TextRange.Start%2A>및 <xref:System.Windows.Documents.TextRange.End%2A>위치는 같습니다.</xref:System.Windows.Documents.TextRange.End%2A> </xref:System.Windows.Documents.TextRange.Start%2A> </xref:System.Windows.Documents.TextRange>"
  example:
  - "The following example demonstrates the use of the IsEmpty property.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]"
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>현재 선택 영역이 비어 있으면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Documents.TextRange.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.Load(System.IO.Stream,System.String)
  id: Load(System.IO.Stream,System.String)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Load(Stream,String)
  nameWithType: TextRange.Load(Stream,String)
  fullName: System.Windows.Documents.TextRange.Load(Stream,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "지정 된 스트림에서 지정된 된 데이터 형식에서 현재 선택 영역을 로드합니다."
  remarks: "경우 <xref:System.IO.Stream.CanSeek%2A>은 `true` 에 대 한 `stream`, 스트림의 끝에 콘텐츠를 스트림 시작 부분에서 로드 됩니다.</xref:System.IO.Stream.CanSeek%2A>  현재에서 내용을 읽을 수는 그렇지 않은 경우 <xref:System.IO.Stream.Position%2A>스트림의 끝에.</xref:System.IO.Stream.Position%2A>  이 메서드가 반환 될 때 `stream` 열리고 내의 현재 위치에 그대로 `stream` 정의 되지 않습니다.       로드 작업을 새로 로드 된 내용을 사용 하 여 현재 선택 영역을 바꿉니다."
  example:
  - "The following example demonstrates the use of the Load method.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]"
  syntax:
    content: public void Load (System.IO.Stream stream, string dataFormat);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "현재 선택 영역에 로드 하는 데이터를 포함 하는 읽기 가능한 스트림."
    - id: dataFormat
      type: System.String
      description: "로 데이터를 로드 하는 데이터 형식입니다.  데이터 형식에는 현재 지원 <xref href=&quot;System.Windows.DataFormats.Rtf&quot;> </xref>, <xref href=&quot;System.Windows.DataFormats.Text&quot;> </xref>, <xref href=&quot;System.Windows.DataFormats.Xaml&quot;> </xref>, 및 <xref href=&quot;System.Windows.DataFormats.XamlPackage&quot;> </xref>합니다."
  overload: System.Windows.Documents.TextRange.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Occurs when <code>stream</code> or <code>dataFormat</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "지정 된 데이터 형식이 지원 되지 않는 경우 발생 합니다.  콘텐츠를 로드 하는 경우에 발생 수 <code> stream </code> 지정된 된 데이터 형식과 일치 하지 않습니다."
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String)
  id: Save(System.IO.Stream,System.String)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Save(Stream,String)
  nameWithType: TextRange.Save(Stream,String)
  fullName: System.Windows.Documents.TextRange.Save(Stream,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "현재 선택 영역 지정된 된 데이터 형식에 지정 된 스트림에 저장 합니다."
  remarks: "이 메서드가 반환 될 때 `stream` 열리고 내의 현재 위치에 그대로 `stream` 정의 되지 않습니다.       저장의 일부로 현재 선택한 항목의 콘텐츠 변환 될 수 있습니다 하 여 지정 된 데이터 형식으로 `dataFormat`합니다."
  example:
  - "The following example demonstrates the use of the Save method.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]"
  syntax:
    content: public void Save (System.IO.Stream stream, string dataFormat);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "현재 선택 영역을 저장 하는 빈, 쓰기 가능한 스트림."
    - id: dataFormat
      type: System.String
      description: "현재 선택 항목을 저장 하는 데이터 형식입니다.  데이터 형식에는 현재 지원 <xref href=&quot;System.Windows.DataFormats.Rtf&quot;> </xref>, <xref href=&quot;System.Windows.DataFormats.Text&quot;> </xref>, <xref href=&quot;System.Windows.DataFormats.Xaml&quot;> </xref>, 및 <xref href=&quot;System.Windows.DataFormats.XamlPackage&quot;> </xref>합니다."
  overload: System.Windows.Documents.TextRange.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>or <code>dataFormat</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "지정 된 데이터 형식이 지원 되지 않습니다.       -에서 콘텐츠를 로드 또는 <code> stream </code> 지정된 된 데이터 형식과 일치 하지 않습니다."
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String,System.Boolean)
  id: Save(System.IO.Stream,System.String,System.Boolean)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Save(Stream,String,Boolean)
  nameWithType: TextRange.Save(Stream,String,Boolean)
  fullName: System.Windows.Documents.TextRange.Save(Stream,String,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "현재 선택 영역 사용자 지정을 유지 하는 옵션과 함께 지정 된 데이터 형식으로 지정 된 스트림에 저장 <xref href=&quot;System.Windows.Documents.TextElement&quot;> </xref> 개체입니다."
  remarks: "때 `preserveTextElements` 은 `false`사용자 지정, <xref:System.Windows.Documents.TextElement>알려져 개체는 저장 <xref:System.Windows.Documents.TextElement>형식.</xref:System.Windows.Documents.TextElement> </xref:System.Windows.Documents.TextElement>  예를 들어, 사용자 정의 만들 <xref:System.Windows.Documents.TextElement>호출 `Heading1`, <xref:System.Windows.Documents.Paragraph>.</xref:System.Windows.Documents.Paragraph> 에서 상속한</xref:System.Windows.Documents.TextElement> 이 메서드를 호출 하면 `preserveTextElements` 로 설정 `false`, `Heading1` 변환할는 <xref:System.Windows.Documents.Paragraph>때는 <xref:System.Windows.Documents.TextRange>저장 됩니다.</xref:System.Windows.Documents.TextRange> </xref:System.Windows.Documents.Paragraph>  이 메서드를 호출 하면 `preserveTextElements` 로 설정 `true`, `Heading1` 변환 되지 않고 저장 됩니다. 사용자 지정 텍스트 요소를 보존할지 `dataFormat` <xref:System.Windows.DataFormats.Xaml?displayProperty=fullName>.</xref:System.Windows.DataFormats.Xaml?displayProperty=fullName> 로 설정 되어야 합니다       저장은.NET Framework 버전 3.5에서에서 도입 되었습니다.  자세한 내용은 참조 [버전 및 종속성](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public void Save (System.IO.Stream stream, string dataFormat, bool preserveTextElements);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "현재 선택 영역을 저장 하는 빈, 쓰기 가능한 스트림."
    - id: dataFormat
      type: System.String
      description: "현재 선택 항목을 저장 하는 데이터 형식입니다.  데이터 형식에는 현재 지원 <xref href=&quot;System.Windows.DataFormats.Rtf&quot;> </xref>, <xref href=&quot;System.Windows.DataFormats.Text&quot;> </xref>, <xref href=&quot;System.Windows.DataFormats.Xaml&quot;> </xref>, 및 <xref href=&quot;System.Windows.DataFormats.XamlPackage&quot;> </xref>합니다."
    - id: preserveTextElements
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사용자 지정을 유지 하기 위해 <xref href=&quot;System.Windows.Documents.TextElement&quot;> </xref> 개체이 고, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Documents.TextRange.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Occurs when <code>stream</code> or <code>dataFormat</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "지정 된 데이터 형식이 지원 되지 않는 경우 발생 합니다.  콘텐츠를 로드 하는 경우에 발생 수 <code> stream </code> 지정된 된 데이터 형식과 일치 하지 않습니다."
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  id: Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Select(TextPointer,TextPointer)
  nameWithType: TextRange.Select(TextPointer,TextPointer)
  fullName: System.Windows.Documents.TextRange.Select(TextPointer,TextPointer)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "두 개의 현재 선택을 업데이트 <xref href=&quot;System.Windows.Documents.TextPointer&quot;> </xref> 위치를 업데이트 된 선택을 나타냅니다."
  remarks: "A <xref:System.Windows.Documents.TextRange>형식으로 표시 하는 두 위치 간에 선택 영역에서 파생 **TextPointers**.</xref:System.Windows.Documents.TextRange>  이러한 위치 중 하나 (으로 표시 `position1`) 다른 위치 선택 항목을 기준으로 고정 되 (가리키는 `position2`)를 이동할 수 있습니다.  이것은 마우스나 키보드를 사용 하 여 사용자가 선택한 동작 하는 방법을 비슷합니다.       새 선택의 실제 끝 새 현재 선택 영역을 포함 하는 문서에 적용할 수 있는 선택 휴리스틱 일치 하도록 조정할 수 있습니다."
  syntax:
    content: public void Select (System.Windows.Documents.TextPointer position1, System.Windows.Documents.TextPointer position2);
    parameters:
    - id: position1
      type: System.Windows.Documents.TextPointer
      description: "업데이트 된 선택의 한쪽 끝을 표시 하는 고정된 앵커 위치입니다."
    - id: position2
      type: System.Windows.Documents.TextPointer
      description: "업데이트 된 선택의 다른 쪽 끝을 표시 하는 이동 가능한 위치입니다."
  overload: System.Windows.Documents.TextRange.Select*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "발생 경우 <code> position1 </code> 및 <code> position2 </code> 같은 문서 내에 배치 되지 않은 합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Occurs when <code>position1</code> or <code>position2</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.Start
  id: Start
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Start
  nameWithType: TextRange.Start
  fullName: System.Windows.Documents.TextRange.Start
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "현재 선택의 시작 부분을 표시 하는 위치를 가져옵니다."
  remarks: ''
  example:
  - "The following example demonstrates the use of the Start property.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_StartEnd](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_startend)]\n [!code-vb[TextPointer_Snippets#_TextRange_StartEnd](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_startend)]"
  syntax:
    content: public System.Windows.Documents.TextPointer Start { get; }
    return:
      type: System.Windows.Documents.TextPointer
      description: "A <xref href=&quot;System.Windows.Documents.TextPointer&quot;> </xref> 현재 선택의 시작 부분을 가리키는 합니다."
  overload: System.Windows.Documents.TextRange.Start*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.Text
  id: Text
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Text
  nameWithType: TextRange.Text
  fullName: System.Windows.Documents.TextRange.Text
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "현재 선택 된 일반 텍스트 콘텐츠를 가져오거나 설정 합니다."
  remarks: "이 속성을 사용 하 여 있을 수 있는 서식은 관계 없이 현재 선택한 항목의 일반 텍스트 콘텐츠를 추출할 수 있습니다.       줄 바꿈 문자 및 단락 구분선이이 속성에 대해 동일한 것으로 처리 됩니다.  이 속성을 읽을 때 모든 유형의 현재 선택 영역에 있는 콘텐츠 나누기 새 선으로 변환 됩니다."
  example:
  - "The following example demonstrates the use of the Text property.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_Text](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_text)]\n [!code-vb[TextPointer_Snippets#_TextRange_Text](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_text)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "현재 선택 된 일반 텍스트 콘텐츠를 포함 하는 문자열입니다."
  overload: System.Windows.Documents.TextRange.Text*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "이 속성을 설정 하려고 시도 하는 경우에 발생 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Documents.TextRange.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: TextRange(TextPointer,TextPointer)
  nameWithType: TextRange.TextRange(TextPointer,TextPointer)
  fullName: System.Windows.Documents.TextRange.TextRange(TextPointer,TextPointer)
- uid: System.Windows.Documents.TextPointer
  parent: System.Windows.Documents
  isExternal: false
  name: TextPointer
  nameWithType: TextPointer
  fullName: System.Windows.Documents.TextPointer
- uid: System.Windows.Documents.TextRange.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: ApplyPropertyValue(DependencyProperty,Object)
  nameWithType: TextRange.ApplyPropertyValue(DependencyProperty,Object)
  fullName: System.Windows.Documents.TextRange.ApplyPropertyValue(DependencyProperty,Object)
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Documents.TextRange.CanLoad(System.String)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: CanLoad(String)
  nameWithType: TextRange.CanLoad(String)
  fullName: System.Windows.Documents.TextRange.CanLoad(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Documents.TextRange.CanSave(System.String)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: CanSave(String)
  nameWithType: TextRange.CanSave(String)
  fullName: System.Windows.Documents.TextRange.CanSave(String)
- uid: System.Windows.Documents.TextRange.Changed
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Changed
  nameWithType: TextRange.Changed
  fullName: System.Windows.Documents.TextRange.Changed
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Documents.TextRange.ClearAllProperties
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: ClearAllProperties()
  nameWithType: TextRange.ClearAllProperties()
  fullName: System.Windows.Documents.TextRange.ClearAllProperties()
- uid: System.Windows.Documents.TextRange.Contains(System.Windows.Documents.TextPointer)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Contains(TextPointer)
  nameWithType: TextRange.Contains(TextPointer)
  fullName: System.Windows.Documents.TextRange.Contains(TextPointer)
- uid: System.Windows.Documents.TextRange.End
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: End
  nameWithType: TextRange.End
  fullName: System.Windows.Documents.TextRange.End
- uid: System.Windows.Documents.TextRange.GetPropertyValue(System.Windows.DependencyProperty)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: GetPropertyValue(DependencyProperty)
  nameWithType: TextRange.GetPropertyValue(DependencyProperty)
  fullName: System.Windows.Documents.TextRange.GetPropertyValue(DependencyProperty)
- uid: System.Windows.Documents.TextRange.IsEmpty
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: IsEmpty
  nameWithType: TextRange.IsEmpty
  fullName: System.Windows.Documents.TextRange.IsEmpty
- uid: System.Windows.Documents.TextRange.Load(System.IO.Stream,System.String)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Load(Stream,String)
  nameWithType: TextRange.Load(Stream,String)
  fullName: System.Windows.Documents.TextRange.Load(Stream,String)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Save(Stream,String)
  nameWithType: TextRange.Save(Stream,String)
  fullName: System.Windows.Documents.TextRange.Save(Stream,String)
- uid: System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String,System.Boolean)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Save(Stream,String,Boolean)
  nameWithType: TextRange.Save(Stream,String,Boolean)
  fullName: System.Windows.Documents.TextRange.Save(Stream,String,Boolean)
- uid: System.Windows.Documents.TextRange.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Select(TextPointer,TextPointer)
  nameWithType: TextRange.Select(TextPointer,TextPointer)
  fullName: System.Windows.Documents.TextRange.Select(TextPointer,TextPointer)
- uid: System.Windows.Documents.TextRange.Start
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Start
  nameWithType: TextRange.Start
  fullName: System.Windows.Documents.TextRange.Start
- uid: System.Windows.Documents.TextRange.Text
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Text
  nameWithType: TextRange.Text
  fullName: System.Windows.Documents.TextRange.Text
- uid: System.Windows.Documents.TextRange.#ctor*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: TextRange
  nameWithType: TextRange.TextRange
- uid: System.Windows.Documents.TextRange.ApplyPropertyValue*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: ApplyPropertyValue
  nameWithType: TextRange.ApplyPropertyValue
- uid: System.Windows.Documents.TextRange.CanLoad*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: CanLoad
  nameWithType: TextRange.CanLoad
- uid: System.Windows.Documents.TextRange.CanSave*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: CanSave
  nameWithType: TextRange.CanSave
- uid: System.Windows.Documents.TextRange.ClearAllProperties*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: ClearAllProperties
  nameWithType: TextRange.ClearAllProperties
- uid: System.Windows.Documents.TextRange.Contains*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Contains
  nameWithType: TextRange.Contains
- uid: System.Windows.Documents.TextRange.End*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: End
  nameWithType: TextRange.End
- uid: System.Windows.Documents.TextRange.GetPropertyValue*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: GetPropertyValue
  nameWithType: TextRange.GetPropertyValue
- uid: System.Windows.Documents.TextRange.IsEmpty*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: IsEmpty
  nameWithType: TextRange.IsEmpty
- uid: System.Windows.Documents.TextRange.Load*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Load
  nameWithType: TextRange.Load
- uid: System.Windows.Documents.TextRange.Save*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Save
  nameWithType: TextRange.Save
- uid: System.Windows.Documents.TextRange.Select*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Select
  nameWithType: TextRange.Select
- uid: System.Windows.Documents.TextRange.Start*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Start
  nameWithType: TextRange.Start
- uid: System.Windows.Documents.TextRange.Text*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Text
  nameWithType: TextRange.Text
