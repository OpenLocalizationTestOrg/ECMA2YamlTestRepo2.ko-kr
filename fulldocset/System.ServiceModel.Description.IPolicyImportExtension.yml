### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.IPolicyImportExtension
  id: IPolicyImportExtension
  children:
  - System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  langs:
  - csharp
  name: IPolicyImportExtension
  nameWithType: IPolicyImportExtension
  fullName: System.ServiceModel.Description.IPolicyImportExtension
  type: Interface
  summary: "바인딩에 대 한 사용자 지정 정책 어설션을 가져오는 개체에 대 한 메서드를 정의 합니다."
  remarks: "한 끝점 기능 또는 요구 사항에 대 한 사용자 지정 정책 어설션의 특정 끝점에서 공개한 WSDL 정보를 검색 하려면 IPolicyImportExtension 인터페이스를 구현 합니다. 일반적으로 정책 가져오기는 바인딩 요소에서는 특정 어설션 및 삽입에 대 한 검색 바인딩 요소를 구성 하거나 후 어설션 요구 사항을 지원 하기 위해 계약을 수정 합니다.       이 대응 달리 <xref:System.ServiceModel.Description.IPolicyExportExtension>, IPolicyImportExtension 구현으로 필요 하지 않습니다는 <xref:System.ServiceModel.Channels.BindingElement>개체; &quot;예&quot; 섹션 또는 추가 하 여 프로그래밍 방식으로 표시 된 클라이언트 구성 섹션을 사용 하 여 로드할 수 있습니다는 <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName>생성자.</xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> </xref:System.ServiceModel.Channels.BindingElement> </xref:System.ServiceModel.Description.IPolicyExportExtension>       [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]<xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A>메서드는 <xref:System.ServiceModel.Description.MetadataImporter>및에 <xref:System.ServiceModel.Description.PolicyConversionContext>.</xref:System.ServiceModel.Description.PolicyConversionContext> </xref:System.ServiceModel.Description.MetadataImporter> ,</xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A> 두 개체를 전달합니다. 일반적으로 <xref:System.ServiceModel.Description.PolicyConversionContext>개체에 각 바인딩 범위에 대 한 정책 어설션이 이미 포함 되어 있습니다.</xref:System.ServiceModel.Description.PolicyConversionContext>       다음 단계를 수행 하는 IPolicyImportExtension 구현: 1입니다.  담당 하 고 호출 하 여 사용자 지정 정책 어설션을 찾습니다는 <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, 또는 <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A>메서드 범위에 따라.</xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>      2.  어설션 컬렉션에서 정책 어설션을 제거 합니다. <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>메서드 찾고 반환 하 고&1; 단계에는 어설션을 제거 합니다.</xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>      3.  필요한 사용자 지정 하거나 추가 하 여 바인딩 스택 또는 계약 수정 <xref:System.ServiceModel.Channels.BindingElement>에 <xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A>속성 또는 수정 하 여는 <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName>속성.</xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A> </xref:System.ServiceModel.Channels.BindingElement>       2 단계는 중요 합니다. 모든 정책 가져오기를 호출 된 후 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 남아 있는 정책 어설션이 있는지 여부를 확인 합니다. 있는 경우 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 간주 정책 가져오기가 실패 했습니다. 하 고 관련된 바인딩을 가져오지 않습니다.      > [!IMPORTANT] > 악의적인 메타 데이터 공급자가 정책 가져오기를 악용 하기 위해 잘못 된 형식의 XML 메타 데이터의 일부로 보낼 하려고 할 수 있습니다. 해당 사용자 지정 정책 가져오기가 모든 형태의 XML 전달 될 수 있는 강력 할 가장 좋습니다.       사용자 지정 <xref:System.ServiceModel.Description.MetadataImporter>구현은 구현 해야 자신의 <xref:System.ServiceModel.Description.PolicyConversionContext>정책 어설션을 개체 사용자 지정 메타 데이터 형식에 연결 합니다.</xref:System.ServiceModel.Description.PolicyConversionContext> </xref:System.ServiceModel.Description.MetadataImporter>       정책 어설션이 아닌 사용자 지정 WSDL 요소를 내보내고 하려면 참조 <xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=fullName>및 <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName>.</xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> </xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=fullName>      > [!NOTE] > 사용자 지정 정책 가져오기 및 내보내기를 사용할 수는 [ServiceModel Metadata 유틸리티 도구 (Svcutil.exe)](~/add/includes/ajax-current-ext-md.md) 구성 파일에서 동일한 구성 요소를 사용 하 여 및 `/svcutilConfig:<configFile>` 옵션입니다."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName> method to locate, return, and remove the assertion in one step.  \n  \n [!code-cs[CustomPolicySample#1](~/add/codesnippet/csharp/custompolicysample.client/policyimporter.cs#1)]\n [!code-vb[CustomPolicySample#1](~/add/codesnippet/visualbasic/custompolicysample.client/policyimporter.vb#1)]  \n  \n The following code example shows the client application configuration file to load the custom policy importer when the <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=fullName> is invoked.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and resolve metadata into description objects.  \n  \n [!code-vb[CustomPolicySample#10](~/add/codesnippet/visualbasic/custompolicysample.client/client.vb#10)]\n [!code-cs[CustomPolicySample#10](~/add/codesnippet/csharp/custompolicysample.client/client.cs#10)]"
  syntax:
    content: public interface IPolicyImportExtension
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  id: ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  parent: System.ServiceModel.Description.IPolicyImportExtension
  langs:
  - csharp
  name: ImportPolicy(MetadataImporter,PolicyConversionContext)
  nameWithType: IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
  fullName: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "사용자 지정 정책 어설션의 가져오고 구현 바인딩 요소를 추가할 수 있는 메서드를 정의 합니다."
  remarks: "구현 된 `ImportPolicy` 메서드를 정책 어설션을 가져온 해당 어설션을 지원 하도록 가져온된 계약 또는 바인딩을 수정 합니다. 일반적으로 정책 가져오기는 구성 하거나 바인딩 요소를 가져올 바인딩에 삽입 함으로써 사용자 지정 정책 어설션 검색에 응답 합니다.       [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]두 개체는 <xref:System.ServiceModel.Description.MetadataImporter>및에 <xref:System.ServiceModel.Description.PolicyConversionContext>.</xref:System.ServiceModel.Description.PolicyConversionContext> </xref:System.ServiceModel.Description.MetadataImporter> ImportPolicy 메서드에 전달합니다. 일반적으로 <xref:System.ServiceModel.Description.PolicyConversionContext>개체에 각 바인딩 범위에 대 한 정책 어설션이 이미 포함 되어 있습니다.</xref:System.ServiceModel.Description.PolicyConversionContext>       <xref:System.ServiceModel.Description.IPolicyImportExtension>구현에서는 다음 단계를 수행 합니다. 1.</xref:System.ServiceModel.Description.IPolicyImportExtension>  담당 하 고 호출 하 여 사용자 지정 정책 어설션을 찾습니다는 <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, 또는 <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A>메서드 범위에 따라.</xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>      2.  어설션 컬렉션에서 정책 어설션을 제거 합니다. <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>메서드 찾고 반환 하 고&1; 단계에는 어설션을 제거 합니다.</xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>      3.  필요한 사용자 지정을 추가 하거나 바인딩 스택 또는 계약을 수정 <xref:System.ServiceModel.Channels.BindingElement>에 <xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A>속성 또는 수정 하 여는 <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName>속성.</xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A> </xref:System.ServiceModel.Channels.BindingElement>       2 단계는 중요 합니다. 모든 정책 가져오기를 호출 된 후 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 남아 있는 정책 어설션이 있는지 여부를 확인 합니다. 있는 경우 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 간주 정책 가져오기가 실패 했습니다. 하 고 관련된 바인딩을 가져오지 않습니다."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName> method to locate, return, and remove the assertion in one step.  \n  \n [!code-cs[CustomPolicySample#1](~/add/codesnippet/csharp/custompolicysample.client/policyimporter.cs#1)]\n [!code-vb[CustomPolicySample#1](~/add/codesnippet/visualbasic/custompolicysample.client/policyimporter.vb#1)]  \n  \n The following code example shows the client application configuration file to load the custom policy importer when the <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=fullName> is invoked.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and resolve metadata into description objects.  \n  \n [!code-vb[CustomPolicySample#10](~/add/codesnippet/visualbasic/custompolicysample.client/client.vb#10)]\n [!code-cs[CustomPolicySample#10](~/add/codesnippet/csharp/custompolicysample.client/client.cs#10)]"
  syntax:
    content: public void ImportPolicy (System.ServiceModel.Description.MetadataImporter importer, System.ServiceModel.Description.PolicyConversionContext context);
    parameters:
    - id: importer
      type: System.ServiceModel.Description.MetadataImporter
      description: "<xref href=&quot;System.ServiceModel.Description.MetadataImporter&quot;> </xref> 개체를 사용에서 합니다."
    - id: context
      type: System.ServiceModel.Description.PolicyConversionContext
      description: "<xref href=&quot;System.ServiceModel.Description.PolicyConversionContext&quot;> </xref> 를 모두 가져올 수 있는 정책 어설션 컬렉션 포함 바인딩 요소는 구현 바인딩 요소를 추가할 수 있습니다."
  overload: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  parent: System.ServiceModel.Description.IPolicyImportExtension
  isExternal: false
  name: ImportPolicy(MetadataImporter,PolicyConversionContext)
  nameWithType: IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
  fullName: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
- uid: System.ServiceModel.Description.MetadataImporter
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataImporter
  nameWithType: MetadataImporter
  fullName: System.ServiceModel.Description.MetadataImporter
- uid: System.ServiceModel.Description.PolicyConversionContext
  parent: System.ServiceModel.Description
  isExternal: false
  name: PolicyConversionContext
  nameWithType: PolicyConversionContext
  fullName: System.ServiceModel.Description.PolicyConversionContext
- uid: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy*
  parent: System.ServiceModel.Description.IPolicyImportExtension
  isExternal: false
  name: ImportPolicy
  nameWithType: IPolicyImportExtension.ImportPolicy
