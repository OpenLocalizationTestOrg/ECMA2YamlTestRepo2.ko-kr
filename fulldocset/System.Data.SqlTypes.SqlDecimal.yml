### YamlMime:ManagedReference
items:
- uid: System.Data.SqlTypes.SqlDecimal
  id: SqlDecimal
  children:
  - System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)
  - System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)
  - System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)
  - System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)
  - System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])
  - System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)
  - System.Data.SqlTypes.SqlDecimal.BinData
  - System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)
  - System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)
  - System.Data.SqlTypes.SqlDecimal.Data
  - System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.Equals(System.Object)
  - System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.GetHashCode
  - System.Data.SqlTypes.SqlDecimal.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  - System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.IsNull
  - System.Data.SqlTypes.SqlDecimal.IsPositive
  - System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.MaxPrecision
  - System.Data.SqlTypes.SqlDecimal.MaxScale
  - System.Data.SqlTypes.SqlDecimal.MaxValue
  - System.Data.SqlTypes.SqlDecimal.MinValue
  - System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.Null
  - System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Decimal)
  - System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double to System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)
  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)
  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)
  - System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.Parse(System.String)
  - System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)
  - System.Data.SqlTypes.SqlDecimal.Precision
  - System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)
  - System.Data.SqlTypes.SqlDecimal.Scale
  - System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#GetSchema
  - System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  - System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  - System.Data.SqlTypes.SqlDecimal.ToDouble
  - System.Data.SqlTypes.SqlDecimal.ToSqlBoolean
  - System.Data.SqlTypes.SqlDecimal.ToSqlByte
  - System.Data.SqlTypes.SqlDecimal.ToSqlDouble
  - System.Data.SqlTypes.SqlDecimal.ToSqlInt16
  - System.Data.SqlTypes.SqlDecimal.ToSqlInt32
  - System.Data.SqlTypes.SqlDecimal.ToSqlInt64
  - System.Data.SqlTypes.SqlDecimal.ToSqlMoney
  - System.Data.SqlTypes.SqlDecimal.ToSqlSingle
  - System.Data.SqlTypes.SqlDecimal.ToSqlString
  - System.Data.SqlTypes.SqlDecimal.ToString
  - System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)
  - System.Data.SqlTypes.SqlDecimal.Value
  langs:
  - csharp
  name: SqlDecimal
  nameWithType: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
  type: Struct
  summary: "-10 사이의 숫자 값을 나타내는 ^38 + 1에서 10 ^38-1, 정밀도 배율이 고정 합니다."
  remarks: "SqlDecimal에 서로 다른 기본 데이터 구조는 해당.NET Framework에서 <xref:System.Decimal>데이터 형식.</xref:System.Decimal> <xref:System.Decimal>정밀도의 개념이 있습니다.</xref:System.Decimal> 3 바이트를 사용 하 여 실제 데이터를 저장 하 고 때문에 최대 자릿수는 28입니다. 데이터 범위는 79228162514264337593543950335 79228162514264337593543950335 ~ 합니다. SqlDecimal은 자릿수 및 소수 자릿수가 모두에 있습니다. 4 개의 부호 없는 4 바이트 정수를 사용 하 여 실제 데이터를 저장 하 고 최대 전체 자릿수 및 소수 자릿수는 38 때문에 있습니다. 데이터 범위는-10 ^38 + 1부터 10 ^38-1입니다."
  syntax:
    content: >-
      [System.Xml.Serialization.XmlSchemaProvider("GetXsdType")]

      public struct SqlDecimal : IComparable, System.Data.SqlTypes.INullable, System.Xml.Serialization.IXmlSerializable
  inheritance:
  - System.ValueType
  implements:
  - System.Data.SqlTypes.INullable
  - System.IComparable
  - System.Xml.Serialization.IXmlSerializable
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)
  id: '#ctor(System.Decimal)'
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: SqlDecimal(Decimal)
  nameWithType: SqlDecimal.SqlDecimal(Decimal)
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(Decimal)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 사용 하 여 제공 된 <xref:System.Decimal>값.</xref:System.Decimal>"
  syntax:
    content: public SqlDecimal (decimal value);
    parameters:
    - id: value
      type: System.Decimal
      description: "<xref:System.Decimal>로 저장할 수 값을 한 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조.</xref:System.Decimal>"
  overload: System.Data.SqlTypes.SqlDecimal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: SqlDecimal(Double)
  nameWithType: SqlDecimal.SqlDecimal(Double)
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(Double)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 제공 된 두 개의 매개 변수를 사용 하 여 구성 합니다."
  syntax:
    content: public SqlDecimal (double dVal);
    parameters:
    - id: dVal
      type: System.Double
      description: "새 값을 나타내는 double <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
  overload: System.Data.SqlTypes.SqlDecimal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: SqlDecimal(Int32)
  nameWithType: SqlDecimal.SqlDecimal(Int32)
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(Int32)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 제공 된 정수 값을 사용 하 여 구성 합니다."
  syntax:
    content: public SqlDecimal (int value);
    parameters:
    - id: value
      type: System.Int32
      description: "제공된 된 정수 값의 새 값으로 사용 됩니다 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
  overload: System.Data.SqlTypes.SqlDecimal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)
  id: '#ctor(System.Int64)'
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: SqlDecimal(Int64)
  nameWithType: SqlDecimal.SqlDecimal(Int64)
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(Int64)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 제공 된 정수 (long) 값을 사용 하 여 구성 합니다."
  syntax:
    content: public SqlDecimal (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "제공 된 정수 (long) 값의 새 값으로 사용 됩니다 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
  overload: System.Data.SqlTypes.SqlDecimal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])
  id: '#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])'
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: SqlDecimal(Byte,Byte,Boolean,Int32[])
  nameWithType: SqlDecimal.SqlDecimal(Byte,Byte,Boolean,Int32[])
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(Byte,Byte,Boolean,Int32[])
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 제공된 된 매개 변수를 사용 하 여 구성 합니다."
  syntax:
    content: public SqlDecimal (byte bPrecision, byte bScale, bool fPositive, int[] bits);
    parameters:
    - id: bPrecision
      type: System.Byte
      description: "나타내기 위해 사용할 수 있는 최대 자릿수는 <xref:System.Data.SqlTypes.SqlDecimal.Value*>새 속성 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조.</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
    - id: bScale
      type: System.Byte
      description: "에 소수 자릿수는 <xref:System.Data.SqlTypes.SqlDecimal.Value*>새 속성 해결 됩니다 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조.</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
    - id: fPositive
      type: System.Boolean
      description: "나타내는 부울 값 여부 새 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조 양수 또는 음수 숫자를 나타냅니다."
    - id: bits
      type: System.Int32[]
      description: "새 값을 제공 하는 128 비트 부호 없는 정수 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>합니다."
  overload: System.Data.SqlTypes.SqlDecimal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: SqlDecimal(Byte,Byte,Boolean,Int32,Int32,Int32,Int32)
  nameWithType: SqlDecimal.SqlDecimal(Byte,Byte,Boolean,Int32,Int32,Int32,Int32)
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(Byte,Byte,Boolean,Int32,Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 제공된 된 매개 변수를 사용 하 여 구성 합니다."
  syntax:
    content: public SqlDecimal (byte bPrecision, byte bScale, bool fPositive, int data1, int data2, int data3, int data4);
    parameters:
    - id: bPrecision
      type: System.Byte
      description: "나타내기 위해 사용할 수 있는 최대 자릿수는 <xref:System.Data.SqlTypes.SqlDecimal.Value*>새 속성 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조.</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
    - id: bScale
      type: System.Byte
      description: "에 소수 자릿수는 <xref:System.Data.SqlTypes.SqlDecimal.Value*>새 속성 해결 됩니다 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조.</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
    - id: fPositive
      type: System.Boolean
      description: "나타내는 부울 값 여부 새 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조 양수 또는 음수 숫자를 나타냅니다."
    - id: data1
      type: System.Int32
      description: "Data2, data3, data4 새 나타내는 128 비트 부호 없는 정수를 출력 하기 위해와 결합할 수 있는 32 비트 부호 없는 정수 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조체 값입니다."
    - id: data2
      type: System.Int32
      description: "Data1, data3, data4 새 나타내는 128 비트 부호 없는 정수를 출력 하기 위해와 결합할 수 있는 32 비트 부호 없는 정수 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조체 값입니다."
    - id: data3
      type: System.Int32
      description: "Data1, data2 및 새 나타내는 128 비트 부호 없는 정수를 출력 하기 위해 data4와 결합 하는 32 비트 부호 없는 정수 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조체 값입니다."
    - id: data4
      type: System.Int32
      description: "Data1, data2, data3 새 나타내는 128 비트 부호 없는 정수를 출력 하기 위해와 결합할 수 있는 32 비트 부호 없는 정수 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조체 값입니다."
  overload: System.Data.SqlTypes.SqlDecimal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)
  id: Abs(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Abs(SqlDecimal)
  nameWithType: SqlDecimal.Abs(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Abs(SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Abs 메서드의 절대 값을 가져옵니다는 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 매개 변수입니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal Abs (System.Data.SqlTypes.SqlDecimal n);
    parameters:
    - id: n
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 갖는 <xref:System.Data.SqlTypes.SqlDecimal.Value*>의 절대 값을 나타내는 부호 없는 숫자를 포함 하는 속성은 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 매개 변수.</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.Abs*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Add(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.Add(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Add(SqlDecimal,SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두의 합계를 계산 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 연산자입니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal Add (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "새 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 갖는 <xref:System.Data.SqlTypes.SqlDecimal.Value*>합계를 포함 하는 속성.</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)
  id: AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: AdjustScale(SqlDecimal,Int32,Boolean)
  nameWithType: SqlDecimal.AdjustScale(SqlDecimal,Int32,Boolean)
  fullName: System.Data.SqlTypes.SqlDecimal.AdjustScale(SqlDecimal,Int32,Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "소수 자릿수는 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 피연산자는 숫자 매개 변수가 나타내는 자릿수도 조정 됩니다. FRound 매개 변수의 값에 따라 값 적절 한 자릿수를 반올림 하거나 잘립니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal AdjustScale (System.Data.SqlTypes.SqlDecimal n, int digits, bool fRound);
    parameters:
    - id: n
      type: System.Data.SqlTypes.SqlDecimal
      description: "<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 조정 해야 하는 구조입니다."
    - id: digits
      type: System.Int32
      description: "조정된 된 구조체의 자릿수입니다."
    - id: fRound
      type: System.Boolean
      description: "이 매개 변수가 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, 새 값은 반올림 되 고, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, 값은 잘립니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "새 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 갖는 <xref:System.Data.SqlTypes.SqlDecimal.Value*>속성 조정된 된 숫자를 포함 합니다.</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.AdjustScale*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.BinData
  id: BinData
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: BinData
  nameWithType: SqlDecimal.BinData
  fullName: System.Data.SqlTypes.SqlDecimal.BinData
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 값의 이진 표현 가져오기 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조 바이트 배열입니다."
  syntax:
    content: public byte[] BinData { get; }
    return:
      type: System.Byte[]
      description: "이진 표현을 포함 하는 바이트 배열에서 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조체의 값입니다."
  overload: System.Data.SqlTypes.SqlDecimal.BinData*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)
  id: Ceiling(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Ceiling(SqlDecimal)
  nameWithType: SqlDecimal.Ceiling(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Ceiling(SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "지정 된 보다 크거나 같은 최소 정수를 반환 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal Ceiling (System.Data.SqlTypes.SqlDecimal n);
    parameters:
    - id: n
      type: System.Data.SqlTypes.SqlDecimal
      description: "<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 천장 값 계산 하는 데 구조입니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 지정 된 보다 크거나 같은 최소 정수를 나타내는 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
  overload: System.Data.SqlTypes.SqlDecimal.Ceiling*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)
  id: CompareTo(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: CompareTo(SqlDecimal)
  nameWithType: SqlDecimal.CompareTo(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.CompareTo(SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "비교 하 여 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 인스턴스를 제공 된 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 개체와 상대 값의 표시를 반환 합니다."
  syntax:
    content: public int CompareTo (System.Data.SqlTypes.SqlDecimal value);
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlDecimal
      description: "<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 비교 합니다."
    return:
      type: System.Int32
      description: "인스턴스 및 개체의 상대 값을 나타내는 부호 있는 숫자입니다.       <table><thead><tr><th> 반환 값       </th><th> 조건       </th></tr></thead><tbody><tr><td> 0 보다 작음       </td><td> 이 인스턴스를 사용 하는 개체 보다 작습니다.       </td></tr><tr><td> 0       </td><td> 이 인스턴스는 개체와 동일 합니다.       </td></tr><tr><td> 0 보다 큼       </td><td> 이 인스턴스는 개체 또는 개체는 null 참조일 보다 큽니다 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)       </td></tr></tbody></table>"
  overload: System.Data.SqlTypes.SqlDecimal.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: CompareTo(Object)
  nameWithType: SqlDecimal.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlDecimal.CompareTo(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "비교 하 여 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 인스턴스를 제공 된 <xref:System.Object>상대 값의 표시를 반환 합니다.</xref:System.Object>"
  syntax:
    content: public int CompareTo (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>비교 될.</xref:System.Object>"
    return:
      type: System.Int32
      description: "인스턴스 및 개체의 상대 값을 나타내는 부호 있는 숫자입니다.       <table><thead><tr><th> 반환 값       </th><th> 조건       </th></tr></thead><tbody><tr><td> 0 보다 작음       </td><td> 이 인스턴스를 사용 하는 개체 보다 작습니다.       </td></tr><tr><td> 0       </td><td> 이 인스턴스는 개체와 동일 합니다.       </td></tr><tr><td> 0 보다 큼       </td><td> 이 인스턴스는 개체 또는 개체는 null 참조일 보다 큽니다 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)       </td></tr></tbody></table>"
  overload: System.Data.SqlTypes.SqlDecimal.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)
  id: ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: ConvertToPrecScale(SqlDecimal,Int32,Int32)
  nameWithType: SqlDecimal.ConvertToPrecScale(SqlDecimal,Int32,Int32)
  fullName: System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(SqlDecimal,Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "값을 조정 된 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 피연산자 표시 된 자릿수와 소수 자릿수입니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal ConvertToPrecScale (System.Data.SqlTypes.SqlDecimal n, int precision, int scale);
    parameters:
    - id: n
      type: System.Data.SqlTypes.SqlDecimal
      description: "<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조는 값을 조정 합니다."
    - id: precision
      type: System.Int32
      description: "새 전체 자릿수 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    - id: scale
      type: System.Int32
      description: "새 스케일 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "새 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 매개 변수에서 지정 된 구조의 전체 자릿수와 소수 자릿수로 값을 수정 했습니다."
  overload: System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Data
  id: Data
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Data
  nameWithType: SqlDecimal.Data
  fullName: System.Data.SqlTypes.SqlDecimal.Data
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 이진 표현을 가져옵니다 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 정수의 배열 구조입니다."
  syntax:
    content: public int[] Data { get; }
    return:
      type: System.Int32[]
      description: "이 이진 표현을 포함 하는 정수 배열을 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
  overload: System.Data.SqlTypes.SqlDecimal.Data*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Divide(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.Divide(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Divide(SqlDecimal,SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "첫 번째로 나눈 결과 계산 하는 나누기 연산자 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 를 두 번째 피연산자입니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal Divide (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "새 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 갖는 <xref:System.Data.SqlTypes.SqlDecimal.Value*>나누기의 결과 포함 하는 속성.</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.Divide*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SqlDecimal.Equals(Object)
  fullName: System.Data.SqlTypes.SqlDecimal.Equals(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "제공 된 비교 <xref:System.Object>매개 변수를는 <xref:System.Data.SqlTypes.SqlDecimal.Value*>의 속성은 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 인스턴스.</xref:System.Data.SqlTypes.SqlDecimal.Value*> </xref:System.Object>"
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>비교 될.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>개체의 인스턴스 라면 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 두 같은지 합니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.SqlTypes.SqlDecimal.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Equals(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.Equals(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Equals(SqlDecimal,SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두 논리 비교를 수행 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 피연산자가 같은지 여부를 결정 합니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean Equals (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>두 값이 같으면 합니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 인스턴스 중 하나 이면 null이 고, 값은 <xref uid=&quot;langword_csharp_SqlDecimal&quot; name=&quot;SqlDecimal&quot; href=&quot;&quot;> </xref> null이 됩니다."
  overload: System.Data.SqlTypes.SqlDecimal.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)
  id: Floor(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Floor(SqlDecimal)
  nameWithType: SqlDecimal.Floor(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Floor(SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "지정 된 반올림 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 다음 낮은 정수로 숫자입니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal Floor (System.Data.SqlTypes.SqlDecimal n);
    parameters:
    - id: n
      type: System.Data.SqlTypes.SqlDecimal
      description: "<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 바닥 값 계산 하는 데 구조입니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 이의 정수 부분을 포함 하는 구조 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
  overload: System.Data.SqlTypes.SqlDecimal.Floor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.GetHashCode
  id: GetHashCode
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SqlDecimal.GetHashCode()
  fullName: System.Data.SqlTypes.SqlDecimal.GetHashCode()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 인스턴스에 대 한 해시 코드를 반환합니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "부호 있는 32 비트 정수 해시 코드입니다."
  overload: System.Data.SqlTypes.SqlDecimal.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  id: GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlDecimal.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlDecimal.GetXsdType(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "지정 된 XML 스키마 정의 언어 (XSD)를 반환 합니다. <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>합니다."
  syntax:
    content: public static System.Xml.XmlQualifiedName GetXsdType (System.Xml.Schema.XmlSchemaSet schemaSet);
    parameters:
    - id: schemaSet
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;></xref>."
    return:
      type: System.Xml.XmlQualifiedName
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> 의 지정 된 XSD를 나타내는 값 <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>합니다."
  overload: System.Data.SqlTypes.SqlDecimal.GetXsdType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: GreaterThan(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.GreaterThan(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.GreaterThan(SqlDecimal,SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두 개의 논리 비교를 수행 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 첫 번째 두 번째 인스턴스보다 큰지 여부를 결정 하는 구조입니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThan (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 작으면 첫 번째 인스턴스가 두 번째 인스턴스보다 합니다. 그렇지 않으면 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>합니다. 경우 인스턴스 중 하나가 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.SqlTypes.SqlBoolean.Value*>의 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 됩니다 <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: GreaterThanOrEqual(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.GreaterThanOrEqual(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(SqlDecimal,SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두 논리 비교를 수행 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 매개 변수를 두 번째 보다 크거나 같은 경우 첫 번째 적용 되는지 확인 합니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThanOrEqual (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 첫 번째 인스턴스가 두 번째 인스턴스에 보다 크거나 같은 경우입니다. 그렇지 않으면 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>합니다. 경우 인스턴스 중 하나가 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.SqlTypes.SqlBoolean.Value*>의 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 됩니다 <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.IsNull
  id: IsNull
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: IsNull
  nameWithType: SqlDecimal.IsNull
  fullName: System.Data.SqlTypes.SqlDecimal.IsNull
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "표시 여부를이 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조는 null입니다."
  remarks: "자세한 내용은 참조 [Null 값 처리](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 경우 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조는 null입니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.SqlTypes.SqlDecimal.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.IsPositive
  id: IsPositive
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: IsPositive
  nameWithType: SqlDecimal.IsPositive
  fullName: System.Data.SqlTypes.SqlDecimal.IsPositive
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "나타냅니다 여부는 <xref:System.Data.SqlTypes.SqlDecimal.Value*>이 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조는&0; 보다 큰.</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  syntax:
    content: public bool IsPositive { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.Data.SqlTypes.SqlDecimal.Value*>null에 할당 됩니다.</xref:System.Data.SqlTypes.SqlDecimal.Value*> 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.SqlTypes.SqlDecimal.IsPositive*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: LessThan(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.LessThan(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.LessThan(SqlDecimal,SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두 개의 논리 비교를 수행 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조 첫 번째 작은지 여부를 확인 하려면 두 번째 인스턴스보다 합니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThan (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 작으면 첫 번째 인스턴스가 두 번째 인스턴스보다 합니다. 그렇지 않으면 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>합니다. 경우 인스턴스 중 하나가 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.SqlTypes.SqlBoolean.Value*>의 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 됩니다 <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: LessThanOrEqual(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.LessThanOrEqual(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(SqlDecimal,SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두 논리 비교를 수행 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 매개 변수를 첫 번째가 두 번째 보다 작은지 여부를 결정 합니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThanOrEqual (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 첫 번째 인스턴스가 두 번째 인스턴스에 보다 작은 경우. 그렇지 않으면 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>합니다. 경우 인스턴스 중 하나가 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.SqlTypes.SqlBoolean.Value*>의 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 됩니다 <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.MaxPrecision
  id: MaxPrecision
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: MaxPrecision
  nameWithType: SqlDecimal.MaxPrecision
  fullName: System.Data.SqlTypes.SqlDecimal.MaxPrecision
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "에 대 한 가능한 가장 큰 값을 나타내는 상수는 <xref:System.Data.SqlTypes.SqlDecimal.Precision*>속성.</xref:System.Data.SqlTypes.SqlDecimal.Precision*>"
  remarks: "이 상수의 값은 38입니다."
  syntax:
    content: public static readonly byte MaxPrecision;
    return:
      type: System.Byte
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.MaxScale
  id: MaxScale
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: MaxScale
  nameWithType: SqlDecimal.MaxScale
  fullName: System.Data.SqlTypes.SqlDecimal.MaxScale
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "에 대 한 최대값을 나타내는 상수는 <xref:System.Data.SqlTypes.SqlDecimal.Scale*>속성.</xref:System.Data.SqlTypes.SqlDecimal.Scale*>"
  syntax:
    content: public static readonly byte MaxScale;
    return:
      type: System.Byte
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.MaxValue
  id: MaxValue
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: MaxValue
  nameWithType: SqlDecimal.MaxValue
  fullName: System.Data.SqlTypes.SqlDecimal.MaxValue
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "최대값을 나타내는 상수는 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
  remarks: "이 상수 값이 99,999,999,999,999,999,999,999,999,999,999,999,999 합니다."
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlDecimal MaxValue;
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.MinValue
  id: MinValue
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: MinValue
  nameWithType: SqlDecimal.MinValue
  fullName: System.Data.SqlTypes.SqlDecimal.MinValue
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "에 대 한 최소 값을 나타내는 상수는 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
  remarks: "이 상수 값이-99,999,999,999,999,999,999,999,999,999,999,999,999 합니다."
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlDecimal MinValue;
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Multiply(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.Multiply(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Multiply(SqlDecimal,SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "곱하기 연산자는 두의 곱을 계산 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 매개 변수입니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal Multiply (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "새 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 갖는 <xref:System.Data.SqlTypes.SqlDecimal.Value*>속성 곱셈의 제품을 포함 합니다.</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: NotEquals(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.NotEquals(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.NotEquals(SqlDecimal,SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두 논리 비교를 수행 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 같지 않은지 여부를 결정 하는 매개 변수입니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean NotEquals (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 두 인스턴스가 같지 않으면 또는 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 두 인스턴스가 같으면 합니다. 경우 인스턴스 중 하나가 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.SqlTypes.SqlBoolean.Value*>의 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 됩니다 <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.NotEquals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Null
  id: "Null"
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: "Null"
  nameWithType: SqlDecimal.Null
  fullName: System.Data.SqlTypes.SqlDecimal.Null
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "나타냅니다는 <xref href=&quot;System.DBNull&quot;> </xref> 의이 인스턴스에 할당할 수 있는 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>클래스입니다."
  remarks: "자세한 내용은 참조 [Null 값 처리](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlDecimal Null;
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Addition(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_Addition(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Addition(SqlDecimal,SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두의 합계를 계산 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 연산자입니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Addition (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "새 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 갖는 <xref:System.Data.SqlTypes.SqlDecimal.Value*>합계를 포함 하는 속성.</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Division(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_Division(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Division(SqlDecimal,SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "첫 번째로 나눈 결과 계산 하는 나누기 연산자 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 를 두 번째 피연산자입니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Division (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "새 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 갖는 <xref:System.Data.SqlTypes.SqlDecimal.Value*>나누기의 결과 포함 하는 속성.</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.op_Division*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Equality(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_Equality(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Equality(SqlDecimal,SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두 논리 비교를 수행 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 피연산자가 같은지 여부를 결정 합니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Equality (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 두 인스턴스가 같으면 또는 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 두 인스턴스가 같지 않으면 합니다. 경우 인스턴스 중 하나가 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.SqlTypes.SqlBoolean.Value*>의 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 됩니다 <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlDecimal)
  id: op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Explicit(SqlBoolean)
  nameWithType: SqlDecimal.op_Explicit(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Explicit(SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Explicit (System.Data.SqlTypes.SqlBoolean x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "추가할 수 있습니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlDecimal.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Decimal)
  id: op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Decimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Explicit(SqlDecimal)
  nameWithType: SqlDecimal.op_Explicit(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Explicit(SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static decimal op_Explicit (System.Data.SqlTypes.SqlDecimal x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "추가할 수 있습니다."
    return:
      type: System.Decimal
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlDecimal.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlDecimal)
  id: op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Explicit(SqlDouble)
  nameWithType: SqlDecimal.op_Explicit(SqlDouble)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Explicit(SqlDouble)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Explicit (System.Data.SqlTypes.SqlDouble x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDouble
      description: "추가할 수 있습니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlDecimal.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlDecimal)
  id: op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Explicit(SqlSingle)
  nameWithType: SqlDecimal.op_Explicit(SqlSingle)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Explicit(SqlSingle)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Explicit (System.Data.SqlTypes.SqlSingle x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "추가할 수 있습니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlDecimal.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlDecimal)
  id: op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Explicit(SqlString)
  nameWithType: SqlDecimal.op_Explicit(SqlString)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Explicit(SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Explicit (System.Data.SqlTypes.SqlString x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "추가할 수 있습니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlDecimal.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double to System.Data.SqlTypes.SqlDecimal)
  id: op_Explicit(System.Double to System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Explicit(Double)
  nameWithType: SqlDecimal.op_Explicit(Double)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Explicit(Double)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Explicit (double x);
    parameters:
    - id: x
      type: System.Double
      description: "추가할 수 있습니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlDecimal.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_GreaterThan(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_GreaterThan(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_GreaterThan(SqlDecimal,SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두 개의 논리 비교를 수행 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 첫 번째 두 번째 인스턴스보다 큰지 여부를 결정 하는 구조입니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThan (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 작으면 첫 번째 인스턴스가 두 번째 인스턴스보다 합니다. 그렇지 않으면 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>합니다. 경우 인스턴스 중 하나가 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.SqlTypes.SqlBoolean.Value*>의 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 됩니다 <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.op_GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_GreaterThanOrEqual(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_GreaterThanOrEqual(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(SqlDecimal,SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두 논리 비교를 수행 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 매개 변수를 두 번째 보다 크거나 같은 경우 첫 번째 적용 되는지 확인 합니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThanOrEqual (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 첫 번째 인스턴스가 두 번째 인스턴스에 보다 크거나 같은 경우입니다. 그렇지 않으면 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>합니다. 경우 인스턴스 중 하나가 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.SqlTypes.SqlBoolean.Value*>의 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 됩니다 <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)
  id: op_Implicit(System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Implicit(SqlByte)
  nameWithType: SqlDecimal.op_Implicit(SqlByte)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(SqlByte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Implicit (System.Data.SqlTypes.SqlByte x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "추가할 수 있습니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlDecimal.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)
  id: op_Implicit(System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Implicit(SqlInt16)
  nameWithType: SqlDecimal.op_Implicit(SqlInt16)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Implicit (System.Data.SqlTypes.SqlInt16 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "추가할 수 있습니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlDecimal.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)
  id: op_Implicit(System.Data.SqlTypes.SqlInt32)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Implicit(SqlInt32)
  nameWithType: SqlDecimal.op_Implicit(SqlInt32)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(SqlInt32)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Implicit (System.Data.SqlTypes.SqlInt32 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt32
      description: "추가할 수 있습니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlDecimal.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)
  id: op_Implicit(System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Implicit(SqlInt64)
  nameWithType: SqlDecimal.op_Implicit(SqlInt64)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Implicit (System.Data.SqlTypes.SqlInt64 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "추가할 수 있습니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlDecimal.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)
  id: op_Implicit(System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Implicit(SqlMoney)
  nameWithType: SqlDecimal.op_Implicit(SqlMoney)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(SqlMoney)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Implicit (System.Data.SqlTypes.SqlMoney x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "추가할 수 있습니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlDecimal.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)
  id: op_Implicit(System.Decimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Implicit(Decimal)
  nameWithType: SqlDecimal.op_Implicit(Decimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(Decimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Implicit (decimal x);
    parameters:
    - id: x
      type: System.Decimal
      description: "추가할 수 있습니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlDecimal.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)
  id: op_Implicit(System.Int64)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Implicit(Int64)
  nameWithType: SqlDecimal.op_Implicit(Int64)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(Int64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Implicit (long x);
    parameters:
    - id: x
      type: System.Int64
      description: "추가할 수 있습니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlDecimal.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Inequality(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_Inequality(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Inequality(SqlDecimal,SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두 논리 비교를 수행 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 같지 않은지 여부를 결정 하는 매개 변수입니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Inequality (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 두 인스턴스가 같지 않으면 또는 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 두 인스턴스가 같으면 합니다. 경우 인스턴스 중 하나가 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.SqlTypes.SqlBoolean.Value*>의 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 됩니다 <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_LessThan(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_LessThan(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_LessThan(SqlDecimal,SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두 개의 논리 비교를 수행 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조 첫 번째 작은지 여부를 확인 하려면 두 번째 인스턴스보다 합니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThan (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 작으면 첫 번째 인스턴스가 두 번째 인스턴스보다 합니다. 그렇지 않으면 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>합니다. 경우 인스턴스 중 하나가 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.SqlTypes.SqlBoolean.Value*>의 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 됩니다 <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.op_LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_LessThanOrEqual(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_LessThanOrEqual(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(SqlDecimal,SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두 논리 비교를 수행 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 매개 변수를 첫 번째가 두 번째 보다 작은지 여부를 결정 합니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThanOrEqual (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 첫 번째 인스턴스가 두 번째 인스턴스에 보다 작은 경우. 그렇지 않으면 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>합니다. 경우 인스턴스 중 하나가 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.SqlTypes.SqlBoolean.Value*>의 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> 됩니다 <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Multiply(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_Multiply(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Multiply(SqlDecimal,SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "곱하기 연산자는 두의 곱을 계산 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 매개 변수입니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Multiply (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "새 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 갖는 <xref:System.Data.SqlTypes.SqlDecimal.Value*>속성 곱셈의 제품을 포함 합니다.</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_Subtraction(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_Subtraction(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Subtraction(SqlDecimal,SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두 번째를 뺀 결과 계산 하 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 첫 번째에서 피연산자입니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_Subtraction (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "새 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조는 값을 갖는 빼기의 결과 포함 합니다."
  overload: System.Data.SqlTypes.SqlDecimal.op_Subtraction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)
  id: op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: op_UnaryNegation(SqlDecimal)
  nameWithType: SqlDecimal.op_UnaryNegation(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "단항 빼기 연산자를 부정는 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 매개 변수입니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal op_UnaryNegation (System.Data.SqlTypes.SqlDecimal x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조를 무효화 합니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "새 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조 값의 부정의 결과 포함 합니다."
  overload: System.Data.SqlTypes.SqlDecimal.op_UnaryNegation*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Parse(System.String)
  id: Parse(System.String)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Parse(String)
  nameWithType: SqlDecimal.Parse(String)
  fullName: System.Data.SqlTypes.SqlDecimal.Parse(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "변환 된 <xref:System.String>를 숫자의 해당 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 해당.</xref:System.String>"
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal Parse (string s);
    parameters:
    - id: s
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> 구문 분석할 수 있습니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 지정된 <xref:System.String>.</xref:System.String> 에 포함 된 값과 동일"
  overload: System.Data.SqlTypes.SqlDecimal.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)
  id: Power(System.Data.SqlTypes.SqlDecimal,System.Double)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Power(SqlDecimal,Double)
  nameWithType: SqlDecimal.Power(SqlDecimal,Double)
  fullName: System.Data.SqlTypes.SqlDecimal.Power(SqlDecimal,Double)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "지정 된 값 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 지정 된 지 수의 승수로 구조입니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal Power (System.Data.SqlTypes.SqlDecimal n, double exp);
    parameters:
    - id: n
      type: System.Data.SqlTypes.SqlDecimal
      description: "<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조를 거듭 제곱 합니다."
    - id: exp
      type: System.Double
      description: "수는 발생 거듭제곱을 나타내는 double 값입니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 결과 포함 하는 구조입니다."
  overload: System.Data.SqlTypes.SqlDecimal.Power*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Precision
  id: Precision
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Precision
  nameWithType: SqlDecimal.Precision
  fullName: System.Data.SqlTypes.SqlDecimal.Precision
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "나타내는 데 사용 되는 최대 자릿수를 가져옵니다는 <xref:System.Data.SqlTypes.SqlDecimal.Value*>속성.</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  syntax:
    content: public byte Precision { get; }
    return:
      type: System.Byte
      description: "나타내는 데 사용 하는 최대 자릿수는 <xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;> </xref> 이 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
  overload: System.Data.SqlTypes.SqlDecimal.Precision*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)
  id: Round(System.Data.SqlTypes.SqlDecimal,System.Int32)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Round(SqlDecimal,Int32)
  nameWithType: SqlDecimal.Round(SqlDecimal,Int32)
  fullName: System.Data.SqlTypes.SqlDecimal.Round(SqlDecimal,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "지정 된 가장 가까운 숫자 가져옵니다 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 지정한 전체 자릿수를 사용 하 여 구조체의 값입니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal Round (System.Data.SqlTypes.SqlDecimal n, int position);
    parameters:
    - id: n
      type: System.Data.SqlTypes.SqlDecimal
      description: "<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 반올림 되는 구조입니다."
    - id: position
      type: System.Int32
      description: "반환 값에 유효한 소수 자릿수 (전체 자릿수)의 수입니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 반올림 연산 결과 포함 하는 구조입니다."
  overload: System.Data.SqlTypes.SqlDecimal.Round*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Scale
  id: Scale
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Scale
  nameWithType: SqlDecimal.Scale
  fullName: System.Data.SqlTypes.SqlDecimal.Scale
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "소수 자릿수는 가져옵니다 <xref:System.Data.SqlTypes.SqlDecimal.Value*>확인 됩니다.</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  syntax:
    content: public byte Scale { get; }
    return:
      type: System.Byte
      description: "에 소수 자릿수는 <xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;> </xref> 속성은 해결 합니다."
  overload: System.Data.SqlTypes.SqlDecimal.Scale*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)
  id: Sign(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Sign(SqlDecimal)
  nameWithType: SqlDecimal.Sign(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Sign(SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "부호를 나타내는 값을 가져옵니다는 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조체의 <xref:System.Data.SqlTypes.SqlDecimal.Value*>속성.</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  syntax:
    content: public static System.Data.SqlTypes.SqlInt32 Sign (System.Data.SqlTypes.SqlDecimal n);
    parameters:
    - id: n
      type: System.Data.SqlTypes.SqlDecimal
      description: "<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 평가할 기호가 구조입니다."
    return:
      type: System.Data.SqlTypes.SqlInt32
      description: "부호를 나타내는 숫자는 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
  overload: System.Data.SqlTypes.SqlDecimal.Sign*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  id: Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Subtract(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.Subtract(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Subtract(SqlDecimal,SqlDecimal)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "두 번째를 뺀 결과 계산 하 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 첫 번째에서 피연산자입니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal Subtract (System.Data.SqlTypes.SqlDecimal x, System.Data.SqlTypes.SqlDecimal y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    - id: y
      type: System.Data.SqlTypes.SqlDecimal
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "새 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조는 값을 갖는 빼기의 결과 포함 합니다."
  overload: System.Data.SqlTypes.SqlDecimal.Subtract*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#GetSchema
  id: System#Xml#Serialization#IXmlSerializable#GetSchema
  isEii: true
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlDecimal.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlDecimal.System.Xml.Serialization.IXmlSerializable.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 멤버는.NET Framework 인프라를 지원 하며 사용자 코드에서 직접 사용할 수 없습니다."
  syntax:
    content: System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchema
      description: "An <xref uid=&quot;langword_csharp_XmlSchema&quot; name=&quot;XmlSchema&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  id: System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  isEii: true
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlDecimal.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlDecimal.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 멤버는.NET Framework 인프라를 지원 하며 사용자 코드에서 직접 사용할 수 없습니다."
  syntax:
    content: void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: <xref uid="langword_csharp_XmlReader " name="XmlReader " href=""></xref>
  overload: System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#ReadXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  id: System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  isEii: true
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlDecimal.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlDecimal.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 멤버는.NET Framework 인프라를 지원 하며 사용자 코드에서 직접 사용할 수 없습니다."
  syntax:
    content: void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: <xref uid="langword_csharp_XmlWriter " name="XmlWriter " href=""></xref>
  overload: System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#WriteXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.ToDouble
  id: ToDouble
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: ToDouble()
  nameWithType: SqlDecimal.ToDouble()
  fullName: System.Data.SqlTypes.SqlDecimal.ToDouble()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "반환 된 내용에 이중 등호는 <xref:System.Data.SqlTypes.SqlDecimal.Value*>이 인스턴스의 속성.</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  syntax:
    content: public double ToDouble ();
    parameters: []
    return:
      type: System.Double
      description: "10 진수 표현을 <xref:System.Data.SqlTypes.SqlDecimal.Value*>속성.</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.ToDouble*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlBoolean
  id: ToSqlBoolean
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: ToSqlBoolean()
  nameWithType: SqlDecimal.ToSqlBoolean()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlBoolean()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 변환 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조체 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>합니다."
  syntax:
    content: public System.Data.SqlTypes.SqlBoolean ToSqlBoolean ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref><xref:System.Data.SqlTypes.SqlDecimal.Value*>0이 아닌; 이면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 경우&0;, 그렇지 않으면 Null입니다.</xref:System.Data.SqlTypes.SqlDecimal.Value*>"
  overload: System.Data.SqlTypes.SqlDecimal.ToSqlBoolean*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlByte
  id: ToSqlByte
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: ToSqlByte()
  nameWithType: SqlDecimal.ToSqlByte()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlByte()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 변환 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조체 <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>합니다."
  syntax:
    content: public System.Data.SqlTypes.SqlByte ToSqlByte ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref> 갖는 <xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;> </xref> equals는 <xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;> </xref> 이 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다. 경우는 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조체의 값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref> 구조체의 <xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;> </xref> 1이 됩니다. 그렇지 않은 경우는 <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref> 구조체의 <xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;> </xref> 0이 됩니다."
  overload: System.Data.SqlTypes.SqlDecimal.ToSqlByte*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlDouble
  id: ToSqlDouble
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: ToSqlDouble()
  nameWithType: SqlDecimal.ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlDouble()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 변환 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조체 <xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref>합니다."
  syntax:
    content: public System.Data.SqlTypes.SqlDouble ToSqlDouble ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlDouble
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref> 의이 인스턴스와 같은 값을 갖는 구조 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>합니다."
  overload: System.Data.SqlTypes.SqlDecimal.ToSqlDouble*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlInt16
  id: ToSqlInt16
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: ToSqlInt16()
  nameWithType: SqlDecimal.ToSqlInt16()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlInt16()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 변환 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조체 <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>합니다."
  syntax:
    content: public System.Data.SqlTypes.SqlInt16 ToSqlInt16 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref> 의이 인스턴스와 같은 값을 갖는 구조 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>합니다."
  overload: System.Data.SqlTypes.SqlDecimal.ToSqlInt16*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlInt32
  id: ToSqlInt32
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: ToSqlInt32()
  nameWithType: SqlDecimal.ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlInt32()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 변환 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조체 <xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;> </xref>합니다."
  syntax:
    content: public System.Data.SqlTypes.SqlInt32 ToSqlInt32 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt32
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;> </xref> 의이 인스턴스와 같은 값을 갖는 구조 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>합니다."
  overload: System.Data.SqlTypes.SqlDecimal.ToSqlInt32*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlInt64
  id: ToSqlInt64
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: ToSqlInt64()
  nameWithType: SqlDecimal.ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlInt64()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 변환 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조체 <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref>합니다."
  syntax:
    content: public System.Data.SqlTypes.SqlInt64 ToSqlInt64 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> 의이 인스턴스와 같은 값을 갖는 구조 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>합니다."
  overload: System.Data.SqlTypes.SqlDecimal.ToSqlInt64*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlMoney
  id: ToSqlMoney
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: ToSqlMoney()
  nameWithType: SqlDecimal.ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlMoney()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 변환 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조체 <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref>합니다."
  syntax:
    content: public System.Data.SqlTypes.SqlMoney ToSqlMoney ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> 의이 인스턴스와 같은 값을 갖는 구조 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>합니다."
  overload: System.Data.SqlTypes.SqlDecimal.ToSqlMoney*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlSingle
  id: ToSqlSingle
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: ToSqlSingle()
  nameWithType: SqlDecimal.ToSqlSingle()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlSingle()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 변환 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조체 <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref>합니다."
  syntax:
    content: public System.Data.SqlTypes.SqlSingle ToSqlSingle ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> 의이 인스턴스와 같은 값을 갖는 구조 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>합니다."
  overload: System.Data.SqlTypes.SqlDecimal.ToSqlSingle*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlString
  id: ToSqlString
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: ToSqlString()
  nameWithType: SqlDecimal.ToSqlString()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 변환 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조체 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>합니다."
  syntax:
    content: public System.Data.SqlTypes.SqlString ToSqlString ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 값은 문자열 값을 나타내는이에 포함 된 구조체 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다."
  overload: System.Data.SqlTypes.SqlDecimal.ToSqlString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.ToString
  id: ToString
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: ToString()
  nameWithType: SqlDecimal.ToString()
  fullName: System.Data.SqlTypes.SqlDecimal.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 변환 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> <xref:System.String>.</xref:System.String> 구조"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "새 <xref:System.String>개체의 문자열 표현을 포함 하는 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조체의 <xref:System.Data.SqlTypes.SqlDecimal.Value*>속성.</xref:System.Data.SqlTypes.SqlDecimal.Value*> </xref:System.String>"
  overload: System.Data.SqlTypes.SqlDecimal.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)
  id: Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Truncate(SqlDecimal,Int32)
  nameWithType: SqlDecimal.Truncate(SqlDecimal,Int32)
  fullName: System.Data.SqlTypes.SqlDecimal.Truncate(SqlDecimal,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "지정 된 자릅니다 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조체의 값을 해당 위치를 선택 합니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlDecimal Truncate (System.Data.SqlTypes.SqlDecimal n, int position);
    parameters:
    - id: n
      type: System.Data.SqlTypes.SqlDecimal
      description: "<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조 잘릴 수 있습니다."
    - id: position
      type: System.Int32
      description: "10 진수 위치 수 잘릴 수입니다."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "에 대 한 음수 값을 제공 된 <code> position </code> 매개 변수 값을 소수점의 왼쪽에 해당 위치에 버립니다."
  overload: System.Data.SqlTypes.SqlDecimal.Truncate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlDecimal.Value
  id: Value
  parent: System.Data.SqlTypes.SqlDecimal
  langs:
  - csharp
  name: Value
  nameWithType: SqlDecimal.Value
  fullName: System.Data.SqlTypes.SqlDecimal.Value
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "값을 가져옵니다는 <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> 구조입니다. 이 속성은 읽기 전용입니다."
  syntax:
    content: public decimal Value { get; }
    return:
      type: System.Decimal
      description: "79228162514162514264337593543950335 통해 범위의 수입니다."
  overload: System.Data.SqlTypes.SqlDecimal.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: SqlDecimal(Decimal)
  nameWithType: SqlDecimal.SqlDecimal(Decimal)
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(Decimal)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: SqlDecimal(Double)
  nameWithType: SqlDecimal.SqlDecimal(Double)
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: SqlDecimal(Int32)
  nameWithType: SqlDecimal.SqlDecimal(Int32)
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: SqlDecimal(Int64)
  nameWithType: SqlDecimal.SqlDecimal(Int64)
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: SqlDecimal(Byte,Byte,Boolean,Int32[])
  nameWithType: SqlDecimal.SqlDecimal(Byte,Byte,Boolean,Int32[])
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(Byte,Byte,Boolean,Int32[])
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: SqlDecimal(Byte,Byte,Boolean,Int32,Int32,Int32,Int32)
  nameWithType: SqlDecimal.SqlDecimal(Byte,Byte,Boolean,Int32,Int32,Int32,Int32)
  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(Byte,Byte,Boolean,Int32,Int32,Int32,Int32)
- uid: System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Abs(SqlDecimal)
  nameWithType: SqlDecimal.Abs(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Abs(SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDecimal
  nameWithType: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
- uid: System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Add(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.Add(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Add(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: AdjustScale(SqlDecimal,Int32,Boolean)
  nameWithType: SqlDecimal.AdjustScale(SqlDecimal,Int32,Boolean)
  fullName: System.Data.SqlTypes.SqlDecimal.AdjustScale(SqlDecimal,Int32,Boolean)
- uid: System.Data.SqlTypes.SqlDecimal.BinData
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: BinData
  nameWithType: SqlDecimal.BinData
  fullName: System.Data.SqlTypes.SqlDecimal.BinData
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Ceiling(SqlDecimal)
  nameWithType: SqlDecimal.Ceiling(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Ceiling(SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: CompareTo(SqlDecimal)
  nameWithType: SqlDecimal.CompareTo(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.CompareTo(SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: CompareTo(Object)
  nameWithType: SqlDecimal.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlDecimal.CompareTo(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ConvertToPrecScale(SqlDecimal,Int32,Int32)
  nameWithType: SqlDecimal.ConvertToPrecScale(SqlDecimal,Int32,Int32)
  fullName: System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(SqlDecimal,Int32,Int32)
- uid: System.Data.SqlTypes.SqlDecimal.Data
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Data
  nameWithType: SqlDecimal.Data
  fullName: System.Data.SqlTypes.SqlDecimal.Data
- uid: System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Divide(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.Divide(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Divide(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.Equals(System.Object)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Equals(Object)
  nameWithType: SqlDecimal.Equals(Object)
  fullName: System.Data.SqlTypes.SqlDecimal.Equals(Object)
- uid: System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Equals(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.Equals(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Equals(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBoolean
  nameWithType: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
- uid: System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Floor(SqlDecimal)
  nameWithType: SqlDecimal.Floor(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Floor(SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.GetHashCode
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: GetHashCode()
  nameWithType: SqlDecimal.GetHashCode()
  fullName: System.Data.SqlTypes.SqlDecimal.GetHashCode()
- uid: System.Data.SqlTypes.SqlDecimal.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlDecimal.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlDecimal.GetXsdType(XmlSchemaSet)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: GreaterThan(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.GreaterThan(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.GreaterThan(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: GreaterThanOrEqual(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.GreaterThanOrEqual(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.IsNull
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: IsNull
  nameWithType: SqlDecimal.IsNull
  fullName: System.Data.SqlTypes.SqlDecimal.IsNull
- uid: System.Data.SqlTypes.SqlDecimal.IsPositive
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: IsPositive
  nameWithType: SqlDecimal.IsPositive
  fullName: System.Data.SqlTypes.SqlDecimal.IsPositive
- uid: System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: LessThan(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.LessThan(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.LessThan(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: LessThanOrEqual(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.LessThanOrEqual(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.MaxPrecision
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: MaxPrecision
  nameWithType: SqlDecimal.MaxPrecision
  fullName: System.Data.SqlTypes.SqlDecimal.MaxPrecision
- uid: System.Data.SqlTypes.SqlDecimal.MaxScale
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: MaxScale
  nameWithType: SqlDecimal.MaxScale
  fullName: System.Data.SqlTypes.SqlDecimal.MaxScale
- uid: System.Data.SqlTypes.SqlDecimal.MaxValue
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: MaxValue
  nameWithType: SqlDecimal.MaxValue
  fullName: System.Data.SqlTypes.SqlDecimal.MaxValue
- uid: System.Data.SqlTypes.SqlDecimal.MinValue
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: MinValue
  nameWithType: SqlDecimal.MinValue
  fullName: System.Data.SqlTypes.SqlDecimal.MinValue
- uid: System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Multiply(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.Multiply(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Multiply(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: NotEquals(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.NotEquals(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.NotEquals(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.Null
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: "Null"
  nameWithType: SqlDecimal.Null
  fullName: System.Data.SqlTypes.SqlDecimal.Null
- uid: System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Addition(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_Addition(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Addition(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Division(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_Division(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Division(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Equality(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_Equality(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Equality(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Explicit(SqlBoolean)
  nameWithType: SqlDecimal.op_Explicit(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Explicit(SqlBoolean)
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Decimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Explicit(SqlDecimal)
  nameWithType: SqlDecimal.op_Explicit(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Explicit(SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Explicit(SqlDouble)
  nameWithType: SqlDecimal.op_Explicit(SqlDouble)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Explicit(SqlDouble)
- uid: System.Data.SqlTypes.SqlDouble
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDouble
  nameWithType: SqlDouble
  fullName: System.Data.SqlTypes.SqlDouble
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Explicit(SqlSingle)
  nameWithType: SqlDecimal.op_Explicit(SqlSingle)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Explicit(SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlSingle
  nameWithType: SqlSingle
  fullName: System.Data.SqlTypes.SqlSingle
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Explicit(SqlString)
  nameWithType: SqlDecimal.op_Explicit(SqlString)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Explicit(SqlString)
- uid: System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlString
  nameWithType: SqlString
  fullName: System.Data.SqlTypes.SqlString
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double to System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Explicit(Double)
  nameWithType: SqlDecimal.op_Explicit(Double)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Explicit(Double)
- uid: System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_GreaterThan(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_GreaterThan(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_GreaterThan(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_GreaterThanOrEqual(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_GreaterThanOrEqual(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Implicit(SqlByte)
  nameWithType: SqlDecimal.op_Implicit(SqlByte)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(SqlByte)
- uid: System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlByte
  nameWithType: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Implicit(SqlInt16)
  nameWithType: SqlDecimal.op_Implicit(SqlInt16)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt16
  nameWithType: SqlInt16
  fullName: System.Data.SqlTypes.SqlInt16
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Implicit(SqlInt32)
  nameWithType: SqlDecimal.op_Implicit(SqlInt32)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(SqlInt32)
- uid: System.Data.SqlTypes.SqlInt32
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt32
  nameWithType: SqlInt32
  fullName: System.Data.SqlTypes.SqlInt32
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Implicit(SqlInt64)
  nameWithType: SqlDecimal.op_Implicit(SqlInt64)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt64
  nameWithType: SqlInt64
  fullName: System.Data.SqlTypes.SqlInt64
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Implicit(SqlMoney)
  nameWithType: SqlDecimal.op_Implicit(SqlMoney)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlMoney
  nameWithType: SqlMoney
  fullName: System.Data.SqlTypes.SqlMoney
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Implicit(Decimal)
  nameWithType: SqlDecimal.op_Implicit(Decimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(Decimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Implicit(Int64)
  nameWithType: SqlDecimal.op_Implicit(Int64)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Implicit(Int64)
- uid: System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Inequality(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_Inequality(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Inequality(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_LessThan(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_LessThan(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_LessThan(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_LessThanOrEqual(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_LessThanOrEqual(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Multiply(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_Multiply(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Multiply(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Subtraction(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.op_Subtraction(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_Subtraction(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_UnaryNegation(SqlDecimal)
  nameWithType: SqlDecimal.op_UnaryNegation(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.Parse(System.String)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Parse(String)
  nameWithType: SqlDecimal.Parse(String)
  fullName: System.Data.SqlTypes.SqlDecimal.Parse(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Power(SqlDecimal,Double)
  nameWithType: SqlDecimal.Power(SqlDecimal,Double)
  fullName: System.Data.SqlTypes.SqlDecimal.Power(SqlDecimal,Double)
- uid: System.Data.SqlTypes.SqlDecimal.Precision
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Precision
  nameWithType: SqlDecimal.Precision
  fullName: System.Data.SqlTypes.SqlDecimal.Precision
- uid: System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Round(SqlDecimal,Int32)
  nameWithType: SqlDecimal.Round(SqlDecimal,Int32)
  fullName: System.Data.SqlTypes.SqlDecimal.Round(SqlDecimal,Int32)
- uid: System.Data.SqlTypes.SqlDecimal.Scale
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Scale
  nameWithType: SqlDecimal.Scale
  fullName: System.Data.SqlTypes.SqlDecimal.Scale
- uid: System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Sign(SqlDecimal)
  nameWithType: SqlDecimal.Sign(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Sign(SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Subtract(SqlDecimal,SqlDecimal)
  nameWithType: SqlDecimal.Subtract(SqlDecimal,SqlDecimal)
  fullName: System.Data.SqlTypes.SqlDecimal.Subtract(SqlDecimal,SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#GetSchema
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlDecimal.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlDecimal.System.Xml.Serialization.IXmlSerializable.GetSchema()
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlDecimal.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlDecimal.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlDecimal.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlDecimal.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Data.SqlTypes.SqlDecimal.ToDouble
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToDouble()
  nameWithType: SqlDecimal.ToDouble()
  fullName: System.Data.SqlTypes.SqlDecimal.ToDouble()
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlBoolean
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlBoolean()
  nameWithType: SqlDecimal.ToSqlBoolean()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlBoolean()
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlByte
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlByte()
  nameWithType: SqlDecimal.ToSqlByte()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlByte()
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlDouble
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlDouble()
  nameWithType: SqlDecimal.ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlDouble()
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlInt16
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlInt16()
  nameWithType: SqlDecimal.ToSqlInt16()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlInt16()
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlInt32
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlInt32()
  nameWithType: SqlDecimal.ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlInt32()
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlInt64
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlInt64()
  nameWithType: SqlDecimal.ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlInt64()
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlMoney
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlMoney()
  nameWithType: SqlDecimal.ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlMoney()
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlSingle
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlSingle()
  nameWithType: SqlDecimal.ToSqlSingle()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlSingle()
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlString
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlString()
  nameWithType: SqlDecimal.ToSqlString()
  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlString()
- uid: System.Data.SqlTypes.SqlDecimal.ToString
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToString()
  nameWithType: SqlDecimal.ToString()
  fullName: System.Data.SqlTypes.SqlDecimal.ToString()
- uid: System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Truncate(SqlDecimal,Int32)
  nameWithType: SqlDecimal.Truncate(SqlDecimal,Int32)
  fullName: System.Data.SqlTypes.SqlDecimal.Truncate(SqlDecimal,Int32)
- uid: System.Data.SqlTypes.SqlDecimal.Value
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Value
  nameWithType: SqlDecimal.Value
  fullName: System.Data.SqlTypes.SqlDecimal.Value
- uid: System.Data.SqlTypes.SqlDecimal.#ctor*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: SqlDecimal
  nameWithType: SqlDecimal.SqlDecimal
- uid: System.Data.SqlTypes.SqlDecimal.Abs*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Abs
  nameWithType: SqlDecimal.Abs
- uid: System.Data.SqlTypes.SqlDecimal.Add*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Add
  nameWithType: SqlDecimal.Add
- uid: System.Data.SqlTypes.SqlDecimal.AdjustScale*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: AdjustScale
  nameWithType: SqlDecimal.AdjustScale
- uid: System.Data.SqlTypes.SqlDecimal.BinData*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: BinData
  nameWithType: SqlDecimal.BinData
- uid: System.Data.SqlTypes.SqlDecimal.Ceiling*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Ceiling
  nameWithType: SqlDecimal.Ceiling
- uid: System.Data.SqlTypes.SqlDecimal.CompareTo*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: CompareTo
  nameWithType: SqlDecimal.CompareTo
- uid: System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ConvertToPrecScale
  nameWithType: SqlDecimal.ConvertToPrecScale
- uid: System.Data.SqlTypes.SqlDecimal.Data*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Data
  nameWithType: SqlDecimal.Data
- uid: System.Data.SqlTypes.SqlDecimal.Divide*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Divide
  nameWithType: SqlDecimal.Divide
- uid: System.Data.SqlTypes.SqlDecimal.Equals*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Equals
  nameWithType: SqlDecimal.Equals
- uid: System.Data.SqlTypes.SqlDecimal.Floor*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Floor
  nameWithType: SqlDecimal.Floor
- uid: System.Data.SqlTypes.SqlDecimal.GetHashCode*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: GetHashCode
  nameWithType: SqlDecimal.GetHashCode
- uid: System.Data.SqlTypes.SqlDecimal.GetXsdType*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: GetXsdType
  nameWithType: SqlDecimal.GetXsdType
- uid: System.Data.SqlTypes.SqlDecimal.GreaterThan*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: GreaterThan
  nameWithType: SqlDecimal.GreaterThan
- uid: System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: GreaterThanOrEqual
  nameWithType: SqlDecimal.GreaterThanOrEqual
- uid: System.Data.SqlTypes.SqlDecimal.IsNull*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: IsNull
  nameWithType: SqlDecimal.IsNull
- uid: System.Data.SqlTypes.SqlDecimal.IsPositive*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: IsPositive
  nameWithType: SqlDecimal.IsPositive
- uid: System.Data.SqlTypes.SqlDecimal.LessThan*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: LessThan
  nameWithType: SqlDecimal.LessThan
- uid: System.Data.SqlTypes.SqlDecimal.LessThanOrEqual*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: LessThanOrEqual
  nameWithType: SqlDecimal.LessThanOrEqual
- uid: System.Data.SqlTypes.SqlDecimal.Multiply*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Multiply
  nameWithType: SqlDecimal.Multiply
- uid: System.Data.SqlTypes.SqlDecimal.NotEquals*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: NotEquals
  nameWithType: SqlDecimal.NotEquals
- uid: System.Data.SqlTypes.SqlDecimal.op_Addition*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Addition
  nameWithType: SqlDecimal.op_Addition
- uid: System.Data.SqlTypes.SqlDecimal.op_Division*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Division
  nameWithType: SqlDecimal.op_Division
- uid: System.Data.SqlTypes.SqlDecimal.op_Equality*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Equality
  nameWithType: SqlDecimal.op_Equality
- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Explicit
  nameWithType: SqlDecimal.op_Explicit
- uid: System.Data.SqlTypes.SqlDecimal.op_GreaterThan*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_GreaterThan
  nameWithType: SqlDecimal.op_GreaterThan
- uid: System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_GreaterThanOrEqual
  nameWithType: SqlDecimal.op_GreaterThanOrEqual
- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Implicit
  nameWithType: SqlDecimal.op_Implicit
- uid: System.Data.SqlTypes.SqlDecimal.op_Inequality*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Inequality
  nameWithType: SqlDecimal.op_Inequality
- uid: System.Data.SqlTypes.SqlDecimal.op_LessThan*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_LessThan
  nameWithType: SqlDecimal.op_LessThan
- uid: System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_LessThanOrEqual
  nameWithType: SqlDecimal.op_LessThanOrEqual
- uid: System.Data.SqlTypes.SqlDecimal.op_Multiply*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Multiply
  nameWithType: SqlDecimal.op_Multiply
- uid: System.Data.SqlTypes.SqlDecimal.op_Subtraction*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_Subtraction
  nameWithType: SqlDecimal.op_Subtraction
- uid: System.Data.SqlTypes.SqlDecimal.op_UnaryNegation*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: op_UnaryNegation
  nameWithType: SqlDecimal.op_UnaryNegation
- uid: System.Data.SqlTypes.SqlDecimal.Parse*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Parse
  nameWithType: SqlDecimal.Parse
- uid: System.Data.SqlTypes.SqlDecimal.Power*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Power
  nameWithType: SqlDecimal.Power
- uid: System.Data.SqlTypes.SqlDecimal.Precision*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Precision
  nameWithType: SqlDecimal.Precision
- uid: System.Data.SqlTypes.SqlDecimal.Round*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Round
  nameWithType: SqlDecimal.Round
- uid: System.Data.SqlTypes.SqlDecimal.Scale*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Scale
  nameWithType: SqlDecimal.Scale
- uid: System.Data.SqlTypes.SqlDecimal.Sign*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Sign
  nameWithType: SqlDecimal.Sign
- uid: System.Data.SqlTypes.SqlDecimal.Subtract*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Subtract
  nameWithType: SqlDecimal.Subtract
- uid: System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#GetSchema*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema
  nameWithType: SqlDecimal.System.Xml.Serialization.IXmlSerializable.GetSchema
- uid: System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#ReadXml*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml
  nameWithType: SqlDecimal.System.Xml.Serialization.IXmlSerializable.ReadXml
- uid: System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#WriteXml*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml
  nameWithType: SqlDecimal.System.Xml.Serialization.IXmlSerializable.WriteXml
- uid: System.Data.SqlTypes.SqlDecimal.ToDouble*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToDouble
  nameWithType: SqlDecimal.ToDouble
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlBoolean*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlBoolean
  nameWithType: SqlDecimal.ToSqlBoolean
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlByte*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlByte
  nameWithType: SqlDecimal.ToSqlByte
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlDouble*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlDouble
  nameWithType: SqlDecimal.ToSqlDouble
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlInt16*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlInt16
  nameWithType: SqlDecimal.ToSqlInt16
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlInt32*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlInt32
  nameWithType: SqlDecimal.ToSqlInt32
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlInt64*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlInt64
  nameWithType: SqlDecimal.ToSqlInt64
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlMoney*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlMoney
  nameWithType: SqlDecimal.ToSqlMoney
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlSingle*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlSingle
  nameWithType: SqlDecimal.ToSqlSingle
- uid: System.Data.SqlTypes.SqlDecimal.ToSqlString*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToSqlString
  nameWithType: SqlDecimal.ToSqlString
- uid: System.Data.SqlTypes.SqlDecimal.ToString*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: ToString
  nameWithType: SqlDecimal.ToString
- uid: System.Data.SqlTypes.SqlDecimal.Truncate*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Truncate
  nameWithType: SqlDecimal.Truncate
- uid: System.Data.SqlTypes.SqlDecimal.Value*
  parent: System.Data.SqlTypes.SqlDecimal
  isExternal: false
  name: Value
  nameWithType: SqlDecimal.Value
