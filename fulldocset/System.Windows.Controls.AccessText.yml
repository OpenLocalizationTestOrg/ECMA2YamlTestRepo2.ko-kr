### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.AccessText
  id: AccessText
  children:
  - System.Windows.Controls.AccessText.#ctor
  - System.Windows.Controls.AccessText.AccessKey
  - System.Windows.Controls.AccessText.ArrangeOverride(System.Windows.Size)
  - System.Windows.Controls.AccessText.Background
  - System.Windows.Controls.AccessText.BackgroundProperty
  - System.Windows.Controls.AccessText.BaselineOffset
  - System.Windows.Controls.AccessText.BaselineOffsetProperty
  - System.Windows.Controls.AccessText.FontFamily
  - System.Windows.Controls.AccessText.FontFamilyProperty
  - System.Windows.Controls.AccessText.FontSize
  - System.Windows.Controls.AccessText.FontSizeProperty
  - System.Windows.Controls.AccessText.FontStretch
  - System.Windows.Controls.AccessText.FontStretchProperty
  - System.Windows.Controls.AccessText.FontStyle
  - System.Windows.Controls.AccessText.FontStyleProperty
  - System.Windows.Controls.AccessText.FontWeight
  - System.Windows.Controls.AccessText.FontWeightProperty
  - System.Windows.Controls.AccessText.Foreground
  - System.Windows.Controls.AccessText.ForegroundProperty
  - System.Windows.Controls.AccessText.GetVisualChild(System.Int32)
  - System.Windows.Controls.AccessText.LineHeight
  - System.Windows.Controls.AccessText.LineHeightProperty
  - System.Windows.Controls.AccessText.LineStackingStrategy
  - System.Windows.Controls.AccessText.LineStackingStrategyProperty
  - System.Windows.Controls.AccessText.LogicalChildren
  - System.Windows.Controls.AccessText.MeasureOverride(System.Windows.Size)
  - System.Windows.Controls.AccessText.System#Windows#Markup#IAddChild#AddChild(System.Object)
  - System.Windows.Controls.AccessText.System#Windows#Markup#IAddChild#AddText(System.String)
  - System.Windows.Controls.AccessText.Text
  - System.Windows.Controls.AccessText.TextAlignment
  - System.Windows.Controls.AccessText.TextAlignmentProperty
  - System.Windows.Controls.AccessText.TextDecorations
  - System.Windows.Controls.AccessText.TextDecorationsProperty
  - System.Windows.Controls.AccessText.TextEffects
  - System.Windows.Controls.AccessText.TextEffectsProperty
  - System.Windows.Controls.AccessText.TextProperty
  - System.Windows.Controls.AccessText.TextTrimming
  - System.Windows.Controls.AccessText.TextTrimmingProperty
  - System.Windows.Controls.AccessText.TextWrapping
  - System.Windows.Controls.AccessText.TextWrappingProperty
  - System.Windows.Controls.AccessText.VisualChildrenCount
  langs:
  - csharp
  name: AccessText
  nameWithType: AccessText
  fullName: System.Windows.Controls.AccessText
  type: Class
  summary: "선택 키로 사용 되는 문자는 밑줄으로 지정 합니다."
  remarks: "콘텐츠는 여러 밑줄 문자를 첫 번째 항목만으로 변환 되는 <xref:System.Windows.Controls.AccessText.AccessKey%2A>; 다른 밑줄 일반 텍스트로 표시 합니다.</xref:System.Windows.Controls.AccessText.AccessKey%2A> 액세스 키로 변환 하는 것이 원하는 밑줄 첫 번째 밑줄이 없는 경우 변환 하려는 것을 앞에 오는 밑줄에 대 한 두 개의 밑줄을 사용 합니다. 다음 코드 선택 키를 포함 하 고 _Hello로 표시 하는 예를 들어**W**됩니다: ```   <AccessText>__Hello_World</AccessText>    ``` W 키 선택 키로 등록 H 앞에 밑줄 double 이기 때문에 있습니다.       AccessText 스타일의 콘텐츠를 호스트를 사용 하려면 설정 <xref:System.Windows.Controls.ContentPresenter.RecognizesAccessKey%2A>에 <xref:System.Windows.Controls.ContentPresenter>이 예제와 같이: ```   <ContentPresenter RecognizesAccessKey=&quot;True&quot;/>    ``` </xref:System.Windows.Controls.ContentPresenter> </xref:System.Windows.Controls.ContentPresenter.RecognizesAccessKey%2A>"
  example:
  - "You can use the AccessText tag to create an <xref:System.Windows.Controls.AccessText.AccessKey%2A>; however, a tag is not necessary. The following example shows how to create an access key with and without the AccessText tag.  \n  \n [!code-xml[AccessText#2](~/add/codesnippet/xaml/AccessText.accesstext/pane1.xaml#2)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Text")]

      public class AccessText : System.Windows.FrameworkElement, System.Windows.Markup.IAddChild
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Media.Visual
  - System.Windows.UIElement
  - System.Windows.FrameworkElement
  implements:
  - System.Windows.Markup.IAddChild
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.FrameworkElement.ActualHeight
  - System.Windows.FrameworkElement.ActualHeightProperty
  - System.Windows.FrameworkElement.ActualWidth
  - System.Windows.FrameworkElement.ActualWidthProperty
  - System.Windows.FrameworkElement.AddLogicalChild(System.Object)
  - System.Windows.FrameworkElement.ApplyTemplate
  - System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)
  - System.Windows.FrameworkElement.BeginInit
  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)
  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)
  - System.Windows.FrameworkElement.BindingGroup
  - System.Windows.FrameworkElement.BindingGroupProperty
  - System.Windows.FrameworkElement.BringIntoView
  - System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)
  - System.Windows.FrameworkElement.ContextMenu
  - System.Windows.FrameworkElement.ContextMenuClosing
  - System.Windows.FrameworkElement.ContextMenuClosingEvent
  - System.Windows.FrameworkElement.ContextMenuOpening
  - System.Windows.FrameworkElement.ContextMenuOpeningEvent
  - System.Windows.FrameworkElement.ContextMenuProperty
  - System.Windows.FrameworkElement.Cursor
  - System.Windows.FrameworkElement.CursorProperty
  - System.Windows.FrameworkElement.DataContext
  - System.Windows.FrameworkElement.DataContextChanged
  - System.Windows.FrameworkElement.DataContextProperty
  - System.Windows.FrameworkElement.DefaultStyleKey
  - System.Windows.FrameworkElement.DefaultStyleKeyProperty
  - System.Windows.FrameworkElement.EndInit
  - System.Windows.FrameworkElement.FindName(System.String)
  - System.Windows.FrameworkElement.FindResource(System.Object)
  - System.Windows.FrameworkElement.FlowDirection
  - System.Windows.FrameworkElement.FlowDirectionProperty
  - System.Windows.FrameworkElement.FocusVisualStyle
  - System.Windows.FrameworkElement.FocusVisualStyleProperty
  - System.Windows.FrameworkElement.ForceCursor
  - System.Windows.FrameworkElement.ForceCursorProperty
  - System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)
  - System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)
  - System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)
  - System.Windows.FrameworkElement.GetTemplateChild(System.String)
  - System.Windows.FrameworkElement.GetUIParentCore
  - System.Windows.FrameworkElement.Height
  - System.Windows.FrameworkElement.HeightProperty
  - System.Windows.FrameworkElement.HorizontalAlignment
  - System.Windows.FrameworkElement.HorizontalAlignmentProperty
  - System.Windows.FrameworkElement.InheritanceBehavior
  - System.Windows.FrameworkElement.Initialized
  - System.Windows.FrameworkElement.InputScope
  - System.Windows.FrameworkElement.InputScopeProperty
  - System.Windows.FrameworkElement.IsInitialized
  - System.Windows.FrameworkElement.IsLoaded
  - System.Windows.FrameworkElement.Language
  - System.Windows.FrameworkElement.LanguageProperty
  - System.Windows.FrameworkElement.LayoutTransform
  - System.Windows.FrameworkElement.LayoutTransformProperty
  - System.Windows.FrameworkElement.Loaded
  - System.Windows.FrameworkElement.LoadedEvent
  - System.Windows.FrameworkElement.Margin
  - System.Windows.FrameworkElement.MarginProperty
  - System.Windows.FrameworkElement.MaxHeight
  - System.Windows.FrameworkElement.MaxHeightProperty
  - System.Windows.FrameworkElement.MaxWidth
  - System.Windows.FrameworkElement.MaxWidthProperty
  - System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)
  - System.Windows.FrameworkElement.MinHeight
  - System.Windows.FrameworkElement.MinHeightProperty
  - System.Windows.FrameworkElement.MinWidth
  - System.Windows.FrameworkElement.MinWidthProperty
  - System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)
  - System.Windows.FrameworkElement.Name
  - System.Windows.FrameworkElement.NameProperty
  - System.Windows.FrameworkElement.OnApplyTemplate
  - System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)
  - System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)
  - System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)
  - System.Windows.FrameworkElement.OnInitialized(System.EventArgs)
  - System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)
  - System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)
  - System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)
  - System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)
  - System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)
  - System.Windows.FrameworkElement.OverridesDefaultStyle
  - System.Windows.FrameworkElement.OverridesDefaultStyleProperty
  - System.Windows.FrameworkElement.Parent
  - System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)
  - System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)
  - System.Windows.FrameworkElement.RegisterName(System.String,System.Object)
  - System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)
  - System.Windows.FrameworkElement.RequestBringIntoView
  - System.Windows.FrameworkElement.RequestBringIntoViewEvent
  - System.Windows.FrameworkElement.Resources
  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)
  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)
  - System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)
  - System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)
  - System.Windows.FrameworkElement.ShouldSerializeResources
  - System.Windows.FrameworkElement.ShouldSerializeStyle
  - System.Windows.FrameworkElement.ShouldSerializeTriggers
  - System.Windows.FrameworkElement.SizeChanged
  - System.Windows.FrameworkElement.SizeChangedEvent
  - System.Windows.FrameworkElement.SourceUpdated
  - System.Windows.FrameworkElement.Style
  - System.Windows.FrameworkElement.StyleProperty
  - System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  - System.Windows.FrameworkElement.Tag
  - System.Windows.FrameworkElement.TagProperty
  - System.Windows.FrameworkElement.TargetUpdated
  - System.Windows.FrameworkElement.TemplatedParent
  - System.Windows.FrameworkElement.ToolTip
  - System.Windows.FrameworkElement.ToolTipClosing
  - System.Windows.FrameworkElement.ToolTipClosingEvent
  - System.Windows.FrameworkElement.ToolTipOpening
  - System.Windows.FrameworkElement.ToolTipOpeningEvent
  - System.Windows.FrameworkElement.ToolTipProperty
  - System.Windows.FrameworkElement.Triggers
  - System.Windows.FrameworkElement.TryFindResource(System.Object)
  - System.Windows.FrameworkElement.Unloaded
  - System.Windows.FrameworkElement.UnloadedEvent
  - System.Windows.FrameworkElement.UnregisterName(System.String)
  - System.Windows.FrameworkElement.UpdateDefaultStyle
  - System.Windows.FrameworkElement.UseLayoutRounding
  - System.Windows.FrameworkElement.UseLayoutRoundingProperty
  - System.Windows.FrameworkElement.VerticalAlignment
  - System.Windows.FrameworkElement.VerticalAlignmentProperty
  - System.Windows.FrameworkElement.Width
  - System.Windows.FrameworkElement.WidthProperty
  - System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)
  - System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)
  - System.Windows.Media.Visual.PointToScreen(System.Windows.Point)
  - System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)
  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.VisualBitmapEffect
  - System.Windows.Media.Visual.VisualBitmapEffectInput
  - System.Windows.Media.Visual.VisualBitmapScalingMode
  - System.Windows.Media.Visual.VisualCacheMode
  - System.Windows.Media.Visual.VisualClearTypeHint
  - System.Windows.Media.Visual.VisualClip
  - System.Windows.Media.Visual.VisualEdgeMode
  - System.Windows.Media.Visual.VisualEffect
  - System.Windows.Media.Visual.VisualOffset
  - System.Windows.Media.Visual.VisualOpacity
  - System.Windows.Media.Visual.VisualOpacityMask
  - System.Windows.Media.Visual.VisualParent
  - System.Windows.Media.Visual.VisualScrollableAreaClip
  - System.Windows.Media.Visual.VisualTextHintingMode
  - System.Windows.Media.Visual.VisualTextRenderingMode
  - System.Windows.Media.Visual.VisualTransform
  - System.Windows.Media.Visual.VisualXSnappingGuidelines
  - System.Windows.Media.Visual.VisualYSnappingGuidelines
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  - System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)
  - System.Windows.UIElement.AllowDrop
  - System.Windows.UIElement.AllowDropProperty
  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.UIElement.AreAnyTouchesCaptured
  - System.Windows.UIElement.AreAnyTouchesCapturedProperty
  - System.Windows.UIElement.AreAnyTouchesCapturedWithin
  - System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty
  - System.Windows.UIElement.AreAnyTouchesDirectlyOver
  - System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty
  - System.Windows.UIElement.AreAnyTouchesOver
  - System.Windows.UIElement.AreAnyTouchesOverProperty
  - System.Windows.UIElement.Arrange(System.Windows.Rect)
  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.UIElement.BitmapEffect
  - System.Windows.UIElement.BitmapEffectInput
  - System.Windows.UIElement.BitmapEffectInputProperty
  - System.Windows.UIElement.BitmapEffectProperty
  - System.Windows.UIElement.CacheMode
  - System.Windows.UIElement.CacheModeProperty
  - System.Windows.UIElement.CaptureMouse
  - System.Windows.UIElement.CaptureStylus
  - System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)
  - System.Windows.UIElement.Clip
  - System.Windows.UIElement.ClipProperty
  - System.Windows.UIElement.ClipToBounds
  - System.Windows.UIElement.ClipToBoundsProperty
  - System.Windows.UIElement.CommandBindings
  - System.Windows.UIElement.DesiredSize
  - System.Windows.UIElement.DragEnter
  - System.Windows.UIElement.DragEnterEvent
  - System.Windows.UIElement.DragLeave
  - System.Windows.UIElement.DragLeaveEvent
  - System.Windows.UIElement.DragOver
  - System.Windows.UIElement.DragOverEvent
  - System.Windows.UIElement.Drop
  - System.Windows.UIElement.DropEvent
  - System.Windows.UIElement.Effect
  - System.Windows.UIElement.EffectProperty
  - System.Windows.UIElement.Focus
  - System.Windows.UIElement.Focusable
  - System.Windows.UIElement.FocusableChanged
  - System.Windows.UIElement.FocusableProperty
  - System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.UIElement.GiveFeedback
  - System.Windows.UIElement.GiveFeedbackEvent
  - System.Windows.UIElement.GotFocus
  - System.Windows.UIElement.GotFocusEvent
  - System.Windows.UIElement.GotKeyboardFocus
  - System.Windows.UIElement.GotKeyboardFocusEvent
  - System.Windows.UIElement.GotMouseCapture
  - System.Windows.UIElement.GotMouseCaptureEvent
  - System.Windows.UIElement.GotStylusCapture
  - System.Windows.UIElement.GotStylusCaptureEvent
  - System.Windows.UIElement.GotTouchCapture
  - System.Windows.UIElement.GotTouchCaptureEvent
  - System.Windows.UIElement.HasAnimatedProperties
  - System.Windows.UIElement.HasEffectiveKeyboardFocus
  - System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)
  - System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)
  - System.Windows.UIElement.InputBindings
  - System.Windows.UIElement.InputHitTest(System.Windows.Point)
  - System.Windows.UIElement.InvalidateArrange
  - System.Windows.UIElement.InvalidateMeasure
  - System.Windows.UIElement.InvalidateVisual
  - System.Windows.UIElement.IsArrangeValid
  - System.Windows.UIElement.IsEnabled
  - System.Windows.UIElement.IsEnabledChanged
  - System.Windows.UIElement.IsEnabledCore
  - System.Windows.UIElement.IsEnabledProperty
  - System.Windows.UIElement.IsFocused
  - System.Windows.UIElement.IsFocusedProperty
  - System.Windows.UIElement.IsHitTestVisible
  - System.Windows.UIElement.IsHitTestVisibleChanged
  - System.Windows.UIElement.IsHitTestVisibleProperty
  - System.Windows.UIElement.IsInputMethodEnabled
  - System.Windows.UIElement.IsKeyboardFocused
  - System.Windows.UIElement.IsKeyboardFocusedChanged
  - System.Windows.UIElement.IsKeyboardFocusedProperty
  - System.Windows.UIElement.IsKeyboardFocusWithin
  - System.Windows.UIElement.IsKeyboardFocusWithinChanged
  - System.Windows.UIElement.IsKeyboardFocusWithinProperty
  - System.Windows.UIElement.IsManipulationEnabled
  - System.Windows.UIElement.IsManipulationEnabledProperty
  - System.Windows.UIElement.IsMeasureValid
  - System.Windows.UIElement.IsMouseCaptured
  - System.Windows.UIElement.IsMouseCapturedChanged
  - System.Windows.UIElement.IsMouseCapturedProperty
  - System.Windows.UIElement.IsMouseCaptureWithin
  - System.Windows.UIElement.IsMouseCaptureWithinChanged
  - System.Windows.UIElement.IsMouseCaptureWithinProperty
  - System.Windows.UIElement.IsMouseDirectlyOver
  - System.Windows.UIElement.IsMouseDirectlyOverChanged
  - System.Windows.UIElement.IsMouseDirectlyOverProperty
  - System.Windows.UIElement.IsMouseOver
  - System.Windows.UIElement.IsMouseOverProperty
  - System.Windows.UIElement.IsStylusCaptured
  - System.Windows.UIElement.IsStylusCapturedChanged
  - System.Windows.UIElement.IsStylusCapturedProperty
  - System.Windows.UIElement.IsStylusCaptureWithin
  - System.Windows.UIElement.IsStylusCaptureWithinChanged
  - System.Windows.UIElement.IsStylusCaptureWithinProperty
  - System.Windows.UIElement.IsStylusDirectlyOver
  - System.Windows.UIElement.IsStylusDirectlyOverChanged
  - System.Windows.UIElement.IsStylusDirectlyOverProperty
  - System.Windows.UIElement.IsStylusOver
  - System.Windows.UIElement.IsStylusOverProperty
  - System.Windows.UIElement.IsVisible
  - System.Windows.UIElement.IsVisibleChanged
  - System.Windows.UIElement.IsVisibleProperty
  - System.Windows.UIElement.KeyDown
  - System.Windows.UIElement.KeyDownEvent
  - System.Windows.UIElement.KeyUp
  - System.Windows.UIElement.KeyUpEvent
  - System.Windows.UIElement.LayoutUpdated
  - System.Windows.UIElement.LostFocus
  - System.Windows.UIElement.LostFocusEvent
  - System.Windows.UIElement.LostKeyboardFocus
  - System.Windows.UIElement.LostKeyboardFocusEvent
  - System.Windows.UIElement.LostMouseCapture
  - System.Windows.UIElement.LostMouseCaptureEvent
  - System.Windows.UIElement.LostStylusCapture
  - System.Windows.UIElement.LostStylusCaptureEvent
  - System.Windows.UIElement.LostTouchCapture
  - System.Windows.UIElement.LostTouchCaptureEvent
  - System.Windows.UIElement.ManipulationBoundaryFeedback
  - System.Windows.UIElement.ManipulationBoundaryFeedbackEvent
  - System.Windows.UIElement.ManipulationCompleted
  - System.Windows.UIElement.ManipulationCompletedEvent
  - System.Windows.UIElement.ManipulationDelta
  - System.Windows.UIElement.ManipulationDeltaEvent
  - System.Windows.UIElement.ManipulationInertiaStarting
  - System.Windows.UIElement.ManipulationInertiaStartingEvent
  - System.Windows.UIElement.ManipulationStarted
  - System.Windows.UIElement.ManipulationStartedEvent
  - System.Windows.UIElement.ManipulationStarting
  - System.Windows.UIElement.ManipulationStartingEvent
  - System.Windows.UIElement.Measure(System.Windows.Size)
  - System.Windows.UIElement.MouseDown
  - System.Windows.UIElement.MouseDownEvent
  - System.Windows.UIElement.MouseEnter
  - System.Windows.UIElement.MouseEnterEvent
  - System.Windows.UIElement.MouseLeave
  - System.Windows.UIElement.MouseLeaveEvent
  - System.Windows.UIElement.MouseLeftButtonDown
  - System.Windows.UIElement.MouseLeftButtonDownEvent
  - System.Windows.UIElement.MouseLeftButtonUp
  - System.Windows.UIElement.MouseLeftButtonUpEvent
  - System.Windows.UIElement.MouseMove
  - System.Windows.UIElement.MouseMoveEvent
  - System.Windows.UIElement.MouseRightButtonDown
  - System.Windows.UIElement.MouseRightButtonDownEvent
  - System.Windows.UIElement.MouseRightButtonUp
  - System.Windows.UIElement.MouseRightButtonUpEvent
  - System.Windows.UIElement.MouseUp
  - System.Windows.UIElement.MouseUpEvent
  - System.Windows.UIElement.MouseWheel
  - System.Windows.UIElement.MouseWheelEvent
  - System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)
  - System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)
  - System.Windows.UIElement.OnCreateAutomationPeer
  - System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)
  - System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)
  - System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)
  - System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)
  - System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)
  - System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)
  - System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)
  - System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)
  - System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)
  - System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.Opacity
  - System.Windows.UIElement.OpacityMask
  - System.Windows.UIElement.OpacityMaskProperty
  - System.Windows.UIElement.OpacityProperty
  - System.Windows.UIElement.PersistId
  - System.Windows.UIElement.PreviewDragEnter
  - System.Windows.UIElement.PreviewDragEnterEvent
  - System.Windows.UIElement.PreviewDragLeave
  - System.Windows.UIElement.PreviewDragLeaveEvent
  - System.Windows.UIElement.PreviewDragOver
  - System.Windows.UIElement.PreviewDragOverEvent
  - System.Windows.UIElement.PreviewDrop
  - System.Windows.UIElement.PreviewDropEvent
  - System.Windows.UIElement.PreviewGiveFeedback
  - System.Windows.UIElement.PreviewGiveFeedbackEvent
  - System.Windows.UIElement.PreviewGotKeyboardFocus
  - System.Windows.UIElement.PreviewGotKeyboardFocusEvent
  - System.Windows.UIElement.PreviewKeyDown
  - System.Windows.UIElement.PreviewKeyDownEvent
  - System.Windows.UIElement.PreviewKeyUp
  - System.Windows.UIElement.PreviewKeyUpEvent
  - System.Windows.UIElement.PreviewLostKeyboardFocus
  - System.Windows.UIElement.PreviewLostKeyboardFocusEvent
  - System.Windows.UIElement.PreviewMouseDown
  - System.Windows.UIElement.PreviewMouseDownEvent
  - System.Windows.UIElement.PreviewMouseLeftButtonDown
  - System.Windows.UIElement.PreviewMouseLeftButtonDownEvent
  - System.Windows.UIElement.PreviewMouseLeftButtonUp
  - System.Windows.UIElement.PreviewMouseLeftButtonUpEvent
  - System.Windows.UIElement.PreviewMouseMove
  - System.Windows.UIElement.PreviewMouseMoveEvent
  - System.Windows.UIElement.PreviewMouseRightButtonDown
  - System.Windows.UIElement.PreviewMouseRightButtonDownEvent
  - System.Windows.UIElement.PreviewMouseRightButtonUp
  - System.Windows.UIElement.PreviewMouseRightButtonUpEvent
  - System.Windows.UIElement.PreviewMouseUp
  - System.Windows.UIElement.PreviewMouseUpEvent
  - System.Windows.UIElement.PreviewMouseWheel
  - System.Windows.UIElement.PreviewMouseWheelEvent
  - System.Windows.UIElement.PreviewQueryContinueDrag
  - System.Windows.UIElement.PreviewQueryContinueDragEvent
  - System.Windows.UIElement.PreviewStylusButtonDown
  - System.Windows.UIElement.PreviewStylusButtonDownEvent
  - System.Windows.UIElement.PreviewStylusButtonUp
  - System.Windows.UIElement.PreviewStylusButtonUpEvent
  - System.Windows.UIElement.PreviewStylusDown
  - System.Windows.UIElement.PreviewStylusDownEvent
  - System.Windows.UIElement.PreviewStylusInAirMove
  - System.Windows.UIElement.PreviewStylusInAirMoveEvent
  - System.Windows.UIElement.PreviewStylusInRange
  - System.Windows.UIElement.PreviewStylusInRangeEvent
  - System.Windows.UIElement.PreviewStylusMove
  - System.Windows.UIElement.PreviewStylusMoveEvent
  - System.Windows.UIElement.PreviewStylusOutOfRange
  - System.Windows.UIElement.PreviewStylusOutOfRangeEvent
  - System.Windows.UIElement.PreviewStylusSystemGesture
  - System.Windows.UIElement.PreviewStylusSystemGestureEvent
  - System.Windows.UIElement.PreviewStylusUp
  - System.Windows.UIElement.PreviewStylusUpEvent
  - System.Windows.UIElement.PreviewTextInput
  - System.Windows.UIElement.PreviewTextInputEvent
  - System.Windows.UIElement.PreviewTouchDown
  - System.Windows.UIElement.PreviewTouchDownEvent
  - System.Windows.UIElement.PreviewTouchMove
  - System.Windows.UIElement.PreviewTouchMoveEvent
  - System.Windows.UIElement.PreviewTouchUp
  - System.Windows.UIElement.PreviewTouchUpEvent
  - System.Windows.UIElement.QueryContinueDrag
  - System.Windows.UIElement.QueryContinueDragEvent
  - System.Windows.UIElement.QueryCursor
  - System.Windows.UIElement.QueryCursorEvent
  - System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)
  - System.Windows.UIElement.ReleaseAllTouchCaptures
  - System.Windows.UIElement.ReleaseMouseCapture
  - System.Windows.UIElement.ReleaseStylusCapture
  - System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)
  - System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.UIElement.RenderSize
  - System.Windows.UIElement.RenderTransform
  - System.Windows.UIElement.RenderTransformOrigin
  - System.Windows.UIElement.RenderTransformOriginProperty
  - System.Windows.UIElement.RenderTransformProperty
  - System.Windows.UIElement.ShouldSerializeCommandBindings
  - System.Windows.UIElement.ShouldSerializeInputBindings
  - System.Windows.UIElement.SnapsToDevicePixels
  - System.Windows.UIElement.SnapsToDevicePixelsProperty
  - System.Windows.UIElement.StylusButtonDown
  - System.Windows.UIElement.StylusButtonDownEvent
  - System.Windows.UIElement.StylusButtonUp
  - System.Windows.UIElement.StylusButtonUpEvent
  - System.Windows.UIElement.StylusDown
  - System.Windows.UIElement.StylusDownEvent
  - System.Windows.UIElement.StylusEnter
  - System.Windows.UIElement.StylusEnterEvent
  - System.Windows.UIElement.StylusInAirMove
  - System.Windows.UIElement.StylusInAirMoveEvent
  - System.Windows.UIElement.StylusInRange
  - System.Windows.UIElement.StylusInRangeEvent
  - System.Windows.UIElement.StylusLeave
  - System.Windows.UIElement.StylusLeaveEvent
  - System.Windows.UIElement.StylusMove
  - System.Windows.UIElement.StylusMoveEvent
  - System.Windows.UIElement.StylusOutOfRange
  - System.Windows.UIElement.StylusOutOfRangeEvent
  - System.Windows.UIElement.StylusPlugIns
  - System.Windows.UIElement.StylusSystemGesture
  - System.Windows.UIElement.StylusSystemGestureEvent
  - System.Windows.UIElement.StylusUp
  - System.Windows.UIElement.StylusUpEvent
  - System.Windows.UIElement.TextInput
  - System.Windows.UIElement.TextInputEvent
  - System.Windows.UIElement.TouchDown
  - System.Windows.UIElement.TouchDownEvent
  - System.Windows.UIElement.TouchEnter
  - System.Windows.UIElement.TouchEnterEvent
  - System.Windows.UIElement.TouchesCaptured
  - System.Windows.UIElement.TouchesCapturedWithin
  - System.Windows.UIElement.TouchesDirectlyOver
  - System.Windows.UIElement.TouchesOver
  - System.Windows.UIElement.TouchLeave
  - System.Windows.UIElement.TouchLeaveEvent
  - System.Windows.UIElement.TouchMove
  - System.Windows.UIElement.TouchMoveEvent
  - System.Windows.UIElement.TouchUp
  - System.Windows.UIElement.TouchUpEvent
  - System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)
  - System.Windows.UIElement.Uid
  - System.Windows.UIElement.UidProperty
  - System.Windows.UIElement.UpdateLayout
  - System.Windows.UIElement.Visibility
  - System.Windows.UIElement.VisibilityProperty
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.#ctor
  id: '#ctor'
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: AccessText()
  nameWithType: AccessText.AccessText()
  fullName: System.Windows.Controls.AccessText.AccessText()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Controls.AccessText&quot;> </xref> 클래스입니다."
  syntax:
    content: public AccessText ();
    parameters: []
  overload: System.Windows.Controls.AccessText.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.AccessKey
  id: AccessKey
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: AccessKey
  nameWithType: AccessText.AccessKey
  fullName: System.Windows.Controls.AccessText.AccessKey
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "첫 번째 밑줄 문자 다음에 나오는 문자에 대 한 읽기 전용 액세스를 제공 합니다."
  remarks: "AccessKey 속성을 사용 하 여 프로그래밍 방식으로 <xref:System.Windows.Controls.AccessText>.</xref:System.Windows.Controls.AccessText> 구문 분석 되는 문자를 확인 하려면       <xref:System.Windows.Input.AccessKeyManager>AccessKey 문자를 등록 하 고 발생는 <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed>경우에는 사용자가 키를 누릅니다.</xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed> </xref:System.Windows.Input.AccessKeyManager>"
  syntax:
    content: public char AccessKey { get; }
    return:
      type: System.Char
      description: "반환할 문자입니다."
  overload: System.Windows.Controls.AccessText.AccessKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.ArrangeOverride(System.Windows.Size)
  id: ArrangeOverride(System.Windows.Size)
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: ArrangeOverride(Size)
  nameWithType: AccessText.ArrangeOverride(Size)
  fullName: System.Windows.Controls.AccessText.ArrangeOverride(Size)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "정렬 하 고 콘텐츠의 크기는 <xref href=&quot;System.Windows.Controls.AccessText&quot;> </xref> 개체입니다."
  syntax:
    content: protected override sealed System.Windows.Size ArrangeOverride (System.Windows.Size arrangeSize);
    parameters:
    - id: arrangeSize
      type: System.Windows.Size
      description: "콘텐츠를 정렬 하는 데 사용 되는 계산된 크기입니다."
    return:
      type: System.Windows.Size
      description: "콘텐츠 크기를 지정 합니다."
  overload: System.Windows.Controls.AccessText.ArrangeOverride*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.Background
  id: Background
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: Background
  nameWithType: AccessText.Background
  fullName: System.Windows.Controls.AccessText.Background
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "가져오거나는 <xref href=&quot;System.Windows.Media.Brush&quot;> </xref> 콘텐츠 영역을 채우는입니다."
  remarks: "<a name=&quot;dependencyPropertyInfo_Background&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.AccessText.BackgroundProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|</xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> </xref:System.Windows.Controls.AccessText.BackgroundProperty>"
  example:
  - "The following example shows how to set properties in order to change the appearance of the text in an <xref:System.Windows.Controls.AccessText> control.  \n  \n [!code-xml[AccessText#AccessTextProps](~/add/codesnippet/xaml/AccessText.accesstext/pane1.xaml#accesstextprops)]"
  syntax:
    content: public System.Windows.Media.Brush Background { get; set; }
    return:
      type: System.Windows.Media.Brush
      description: "<xref href=&quot;System.Windows.Media.Brush&quot;> </xref> 콘텐츠 영역을 채우는입니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Controls.AccessText.Background*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.BackgroundProperty
  id: BackgroundProperty
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: BackgroundProperty
  nameWithType: AccessText.BackgroundProperty
  fullName: System.Windows.Controls.AccessText.BackgroundProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref:System.Windows.Controls.AccessText.Background*>종속성 속성입니다.</xref:System.Windows.Controls.AccessText.Background*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty BackgroundProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.BaselineOffset
  id: BaselineOffset
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: BaselineOffset
  nameWithType: AccessText.BaselineOffset
  fullName: System.Windows.Controls.AccessText.BaselineOffset
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "기준선을 조정 하는 값을 오프셋 위치에서 텍스트를 가져오거나 프로그램 <xref href=&quot;System.Windows.Controls.AccessText&quot;> </xref> 요소입니다."
  remarks: "[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)],이 값은 true double입니다. 파이카 또는 지점을 비롯 측정 단위를 사용 하 여이 값을 한정할 수 없습니다.      <a name=&quot;dependencyPropertyInfo_BaselineOffset&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.AccessText.BaselineOffsetProperty>|   | 메타 데이터 속성이 `true`| None |</xref:System.Windows.Controls.AccessText.BaselineOffsetProperty>"
  syntax:
    content: public double BaselineOffset { get; set; }
    return:
      type: System.Double
      description: "위치를 오프셋 하는 기준선을 조정 하는 양입니다."
  overload: System.Windows.Controls.AccessText.BaselineOffset*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.BaselineOffsetProperty
  id: BaselineOffsetProperty
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: BaselineOffsetProperty
  nameWithType: AccessText.BaselineOffsetProperty
  fullName: System.Windows.Controls.AccessText.BaselineOffsetProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref:System.Windows.Controls.AccessText.BaselineOffset*>종속성 속성입니다.</xref:System.Windows.Controls.AccessText.BaselineOffset*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty BaselineOffsetProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.FontFamily
  id: FontFamily
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: FontFamily
  nameWithType: AccessText.FontFamily
  fullName: System.Windows.Controls.AccessText.FontFamily
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "사용 하면 글꼴 패밀리를 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Controls.AccessText&quot;> </xref> 요소입니다."
  remarks: "<a name=&quot;dependencyPropertyInfo_FontFamily&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.AccessText.FontFamilyProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|</xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> </xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> ,</xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Controls.AccessText.FontFamilyProperty>"
  example:
  - "The following example shows how to set properties in order to change the appearance of the text in an <xref:System.Windows.Controls.AccessText> control.  \n  \n [!code-xml[AccessText#AccessTextProps](~/add/codesnippet/xaml/AccessText.accesstext/pane1.xaml#accesstextprops)]"
  syntax:
    content: public System.Windows.Media.FontFamily FontFamily { get; set; }
    return:
      type: System.Windows.Media.FontFamily
      description: "사용할 글꼴 패밀리입니다. 기본값은 의해 결정 되는 글꼴의 <xref:System.Windows.SystemFonts.MessageFontFamily*>메트릭을.</xref:System.Windows.SystemFonts.MessageFontFamily*>"
  overload: System.Windows.Controls.AccessText.FontFamily*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.FontFamilyProperty
  id: FontFamilyProperty
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: FontFamilyProperty
  nameWithType: AccessText.FontFamilyProperty
  fullName: System.Windows.Controls.AccessText.FontFamilyProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref:System.Windows.Controls.AccessText.FontFamily*>종속성 속성입니다.</xref:System.Windows.Controls.AccessText.FontFamily*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty FontFamilyProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.FontSize
  id: FontSize
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: FontSize
  nameWithType: AccessText.FontSize
  fullName: System.Windows.Controls.AccessText.FontSize
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "사용 하면 글꼴 크기를 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Controls.AccessText&quot;> </xref> 요소입니다."
  remarks: "<a name=&quot;dependencyPropertyInfo_FontSize&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.AccessText.FontSizeProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|      <a name=&quot;xamlAttributeUsage_FontSize&quot;> </a> # # XAML 특성 사용 ```   <object FontSize=&quot;double&quot;/>   - or –   <object FontSize =&quot;qualifiedDouble&quot;/>   ``` <a name=&quot;xamlValues_FontSize&quot;> </a> # # XAML 값 *Double* <xref:System.Double> 의 문자열 표현을 <xref:System.Double>값.</xref:System.Double> </xref:System.Double>           </xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> </xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> </xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Controls.AccessText.FontSizeProperty> 이 값으로 해석 되는 [!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)] 측정 합니다. 문자열은 소수점이 하를 명시적으로 포함 하지 않아야 합니다. 값을 지정할 수는 예를 들어 `1`합니다.       *도* A *double* 있는 뒤에 오는 단위 선언 문자열 중 하나는 값: `px`, `in`, `cm`, `pt`합니다.       `px`(기본값)은 [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] `in` 인치; 1에서 96px = = `cm` 센티미터; 1cm==(96/2.54) px `pt` 은 포인트; 1pt==(96/72) px **참고** 대부분의 경우에서 double 설정할 수 있습니다 `Auto`; 그러나이 속성 설정할 수 없습니다 `Auto`합니다.       "
  example:
  - "The following example shows how to set properties to change the appearance of the text in an <xref:System.Windows.Controls.AccessText> control.  \n  \n [!code-xml[AccessText#AccessTextProps](~/add/codesnippet/xaml/AccessText.accesstext/pane1.xaml#accesstextprops)]"
  syntax:
    content: public double FontSize { get; set; }
    return:
      type: System.Double
      description: "사용할 글꼴 크기입니다. 기본값은 의해 결정 되는 글꼴 크기는 <xref:System.Windows.SystemFonts.MessageFontSize*>메트릭을.</xref:System.Windows.SystemFonts.MessageFontSize*>"
  overload: System.Windows.Controls.AccessText.FontSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.FontSizeProperty
  id: FontSizeProperty
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: FontSizeProperty
  nameWithType: AccessText.FontSizeProperty
  fullName: System.Windows.Controls.AccessText.FontSizeProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref:System.Windows.Controls.AccessText.FontSize*>종속성 속성입니다.</xref:System.Windows.Controls.AccessText.FontSize*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty FontSizeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.FontStretch
  id: FontStretch
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: FontStretch
  nameWithType: AccessText.FontStretch
  fullName: System.Windows.Controls.AccessText.FontStretch
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "가져오거나는 <xref href=&quot;System.Windows.FontStretch&quot;> </xref> normal을 선택 하는 속성 압축 또는에서 글꼴을 확장 한 <xref href=&quot;System.Windows.Media.FontFamily&quot;> </xref>합니다."
  remarks: "<a name=&quot;dependencyPropertyInfo_FontStretch&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.AccessText.FontStretchProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|</xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> </xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> ,</xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Controls.AccessText.FontStretchProperty>"
  syntax:
    content: public System.Windows.FontStretch FontStretch { get; set; }
    return:
      type: System.Windows.FontStretch
      description: "글꼴이 늘어나는 상대적 등급입니다. 기본값은 <xref:System.Windows.FontStretches.Normal*>.</xref:System.Windows.FontStretches.Normal*>"
  overload: System.Windows.Controls.AccessText.FontStretch*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.FontStretchProperty
  id: FontStretchProperty
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: FontStretchProperty
  nameWithType: AccessText.FontStretchProperty
  fullName: System.Windows.Controls.AccessText.FontStretchProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref:System.Windows.Controls.AccessText.FontStretch*>종속성 속성입니다.</xref:System.Windows.Controls.AccessText.FontStretch*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty FontStretchProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.FontStyle
  id: FontStyle
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: FontStyle
  nameWithType: AccessText.FontStyle
  fullName: System.Windows.Controls.AccessText.FontStyle
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "사용 하면 글꼴 스타일을 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Controls.AccessText&quot;> </xref> 요소입니다."
  remarks: "자세한 내용 및 글꼴 스타일 목록 <xref:System.Windows.FontStyle>.</xref:System.Windows.FontStyle> 를 참조 하세요.      <a name=&quot;dependencyPropertyInfo_FontStyle&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.AccessText.FontStyleProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|</xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> </xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> ,</xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Controls.AccessText.FontStyleProperty>"
  example:
  - "The following example shows how to set properties in order to change the appearance of the text in an <xref:System.Windows.Controls.AccessText> control.  \n  \n [!code-xml[AccessText#AccessTextProps](~/add/codesnippet/xaml/AccessText.accesstext/pane1.xaml#accesstextprops)]"
  syntax:
    content: public System.Windows.FontStyle FontStyle { get; set; }
    return:
      type: System.Windows.FontStyle
      description: "글꼴 스타일을 지정 해야 합니다. 예를 들어, 보통, 기울임꼴 또는 오블리크 합니다. 기본값은 <xref:System.Windows.SystemFonts.MessageFontStyle*>메트릭을.</xref:System.Windows.SystemFonts.MessageFontStyle*>"
  overload: System.Windows.Controls.AccessText.FontStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.FontStyleProperty
  id: FontStyleProperty
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: FontStyleProperty
  nameWithType: AccessText.FontStyleProperty
  fullName: System.Windows.Controls.AccessText.FontStyleProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref:System.Windows.Controls.AccessText.FontStyle*>종속성 속성입니다.</xref:System.Windows.Controls.AccessText.FontStyle*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty FontStyleProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.FontWeight
  id: FontWeight
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: FontWeight
  nameWithType: AccessText.FontWeight
  fullName: System.Windows.Controls.AccessText.FontWeight
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "사용 하면 글꼴 두께 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Controls.AccessText&quot;> </xref> 요소입니다."
  remarks: "<a name=&quot;dependencyPropertyInfo_FontWeight&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.AccessText.FontWeightProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|</xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> </xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> ,</xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Controls.AccessText.FontWeightProperty>"
  example:
  - "The following example shows how to set properties to change the appearance of the text in an <xref:System.Windows.Controls.AccessText> control.  \n  \n [!code-xml[AccessText#AccessTextProps](~/add/codesnippet/xaml/AccessText.accesstext/pane1.xaml#accesstextprops)]"
  syntax:
    content: public System.Windows.FontWeight FontWeight { get; set; }
    return:
      type: System.Windows.FontWeight
      description: "사용할 글꼴 두께입니다. 기본값은 <xref:System.Windows.SystemFonts.MessageFontWeight*>메트릭을.</xref:System.Windows.SystemFonts.MessageFontWeight*>"
  overload: System.Windows.Controls.AccessText.FontWeight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.FontWeightProperty
  id: FontWeightProperty
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: FontWeightProperty
  nameWithType: AccessText.FontWeightProperty
  fullName: System.Windows.Controls.AccessText.FontWeightProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref:System.Windows.Controls.AccessText.FontWeight*>종속성 속성입니다.</xref:System.Windows.Controls.AccessText.FontWeight*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty FontWeightProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.Foreground
  id: Foreground
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: Foreground
  nameWithType: AccessText.Foreground
  fullName: System.Windows.Controls.AccessText.Foreground
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "가져오거나는 <xref href=&quot;System.Windows.Media.Brush&quot;> </xref> 요소의 텍스트 콘텐츠를 그립니다."
  remarks: "<a name=&quot;dependencyPropertyInfo_Foreground&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.AccessText.ForegroundProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|</xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> </xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A> ,</xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> </xref:System.Windows.Controls.AccessText.ForegroundProperty>"
  example:
  - "The following example shows how to set properties to change the appearance of the text in an <xref:System.Windows.Controls.AccessText> control.  \n  \n [!code-xml[AccessText#AccessTextProps](~/add/codesnippet/xaml/AccessText.accesstext/pane1.xaml#accesstextprops)]"
  syntax:
    content: public System.Windows.Media.Brush Foreground { get; set; }
    return:
      type: System.Windows.Media.Brush
      description: "<xref href=&quot;System.Windows.Media.Brush&quot;> </xref> 하는 텍스트를 그립니다. 기본값은 <xref:System.Windows.Media.Brushes.Black*>.</xref:System.Windows.Media.Brushes.Black*>"
  overload: System.Windows.Controls.AccessText.Foreground*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.ForegroundProperty
  id: ForegroundProperty
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: ForegroundProperty
  nameWithType: AccessText.ForegroundProperty
  fullName: System.Windows.Controls.AccessText.ForegroundProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref:System.Windows.Controls.AccessText.Foreground*>종속성 속성입니다.</xref:System.Windows.Controls.AccessText.Foreground*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ForegroundProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.GetVisualChild(System.Int32)
  id: GetVisualChild(System.Int32)
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: GetVisualChild(Int32)
  nameWithType: AccessText.GetVisualChild(Int32)
  fullName: System.Windows.Controls.AccessText.GetVisualChild(Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "시각적 자식 요소의 인덱스를 가져옵니다."
  syntax:
    content: protected override System.Windows.Media.Visual GetVisualChild (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "반환할 시각적 자식 요소의 인덱스입니다."
    return:
      type: System.Windows.Media.Visual
      description: "시각적 자식 요소의 인덱스를 나타내는 정수를 반환 합니다."
  overload: System.Windows.Controls.AccessText.GetVisualChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.LineHeight
  id: LineHeight
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: LineHeight
  nameWithType: AccessText.LineHeight
  fullName: System.Windows.Controls.AccessText.LineHeight
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "각 줄 상자의 높이 가져오거나 설정 합니다."
  remarks: "이 값을 변경; 연결된 된 텍스트의 높이 변경 되지 않습니다. 대신, 포함 된 상자를 변경 합니다. 텍스트의 크기를 변경 하려면 사용 하 여는 <xref:System.Windows.Controls.AccessText.FontSize%2A>속성.</xref:System.Windows.Controls.AccessText.FontSize%2A>      <a name=&quot;dependencyPropertyInfo_LineHeight&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.AccessText.LineHeightProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|      <a name=&quot;xamlAttributeUsage_LineHeight&quot;> </a> # # XAML 특성 사용 ```   <object LineHeight=&quot;double&quot;/>   - or –   <object LineHeight =&quot;qualifiedDouble&quot;/>   - or –   <object LineHeight =&quot;Auto&quot;/>   ``` <a name=&quot;xamlValues_LineHeight&quot;> </a> # # XAML 값 *double* <xref:System.Double> 의 문자열 표현을 <xref:System.Double>값.</xref:System.Double> </xref:System.Double>           </xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> </xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> </xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Controls.AccessText.LineHeightProperty> 이 값으로 해석 되는 [!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)] 측정 합니다. 문자열은 소수점이 하를 명시적으로 포함 하지 않아야 합니다. 값을 지정할 수는 예를 들어 `1`합니다.       동일한 <xref:System.Double>여기 속성 값 섹션에 설명 된 대로 제한 된 범위에 적용 합니다.</xref:System.Double>       *도* A *double* 있는 뒤에 오는 단위 선언 문자열 중 하나는 값: `px`, `in`, `cm`, `pt`합니다.       `px`(기본값)은 [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] `in` 인치; 1in 96px = = `cm` 센티미터; 1cm==(96/2.54) px `pt` 은 포인트; 1pt==(96/72) px *자동* 자동 줄 높이 결정 합니다.        프로그래밍 방식으로 설정 하는 경우는 *자동* <xref:System.Double.NaN?displayProperty=fullName>.</xref:System.Double.NaN?displayProperty=fullName> 값, 해당 값은 해당"
  syntax:
    content: public double LineHeight { get; set; }
    return:
      type: System.Double
      description: "각 라인 상자의 높이 지정 하는 double입니다. 이 값 보다 크거나 같은 여야 `0.0034` 및 낮거나 다음 `160000`합니다. 값이 &lt;xref:System.Double?displayProperty=fullName&gt; (의 특성 값에 해당 `Auto`) 이면 줄 높이가 현재 글꼴 특성에서 자동으로 결정 됩니다. 기본값은 &lt;xref:System.Double?displayProperty=fullName&gt;합니다."
  overload: System.Windows.Controls.AccessText.LineHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.LineHeightProperty
  id: LineHeightProperty
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: LineHeightProperty
  nameWithType: AccessText.LineHeightProperty
  fullName: System.Windows.Controls.AccessText.LineHeightProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref:System.Windows.Controls.AccessText.LineHeight*>종속성 속성입니다.</xref:System.Windows.Controls.AccessText.LineHeight*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty LineHeightProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.LineStackingStrategy
  id: LineStackingStrategy
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: LineStackingStrategy
  nameWithType: AccessText.LineStackingStrategy
  fullName: System.Windows.Controls.AccessText.LineStackingStrategy
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "가져오거나 방법을 <xref:System.Windows.Controls.AccessText.LineHeight*>속성이 적용 됩니다.</xref:System.Windows.Controls.AccessText.LineHeight*>"
  remarks: "<xref:System.Windows.Controls.AccessText.LineHeight%2A>텍스트에 예약 된 라인 상자를 제어 하는 속성입니다.</xref:System.Windows.Controls.AccessText.LineHeight%2A> <xref:System.Windows.Controls.AccessText.LineHeight%2A>사용자가을 높이 대 한 제안을 설정할 수 있습니다.</xref:System.Windows.Controls.AccessText.LineHeight%2A> <xref:System.Windows.LineStackingStrategy>정의 방법을 <xref:System.Windows.Controls.AccessText.LineHeight%2A>적용 됩니다.</xref:System.Windows.Controls.AccessText.LineHeight%2A></xref:System.Windows.LineStackingStrategy>       또는 <xref:System.Windows.LineStackingStrategy> <xref:System.Windows.LineStackingStrategy>.</xref:System.Windows.LineStackingStrategy> </xref:System.Windows.LineStackingStrategy> LineStackingStrategy 속성을 설정할 수 있습니다.      - <xref:System.Windows.LineStackingStrategy>값 큰 개체에는 줄의 줄이 늘어납니다.</xref:System.Windows.LineStackingStrategy> 항목이 overdraws 또는 잘립니다 되도록 조정 합니다.      - <xref:System.Windows.LineStackingStrategy>값을 적용 한 <xref:System.Windows.Controls.AccessText.LineHeight%2A>모든 줄에서 값.</xref:System.Windows.Controls.AccessText.LineHeight%2A> </xref:System.Windows.LineStackingStrategy> 경우는 <xref:System.Windows.Controls.AccessText.LineHeight%2A>속성 충분 한 공간을 제공 하지 않습니다, 텍스트는 벗어나거나 잘립니다.</xref:System.Windows.Controls.AccessText.LineHeight%2A> 에 따라 달라 집니다 발생 하는 <xref:System.Windows.UIElement.ClipProperty>값.</xref:System.Windows.UIElement.ClipProperty>      <a name=&quot;dependencyPropertyInfo_LineStackingStrategy&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.AccessText.LineStackingStrategyProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|</xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> </xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> ,</xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Controls.AccessText.LineStackingStrategyProperty>"
  syntax:
    content: public System.Windows.LineStackingStrategy LineStackingStrategy { get; set; }
    return:
      type: System.Windows.LineStackingStrategy
      description: "A <xref href=&quot;System.Windows.LineStackingStrategy&quot;> </xref> 의 동작을 결정 하는 값은 <xref:System.Windows.Controls.AccessText.LineHeight*>속성.</xref:System.Windows.Controls.AccessText.LineHeight*>"
  overload: System.Windows.Controls.AccessText.LineStackingStrategy*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.LineStackingStrategyProperty
  id: LineStackingStrategyProperty
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: LineStackingStrategyProperty
  nameWithType: AccessText.LineStackingStrategyProperty
  fullName: System.Windows.Controls.AccessText.LineStackingStrategyProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref:System.Windows.Controls.AccessText.LineStackingStrategy*>종속성 속성입니다.</xref:System.Windows.Controls.AccessText.LineStackingStrategy*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty LineStackingStrategyProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.LogicalChildren
  id: LogicalChildren
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: LogicalChildren
  nameWithType: AccessText.LogicalChildren
  fullName: System.Windows.Controls.AccessText.LogicalChildren
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "논리적 자식 요소를 반복 하는 열거자를 가져옵니다는 <xref href=&quot;System.Windows.Controls.AccessText&quot;> </xref> 요소입니다."
  syntax:
    content: protected override System.Collections.IEnumerator LogicalChildren { get; }
    return:
      type: System.Collections.IEnumerator
      description: "이 요소의 논리 자식 요소를 반복 하는 열거자입니다."
  overload: System.Windows.Controls.AccessText.LogicalChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.MeasureOverride(System.Windows.Size)
  id: MeasureOverride(System.Windows.Size)
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: MeasureOverride(Size)
  nameWithType: AccessText.MeasureOverride(Size)
  fullName: System.Windows.Controls.AccessText.MeasureOverride(Size)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "컨트롤을 다시 측정 합니다."
  syntax:
    content: protected override sealed System.Windows.Size MeasureOverride (System.Windows.Size constraint);
    parameters:
    - id: constraint
      type: System.Windows.Size
      description: "컨트롤에 대 한 최대 크기 제한입니다. 반환 값이이 크기를 초과할 수 없습니다."
    return:
      type: System.Windows.Size
      description: "컨트롤의 크기입니다. 컨트롤에 대 한 최대 크기 한도 초과할 수 없습니다."
  overload: System.Windows.Controls.AccessText.MeasureOverride*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.System#Windows#Markup#IAddChild#AddChild(System.Object)
  id: System#Windows#Markup#IAddChild#AddChild(System.Object)
  isEii: true
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: AccessText.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Controls.AccessText.System.Windows.Markup.IAddChild.AddChild(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Windows.Markup.IAddChild.AddChild%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Controls.AccessText>인스턴스로 캐스팅 되는 <xref:System.Windows.Markup.IAddChild>인터페이스.</xref:System.Windows.Markup.IAddChild> </xref:System.Windows.Controls.AccessText>"
  syntax:
    content: void IAddChild.AddChild (object value);
    parameters:
    - id: value
      type: System.Object
      description: "에 추가할 개체는 <xref href=&quot;System.Windows.Controls.AccessText&quot;> </xref>합니다."
  overload: System.Windows.Controls.AccessText.System#Windows#Markup#IAddChild#AddChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.System#Windows#Markup#IAddChild#AddText(System.String)
  id: System#Windows#Markup#IAddChild#AddText(System.String)
  isEii: true
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: AccessText.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Controls.AccessText.System.Windows.Markup.IAddChild.AddText(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Windows.Markup.IAddChild.AddText%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Controls.AccessText>인스턴스로 캐스팅 되는 <xref:System.Windows.Markup.IAddChild>인터페이스.</xref:System.Windows.Markup.IAddChild> </xref:System.Windows.Controls.AccessText>"
  syntax:
    content: void IAddChild.AddText (string text);
    parameters:
    - id: text
      type: System.String
      description: "개체에 추가할 텍스트입니다."
  overload: System.Windows.Controls.AccessText.System#Windows#Markup#IAddChild#AddText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.Text
  id: Text
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: Text
  nameWithType: AccessText.Text
  fullName: System.Windows.Controls.AccessText.Text
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "표시 되는 텍스트를 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Controls.AccessText&quot;> </xref> 요소입니다."
  remarks: "Text 속성을 사용 하 여 텍스트를 제공 하는 경우 선택 키 만들어집니다는 <xref:System.Windows.Controls.AccessText>요소.</xref:System.Windows.Controls.AccessText> 선택 키에 의해 표시 되는 텍스트를 확인 하려면이 속성은 내부적으로 사용 합니다. 니모닉 (밑줄된 문자)를 포함 하지 않는 추가 텍스트를 설정 하거나 액세스 키 텍스트를 검색 하려면이 속성을 사용할 수 있습니다.      <a name=&quot;xamlObjectElementUsage_Text&quot;></a># # XAML 개체 요소 사용 ```   <object>_accessText</object>   - or -    <object><accessTextObject>_accessText</accessTextObject></object>      ``` <a name=&quot;xamlValues_Text&quot;> </a> # # XAML 값 *_accessText* 밑줄 문자를 포함 하는 문자열입니다.       이 값이 있는 <xref:System.Windows.Controls.AccessText>선택 키를 처리는 *개체*.</xref:System.Windows.Controls.AccessText> 선택 키에는 바로 뒤에 밑줄 문자입니다.       *accessTextObject* <xref:System.Windows.Controls.AccessText>.</xref:System.Windows.Controls.AccessText>      <a name=&quot;dependencyPropertyInfo_Text&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.AccessText.TextProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|</xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> </xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Controls.AccessText.TextProperty>"
  example:
  - "The following example creates an access key that customizes the first letter of the access key, which contains the mnemonic, and then sets the rest of the text by using the Text property.  \n  \n [!code-xml[AccessTextProps_snip#AccessTextText](~/add/codesnippet/xaml/AccessTextProps_snip.accesstext/pane1.xaml#accesstexttext)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "첫 번째 밑줄 문자가 없는 텍스트입니다. 기본값은 빈 문자열입니다."
  overload: System.Windows.Controls.AccessText.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.TextAlignment
  id: TextAlignment
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: TextAlignment
  nameWithType: AccessText.TextAlignment
  fullName: System.Windows.Controls.AccessText.TextAlignment
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "콘텐츠의 가로 맞춤을 가져오거나 설정 합니다."
  remarks: "맞춤 <xref:System.Windows.TextAlignment>.</xref:System.Windows.TextAlignment> 을 참조 하십시오.      <a name=&quot;dependencyPropertyInfo_TextAlignment&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.AccessText.TextAlignmentProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|</xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> </xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> ,</xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Controls.AccessText.TextAlignmentProperty>"
  syntax:
    content: public System.Windows.TextAlignment TextAlignment { get; set; }
    return:
      type: System.Windows.TextAlignment
      description: "텍스트의 가로 맞춤입니다."
  overload: System.Windows.Controls.AccessText.TextAlignment*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.TextAlignmentProperty
  id: TextAlignmentProperty
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: TextAlignmentProperty
  nameWithType: AccessText.TextAlignmentProperty
  fullName: System.Windows.Controls.AccessText.TextAlignmentProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref:System.Windows.Controls.AccessText.TextAlignment*>종속성 속성입니다.</xref:System.Windows.Controls.AccessText.TextAlignment*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty TextAlignmentProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.TextDecorations
  id: TextDecorations
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: TextDecorations
  nameWithType: AccessText.TextDecorations
  fullName: System.Windows.Controls.AccessText.TextDecorations
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "텍스트에 추가 된 장식을 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Controls.AccessText&quot;> </xref> 요소입니다."
  remarks: "텍스트 장식에 대 한 자세한 내용은 <xref:System.Windows.TextDecorations>.</xref:System.Windows.TextDecorations> 을 참조 하십시오.       이 속성을 일반적으로 설정 하지 태그 또는 코드를 사용 하 여 합니다.       이 속성은 가능한 스타일이 나 프로그래밍 방식으로 변경에 대 한 선택 키 (텍스트와 같은 텍스트 색상의 밑줄)에 대 한 기본 장식을 노출 합니다. 것 특정 모양을 갖도록 하는 액세스 키 식별자는 [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)], 응용 프로그램 스타일 사용자 지정 테마 등의 응용 프로그램 수준의 메커니즘을 사용 하 여이 속성을 변경 하는 것이 좋습니다.      <a name=&quot;xamlPropertyElementUsage_TextDecorations&quot;></a># # XAML 속성 요소 사용 ```   <object>     <object.TextDecorations>       OneOrMoreTextDecorations     </object.TextDecorations>   </object>   ``` <a name=&quot;xamlValues_TextDecorations&quot;> </a> # # XAML 값 *OneOrMoreTextDecorations* 하나 이상의 <xref:System.Windows.TextDecoration>요소.</xref:System.Windows.TextDecoration>       사용자 지정 텍스트 장식을 정의 하는 경우이 구문을 사용 합니다. 자세한 내용은 참조 [하는 방법: 텍스트 장식 만들기](~/add/includes/ajax-current-ext-md.md)합니다.      <a name=&quot;dependencyPropertyInfo_TextDecorations&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.AccessText.TextDecorationsProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|</xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> </xref:System.Windows.Controls.AccessText.TextDecorationsProperty>"
  syntax:
    content: public System.Windows.TextDecorationCollection TextDecorations { get; set; }
    return:
      type: System.Windows.TextDecorationCollection
      description: "<xref href=&quot;System.Windows.TextDecorations&quot;> </xref> 의 텍스트에 적용 되는 <xref href=&quot;System.Windows.Controls.AccessText&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Controls.AccessText.TextDecorations*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.TextDecorationsProperty
  id: TextDecorationsProperty
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: TextDecorationsProperty
  nameWithType: AccessText.TextDecorationsProperty
  fullName: System.Windows.Controls.AccessText.TextDecorationsProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref:System.Windows.Controls.AccessText.TextDecorations*>종속성 속성입니다.</xref:System.Windows.Controls.AccessText.TextDecorations*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty TextDecorationsProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.TextEffects
  id: TextEffects
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: TextEffects
  nameWithType: AccessText.TextEffects
  fullName: System.Windows.Controls.AccessText.TextEffects
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "텍스트에 추가 되는 효과 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Controls.AccessText&quot;> </xref> 요소입니다."
  remarks: "이 속성을 일반적으로 설정 하지 태그 또는 코드를 사용 하 여 합니다.       이 속성은 가능한 스타일이 나 프로그래밍 방식으로 변경에 대 한 선택 키에 대 한 기본 효과 노출 합니다.       것 특정 모양을 갖도록 하는 액세스 키 식별자는 [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)], 응용 프로그램 스타일 사용자 지정 테마 등의 응용 프로그램 수준의 메커니즘을 사용 하 여이 속성을 변경 하는 것이 좋습니다.      <a name=&quot;xamlPropertyElementUsage_TextEffects&quot;></a># # XAML 속성 요소 사용 ```   <object>     <object.TextEffects>       OneOrMoreTextEffects     </object.TextEffects>   </object>      ``` <a name=&quot;xamlValues_TextEffects&quot;> </a> # # XAML 값 *OneOrMoreTextEffects* 하나 이상의 <xref:System.Windows.Media.TextEffect>요소.</xref:System.Windows.Media.TextEffect>            <a name=&quot;dependencyPropertyInfo_TextEffects&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.AccessText.TextEffectsProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|</xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> </xref:System.Windows.Controls.AccessText.TextEffectsProperty>"
  syntax:
    content: public System.Windows.Media.TextEffectCollection TextEffects { get; set; }
    return:
      type: System.Windows.Media.TextEffectCollection
      description: "The <xref href=&quot;System.Windows.Media.TextEffectCollection&quot;></xref>. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Controls.AccessText.TextEffects*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.TextEffectsProperty
  id: TextEffectsProperty
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: TextEffectsProperty
  nameWithType: AccessText.TextEffectsProperty
  fullName: System.Windows.Controls.AccessText.TextEffectsProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref:System.Windows.Controls.AccessText.TextEffects*>종속성 속성입니다.</xref:System.Windows.Controls.AccessText.TextEffects*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty TextEffectsProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.TextProperty
  id: TextProperty
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: TextProperty
  nameWithType: AccessText.TextProperty
  fullName: System.Windows.Controls.AccessText.TextProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref:System.Windows.Controls.AccessText.Text*>종속성 속성입니다.</xref:System.Windows.Controls.AccessText.Text*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty TextProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.TextTrimming
  id: TextTrimming
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: TextTrimming
  nameWithType: AccessText.TextTrimming
  fullName: System.Windows.Controls.AccessText.TextTrimming
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "가져오거나 어떻게의 텍스트 콘텐츠는 <xref href=&quot;System.Windows.Controls.AccessText&quot;> </xref> 라인 상자의 오버플로 하는 경우 요소는 잘립니다."
  remarks: "자세한 내용은 및 텍스트 잘라내기 옵션의 목록에 대 한 참조 <xref:System.Windows.TextTrimming>.</xref:System.Windows.TextTrimming>      <a name=&quot;dependencyPropertyInfo_TextTrimming&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.AccessText.TextTrimmingProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|</xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> </xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Controls.AccessText.TextTrimmingProperty>"
  syntax:
    content: public System.Windows.TextTrimming TextTrimming { get; set; }
    return:
      type: System.Windows.TextTrimming
      description: "사용 하는 잘라내기 동작 합니다. 기본값은<xref href=&quot;System.Windows.TextTrimming&quot;></xref>"
  overload: System.Windows.Controls.AccessText.TextTrimming*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.TextTrimmingProperty
  id: TextTrimmingProperty
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: TextTrimmingProperty
  nameWithType: AccessText.TextTrimmingProperty
  fullName: System.Windows.Controls.AccessText.TextTrimmingProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref:System.Windows.Controls.AccessText.TextTrimming*>종속성 속성입니다.</xref:System.Windows.Controls.AccessText.TextTrimming*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty TextTrimmingProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.TextWrapping
  id: TextWrapping
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: TextWrapping
  nameWithType: AccessText.TextWrapping
  fullName: System.Windows.Controls.AccessText.TextWrapping
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "가져오거나 여부의 텍스트 콘텐츠는 <xref href=&quot;System.Windows.Controls.AccessText&quot;> </xref> 라인 상자의 오버플로 하는 경우 요소에 래핑됩니다."
  remarks: "<a name=&quot;dependencyPropertyInfo_TextWrapping&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.AccessText.TextWrappingProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|</xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> </xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Controls.AccessText.TextWrappingProperty>"
  example:
  - "The following example uses the TextWrapping property of <xref:System.Windows.Controls.AccessText> to make a multiple-line label.  \n  \n [!code-xml[Label#4](~/add/codesnippet/xaml/p-system.windows.control_395_1.xaml)]\n [!code-xml[Label#4](~/add/codesnippet/xaml/p-system.windows.control_395_1.xaml)]"
  syntax:
    content: public System.Windows.TextWrapping TextWrapping { get; set; }
    return:
      type: System.Windows.TextWrapping
      description: "사용할 줄 바꿈 동작입니다. 기본값은 <xref href=&quot;System.Windows.TextWrapping&quot;> </xref>합니다."
  overload: System.Windows.Controls.AccessText.TextWrapping*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.TextWrappingProperty
  id: TextWrappingProperty
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: TextWrappingProperty
  nameWithType: AccessText.TextWrappingProperty
  fullName: System.Windows.Controls.AccessText.TextWrappingProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref:System.Windows.Controls.AccessText.TextWrapping*>종속성 속성입니다.</xref:System.Windows.Controls.AccessText.TextWrapping*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty TextWrappingProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AccessText.VisualChildrenCount
  id: VisualChildrenCount
  parent: System.Windows.Controls.AccessText
  langs:
  - csharp
  name: VisualChildrenCount
  nameWithType: AccessText.VisualChildrenCount
  fullName: System.Windows.Controls.AccessText.VisualChildrenCount
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "시각적 자식 요소의 수를 가져옵니다."
  syntax:
    content: protected override int VisualChildrenCount { get; }
    return:
      type: System.Int32
      description: "표시 되는 자식 요소의 수를 나타내는 정수를 반환 합니다."
  overload: System.Windows.Controls.AccessText.VisualChildrenCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.FrameworkElement
  isExternal: false
  name: System.Windows.FrameworkElement
- uid: System.Windows.Controls.AccessText.#ctor
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: AccessText()
  nameWithType: AccessText.AccessText()
  fullName: System.Windows.Controls.AccessText.AccessText()
- uid: System.Windows.Controls.AccessText.AccessKey
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: AccessKey
  nameWithType: AccessText.AccessKey
  fullName: System.Windows.Controls.AccessText.AccessKey
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Windows.Controls.AccessText.ArrangeOverride(System.Windows.Size)
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: ArrangeOverride(Size)
  nameWithType: AccessText.ArrangeOverride(Size)
  fullName: System.Windows.Controls.AccessText.ArrangeOverride(Size)
- uid: System.Windows.Size
  parent: System.Windows
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Windows.Size
- uid: System.Windows.Controls.AccessText.Background
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: Background
  nameWithType: AccessText.Background
  fullName: System.Windows.Controls.AccessText.Background
- uid: System.Windows.Media.Brush
  parent: System.Windows.Media
  isExternal: false
  name: Brush
  nameWithType: Brush
  fullName: System.Windows.Media.Brush
- uid: System.Windows.Controls.AccessText.BackgroundProperty
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: BackgroundProperty
  nameWithType: AccessText.BackgroundProperty
  fullName: System.Windows.Controls.AccessText.BackgroundProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Controls.AccessText.BaselineOffset
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: BaselineOffset
  nameWithType: AccessText.BaselineOffset
  fullName: System.Windows.Controls.AccessText.BaselineOffset
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Controls.AccessText.BaselineOffsetProperty
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: BaselineOffsetProperty
  nameWithType: AccessText.BaselineOffsetProperty
  fullName: System.Windows.Controls.AccessText.BaselineOffsetProperty
- uid: System.Windows.Controls.AccessText.FontFamily
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: FontFamily
  nameWithType: AccessText.FontFamily
  fullName: System.Windows.Controls.AccessText.FontFamily
- uid: System.Windows.Media.FontFamily
  parent: System.Windows.Media
  isExternal: false
  name: FontFamily
  nameWithType: FontFamily
  fullName: System.Windows.Media.FontFamily
- uid: System.Windows.Controls.AccessText.FontFamilyProperty
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: FontFamilyProperty
  nameWithType: AccessText.FontFamilyProperty
  fullName: System.Windows.Controls.AccessText.FontFamilyProperty
- uid: System.Windows.Controls.AccessText.FontSize
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: FontSize
  nameWithType: AccessText.FontSize
  fullName: System.Windows.Controls.AccessText.FontSize
- uid: System.Windows.Controls.AccessText.FontSizeProperty
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: FontSizeProperty
  nameWithType: AccessText.FontSizeProperty
  fullName: System.Windows.Controls.AccessText.FontSizeProperty
- uid: System.Windows.Controls.AccessText.FontStretch
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: FontStretch
  nameWithType: AccessText.FontStretch
  fullName: System.Windows.Controls.AccessText.FontStretch
- uid: System.Windows.FontStretch
  parent: System.Windows
  isExternal: false
  name: FontStretch
  nameWithType: FontStretch
  fullName: System.Windows.FontStretch
- uid: System.Windows.Controls.AccessText.FontStretchProperty
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: FontStretchProperty
  nameWithType: AccessText.FontStretchProperty
  fullName: System.Windows.Controls.AccessText.FontStretchProperty
- uid: System.Windows.Controls.AccessText.FontStyle
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: FontStyle
  nameWithType: AccessText.FontStyle
  fullName: System.Windows.Controls.AccessText.FontStyle
- uid: System.Windows.FontStyle
  parent: System.Windows
  isExternal: false
  name: FontStyle
  nameWithType: FontStyle
  fullName: System.Windows.FontStyle
- uid: System.Windows.Controls.AccessText.FontStyleProperty
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: FontStyleProperty
  nameWithType: AccessText.FontStyleProperty
  fullName: System.Windows.Controls.AccessText.FontStyleProperty
- uid: System.Windows.Controls.AccessText.FontWeight
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: FontWeight
  nameWithType: AccessText.FontWeight
  fullName: System.Windows.Controls.AccessText.FontWeight
- uid: System.Windows.FontWeight
  parent: System.Windows
  isExternal: false
  name: FontWeight
  nameWithType: FontWeight
  fullName: System.Windows.FontWeight
- uid: System.Windows.Controls.AccessText.FontWeightProperty
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: FontWeightProperty
  nameWithType: AccessText.FontWeightProperty
  fullName: System.Windows.Controls.AccessText.FontWeightProperty
- uid: System.Windows.Controls.AccessText.Foreground
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: Foreground
  nameWithType: AccessText.Foreground
  fullName: System.Windows.Controls.AccessText.Foreground
- uid: System.Windows.Controls.AccessText.ForegroundProperty
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: ForegroundProperty
  nameWithType: AccessText.ForegroundProperty
  fullName: System.Windows.Controls.AccessText.ForegroundProperty
- uid: System.Windows.Controls.AccessText.GetVisualChild(System.Int32)
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: GetVisualChild(Int32)
  nameWithType: AccessText.GetVisualChild(Int32)
  fullName: System.Windows.Controls.AccessText.GetVisualChild(Int32)
- uid: System.Windows.Media.Visual
  parent: System.Windows.Media
  isExternal: false
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Controls.AccessText.LineHeight
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: LineHeight
  nameWithType: AccessText.LineHeight
  fullName: System.Windows.Controls.AccessText.LineHeight
- uid: System.Windows.Controls.AccessText.LineHeightProperty
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: LineHeightProperty
  nameWithType: AccessText.LineHeightProperty
  fullName: System.Windows.Controls.AccessText.LineHeightProperty
- uid: System.Windows.Controls.AccessText.LineStackingStrategy
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: LineStackingStrategy
  nameWithType: AccessText.LineStackingStrategy
  fullName: System.Windows.Controls.AccessText.LineStackingStrategy
- uid: System.Windows.LineStackingStrategy
  parent: System.Windows
  isExternal: false
  name: LineStackingStrategy
  nameWithType: LineStackingStrategy
  fullName: System.Windows.LineStackingStrategy
- uid: System.Windows.Controls.AccessText.LineStackingStrategyProperty
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: LineStackingStrategyProperty
  nameWithType: AccessText.LineStackingStrategyProperty
  fullName: System.Windows.Controls.AccessText.LineStackingStrategyProperty
- uid: System.Windows.Controls.AccessText.LogicalChildren
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: LogicalChildren
  nameWithType: AccessText.LogicalChildren
  fullName: System.Windows.Controls.AccessText.LogicalChildren
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Controls.AccessText.MeasureOverride(System.Windows.Size)
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: MeasureOverride(Size)
  nameWithType: AccessText.MeasureOverride(Size)
  fullName: System.Windows.Controls.AccessText.MeasureOverride(Size)
- uid: System.Windows.Controls.AccessText.System#Windows#Markup#IAddChild#AddChild(System.Object)
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: AccessText.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Controls.AccessText.System.Windows.Markup.IAddChild.AddChild(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Controls.AccessText.System#Windows#Markup#IAddChild#AddText(System.String)
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: AccessText.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Controls.AccessText.System.Windows.Markup.IAddChild.AddText(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Controls.AccessText.Text
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: Text
  nameWithType: AccessText.Text
  fullName: System.Windows.Controls.AccessText.Text
- uid: System.Windows.Controls.AccessText.TextAlignment
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: TextAlignment
  nameWithType: AccessText.TextAlignment
  fullName: System.Windows.Controls.AccessText.TextAlignment
- uid: System.Windows.TextAlignment
  parent: System.Windows
  isExternal: false
  name: TextAlignment
  nameWithType: TextAlignment
  fullName: System.Windows.TextAlignment
- uid: System.Windows.Controls.AccessText.TextAlignmentProperty
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: TextAlignmentProperty
  nameWithType: AccessText.TextAlignmentProperty
  fullName: System.Windows.Controls.AccessText.TextAlignmentProperty
- uid: System.Windows.Controls.AccessText.TextDecorations
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: TextDecorations
  nameWithType: AccessText.TextDecorations
  fullName: System.Windows.Controls.AccessText.TextDecorations
- uid: System.Windows.TextDecorationCollection
  parent: System.Windows
  isExternal: false
  name: TextDecorationCollection
  nameWithType: TextDecorationCollection
  fullName: System.Windows.TextDecorationCollection
- uid: System.Windows.Controls.AccessText.TextDecorationsProperty
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: TextDecorationsProperty
  nameWithType: AccessText.TextDecorationsProperty
  fullName: System.Windows.Controls.AccessText.TextDecorationsProperty
- uid: System.Windows.Controls.AccessText.TextEffects
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: TextEffects
  nameWithType: AccessText.TextEffects
  fullName: System.Windows.Controls.AccessText.TextEffects
- uid: System.Windows.Media.TextEffectCollection
  parent: System.Windows.Media
  isExternal: false
  name: TextEffectCollection
  nameWithType: TextEffectCollection
  fullName: System.Windows.Media.TextEffectCollection
- uid: System.Windows.Controls.AccessText.TextEffectsProperty
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: TextEffectsProperty
  nameWithType: AccessText.TextEffectsProperty
  fullName: System.Windows.Controls.AccessText.TextEffectsProperty
- uid: System.Windows.Controls.AccessText.TextProperty
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: TextProperty
  nameWithType: AccessText.TextProperty
  fullName: System.Windows.Controls.AccessText.TextProperty
- uid: System.Windows.Controls.AccessText.TextTrimming
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: TextTrimming
  nameWithType: AccessText.TextTrimming
  fullName: System.Windows.Controls.AccessText.TextTrimming
- uid: System.Windows.TextTrimming
  parent: System.Windows
  isExternal: false
  name: TextTrimming
  nameWithType: TextTrimming
  fullName: System.Windows.TextTrimming
- uid: System.Windows.Controls.AccessText.TextTrimmingProperty
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: TextTrimmingProperty
  nameWithType: AccessText.TextTrimmingProperty
  fullName: System.Windows.Controls.AccessText.TextTrimmingProperty
- uid: System.Windows.Controls.AccessText.TextWrapping
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: TextWrapping
  nameWithType: AccessText.TextWrapping
  fullName: System.Windows.Controls.AccessText.TextWrapping
- uid: System.Windows.TextWrapping
  parent: System.Windows
  isExternal: false
  name: TextWrapping
  nameWithType: TextWrapping
  fullName: System.Windows.TextWrapping
- uid: System.Windows.Controls.AccessText.TextWrappingProperty
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: TextWrappingProperty
  nameWithType: AccessText.TextWrappingProperty
  fullName: System.Windows.Controls.AccessText.TextWrappingProperty
- uid: System.Windows.Controls.AccessText.VisualChildrenCount
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: VisualChildrenCount
  nameWithType: AccessText.VisualChildrenCount
  fullName: System.Windows.Controls.AccessText.VisualChildrenCount
- uid: System.Windows.Controls.AccessText.#ctor*
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: AccessText
  nameWithType: AccessText.AccessText
- uid: System.Windows.Controls.AccessText.AccessKey*
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: AccessKey
  nameWithType: AccessText.AccessKey
- uid: System.Windows.Controls.AccessText.ArrangeOverride*
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: ArrangeOverride
  nameWithType: AccessText.ArrangeOverride
- uid: System.Windows.Controls.AccessText.Background*
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: Background
  nameWithType: AccessText.Background
- uid: System.Windows.Controls.AccessText.BaselineOffset*
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: BaselineOffset
  nameWithType: AccessText.BaselineOffset
- uid: System.Windows.Controls.AccessText.FontFamily*
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: FontFamily
  nameWithType: AccessText.FontFamily
- uid: System.Windows.Controls.AccessText.FontSize*
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: FontSize
  nameWithType: AccessText.FontSize
- uid: System.Windows.Controls.AccessText.FontStretch*
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: FontStretch
  nameWithType: AccessText.FontStretch
- uid: System.Windows.Controls.AccessText.FontStyle*
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: FontStyle
  nameWithType: AccessText.FontStyle
- uid: System.Windows.Controls.AccessText.FontWeight*
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: FontWeight
  nameWithType: AccessText.FontWeight
- uid: System.Windows.Controls.AccessText.Foreground*
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: Foreground
  nameWithType: AccessText.Foreground
- uid: System.Windows.Controls.AccessText.GetVisualChild*
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: GetVisualChild
  nameWithType: AccessText.GetVisualChild
- uid: System.Windows.Controls.AccessText.LineHeight*
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: LineHeight
  nameWithType: AccessText.LineHeight
- uid: System.Windows.Controls.AccessText.LineStackingStrategy*
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: LineStackingStrategy
  nameWithType: AccessText.LineStackingStrategy
- uid: System.Windows.Controls.AccessText.LogicalChildren*
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: LogicalChildren
  nameWithType: AccessText.LogicalChildren
- uid: System.Windows.Controls.AccessText.MeasureOverride*
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: MeasureOverride
  nameWithType: AccessText.MeasureOverride
- uid: System.Windows.Controls.AccessText.System#Windows#Markup#IAddChild#AddChild*
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild
  nameWithType: AccessText.System.Windows.Markup.IAddChild.AddChild
- uid: System.Windows.Controls.AccessText.System#Windows#Markup#IAddChild#AddText*
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText
  nameWithType: AccessText.System.Windows.Markup.IAddChild.AddText
- uid: System.Windows.Controls.AccessText.Text*
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: Text
  nameWithType: AccessText.Text
- uid: System.Windows.Controls.AccessText.TextAlignment*
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: TextAlignment
  nameWithType: AccessText.TextAlignment
- uid: System.Windows.Controls.AccessText.TextDecorations*
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: TextDecorations
  nameWithType: AccessText.TextDecorations
- uid: System.Windows.Controls.AccessText.TextEffects*
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: TextEffects
  nameWithType: AccessText.TextEffects
- uid: System.Windows.Controls.AccessText.TextTrimming*
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: TextTrimming
  nameWithType: AccessText.TextTrimming
- uid: System.Windows.Controls.AccessText.TextWrapping*
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: TextWrapping
  nameWithType: AccessText.TextWrapping
- uid: System.Windows.Controls.AccessText.VisualChildrenCount*
  parent: System.Windows.Controls.AccessText
  isExternal: false
  name: VisualChildrenCount
  nameWithType: AccessText.VisualChildrenCount
