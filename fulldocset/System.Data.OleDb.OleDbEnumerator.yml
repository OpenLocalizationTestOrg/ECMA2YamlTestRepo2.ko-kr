### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbEnumerator
  id: OleDbEnumerator
  children:
  - System.Data.OleDb.OleDbEnumerator.#ctor
  - System.Data.OleDb.OleDbEnumerator.GetElements
  - System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)
  - System.Data.OleDb.OleDbEnumerator.GetRootEnumerator
  langs:
  - csharp
  name: OleDbEnumerator
  nameWithType: OleDbEnumerator
  fullName: System.Data.OleDb.OleDbEnumerator
  type: Class
  summary: "로컬 네트워크에서 사용 가능한 모든 OLE DB 공급자를 열거 하기 위한 메커니즘을 제공 합니다."
  syntax:
    content: public sealed class OleDbEnumerator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: OleDbEnumerator()
  nameWithType: OleDbEnumerator.OleDbEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.OleDbEnumerator()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "인스턴스를 만듭니다는 <xref href=&quot;System.Data.OleDb.OleDbEnumerator&quot;> </xref> 클래스입니다."
  syntax:
    content: public OleDbEnumerator ();
    parameters: []
  overload: System.Data.OleDb.OleDbEnumerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.GetElements
  id: GetElements
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: GetElements()
  nameWithType: OleDbEnumerator.GetElements()
  fullName: System.Data.OleDb.OleDbEnumerator.GetElements()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "검색 한 <xref href=&quot;System.Data.DataTable&quot;> </xref> 표시 되는 모든 OLE DB 공급자에 대 한 정보가 들어 있는입니다."
  remarks: "이 메서드에 의해 반환 되는 테이블에는 모두 문자열을 포함 하는 다음 열: | 열 서 수 | 열 | 설명 |   |--------------------|------------|-----------------|   |&0; | SOURCES_NAME | 네이티브 ole DB 데이터 원본을 또는 열거자의 고정 이름입니다. |   |&1; | SOURCES_PARSENAME | IParseDisplayName 네이티브 COM 인터페이스를 사용 하 여 모니커로 변환할 수 있는 사용자를 읽을 수 있는 이름입니다. 네이티브 OLE DB 원본의 행 집합에서 반환 된 SOURCES_PARSENAME 열에 해당 합니다. |   |&2; | SOURCES_DESCRIPTION | 네이티브 OLE DB 데이터 원본에 대 한 설명입니다. 네이티브 OLE DB 원본의 행 집합에서 반환 된 SOURCES_DESCRIPTION 열에 해당 합니다. |   |&3; | SOURCES_TYPE | 다음 열거형 멤버 중 하나: 바인더 (0), DataSource_MDP (1), (2) DataSource_TDP, 열거자 (3). 이러한 값에 해당 하는 네이티브 OLE DB 원본의 행 집합의 SOURCES_TYPE 열에 반환 됩니다. |   |&4; | SOURCES_ISPARENT | 열거자에만 적용 가능 합니다. 경우 `true`, GetSourcesRowset 호출 된 동일한 열거자에 항목이 적용 되도록 나타냅니다, 암시 하위 열거형에도 포함 되어 있습니다. 네이티브 OLE DB 원본의 행 집합의 SOURCES_ISPARENT 열에 해당 |   |&5; | SOURCES_CLSID | 사람이 읽을 수 이름 IParseDisplayName 네이티브 COM 인터페이스를 사용 하 여 모니커로 변환할 수 있습니다. 네이티브 OLE DB 원본의 행 집합에서 반환 된 SOURCES_CLSID 열에 해당 합니다. |"
  example:
  - "The following console application retrieves information about all the visible OLE DB providers and displays the information in the console window.  \n  \n```vb#  \nImports System.Data  \nImports System.Data.OleDb  \n  \nModule Module1  \n  \nSub Main()  \n  Dim enumerator As New OleDbEnumerator  \n  Dim table As System.Data.DataTable = enumerator.GetElements()  \n  \n  DisplayData(table)  \n  \n   Console.WriteLine(\"Press any key to continue.\")  \n   Console.ReadKey()  \n End Sub  \n  \n Private Sub DisplayData(ByVal table As DataTable)  \n   For Each row As DataRow In table.Rows  \n     For Each col As DataColumn In table.Columns  \n       Console.WriteLine(\"{0} = {1}\", col.ColumnName, row(col))  \n     Next  \n     Console.WriteLine(\"==================================\")  \n   Next  \n End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System;  \nusing System.Data;  \nusing System.Data.OleDb;  \n  \nclass Program  \n{  \n static void Main()  \n {  \n   OleDbEnumerator enumerator = new OleDbEnumerator();  \n   DataTable table = enumerator.GetElements();  \n  \n   DisplayData(table);  \n  \n   Console.WriteLine(\"Press any key to continue.\");  \n   Console.ReadKey();  \n }  \n  \n static void DisplayData(DataTable table)  \n {  \n   foreach (DataRow row in table.Rows)  \n   {  \n     foreach (DataColumn col in table.Columns)  \n     {  \n       Console.WriteLine(\"{0} = {1}\", col.ColumnName, row[col]);  \n     }  \n     Console.WriteLine(\"==================================\");  \n   }  \n }  \n}  \n```"
  syntax:
    content: public System.Data.DataTable GetElements ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "반환 된 <xref href=&quot;System.Data.DataTable&quot;> </xref> 표시 되는 OLE DB 공급자에 대 한 정보가 들어 있는입니다."
  overload: System.Data.OleDb.OleDbEnumerator.GetElements*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "공급자 ISourcesRowset을 지원 하지 않습니다."
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "기본 공급자에서 예외가 발생 했습니다."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)
  id: GetEnumerator(System.Type)
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: GetEnumerator(Type)
  nameWithType: OleDbEnumerator.GetEnumerator(Type)
  fullName: System.Data.OleDb.OleDbEnumerator.GetEnumerator(Type)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "특정 OLE DB 열거자를 사용 하 여 반환 된 <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> 인스턴스를 필요로 하지 않고 현재 설치 된 OLE DB 공급자에 대 한 정보를 포함 하는 <xref href=&quot;System.Data.OleDb.OleDbEnumerator&quot;> </xref> 클래스입니다."
  remarks: "이 메서드에 의해 반환 되는 판독기에는 모두 문자열을 포함 하는 다음 열: | 열 서 수 | 열 | 설명 |   |--------------------|------------|-----------------|   |&0; | SOURCES_NAME | 네이티브 OLE DB 데이터 원본 또는 열거자의 고정 이름입니다. |   |&1; | SOURCES_PARSENAME | 네이티브 COM 인터페이스를 사용 하 여 모니커로 변환할 수 있는 사용자를 읽을 수 있는 이름 **IParseDisplayName**합니다. 네이티브 OLE DB 원본의 행 집합에서 반환 된 SOURCES_PARSENAME 열에 해당 합니다. |   |&2; | SOURCES_DESCRIPTION | 네이티브 OLE DB 데이터 원본에 대 한 설명입니다. 네이티브 OLE DB 원본의 행 집합에서 반환 된 SOURCES_DESCRIPTION 열에 해당 합니다. |   |&3; | SOURCES_TYPE | 다음 열거형 멤버 중 하나: 바인더 (0), DataSource_MDP (1), (2) DataSource_TDP, 열거자 (3). 이러한 값에 해당 하는 네이티브 OLE DB 원본의 행 집합의 SOURCES_TYPE 열에 반환 됩니다. |   |&4; | SOURCES_ISPARENT | 열거자에만 적용 가능 합니다. 경우 `true`, 항목에 동일한 열거자에 적용 되는지 나타내는 **GetSourcesRowset** 하위 열거형에도 포함 되어 암시 호출 되었습니다. 네이티브 OLE DB 원본의 행 집합의 SOURCES_ISPARENT 열에 해당 |       OLE DB에서는 MSDAENUM, MSDASQL 열거자, SQLNCLI 열거자, SQLOLEDB 열거자 등을 비롯 한 여러 열거자 구성 요소를 제공 합니다. 열거자 구성 요소 및 사용 하는 방법에 대 한 자세한 내용은 참조는 [OLE DB Programmer&quot;s Reference](http://go.microsoft.com/fwlink/?LinkId=45232)합니다."
  example:
  - "The following console application uses the MSDAENUM component to retrieve information about all the OLE DB providers and displays the information in the console window.  \n  \n```vb#  \nImports System.Data  \nImports System.Data.OleDb  \n  \nModule Module1  \n  \n  Sub Main()  \n    Dim enumerator As New OleDbEnumerator  \n    Dim reader As OleDbDataReader = _  \n     OleDbEnumerator.GetEnumerator(Type.GetTypeFromProgID(\"MSDAENUM\"))  \n  \n    DisplayData(reader)  \n  \n    Console.WriteLine(\"Press any key to continue.\")  \n    Console.ReadKey()  \n  End Sub  \n  \n  Private Sub DisplayData(ByVal reader As OleDbDataReader)  \n    While reader.Read()  \n      For i As Integer = 0 To reader.FieldCount - 1  \n        Console.WriteLine(\"{0} = {1}\", _  \n         reader.GetName(i), reader.GetValue(i))  \n      Next  \n      Console.WriteLine(\"==================================\")  \n    End While  \n  \n  End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System;  \nusing System.Data;  \nusing System.Data.OleDb;  \n  \nclass Program  \n{  \n static void Main()  \n {  \n   OleDbDataReader reader =   \n     OleDbEnumerator.GetEnumerator(Type.GetTypeFromProgID(\"MSDAENUM\"));  \n  \n   DisplayData(reader);  \n  \n   Console.WriteLine(\"Press any key to continue.\");  \n   Console.ReadKey();  \n }  \n  \n static void DisplayData(OleDbDataReader reader)  \n {  \n   while (reader.Read())  \n   {  \n     for (int i = 0; i < reader.FieldCount; i++)  \n     {  \n       Console.WriteLine(\"{0} = {1}\",  \n        reader.GetName(i), reader.GetValue(i));  \n     }  \n     Console.WriteLine(\"==================================\");  \n   }  \n }  \n}  \n```"
  syntax:
    content: public static System.Data.OleDb.OleDbDataReader GetEnumerator (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>.</xref:System.Type>"
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "반환 된 <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> 지정한 OLE DB 열거자를 사용 하 여 요청한 OLE DB 공급자에 대 한 정보가 들어 있는입니다."
  overload: System.Data.OleDb.OleDbEnumerator.GetEnumerator*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "공급자를 지원 하지 않는 **ISourcesRowset**합니다."
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "기본 공급자에서 예외가 발생 했습니다."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator
  id: GetRootEnumerator
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: GetRootEnumerator()
  nameWithType: OleDbEnumerator.GetRootEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "반환 된 <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> 인스턴스를 필요로 하지 않고 현재 설치 된 OLE DB 공급자에 대 한 정보를 포함 하는 <xref href=&quot;System.Data.OleDb.OleDbEnumerator&quot;> </xref> 클래스입니다."
  remarks: "이 메서드에서 반환 하는 판독기에는 모두 문자열을 포함 하는 다음 열: | 열 서 수 | 열 | 설명 |   |--------------------|------------|-----------------|   |&0; | SOURCES_NAME | 네이티브 ole DB 데이터 원본을 또는 열거자의 고정 이름입니다. |   |&1; | SOURCES_PARSENAME | IParseDisplayName 네이티브 COM 인터페이스를 사용 하 여 모니커로 변환할 수 있는 사용자를 읽을 수 있는 이름입니다. 네이티브 OLE DB 원본의 행 집합에서 반환 된 SOURCES_PARSENAME 열에 해당 합니다. |   |&2; | SOURCES_DESCRIPTION | 네이티브 OLE DB 데이터 원본에 대 한 설명입니다. 네이티브 OLE DB 원본의 행 집합에서 반환 된 SOURCES_DESCRIPTION 열에 해당 합니다. |   |&3; | SOURCES_TYPE | 다음 열거형 멤버 중 하나: 바인더 (0), DataSource_MDP (1), (2) DataSource_TDP, 열거자 (3). 이러한 값에 해당 하는 네이티브 OLE DB 원본의 행 집합의 SOURCES_TYPE 열에 반환 됩니다. |   |&4; | SOURCES_ISPARENT | 열거자에만 적용 가능 합니다. 경우 `true`, GetSourcesRowset 호출 된 동일한 열거자에 항목이 적용 되도록 나타냅니다, 암시 하위 열거형에도 포함 되어 있습니다. 네이티브 OLE DB 원본의 행 집합의 SOURCES_ISPARENT 열에 해당 |   |&5; | SOURCES_CLSID | 사람이 읽을 수 이름 IParseDisplayName 네이티브 COM 인터페이스를 사용 하 여 모니커로 변환할 수 있습니다. 네이티브 OLE DB 원본의 행 집합에서 반환 된 SOURCES_CLSID 열에 해당 합니다. |"
  example:
  - "The following console application retrieves information about all the visible OLE DB providers and displays the information in the console window.  \n  \n```vb#  \nImports System.Data  \nImports System.Data.OleDb  \n  \nModule Module1  \n  \n  Sub Main()  \n    Dim enumerator As New OleDbEnumerator  \n    Dim reader As OleDbDataReader = OleDbEnumerator.GetRootEnumerator()  \n  \n    DisplayData(reader)  \n  \n    Console.WriteLine(\"Press any key to continue.\")  \n    Console.ReadKey()  \n  End Sub  \n  \n  Private Sub DisplayData(ByVal reader As OleDbDataReader)  \n    While reader.Read()  \n      For i As Integer = 0 To reader.FieldCount - 1  \n        Console.WriteLine(\"{0} = {1}\", _  \n         reader.GetName(i), reader.GetValue(i))  \n      Next  \n      Console.WriteLine(\"==================================\")  \n    End While  \n  \n  End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System;  \nusing System.Data;  \nusing System.Data.OleDb;  \n  \nclass Program  \n{  \n static void Main()  \n {  \n   OleDbDataReader reader = OleDbEnumerator.GetRootEnumerator();  \n  \n   DisplayData(reader);  \n  \n   Console.WriteLine(\"Press any key to continue.\");  \n   Console.ReadKey();  \n }  \n  \n static void DisplayData(OleDbDataReader reader)  \n {  \n   while (reader.Read())  \n   {  \n     for (int i = 0; i < reader.FieldCount; i++)  \n     {  \n       Console.WriteLine(\"{0} = {1}\",  \n        reader.GetName(i), reader.GetValue(i));  \n     }  \n     Console.WriteLine(\"==================================\");  \n   }  \n }  \n}  \n```"
  syntax:
    content: public static System.Data.OleDb.OleDbDataReader GetRootEnumerator ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "반환 된 <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> 표시 되는 OLE DB 공급자에 대 한 정보가 들어 있는입니다."
  overload: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "공급자 ISourcesRowset을 지원 하지 않습니다."
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "기본 공급자에서 예외가 발생 했습니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Data.OleDb.OleDbException
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbException
  nameWithType: OleDbException
  fullName: System.Data.OleDb.OleDbException
- uid: System.Data.OleDb.OleDbEnumerator.#ctor
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: OleDbEnumerator()
  nameWithType: OleDbEnumerator.OleDbEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.OleDbEnumerator()
- uid: System.Data.OleDb.OleDbEnumerator.GetElements
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetElements()
  nameWithType: OleDbEnumerator.GetElements()
  fullName: System.Data.OleDb.OleDbEnumerator.GetElements()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetEnumerator(Type)
  nameWithType: OleDbEnumerator.GetEnumerator(Type)
  fullName: System.Data.OleDb.OleDbEnumerator.GetEnumerator(Type)
- uid: System.Data.OleDb.OleDbDataReader
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbDataReader
  nameWithType: OleDbDataReader
  fullName: System.Data.OleDb.OleDbDataReader
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetRootEnumerator()
  nameWithType: OleDbEnumerator.GetRootEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator()
- uid: System.Data.OleDb.OleDbEnumerator.#ctor*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: OleDbEnumerator
  nameWithType: OleDbEnumerator.OleDbEnumerator
- uid: System.Data.OleDb.OleDbEnumerator.GetElements*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetElements
  nameWithType: OleDbEnumerator.GetElements
- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: OleDbEnumerator.GetEnumerator
- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetRootEnumerator
  nameWithType: OleDbEnumerator.GetRootEnumerator
