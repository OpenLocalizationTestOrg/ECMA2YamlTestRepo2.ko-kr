### YamlMime:ManagedReference
items:
- uid: System.Net.Configuration.HttpListenerTimeoutsElement
  id: HttpListenerTimeoutsElement
  children:
  - System.Net.Configuration.HttpListenerTimeoutsElement.#ctor
  - System.Net.Configuration.HttpListenerTimeoutsElement.DrainEntityBody
  - System.Net.Configuration.HttpListenerTimeoutsElement.EntityBody
  - System.Net.Configuration.HttpListenerTimeoutsElement.HeaderWait
  - System.Net.Configuration.HttpListenerTimeoutsElement.IdleConnection
  - System.Net.Configuration.HttpListenerTimeoutsElement.MinSendBytesPerSecond
  - System.Net.Configuration.HttpListenerTimeoutsElement.Properties
  - System.Net.Configuration.HttpListenerTimeoutsElement.RequestQueue
  langs:
  - csharp
  name: HttpListenerTimeoutsElement
  nameWithType: HttpListenerTimeoutsElement
  fullName: System.Net.Configuration.HttpListenerTimeoutsElement
  type: Class
  summary: "나타냅니다는 <xref href=&quot;System.Net.HttpListener&quot;> </xref> 구성 파일의 시간 제한 요소입니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "시간 제한 요소를 사용 하는 기본 연결 제한 시간 제한에 대 한 정의 <xref:System.Net.HttpListener>인스턴스.</xref:System.Net.HttpListener>"
  syntax:
    content: 'public sealed class HttpListenerTimeoutsElement : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.Net.Configuration.HttpListenerTimeoutsElement.#ctor
  id: '#ctor'
  parent: System.Net.Configuration.HttpListenerTimeoutsElement
  langs:
  - csharp
  name: HttpListenerTimeoutsElement()
  nameWithType: HttpListenerTimeoutsElement.HttpListenerTimeoutsElement()
  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.HttpListenerTimeoutsElement()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.Configuration.HttpListenerTimeoutsElement&quot;> </xref> 클래스입니다."
  syntax:
    content: public HttpListenerTimeoutsElement ();
    parameters: []
  overload: System.Net.Configuration.HttpListenerTimeoutsElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.HttpListenerTimeoutsElement.DrainEntityBody
  id: DrainEntityBody
  parent: System.Net.Configuration.HttpListenerTimeoutsElement
  langs:
  - csharp
  name: DrainEntityBody
  nameWithType: HttpListenerTimeoutsElement.DrainEntityBody
  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.DrainEntityBody
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "에 허용 되는 시간 (초)를 가져옵니다는 <xref href=&quot;System.Net.HttpListener&quot;> </xref> 유지 연결에서 엔터티 본문을 드레이닝 하도록 합니다."
  remarks: "응용 프로그램 보낸 요청에 대 한 응답 및 요청 하기 전에 엔터티 본문 완전히 도착, 후 연결 유지 연결에서의 <xref:System.Net.HttpListener>드레이닝에 잠재적으로 다른 도달 엔터티 본문의 나머지 부분에서는 시작 되는 클라이언트의 요청에서 파이프라인으로 결합 합니다.</xref:System.Net.HttpListener> 나머지 엔터티 본문을 드레이닝 하도록 시간이 허용 되는 기간을 초과 하는 경우 연결 시간이 초과 됩니다."
  syntax:
    content: public TimeSpan DrainEntityBody { get; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>입니다.</xref:System.TimeSpan> 반환       초 단위로 시간에 허용 되는 <xref href=&quot;System.Net.HttpListener&quot;> </xref> 유지 연결에서 엔터티 본문을 드레이닝 하도록 합니다."
  overload: System.Net.Configuration.HttpListenerTimeoutsElement.DrainEntityBody*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.HttpListenerTimeoutsElement.EntityBody
  id: EntityBody
  parent: System.Net.Configuration.HttpListenerTimeoutsElement
  langs:
  - csharp
  name: EntityBody
  nameWithType: HttpListenerTimeoutsElement.EntityBody
  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.EntityBody
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "요청 엔터티 본문을 도착할 때까지 대 한 허용 시간을 초 단위로 가져옵니다."
  remarks: "<xref:System.Net.HttpListener>요청 엔터티 본문에 있을 때이 타이머를 켭니다.</xref:System.Net.HttpListener> 타이머 만료는 초기 구성된 값으로 설정 됩니다. 경우는 <xref:System.Net.HttpListener>표시가 추가 데이터를 받는 연결에 다른 간격 타이머 다시 설정 요청에.</xref:System.Net.HttpListener>"
  syntax:
    content: public TimeSpan EntityBody { get; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>입니다.</xref:System.TimeSpan> 반환       요청 엔터티 본문을 도착할 때까지 대 한 허용 시간 (초) 시간입니다."
  overload: System.Net.Configuration.HttpListenerTimeoutsElement.EntityBody*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.HttpListenerTimeoutsElement.HeaderWait
  id: HeaderWait
  parent: System.Net.Configuration.HttpListenerTimeoutsElement
  langs:
  - csharp
  name: HeaderWait
  nameWithType: HttpListenerTimeoutsElement.HeaderWait
  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.HeaderWait
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "에 허용 되는 시간 (초)를 가져옵니다는 <xref href=&quot;System.Net.HttpListener&quot;> </xref> 요청 헤더를 구문 분석할 수 있습니다."
  remarks: "연결에서 첫 번째 요청은 <xref:System.Net.HttpListener>.</xref:System.Net.HttpListener> 로 라우팅된 후에이 시간 제한이 적용 됩니다.       시스템에는 요청 큐 또는 요청 헤더의 구문 분석 될 때까지 연관 된 URL 그룹을 확인할 수 없습니다. 따라서는 <xref:System.Net.HttpListener>기본값을 적용 <xref:System.Net.HttpListenerTimeoutManager.HeaderWait%2A>연결에서 첫 번째 요청에 대 한 타이머.</xref:System.Net.HttpListenerTimeoutManager.HeaderWait%2A> </xref:System.Net.HttpListener> 연결 유지 연결의 후속 요청이이 속성에 설정 된 값을 사용 합니다."
  syntax:
    content: public TimeSpan HeaderWait { get; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>입니다.</xref:System.TimeSpan> 반환       에 허용 되는 시간을 초 단위로 <xref href=&quot;System.Net.HttpListener&quot;> </xref> 요청 헤더를 구문 분석할 수 있습니다."
  overload: System.Net.Configuration.HttpListenerTimeoutsElement.HeaderWait*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.HttpListenerTimeoutsElement.IdleConnection
  id: IdleConnection
  parent: System.Net.Configuration.HttpListenerTimeoutsElement
  langs:
  - csharp
  name: IdleConnection
  nameWithType: HttpListenerTimeoutsElement.IdleConnection
  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.IdleConnection
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "유휴 연결에 대 한 허용 시간을 초 단위로 가져옵니다."
  remarks: "연결에서 첫 번째 요청은 <xref:System.Net.HttpListener>.</xref:System.Net.HttpListener> 로 라우팅된 후에이 시간 제한이 적용 됩니다.       시스템에는 요청 큐 또는 요청 헤더의 구문 분석 될 때까지 연관 된 URL 그룹을 확인할 수 없습니다. 따라서는 <xref:System.Net.HttpListener>기본값을 적용 <xref:System.Net.HttpListenerTimeoutManager.IdleConnection%2A>연결에서 첫 번째 요청에 대 한 타이머.</xref:System.Net.HttpListenerTimeoutManager.IdleConnection%2A> </xref:System.Net.HttpListener> 연결 유지 연결의 후속 요청이이 속성에 설정 된 값을 사용 합니다."
  syntax:
    content: public TimeSpan IdleConnection { get; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>입니다.</xref:System.TimeSpan> 반환       유휴 연결에 대 한 허용 시간 (초) 시간입니다."
  overload: System.Net.Configuration.HttpListenerTimeoutsElement.IdleConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.HttpListenerTimeoutsElement.MinSendBytesPerSecond
  id: MinSendBytesPerSecond
  parent: System.Net.Configuration.HttpListenerTimeoutsElement
  langs:
  - csharp
  name: MinSendBytesPerSecond
  nameWithType: HttpListenerTimeoutsElement.MinSendBytesPerSecond
  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.MinSendBytesPerSecond
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "초 당 바이트의에서 응답에 대 한 최소 전송 속도를 가져옵니다."
  syntax:
    content: public long MinSendBytesPerSecond { get; }
    return:
      type: System.Int64
      description: "<xref:System.Int64>입니다.</xref:System.Int64> 반환       최소 송신 속도 (바이트)는 응답에 대 한 초 단위입니다."
  overload: System.Net.Configuration.HttpListenerTimeoutsElement.MinSendBytesPerSecond*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.HttpListenerTimeoutsElement.Properties
  id: Properties
  parent: System.Net.Configuration.HttpListenerTimeoutsElement
  langs:
  - csharp
  name: Properties
  nameWithType: HttpListenerTimeoutsElement.Properties
  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "추가할 수 있습니다."
  overload: System.Net.Configuration.HttpListenerTimeoutsElement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.HttpListenerTimeoutsElement.RequestQueue
  id: RequestQueue
  parent: System.Net.Configuration.HttpListenerTimeoutsElement
  langs:
  - csharp
  name: RequestQueue
  nameWithType: HttpListenerTimeoutsElement.RequestQueue
  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.RequestQueue
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "하기 전에 요청 큐를 유지 하려면 요청에 대 한 허용 시간을 초 단위로 가져옵니다는 <xref href=&quot;System.Net.HttpListener&quot;> </xref> 를 선택 합니다."
  syntax:
    content: public TimeSpan RequestQueue { get; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>입니다.</xref:System.TimeSpan> 반환       시간을 초 단위로 허용 하기 전에 요청 큐를 유지 하려면 요청에 대 한는 <xref href=&quot;System.Net.HttpListener&quot;> </xref> 를 선택 합니다."
  overload: System.Net.Configuration.HttpListenerTimeoutsElement.RequestQueue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.Net.Configuration.HttpListenerTimeoutsElement.#ctor
  parent: System.Net.Configuration.HttpListenerTimeoutsElement
  isExternal: false
  name: HttpListenerTimeoutsElement()
  nameWithType: HttpListenerTimeoutsElement.HttpListenerTimeoutsElement()
  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.HttpListenerTimeoutsElement()
- uid: System.Net.Configuration.HttpListenerTimeoutsElement.DrainEntityBody
  parent: System.Net.Configuration.HttpListenerTimeoutsElement
  isExternal: false
  name: DrainEntityBody
  nameWithType: HttpListenerTimeoutsElement.DrainEntityBody
  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.DrainEntityBody
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Net.Configuration.HttpListenerTimeoutsElement.EntityBody
  parent: System.Net.Configuration.HttpListenerTimeoutsElement
  isExternal: false
  name: EntityBody
  nameWithType: HttpListenerTimeoutsElement.EntityBody
  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.EntityBody
- uid: System.Net.Configuration.HttpListenerTimeoutsElement.HeaderWait
  parent: System.Net.Configuration.HttpListenerTimeoutsElement
  isExternal: false
  name: HeaderWait
  nameWithType: HttpListenerTimeoutsElement.HeaderWait
  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.HeaderWait
- uid: System.Net.Configuration.HttpListenerTimeoutsElement.IdleConnection
  parent: System.Net.Configuration.HttpListenerTimeoutsElement
  isExternal: false
  name: IdleConnection
  nameWithType: HttpListenerTimeoutsElement.IdleConnection
  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.IdleConnection
- uid: System.Net.Configuration.HttpListenerTimeoutsElement.MinSendBytesPerSecond
  parent: System.Net.Configuration.HttpListenerTimeoutsElement
  isExternal: false
  name: MinSendBytesPerSecond
  nameWithType: HttpListenerTimeoutsElement.MinSendBytesPerSecond
  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.MinSendBytesPerSecond
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Configuration.HttpListenerTimeoutsElement.Properties
  parent: System.Net.Configuration.HttpListenerTimeoutsElement
  isExternal: false
  name: Properties
  nameWithType: HttpListenerTimeoutsElement.Properties
  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Net.Configuration.HttpListenerTimeoutsElement.RequestQueue
  parent: System.Net.Configuration.HttpListenerTimeoutsElement
  isExternal: false
  name: RequestQueue
  nameWithType: HttpListenerTimeoutsElement.RequestQueue
  fullName: System.Net.Configuration.HttpListenerTimeoutsElement.RequestQueue
- uid: System.Net.Configuration.HttpListenerTimeoutsElement.#ctor*
  parent: System.Net.Configuration.HttpListenerTimeoutsElement
  isExternal: false
  name: HttpListenerTimeoutsElement
  nameWithType: HttpListenerTimeoutsElement.HttpListenerTimeoutsElement
- uid: System.Net.Configuration.HttpListenerTimeoutsElement.DrainEntityBody*
  parent: System.Net.Configuration.HttpListenerTimeoutsElement
  isExternal: false
  name: DrainEntityBody
  nameWithType: HttpListenerTimeoutsElement.DrainEntityBody
- uid: System.Net.Configuration.HttpListenerTimeoutsElement.EntityBody*
  parent: System.Net.Configuration.HttpListenerTimeoutsElement
  isExternal: false
  name: EntityBody
  nameWithType: HttpListenerTimeoutsElement.EntityBody
- uid: System.Net.Configuration.HttpListenerTimeoutsElement.HeaderWait*
  parent: System.Net.Configuration.HttpListenerTimeoutsElement
  isExternal: false
  name: HeaderWait
  nameWithType: HttpListenerTimeoutsElement.HeaderWait
- uid: System.Net.Configuration.HttpListenerTimeoutsElement.IdleConnection*
  parent: System.Net.Configuration.HttpListenerTimeoutsElement
  isExternal: false
  name: IdleConnection
  nameWithType: HttpListenerTimeoutsElement.IdleConnection
- uid: System.Net.Configuration.HttpListenerTimeoutsElement.MinSendBytesPerSecond*
  parent: System.Net.Configuration.HttpListenerTimeoutsElement
  isExternal: false
  name: MinSendBytesPerSecond
  nameWithType: HttpListenerTimeoutsElement.MinSendBytesPerSecond
- uid: System.Net.Configuration.HttpListenerTimeoutsElement.Properties*
  parent: System.Net.Configuration.HttpListenerTimeoutsElement
  isExternal: false
  name: Properties
  nameWithType: HttpListenerTimeoutsElement.Properties
- uid: System.Net.Configuration.HttpListenerTimeoutsElement.RequestQueue*
  parent: System.Net.Configuration.HttpListenerTimeoutsElement
  isExternal: false
  name: RequestQueue
  nameWithType: HttpListenerTimeoutsElement.RequestQueue
