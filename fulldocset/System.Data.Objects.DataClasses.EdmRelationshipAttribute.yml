### YamlMime:ManagedReference
items:
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  id: EdmRelationshipAttribute
  children:
  - System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type)
  - System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.Boolean)
  - System.Data.Objects.DataClasses.EdmRelationshipAttribute.IsForeignKey
  - System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipName
  - System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipNamespaceName
  - System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Multiplicity
  - System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Name
  - System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Type
  - System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Multiplicity
  - System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Name
  - System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Type
  langs:
  - csharp
  name: EdmRelationshipAttribute
  nameWithType: EdmRelationshipAttribute
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  type: Class
  summary: "개념적 모델에 연결에 따라 두 엔터티 형식 간의 관계를 정의 합니다."
  remarks: "이 특성은 각 연결에 대해 인스턴스가 하나인 어셈블리 수준에서 적용 됩니다. 어셈블리에서이 형식의 특성이 여러 개 있을 수 있습니다.       특정 연결에 엔터티 형식의 역할에 대 한 세부 정보는 개념 스키마에 정의 된 연결과 일치 해야 합니다.       연결 된 역할에 대 한 정렬 순서를 정의 하지 않습니다. 즉,이 속성은 연결의 관련된 end를 정의 하는 순서에 관계 없이 정의할 수 있습니다."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=true)]

      public sealed class EdmRelationshipAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type)
  id: '#ctor(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type)'
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  langs:
  - csharp
  name: EdmRelationshipAttribute(String,String,String,RelationshipMultiplicity,Type,String,RelationshipMultiplicity,Type)
  nameWithType: EdmRelationshipAttribute.EdmRelationshipAttribute(String,String,String,RelationshipMultiplicity,Type,String,RelationshipMultiplicity,Type)
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.EdmRelationshipAttribute(String,String,String,RelationshipMultiplicity,Type,String,RelationshipMultiplicity,Type)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "인스턴스를 만듭니다는 <xref href=&quot;System.Data.Objects.DataClasses.EdmRelationshipAttribute&quot;> </xref> 클래스입니다."
  remarks: "`typeof` 연산자 (`GetType` Visual basic에서)를 반환 하는 데 사용 되는 <xref:System.Type>개체에 대 한 개체입니다.</xref:System.Type>"
  syntax:
    content: public EdmRelationshipAttribute (string relationshipNamespaceName, string relationshipName, string role1Name, System.Data.Metadata.Edm.RelationshipMultiplicity role1Multiplicity, Type role1Type, string role2Name, System.Data.Metadata.Edm.RelationshipMultiplicity role2Multiplicity, Type role2Type);
    parameters:
    - id: relationshipNamespaceName
      type: System.String
      description: "이 엔터티가 참여 하는 연결에 대 한 네임 스페이스의 이름입니다."
    - id: relationshipName
      type: System.String
      description: "이 엔터티가 참여 하는 관계의 이름입니다."
    - id: role1Name
      type: System.String
      description: "연결의 한쪽 끝에 있는 형식의 역할의 이름입니다."
    - id: role1Multiplicity
      type: System.Data.Metadata.Edm.RelationshipMultiplicity
      description: "값이 <xref href=&quot;System.Data.Metadata.Edm.RelationshipMultiplicity&quot;> </xref> 하나 이상의 같은 연결의 한쪽 끝 다중성을 나타내는입니다."
    - id: role1Type
      type: System.Type
      description: "연결의 한쪽 끝에 있는 엔터티의 형식입니다."
    - id: role2Name
      type: System.String
      description: "연결의 다른 쪽 끝에서 형식에 대 한 역할의 이름입니다."
    - id: role2Multiplicity
      type: System.Data.Metadata.Edm.RelationshipMultiplicity
      description: "값이 <xref href=&quot;System.Data.Metadata.Edm.RelationshipMultiplicity&quot;> </xref> 하나 또는 그 이상의 같은 연결의 다른 쪽 끝에서 다중성을 나타내는입니다."
    - id: role2Type
      type: System.Type
      description: "연결의 반대쪽 끝에 있는 엔터티의 형식입니다."
  overload: System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.Boolean)
  id: '#ctor(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.Boolean)'
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  langs:
  - csharp
  name: EdmRelationshipAttribute(String,String,String,RelationshipMultiplicity,Type,String,RelationshipMultiplicity,Type,Boolean)
  nameWithType: EdmRelationshipAttribute.EdmRelationshipAttribute(String,String,String,RelationshipMultiplicity,Type,String,RelationshipMultiplicity,Type,Boolean)
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.EdmRelationshipAttribute(String,String,String,RelationshipMultiplicity,Type,String,RelationshipMultiplicity,Type,Boolean)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Objects.DataClasses.EdmRelationshipAttribute&quot;> </xref> 클래스입니다."
  syntax:
    content: public EdmRelationshipAttribute (string relationshipNamespaceName, string relationshipName, string role1Name, System.Data.Metadata.Edm.RelationshipMultiplicity role1Multiplicity, Type role1Type, string role2Name, System.Data.Metadata.Edm.RelationshipMultiplicity role2Multiplicity, Type role2Type, bool isForeignKey);
    parameters:
    - id: relationshipNamespaceName
      type: System.String
      description: "이 엔터티가 참여 하는 연결에 대 한 네임 스페이스의 이름입니다."
    - id: relationshipName
      type: System.String
      description: "이 엔터티가 참여 하는 관계의 이름입니다."
    - id: role1Name
      type: System.String
      description: "연결의 한쪽 끝에 있는 형식의 역할의 이름입니다."
    - id: role1Multiplicity
      type: System.Data.Metadata.Edm.RelationshipMultiplicity
      description: "값이 <xref href=&quot;System.Data.Metadata.Edm.RelationshipMultiplicity&quot;> </xref> 하나 이상의 같은 연결의 한쪽 끝 다중성을 나타내는입니다."
    - id: role1Type
      type: System.Type
      description: "연결의 한쪽 끝에 있는 엔터티의 형식입니다."
    - id: role2Name
      type: System.String
      description: "연결의 다른 쪽 끝에서 형식에 대 한 역할의 이름입니다."
    - id: role2Multiplicity
      type: System.Data.Metadata.Edm.RelationshipMultiplicity
      description: "값이 <xref href=&quot;System.Data.Metadata.Edm.RelationshipMultiplicity&quot;> </xref> 하나 또는 그 이상의 같은 연결의 다른 쪽 끝에서 다중성을 나타내는입니다."
    - id: role2Type
      type: System.Type
      description: "연결의 반대쪽 끝에 있는 엔터티의 형식입니다."
    - id: isForeignKey
      type: System.Boolean
      description: "관계는 외래 키 값에 기반 하는지 여부를 나타내는 값입니다."
  overload: System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.IsForeignKey
  id: IsForeignKey
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  langs:
  - csharp
  name: IsForeignKey
  nameWithType: EdmRelationshipAttribute.IsForeignKey
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.IsForeignKey
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "관계는 외래 키 값에 기반 하는지 여부를 나타내는 부울 값을 가져옵니다."
  syntax:
    content: public bool IsForeignKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관계의 외래 키 값에 기반한 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Objects.DataClasses.EdmRelationshipAttribute.IsForeignKey*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipName
  id: RelationshipName
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  langs:
  - csharp
  name: RelationshipName
  nameWithType: EdmRelationshipAttribute.RelationshipName
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "관계의 이름입니다."
  remarks: "관계의 이름을 지정 하 여는 `Name` 특성에는 `Association` 개념적 모델에이 관계를 정의 하는 요소입니다. 자세한 내용은 참조 [CSDL, SSDL 및 MSL 사양](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public string RelationshipName { get; }
    return:
      type: System.String
      description: "A <xref:System.String>이 정의 된 관계의 이름인 <xref href=&quot;System.Data.Objects.DataClasses.EdmRelationshipAttribute&quot;> </xref>.</xref:System.String>"
  overload: System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipNamespaceName
  id: RelationshipNamespaceName
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  langs:
  - csharp
  name: RelationshipNamespaceName
  nameWithType: EdmRelationshipAttribute.RelationshipNamespaceName
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipNamespaceName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "관계에 대 한 네임 스페이스입니다."
  remarks: "관계의 네임 스페이스는 `Namespace` 특성에는 `Schema` 개념적 모델에이 관계를 정의 하는 연결을 포함 하는 요소입니다. 자세한 내용은 참조 [CSDL, SSDL 및 MSL 사양](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public string RelationshipNamespaceName { get; }
    return:
      type: System.String
      description: "A <xref:System.String>관계에 대 한 네임 스페이스 즉.</xref:System.String>"
  overload: System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipNamespaceName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Multiplicity
  id: Role1Multiplicity
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  langs:
  - csharp
  name: Role1Multiplicity
  nameWithType: EdmRelationshipAttribute.Role1Multiplicity
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Multiplicity
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "관계의 한쪽 끝 다중성입니다."
  remarks: "순서에 관계 없이 연결의 관련된 end를 정의 하는 속성을 정의할 수 있습니다.       복합성으로 지정 됩니다는 `Multiplicity` 특성에는 `End` 개념적 모델에이 관계를 정의 하는 연결에에서는 요소입니다. 자세한 내용은 참조 [CSDL, SSDL 및 MSL 사양](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public System.Data.Metadata.Edm.RelationshipMultiplicity Role1Multiplicity { get; }
    return:
      type: System.Data.Metadata.Edm.RelationshipMultiplicity
      description: "A <xref href=&quot;System.Data.Metadata.Edm.RelationshipMultiplicity&quot;> </xref> 다중성을 나타내는 값입니다."
  overload: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Multiplicity*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Name
  id: Role1Name
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  langs:
  - csharp
  name: Role1Name
  nameWithType: EdmRelationshipAttribute.Role1Name
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Name
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "관계의 한쪽 끝 역할 이름입니다."
  remarks: "역할 이름은으로 지정 됩니다는 `Role` 특성에는 `End` 개념적 모델에이 관계를 정의 하는 연결에에서 대 한 요소입니다. 자세한 내용은 참조 [CSDL, SSDL 및 MSL 사양](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public string Role1Name { get; }
    return:
      type: System.String
      description: "A <xref:System.String>역할의 이름입니다.</xref:System.String>"
  overload: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Name*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Type
  id: Role1Type
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  langs:
  - csharp
  name: Role1Type
  nameWithType: EdmRelationshipAttribute.Role1Type
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Type
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "관계의 한쪽 끝에 있는 엔터티의 형식입니다."
  remarks: "순서에 관계 없이 연결의 관련된 end를 정의 하는 속성을 정의할 수 있습니다.       형식 이름은으로 지정 됩니다는 `Type` 특성에는 `End` 개념적 모델에이 관계를 정의 하는 연결에에서 대 한 요소입니다. 자세한 내용은 참조 [CSDL, SSDL 및 MSL 사양](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public Type Role1Type { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>이 연결의이 끝에 있는 개체의 형식인.</xref:System.Type>"
  overload: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Type*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Multiplicity
  id: Role2Multiplicity
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  langs:
  - csharp
  name: Role2Multiplicity
  nameWithType: EdmRelationshipAttribute.Role2Multiplicity
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Multiplicity
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "관계의 다른 쪽 끝에서 다중성입니다."
  remarks: "순서에 관계 없이 연결의 관련된 end를 정의 하는 속성을 정의할 수 있습니다.       복합성으로 지정 됩니다는 `Multiplicity` 특성에는 `End` 개념적 모델에이 관계를 정의 하는 연결에에서는 요소입니다. 자세한 내용은 참조 [CSDL, SSDL 및 MSL 사양](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public System.Data.Metadata.Edm.RelationshipMultiplicity Role2Multiplicity { get; }
    return:
      type: System.Data.Metadata.Edm.RelationshipMultiplicity
      description: "A <xref href=&quot;System.Data.Metadata.Edm.RelationshipMultiplicity&quot;> </xref> 다중성을 나타내는 값입니다."
  overload: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Multiplicity*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Name
  id: Role2Name
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  langs:
  - csharp
  name: Role2Name
  nameWithType: EdmRelationshipAttribute.Role2Name
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Name
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "관계의 다른 쪽 끝에서 역할의 이름입니다."
  remarks: "순서에 관계 없이 연결의 관련된 end를 정의 하는 속성을 정의할 수 있습니다.       역할 이름은으로 지정 됩니다는 `Role` 특성에는 `End` 개념적 모델에이 관계를 정의 하는 연결에에서 대 한 요소입니다. 자세한 내용은 참조 [CSDL, SSDL 및 MSL 사양](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public string Role2Name { get; }
    return:
      type: System.String
      description: "A <xref:System.String>역할의 이름입니다.</xref:System.String>"
  overload: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Name*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Type
  id: Role2Type
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  langs:
  - csharp
  name: Role2Type
  nameWithType: EdmRelationshipAttribute.Role2Type
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Type
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "관계의 다른 쪽 end에 있는 엔터티의 형식입니다."
  remarks: "순서에 관계 없이 연결의 관련된 end를 정의 하는 속성을 정의할 수 있습니다.       형식 이름은으로 지정 됩니다는 `Type` 특성에는 `End` 개념적 모델에이 관계를 정의 하는 연결에에서 대 한 요소입니다. 자세한 내용은 참조 [CSDL, SSDL 및 MSL 사양](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public Type Role2Type { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>연결의 다른 쪽 end 개체의 형식인.</xref:System.Type>"
  overload: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type)
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: EdmRelationshipAttribute(String,String,String,RelationshipMultiplicity,Type,String,RelationshipMultiplicity,Type)
  nameWithType: EdmRelationshipAttribute.EdmRelationshipAttribute(String,String,String,RelationshipMultiplicity,Type,String,RelationshipMultiplicity,Type)
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.EdmRelationshipAttribute(String,String,String,RelationshipMultiplicity,Type,String,RelationshipMultiplicity,Type)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Metadata.Edm.RelationshipMultiplicity
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: RelationshipMultiplicity
  nameWithType: RelationshipMultiplicity
  fullName: System.Data.Metadata.Edm.RelationshipMultiplicity
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.Boolean)
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: EdmRelationshipAttribute(String,String,String,RelationshipMultiplicity,Type,String,RelationshipMultiplicity,Type,Boolean)
  nameWithType: EdmRelationshipAttribute.EdmRelationshipAttribute(String,String,String,RelationshipMultiplicity,Type,String,RelationshipMultiplicity,Type,Boolean)
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.EdmRelationshipAttribute(String,String,String,RelationshipMultiplicity,Type,String,RelationshipMultiplicity,Type,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.IsForeignKey
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: IsForeignKey
  nameWithType: EdmRelationshipAttribute.IsForeignKey
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.IsForeignKey
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipName
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: RelationshipName
  nameWithType: EdmRelationshipAttribute.RelationshipName
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipName
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipNamespaceName
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: RelationshipNamespaceName
  nameWithType: EdmRelationshipAttribute.RelationshipNamespaceName
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipNamespaceName
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Multiplicity
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: Role1Multiplicity
  nameWithType: EdmRelationshipAttribute.Role1Multiplicity
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Multiplicity
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Name
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: Role1Name
  nameWithType: EdmRelationshipAttribute.Role1Name
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Name
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Type
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: Role1Type
  nameWithType: EdmRelationshipAttribute.Role1Type
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Type
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Multiplicity
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: Role2Multiplicity
  nameWithType: EdmRelationshipAttribute.Role2Multiplicity
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Multiplicity
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Name
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: Role2Name
  nameWithType: EdmRelationshipAttribute.Role2Name
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Name
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Type
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: Role2Type
  nameWithType: EdmRelationshipAttribute.Role2Type
  fullName: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Type
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor*
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: EdmRelationshipAttribute
  nameWithType: EdmRelationshipAttribute.EdmRelationshipAttribute
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.IsForeignKey*
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: IsForeignKey
  nameWithType: EdmRelationshipAttribute.IsForeignKey
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipName*
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: RelationshipName
  nameWithType: EdmRelationshipAttribute.RelationshipName
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipNamespaceName*
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: RelationshipNamespaceName
  nameWithType: EdmRelationshipAttribute.RelationshipNamespaceName
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Multiplicity*
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: Role1Multiplicity
  nameWithType: EdmRelationshipAttribute.Role1Multiplicity
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Name*
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: Role1Name
  nameWithType: EdmRelationshipAttribute.Role1Name
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Type*
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: Role1Type
  nameWithType: EdmRelationshipAttribute.Role1Type
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Multiplicity*
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: Role2Multiplicity
  nameWithType: EdmRelationshipAttribute.Role2Multiplicity
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Name*
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: Role2Name
  nameWithType: EdmRelationshipAttribute.Role2Name
- uid: System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Type*
  parent: System.Data.Objects.DataClasses.EdmRelationshipAttribute
  isExternal: false
  name: Role2Type
  nameWithType: EdmRelationshipAttribute.Role2Type
