### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.UdpReceiveResult
  id: UdpReceiveResult
  children:
  - System.Net.Sockets.UdpReceiveResult.#ctor(System.Byte[],System.Net.IPEndPoint)
  - System.Net.Sockets.UdpReceiveResult.Buffer
  - System.Net.Sockets.UdpReceiveResult.Equals(System.Net.Sockets.UdpReceiveResult)
  - System.Net.Sockets.UdpReceiveResult.Equals(System.Object)
  - System.Net.Sockets.UdpReceiveResult.GetHashCode
  - System.Net.Sockets.UdpReceiveResult.op_Equality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)
  - System.Net.Sockets.UdpReceiveResult.op_Inequality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)
  - System.Net.Sockets.UdpReceiveResult.RemoteEndPoint
  langs:
  - csharp
  name: UdpReceiveResult
  nameWithType: UdpReceiveResult
  fullName: System.Net.Sockets.UdpReceiveResult
  type: Struct
  summary: "UDP 표시에 대 한 호출에서 결과 정보를 수신 된 <xref:System.Net.Sockets.UdpClient.ReceiveAsync*>메서드.</xref:System.Net.Sockets.UdpClient.ReceiveAsync*>"
  syntax:
    content: 'public struct UdpReceiveResult : IEquatable<System.Net.Sockets.UdpReceiveResult>'
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Net.Sockets.UdpReceiveResult>
  platform:
  - net462
- uid: System.Net.Sockets.UdpReceiveResult.#ctor(System.Byte[],System.Net.IPEndPoint)
  id: '#ctor(System.Byte[],System.Net.IPEndPoint)'
  parent: System.Net.Sockets.UdpReceiveResult
  langs:
  - csharp
  name: UdpReceiveResult(Byte[],IPEndPoint)
  nameWithType: UdpReceiveResult.UdpReceiveResult(Byte[],IPEndPoint)
  fullName: System.Net.Sockets.UdpReceiveResult.UdpReceiveResult(Byte[],IPEndPoint)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.Sockets.UdpReceiveResult&quot;> </xref> 클래스입니다."
  syntax:
    content: public UdpReceiveResult (byte[] buffer, System.Net.IPEndPoint remoteEndPoint);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "UDP 패킷의 받을 데이터에 대 한 버퍼입니다."
    - id: remoteEndPoint
      type: System.Net.IPEndPoint
      description: "UDP 패킷의 원격 끝점입니다."
  overload: System.Net.Sockets.UdpReceiveResult.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpReceiveResult.Buffer
  id: Buffer
  parent: System.Net.Sockets.UdpReceiveResult
  langs:
  - csharp
  name: Buffer
  nameWithType: UdpReceiveResult.Buffer
  fullName: System.Net.Sockets.UdpReceiveResult.Buffer
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "UDP 패킷에서 받은 데이터 버퍼를 가져옵니다."
  syntax:
    content: public byte[] Buffer { get; }
    return:
      type: System.Byte[]
      description: "<xref:System.Byte>입니다.</xref:System.Byte> 반환       A <xref:System.Byte>UDP 패킷을 받은 데이터를 사용 하 여 배열.</xref:System.Byte>"
  overload: System.Net.Sockets.UdpReceiveResult.Buffer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpReceiveResult.Equals(System.Net.Sockets.UdpReceiveResult)
  id: Equals(System.Net.Sockets.UdpReceiveResult)
  parent: System.Net.Sockets.UdpReceiveResult
  langs:
  - csharp
  name: Equals(UdpReceiveResult)
  nameWithType: UdpReceiveResult.Equals(UdpReceiveResult)
  fullName: System.Net.Sockets.UdpReceiveResult.Equals(UdpReceiveResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "이 인스턴스가 지정한 개체와 같은지 여부를 나타내는 값을 반환 합니다."
  syntax:
    content: public bool Equals (System.Net.Sockets.UdpReceiveResult other);
    parameters:
    - id: other
      type: System.Net.Sockets.UdpReceiveResult
      description: "이 인스턴스와 비교할 개체입니다."
    return:
      type: System.Boolean
      description: "<xref:System.Boolean>입니다.</xref:System.Boolean> 반환       <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <code> other </code> 의 인스턴스가 <xref href=&quot;System.Net.Sockets.UdpReceiveResult&quot;> </xref> 인스턴스 값이 고, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.Sockets.UdpReceiveResult.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpReceiveResult.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.Sockets.UdpReceiveResult
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: UdpReceiveResult.Equals(Object)
  fullName: System.Net.Sockets.UdpReceiveResult.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "이 인스턴스가 지정한 개체와 같은지 여부를 나타내는 값을 반환 합니다."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "이 인스턴스와 비교할 개체입니다."
    return:
      type: System.Boolean
      description: "<xref:System.Boolean>입니다.</xref:System.Boolean> 반환       <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <code> obj </code> 의 인스턴스가 <xref href=&quot;System.Net.Sockets.UdpReceiveResult&quot;> </xref> 인스턴스 값이 고, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.Sockets.UdpReceiveResult.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpReceiveResult.GetHashCode
  id: GetHashCode
  parent: System.Net.Sockets.UdpReceiveResult
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: UdpReceiveResult.GetHashCode()
  fullName: System.Net.Sockets.UdpReceiveResult.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "이 인스턴스에 대 한 해시 코드를 반환합니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "<xref:System.Int32>입니다.</xref:System.Int32> 반환       해시 코드입니다."
  overload: System.Net.Sockets.UdpReceiveResult.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpReceiveResult.op_Equality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)
  id: op_Equality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)
  parent: System.Net.Sockets.UdpReceiveResult
  langs:
  - csharp
  name: op_Equality(UdpReceiveResult,UdpReceiveResult)
  nameWithType: UdpReceiveResult.op_Equality(UdpReceiveResult,UdpReceiveResult)
  fullName: System.Net.Sockets.UdpReceiveResult.op_Equality(UdpReceiveResult,UdpReceiveResult)
  type: Operator
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "두 <xref href=&quot;System.Net.Sockets.UdpReceiveResult&quot;> </xref> 인스턴스가 동일 합니다."
  syntax:
    content: public static bool op_Equality (System.Net.Sockets.UdpReceiveResult left, System.Net.Sockets.UdpReceiveResult right);
    parameters:
    - id: left
      type: System.Net.Sockets.UdpReceiveResult
      description: "<xref href=&quot;System.Net.Sockets.UdpReceiveResult&quot;> </xref> 같음 연산자의 왼쪽에 있습니다."
    - id: right
      type: System.Net.Sockets.UdpReceiveResult
      description: "<xref href=&quot;System.Net.Sockets.UdpReceiveResult&quot;> </xref> 같음 연산자의 오른쪽에 인스턴스입니다."
    return:
      type: System.Boolean
      description: "<xref:System.Boolean>입니다.</xref:System.Boolean> 반환       <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Sockets.UdpReceiveResult.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpReceiveResult.op_Inequality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)
  id: op_Inequality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)
  parent: System.Net.Sockets.UdpReceiveResult
  langs:
  - csharp
  name: op_Inequality(UdpReceiveResult,UdpReceiveResult)
  nameWithType: UdpReceiveResult.op_Inequality(UdpReceiveResult,UdpReceiveResult)
  fullName: System.Net.Sockets.UdpReceiveResult.op_Inequality(UdpReceiveResult,UdpReceiveResult)
  type: Operator
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "두 <xref href=&quot;System.Net.Sockets.UdpReceiveResult&quot;> </xref> 인스턴스가 다른 지 합니다."
  syntax:
    content: public static bool op_Inequality (System.Net.Sockets.UdpReceiveResult left, System.Net.Sockets.UdpReceiveResult right);
    parameters:
    - id: left
      type: System.Net.Sockets.UdpReceiveResult
      description: "<xref href=&quot;System.Net.Sockets.UdpReceiveResult&quot;> </xref> 같지 않음 연산자의 왼쪽에 인스턴스입니다."
    - id: right
      type: System.Net.Sockets.UdpReceiveResult
      description: "<xref href=&quot;System.Net.Sockets.UdpReceiveResult&quot;> </xref> 같지 않음 연산자의 오른쪽에 인스턴스입니다."
    return:
      type: System.Boolean
      description: "<xref:System.Boolean>입니다.</xref:System.Boolean> 반환       <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are unequal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Sockets.UdpReceiveResult.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpReceiveResult.RemoteEndPoint
  id: RemoteEndPoint
  parent: System.Net.Sockets.UdpReceiveResult
  langs:
  - csharp
  name: RemoteEndPoint
  nameWithType: UdpReceiveResult.RemoteEndPoint
  fullName: System.Net.Sockets.UdpReceiveResult.RemoteEndPoint
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "UDP 패킷을 받은 원격 끝점을 가져옵니다."
  syntax:
    content: public System.Net.IPEndPoint RemoteEndPoint { get; }
    return:
      type: System.Net.IPEndPoint
      description: "<xref:System.Net.IPEndPoint>입니다.</xref:System.Net.IPEndPoint> 반환       UDP 패킷을 받은 원격 끝점입니다."
  overload: System.Net.Sockets.UdpReceiveResult.RemoteEndPoint*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Net.Sockets.UdpReceiveResult.#ctor(System.Byte[],System.Net.IPEndPoint)
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: UdpReceiveResult(Byte[],IPEndPoint)
  nameWithType: UdpReceiveResult.UdpReceiveResult(Byte[],IPEndPoint)
  fullName: System.Net.Sockets.UdpReceiveResult.UdpReceiveResult(Byte[],IPEndPoint)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.Net.Sockets.UdpReceiveResult.Buffer
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: Buffer
  nameWithType: UdpReceiveResult.Buffer
  fullName: System.Net.Sockets.UdpReceiveResult.Buffer
- uid: System.Net.Sockets.UdpReceiveResult.Equals(System.Net.Sockets.UdpReceiveResult)
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: Equals(UdpReceiveResult)
  nameWithType: UdpReceiveResult.Equals(UdpReceiveResult)
  fullName: System.Net.Sockets.UdpReceiveResult.Equals(UdpReceiveResult)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Sockets.UdpReceiveResult
  parent: System.Net.Sockets
  isExternal: false
  name: UdpReceiveResult
  nameWithType: UdpReceiveResult
  fullName: System.Net.Sockets.UdpReceiveResult
- uid: System.Net.Sockets.UdpReceiveResult.Equals(System.Object)
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: Equals(Object)
  nameWithType: UdpReceiveResult.Equals(Object)
  fullName: System.Net.Sockets.UdpReceiveResult.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Sockets.UdpReceiveResult.GetHashCode
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: GetHashCode()
  nameWithType: UdpReceiveResult.GetHashCode()
  fullName: System.Net.Sockets.UdpReceiveResult.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.UdpReceiveResult.op_Equality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: op_Equality(UdpReceiveResult,UdpReceiveResult)
  nameWithType: UdpReceiveResult.op_Equality(UdpReceiveResult,UdpReceiveResult)
  fullName: System.Net.Sockets.UdpReceiveResult.op_Equality(UdpReceiveResult,UdpReceiveResult)
- uid: System.Net.Sockets.UdpReceiveResult.op_Inequality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: op_Inequality(UdpReceiveResult,UdpReceiveResult)
  nameWithType: UdpReceiveResult.op_Inequality(UdpReceiveResult,UdpReceiveResult)
  fullName: System.Net.Sockets.UdpReceiveResult.op_Inequality(UdpReceiveResult,UdpReceiveResult)
- uid: System.Net.Sockets.UdpReceiveResult.RemoteEndPoint
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: RemoteEndPoint
  nameWithType: UdpReceiveResult.RemoteEndPoint
  fullName: System.Net.Sockets.UdpReceiveResult.RemoteEndPoint
- uid: System.Net.Sockets.UdpReceiveResult.#ctor*
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: UdpReceiveResult
  nameWithType: UdpReceiveResult.UdpReceiveResult
- uid: System.Net.Sockets.UdpReceiveResult.Buffer*
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: Buffer
  nameWithType: UdpReceiveResult.Buffer
- uid: System.Net.Sockets.UdpReceiveResult.Equals*
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: Equals
  nameWithType: UdpReceiveResult.Equals
- uid: System.Net.Sockets.UdpReceiveResult.GetHashCode*
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: GetHashCode
  nameWithType: UdpReceiveResult.GetHashCode
- uid: System.Net.Sockets.UdpReceiveResult.op_Equality*
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: op_Equality
  nameWithType: UdpReceiveResult.op_Equality
- uid: System.Net.Sockets.UdpReceiveResult.op_Inequality*
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: op_Inequality
  nameWithType: UdpReceiveResult.op_Inequality
- uid: System.Net.Sockets.UdpReceiveResult.RemoteEndPoint*
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: RemoteEndPoint
  nameWithType: UdpReceiveResult.RemoteEndPoint
