### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.RijndaelManaged
  id: RijndaelManaged
  children:
  - System.Security.Cryptography.RijndaelManaged.#ctor
  - System.Security.Cryptography.RijndaelManaged.CreateDecryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.RijndaelManaged.CreateEncryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.RijndaelManaged.GenerateIV
  - System.Security.Cryptography.RijndaelManaged.GenerateKey
  langs:
  - csharp
  name: RijndaelManaged
  nameWithType: RijndaelManaged
  fullName: System.Security.Cryptography.RijndaelManaged
  type: Class
  summary: "관리 되는 버전에 액세스 하는 <xref href=&quot;System.Security.Cryptography.Rijndael&quot;> </xref> 알고리즘입니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "이 알고리즘에는 128, 192 또는 256 비트;의 키 길이가 지원 256 비트가 기본값으로 설정 됩니다. 이 알고리즘은 128, 192 또는 256 비트;의 블록 크기 지원. 128 비트로 기본 설정 (<xref:System.Security.Cryptography.Aes>-호환).</xref:System.Security.Cryptography.Aes>       <xref:System.Security.Cryptography.Rijndael>알고리즘은 <xref:System.Security.Cryptography.Aes>.</xref:System.Security.Cryptography.Aes> 의 선행 작업은</xref:System.Security.Cryptography.Rijndael> 사용 해야는 <xref:System.Security.Cryptography.Aes>RijndaelManaged 대신 클래스.</xref:System.Security.Cryptography.Aes> 자세한 내용은 항목을 참조 하십시오. [Rijndael 사이의 차이점 및 AES](http://go.microsoft.com/fwlink/?LinkId=200932) .NET 보안 블로그에서."
  example:
  - "The following example demonstrates how to encrypt and decrypt sample data using the `RijndaelManaged` class.  \n  \n [!code-cs[RijndaelManaged Example#1](~/add/codesnippet/csharp/t-system.security.crypto_90_1.cs)]\n [!code-cpp[RijndaelManaged Example#1](~/add/codesnippet/cpp/t-system.security.crypto_90_1.cpp)]\n [!code-vb[RijndaelManaged Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_90_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class RijndaelManaged : System.Security.Cryptography.Rijndael
  inheritance:
  - System.Object
  - System.Security.Cryptography.SymmetricAlgorithm
  - System.Security.Cryptography.Rijndael
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.Rijndael.Create
  - System.Security.Cryptography.Rijndael.Create(System.String)
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Clear
  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.IV
  - System.Security.Cryptography.SymmetricAlgorithm.IVValue
  - System.Security.Cryptography.SymmetricAlgorithm.Key
  - System.Security.Cryptography.SymmetricAlgorithm.KeySize
  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.Mode
  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Padding
  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)
  platform:
  - net462
- uid: System.Security.Cryptography.RijndaelManaged.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.RijndaelManaged
  langs:
  - csharp
  name: RijndaelManaged()
  nameWithType: RijndaelManaged.RijndaelManaged()
  fullName: System.Security.Cryptography.RijndaelManaged.RijndaelManaged()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.RijndaelManaged&quot;> </xref> 클래스입니다."
  remarks: ''
  example:
  - "The following example creates a new instance of the `RijndaelManaged` class.  \n  \n [!code-cs[RijndaelManaged Example#1](~/add/codesnippet/csharp/m-system.security.crypto_42_1.cs)]\n [!code-cpp[RijndaelManaged Example#1](~/add/codesnippet/cpp/m-system.security.crypto_42_1.cpp)]\n [!code-vb[RijndaelManaged Example#1](~/add/codesnippet/visualbasic/m-system.security.crypto_42_1.vb)]"
  syntax:
    content: public RijndaelManaged ();
    parameters: []
  overload: System.Security.Cryptography.RijndaelManaged.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 클래스는 fips와 호환 되지 않습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.RijndaelManaged.CreateDecryptor(System.Byte[],System.Byte[])
  id: CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.RijndaelManaged
  langs:
  - csharp
  name: CreateDecryptor(Byte[],Byte[])
  nameWithType: RijndaelManaged.CreateDecryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.RijndaelManaged.CreateDecryptor(Byte[],Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "대칭 만듭니다 <xref href=&quot;System.Security.Cryptography.Rijndael&quot;> </xref> 암호 해독기 개체를 지정 된 <> </> *> 및 초기화 벡터 (<>*>)."
  remarks: "사용 하 여 생성 된 암호화 된 메시지를 해독 하는이 메서드는 <xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A>동일한 서명으로 오버 로드.</xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A>       `rgbkey` 크기는 128, 192 또는 256 비트 여야 합니다."
  example:
  - "The following code example demonstrates how to use the CreateDecryptor method to decrypt messages encoded with the same signature parameter.  \n  \n [!code-cs[RijndaelManaged Example#1](~/add/codesnippet/csharp/3451bf93-e30a-44f1-a5c3-_1.cs)]\n [!code-cpp[RijndaelManaged Example#1](~/add/codesnippet/cpp/3451bf93-e30a-44f1-a5c3-_1.cpp)]\n [!code-vb[RijndaelManaged Example#1](~/add/codesnippet/visualbasic/3451bf93-e30a-44f1-a5c3-_1.vb)]"
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "대칭 알고리즘에 사용할 비밀 키입니다. 키 크기는 128, 192 또는 256 비트 여야 합니다."
    - id: rgbIV
      type: System.Byte[]
      description: "대칭 알고리즘에 사용할 IV."
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "대칭 <xref href=&quot;System.Security.Cryptography.Rijndael&quot;> </xref> 암호 해독기 개체입니다."
  overload: System.Security.Cryptography.RijndaelManaged.CreateDecryptor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rgbKey</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <code>rgbIV</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "값은 <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*>속성은 <xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref>, <xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref>, 또는 <xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref>.</xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*>"
  platform:
  - net462
- uid: System.Security.Cryptography.RijndaelManaged.CreateEncryptor(System.Byte[],System.Byte[])
  id: CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.RijndaelManaged
  langs:
  - csharp
  name: CreateEncryptor(Byte[],Byte[])
  nameWithType: RijndaelManaged.CreateEncryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.RijndaelManaged.CreateEncryptor(Byte[],Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "대칭 만듭니다 <xref href=&quot;System.Security.Cryptography.Rijndael&quot;> </xref> 암호기 개체를 지정 된 <> </> *> 및 초기화 벡터 (<>*>)."
  remarks: "사용 하 여 <xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A>이 메서드의 결과 암호를 해독 하려면 동일한 서명으로 오버 로드.</xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A>       `rgbkey` 크기는 128, 192 또는 256 비트 여야 합니다."
  example:
  - "The following code examples demonstrates how to encrypt a message using the `CreateEncryptor` method.  \n  \n [!code-cs[RijndaelManaged Example#1](~/add/codesnippet/csharp/f8d6d4d8-0f2d-4b73-9a84-_1.cs)]\n [!code-cpp[RijndaelManaged Example#1](~/add/codesnippet/cpp/f8d6d4d8-0f2d-4b73-9a84-_1.cpp)]\n [!code-vb[RijndaelManaged Example#1](~/add/codesnippet/visualbasic/f8d6d4d8-0f2d-4b73-9a84-_1.vb)]"
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "대칭 알고리즘에 사용할 비밀 키입니다. 키 크기는 128, 192 또는 256 비트 여야 합니다."
    - id: rgbIV
      type: System.Byte[]
      description: "대칭 알고리즘에 사용할 IV."
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "대칭 <xref href=&quot;System.Security.Cryptography.Rijndael&quot;> </xref> 암호기 개체입니다."
  overload: System.Security.Cryptography.RijndaelManaged.CreateEncryptor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rgbKey</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <code>rgbIV</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "값은 <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*>속성은 <xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref>, <xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref>, 또는 <xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref>.</xref:System.Security.Cryptography.SymmetricAlgorithm.Mode*>"
  platform:
  - net462
- uid: System.Security.Cryptography.RijndaelManaged.GenerateIV
  id: GenerateIV
  parent: System.Security.Cryptography.RijndaelManaged
  langs:
  - csharp
  name: GenerateIV()
  nameWithType: RijndaelManaged.GenerateIV()
  fullName: System.Security.Cryptography.RijndaelManaged.GenerateIV()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "임의 초기화 벡터를 생성 (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>) 알고리즘에 사용할.</xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>"
  remarks: "이 메서드를 사용 하 여 지정 되지 않으면 무작위 IV를 생성 합니다."
  example:
  - >-
    [!code-cs[RijndaelManaged Example#1](~/add/codesnippet/csharp/m-system.security.crypto_19_1.cs)]
     [!code-cpp[RijndaelManaged Example#1](~/add/codesnippet/cpp/m-system.security.crypto_19_1.cpp)]
     [!code-vb[RijndaelManaged Example#1](~/add/codesnippet/visualbasic/m-system.security.crypto_19_1.vb)]
  syntax:
    content: public override void GenerateIV ();
    parameters: []
  overload: System.Security.Cryptography.RijndaelManaged.GenerateIV*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RijndaelManaged.GenerateKey
  id: GenerateKey
  parent: System.Security.Cryptography.RijndaelManaged
  langs:
  - csharp
  name: GenerateKey()
  nameWithType: RijndaelManaged.GenerateKey()
  fullName: System.Security.Cryptography.RijndaelManaged.GenerateKey()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "임의 생성 <xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>알고리즘에 사용할.</xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>"
  remarks: "이 메서드를 사용 하 여 지정 되지 않으면는 임의 키를 생성 합니다."
  example:
  - >-
    [!code-cs[RijndaelManaged Example#1](~/add/codesnippet/csharp/m-system.security.crypto_60_1.cs)]
     [!code-cpp[RijndaelManaged Example#1](~/add/codesnippet/cpp/m-system.security.crypto_60_1.cpp)]
     [!code-vb[RijndaelManaged Example#1](~/add/codesnippet/visualbasic/m-system.security.crypto_60_1.vb)]
  syntax:
    content: public override void GenerateKey ();
    parameters: []
  overload: System.Security.Cryptography.RijndaelManaged.GenerateKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.Rijndael
  isExternal: false
  name: System.Security.Cryptography.Rijndael
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.RijndaelManaged.#ctor
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: RijndaelManaged()
  nameWithType: RijndaelManaged.RijndaelManaged()
  fullName: System.Security.Cryptography.RijndaelManaged.RijndaelManaged()
- uid: System.Security.Cryptography.RijndaelManaged.CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: CreateDecryptor(Byte[],Byte[])
  nameWithType: RijndaelManaged.CreateDecryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.RijndaelManaged.CreateDecryptor(Byte[],Byte[])
- uid: System.Security.Cryptography.ICryptoTransform
  parent: System.Security.Cryptography
  isExternal: false
  name: ICryptoTransform
  nameWithType: ICryptoTransform
  fullName: System.Security.Cryptography.ICryptoTransform
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.RijndaelManaged.CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: CreateEncryptor(Byte[],Byte[])
  nameWithType: RijndaelManaged.CreateEncryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.RijndaelManaged.CreateEncryptor(Byte[],Byte[])
- uid: System.Security.Cryptography.RijndaelManaged.GenerateIV
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: GenerateIV()
  nameWithType: RijndaelManaged.GenerateIV()
  fullName: System.Security.Cryptography.RijndaelManaged.GenerateIV()
- uid: System.Security.Cryptography.RijndaelManaged.GenerateKey
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: GenerateKey()
  nameWithType: RijndaelManaged.GenerateKey()
  fullName: System.Security.Cryptography.RijndaelManaged.GenerateKey()
- uid: System.Security.Cryptography.RijndaelManaged.#ctor*
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: RijndaelManaged
  nameWithType: RijndaelManaged.RijndaelManaged
- uid: System.Security.Cryptography.RijndaelManaged.CreateDecryptor*
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: CreateDecryptor
  nameWithType: RijndaelManaged.CreateDecryptor
- uid: System.Security.Cryptography.RijndaelManaged.CreateEncryptor*
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: CreateEncryptor
  nameWithType: RijndaelManaged.CreateEncryptor
- uid: System.Security.Cryptography.RijndaelManaged.GenerateIV*
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: GenerateIV
  nameWithType: RijndaelManaged.GenerateIV
- uid: System.Security.Cryptography.RijndaelManaged.GenerateKey*
  parent: System.Security.Cryptography.RijndaelManaged
  isExternal: false
  name: GenerateKey
  nameWithType: RijndaelManaged.GenerateKey
