### YamlMime:ManagedReference
items:
- uid: System.Net.Security.SslStream
  id: SslStream
  children:
  - System.Net.Security.SslStream.#ctor(System.IO.Stream)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  - System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  - System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  - System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.CanRead
  - System.Net.Security.SslStream.CanSeek
  - System.Net.Security.SslStream.CanTimeout
  - System.Net.Security.SslStream.CanWrite
  - System.Net.Security.SslStream.CheckCertRevocationStatus
  - System.Net.Security.SslStream.CipherAlgorithm
  - System.Net.Security.SslStream.CipherStrength
  - System.Net.Security.SslStream.Dispose(System.Boolean)
  - System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  - System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  - System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  - System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  - System.Net.Security.SslStream.Flush
  - System.Net.Security.SslStream.HashAlgorithm
  - System.Net.Security.SslStream.HashStrength
  - System.Net.Security.SslStream.IsAuthenticated
  - System.Net.Security.SslStream.IsEncrypted
  - System.Net.Security.SslStream.IsMutuallyAuthenticated
  - System.Net.Security.SslStream.IsServer
  - System.Net.Security.SslStream.IsSigned
  - System.Net.Security.SslStream.KeyExchangeAlgorithm
  - System.Net.Security.SslStream.KeyExchangeStrength
  - System.Net.Security.SslStream.Length
  - System.Net.Security.SslStream.LocalCertificate
  - System.Net.Security.SslStream.Position
  - System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.Net.Security.SslStream.ReadTimeout
  - System.Net.Security.SslStream.RemoteCertificate
  - System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Net.Security.SslStream.SetLength(System.Int64)
  - System.Net.Security.SslStream.SslProtocol
  - System.Net.Security.SslStream.TransportContext
  - System.Net.Security.SslStream.Write(System.Byte[])
  - System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.Net.Security.SslStream.WriteTimeout
  langs:
  - csharp
  name: SslStream
  nameWithType: SslStream
  fullName: System.Net.Security.SslStream
  type: Class
  summary: "(SECURE Socket Layer) 보안 프로토콜을 사용 하 여 서버와 필요에 따라 클라이언트를 인증 하는 클라이언트 서버 통신에 사용 되는 스트림을 제공 합니다."
  remarks: "SSL 프로토콜 기밀성과 무결성 검사는 SslStream를 사용 하 여 전송 된 메시지에 제공 하는 데 도움이 됩니다. 클라이언트와 서버 간에 중요 한 정보를 통신할 때 SslStream에서 제공 하는 SSL 연결을를 사용 해야 합니다. SslStream를 사용 하 여 읽고 네트워크에서 전송 되는 동안 정보를 변조 하지 못하도록 하는 데 도움이 됩니다.       SslStream 인스턴스는 SslStream를 만들 때 제공 하는 스트림을 사용 하 여 데이터를 전송 합니다. 이 내부 스트림을 제공 하는 경우 여부는 SslStream 닫는 내부 스트림을 닫고도 지정할 수 있는 옵션이 있어야 합니다. SslStream 클래스와 함께 사용 되는 일반적으로 <xref:System.Net.Sockets.TcpClient>및 <xref:System.Net.Sockets.TcpListener>클래스.</xref:System.Net.Sockets.TcpListener> </xref:System.Net.Sockets.TcpClient> <xref:System.Net.Sockets.TcpClient.GetStream%2A>메서드는 <xref:System.Net.Sockets.NetworkStream>SslStream 클래스 사용에 적합 한</xref:System.Net.Sockets.NetworkStream> 제공</xref:System.Net.Sockets.TcpClient.GetStream%2A>       SslStream을 만든 후에 서버와 필요에 따라 클라이언트를 인증 합니다. 서버에서 X509를 제공 해야 인증서로 해당 id를 증명 하는 클라이언트도 마찬가지 요청할 수 있습니다. 인증 된 SslStream를 사용 하 여 정보를 전송 하기 전에 수행 되어야 합니다. 클라이언트는 동기 버전을 사용 하 여 인증을 시작 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>인증 완료할 때까지 차단 하는 메서드 또는 비동기 <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>메서드를 완료 하기 위한 인증에 대 한 대기를 차단 하지 않습니다.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> 동기 버전을 사용 하 여 인증을 시작 하는 서버 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>또는 비동기 <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>메서드.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> 클라이언트와 서버가 모두 인증을 시작 해야 합니다.       인증 보안 지원 공급자 (SSPI) 채널 공급자에 의해 처리 됩니다. 해당 클라이언트를 지정 하 여 서버 인증서의 유효성 검사를 제어할 수 있습니다에 지정 된 <xref:System.Net.Security.RemoteCertificateValidationCallback>는 SslStream를 만들 때 위임.</xref:System.Net.Security.RemoteCertificateValidationCallback> 서버를 제공 하 여 유효성 검사를 제어할 수도 있습니다는 <xref:System.Net.Security.RemoteCertificateValidationCallback>위임.</xref:System.Net.Security.RemoteCertificateValidationCallback> 대리자가 참조 하는 메서드는 원격 당사자의 인증서 및 인증서 유효성을 검사 하는 동안 발생 하는 SSPI 오류를 포함 합니다. 서버에서 대리자를 지정 하는 경우 서버에서 클라이언트 인증을 요청 하는 여부에 관계 없이 대리자의 메서드가 호출 되어 참고 합니다. 서버 클라이언트 인증을 요청 하지 않은 경우 서버의 대리자 메서드에 null 인증서 및 인증서 오류의 빈 배열입니다.       서버에서 클라이언트 인증을 요구 하는 경우 클라이언트 인증에 대 한 하나 이상의 인증서를 지정 해야 합니다. 클라이언트에 둘 이상의 인증서를 하는 경우 클라이언트 제공할 수는 <xref:System.Net.Security.LocalCertificateSelectionCallback>를 서버에 대 한 올바른 인증서를 선택 합니다.</xref:System.Net.Security.LocalCertificateSelectionCallback> 클라이언트의 인증서는 현재 사용자의 &quot;My&quot; 인증서 저장소에 있어야 합니다. 에 대 한 인증서를 통해 클라이언트 인증을 지원 하지 않습니다는 <xref:System.Security.Authentication.SslProtocols>프로토콜 (SSL 버전 2).</xref:System.Security.Authentication.SslProtocols>       수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException>, 및는 SslStream 파일이 더 이상 사용할 수 없습니다.</xref:System.Security.Authentication.AuthenticationException> 이 개체를 닫고 가비지 수집기에서 수집할 수 있도록 모든 참조를 제거 해야 합니다.       SSL 핸드셰이크 라고도 하는 인증 프로세스가 성공 하면 서버 (및 필요에 따라 클라이언트)의 id가 설정 되 고 메시지를 교환 하는 클라이언트와 서버에서 사용할 수는 SslStream 합니다. 를 보내거나 받을 정보 하기 전에 서버와 클라이언트는 보안 서비스 및 프로토콜, 알고리즘 및 선택한 장점 무결성 및 기밀성 요구 사항을 충족 하는지 여부를 확인 하려면 SslStream에서 제공 하는 수준을 확인 해야 합니다. 현재 설정이 충분 하지 않으면, 스트림을 닫아야 합니다. SslStream 사용 하 여 제공 하는 보안 서비스를 확인할 수 있습니다는 <xref:System.Net.Security.SslStream.IsEncrypted%2A>및 <xref:System.Net.Security.SslStream.IsSigned%2A>속성.</xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> 다음 표에서 인증, 암호화 및 서명 하는 데이터에 사용 되는 암호화 설정을 보고 하는 요소를 보여 줍니다.      | 요소 | 멤버 |   |-------------|-------------|   | 서버와 필요에 따라 클라이언트를 인증 하는 데 사용 되는 보안 프로토콜. | <xref:System.Net.Security.SslStream.SslProtocol%2A>속성 및 관련된 <xref:System.Security.Authentication.SslProtocols>열거형. |   | 키 교환 알고리즘. | <xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A>속성 및 관련된 <xref:System.Security.Authentication.ExchangeAlgorithmType>열거형. |   | 메시지 무결성 알고리즘. | <xref:System.Net.Security.SslStream.HashAlgorithm%2A>속성 및 관련된 <xref:System.Security.Authentication.HashAlgorithmType>열거형. |   | 메시지 기밀성 알고리즘. | <xref:System.Net.Security.SslStream.CipherAlgorithm%2A>속성 및 관련된 <xref:System.Security.Authentication.CipherAlgorithmType>열거형. |   | 선택한 알고리즘의 강도입니다. | <xref:System.Net.Security.SslStream.KeyExchangeStrength%2A> <xref:System.Net.Security.SslStream.HashStrength%2A>, 및 <xref:System.Net.Security.SslStream.CipherStrength%2A>속성입니다. |       인증이 성공 동기를 사용 하 여 데이터를 보낼 수 있습니다 <xref:System.Net.Security.SslStream.Write%2A>또는 비동기 <xref:System.Net.Security.SslStream.BeginWrite%2A>메서드.</xref:System.Net.Security.SslStream.BeginWrite%2A> </xref:System.Net.Security.SslStream.Write%2A> </xref:System.Net.Security.SslStream.CipherStrength%2A> </xref:System.Net.Security.SslStream.HashStrength%2A> </xref:System.Net.Security.SslStream.KeyExchangeStrength%2A> </xref:System.Security.Authentication.CipherAlgorithmType> </xref:System.Net.Security.SslStream.CipherAlgorithm%2A> </xref:System.Security.Authentication.HashAlgorithmType> </xref:System.Net.Security.SslStream.HashAlgorithm%2A> </xref:System.Security.Authentication.ExchangeAlgorithmType> </xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A> </xref:System.Security.Authentication.SslProtocols> </xref:System.Net.Security.SslStream.SslProtocol%2A> 동기 버전을 사용 하 여 데이터를 받을 수 <xref:System.Net.Security.SslStream.Read%2A>또는 비동기 <xref:System.Net.Security.SslStream.BeginRead%2A>메서드.</xref:System.Net.Security.SslStream.BeginRead%2A> </xref:System.Net.Security.SslStream.Read%2A>       지정한 경우에 <xref:System.Net.Security.SslStream.%23ctor%2A>고 내부 스트림이 열려 남겨 두어야 하면, 완료 되 면 해당 스트림을 닫는 작업을 담당 합니다.를 사용 하 여</xref:System.Net.Security.SslStream.%23ctor%2A>      > [!NOTE] > SslStream 개체를 만드는 응용 프로그램을 일반 사용자의 자격 증명으로 실행, 응용 프로그램 됩니다 권한이 명시적으로 부여 되어 사용자에 게 작업을 수행 하려면 로컬 컴퓨터 저장소에 설치 된 인증서에 액세스할 수 있습니다.       SslStream 가정 하는 다른 시간 초과 <xref:System.IO.IOException>내부 스트림의 때 throw 되는 수는 심각한 예외로 간주 호출자에 의해.</xref:System.IO.IOException> 시간 초과 가비지 반환 후 SslStream 인스턴스를 다시 사용 합니다. 응용 프로그램 해야 <xref:System.IO.Stream.Close%2A>SslStream 및 이러한 경우는 예외를 throw 합니다.</xref:System.IO.Stream.Close%2A>       .NET Framework 4.6에는 안전 하지 않은 암호화 및 해시 알고리즘에 대 한 연결을 차단 하는 새로운 보안 기능이 포함 되어 있습니다. .NET Framework 4.6을 대상으로 지정 및 HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream 등의 Api 통해 TLS/SSL을 사용 하 여 응용 프로그램 기본적으로 보안 수준이 높은 동작을 가져옵니다.       개발자가 RC4 서비스를 지 원하는 기존 SSL3 서비스 또는 TLS와의 상호 운용성을 유지 하기 위해이 동작을 취소 하려고 할 수 있습니다. [이 문서](https://support.microsoft.com/kb/3069494) 를 새 동작을 사용할 수 없습니다. 코드를 수정 하는 방법에 설명 합니다.       TLS 버전을 지정 하지 않고 대신에 시스템 기본값으로 정의 된 TLS 버전을 사용 하는 SslStreams를 인증 하는 방법에 대 한 새 오버 로드를 추가 하는.NET Framework 4.6.3 [SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx)합니다. 나중 시간에 따른 TLS 버전 모범 사례 변경에 따라 기본값을 수정할 수 하는 방법으로 응용 프로그램에서 이러한 메서드를 사용 하지 않아도 다시 빌드하고 앱을 배포 합니다."
  example:
  - "The following code example demonstrates creating an <xref:System.Net.Sockets.TcpListener> that uses the SslStream class to communicate with clients.  \n  \n [!code-cpp[NclSslServerSync#0](~/add/codesnippet/cpp/t-system.net.security.ss_1.cpp)]\n [!code-cs[NclSslServerSync#0](~/add/codesnippet/csharp/t-system.net.security.ss_1.cs)]  \n  \n The following code example demonstrates creating a <xref:System.Net.Sockets.TcpClient> that uses the SslStream class to communicate with a server.  \n  \n [!code-cpp[NclSslClientSync#0](~/add/codesnippet/cpp/t-system.net.security.ss_2.cpp)]\n [!code-cs[NclSslClientSync#0](~/add/codesnippet/csharp/t-system.net.security.ss_2.cs)]"
  syntax:
    content: 'public class SslStream : System.Net.Security.AuthenticatedStream'
  inheritance:
  - System.IO.Stream
  - System.Net.Security.AuthenticatedStream
  implements: []
  inheritedMembers:
  - System.Net.Security.AuthenticatedStream.InnerStream
  - System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream)
  nameWithType: SslStream.SslStream(Stream)
  fullName: System.Net.Security.SslStream.SslStream(Stream)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> 클래스에 지정 된 <xref:System.IO.Stream>.</xref:System.IO.Stream> 사용"
  remarks: "Encryptionpolicy에 대 한 구성 파일에는 값을 지정 하지 않으면는 <xref:System.Net.Security.EncryptionPolicy>기본값으로 <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>에 대 한는 <xref:System.Net.Security.SslStream>생성 된 인스턴스.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       Null 암호화 사용은 암호화 정책을 <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> 로 설정 된 경우에 필요"
  syntax:
    content: public SslStream (System.IO.Stream innerStream);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>에서 사용 하는 개체는 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> 데이터 보내기 및 받기에 대 한.</xref:System.IO.Stream>"
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>읽을 수 없는 경우       -또는- <code>innerStream</code> 쓰기 가능 하지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는- <code>innerStream</code> 같으면 <xref:System.IO.Stream.Null>합니다."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  id: '#ctor(System.IO.Stream,System.Boolean)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean)
  nameWithType: SslStream.SslStream(Stream,Boolean)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> 사용 하 여 지정 된 클래스 <xref:System.IO.Stream>스트림 닫기 동작 및.</xref:System.IO.Stream>"
  remarks: "지정 하는 경우 `true` 에 대 한는 `leaveStreamOpen` 닫는 매개 변수는 <xref:System.Net.Security.SslStream>영향을 주지 않습니다는 `innerStream` 스트림; 명시적으로 닫아야 `innerStream` 합니다.를 더 이상 필요</xref:System.Net.Security.SslStream>       Encryptionpolicy에 대 한 구성 파일에는 값을 지정 하지 않으면는 <xref:System.Net.Security.EncryptionPolicy>기본값으로 <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>에 대 한는 <xref:System.Net.Security.SslStream>생성 된 인스턴스.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       Null 암호화 사용은 암호화 정책을 <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> 로 설정 된 경우에 필요"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/m-system.net.security.ss_5_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/m-system.net.security.ss_5_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>에서 사용 하는 개체는 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> 데이터 보내기 및 받기에 대 한.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "닫기 동작을 나타내는 부울 값은 <xref:System.IO.Stream>에서 사용 하는 개체는 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> 데이터 보내기 및 받기에 대 한.</xref:System.IO.Stream> 이 매개 변수는 내부 스트림의 열려 나타냅니다."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>읽을 수 없는 경우       -또는- <code>innerStream</code> 쓰기 가능 하지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는- <code>innerStream</code> 같으면 <xref:System.IO.Stream.Null>합니다."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> 사용 하 여 지정 된 클래스 <xref:System.IO.Stream>, 스트림 닫기 동작 및 인증서 유효성 검사 대리자.</xref:System.IO.Stream>"
  remarks: "지정 하는 경우 `true` 에 대 한는 `leaveStreamOpen` 닫는 매개 변수는 <xref:System.Net.Security.SslStream>영향을 주지 않습니다는 `innerStream` 스트림; 명시적으로 닫아야 `innerStream` 합니다.를 더 이상 필요</xref:System.Net.Security.SslStream>       `userCertificateValidationCallback` 대리자의 `certificateErrors` 인수 채널 보안 지원 공급자 인터페이스 (SSPI)에서 반환 된 모든 Windows 오류 코드를 포함 합니다. 에 의해 호출 되는 메서드의 반환 값은 `userCertificateValidationCallback` 대리자 인증의 성공 여부를 결정 합니다.       보안 프로토콜 및 암호화 알고리즘은 이미 선택 된 경우는 `userCertificateValidationCallback` 대리자의 메서드를 호출 합니다. 선택한 암호화 알고리즘 및 장점 응용 프로그램에 대 한 충분 한지 여부를 결정 하는 메서드를 사용할 수 있습니다. 메서드가 반환 하지, 하면 `false` 방지 하기 위해는 <xref:System.Net.Security.SslStream>만들어지지 않도록 합니다.</xref:System.Net.Security.SslStream>       Encryptionpolicy에 대 한 구성 파일에는 값을 지정 하지 않으면는 <xref:System.Net.Security.EncryptionPolicy>기본값으로 <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>에 대 한는 <xref:System.Net.Security.SslStream>생성 된 인스턴스.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       Null 암호화 사용은 암호화 정책을 <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> 로 설정 된 경우에 필요      > [!NOTE] > 프레임 워크 만들어질 때 SSL 세션을 캐시 하 고 가능한 경우 새 요청에 대 한 캐시 된 세션을 사용 하려고 합니다. 프레임 워크의 첫 번째 요소를 사용 하 여 SSL 세션을 다시 사용을 시도할 때 <xref:System.Net.HttpWebRequest.ClientCertificates%2A>(있는지 하나), 경우에 익명 세션을 다시 사용 하려고 <xref:System.Net.HttpWebRequest.ClientCertificates%2A>비어.</xref:System.Net.HttpWebRequest.ClientCertificates%2A> </xref:System.Net.HttpWebRequest.ClientCertificates%2A>      > [!NOTE] > 클라이언트 인증서는 SSL 버전 2 프로토콜에서 지원 되지 않습니다."
  example:
  - "The following code example creates an <xref:System.Net.Security.SslStream> and initiates the client portion of the authentication.  \n  \n [!code-cpp[NclSslClientSync#4](~/add/codesnippet/cpp/9eaa69b2-6619-41cf-8f97-_1.cpp)]\n [!code-cs[NclSslClientSync#4](~/add/codesnippet/csharp/9eaa69b2-6619-41cf-8f97-_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>에서 사용 하는 개체는 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> 데이터 보내기 및 받기에 대 한.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "닫기 동작을 나타내는 부울 값은 <xref:System.IO.Stream>에서 사용 하는 개체는 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> 데이터 보내기 및 받기에 대 한.</xref:System.IO.Stream> 이 매개 변수는 내부 스트림의 열려 나타냅니다."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "A <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> 원격측에서 제공 하는 인증서의 유효성 검사를 담당 하는 대리자입니다."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>읽을 수 없는 경우       -또는- <code>innerStream</code> 쓰기 가능 하지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는- <code>innerStream</code> 같으면 <xref:System.IO.Stream.Null>합니다."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> 사용 하 여 지정 된 클래스 <xref:System.IO.Stream>, 닫기 동작, 인증서 유효성 검사 대리자 및 인증서 선택 대리자 스트림.</xref:System.IO.Stream>"
  remarks: "지정 하는 경우 `true` 에 대 한는 `leaveStreamOpen` 닫는 매개 변수는 <xref:System.Net.Security.SslStream>영향을 주지 않습니다는 `innerStream` 스트림; 명시적으로 닫아야 `innerStream` 합니다.를 더 이상 필요</xref:System.Net.Security.SslStream>       `userCertificateValidationCallback` 대리자의 `certificateErrors` 인수 채널 보안 지원 공급자 인터페이스 (SSPI)에서 반환 된 모든 Windows 오류 코드를 포함 합니다. 에 의해 호출 되는 메서드의 반환 값은 `userCertificateValidationCallback` 대리자 인증의 성공 여부를 결정 합니다.       보안 프로토콜 및 암호화 알고리즘은 이미 선택 된 경우는 `userCertificateValidationCallback` 대리자의 메서드를 호출 합니다. 선택한 암호화 알고리즘 및 장점 응용 프로그램에 대 한 충분 한지 여부를 결정 하는 메서드를 사용할 수 있습니다. 메서드가 반환 하지, 하면 `false` 방지 하기 위해는 <xref:System.Net.Security.SslStream>만들어지지 않도록 합니다.</xref:System.Net.Security.SslStream>       `userCertificateSelectionCallback` 대리자는 응용 프로그램에 여러 인증서가 인증서를 동적으로 선택 해야 하는 경우에 유용 합니다. &quot;MY&quot; 저장소에서 인증서는 대리자가 호출 되는 메서드로 전달 됩니다.       Encryptionpolicy에 대 한 구성 파일에는 값을 지정 하지 않으면는 <xref:System.Net.Security.EncryptionPolicy>기본값으로 <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>에 대 한는 <xref:System.Net.Security.SslStream>생성 된 인스턴스.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       Null 암호화 사용은 암호화 정책을 <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> 로 설정 된 경우에 필요      > [!NOTE] > 프레임 워크 만들어질 때 SSL 세션을 캐시 하 고 가능한 경우 새 요청에 대 한 캐시 된 세션을 사용 하려고 합니다. 프레임 워크의 P:System.Net.HttpWebRequest.ClientCertificates (있는 경우), 첫 번째 요소를 사용 하 여 SSL 세션을 다시 사용을 시도할 때 또는 비어 P:System.Net.HttpWebRequest.ClientCertificates 이면 익명 세션을 다시 사용 하려고 합니다."
  example:
  - "The following code example demonstrates calling this constructor. This example is part of a larger example provided for the <xref:System.Net.Security.SslStream> class.  \n  \n [!code-cpp[NclSslClientAsync#6](~/add/codesnippet/cpp/dc8fc9af-8c2a-4c30-be77-_1.cpp)]\n [!code-cs[NclSslClientAsync#6](~/add/codesnippet/csharp/dc8fc9af-8c2a-4c30-be77-_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>에서 사용 하는 개체는 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> 데이터 보내기 및 받기에 대 한.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "닫기 동작을 나타내는 부울 값은 <xref:System.IO.Stream>에서 사용 하는 개체는 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> 데이터 보내기 및 받기에 대 한.</xref:System.IO.Stream> 이 매개 변수는 내부 스트림의 열려 나타냅니다."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "A <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> 원격측에서 제공 하는 인증서의 유효성 검사를 담당 하는 대리자입니다."
    - id: userCertificateSelectionCallback
      type: System.Net.Security.LocalCertificateSelectionCallback
      description: "A <xref href=&quot;System.Net.Security.LocalCertificateSelectionCallback&quot;> </xref> 대리자 인증에 사용 된 인증서를 선택 하는 일을 담당 합니다."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>읽을 수 없는 경우       -또는- <code>innerStream</code> 쓰기 가능 하지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는- <code>innerStream</code> 같으면 <xref:System.IO.Stream.Null>합니다."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> 사용 하 여 지정 된 클래스<xref:System.IO.Stream></xref:System.IO.Stream>"
  remarks: "Null 암호화의 사용은 필수 여 `encryptionPolicy` <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> 로 설정 된"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, System.Net.Security.EncryptionPolicy encryptionPolicy);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>에서 사용 하는 개체는 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> 데이터 보내기 및 받기에 대 한.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "닫기 동작을 나타내는 부울 값은 <xref:System.IO.Stream>에서 사용 하는 개체는 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> 데이터 보내기 및 받기에 대 한.</xref:System.IO.Stream> 이 매개 변수는 내부 스트림의 열려 나타냅니다."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "A <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> 원격측에서 제공 하는 인증서의 유효성 검사를 담당 하는 대리자입니다."
    - id: userCertificateSelectionCallback
      type: System.Net.Security.LocalCertificateSelectionCallback
      description: "A <xref href=&quot;System.Net.Security.LocalCertificateSelectionCallback&quot;> </xref> 대리자 인증에 사용 된 인증서를 선택 하는 일을 담당 합니다."
    - id: encryptionPolicy
      type: System.Net.Security.EncryptionPolicy
      description: "The <xref href=&quot;System.Net.Security.EncryptionPolicy&quot;></xref> to use."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>읽을 수 없는 경우       -또는- <code>innerStream</code> 쓰기 가능 하지 않습니다.       -또는- <code>encryptionPolicy</code> 올바르지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는- <code>innerStream</code> 같으면 <xref:System.IO.Stream.Null>합니다."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  id: AuthenticateAsClient(System.String)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClient(String)
  nameWithType: SslStream.AuthenticateAsClient(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "서버를 인증 하 고 선택적으로 클라이언트 클라이언트는 클라이언트 / 서버 연결에 의해 호출 됩니다."
  remarks: "이 메서드는 <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> 를 사용 하 여 인증 클라이언트 인증서 인증에 사용 됩니다. 인증 동안 인증서 해지 목록을 검사 하지 않습니다. 에 지정 된 값 `targetHost` 서버 인증서의 이름과 일치 해야 합니다.       <xref:System.Net.Security.SslStream.IsEncrypted%2A>및 <xref:System.Net.Security.SslStream.IsSigned%2A>속성에 <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> 어떤 보안 서비스를 사용 하는 결정을</xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> 확인 해야 인증이 성공 하는 경우 확인 된 <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>상호 인증이 발생 했는지 여부를 결정 하는 속성.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream>파일이 더 이상 사용할 수 없습니다.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> 이 개체를 닫고 가비지 수집기에서 수집할 수 있도록 모든 참조를 제거 해야 합니다."
  syntax:
    content: public virtual void AuthenticateAsClient (string targetHost);
    parameters:
    - id: targetHost
      type: System.String
      description: "이 공유 하는 서버의 이름 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>합니다."
  overload: System.Net.Security.SslStream.AuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "인증이 실패 하이 개체를 사용할 수 없는 상태로 남아 있습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "인증이 이미 수행 합니다.       -또는-이 사용 하 여 서버 인증 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> 이전에 시도 했습니다.       -또는-인증 이미 진행 중입니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 닫혀 있습니다."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "서버를 인증 하 고 선택적으로 클라이언트 클라이언트는 클라이언트 / 서버 연결에 의해 호출 됩니다. 인증 프로세스의 지정 된 인증서 컬렉션 및 SSL 프로토콜을 사용 합니다."
  remarks: "<xref:System.Net.Security.SslStream.IsEncrypted%2A>및 <xref:System.Net.Security.SslStream.IsSigned%2A>속성에 <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> 어떤 보안 서비스를 사용 하는 결정을</xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> 확인 해야 인증이 성공 하는 경우 확인 된 <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>상호 인증이 발생 했는지 여부를 결정 하는 속성.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream>파일이 더 이상 사용할 수 없습니다.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> 이 개체를 닫고 가비지 수집기에서 수집할 수 있도록 모든 참조를 제거 해야 합니다.      > [!NOTE] > 클라이언트 인증서는 SSL 버전 2 프로토콜에서 지원 되지 않습니다."
  syntax:
    content: public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: targetHost
      type: System.String
      description: "이 공유 하는 서버의 이름 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>합니다."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> 클라이언트 인증서를 포함 하 합니다."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "<xref:System.Security.Authentication.SslProtocols>인증에 사용 되는 프로토콜을 나타내는 값입니다.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "A <xref:System.Boolean>인증 하는 동안 인증서 해지 목록 선택 되었는지 여부를 지정 하는 값입니다.</xref:System.Boolean>"
  overload: System.Net.Security.SslStream.AuthenticateAsClient*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  id: AuthenticateAsClientAsync(System.String)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClientAsync(String)
  nameWithType: SslStream.AuthenticateAsClientAsync(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "클라이언트는 서버를 인증 하 고 선택적으로 비동기 작업으로는 클라이언트 / 서버 연결에 클라이언트에서 호출 됩니다."
  remarks: "이 메서드는 <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> 를 사용 하 여 인증 클라이언트 인증서 인증에 사용 됩니다. 인증 동안 인증서 해지 목록을 검사 하지 않습니다. 에 지정 된 값 `targetHost` 서버 인증서의 이름과 일치 해야 합니다.       <xref:System.Net.Security.SslStream.IsEncrypted%2A>및 <xref:System.Net.Security.SslStream.IsSigned%2A>속성에 <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> 어떤 보안 서비스를 사용 하는 결정을</xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> 확인 해야 인증이 성공 하는 경우 확인 된 <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>상호 인증이 발생 했는지 여부를 결정 하는 속성.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream>파일이 더 이상 사용할 수 없습니다.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> 이 개체를 닫고 가비지 수집기에서 수집할 수 있도록 모든 참조를 제거 해야 합니다."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost);
    parameters:
    - id: targetHost
      type: System.String
      description: "이 공유 하는 서버의 이름 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>합니다."
    return:
      type: System.Threading.Tasks.Task
      description: "반환 <xref:System.Threading.Tasks.Task>비동기 작업을 나타내는 작업 개체입니다.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "인증이 실패 하이 개체를 사용할 수 없는 상태로 남아 있습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "인증이 이미 수행 합니다.       -또는-이 사용 하 여 서버 인증 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> 이전에 시도 했습니다.       -또는-인증 이미 진행 중입니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 닫혀 있습니다."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "클라이언트는 서버를 인증 하 고 선택적으로 비동기 작업으로는 클라이언트 / 서버 연결에 클라이언트에서 호출 됩니다. 인증 프로세스의 지정 된 인증서 컬렉션 및 SSL 프로토콜을 사용 합니다."
  remarks: "<xref:System.Net.Security.SslStream.IsEncrypted%2A>및 <xref:System.Net.Security.SslStream.IsSigned%2A>속성에 <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> 어떤 보안 서비스를 사용 하는 결정을</xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> 확인 해야 인증이 성공 하는 경우 확인 된 <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>상호 인증이 발생 했는지 여부를 결정 하는 속성.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream>파일이 더 이상 사용할 수 없습니다.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> 이 개체를 닫고 가비지 수집기에서 수집할 수 있도록 모든 참조를 제거 해야 합니다.      > [!NOTE] > 클라이언트 인증서는 SSL 버전 2 프로토콜에서 지원 되지 않습니다."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: targetHost
      type: System.String
      description: "이 공유 하는 서버의 이름 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>합니다."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> 클라이언트 인증서를 포함 하 합니다."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "<xref:System.Security.Authentication.SslProtocols>인증에 사용 되는 프로토콜을 나타내는 값입니다.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "A <xref:System.Boolean>인증 하는 동안 인증서 해지 목록 선택 되었는지 여부를 지정 하는 값입니다.</xref:System.Boolean>"
    return:
      type: System.Threading.Tasks.Task
      description: "반환 <xref:System.Threading.Tasks.Task>비동기 작업을 나타내는 작업 개체입니다.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServer(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "서버와 필요에 따라 지정된 된 인증서를 사용 하는 클라이언트 서버 연결에 클라이언트를 인증 하는 서버에서 호출 됩니다."
  remarks: "이 메서드는 <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> 를 사용 하 여 인증 인증 동안 인증서 해지 목록을 검사 하지 않습니다. 클라이언트 인증용 인증서를 제공 하지 않아도 됩니다.       이 메서드는 작업이 완료 될 때까지 차단 됩니다. 작업이 완료 될 때까지 차단를 방지 하려면 중 하나를 사용는 <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>메서드 오버 로드.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>       수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream>파일이 더 이상 사용할 수 없습니다.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> 이 개체를 닫고 가비지 수집기에서 수집할 수 있도록 모든 참조를 제거 해야 합니다."
  syntax:
    content: public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "서버를 인증 하는 데 사용 되는 인증서입니다."
  overload: System.Net.Security.SslStream.AuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "인증이 실패 하이 개체를 사용할 수 없는 상태로 남아 있습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "인증이 이미 수행 합니다.       -또는-이 사용 하 여 클라이언트 인증 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> 이전에 시도 했습니다.       -또는-인증 이미 진행 중입니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 닫혀 있습니다."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref:System.Net.Security.SslStream.AuthenticateAsServer*>Windows 95, Windows 98 또는 Windows Millennium 메서드가 지원 되지 않습니다.</xref:System.Net.Security.SslStream.AuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "서버와 필요에 따라 지정 된 인증서, 요구 사항 및 보안 프로토콜을 사용 하는 클라이언트 서버 연결에 클라이언트를 인증 하는 서버에서 호출 됩니다."
  remarks: "이 메서드는 작업이 완료 될 때까지 차단 됩니다. 작업이 완료 될 때까지 차단를 방지 하려면 중 하나를 사용는 <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>메서드 오버 로드.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>       수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream>파일이 더 이상 사용할 수 없습니다.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> 이 개체를 닫고 가비지 수집기에서 수집할 수 있도록 모든 참조를 제거 해야 합니다."
  syntax:
    content: public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "X509Certificate 서버를 인증 하는 데 사용 합니다."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "A <xref:System.Boolean>클라이언트 인증에 대 한 인증서에 대 한 요청은 했는지 여부를 지정 하는 값입니다.</xref:System.Boolean> 서버는 연결 요청을 수락도 제공 된 인증서가 없으면 요청만-이것이 note 합니다."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "<xref:System.Security.Authentication.SslProtocols>인증에 사용 되는 프로토콜을 나타내는 값입니다.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "A <xref:System.Boolean>인증 하는 동안 인증서 해지 목록 선택 되었는지 여부를 지정 하는 값입니다.</xref:System.Boolean>"
  overload: System.Net.Security.SslStream.AuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>유효 하지 않거나 <xref:System.Security.Authentication.SslProtocols> 값입니다."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "인증이 실패 하이 개체를 사용할 수 없는 상태로 남아 있습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "인증이 이미 수행 합니다.       -또는-이 사용 하 여 클라이언트 인증 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> 이전에 시도 했습니다.       -또는-인증 이미 진행 중입니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 닫혀 있습니다."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref:System.Net.Security.SslStream.AuthenticateAsServer*>Windows 95, Windows 98 또는 Windows Millennium 메서드가 지원 되지 않습니다.</xref:System.Net.Security.SslStream.AuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServerAsync(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "서버와 필요에 따라 비동기 작업으로 지정된 된 인증서를 사용 하는 클라이언트 서버 연결에 클라이언트를 인증 하는 서버에서 호출 됩니다."
  remarks: "이 메서드는 <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> 를 사용 하 여 인증 인증 동안 인증서 해지 목록을 검사 하지 않습니다. 클라이언트 인증용 인증서를 제공 하지 않아도 됩니다.       수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream>파일이 더 이상 사용할 수 없습니다.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> 이 개체를 닫고 가비지 수집기에서 수집할 수 있도록 모든 참조를 제거 해야 합니다."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "서버를 인증 하는 데 사용 되는 인증서입니다."
    return:
      type: System.Threading.Tasks.Task
      description: "반환 <xref:System.Threading.Tasks.Task>비동기 작업을 나타내는 작업 개체입니다.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "인증이 실패 하이 개체를 사용할 수 없는 상태로 남아 있습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "인증이 이미 수행 합니다.       -또는-이 사용 하 여 클라이언트 인증 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> 이전에 시도 했습니다.       -또는-인증 이미 진행 중입니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 닫혀 있습니다."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref:System.Net.Security.SslStream.AuthenticateAsServerAsync*>Windows 95, Windows 98 또는 Windows Millennium 메서드가 지원 되지 않습니다.</xref:System.Net.Security.SslStream.AuthenticateAsServerAsync*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "서버와 필요에 따라 지정 된 인증서, 요구 사항 및 보안 프로토콜을 사용 하 여 비동기 작업으로는 클라이언트 / 서버 연결에 클라이언트를 인증 하는 서버에서 호출 됩니다."
  remarks: "수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream>파일이 더 이상 사용할 수 없습니다.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> 이 개체를 닫고 가비지 수집기에서 수집할 수 있도록 모든 참조를 제거 해야 합니다."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "X509Certificate 서버를 인증 하는 데 사용 합니다."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "A <xref:System.Boolean>클라이언트 인증에 대 한 인증서에 대 한 요청은 했는지 여부를 지정 하는 값입니다.</xref:System.Boolean> 서버는 연결 요청을 수락도 제공 된 인증서가 없으면 요청만-이것이 note 합니다."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "<xref:System.Security.Authentication.SslProtocols>인증에 사용 되는 프로토콜을 나타내는 값입니다.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "A <xref:System.Boolean>인증 하는 동안 인증서 해지 목록 선택 되었는지 여부를 지정 하는 값입니다.</xref:System.Boolean>"
    return:
      type: System.Threading.Tasks.Task
      description: "반환 <xref:System.Threading.Tasks.Task>비동기 작업을 나타내는 작업 개체입니다.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsClient(String,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "서버를 인증 하기 위해 비동기 작업을 시작 하기 위해 클라이언트와 필요에 따라 클라이언트에서 호출 됩니다."
  remarks: "이 메서드는 <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> 를 사용 하 여 인증 클라이언트 인증서 인증에 사용 됩니다. 인증 동안 인증서 해지 목록을 검사 하지 않습니다.       에 지정 된 값 `targetHost` 서버 인증서의 이름과 일치 해야 합니다.       호출 하 여 비동기 인증 작업을 완료 해야는 <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>메서드.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> 메서드는 일반적으로 `asyncCallback` 위임 합니다.       작업이 완료 될 때이 메서드를 차단 하지 않습니다. 작업이 완료 될 때까지 차단 하려면 중 사용 된 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>메서드 오버 로드.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 [대](~/add/includes/ajax-current-ext-md.md) 나타나면는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream>파일이 더 이상 사용할 수 없습니다.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> 이 개체를 닫고 가비지 수집기에서 수집할 수 있도록 모든 참조를 제거 해야 합니다."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: targetHost
      type: System.String
      description: "이 공유 하는 서버의 이름 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>합니다."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>인증이 완료 되었을 때 호출할 메서드를 참조 하는 대리자입니다.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "작업에 대 한 정보를 포함 하는 사용자 정의 개체입니다. 이 개체에 전달 되는 `asyncCallback` 작업이 완료 될 때 delegate입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>비동기 작업의 상태를 나타내는 개체입니다.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "인증이 실패 하이 개체를 사용할 수 없는 상태로 남아 있습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "인증이 이미 수행 합니다.       -또는-이 사용 하 여 서버 인증 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> 이전에 시도 했습니다.       -또는-인증 이미 진행 중입니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 닫혀 있습니다."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "서버를 인증 하기 위해 비동기 작업을 시작 하기 위해 클라이언트와 선택적으로 지정 된 인증서 및 보안 프로토콜을 사용 하 여 클라이언트에서 호출 됩니다."
  remarks: "에 지정 된 값 `targetHost` 서버 인증서의 이름과 일치 해야 합니다.       호출 하 여 비동기 인증 작업을 완료 해야는 <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>메서드.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> 메서드는 일반적으로 `asyncCallback` 위임 합니다.       작업이 완료 될 때이 메서드를 차단 하지 않습니다. 작업이 완료 될 때까지 차단 하려면 중 사용 된 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>메서드 오버 로드.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 [대](~/add/includes/ajax-current-ext-md.md) 나타나면는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream>파일이 더 이상 사용할 수 없습니다.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> 이 개체를 닫고 가비지 수집기에서 수집할 수 있도록 모든 참조를 제거 해야 합니다.      > [!NOTE] > 클라이언트 인증서는 SSL 버전 2 프로토콜에서 지원 되지 않습니다."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: targetHost
      type: System.String
      description: "이 공유 하는 서버의 이름 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>합니다."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> 클라이언트 인증서가 들어 있는입니다."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "<xref:System.Security.Authentication.SslProtocols>인증에 사용 되는 프로토콜을 나타내는 값입니다.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "A <xref:System.Boolean>인증 하는 동안 인증서 해지 목록 선택 되었는지 여부를 지정 하는 값입니다.</xref:System.Boolean>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>인증이 완료 되었을 때 호출할 메서드를 참조 하는 대리자입니다.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "작업에 대 한 정보를 포함 하는 사용자 정의 개체입니다. 이 개체에 전달 되는 `asyncCallback` 작업이 완료 될 때 delegate입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>비동기 작업의 상태를 나타내는 개체입니다.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>유효 하지 않거나 <xref:System.Security.Authentication.SslProtocols> 값입니다."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "인증이 실패 하이 개체를 사용할 수 없는 상태로 남아 있습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "인증이 이미 수행 합니다.       -또는-이 사용 하 여 서버 인증 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> 이전에 시도 했습니다.       -또는-인증 이미 진행 중입니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 닫혀 있습니다."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "클라이언트를 인증 하는 비동기 작업을 시작 하기 위해 서버 및 필요에 따라 서버는 클라이언트 / 서버 연결에 의해 호출 됩니다."
  remarks: "이 메서드는 <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> 를 사용 하 여 인증 인증 동안 인증서 해지 목록을 검사 하지 않습니다. 클라이언트 인증용 인증서를 제공 하지 않아도 됩니다.       호출 하 여 비동기 인증 작업을 완료 해야는 <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>메서드.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> 메서드는 일반적으로 `asyncCallback` 위임 합니다.       작업이 완료 될 때이 메서드를 차단 하지 않습니다. 작업이 완료 될 때까지 차단 하려면 중 사용 된 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>메서드 오버 로드.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 [대](~/add/includes/ajax-current-ext-md.md) 나타나면는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream>파일이 더 이상 사용할 수 없습니다.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> 이 개체를 닫고 가비지 수집기에서 수집할 수 있도록 모든 참조를 제거 해야 합니다."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "X509Certificate 서버를 인증 하는 데 사용 합니다."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>인증이 완료 되었을 때 호출할 메서드를 참조 하는 대리자입니다.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "작업에 대 한 정보를 포함 하는 사용자 정의 개체입니다. 이 개체에 전달 되는 `asyncCallback` 작업이 완료 될 때 delegate입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>비동기 작업의 상태를 나타내는 개체입니다.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "인증이 실패 하이 개체를 사용할 수 없는 상태로 남아 있습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "인증이 이미 수행 합니다.       -또는-이 사용 하 여 클라이언트 인증 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> 이전에 시도 했습니다.       -또는-인증 이미 진행 중입니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 닫혀 있습니다."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>Windows 95, Windows 98 또는 Windows Millennium 메서드가 지원 되지 않습니다.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "서버와 필요에 따라 지정 된 인증서, 요구 사항 및 보안 프로토콜을 사용 하는 클라이언트를 인증 하기 위해 비동기 작업을 시작 하기 위해 서버에서 호출 됩니다."
  remarks: "호출 하 여 비동기 인증 작업을 완료 해야는 <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A>메서드.</xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> 메서드는 일반적으로 `asyncCallback` 위임 합니다.       작업이 완료 될 때이 메서드를 차단 하지 않습니다. 작업이 완료 될 때까지 차단 하려면 중 사용 된 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>메서드 오버 로드.</xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>       비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 [대](~/add/includes/ajax-current-ext-md.md) 나타나면는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream>파일이 더 이상 사용할 수 없습니다.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> 이 개체를 닫고 가비지 수집기에서 수집할 수 있도록 모든 참조를 제거 해야 합니다."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "X509Certificate 서버를 인증 하는 데 사용 합니다."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "A <xref:System.Boolean>클라이언트 인증에 대 한 인증서에 대 한 요청은 했는지 여부를 지정 하는 값입니다.</xref:System.Boolean> 서버는 연결 요청을 수락도 제공 된 인증서가 없으면 요청만-이것이 note 합니다."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "<xref:System.Security.Authentication.SslProtocols>인증에 사용 되는 프로토콜을 나타내는 값입니다.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "A <xref:System.Boolean>인증 하는 동안 인증서 해지 목록 선택 되었는지 여부를 지정 하는 값입니다.</xref:System.Boolean>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>인증이 완료 되었을 때 호출할 메서드를 참조 하는 대리자입니다.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "작업에 대 한 정보를 포함 하는 사용자 정의 개체입니다. 이 개체에 전달 되는 `asyncCallback` 작업이 완료 될 때 delegate입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>비동기 작업의 상태를 나타내는 개체입니다.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>유효 하지 않거나 <xref:System.Security.Authentication.SslProtocols> 값입니다."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "인증이 실패 하이 개체를 사용할 수 없는 상태로 남아 있습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "인증이 이미 수행 합니다.       -또는-이 사용 하 여 서버 인증 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> 이전에 시도 했습니다.       -또는-인증 이미 진행 중입니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 닫혀 있습니다."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>Windows 95, Windows 98 또는 Windows Millennium 메서드가 지원 되지 않습니다.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "스트림에서 데이터를 읽고 지정된 된 배열에 저장 하는 비동기 읽기 작업을 시작 합니다."
  remarks: "암호화 및/또는 서명이 사용 되는 경우 읽기 작업 기본 스트림에서 데이터를 읽고, 데이터의 무결성을 확인 및/또는 암호를 해독 합니다. 비동기 읽기 작업을 호출 하 여 완료 해야 합니다는 <xref:System.Net.Security.SslStream.EndRead%2A>메서드.</xref:System.Net.Security.SslStream.EndRead%2A> 메서드는 일반적으로 `asyncCallback` 위임 합니다.       작업이 완료 될 때이 메서드를 차단 하지 않습니다. 작업이 완료 될 때까지 차단 된 <xref:System.Net.Security.SslStream.Read%2A>메서드.</xref:System.Net.Security.SslStream.Read%2A>       비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 [대](~/add/includes/ajax-current-ext-md.md) 는 <xref:System.Net.Security.SslStream>클래스는 여러 개의 읽기 작업을 지원 하지 않습니다.</xref:System.Net.Security.SslStream>       성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다. 인증 중 하나를 호출 하는 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, 또는 <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>메서드.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  example:
  - "The following code example demonstrates starting an asynchronous read operation.  \n  \n [!code-cpp[NclSslClientAsync#8](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_1.cpp)]\n [!code-cs[NclSslClientAsync#8](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_1.cs)]  \n  \n [!code-cpp[NclSslClientAsync#4](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_2.cpp)]\n [!code-cs[NclSslClientAsync#4](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_2.cs)]  \n  \n The following method is called when the read completes.  \n  \n [!code-cpp[NclSslClientAsync#5](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_3.cpp)]\n [!code-cs[NclSslClientAsync#5](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_3.cs)]"
  syntax:
    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>스트림에서 읽은 바이트를 받는 배열을.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "0부터 시작 위치 `buffer` 이 스트림에서 읽은 데이터를 저장 하기 시작 하는 합니다."
    - id: count
      type: System.Int32
      description: "스트림에서 읽을 바이트 수의 최대 수입니다."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>읽기 작업이 완료 될 때 호출할 메서드를 참조 하는 대리자입니다.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "사용자 정의 개체 읽기 작업에 대 한 정보를 포함 하는 데 사용 합니다. 이 개체에 전달 되는 `asyncCallback` 작업이 완료 될 때 delegate입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>비동기 작업의 상태를 나타내는 개체입니다.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; 길이의 <code>buffer</code>합니다.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "읽기 작업이 실패 했습니다.       -또는-암호화가 사용, 하지만 데이터를 해독할 수 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "읽기 작업을 진행 됩니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 닫혀 있습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "인증 되지 않았습니다."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "비동기 쓰기 작업을 기록 하 <xref:System.Byte>스트림에 지정된 된 버퍼에서 s.</xref:System.Byte>"
  remarks: ''
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NclSslServerAsync#5](~/add/codesnippet/csharp/7192cc61-a256-4249-aafa-_1.cs)]\n [!code-cpp[NclSslServerAsync#5](~/add/codesnippet/cpp/7192cc61-a256-4249-aafa-_1.cpp)]"
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>바이트 스트림에 쓸 수를 제공 하는 배열입니다.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "0부터 시작 위치 `buffer` 스트림에 쓸 바이트 읽기를 시작 하는 합니다."
    - id: count
      type: System.Int32
      description: "<xref:System.Int32>에서 읽을 바이트 수를 지정 하는 값 `buffer`.</xref:System.Int32>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>쓰기 작업이 완료 될 때 호출할 메서드를 참조 하는 대리자입니다.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "사용자 정의 개체는 쓰기 작업에 대 한 정보를 포함 하는 데 사용 합니다. 이 개체에 전달 되는 `asyncCallback` 작업이 완료 될 때 delegate입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>비동기 작업의 상태를 나타내는 개체입니다.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; 길이의 <code>buffer</code>합니다.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "쓰기 작업이 실패 했습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "진행 중인 쓰기 작업이 이미 있습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 닫혀 있습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "인증 되지 않았습니다."
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanRead
  id: CanRead
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanRead
  nameWithType: SslStream.CanRead
  fullName: System.Net.Security.SslStream.CanRead
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "가져옵니다는 <xref:System.Boolean>기본 스트림을 읽을 수 있는지 여부를 나타내는 값입니다.</xref:System.Boolean>"
  remarks: "이 속성이 호출에서 반환 된 값을 반환 정상적으로 인증 수행 되 면 <xref:System.IO.Stream.CanRead%2A>내부 스트림의.</xref:System.IO.Stream.CanRead%2A>       <xref:System.Net.Security.SslStream>클래스</xref:System.Net.Security.SslStream> 의 인스턴스를 만들 때 지정 하 고 내부 스트림이"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_14_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_14_1.cs)]"
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>인증이 수행 하 고 내부 스트림이 읽을 수 있습니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.Security.SslStream.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanSeek
  id: CanSeek
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: SslStream.CanSeek
  fullName: System.Net.Security.SslStream.CanSeek
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "가져옵니다는 <xref:System.Boolean>기본 스트림을 검색할 수 있는지 여부를 나타내는 값입니다.</xref:System.Boolean>"
  remarks: "위치를 설정 하지 마십시오는 <xref:System.Net.Security.SslStream>개체 또는 해당 하는 내부 스트림의.</xref:System.Net.Security.SslStream>       <xref:System.Net.Security.SslStream>클래스</xref:System.Net.Security.SslStream> 의 인스턴스를 만들 때 지정 하 고 내부 스트림이"
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "이 속성은 항상 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.Security.SslStream.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanTimeout
  id: CanTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
  fullName: System.Net.Security.SslStream.CanTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "가져옵니다는 <xref:System.Boolean>내부 스트림을 제한 시간을 지원 하는지 여부를 나타내는 값입니다.</xref:System.Boolean>"
  remarks: "호출에서 반환 된 값을 반환 하는이 속성 <xref:System.IO.Stream.CanTimeout%2A>내부 스트림의.</xref:System.IO.Stream.CanTimeout%2A>       <xref:System.Net.Security.SslStream>클래스</xref:System.Net.Security.SslStream> 의 인스턴스를 만들 때 지정 하 고 내부 스트림이"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_8_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_8_1.cs)]"
  syntax:
    content: public override bool CanTimeout { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>제한 시간을 지원 하 고 내부 스트림이 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.Security.SslStream.CanTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanWrite
  id: CanWrite
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: SslStream.CanWrite
  fullName: System.Net.Security.SslStream.CanWrite
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "가져옵니다는 <xref:System.Boolean>내부 스트림이 쓰기 가능한 지 여부를 나타내는 값입니다.</xref:System.Boolean>"
  remarks: "이 속성이 호출에서 반환 된 값을 반환 정상적으로 인증 수행 되 면 <xref:System.IO.Stream.CanWrite%2A>내부 스트림의.</xref:System.IO.Stream.CanWrite%2A>       <xref:System.Net.Security.SslStream>클래스</xref:System.Net.Security.SslStream> 의 인스턴스를 만들 때 지정 하 고 내부 스트림이"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_17_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_17_1.cs)]"
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>인증이 수행 하 고 내부 스트림이 쓰기 가능한; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.Security.SslStream.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus
  id: CheckCertRevocationStatus
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
  fullName: System.Net.Security.SslStream.CheckCertRevocationStatus
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "가져옵니다는 <xref:System.Boolean>인증서 해지 목록에서 인증서 유효성 검사 프로세스 중 선택 되었는지 여부를 나타내는 값입니다.</xref:System.Boolean>"
  remarks: "인증서 해지 목록 발급자가 해지 된 인증서를 포함 합니다. 이 목록을 확인 성능도 하지만 응용 프로그램 보안을 향상 시킵니다."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_4_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_4_1.cs)]"
  syntax:
    content: public virtual bool CheckCertRevocationStatus { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>인증서 해지 목록을 확인 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.Security.SslStream.CheckCertRevocationStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CipherAlgorithm
  id: CipherAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
  fullName: System.Net.Security.SslStream.CipherAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "사용 하는 대량 암호화 알고리즘을 식별 하는 값을 가져옵니다 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>합니다."
  remarks: "값이 <xref:System.Security.Authentication.CipherAlgorithmType>CipherAlgorithm 속성 때는 <xref:System.Net.Security.EncryptionPolicy>열거형 값 생성을 사용 하는 <xref:System.Net.Security.SslStream>인스턴스.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy> </xref:System.Security.Authentication.CipherAlgorithmType>       [!INCLUDE[winxpsvr](~/add/includes/winxpsvr-md.md)]및 [!INCLUDE[winxp](~/add/includes/winxp-md.md)] 지원 하지 않습니다는 <xref:System.Security.Authentication.CipherAlgorithmType>값.</xref:System.Security.Authentication.CipherAlgorithmType> 경우에도 <xref:System.Security.Authentication.CipherAlgorithmType>값의 <xref:System.Net.Security.SslStream>인스턴스, <xref:System.Net.Security.EncryptionPolicy>속성 <xref:System.Security.Authentication.CipherAlgorithmType>.</xref:System.Security.Authentication.CipherAlgorithmType> 만으로도</xref:System.Net.Security.EncryptionPolicy> </xref:System.Net.Security.SslStream> 를 만드는 데 사용 됩니다</xref:System.Security.Authentication.CipherAlgorithmType> <xref:System.Security.Authentication.CipherAlgorithmType>값은 Windows Vista 이상에 반환 됩니다.</xref:System.Security.Authentication.CipherAlgorithmType>"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_10_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_10_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.CipherAlgorithmType CipherAlgorithm { get; }
    return:
      type: System.Security.Authentication.CipherAlgorithmType
      description: "A <xref:System.Security.Authentication.CipherAlgorithmType>값.</xref:System.Security.Authentication.CipherAlgorithmType>"
  overload: System.Net.Security.SslStream.CipherAlgorithm*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "인증 프로세스 또는 인증 프로세스의 완료 실패 전에 CipherAlgorithm 속성에 액세스 합니다."
  platform:
  - net462
- uid: System.Net.Security.SslStream.CipherStrength
  id: CipherStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
  fullName: System.Net.Security.SslStream.CipherStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "사용 하는 암호화 알고리즘의 강도 식별 하는 값을 가져옵니다 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>합니다."
  remarks: "인증이 수행 될 때까지이 속성의 값은&0;입니다.       이 속성은 다음 값 중 하나를 반환 합니다.-0-40-56-80-128-168 192-256"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_6_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_6_1.cs)]"
  syntax:
    content: public virtual int CipherStrength { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>비트에서는 알고리즘의 강도 지정 하는 값입니다.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.CipherStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SslStream.Dispose(Boolean)
  fullName: System.Net.Security.SslStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "사용 하는 관리 되지 않는 리소스를 해제는 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> 관리 되는 리소스를 선택적으로 해제 합니다."
  remarks: "이 메서드는 public `Dispose()`메서드 및 <xref:System.Object.Finalize%2A>메서드.</xref:System.Object.Finalize%2A> `Dispose()`보호 된 호출 `Dispose(Boolean)` 메서드는 `disposing` 매개 변수 설정 `true`합니다. <xref:System.Object.Finalize%2A>호출 `Dispose` 와 `disposing` 로 설정 `false`합니다.</xref:System.Object.Finalize%2A>       경우는 `disposing` 매개 변수가 true 이면이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <xref:System.Net.Security.SslStream>참조.</xref:System.Net.Security.SslStream> 이 메서드 호출에서 `Dispose()` 각 참조 된 개체의 메서드."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.Net.Security.SslStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  id: EndAuthenticateAsClient(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndAuthenticateAsClient(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsClient(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*> 를 이전 호출으로 시작 하는 보류 중인 비동기 서버 인증 작업을 종료"
  remarks: "작업이 완료 되지 않은 경우이 메서드는 완료 될 때까지 차단 됩니다. <xref:System.Net.Security.SslStream.IsEncrypted%2A>및 <xref:System.Net.Security.SslStream.IsSigned%2A>속성에 <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> 어떤 보안 서비스를 사용 하는 결정을</xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> 확인 해야 인증이 성공 하면 확인 된 <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>상호 인증이 발생 했는지 여부를 결정 하는 속성.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream>파일이 더 이상 사용할 수 없습니다.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> 이 개체를 닫고 가비지 수집기에서 수집할 수 있도록 모든 참조를 제거 해야 합니다.       이 작업을 동기적으로 수행 하려면 중 사용 된 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>메서드.</xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  syntax:
    content: public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult> <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*> 에 대 한 호출에서 반환 된 인스턴스</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>에 대 한 호출 결과로 만들어지지 않았습니다 <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>합니다."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "인증이 실패 하이 개체를 사용할 수 없는 상태로 남아 있습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "완료할 보류 중인 서버 인증이 없습니다."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  id: EndAuthenticateAsServer(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndAuthenticateAsServer(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsServer(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*> 를 이전 호출으로 시작 하는 보류 중인 비동기 클라이언트 인증 작업을 종료"
  remarks: "작업이 완료 되지 않은 경우이 메서드는 완료 될 때까지 차단 됩니다. <xref:System.Net.Security.SslStream.IsEncrypted%2A>및 <xref:System.Net.Security.SslStream.IsSigned%2A>속성에 <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> 어떤 보안 서비스를 사용 하는 결정을</xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> 확인 해야 인증이 성공 하면 확인 된 <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>상호 인증이 발생 했는지 여부를 결정 하는 속성.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream>파일이 더 이상 사용할 수 없습니다.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> 이 개체를 닫고 가비지 수집기에서 수집할 수 있도록 모든 참조를 제거 해야 합니다.       이 작업을 동기적으로 수행 하려면 중 사용 된 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>메서드.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  syntax:
    content: public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult> <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*> 에 대 한 호출에서 반환 된 인스턴스</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>에 대 한 호출 결과로 만들어지지 않았습니다 <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>합니다."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "인증이 실패 하이 개체를 사용할 수 없는 상태로 남아 있습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "완료할 보류 중인 클라이언트 인증이 없습니다."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: SslStream.EndRead(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "<xref:System.Net.Security.SslStream.BeginRead*>.</xref:System.Net.Security.SslStream.BeginRead*> 를 이전 호출으로 시작 하는 비동기 읽기 작업 종료"
  remarks: "작업이 완료 되지 않은 경우이 메서드는 완료 될 때까지 차단 됩니다.       이 작업을 동기적으로 수행 하려면는 <xref:System.Net.Security.SslStream.Read%2A>메서드.</xref:System.Net.Security.SslStream.Read%2A>       성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다. 인증 중 하나를 호출 하는 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, 또는 <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>메서드.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  example:
  - "The following code example demonstrates ending an asynchronous read operation.  \n  \n [!code-cpp[NclSslClientAsync#5](~/add/codesnippet/cpp/m-system.net.security.ss_0_1.cpp)]\n [!code-cs[NclSslClientAsync#5](~/add/codesnippet/csharp/m-system.net.security.ss_0_1.cs)]"
  syntax:
    content: public override int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>에 대 한 호출에서 반환한 인스턴스 <xref:System.Net.Security.SslStream.BeginRead*></xref:System.Net.Security.SslStream.BeginRead*> </xref:System.IAsyncResult>"
    return:
      type: System.Int32
      description: "A <xref:System.Int32>내부 스트림에서 읽은 바이트 수를 지정 하는 값입니다.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.EndRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>에 대 한 호출 결과로 만들어지지 않았습니다 <xref:System.Net.Security.SslStream.BeginRead*>합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "인증 되지 않았습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "읽기 작업이 실패 했습니다."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: SslStream.EndWrite(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "<xref:System.Net.Security.SslStream.BeginWrite*>.</xref:System.Net.Security.SslStream.BeginWrite*> 를 이전 호출으로 시작 된 비동기 쓰기 작업 종료"
  remarks: "작업이 완료 되지 않은 경우이 메서드는 완료 될 때까지 차단 됩니다.       성공적으로 인증 될 때까지 응용 프로그램에서이 메서드를 호출할 수 없습니다. 인증 중 하나를 호출는 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, 또는 <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>메서드.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       이 작업을 동기적으로 수행 하려면는 <xref:System.Net.Security.SslStream.Write%2A>메서드.</xref:System.Net.Security.SslStream.Write%2A>"
  example:
  - "The following code example demonstrates ending an asynchronous write operation.  \n  \n [!code-cs[NclSslServerAsync#4](~/add/codesnippet/csharp/m-system.net.security.ss_1_1.cs)]\n [!code-cpp[NclSslServerAsync#4](~/add/codesnippet/cpp/m-system.net.security.ss_1_1.cpp)]"
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>에 대 한 호출에서 반환한 인스턴스 <xref:System.Net.Security.SslStream.BeginWrite*></xref:System.Net.Security.SslStream.BeginWrite*> </xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>에 대 한 호출 결과로 만들어지지 않았습니다 <xref:System.Net.Security.SslStream.BeginWrite*>합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "인증 되지 않았습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "쓰기 작업이 실패 했습니다."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Flush
  id: Flush
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Flush()
  nameWithType: SslStream.Flush()
  fullName: System.Net.Security.SslStream.Flush()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "버퍼링 된 모든 데이터가 내부 장치에 기록 하면 됩니다."
  remarks: "이 메서드를 호출 <xref:System.IO.Stream.Flush%2A>내부 스트림의.</xref:System.IO.Stream.Flush%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cpp[NclSslClientSync#5](~/add/codesnippet/cpp/m-system.net.security.ss_4_1.cpp)]\n [!code-cs[NclSslClientSync#5](~/add/codesnippet/csharp/m-system.net.security.ss_4_1.cs)]"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Net.Security.SslStream.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.HashAlgorithm
  id: HashAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
  fullName: System.Net.Security.SslStream.HashAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "메시지 인증 코드 (Mac) 생성에 사용 되는 알고리즘을 가져옵니다."
  remarks: "메시지 인증 알고리즘에는 메시지 해시 및 서명을 변조 및 위조를 검색 하는 데 생성 합니다."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_9_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_9_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.HashAlgorithmType HashAlgorithm { get; }
    return:
      type: System.Security.Authentication.HashAlgorithmType
      description: "A <xref:System.Security.Authentication.HashAlgorithmType>값.</xref:System.Security.Authentication.HashAlgorithmType>"
  overload: System.Net.Security.SslStream.HashAlgorithm*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "인증 프로세스 또는 인증 프로세스의 완료 실패 전에 HashAlgorithm 속성에 액세스 합니다."
  platform:
  - net462
- uid: System.Net.Security.SslStream.HashStrength
  id: HashStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: HashStrength
  nameWithType: SslStream.HashStrength
  fullName: System.Net.Security.SslStream.HashStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "이 인스턴스에서 사용 되는 해시 알고리즘의 강도 식별 하는 값을 가져옵니다."
  remarks: "인증이 수행 될 때까지이 속성의 값은&0;입니다."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_2_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_2_1.cs)]"
  syntax:
    content: public virtual int HashStrength { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>의 강도 지정 하는 값은 <xref:System.Security.Authentication.HashAlgorithmType>비트에서 알고리즘.</xref:System.Security.Authentication.HashAlgorithmType> </xref:System.Int32> 유효한 값은 128 또는 160입니다."
  overload: System.Net.Security.SslStream.HashStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsAuthenticated
  id: IsAuthenticated
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
  fullName: System.Net.Security.SslStream.IsAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "가져옵니다는 <xref:System.Boolean>인증의 성공 여부를 나타내는 값입니다.</xref:System.Boolean>"
  remarks: "호출 하 여 클라이언트 인증의 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>또는 <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>메서드.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> 호출 하 여 서버 인증의 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>또는 <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>메서드.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_3_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_3_1.cs)]"
  syntax:
    content: public override bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>인증이 성공 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.Security.SslStream.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsEncrypted
  id: IsEncrypted
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
  fullName: System.Net.Security.SslStream.IsEncrypted
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "가져옵니다는 <xref:System.Boolean>나타내는 값 여부이 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> 데이터 암호화를 사용 합니다.</xref:System.Boolean>"
  remarks: "암호화 된 데이터의 개인 정보를 보호 하는 데 도움이, 즉 도움이 될 수는 데이터를 전송 하는 동안 해독할 수 없으므로 제&3; 자에서 확인 하십시오."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_0_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_0_1.cs)]"
  syntax:
    content: public override bool IsEncrypted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>데이터는 네트워크를 통해 전송 되기 전에 암호화 및 암호를 해독 하는 경우에 도달한 경우에 원격 끝점이; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.Security.SslStream.IsEncrypted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated
  id: IsMutuallyAuthenticated
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
  fullName: System.Net.Security.SslStream.IsMutuallyAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "가져옵니다는 <xref:System.Boolean>서버와 클라이언트 모두 인증 되었는지 여부를 나타내는 값입니다.</xref:System.Boolean>"
  remarks: "서버는 클라이언트 인증에 대 한 인증서를 제공 하려는 서버에서 상호 인증을 지정 합니다."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_11_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_11_1.cs)]"
  syntax:
    content: public override bool IsMutuallyAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>서버; 인증 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.Security.SslStream.IsMutuallyAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsServer
  id: IsServer
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsServer
  nameWithType: SslStream.IsServer
  fullName: System.Net.Security.SslStream.IsServer
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "가져옵니다는 <xref:System.Boolean>이 연결의 로컬 측을 사용할지 여부를 나타내는 값 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> 서버로 인증 되었습니다.</xref:System.Boolean>"
  remarks: "이 속성을 반환 하는 경우 인증이 실패 하거나 발생 하지 않은, `false`합니다.       서버로 인증 하려면 호출 된 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>또는 <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>메서드.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_13_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_13_1.cs)]"
  syntax:
    content: public override bool IsServer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>로컬 끝점; 인증된 된 연결의 서버 쪽으로 인증 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.Security.SslStream.IsServer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsSigned
  id: IsSigned
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsSigned
  nameWithType: SslStream.IsSigned
  fullName: System.Net.Security.SslStream.IsSigned
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "가져옵니다는 <xref:System.Boolean>이 스트림을 사용 하 여 전송 된 데이터가 서명 되었는지 여부를 나타내는 값입니다.</xref:System.Boolean>"
  remarks: "데이터의 무결성을 보호 하는 데 도움이 서명 데이터, 즉 수 수신자 데이터가 전송 중에 있는 훼손 되었는지 여부를 확인 하는 있습니다."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_19_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_19_1.cs)]"
  syntax:
    content: public override bool IsSigned { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>데이터를 전송 하기 전에 서명 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.Security.SslStream.IsSigned*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm
  id: KeyExchangeAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
  fullName: System.Net.Security.SslStream.KeyExchangeAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "사용 하는 키 교환 알고리즘을 가져옵니다 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>합니다."
  remarks: "이 속성의 값은 <xref:System.Security.Authentication.ExchangeAlgorithmType>인증이 수행 될 때까지.</xref:System.Security.Authentication.ExchangeAlgorithmType>       키 교환 알고리즘은 공유 키를 생성 하는 데 사용 되는 정보를 보호 합니다."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_16_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_16_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm { get; }
    return:
      type: System.Security.Authentication.ExchangeAlgorithmType
      description: "<xref:System.Security.Authentication.ExchangeAlgorithmType>값.</xref:System.Security.Authentication.ExchangeAlgorithmType>"
  overload: System.Net.Security.SslStream.KeyExchangeAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.KeyExchangeStrength
  id: KeyExchangeStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
  fullName: System.Net.Security.SslStream.KeyExchangeStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "이 인스턴스에서 사용 되는 키 교환 알고리즘의 강도 식별 하는 값을 가져옵니다."
  remarks: "인증이 수행 될 때까지이 속성의 값은&0;입니다.       이 속성의 값은 다음 중 하나에서 일반적인 시나리오:-512 768-1024 2048"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_5_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_5_1.cs)]"
  syntax:
    content: public virtual int KeyExchangeStrength { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>의 강도 지정 하는 값은 <xref:System.Security.Authentication.ExchangeAlgorithmType>비트에서 알고리즘.</xref:System.Security.Authentication.ExchangeAlgorithmType> </xref:System.Int32>"
  overload: System.Net.Security.SslStream.KeyExchangeStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Length
  id: Length
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Length
  nameWithType: SslStream.Length
  fullName: System.Net.Security.SslStream.Length
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "내부 스트림의 길이 가져옵니다."
  remarks: "호출에서 반환 된 값을 반환 하는이 속성 <xref:System.IO.Stream.Length%2A>내부 스트림의.</xref:System.IO.Stream.Length%2A> 내부 스트림을 검색할 수 없으면이 메서드는 일반적으로 예외를 throw 합니다. 내부 스트림의 런타임 형식에 throw 되는 예외의 런타임 형식이 결정 합니다."
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "A <xref:System.Int64>.</xref:System.Int64>       내부 스트림의 길이입니다."
  overload: System.Net.Security.SslStream.Length*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "이 속성의 값을 가져오는 내부 스트림이 경우 지원 되지 않습니다는 <xref href=&quot;System.Net.Sockets.NetworkStream&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Net.Security.SslStream.LocalCertificate
  id: LocalCertificate
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
  fullName: System.Net.Security.SslStream.LocalCertificate
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "로컬 끝점을 인증 하는 데 사용 된 인증서를 가져옵니다."
  remarks: ''
  example:
  - "The following code example demonstrates displaying the certificate returned by this property.  \n  \n [!code-cpp[NclSslServerSync#6](~/add/codesnippet/cpp/p-system.net.security.ss_1_1.cpp)]\n [!code-cs[NclSslServerSync#6](~/add/codesnippet/csharp/p-system.net.security.ss_1_1.cs)]"
  syntax:
    content: public virtual System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "인증을 위해 제공 된 인증서를 나타내는 X509Certificate 개체 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 하지 않은 경우."
  overload: System.Net.Security.SslStream.LocalCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "인증이 실패 하거나 되지 않았습니다."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Position
  id: Position
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Position
  nameWithType: SslStream.Position
  fullName: System.Net.Security.SslStream.Position
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "내부 스트림 내의 현재 위치를 가져오거나 설정 합니다."
  remarks: "호출에서 반환 된 값을 반환 하는이 속성 <xref:System.IO.Stream.Position%2A>내부 스트림의.</xref:System.IO.Stream.Position%2A> 내부 스트림을 검색할 수 없으면이 메서드는 일반적으로 예외를 throw 합니다. 내부 스트림의 런타임 형식에 throw 되는 예외의 런타임 형식이 결정 합니다."
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "A <xref:System.Int64>.</xref:System.Int64>       내부 스트림 내의 현재 위치입니다."
  overload: System.Net.Security.SslStream.Position*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "이 속성을 설정 하는 것은 지원 되지 않습니다.       -또는-내부 스트림이 경우이 속성의 값을 가져오는 지원 되지 않습니다는 <xref href=&quot;System.Net.Sockets.NetworkStream&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: SslStream.Read(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "이 스트림에서 데이터를 읽고 지정된 된 배열에 저장 합니다."
  remarks: "메서드는 최대 읽고 `count` 스트림에서 바이트에 저장 `buffer` 에서 시작 `offset`합니다. 여러 개의 읽기 작업을 수행할 수 없습니다.       성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다. 인증 중 하나를 호출 하는 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, 또는 <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>메서드.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       이 작업을 비동기적으로 수행 하려면는 <xref:System.Net.Security.SslStream.BeginRead%2A>메서드.</xref:System.Net.Security.SslStream.BeginRead%2A>"
  example:
  - "The following code example demonstrates reading from an <xref:System.Net.Security.SslStream>.  \n  \n [!code-cpp[NclSslClientSync#6](~/add/codesnippet/cpp/m-system.net.security.ss_2_1.cpp)]\n [!code-cs[NclSslClientSync#6](~/add/codesnippet/csharp/m-system.net.security.ss_2_1.cs)]"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>현재 스트림에서 읽은 바이트를 받는 배열을.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "A <xref:System.Int32>에서&0;부터 시작 위치를 포함 하는 `buffer` 이 스트림에서 읽은 데이터를 저장 하기 시작 하는.</xref:System.Int32>"
    - id: count
      type: System.Int32
      description: "A <xref:System.Int32>이 스트림에서 읽을 바이트 수의 최대 수를 포함 하는.</xref:System.Int32>"
    return:
      type: System.Int32
      description: "A <xref:System.Int32>읽은 바이트 수를 지정 하는 값입니다.</xref:System.Int32> 데이터가 더 이상 읽을 수 있으면 0을 반환 합니다."
  overload: System.Net.Security.SslStream.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; 길이의 <code>buffer</code>합니다.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "읽기 작업이 실패 했습니다. 실패의 원인을 확인할 수 있는 경우 내부 예외를 확인 합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "읽기 작업을 진행 됩니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 닫혀 있습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "인증 되지 않았습니다."
  platform:
  - net462
- uid: System.Net.Security.SslStream.ReadTimeout
  id: ReadTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
  fullName: System.Net.Security.SslStream.ReadTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "데이터에 대 한 대기를 차단 하는 읽기 작업 시간을 가져오거나 설정 합니다."
  remarks: "호출에서 반환 된 값을 반환 하는이 속성 <xref:System.IO.Stream.ReadTimeout%2A>내부 스트림의.</xref:System.IO.Stream.ReadTimeout%2A> 이 속성을 설정 하는 경우는 <xref:System.IO.Stream.ReadTimeout%2A>내부 스트림의 값이 지정된 된 값으로 설정 합니다.</xref:System.IO.Stream.ReadTimeout%2A>       기본 스트림이 <xref:System.Net.Sockets.NetworkStream>, ReadTimeout 밀리초 이며로 설정 되어 <xref:System.Threading.Timeout.Infinite>작업이 시간 초과 되지 않도록 읽기는 기본적으로.</xref:System.Threading.Timeout.Infinite> </xref:System.Net.Sockets.NetworkStream>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/p-system.net.security.ss_18_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/p-system.net.security.ss_18_1.cs)]"
  syntax:
    content: public override int ReadTimeout { get; set; }
    return:
      type: System.Int32
      description: "A <xref:System.Int32>동기적 읽기 작업은 실패 하기 전까지 걸리는 시간을 지정 하는.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.ReadTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.RemoteCertificate
  id: RemoteCertificate
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
  fullName: System.Net.Security.SslStream.RemoteCertificate
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "원격 끝점을 인증 하는 데 사용 된 인증서를 가져옵니다."
  remarks: ''
  example:
  - "The following code example demonstrates displaying the certificate returned by this property.  \n  \n [!code-cpp[NclSslServerSync#6](~/add/codesnippet/cpp/p-system.net.security.ss_15_1.cpp)]\n [!code-cs[NclSslServerSync#6](~/add/codesnippet/csharp/p-system.net.security.ss_15_1.cs)]"
  syntax:
    content: public virtual System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "인증을 위해 제공 된 인증서를 나타내는 X509Certificate 개체 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 하지 않은 경우."
  overload: System.Net.Security.SslStream.RemoteCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "인증이 실패 하거나 되지 않았습니다."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: SslStream.Seek(Int64,SeekOrigin)
  fullName: System.Net.Security.SslStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "에 <xref:System.NotSupportedException>.</xref:System.NotSupportedException> throw"
  remarks: "이 메서드를 호출 하지 마십시오. 를 상속 하지만 <xref:System.Net.Security.SslStream>클래스</xref:System.Net.Security.SslStream> 에서 지원 되지 않습니다."
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "이 값은 무시 됩니다."
    - id: origin
      type: System.IO.SeekOrigin
      description: "이 값은 무시 됩니다."
    return:
      type: System.Int64
      description: "항상에 <xref:System.NotSupportedException>.</xref:System.NotSupportedException> throw"
  overload: System.Net.Security.SslStream.Seek*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "검색을 지원 하지 않는 <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> 개체입니다."
  platform:
  - net462
- uid: System.Net.Security.SslStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: SslStream.SetLength(Int64)
  fullName: System.Net.Security.SslStream.SetLength(Int64)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "내부 스트림의 길이 가져오거나 설정 합니다."
  remarks: "이 메서드를 호출 <xref:System.IO.Stream.SetLength%2A?displayProperty=fullName>때 지정 된 내부 스트림의이 <xref:System.Net.Security.SslStream>만들었습니다.</xref:System.Net.Security.SslStream> </xref:System.IO.Stream.SetLength%2A?displayProperty=fullName>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "<xref:System.Int64>스트림의 길이 지정 하는 값입니다.</xref:System.Int64>"
  overload: System.Net.Security.SslStream.SetLength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.SslProtocol
  id: SslProtocol
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
  fullName: System.Net.Security.SslStream.SslProtocol
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "이 연결을 인증 하는 데 사용 되는 보안 프로토콜을 나타내는 값을 가져옵니다."
  remarks: "지원 되는 보안 프로토콜을 지정 된 경우는 <xref:System.Net.Security.SslStream>만들어집니다.</xref:System.Net.Security.SslStream> 인스턴스가 <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> 를 사용 하 여 만들어진 경우 보안 프로토콜이 없습니다.이 생성자에 전달 되었지만 인증에 사용 되는 실제 프로토콜은 클라이언트와 서버에서 지 원하는 프로토콜에 따라 선택 됩니다."
  example:
  - "The following example displays the security properties of the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_7_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_7_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.SslProtocols SslProtocol { get; }
    return:
      type: System.Security.Authentication.SslProtocols
      description: "<xref:System.Security.Authentication.SslProtocols>인증에 사용 되는 프로토콜을 나타내는 값입니다.</xref:System.Security.Authentication.SslProtocols>"
  overload: System.Net.Security.SslStream.SslProtocol*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.TransportContext
  id: TransportContext
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: TransportContext
  nameWithType: SslStream.TransportContext
  fullName: System.Net.Security.SslStream.TransportContext
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "가져옵니다는 <xref:System.Net.TransportContext>확장 된 보호를 사용 하 여 인증에 사용 되는.</xref:System.Net.TransportContext>"
  syntax:
    content: public System.Net.TransportContext TransportContext { get; }
    return:
      type: System.Net.TransportContext
      description: "<xref:System.Net.TransportContext>확장 된 보호에 사용 되는 채널 바인딩 토큰 CBT ()를 포함 하는 개체입니다.</xref:System.Net.TransportContext>"
  overload: System.Net.Security.SslStream.TransportContext*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Write(System.Byte[])
  id: Write(System.Byte[])
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Write(Byte[])
  nameWithType: SslStream.Write(Byte[])
  fullName: System.Net.Security.SslStream.Write(Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "이 스트림에 지정된 된 데이터를 씁니다."
  remarks: "이 메서드는 작업이 완료 될 때 차단 됩니다. 작업이 완료 될 때까지 차단 하지 않으려면을 사용 하 여는 <xref:System.Net.Security.SslStream.BeginWrite%2A>메서드.</xref:System.Net.Security.SslStream.BeginWrite%2A>       성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다. 인증 중 하나를 호출 하는 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, 또는 <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>메서드.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       <xref:System.Net.Security.SslStream>클래스가 여러 동시 쓰기 작업을 지원 하지 않습니다.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates writing to an authenticated <xref:System.Net.Security.SslStream>.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/m-system.net.security.ss_3_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/m-system.net.security.ss_3_1.cs)]"
  syntax:
    content: public void Write (byte[] buffer);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>스트림에 쓸 바이트를 제공 하는 배열입니다.</xref:System.Byte>"
  overload: System.Net.Security.SslStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "쓰기 작업이 실패 했습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "진행 중인 쓰기 작업이 이미 있습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 닫혀 있습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "인증 되지 않았습니다."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: SslStream.Write(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "지정된 된 수의 쓰기 <xref:System.Byte>지정 된 버퍼와 오프셋을 사용 하 여 내부 스트림에 s.</xref:System.Byte>"
  remarks: "이 메서드는 작업이 완료 될 때 차단 됩니다. 작업이 작업이 완료 될 때까지 차단 완료 되 면 사용 하 여는 <xref:System.Net.Security.SslStream.BeginWrite%2A>메서드.</xref:System.Net.Security.SslStream.BeginWrite%2A>       성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다. 인증 중 하나를 호출 하는 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, 또는 <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>메서드.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       <xref:System.Net.Security.SslStream>클래스가 여러 동시 쓰기 작업을 지원 하지 않습니다.</xref:System.Net.Security.SslStream>"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>스트림에 쓸 바이트를 제공 하는 배열입니다.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "A <xref:System.Int32>에서&0;부터 시작 위치를 포함 하는 `buffer` 스트림에 쓸 바이트 읽기를 시작 하는.</xref:System.Int32>"
    - id: count
      type: System.Int32
      description: "A <xref:System.Int32>에서 읽을 바이트 수가 포함 된 `buffer`.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; 길이의 <code>buffer</code>합니다.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "쓰기 작업이 실패 했습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "진행 중인 쓰기 작업이 이미 있습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 닫혀 있습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "인증 되지 않았습니다."
  platform:
  - net462
- uid: System.Net.Security.SslStream.WriteTimeout
  id: WriteTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
  fullName: System.Net.Security.SslStream.WriteTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "데이터에 대 한 대기를 차단 하는 쓰기 작업 시간을 가져오거나 설정 합니다."
  remarks: "호출에서 반환 된 값을 반환 하는이 속성 <xref:System.IO.Stream.WriteTimeout%2A>내부 스트림의.</xref:System.IO.Stream.WriteTimeout%2A> 집합 작업에 대 한 지정 된 값이 설정의 <xref:System.IO.Stream.WriteTimeout%2A>내부 스트림의 값.</xref:System.IO.Stream.WriteTimeout%2A>       기본 스트림이 <xref:System.Net.Sockets.NetworkStream>, WriteTimeout 밀리초 이며로 설정 되어 <xref:System.Threading.Timeout.Infinite>기본적으로 쓰기에 작업이 시간 초과 되지 않습니다.</xref:System.Threading.Timeout.Infinite> </xref:System.Net.Sockets.NetworkStream>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/p-system.net.security.ss_12_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/p-system.net.security.ss_12_1.cs)]"
  syntax:
    content: public override int WriteTimeout { get; set; }
    return:
      type: System.Int32
      description: "A <xref:System.Int32>동기 쓰기 작업이 실패할 때까지 경과 된 시간을 지정 하.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.WriteTimeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: System.Net.Security.AuthenticatedStream
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Authentication.AuthenticationException
  parent: System.Security.Authentication
  isExternal: false
  name: AuthenticationException
  nameWithType: AuthenticationException
  fullName: System.Security.Authentication.AuthenticationException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream)
  nameWithType: SslStream.SslStream(Stream)
  fullName: System.Net.Security.SslStream.SslStream(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean)
  nameWithType: SslStream.SslStream(Stream,Boolean)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
- uid: System.Net.Security.RemoteCertificateValidationCallback
  parent: System.Net.Security
  isExternal: false
  name: RemoteCertificateValidationCallback
  nameWithType: RemoteCertificateValidationCallback
  fullName: System.Net.Security.RemoteCertificateValidationCallback
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
- uid: System.Net.Security.LocalCertificateSelectionCallback
  parent: System.Net.Security
  isExternal: false
  name: LocalCertificateSelectionCallback
  nameWithType: LocalCertificateSelectionCallback
  fullName: System.Net.Security.LocalCertificateSelectionCallback
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
- uid: System.Net.Security.EncryptionPolicy
  parent: System.Net.Security
  isExternal: false
  name: EncryptionPolicy
  nameWithType: EncryptionPolicy
  fullName: System.Net.Security.EncryptionPolicy
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient(String)
  nameWithType: SslStream.AuthenticateAsClient(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Security.Authentication.SslProtocols
  parent: System.Security.Authentication
  isExternal: true
  name: SslProtocols
  nameWithType: SslProtocols
  fullName: System.Security.Authentication.SslProtocols
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync(String)
  nameWithType: SslStream.AuthenticateAsClientAsync(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate)
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient(String,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.CanRead
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanRead
  nameWithType: SslStream.CanRead
  fullName: System.Net.Security.SslStream.CanRead
- uid: System.Net.Security.SslStream.CanSeek
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanSeek
  nameWithType: SslStream.CanSeek
  fullName: System.Net.Security.SslStream.CanSeek
- uid: System.Net.Security.SslStream.CanTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
  fullName: System.Net.Security.SslStream.CanTimeout
- uid: System.Net.Security.SslStream.CanWrite
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanWrite
  nameWithType: SslStream.CanWrite
  fullName: System.Net.Security.SslStream.CanWrite
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
  fullName: System.Net.Security.SslStream.CheckCertRevocationStatus
- uid: System.Net.Security.SslStream.CipherAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
  fullName: System.Net.Security.SslStream.CipherAlgorithm
- uid: System.Security.Authentication.CipherAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: CipherAlgorithmType
  nameWithType: CipherAlgorithmType
  fullName: System.Security.Authentication.CipherAlgorithmType
- uid: System.Net.Security.SslStream.CipherStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
  fullName: System.Net.Security.SslStream.CipherStrength
- uid: System.Net.Security.SslStream.Dispose(System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SslStream.Dispose(Boolean)
  fullName: System.Net.Security.SslStream.Dispose(Boolean)
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsClient(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsClient(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult)
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsServer(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsServer(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult)
- uid: System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: SslStream.EndRead(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndRead(IAsyncResult)
- uid: System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: SslStream.EndWrite(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndWrite(IAsyncResult)
- uid: System.Net.Security.SslStream.Flush
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Flush()
  nameWithType: SslStream.Flush()
  fullName: System.Net.Security.SslStream.Flush()
- uid: System.Net.Security.SslStream.HashAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
  fullName: System.Net.Security.SslStream.HashAlgorithm
- uid: System.Security.Authentication.HashAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: HashAlgorithmType
  nameWithType: HashAlgorithmType
  fullName: System.Security.Authentication.HashAlgorithmType
- uid: System.Net.Security.SslStream.HashStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashStrength
  nameWithType: SslStream.HashStrength
  fullName: System.Net.Security.SslStream.HashStrength
- uid: System.Net.Security.SslStream.IsAuthenticated
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
  fullName: System.Net.Security.SslStream.IsAuthenticated
- uid: System.Net.Security.SslStream.IsEncrypted
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
  fullName: System.Net.Security.SslStream.IsEncrypted
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
  fullName: System.Net.Security.SslStream.IsMutuallyAuthenticated
- uid: System.Net.Security.SslStream.IsServer
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsServer
  nameWithType: SslStream.IsServer
  fullName: System.Net.Security.SslStream.IsServer
- uid: System.Net.Security.SslStream.IsSigned
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsSigned
  nameWithType: SslStream.IsSigned
  fullName: System.Net.Security.SslStream.IsSigned
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
  fullName: System.Net.Security.SslStream.KeyExchangeAlgorithm
- uid: System.Security.Authentication.ExchangeAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: ExchangeAlgorithmType
  nameWithType: ExchangeAlgorithmType
  fullName: System.Security.Authentication.ExchangeAlgorithmType
- uid: System.Net.Security.SslStream.KeyExchangeStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
  fullName: System.Net.Security.SslStream.KeyExchangeStrength
- uid: System.Net.Security.SslStream.Length
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Length
  nameWithType: SslStream.Length
  fullName: System.Net.Security.SslStream.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Security.SslStream.LocalCertificate
  parent: System.Net.Security.SslStream
  isExternal: false
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
  fullName: System.Net.Security.SslStream.LocalCertificate
- uid: System.Net.Security.SslStream.Position
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Position
  nameWithType: SslStream.Position
  fullName: System.Net.Security.SslStream.Position
- uid: System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: SslStream.Read(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Read(Byte[],Int32,Int32)
- uid: System.Net.Security.SslStream.ReadTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
  fullName: System.Net.Security.SslStream.ReadTimeout
- uid: System.Net.Security.SslStream.RemoteCertificate
  parent: System.Net.Security.SslStream
  isExternal: false
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
  fullName: System.Net.Security.SslStream.RemoteCertificate
- uid: System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: SslStream.Seek(Int64,SeekOrigin)
  fullName: System.Net.Security.SslStream.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Net.Security.SslStream.SetLength(System.Int64)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: SslStream.SetLength(Int64)
  fullName: System.Net.Security.SslStream.SetLength(Int64)
- uid: System.Net.Security.SslStream.SslProtocol
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
  fullName: System.Net.Security.SslStream.SslProtocol
- uid: System.Net.Security.SslStream.TransportContext
  parent: System.Net.Security.SslStream
  isExternal: false
  name: TransportContext
  nameWithType: SslStream.TransportContext
  fullName: System.Net.Security.SslStream.TransportContext
- uid: System.Net.TransportContext
  parent: System.Net
  isExternal: true
  name: TransportContext
  nameWithType: TransportContext
  fullName: System.Net.TransportContext
- uid: System.Net.Security.SslStream.Write(System.Byte[])
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write(Byte[])
  nameWithType: SslStream.Write(Byte[])
  fullName: System.Net.Security.SslStream.Write(Byte[])
- uid: System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: SslStream.Write(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Write(Byte[],Int32,Int32)
- uid: System.Net.Security.SslStream.WriteTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
  fullName: System.Net.Security.SslStream.WriteTimeout
- uid: System.Net.Security.SslStream.#ctor*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream
  nameWithType: SslStream.SslStream
- uid: System.Net.Security.SslStream.AuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient
  nameWithType: SslStream.AuthenticateAsClient
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync
  nameWithType: SslStream.AuthenticateAsClientAsync
- uid: System.Net.Security.SslStream.AuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer
  nameWithType: SslStream.AuthenticateAsServer
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync
  nameWithType: SslStream.AuthenticateAsServerAsync
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient
  nameWithType: SslStream.BeginAuthenticateAsClient
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer
  nameWithType: SslStream.BeginAuthenticateAsServer
- uid: System.Net.Security.SslStream.BeginRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginRead
  nameWithType: SslStream.BeginRead
- uid: System.Net.Security.SslStream.BeginWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginWrite
  nameWithType: SslStream.BeginWrite
- uid: System.Net.Security.SslStream.CanRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanRead
  nameWithType: SslStream.CanRead
- uid: System.Net.Security.SslStream.CanSeek*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanSeek
  nameWithType: SslStream.CanSeek
- uid: System.Net.Security.SslStream.CanTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
- uid: System.Net.Security.SslStream.CanWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanWrite
  nameWithType: SslStream.CanWrite
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
- uid: System.Net.Security.SslStream.CipherAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
- uid: System.Net.Security.SslStream.CipherStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
- uid: System.Net.Security.SslStream.Dispose*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Dispose
  nameWithType: SslStream.Dispose
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsClient
  nameWithType: SslStream.EndAuthenticateAsClient
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsServer
  nameWithType: SslStream.EndAuthenticateAsServer
- uid: System.Net.Security.SslStream.EndRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndRead
  nameWithType: SslStream.EndRead
- uid: System.Net.Security.SslStream.EndWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndWrite
  nameWithType: SslStream.EndWrite
- uid: System.Net.Security.SslStream.Flush*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Flush
  nameWithType: SslStream.Flush
- uid: System.Net.Security.SslStream.HashAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
- uid: System.Net.Security.SslStream.HashStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashStrength
  nameWithType: SslStream.HashStrength
- uid: System.Net.Security.SslStream.IsAuthenticated*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
- uid: System.Net.Security.SslStream.IsEncrypted*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
- uid: System.Net.Security.SslStream.IsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsServer
  nameWithType: SslStream.IsServer
- uid: System.Net.Security.SslStream.IsSigned*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsSigned
  nameWithType: SslStream.IsSigned
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
- uid: System.Net.Security.SslStream.KeyExchangeStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
- uid: System.Net.Security.SslStream.Length*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Length
  nameWithType: SslStream.Length
- uid: System.Net.Security.SslStream.LocalCertificate*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
- uid: System.Net.Security.SslStream.Position*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Position
  nameWithType: SslStream.Position
- uid: System.Net.Security.SslStream.Read*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Read
  nameWithType: SslStream.Read
- uid: System.Net.Security.SslStream.ReadTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
- uid: System.Net.Security.SslStream.RemoteCertificate*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
- uid: System.Net.Security.SslStream.Seek*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Seek
  nameWithType: SslStream.Seek
- uid: System.Net.Security.SslStream.SetLength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SetLength
  nameWithType: SslStream.SetLength
- uid: System.Net.Security.SslStream.SslProtocol*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
- uid: System.Net.Security.SslStream.TransportContext*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: TransportContext
  nameWithType: SslStream.TransportContext
- uid: System.Net.Security.SslStream.Write*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write
  nameWithType: SslStream.Write
- uid: System.Net.Security.SslStream.WriteTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
