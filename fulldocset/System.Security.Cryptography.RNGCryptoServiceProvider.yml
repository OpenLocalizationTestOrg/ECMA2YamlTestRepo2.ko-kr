### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.RNGCryptoServiceProvider
  id: RNGCryptoServiceProvider
  children:
  - System.Security.Cryptography.RNGCryptoServiceProvider.#ctor
  - System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Byte[])
  - System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)
  - System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.String)
  - System.Security.Cryptography.RNGCryptoServiceProvider.Dispose(System.Boolean)
  - System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Byte[])
  - System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(System.Byte[])
  langs:
  - csharp
  name: RNGCryptoServiceProvider
  nameWithType: RNGCryptoServiceProvider
  fullName: System.Security.Cryptography.RNGCryptoServiceProvider
  type: Class
  summary: "암호화 난수 생성기 (RNG) 암호화 서비스 공급자 (CSP)가 제공 하는 구현을 사용 하 여 구현 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: >-
    > [!IMPORTANT]

    >  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.
  example:
  - "The following code example shows how to create a random number with the RNGCryptoServiceProvider class.  \n  \n [!code-vb[RNGCSP#1](~/add/codesnippet/visualbasic/t-system.security.crypto_16_1.vb)]\n [!code-cpp[RNGCSP#1](~/add/codesnippet/cpp/t-system.security.crypto_16_1.cpp)]\n [!code-cs[RNGCSP#1](~/add/codesnippet/csharp/t-system.security.crypto_16_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class RNGCryptoServiceProvider : System.Security.Cryptography.RandomNumberGenerator
  inheritance:
  - System.Object
  - System.Security.Cryptography.RandomNumberGenerator
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.RandomNumberGenerator.Create
  - System.Security.Cryptography.RandomNumberGenerator.Create(System.String)
  - System.Security.Cryptography.RandomNumberGenerator.Dispose
  - System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[],System.Int32,System.Int32)
  platform:
  - net462
- uid: System.Security.Cryptography.RNGCryptoServiceProvider.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.RNGCryptoServiceProvider
  langs:
  - csharp
  name: RNGCryptoServiceProvider()
  nameWithType: RNGCryptoServiceProvider.RNGCryptoServiceProvider()
  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.RNGCryptoServiceProvider()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.RNGCryptoServiceProvider&quot;> </xref> 클래스입니다."
  remarks: ''
  example:
  - "The following code example shows how to create a random number with the <xref:System.Security.Cryptography.RNGCryptoServiceProvider> class.  \n  \n [!code-vb[RNGCSP#1](~/add/codesnippet/visualbasic/m-system.security.crypto_1_1.vb)]\n [!code-cpp[RNGCSP#1](~/add/codesnippet/cpp/m-system.security.crypto_1_1.cpp)]\n [!code-cs[RNGCSP#1](~/add/codesnippet/csharp/m-system.security.crypto_1_1.cs)]"
  syntax:
    content: public RNGCryptoServiceProvider ();
    parameters: []
  overload: System.Security.Cryptography.RNGCryptoServiceProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.RNGCryptoServiceProvider
  langs:
  - csharp
  name: RNGCryptoServiceProvider(Byte[])
  nameWithType: RNGCryptoServiceProvider.RNGCryptoServiceProvider(Byte[])
  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.RNGCryptoServiceProvider(Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.RNGCryptoServiceProvider&quot;> </xref> 클래스입니다."
  remarks: "이 메서드는 <xref:System.Security.Cryptography.RNGCryptoServiceProvider>클래스</xref:System.Security.Cryptography.RNGCryptoServiceProvider> 를 직접 초기화 하지 않습니다.  이 메서드를 호출 하는 것은 <xref:System.Security.Cryptography.RNGCryptoServiceProvider.%23ctor%2A>생성자와 전달 `null`.</xref:System.Security.Cryptography.RNGCryptoServiceProvider.%23ctor%2A>"
  syntax:
    content: public RNGCryptoServiceProvider (byte[] rgb);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "바이트 배열입니다. 이 값은 무시 됩니다."
  overload: System.Security.Cryptography.RNGCryptoServiceProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)
  id: '#ctor(System.Security.Cryptography.CspParameters)'
  parent: System.Security.Cryptography.RNGCryptoServiceProvider
  langs:
  - csharp
  name: RNGCryptoServiceProvider(CspParameters)
  nameWithType: RNGCryptoServiceProvider.RNGCryptoServiceProvider(CspParameters)
  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.RNGCryptoServiceProvider(CspParameters)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.RNGCryptoServiceProvider&quot;> </xref> 지정된 된 매개 변수를 사용 하 여 클래스입니다."
  syntax:
    content: public RNGCryptoServiceProvider (System.Security.Cryptography.CspParameters cspParams);
    parameters:
    - id: cspParams
      type: System.Security.Cryptography.CspParameters
      description: "암호화 서비스 공급자 (CSP)에 전달할 매개 변수입니다."
  overload: System.Security.Cryptography.RNGCryptoServiceProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.RNGCryptoServiceProvider
  langs:
  - csharp
  name: RNGCryptoServiceProvider(String)
  nameWithType: RNGCryptoServiceProvider.RNGCryptoServiceProvider(String)
  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.RNGCryptoServiceProvider(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.RNGCryptoServiceProvider&quot;> </xref> 클래스입니다."
  remarks: "이 메서드는 <xref:System.Security.Cryptography.RNGCryptoServiceProvider>클래스</xref:System.Security.Cryptography.RNGCryptoServiceProvider> 를 직접 초기화 하지 않습니다.  이 메서드를 호출 하는 것은 <xref:System.Security.Cryptography.RNGCryptoServiceProvider.%23ctor%2A>생성자와 전달 `null`.</xref:System.Security.Cryptography.RNGCryptoServiceProvider.%23ctor%2A>"
  syntax:
    content: public RNGCryptoServiceProvider (string str);
    parameters:
    - id: str
      type: System.String
      description: "입력 문자열입니다. 이 매개 변수는 무시 됩니다."
  overload: System.Security.Cryptography.RNGCryptoServiceProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RNGCryptoServiceProvider.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.RNGCryptoServiceProvider
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: RNGCryptoServiceProvider.Dispose(Boolean)
  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "추가할 수 있습니다."
  overload: System.Security.Cryptography.RNGCryptoServiceProvider.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Byte[])
  id: GetBytes(System.Byte[])
  parent: System.Security.Cryptography.RNGCryptoServiceProvider
  langs:
  - csharp
  name: GetBytes(Byte[])
  nameWithType: RNGCryptoServiceProvider.GetBytes(Byte[])
  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "암호화 수준 시퀀스의 임의 값으로 바이트 배열을 채웁니다."
  remarks: "바이트 배열의 길이 생성 된 암호화 된 강력한 임의 바이트 수를 결정 합니다.       이 메서드는 스레드로부터 안전 합니다."
  example:
  - "The following code example shows how to create a random number with the <xref:System.Security.Cryptography.RNGCryptoServiceProvider> class.  \n  \n [!code-vb[RNGCSP#1](~/add/codesnippet/visualbasic/m-system.security.crypto_66_1.vb)]\n [!code-cpp[RNGCSP#1](~/add/codesnippet/cpp/m-system.security.crypto_66_1.cpp)]\n [!code-cs[RNGCSP#1](~/add/codesnippet/csharp/m-system.security.crypto_66_1.cs)]"
  syntax:
    content: public override void GetBytes (byte[] data);
    parameters:
    - id: data
      type: System.Byte[]
      description: "암호화 수준 시퀀스의 임의 값으로 채울 배열입니다."
  overload: System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "암호화 서비스 공급자 (CSP)를 가져올 수 없습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(System.Byte[])
  id: GetNonZeroBytes(System.Byte[])
  parent: System.Security.Cryptography.RNGCryptoServiceProvider
  langs:
  - csharp
  name: GetNonZeroBytes(Byte[])
  nameWithType: RNGCryptoServiceProvider.GetNonZeroBytes(Byte[])
  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "암호화 수준 시퀀스의 임의&0;이 아닌 값으로 바이트 배열을 채웁니다."
  remarks: "바이트 배열 길이 생성 된 암호화 된 강력한 임의&0;이 아닌 바이트 수를 결정 합니다."
  example:
  - "The following code example creates a random sequence of 100 nonzero bytes and stores it in `random`.  \n  \n [!code-cpp[Classic RandomNumberGenerator.GetNonZeroBytes Example#1](~/add/codesnippet/cpp/8817a025-4b69-4ee1-98fd-_1.cpp)]\n [!code-cs[Classic RandomNumberGenerator.GetNonZeroBytes Example#1](~/add/codesnippet/csharp/8817a025-4b69-4ee1-98fd-_1.cs)]\n [!code-vb[Classic RandomNumberGenerator.GetNonZeroBytes Example#1](~/add/codesnippet/visualbasic/8817a025-4b69-4ee1-98fd-_1.vb)]"
  syntax:
    content: public override void GetNonZeroBytes (byte[] data);
    parameters:
    - id: data
      type: System.Byte[]
      description: "암호화 수준 시퀀스의 임의&0;이 아닌 값으로 채울 배열입니다."
  overload: System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "암호화 서비스 공급자 (CSP)를 가져올 수 없습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.RandomNumberGenerator
  isExternal: false
  name: System.Security.Cryptography.RandomNumberGenerator
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.RNGCryptoServiceProvider.#ctor
  parent: System.Security.Cryptography.RNGCryptoServiceProvider
  isExternal: false
  name: RNGCryptoServiceProvider()
  nameWithType: RNGCryptoServiceProvider.RNGCryptoServiceProvider()
  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.RNGCryptoServiceProvider()
- uid: System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Byte[])
  parent: System.Security.Cryptography.RNGCryptoServiceProvider
  isExternal: false
  name: RNGCryptoServiceProvider(Byte[])
  nameWithType: RNGCryptoServiceProvider.RNGCryptoServiceProvider(Byte[])
  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.RNGCryptoServiceProvider(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)
  parent: System.Security.Cryptography.RNGCryptoServiceProvider
  isExternal: false
  name: RNGCryptoServiceProvider(CspParameters)
  nameWithType: RNGCryptoServiceProvider.RNGCryptoServiceProvider(CspParameters)
  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.RNGCryptoServiceProvider(CspParameters)
- uid: System.Security.Cryptography.CspParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: CspParameters
  nameWithType: CspParameters
  fullName: System.Security.Cryptography.CspParameters
- uid: System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.String)
  parent: System.Security.Cryptography.RNGCryptoServiceProvider
  isExternal: false
  name: RNGCryptoServiceProvider(String)
  nameWithType: RNGCryptoServiceProvider.RNGCryptoServiceProvider(String)
  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.RNGCryptoServiceProvider(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.RNGCryptoServiceProvider.Dispose(System.Boolean)
  parent: System.Security.Cryptography.RNGCryptoServiceProvider
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: RNGCryptoServiceProvider.Dispose(Boolean)
  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Byte[])
  parent: System.Security.Cryptography.RNGCryptoServiceProvider
  isExternal: false
  name: GetBytes(Byte[])
  nameWithType: RNGCryptoServiceProvider.GetBytes(Byte[])
  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(Byte[])
- uid: System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(System.Byte[])
  parent: System.Security.Cryptography.RNGCryptoServiceProvider
  isExternal: false
  name: GetNonZeroBytes(Byte[])
  nameWithType: RNGCryptoServiceProvider.GetNonZeroBytes(Byte[])
  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(Byte[])
- uid: System.Security.Cryptography.RNGCryptoServiceProvider.#ctor*
  parent: System.Security.Cryptography.RNGCryptoServiceProvider
  isExternal: false
  name: RNGCryptoServiceProvider
  nameWithType: RNGCryptoServiceProvider.RNGCryptoServiceProvider
- uid: System.Security.Cryptography.RNGCryptoServiceProvider.Dispose*
  parent: System.Security.Cryptography.RNGCryptoServiceProvider
  isExternal: false
  name: Dispose
  nameWithType: RNGCryptoServiceProvider.Dispose
- uid: System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes*
  parent: System.Security.Cryptography.RNGCryptoServiceProvider
  isExternal: false
  name: GetBytes
  nameWithType: RNGCryptoServiceProvider.GetBytes
- uid: System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes*
  parent: System.Security.Cryptography.RNGCryptoServiceProvider
  isExternal: false
  name: GetNonZeroBytes
  nameWithType: RNGCryptoServiceProvider.GetNonZeroBytes
