### YamlMime:ManagedReference
items:
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService
  id: PluralizationService
  children:
  - System.Data.Entity.Design.PluralizationServices.PluralizationService.#ctor
  - System.Data.Entity.Design.PluralizationServices.PluralizationService.CreateService(System.Globalization.CultureInfo)
  - System.Data.Entity.Design.PluralizationServices.PluralizationService.Culture
  - System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural(System.String)
  - System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular(System.String)
  - System.Data.Entity.Design.PluralizationServices.PluralizationService.Pluralize(System.String)
  - System.Data.Entity.Design.PluralizationServices.PluralizationService.Singularize(System.String)
  langs:
  - csharp
  name: PluralizationService
  nameWithType: PluralizationService
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService
  type: Class
  summary: "단어의 단 수 및 복수 형태를 생성 하기 위한 메서드를 제공 합니다."
  remarks: "PluralizationService 클래스는 단어의 단 수 및 복수 형태를 생성 하기 위해 영어 규칙을 적용 합니다. <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> <xref:System.Data.Entity.Design.EntityModelSchemaGenerator>클래스</xref:System.Data.Entity.Design.EntityModelSchemaGenerator> 에서</xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> 사용 하 여 다른 언어에 서비스를 확장 하려면"
  syntax:
    content: public abstract class PluralizationService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.#ctor
  id: '#ctor'
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  langs:
  - csharp
  name: PluralizationService()
  nameWithType: PluralizationService.PluralizationService()
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.PluralizationService()
  type: Constructor
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design.PluralizationServices
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Entity.Design.PluralizationServices.PluralizationService&quot;> </xref> 클래스입니다."
  syntax:
    content: protected PluralizationService ();
    parameters: []
  overload: System.Data.Entity.Design.PluralizationServices.PluralizationService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.CreateService(System.Globalization.CultureInfo)
  id: CreateService(System.Globalization.CultureInfo)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  langs:
  - csharp
  name: CreateService(CultureInfo)
  nameWithType: PluralizationService.CreateService(CultureInfo)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.CreateService(CultureInfo)
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design.PluralizationServices
  summary: "만듭니다는 <xref href=&quot;System.Data.Entity.Design.PluralizationServices.PluralizationService&quot;> </xref> 지정된 <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> 에 해당 하는 언어 규칙을 적용 하는"
  remarks: "<xref:System.Data.Entity.Design.PluralizationServices.PluralizationService>클래스 단어의 단 수 및 복수 형태를 생성 하기 위해 영어 규칙을 적용 합니다.</xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> <xref:System.Data.Entity.Design.EntityModelSchemaGenerator>클래스</xref:System.Data.Entity.Design.EntityModelSchemaGenerator> 에서</xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> 사용 하 여 다른 언어에 서비스를 확장 하려면"
  syntax:
    content: public static System.Data.Entity.Design.PluralizationServices.PluralizationService CreateService (System.Globalization.CultureInfo culture);
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>단어의 단 수 및 복수 형태에 대 한 적용 되는 언어 규칙에 해당 하는.</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Data.Entity.Design.PluralizationServices.PluralizationService
      description: "새로 만든 <xref href=&quot;System.Data.Entity.Design.PluralizationServices.PluralizationService&quot;> </xref> 개체입니다."
  overload: System.Data.Entity.Design.PluralizationServices.PluralizationService.CreateService*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.Culture
  id: Culture
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  langs:
  - csharp
  name: Culture
  nameWithType: PluralizationService.Culture
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.Culture
  type: Property
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design.PluralizationServices
  summary: "가져오거나는 <xref href=&quot;System.Data.Entity.Design.PluralizationServices.PluralizationService&quot;> </xref> 문화권입니다."
  remarks: "<xref:System.Data.Entity.Design.PluralizationServices.PluralizationService>클래스 단어의 단 수 및 복수 형태를 생성 하기 위해 영어 규칙을 적용 합니다.</xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> <xref:System.Data.Entity.Design.EntityModelSchemaGenerator>클래스</xref:System.Data.Entity.Design.EntityModelSchemaGenerator> 에서</xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> 사용 하 여 다른 언어에 서비스를 확장 하려면"
  syntax:
    content: public System.Globalization.CultureInfo Culture { get; protected set; }
    return:
      type: System.Globalization.CultureInfo
      description: "단 수 및 복수에 적용할 규칙 언어를 지정 하는 개체입니다."
  overload: System.Data.Entity.Design.PluralizationServices.PluralizationService.Culture*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural(System.String)
  id: IsPlural(System.String)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  langs:
  - csharp
  name: IsPlural(String)
  nameWithType: PluralizationService.IsPlural(String)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural(String)
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design.PluralizationServices
  summary: "지정된 된 단어 복수형 인지 확인 합니다."
  remarks: "<xref:System.Data.Entity.Design.PluralizationServices.PluralizationService>클래스 단어의 단 수 및 복수 형태를 생성 하기 위해 영어 규칙을 적용 합니다.</xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> <xref:System.Data.Entity.Design.EntityModelSchemaGenerator>클래스</xref:System.Data.Entity.Design.EntityModelSchemaGenerator> 에서</xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> 사용 하 여 다른 언어에 서비스를 확장 하려면       둘 다는 <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural%2A>및 <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular%2A>메서드에서 반환할 수 `true` 동일한 단어에 대 한.</xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular%2A> </xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural%2A> 두 메서드는 반환 하는 예를 들어 `true` &quot;fish&quot; 이라는 단어에 대 한 합니다."
  syntax:
    content: public abstract bool IsPlural (string word);
    parameters:
    - id: word
      type: System.String
      description: "분석할 값입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>단어가 복수형; 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular(System.String)
  id: IsSingular(System.String)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  langs:
  - csharp
  name: IsSingular(String)
  nameWithType: PluralizationService.IsSingular(String)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular(String)
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design.PluralizationServices
  summary: "지정된 된 단어의 단 수 있는지 확인 합니다."
  remarks: "<xref:System.Data.Entity.Design.PluralizationServices.PluralizationService>클래스 단어의 단 수 및 복수 형태를 생성 하기 위해 영어 규칙을 적용 합니다.</xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> <xref:System.Data.Entity.Design.EntityModelSchemaGenerator>클래스</xref:System.Data.Entity.Design.EntityModelSchemaGenerator> 에서</xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> 사용 하 여 다른 언어에 서비스를 확장 하려면       둘 다는 <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular%2A>및 <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural%2A>메서드에서 반환할 수 `true` 동일한 단어에 대 한.</xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural%2A> </xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular%2A> 두 메서드는 반환 하는 예를 들어 `true` &quot;fish&quot; 이라는 단어에 대 한 합니다."
  syntax:
    content: public abstract bool IsSingular (string word);
    parameters:
    - id: word
      type: System.String
      description: "분석할 값입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>단어가 단 수 있으면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.Pluralize(System.String)
  id: Pluralize(System.String)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  langs:
  - csharp
  name: Pluralize(String)
  nameWithType: PluralizationService.Pluralize(String)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.Pluralize(String)
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design.PluralizationServices
  summary: "지정된 된 단어의 복수 형태가 반환합니다."
  remarks: "<xref:System.Data.Entity.Design.PluralizationServices.PluralizationService>클래스 단어의 단 수 및 복수 형태를 생성 하기 위해 영어 규칙을 적용 합니다.</xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> <xref:System.Data.Entity.Design.EntityModelSchemaGenerator>클래스</xref:System.Data.Entity.Design.EntityModelSchemaGenerator> 에서</xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> 사용 하 여 다른 언어에 서비스를 확장 하려면"
  syntax:
    content: public abstract string Pluralize (string word);
    parameters:
    - id: word
      type: System.String
      description: "복수로 만들 단어입니다."
    return:
      type: System.String
      description: "복수 형태의 입력된 매개 변수입니다."
  overload: System.Data.Entity.Design.PluralizationServices.PluralizationService.Pluralize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.Singularize(System.String)
  id: Singularize(System.String)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  langs:
  - csharp
  name: Singularize(String)
  nameWithType: PluralizationService.Singularize(String)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.Singularize(String)
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design.PluralizationServices
  summary: "지정된 된 단어의 단 수 형태를 반환합니다."
  remarks: "<xref:System.Data.Entity.Design.PluralizationServices.PluralizationService>클래스 단어의 단 수 및 복수 형태를 생성 하기 위해 영어 규칙을 적용 합니다.</xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> <xref:System.Data.Entity.Design.EntityModelSchemaGenerator>클래스</xref:System.Data.Entity.Design.EntityModelSchemaGenerator> 에서</xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> 사용 하 여 다른 언어에 서비스를 확장 하려면"
  syntax:
    content: public abstract string Singularize (string word);
    parameters:
    - id: word
      type: System.String
      description: "단 수로 만들 단어입니다."
    return:
      type: System.String
      description: "단 수 형태의 입력된 매개 변수입니다."
  overload: System.Data.Entity.Design.PluralizationServices.PluralizationService.Singularize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.#ctor
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: PluralizationService()
  nameWithType: PluralizationService.PluralizationService()
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.PluralizationService()
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.CreateService(System.Globalization.CultureInfo)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: CreateService(CultureInfo)
  nameWithType: PluralizationService.CreateService(CultureInfo)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.CreateService(CultureInfo)
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService
  parent: System.Data.Entity.Design.PluralizationServices
  isExternal: false
  name: PluralizationService
  nameWithType: PluralizationService
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.Culture
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: Culture
  nameWithType: PluralizationService.Culture
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.Culture
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural(System.String)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: IsPlural(String)
  nameWithType: PluralizationService.IsPlural(String)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular(System.String)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: IsSingular(String)
  nameWithType: PluralizationService.IsSingular(String)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular(String)
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.Pluralize(System.String)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: Pluralize(String)
  nameWithType: PluralizationService.Pluralize(String)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.Pluralize(String)
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.Singularize(System.String)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: Singularize(String)
  nameWithType: PluralizationService.Singularize(String)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.Singularize(String)
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.#ctor*
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: PluralizationService
  nameWithType: PluralizationService.PluralizationService
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.CreateService*
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: CreateService
  nameWithType: PluralizationService.CreateService
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.Culture*
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: Culture
  nameWithType: PluralizationService.Culture
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural*
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: IsPlural
  nameWithType: PluralizationService.IsPlural
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular*
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: IsSingular
  nameWithType: PluralizationService.IsSingular
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.Pluralize*
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: Pluralize
  nameWithType: PluralizationService.Pluralize
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.Singularize*
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: Singularize
  nameWithType: PluralizationService.Singularize
