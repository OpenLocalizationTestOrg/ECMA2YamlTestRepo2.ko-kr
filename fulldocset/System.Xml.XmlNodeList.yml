### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlNodeList
  id: XmlNodeList
  children:
  - System.Xml.XmlNodeList.#ctor
  - System.Xml.XmlNodeList.Count
  - System.Xml.XmlNodeList.GetEnumerator
  - System.Xml.XmlNodeList.Item(System.Int32)
  - System.Xml.XmlNodeList.ItemOf(System.Int32)
  - System.Xml.XmlNodeList.PrivateDisposeNodeList
  - System.Xml.XmlNodeList.System#IDisposable#Dispose
  langs:
  - csharp
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
  type: Class
  summary: "노드의 정렬된 된 컬렉션을 나타냅니다."
  remarks: "XmlNodeList 컬렉션에서 작성 된 노드 개체의 자식에 대 한 변경에서 반환한 노드에 바로 반영 됩니다는 `XmlNodeList` 속성 및 메서드가 있습니다. `XmlNodeList`인덱싱된 액세스와 반복을 지원합니다.       `XmlNodeList`다음과 같은 속성 및 메서드에 의해 반환 됩니다.      - <xref:System.Xml.XmlNode.ChildNodes%2A?displayProperty=fullName>-반환은 `XmlNodeList` 노드의 모든 자식을 포함 합니다.</xref:System.Xml.XmlNode.ChildNodes%2A?displayProperty=fullName>      - <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName>-반환은 `XmlNodeList` XPath 쿼리와 일치 하는 노드 컬렉션을 포함 합니다.</xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName>      - `GetElementsByTagName` -반환은 `XmlNodeList` 지정된 된 이름과 일치 하는 모든 하위 요소의 목록이 포함 됩니다. 이 메서드는 모두에서 사용할 수는 <xref:System.Xml.XmlDocument>및 <xref:System.Xml.XmlElement>클래스.</xref:System.Xml.XmlElement> </xref:System.Xml.XmlDocument>"
  syntax:
    content: 'public abstract class XmlNodeList : IDisposable, System.Collections.IEnumerable'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.XmlNodeList.#ctor
  id: '#ctor'
  parent: System.Xml.XmlNodeList
  langs:
  - csharp
  name: XmlNodeList()
  nameWithType: XmlNodeList.XmlNodeList()
  fullName: System.Xml.XmlNodeList.XmlNodeList()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> 클래스입니다."
  syntax:
    content: protected XmlNodeList ();
    parameters: []
  overload: System.Xml.XmlNodeList.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeList.Count
  id: Count
  parent: System.Xml.XmlNodeList
  langs:
  - csharp
  name: Count
  nameWithType: XmlNodeList.Count
  fullName: System.Xml.XmlNodeList.Count
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "노드 수를 가져옵니다는 <xref uid=&quot;langword_csharp_XmlNodeList&quot; name=&quot;XmlNodeList&quot; href=&quot;&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Xml.XmlDocument> object and uses the <xref:System.Xml.XmlDocument.GetElementsByTagName%2A> method and the resulting `XmlNodeList` to display all the book titles.  \n  \n [!code-cpp[Classic WebData XmlElement.GetElementsByTagName Example#1](~/add/codesnippet/cpp/p-system.xml.xmlnodelist_0_1.cpp)]\n [!code-vb[Classic WebData XmlElement.GetElementsByTagName Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlnodelist_0_1.vb)]\n [!code-cs[Classic WebData XmlElement.GetElementsByTagName Example#1](~/add/codesnippet/csharp/p-system.xml.xmlnodelist_0_1.cs)]  \n  \n The example uses the file `2books.xml` as input.  \n  \n [!code-xml[Classic WebData XmlElement.GetElementsByTagName Example#2](~/add/codesnippet/xml/p-system.xml.xmlnodelist_0_2.xml)]"
  syntax:
    content: public abstract int Count { get; }
    return:
      type: System.Int32
      description: "노드 수는 <xref uid=&quot;langword_csharp_XmlNodeList&quot; name=&quot;XmlNodeList&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xml.XmlNodeList.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeList.GetEnumerator
  id: GetEnumerator
  parent: System.Xml.XmlNodeList
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: XmlNodeList.GetEnumerator()
  fullName: System.Xml.XmlNodeList.GetEnumerator()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "노드의 컬렉션을 반복 하는 열거자를 가져옵니다."
  remarks: "간단한 &quot;foreach&quot; 스타일 반복에 있는 노드의 컬렉션에 대해 제공 된 `XmlNodeList`합니다."
  example:
  - "The following example displays all the book titles.  \n  \n [!code-cpp[Classic WebData XmlNodeList.GetEnumerator Example#1](~/add/codesnippet/cpp/m-system.xml.xmlnodelist_0_1.cpp)]\n [!code-vb[Classic WebData XmlNodeList.GetEnumerator Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlnodelist_0_1.vb)]\n [!code-cs[Classic WebData XmlNodeList.GetEnumerator Example#1](~/add/codesnippet/csharp/m-system.xml.xmlnodelist_0_1.cs)]  \n  \n The example uses the file `2books.xml` as input.  \n  \n [!code-xml[Classic WebData XmlNodeList.GetEnumerator Example#2](~/add/codesnippet/xml/m-system.xml.xmlnodelist_0_2.xml)]"
  syntax:
    content: public abstract System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "노드의 컬렉션을 반복 하는 데 사용 하는 열거자입니다."
  overload: System.Xml.XmlNodeList.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeList.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Xml.XmlNodeList
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: XmlNodeList.Item(Int32)
  fullName: System.Xml.XmlNodeList.Item(Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "지정된 된 인덱스에 있는 노드를 검색합니다."
  remarks: ''
  example:
  - "The following example gets and displays the second node in the `XmlNodeList`.  \n  \n [!code-cpp[Classic WebData XmlNodeList.Item Example#1](~/add/codesnippet/cpp/m-system.xml.xmlnodelist_1_1.cpp)]\n [!code-vb[Classic WebData XmlNodeList.Item Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlnodelist_1_1.vb)]\n [!code-cs[Classic WebData XmlNodeList.Item Example#1](~/add/codesnippet/csharp/m-system.xml.xmlnodelist_1_1.cs)]"
  syntax:
    content: public abstract System.Xml.XmlNode Item (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "노드 목록에&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> 컬렉션에서 지정 된 인덱스를 사용 합니다. 경우 <code> index </code> 를 반환 합니다.이 목록에서 노드 개수 보다 크거나 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xml.XmlNodeList.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeList.ItemOf(System.Int32)
  id: ItemOf(System.Int32)
  parent: System.Xml.XmlNodeList
  langs:
  - csharp
  name: ItemOf(Int32)
  nameWithType: XmlNodeList.ItemOf(Int32)
  fullName: System.Xml.XmlNodeList.ItemOf(Int32)
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "지정된 된 인덱스에서 노드를 가져옵니다."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Xml.XmlDocument> object and uses the <xref:System.Xml.XmlDocument.GetElementsByTagName%2A> method and the resulting `XmlNodeList` to display all the book titles.  \n  \n [!code-cpp[Classic WebData XmlElement.GetElementsByTagName Example#1](~/add/codesnippet/cpp/p-system.xml.xmlnodelist_1_1.cpp)]\n [!code-vb[Classic WebData XmlElement.GetElementsByTagName Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlnodelist_1_1.vb)]\n [!code-cs[Classic WebData XmlElement.GetElementsByTagName Example#1](~/add/codesnippet/csharp/p-system.xml.xmlnodelist_1_1.cs)]  \n  \n The example uses the file `2books.xml` as input.  \n  \n [!code-xml[Classic WebData XmlElement.GetElementsByTagName Example#2](~/add/codesnippet/xml/p-system.xml.xmlnodelist_1_2.xml)]"
  syntax:
    content: public virtual System.Xml.XmlNode this[int i] { get; }
    parameters:
    - id: i
      type: System.Int32
      description: "노드 목록에&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> 컬렉션에서 지정 된 인덱스를 사용 합니다. 이 반환 하는 경우 index가 또는 목록의 노드 수와 같고, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xml.XmlNodeList.ItemOf*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeList.PrivateDisposeNodeList
  id: PrivateDisposeNodeList
  parent: System.Xml.XmlNodeList
  langs:
  - csharp
  name: PrivateDisposeNodeList()
  nameWithType: XmlNodeList.PrivateDisposeNodeList()
  fullName: System.Xml.XmlNodeList.PrivateDisposeNodeList()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "개인적으로 노드 목록에서 리소스를 삭제합니다."
  syntax:
    content: protected virtual void PrivateDisposeNodeList ();
    parameters: []
  overload: System.Xml.XmlNodeList.PrivateDisposeNodeList*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeList.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Xml.XmlNodeList
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: XmlNodeList.System.IDisposable.Dispose()
  fullName: System.Xml.XmlNodeList.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "사용 하는 모든 리소스를 해제는 <xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> 클래스입니다."
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Xml.XmlNodeList.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.XmlNodeList.#ctor
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: XmlNodeList()
  nameWithType: XmlNodeList.XmlNodeList()
  fullName: System.Xml.XmlNodeList.XmlNodeList()
- uid: System.Xml.XmlNodeList.Count
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: Count
  nameWithType: XmlNodeList.Count
  fullName: System.Xml.XmlNodeList.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.XmlNodeList.GetEnumerator
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: GetEnumerator()
  nameWithType: XmlNodeList.GetEnumerator()
  fullName: System.Xml.XmlNodeList.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Xml.XmlNodeList.Item(System.Int32)
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: Item(Int32)
  nameWithType: XmlNodeList.Item(Int32)
  fullName: System.Xml.XmlNodeList.Item(Int32)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Xml.XmlNodeList.ItemOf(System.Int32)
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: ItemOf(Int32)
  nameWithType: XmlNodeList.ItemOf(Int32)
  fullName: System.Xml.XmlNodeList.ItemOf(Int32)
- uid: System.Xml.XmlNodeList.PrivateDisposeNodeList
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: PrivateDisposeNodeList()
  nameWithType: XmlNodeList.PrivateDisposeNodeList()
  fullName: System.Xml.XmlNodeList.PrivateDisposeNodeList()
- uid: System.Xml.XmlNodeList.System#IDisposable#Dispose
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: XmlNodeList.System.IDisposable.Dispose()
  fullName: System.Xml.XmlNodeList.System.IDisposable.Dispose()
- uid: System.Xml.XmlNodeList.#ctor*
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList.XmlNodeList
- uid: System.Xml.XmlNodeList.Count*
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: Count
  nameWithType: XmlNodeList.Count
- uid: System.Xml.XmlNodeList.GetEnumerator*
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: GetEnumerator
  nameWithType: XmlNodeList.GetEnumerator
- uid: System.Xml.XmlNodeList.Item*
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: Item
  nameWithType: XmlNodeList.Item
- uid: System.Xml.XmlNodeList.ItemOf*
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: ItemOf
  nameWithType: XmlNodeList.ItemOf
- uid: System.Xml.XmlNodeList.PrivateDisposeNodeList*
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: PrivateDisposeNodeList
  nameWithType: XmlNodeList.PrivateDisposeNodeList
- uid: System.Xml.XmlNodeList.System#IDisposable#Dispose*
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: XmlNodeList.System.IDisposable.Dispose
