### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException
  id: LinqDataSourceValidationException
  children:
  - System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor
  - System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)
  - System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})
  - System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Exception)
  - System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions
  langs:
  - csharp
  name: LinqDataSourceValidationException
  nameWithType: LinqDataSourceValidationException
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException
  type: Class
  summary: "설명의 유효성을 검사 하는 동안 새로 발생 했거나 값 삽입, 업데이트 또는 삭제 하기 전에 값을 수정 하는 예외는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> 제어 합니다."
  remarks: "형식 변환 및 속성 setter 예외 LinqDataSourceValidationException 클래스에 포함 되어 있습니다. 에 포함 된 모든 유효성 검사 중에 throw 된 예외는 <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>컬렉션.</xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> 반복 하 여 각 유효성 검사 예외를 검색할 수 있습니다는 <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>컬렉션.</xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>       일반적으로에서 예외를 처리 하는 <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, 및 <xref:System.Web.UI.WebControls.LinqDataSource.Inserting>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.Inserting> </xref:System.Web.UI.WebControls.LinqDataSource.Deleting> </xref:System.Web.UI.WebControls.LinqDataSource.Updating> 유효성 검사 예외가 throw 되 면는 `Exception` 의 속성은 <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>, <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>, 또는 <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>LinqDataSourceValidationException 개체를 포함 하는 개체입니다.</xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> </xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> </xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> 예외가 throw 되는 `Exception` 속성 포함 `null`합니다.       유효성 검사 예외를 처리 하려면 만들기에 대 한 처리기는 <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, 또는 <xref:System.Web.UI.WebControls.LinqDataSource.Inserting>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.Inserting> </xref:System.Web.UI.WebControls.LinqDataSource.Deleting> </xref:System.Web.UI.WebControls.LinqDataSource.Updating> 이벤트 처리기에서 확인 여부는 `Exception` 이벤트 인수 클래스의 속성 값이 아닌 다른 포함 `null`합니다. 경우는 `Exception` 속성이 null이 아닌 하나 이상의 유효성 검사 예외가 발생 하 고에서 각 유효성 검사 예외를 검색할 수 있습니다는 <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>속성.</xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>       값 속성의 형식과 일치 하지 않는 경우 유효성 검사 예외가 발생할 수 있습니다. 예를 들어 숫자가 아닌 문자를 사용 하 여 정수 속성을 업데이트 하려는 유효성 검사 예외가 발생 합니다. LINQ to SQL 클래스 예상된 범위 또는 패턴 내에 있는 값이 속성에 포함 되도록 하는 사용자 지정된 유효성 검사 조건을 포함할 수도 있습니다."
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event. It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.  \n  \n```vb#  \nProtected Sub LinqDataSource_Updating(ByVal sender As Object, _  \n        ByVal e As LinqDataSourceUpdateEventArgs)  \n    If (e.Exception IsNot Nothing) Then  \n        For Each innerException As KeyValuePair(Of String, Exception) _  \n               In e.Exception.InnerExceptions  \n            Label1.Text &= innerException.Key & \": \" & _  \n                innerException.Value.Message & \"<br />\"  \n        Next  \n        e.ExceptionHandled = True  \n    End If  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \nprotected void LinqDataSource_Updating(object sender,   \n        LinqDataSourceUpdateEventArgs e)  \n{  \n    if (e.Exception != null)  \n    {  \n        foreach (KeyValuePair<string, Exception> innerException in   \n             e.Exception.InnerExceptions)  \n        {  \n        Label1.Text += innerException.Key + \": \" +   \n            innerException.Value.Message + \"<br />\";  \n        }  \n        e.ExceptionHandled = true;  \n    }  \n}  \n```"
  syntax:
    content: 'public class LinqDataSourceValidationException : Exception, System.Web.DynamicData.IDynamicValidatorException'
  inheritance:
  - System.Exception
  implements:
  - System.Web.DynamicData.IDynamicValidatorException
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  langs:
  - csharp
  name: LinqDataSourceValidationException()
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException()
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceValidationException&quot;> </xref> 오류를 설명 하는 시스템 제공 메시지로 클래스입니다."
  remarks: "오류를 설명 하는 시스템 제공 메시지는 현재 시스템 문화권을 고려 합니다.       다음 표에서 <xref:System.Web.UI.WebControls.LinqDataSourceValidationException>클래스</xref:System.Web.UI.WebControls.LinqDataSourceValidationException> 의 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 값 |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| `null`.|   | <xref:System.Exception.Message%2A>| 시스템 제공 A는 지역화 된 설명입니다. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public LinqDataSourceValidationException ();
    parameters: []
  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  langs:
  - csharp
  name: LinqDataSourceValidationException(String)
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(String)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException(String)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceValidationException&quot;> </xref> 지정 된 메시지 오류를 설명 하는 클래스입니다."
  remarks: "다음 표에서 <xref:System.Web.UI.WebControls.LinqDataSourceValidationException>클래스</xref:System.Web.UI.WebControls.LinqDataSourceValidationException> 의 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 값 |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| `null`.|   | <xref:System.Exception.Message%2A>| 에 지정 된 오류 메시지 문자열 `message`. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public LinqDataSourceValidationException (string message);
    parameters:
    - id: message
      type: System.String
      description: "오류를 설명 하는 메시지입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  langs:
  - csharp
  name: LinqDataSourceValidationException(SerializationInfo,StreamingContext)
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(SerializationInfo,StreamingContext)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceValidationException&quot;> </xref> serialize 된 데이터 클래스입니다."
  remarks: "이 생성자는 역직렬화 스트림을 통해 전송 되는 예외 개체를 다시 구성 하는 동안 호출 됩니다."
  syntax:
    content: protected LinqDataSourceValidationException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "직렬화 된 개체 데이터를 보유 하는 개체입니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "소스 또는 대상에 대 한 컨텍스트 정보입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})
  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})'
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  langs:
  - csharp
  name: LinqDataSourceValidationException(String,IDictionary<String,Exception>)
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(String,IDictionary<String,Exception>)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException(String,IDictionary<String,Exception>)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceValidationException&quot;> </xref> 지정 된 메시지 오류 및 내부 예외에 대 한 참조의 컬렉션을 설명 하는 클래스입니다."
  syntax:
    content: public LinqDataSourceValidationException (string message, System.Collections.Generic.IDictionary<string,Exception> innerExceptions);
    parameters:
    - id: message
      type: System.String
      description: "오류를 설명 하는 메시지입니다."
    - id: innerExceptions
      type: System.Collections.Generic.IDictionary{System.String,System.Exception}
      description: "유효성 검사 예외의 컬렉션입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  langs:
  - csharp
  name: LinqDataSourceValidationException(String,Exception)
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(String,Exception)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException(String,Exception)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceValidationException&quot;> </xref> 지정된 된 오류 메시지와 내부 예외에 대 한 참조를 사용 하 여 클래스입니다."
  remarks: "일반적으로 사용 하지 것입니다이 생성자에 저장 되므로 유효성 검사 예외는 <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>속성 하지는 <xref:System.Exception.InnerException%2A>속성.</xref:System.Exception.InnerException%2A> </xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>"
  syntax:
    content: public LinqDataSourceValidationException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "오류를 설명 하는 메시지입니다."
    - id: innerException
      type: System.Exception
      description: "현재 예외의 원인인 예외입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: LinqDataSourceValidationException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "예외에 대 한 정보를 가져오고에 추가 된 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 개체입니다."
  remarks: "에 대 한 예외에 대 한 정보를 추가 하는 경우 GetObjectData 메서드는 <xref:System.Runtime.Serialization.SerializationInfo>개체 serialization에 대 한 대상입니다.</xref:System.Runtime.Serialization.SerializationInfo> deserialization을 수행 하는 동안 예외가 재구성 됩니다는 <xref:System.Runtime.Serialization.SerializationInfo>스트림을 통해 전송 되는.</xref:System.Runtime.Serialization.SerializationInfo>"
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Throw 되는 예외에 대 한 직렬화 된 개체 데이터를 보유 하는 개체입니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "소스 또는 대상에 대 한 컨텍스트 정보입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions
  id: InnerExceptions
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  langs:
  - csharp
  name: InnerExceptions
  nameWithType: LinqDataSourceValidationException.InnerExceptions
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "새롭거나 수정 된 데이터 유효성을 검사 하는 경우에 발생 한 하나 이상의 예외를 가져옵니다."
  remarks: "업데이트를 하기 전에 데이터 유효성 검사 하는 동안 발생 하는 모든 유효성 검사 예외를 포함 하는 컬렉션 InnerExceptions 삽입 또는 삭제 작업. 값 속성의 형식과 일치 하지 않는 경우 유효성 검사 예외가 발생할 수 있습니다. 예를 들어 숫자가 아닌 문자를 사용 하 여 정수 속성을 업데이트 하려고 하면 유효성 검사 예외가 throw 됩니다. LINQ to SQL 클래스 예상된 범위 또는 패턴 내에 있는 값이 속성에 포함 되도록 하는 사용자 지정된 유효성 검사 조건을 포함할 수도 있습니다."
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event. It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.  \n  \n```vb#  \nProtected Sub LinqDataSource_Updating(ByVal sender As Object, _  \n        ByVal e As LinqDataSourceUpdateEventArgs)  \n    If (e.Exception IsNot Nothing) Then  \n        For Each innerException As KeyValuePair(Of String, Exception) _  \n                In e.Exception.InnerExceptions  \n          Label1.Text &= innerException.Key & \": \" & _   \n                  innerException.Value.Message & \"<br />\"  \n        Next  \n        e.ExceptionHandled = True  \n    End If  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \nprotected void LinqDataSource_Updating(object sender,   \n        LinqDataSourceUpdateEventArgs e)   \n{  \n    if (e.Exception != null)  \n    {  \n        foreach (KeyValuePair<string, Exception> innerException in   \n            e.Exception.InnerExceptions)  \n        {  \n            Label1.Text += innerException.Key + \": \" +   \n                innerException.Message + \"<br />\";  \n        }  \n        e.ExceptionHandled = true;  \n    }  \n}  \n```"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,Exception> InnerExceptions { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Exception}
      description: "예외를 포함 하는 컬렉션입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Exception
  isExternal: false
  name: System.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: LinqDataSourceValidationException()
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException()
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException()
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: LinqDataSourceValidationException(String)
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(String)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: LinqDataSourceValidationException(SerializationInfo,StreamingContext)
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(SerializationInfo,StreamingContext)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: LinqDataSourceValidationException(String,IDictionary<String,Exception>)
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(String,IDictionary<String,Exception>)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException(String,IDictionary<String,Exception>)
- uid: System.Collections.Generic.IDictionary{System.String,System.Exception}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Exception>
  nameWithType: IDictionary<String,Exception>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Exception>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Exception>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Exception)
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: LinqDataSourceValidationException(String,Exception)
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(String,Exception)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException(String,Exception)
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: LinqDataSourceValidationException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: InnerExceptions
  nameWithType: LinqDataSourceValidationException.InnerExceptions
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor*
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: LinqDataSourceValidationException
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData*
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: GetObjectData
  nameWithType: LinqDataSourceValidationException.GetObjectData
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions*
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: InnerExceptions
  nameWithType: LinqDataSourceValidationException.InnerExceptions
