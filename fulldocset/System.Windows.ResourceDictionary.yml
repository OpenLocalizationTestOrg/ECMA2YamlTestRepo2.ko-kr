### YamlMime:ManagedReference
items:
- uid: System.Windows.ResourceDictionary
  id: ResourceDictionary
  children:
  - System.Windows.ResourceDictionary.#ctor
  - System.Windows.ResourceDictionary.Add(System.Object,System.Object)
  - System.Windows.ResourceDictionary.BeginInit
  - System.Windows.ResourceDictionary.Clear
  - System.Windows.ResourceDictionary.Contains(System.Object)
  - System.Windows.ResourceDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)
  - System.Windows.ResourceDictionary.Count
  - System.Windows.ResourceDictionary.DeferrableContent
  - System.Windows.ResourceDictionary.EndInit
  - System.Windows.ResourceDictionary.FindName(System.String)
  - System.Windows.ResourceDictionary.GetEnumerator
  - System.Windows.ResourceDictionary.IsFixedSize
  - System.Windows.ResourceDictionary.IsReadOnly
  - System.Windows.ResourceDictionary.Item(System.Object)
  - System.Windows.ResourceDictionary.Keys
  - System.Windows.ResourceDictionary.MergedDictionaries
  - System.Windows.ResourceDictionary.OnGettingValue(System.Object,System.Object@,System.Boolean@)
  - System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)
  - System.Windows.ResourceDictionary.Remove(System.Object)
  - System.Windows.ResourceDictionary.Source
  - System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized
  - System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot
  - System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator
  - System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri
  - System.Windows.ResourceDictionary.UnregisterName(System.String)
  - System.Windows.ResourceDictionary.Values
  langs:
  - csharp
  name: ResourceDictionary
  nameWithType: ResourceDictionary
  fullName: System.Windows.ResourceDictionary
  type: Class
  summary: "해시 테이블을 제공 / 포함 하는 사전 구현을 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 구성 요소 및 기타 요소를 사용 하는 리소스는 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 응용 프로그램입니다."
  remarks: "응용 프로그램 코드를 로드할 때 ResourceDictionary의 항목이 즉시 처리 되지 않습니다는 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] 로더 합니다. 대신, 개체로 서는 ResourceDictionary 유지 하 고 개별 값에 명시적으로 요청 될 경우에 처리 됩니다.       ResourceDictionary 클래스 <xref:System.Collections.DictionaryBase>.</xref:System.Collections.DictionaryBase> 에서 파생 되지 않습니다. ResourceDictionary 클래스가 구현 하는 대신, <xref:System.Collections.IDictionary>에 의존 하지만 <xref:System.Collections.Hashtable>내부적으로.</xref:System.Collections.Hashtable> </xref:System.Collections.IDictionary>       [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)], ResourceDictionary 클래스는 일반적으로 일부의 개체 요소 값은 암시적 컬렉션 요소 `Resources` 속성, 속성 요소 구문에 지정 된 경우. 암시적 컬렉션에 대 한 자세한 내용은 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], 참조 [XAML 구문에서 세부](~/add/includes/ajax-current-ext-md.md)합니다. 예외는 병합 된 사전;를 지정 하려는 경우 자세한 내용은 참조 [자세한](~/add/includes/ajax-current-ext-md.md)합니다.       가능한 다른 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] 사용법은 단일 리소스 사전을 선언 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] 파일을 로드 하거나 실행 시 <xref:System.Windows.Markup.XamlReader.Load%2A>또는 리소스 또는 느슨한 파일 (완전 신뢰) 프로젝트에 포함 합니다.</xref:System.Windows.Markup.XamlReader.Load%2A> 이 경우 ResourceDictionary로 선언할 수 있습니다는 object 요소 역할의 루트 요소는 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]합니다. 적절 한 XML 네임 스페이스 값을 매핑해야 합니다 (에 대 한 기본는 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 네임 스페이스 하며 일반적으로 `x:` 에 대 한는 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] 네임 스페이스) 루트 요소로 사용 하려는 경우 ResourceDictionary 요소에 있습니다. 다음 값을 가진 각 리소스를 정의 하는 자식 요소를 추가할 수 있습니다.      <a name=&quot;xamlImplicitCollectionUsage_ResourceDictionary&quot;></a># # XAML 암시적 컬렉션 사용 ```   <object>     <object.resourcesProperty>       oneOrMoreResources     </object.resourcesProperty>   </object>   ``` <a name=&quot;xamlValues_ResourceDictionary&quot;> </a> # # XAML 값 *resourcesProperty* 여기서 해당 속성의 값 유형이 ResourceDictionary 속성 요소를 지정 하는 속성이 있습니다.       이 일반적으로 `Resources` 속성 <xref:System.Windows.FrameworkElement>또는 <xref:System.Windows.FrameworkContentElement>, 또는 <xref:System.Windows.Application>응용 프로그램 리소스 사례에.</xref:System.Windows.Application> </xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement>       *oneOrMoreResources* 개체 요소로 지정 하는 하나 이상의 리소스입니다. 지정 하는 각 리소스에 있어야는 [X:key 지시문](~/add/includes/ajax-current-ext-md.md) 할당 합니다."
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)]

      [System.Windows.Markup.Ambient]

      [System.Windows.Markup.UsableDuringInitialization(true)]

      public class ResourceDictionary : System.Collections.IDictionary, System.ComponentModel.ISupportInitialize, System.Windows.Markup.INameScope, System.Windows.Markup.IUriContext
  inheritance:
  - System.Object
  implements:
  - System.Collections.IDictionary
  - System.ComponentModel.ISupportInitialize
  - System.Windows.Markup.INameScope
  - System.Windows.Markup.IUriContext
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.#ctor
  id: '#ctor'
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: ResourceDictionary()
  nameWithType: ResourceDictionary.ResourceDictionary()
  fullName: System.Windows.ResourceDictionary.ResourceDictionary()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref> 클래스입니다."
  syntax:
    content: public ResourceDictionary ();
    parameters: []
  overload: System.Windows.ResourceDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Add(System.Object,System.Object)
  id: Add(System.Object,System.Object)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Add(Object,Object)
  nameWithType: ResourceDictionary.Add(Object,Object)
  fullName: System.Windows.ResourceDictionary.Add(Object,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "리소스를이를 키로 추가 <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>합니다."
  remarks: "중복 키를 추가 하려고 하면 예외가 발생 합니다.       키는 항상 기본 사전에 추가 됩니다. 에 키 <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>현재 <xref:System.Windows.ResourceDictionary>기본 사전을 중복 검사 중복 여부를 확인 하지 않습니다.</xref:System.Windows.ResourceDictionary> </xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>"
  syntax:
    content: public void Add (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "추가할 키의 이름입니다."
    - id: value
      type: System.Object
      description: "추가할 리소스의 값입니다."
  overload: System.Windows.ResourceDictionary.Add*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref> 잠겨 있거나 읽기 전용입니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "같은 키를 가진 요소가 이미는 <xref href=&quot;System.Collections.Hashtable&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.BeginInit
  id: BeginInit
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: BeginInit()
  nameWithType: ResourceDictionary.BeginInit()
  fullName: System.Windows.ResourceDictionary.BeginInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "이 대 한 초기화 단계를 시작 <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>합니다."
  remarks: "이 메서드를 호출 하는 내용의 <xref:System.Windows.ResourceDictionary>로드 됩니다.</xref:System.Windows.ResourceDictionary> <xref:System.Windows.ResourceDictionary.EndInit%2A>.</xref:System.Windows.ResourceDictionary.EndInit%2A> 를 호출 하는 프로세스의 다음 단계는       <xref:System.Windows.ResourceDictionary.EndInit%2A>.</xref:System.Windows.ResourceDictionary.EndInit%2A> 를 호출 하기 전에 BeginInit를 두 번 이상 호출 마십시오 이렇게 하면 예외가 발생 합니다."
  syntax:
    content: public void BeginInit ();
    parameters: []
  overload: System.Windows.ResourceDictionary.BeginInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "전에 BeginInit를 두 번 이상 호출 <xref:System.Windows.ResourceDictionary.EndInit*>호출 되었습니다.</xref:System.Windows.ResourceDictionary.EndInit*>"
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Clear
  id: Clear
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Clear()
  nameWithType: ResourceDictionary.Clear()
  fullName: System.Windows.ResourceDictionary.Clear()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "자료의 모든 키와 값을 지웁니다 <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>합니다. 이 지우지 않습니다 모든 사전 항목을 병합 합니다."
  remarks: "병합 된 사전 항목의 선택을 취소 해야 할 경우 가져올에서 특정 사전 <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>컬렉션과 특별히 호출을 명확히 이해 하는 <xref:System.Windows.ResourceDictionary>원격 사전은 일반적으로 액세스 권한이 없을 수 있지만,.</xref:System.Windows.ResourceDictionary> </xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> 또는 전체를 제거할 <xref:System.Windows.ResourceDictionary>에서 <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>제네릭 컬렉션에서 제거를 호출 하 여.</xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> </xref:System.Windows.ResourceDictionary>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Windows.ResourceDictionary.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: ResourceDictionary.Contains(Object)
  fullName: System.Windows.ResourceDictionary.Contains(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "결정 여부는 <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref> 지정된 된 키가 있는 요소가 포함 됩니다."
  remarks: "요청된 된 키가 리소스 사전에 없는 경우 리소스 조회 논리 병합된 된 사전도 확인 합니다."
  syntax:
    content: public bool Contains (object key);
    parameters:
    - id: key
      type: System.Object
      description: "찾을 수 있는 키의 <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref> 지정 된 키-값 쌍이 포함 되어 고, 그렇지 않으면 키 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.ResourceDictionary.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)
  id: CopyTo(System.Collections.DictionaryEntry[],System.Int32)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: CopyTo(DictionaryEntry[],Int32)
  nameWithType: ResourceDictionary.CopyTo(DictionaryEntry[],Int32)
  fullName: System.Windows.ResourceDictionary.CopyTo(DictionaryEntry[],Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "복사본의 <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref> 요소를 사용 하는&1; 차원 <xref:System.Collections.DictionaryEntry>지정된 된 인덱스에.</xref:System.Collections.DictionaryEntry>"
  remarks: "이 기본 사전만 복사합니다. 결과 배열은 아무런 <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>되도록 다시 구성 될 경우는 <xref:System.Windows.ResourceDictionary>다시.</xref:System.Windows.ResourceDictionary> </xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>"
  syntax:
    content: public void CopyTo (System.Collections.DictionaryEntry[] array, int arrayIndex);
    parameters:
    - id: array
      type: System.Collections.DictionaryEntry[]
      description: "대상인&1; 차원 배열에서 <xref:System.Collections.DictionaryEntry>에서 복사 된 개체는 <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref> 인스턴스.</xref:System.Collections.DictionaryEntry> 배열에는&0;부터 시작 하는 인덱스가 있어야 합니다."
    - id: arrayIndex
      type: System.Int32
      description: "부터 `array` 복사를 시작 합니다."
  overload: System.Windows.ResourceDictionary.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Count
  id: Count
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Count
  nameWithType: ResourceDictionary.Count
  fullName: System.Windows.ResourceDictionary.Count
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "기본의 항목 수를 가져옵니다 <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>합니다."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "기본 사전에 있는 항목의 현재 수입니다."
  overload: System.Windows.ResourceDictionary.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.DeferrableContent
  id: DeferrableContent
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: DeferrableContent
  nameWithType: ResourceDictionary.DeferrableContent
  fullName: System.Windows.ResourceDictionary.DeferrableContent
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "이 리소스 사전에 대 한 지연 가능한 콘텐츠를 가져오거나 설정 합니다."
  syntax:
    content: public System.Windows.DeferrableContent DeferrableContent { get; set; }
    return:
      type: System.Windows.DeferrableContent
      description: "항상 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.ResourceDictionary.DeferrableContent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.EndInit
  id: EndInit
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: EndInit()
  nameWithType: ResourceDictionary.EndInit()
  fullName: System.Windows.ResourceDictionary.EndInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "초기화 단계를 종료 하 고 초기화 단계 동안 키에 대 한 모든 변경 내용에 대해 설명할 수 있도록 이전 트리를 무효화 합니다."
  remarks: "<xref:System.Windows.ResourceDictionary.BeginInit%2A>한 EndInit 트랜잭션 모델을 따릅니다.</xref:System.Windows.ResourceDictionary.BeginInit%2A> <xref:System.Windows.ResourceDictionary.BeginInit%2A>초기화 되지 않은 사전와 초기화 되 고 EndInit 표시가 표시 됩니다.</xref:System.Windows.ResourceDictionary.BeginInit%2A>"
  syntax:
    content: public void EndInit ();
    parameters: []
  overload: System.Windows.ResourceDictionary.EndInit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.FindName(System.String)
  id: FindName(System.String)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: FindName(String)
  nameWithType: ResourceDictionary.FindName(String)
  fullName: System.Windows.ResourceDictionary.FindName(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "이 사전 구현에서 지원 되지 않습니다."
  remarks: "<xref:System.Windows.ResourceDictionary>클래스 이름으로 등록을 지원 하지 않습니다.</xref:System.Windows.ResourceDictionary> 대신 키를 사용 합니다."
  syntax:
    content: public object FindName (string name);
    parameters:
    - id: name
      type: System.String
      description: "요청 된 개체에 대 한 이름 식별자입니다."
    return:
      type: System.Object
      description: "항상 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.ResourceDictionary.FindName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ResourceDictionary.GetEnumerator()
  fullName: System.Windows.ResourceDictionary.GetEnumerator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "반환 된 <xref:System.Collections.IDictionaryEnumerator>을 반복 하는 데 사용 하는 <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>.</xref:System.Collections.IDictionaryEnumerator>"
  remarks: "이 반복기는 기본 사전입니다."
  syntax:
    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "에 대 한 특수 열거자는 <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>합니다."
  overload: System.Windows.ResourceDictionary.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.IsFixedSize
  id: IsFixedSize
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: ResourceDictionary.IsFixedSize
  fullName: System.Windows.ResourceDictionary.IsFixedSize
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "가져옵니다 여부이 <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref> 크기가 고정 되어 있습니다."
  remarks: "기본 구현은 반환 하는 <xref:System.Collections.Hashtable>기본값 즉, `false`.</xref:System.Collections.Hashtable>"
  syntax:
    content: public bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>해시 테이블의 크기가 고정 되어 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.ResourceDictionary.IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ResourceDictionary.IsReadOnly
  fullName: System.Windows.ResourceDictionary.IsReadOnly
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "가져옵니다 여부이 <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref> 읽기 전용입니다."
  remarks: "이 속성은 반환 된 <xref:System.Collections.Hashtable>기본값 즉, `false`.</xref:System.Collections.Hashtable>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>해시 테이블 읽기 전용인 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.ResourceDictionary.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Item(System.Object)
  id: Item(System.Object)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Item(Object)
  nameWithType: ResourceDictionary.Item(Object)
  fullName: System.Windows.ResourceDictionary.Item(Object)
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "지정된 된 키와 연결 된 값을 가져오거나 설정 합니다."
  remarks: "요청된 된 키가 리소스 사전에 없는 경우 프레임 워크 리소스 시스템 병합된 된 사전도 확인 합니다.       검사는 <xref:System.Windows.ResourceDictionary>항목이 나 인덱스 별로 않습니다 일반적으로 리소스를 검색 하는 것이 좋습니다.</xref:System.Windows.ResourceDictionary> 대신 전체 리소스 조회 프로세스에 참가 하 고 해당 키를 기준으로 리소스를 조회 하 고 응용 프로그램 또는 테마에서 리소스를 찾을 수 있는 메서드를 호출 해야 합니다. <xref:System.Windows.FrameworkElement.FindResource%2A>이러한 방법 이며 모든 <xref:System.Windows.FrameworkElement>.</xref:System.Windows.FrameworkElement> 에</xref:System.Windows.FrameworkElement.FindResource%2A> 그렇지 않으면 리소스를 찾을 수 시도할 때 실제 런타임 동작은 일치 하지 않습니다.       그러나 리소스는 개별 사전에서 직접 얻을 수 있습니다는 알려진에서 리소스를 검색 하는 경우 적절 한 <xref:System.Windows.ResourceDictionary>위치 되며 런타임에 키 조회의 가능한 성능 및 범위 의미를 방지 하려는.</xref:System.Windows.ResourceDictionary>       인덱서 정의의 컬렉션 멤버를 사용 하지 않는 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]합니다. 대신, 자식 요소 만듭니다 태그에서. 자식 요소는의 자식 요소 이거나 <xref:System.Windows.ResourceDictionary>, 또는 속성 형식이 속성 요소의 `ResourceDictionary`.</xref:System.Windows.ResourceDictionary> 자세한 내용은 참조는 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] <xref:System.Windows.ResourceDictionary>.</xref:System.Windows.ResourceDictionary> 사용 섹션      <a name=&quot;xamlTextUsage_Item&quot;></a># # XAML 텍스트 사용 설명을 참조 하세요."
  syntax:
    content: public object this[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: "가져오거나 설정할 원하는 키입니다."
    return:
      type: System.Object
      description: "키의 값입니다."
  overload: System.Windows.ResourceDictionary.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Keys
  id: Keys
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Keys
  nameWithType: ResourceDictionary.Keys
  fullName: System.Windows.ResourceDictionary.Keys
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "이에 포함 된 모든 키의 컬렉션을 가져옵니다 <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>합니다."
  remarks: "이 속성이 필요 하기 때문에 문제가 발생 <xref:System.Collections.IDictionary>, 키 일반적으로 유용 하지 않습니다 대부분 <xref:System.Windows.ResourceDictionary>시나리오.</xref:System.Windows.ResourceDictionary> </xref:System.Collections.IDictionary>       반환 되는 키 <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>.</xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> 내에서 키를 포함 하지 않습니다. 또한 키 컬렉션은 기본 사전에 키의 스냅숏입니다. 이후에이를 변경 하는 경우 <xref:System.Windows.ResourceDictionary>, 저장 된 키 변경 내용을 반영 되지 것입니다.</xref:System.Windows.ResourceDictionary>"
  syntax:
    content: public System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "모든 키의 컬렉션입니다."
  overload: System.Windows.ResourceDictionary.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.MergedDictionaries
  id: MergedDictionaries
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: MergedDictionaries
  nameWithType: ResourceDictionary.MergedDictionaries
  fullName: System.Windows.ResourceDictionary.MergedDictionaries
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "컬렉션을 가져옵니다는 <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref> 병합된 된 사전에서 다양 한 리소스 사전을 구성 하는 사전입니다."
  remarks: "사전 추가 하 여 병합 된 <xref:System.Windows.ResourceDictionary>MergedDictionaries 참조 하는 제네릭 컬렉션에.</xref:System.Windows.ResourceDictionary> 병합 된 <xref:System.Windows.ResourceDictionary>태그에서 내에 정의 된 요소에는 없습니다.</xref:System.Windows.ResourceDictionary> 대신, 병합 된 사전이 <xref:System.Windows.ResourceDictionary>태그 자식 요소나 정의 된 또는 (코드를 통해 추가 요소 없이)로 [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] <xref:System.Windows.ResourceDictionary.Source%2A>.</xref:System.Windows.ResourceDictionary.Source%2A> 에 대해 지정 된</xref:System.Windows.ResourceDictionary> <xref:System.Windows.ResourceDictionary.Source%2A>지정 응용 프로그램을 함께 제공 되는 별도 리소스 어셈블리 등의 외부 소스에서 온 것으로 병합된 사전을 사용 하면 &quot;느슨한 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]&quot;, 또는 특정 지역화 또는 전역 리소스 어셈블리입니다.</xref:System.Windows.ResourceDictionary.Source%2A>       내에서 리소스 요소를 지정 하는 <xref:System.Windows.ResourceDictionary>올려진 <xref:System.Windows.ResourceDictionary.Source%2A>지정 된 지원 되지 않습니다.</xref:System.Windows.ResourceDictionary.Source%2A> </xref:System.Windows.ResourceDictionary>       조회 동작 MergedDictionaries 컬렉션 내에서 마지막으로 추가 된 검색 <xref:System.Windows.ResourceDictionary>끈 검색이 중지 되는 요청 된 키가 발견 되는 즉시.</xref:System.Windows.ResourceDictionary> 병합 된 사전 컬렉션에서 중복 키가 잘못 되었습니다. 않습니다. 병합 된 사전 동작에 대 한 자세한 내용은 참조 하십시오. [병합 된 리소스 사전을](~/add/includes/ajax-current-ext-md.md)합니다.      <a name=&quot;xamlPropertyElementUsage_MergedDictionaries&quot;></a># # XAML 속성 요소 사용 ```   <object>     <object.MergedDictionaries>       oneOrMoreResourceDictionaries     </object.MergedDictionaries>   </object>      ``` <a name=&quot;xamlValues_MergedDictionaries&quot;> </a> # # XAML 값 *oneOrMoreResourceDictionaries* 하나 이상의 <xref:System.Windows.ResourceDictionary>개체 요소.</xref:System.Windows.ResourceDictionary>       A <xref:System.Windows.ResourceDictionary>사용 MergedDictionaries 컬렉션 콘텐츠는 없으며 지정에 대 한 한 <xref:System.Windows.ResourceDictionary.Source%2A>전체 참조 하는 특성 <xref:System.Windows.ResourceDictionary>원격.</xref:System.Windows.ResourceDictionary> </xref:System.Windows.ResourceDictionary.Source%2A> </xref:System.Windows.ResourceDictionary>"
  example:
  - "The following example specifies two <xref:System.Windows.ResourceDictionary> elements to be merged into the primary <xref:System.Windows.ResourceDictionary>.  \n  \n [!code-xml[ResourceMerge#MergedXAML](~/add/codesnippet/xaml/p-system.windows.resourc_1_1.xaml)]\n [!code-xml[ResourceMerge#MergedXAML](~/add/codesnippet/xaml/p-system.windows.resourc_1_1.xaml)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.ResourceDictionary> MergedDictionaries { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.ResourceDictionary}
      description: "병합 된 사전 컬렉션입니다."
  overload: System.Windows.ResourceDictionary.MergedDictionaries*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.OnGettingValue(System.Object,System.Object@,System.Boolean@)
  id: OnGettingValue(System.Object,System.Object@,System.Boolean@)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: OnGettingValue(Object,Object,Boolean)
  nameWithType: ResourceDictionary.OnGettingValue(Object,Object,Boolean)
  fullName: System.Windows.ResourceDictionary.OnGettingValue(Object,Object,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "발생 경우는 <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref> 리소스에 대 한 요청을 수신 합니다."
  syntax:
    content: protected virtual void OnGettingValue (object key, ref object value, out bool canCache);
    parameters:
    - id: key
      type: System.Object
      description: "가져올 리소스의 키입니다."
    - id: value
      type: System.Object
      description: "요청된 된 리소스의 값입니다."
    - id: canCache
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>리소스를 저장 하 고 나중에 사용 될 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.ResourceDictionary.OnGettingValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)
  id: RegisterName(System.String,System.Object)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: RegisterName(String,Object)
  nameWithType: ResourceDictionary.RegisterName(String,Object)
  fullName: System.Windows.ResourceDictionary.RegisterName(String,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "이 사전 구현에서 지원 되지 않습니다."
  remarks: "<xref:System.Windows.ResourceDictionary>클래스 이름으로 등록을 지원 하지 않습니다.</xref:System.Windows.ResourceDictionary> 대신 키를 사용 합니다. XAML 이름 범위 메서드가 구현 됩니다 <xref:System.Windows.ResourceDictionary>명확히 해당 XAML 이름 리소스에 적용 되지 않습니다.</xref:System.Windows.ResourceDictionary>       이 메서드는 발생 하는 호출을 <xref:System.NotSupportedException>throw 됩니다.</xref:System.NotSupportedException>"
  syntax:
    content: public void RegisterName (string name, object scopedElement);
    parameters:
    - id: name
      type: System.String
      description: "설명 부분을 참조 하십시오."
    - id: scopedElement
      type: System.Object
      description: "설명 부분을 참조 하십시오."
  overload: System.Windows.ResourceDictionary.RegisterName*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "모든 경우에이 메서드를 호출할 때입니다."
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: ResourceDictionary.Remove(Object)
  fullName: System.Windows.ResourceDictionary.Remove(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "기본 사전에서 지정된 된 키와 항목을 제거합니다."
  remarks: "경우는 <xref:System.Windows.ResourceDictionary>지정된 키를 가진 요소가 포함 되지 않습니다는 <xref:System.Windows.ResourceDictionary>변경 되지 않습니다.</xref:System.Windows.ResourceDictionary> </xref:System.Windows.ResourceDictionary> 예외가 발생 합니다.       이 메서드는 <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>.</xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> 에서 키를 제거 하지 않습니다. 특정 얻어야 <xref:System.Windows.ResourceDictionary>해당 키를 제거 하려면 컬렉션에서 있지만 있는 하지 못할 수도 있습니다는 해당 사전을 원격으로 액세스 일반적으로 때문에.</xref:System.Windows.ResourceDictionary>"
  syntax:
    content: public void Remove (object key);
    parameters:
    - id: key
      type: System.Object
      description: "제거할 항목의 키입니다."
  overload: System.Windows.ResourceDictionary.Remove*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref> 잠겨 있거나 읽기 전용입니다."
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Source
  id: Source
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Source
  nameWithType: ResourceDictionary.Source
  fullName: System.Windows.ResourceDictionary.Source
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "가져오거나는 [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] 에서 리소스를 로드 합니다."
  remarks: "일반적으로 컴파일되지 않은 리소스로 포함 되는 리소스 사전의 위치를 참조 하는 Pack URI로 원본을 지정 하는 하거나 응용 프로그램 빌드 프로젝트에서 빌드 작업 콘텐츠입니다. Pack URI 형식에 대 한 자세한 내용은 참조 하십시오. [WPF의 Pack Uri](~/add/includes/ajax-current-ext-md.md)합니다.       Source 속성에 대해서만 설정 되어 일반적으로 <xref:System.Windows.ResourceDictionary>에 지정 된는 <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>속성 (둘 중 하나에 속성 요소로 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]로 <xref:System.Windows.ResourceDictionary>코드에서 컬렉션의 항목).</xref:System.Windows.ResourceDictionary> </xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> </xref:System.Windows.ResourceDictionary> 이 컨텍스트에서 소스에 대 한 값을 설정 합니다.이 병합 됩니다에 제공 된 사전 내용이 [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] 현재 <xref:System.Windows.ResourceDictionary>.</xref:System.Windows.ResourceDictionary> 모든 부하 오류를 throw 하면 예외가 발생 합니다."
  example:
  - "The following example specifies two <xref:System.Windows.ResourceDictionary> elements to be merged into the primary <xref:System.Windows.ResourceDictionary>.  \n  \n [!code-xml[ResourceMerge#MergedXAML](~/add/codesnippet/xaml/p-system.windows.resourc_0_1.xaml)]\n [!code-xml[ResourceMerge#MergedXAML](~/add/codesnippet/xaml/p-system.windows.resourc_0_1.xaml)]"
  syntax:
    content: public Uri Source { get; set; }
    return:
      type: System.Uri
      description: "외부 리소스 사전의 원본 위치입니다."
  overload: System.Windows.ResourceDictionary.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ResourceDictionary.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.ResourceDictionary>인스턴스로 캐스팅 되는 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection> </xref:System.Windows.ResourceDictionary>"
  syntax:
    content: void ICollection.CopyTo (Array array, int arrayIndex);
    parameters:
    - id: array
      type: System.Array
      description: "0부터 시작 <xref:System.Array>에서 복사한 항목을 수신 하는 <xref href=&quot;System.Windows.Markup.Localizer.BamlLocalizationDictionary&quot;> </xref>.</xref:System.Array>"
    - id: arrayIndex
      type: System.Int32
      description: "지정 된 첫 번째 위치 <xref:System.Array>복사한 내용을 받도록.</xref:System.Array>"
  overload: System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ResourceDictionary.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.ResourceDictionary>인스턴스로 캐스팅 되는 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection> </xref:System.Windows.ResourceDictionary>"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우에 대 한 액세스 <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref> 은 동기화 (스레드로부터 안전함); 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ResourceDictionary.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.ResourceDictionary>인스턴스로 캐스팅 되는 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection> </xref:System.Windows.ResourceDictionary>"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "개체에 대 한 액세스를 동기화 하는 데 사용할 수 있는 <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>합니다."
  overload: System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ResourceDictionary.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.ResourceDictionary.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.ResourceDictionary>인스턴스로 캐스팅 되는 <xref:System.Collections.IEnumerable>인터페이스.</xref:System.Collections.IEnumerable> </xref:System.Windows.ResourceDictionary>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>컬렉션을 반복 하는 데 사용할 수 있습니다.</xref:System.Collections.IEnumerator>"
  overload: System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri
  id: System#Windows#Markup#IUriContext#BaseUri
  isEii: true
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: System.Windows.Markup.IUriContext.BaseUri
  nameWithType: ResourceDictionary.System.Windows.Markup.IUriContext.BaseUri
  fullName: System.Windows.ResourceDictionary.System.Windows.Markup.IUriContext.BaseUri
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Windows.Markup.IUriContext.BaseUri%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.ResourceDictionary>인스턴스로 캐스팅 되는 <xref:System.Windows.Markup.IUriContext>인터페이스.</xref:System.Windows.Markup.IUriContext> </xref:System.Windows.ResourceDictionary>"
  syntax:
    content: Uri System.Windows.Markup.IUriContext.BaseUri { get; set; }
    return:
      type: System.Uri
      description: "기본 [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] 현재 컨텍스트의 합니다."
  overload: System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.UnregisterName(System.String)
  id: UnregisterName(System.String)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: UnregisterName(String)
  nameWithType: ResourceDictionary.UnregisterName(String)
  fullName: System.Windows.ResourceDictionary.UnregisterName(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "이 사전 구현에서 지원 되지 않습니다."
  remarks: "<xref:System.Windows.ResourceDictionary>클래스 이름으로 등록을 지원 하지 않습니다.</xref:System.Windows.ResourceDictionary> 대신 키를 사용 합니다. 이 메서드를 호출 하지 않습니다."
  syntax:
    content: public void UnregisterName (string name);
    parameters:
    - id: name
      type: System.String
      description: "주의 참조 하십시오."
  overload: System.Windows.ResourceDictionary.UnregisterName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Values
  id: Values
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Values
  nameWithType: ResourceDictionary.Values
  fullName: System.Windows.ResourceDictionary.Values
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "이에 포함 된 키와 관련 된 모든 값의 컬렉션을 가져옵니다 <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>합니다."
  remarks: "이 속성이 필요 하기 때문에 문제가 발생 <xref:System.Collections.IDictionary>, 일반적으로 대부분 유용 하지 않습니다 <xref:System.Windows.ResourceDictionary>시나리오.</xref:System.Windows.ResourceDictionary> </xref:System.Collections.IDictionary>       반환 된 값에 <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>.</xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> 내에서 값을 포함 하지 않습니다. 또한 컬렉션은 기본 사전에 있는 값의 스냅숏입니다. 이후에이를 변경 하는 경우 <xref:System.Windows.ResourceDictionary>, 저장 된 값이 변경 내용을 반영 되지 것입니다.</xref:System.Windows.ResourceDictionary>"
  syntax:
    content: public System.Collections.ICollection Values { get; }
    return:
      type: System.Collections.ICollection
      description: "모든 값의 컬렉션입니다."
  overload: System.Windows.ResourceDictionary.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Windows.ResourceDictionary.#ctor
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: ResourceDictionary()
  nameWithType: ResourceDictionary.ResourceDictionary()
  fullName: System.Windows.ResourceDictionary.ResourceDictionary()
- uid: System.Windows.ResourceDictionary.Add(System.Object,System.Object)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Add(Object,Object)
  nameWithType: ResourceDictionary.Add(Object,Object)
  fullName: System.Windows.ResourceDictionary.Add(Object,Object)
- uid: System.Windows.ResourceDictionary.BeginInit
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: BeginInit()
  nameWithType: ResourceDictionary.BeginInit()
  fullName: System.Windows.ResourceDictionary.BeginInit()
- uid: System.Windows.ResourceDictionary.Clear
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Clear()
  nameWithType: ResourceDictionary.Clear()
  fullName: System.Windows.ResourceDictionary.Clear()
- uid: System.Windows.ResourceDictionary.Contains(System.Object)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Contains(Object)
  nameWithType: ResourceDictionary.Contains(Object)
  fullName: System.Windows.ResourceDictionary.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.ResourceDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: CopyTo(DictionaryEntry[],Int32)
  nameWithType: ResourceDictionary.CopyTo(DictionaryEntry[],Int32)
  fullName: System.Windows.ResourceDictionary.CopyTo(DictionaryEntry[],Int32)
- uid: System.Collections.DictionaryEntry[]
  parent: System.Collections
  isExternal: true
  name: DictionaryEntry
  nameWithType: DictionaryEntry
  fullName: System.Collections.DictionaryEntry[]
  spec.csharp:
  - uid: System.Collections.DictionaryEntry
    name: DictionaryEntry
    nameWithType: DictionaryEntry
    fullName: DictionaryEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.ResourceDictionary.Count
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Count
  nameWithType: ResourceDictionary.Count
  fullName: System.Windows.ResourceDictionary.Count
- uid: System.Windows.ResourceDictionary.DeferrableContent
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: DeferrableContent
  nameWithType: ResourceDictionary.DeferrableContent
  fullName: System.Windows.ResourceDictionary.DeferrableContent
- uid: System.Windows.DeferrableContent
  parent: System.Windows
  isExternal: false
  name: DeferrableContent
  nameWithType: DeferrableContent
  fullName: System.Windows.DeferrableContent
- uid: System.Windows.ResourceDictionary.EndInit
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: EndInit()
  nameWithType: ResourceDictionary.EndInit()
  fullName: System.Windows.ResourceDictionary.EndInit()
- uid: System.Windows.ResourceDictionary.FindName(System.String)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: FindName(String)
  nameWithType: ResourceDictionary.FindName(String)
  fullName: System.Windows.ResourceDictionary.FindName(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.ResourceDictionary.GetEnumerator
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: GetEnumerator()
  nameWithType: ResourceDictionary.GetEnumerator()
  fullName: System.Windows.ResourceDictionary.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Windows.ResourceDictionary.IsFixedSize
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: IsFixedSize
  nameWithType: ResourceDictionary.IsFixedSize
  fullName: System.Windows.ResourceDictionary.IsFixedSize
- uid: System.Windows.ResourceDictionary.IsReadOnly
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: IsReadOnly
  nameWithType: ResourceDictionary.IsReadOnly
  fullName: System.Windows.ResourceDictionary.IsReadOnly
- uid: System.Windows.ResourceDictionary.Item(System.Object)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Item(Object)
  nameWithType: ResourceDictionary.Item(Object)
  fullName: System.Windows.ResourceDictionary.Item(Object)
- uid: System.Windows.ResourceDictionary.Keys
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Keys
  nameWithType: ResourceDictionary.Keys
  fullName: System.Windows.ResourceDictionary.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Windows.ResourceDictionary.MergedDictionaries
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: MergedDictionaries
  nameWithType: ResourceDictionary.MergedDictionaries
  fullName: System.Windows.ResourceDictionary.MergedDictionaries
- uid: System.Collections.ObjectModel.Collection{System.Windows.ResourceDictionary}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ResourceDictionary>
  nameWithType: Collection<ResourceDictionary>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.ResourceDictionary>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.ResourceDictionary>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.ResourceDictionary
    name: ResourceDictionary
    nameWithType: ResourceDictionary
    fullName: ResourceDictionary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.ResourceDictionary.OnGettingValue(System.Object,System.Object@,System.Boolean@)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: OnGettingValue(Object,Object,Boolean)
  nameWithType: ResourceDictionary.OnGettingValue(Object,Object,Boolean)
  fullName: System.Windows.ResourceDictionary.OnGettingValue(Object,Object,Boolean)
- uid: System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: RegisterName(String,Object)
  nameWithType: ResourceDictionary.RegisterName(String,Object)
  fullName: System.Windows.ResourceDictionary.RegisterName(String,Object)
- uid: System.Windows.ResourceDictionary.Remove(System.Object)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Remove(Object)
  nameWithType: ResourceDictionary.Remove(Object)
  fullName: System.Windows.ResourceDictionary.Remove(Object)
- uid: System.Windows.ResourceDictionary.Source
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Source
  nameWithType: ResourceDictionary.Source
  fullName: System.Windows.ResourceDictionary.Source
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ResourceDictionary.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ResourceDictionary.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ResourceDictionary.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.SyncRoot
- uid: System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ResourceDictionary.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.ResourceDictionary.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Windows.Markup.IUriContext.BaseUri
  nameWithType: ResourceDictionary.System.Windows.Markup.IUriContext.BaseUri
  fullName: System.Windows.ResourceDictionary.System.Windows.Markup.IUriContext.BaseUri
- uid: System.Windows.ResourceDictionary.UnregisterName(System.String)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: UnregisterName(String)
  nameWithType: ResourceDictionary.UnregisterName(String)
  fullName: System.Windows.ResourceDictionary.UnregisterName(String)
- uid: System.Windows.ResourceDictionary.Values
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Values
  nameWithType: ResourceDictionary.Values
  fullName: System.Windows.ResourceDictionary.Values
- uid: System.Windows.ResourceDictionary.#ctor*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: ResourceDictionary
  nameWithType: ResourceDictionary.ResourceDictionary
- uid: System.Windows.ResourceDictionary.Add*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Add
  nameWithType: ResourceDictionary.Add
- uid: System.Windows.ResourceDictionary.BeginInit*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: BeginInit
  nameWithType: ResourceDictionary.BeginInit
- uid: System.Windows.ResourceDictionary.Clear*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Clear
  nameWithType: ResourceDictionary.Clear
- uid: System.Windows.ResourceDictionary.Contains*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Contains
  nameWithType: ResourceDictionary.Contains
- uid: System.Windows.ResourceDictionary.CopyTo*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: CopyTo
  nameWithType: ResourceDictionary.CopyTo
- uid: System.Windows.ResourceDictionary.Count*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Count
  nameWithType: ResourceDictionary.Count
- uid: System.Windows.ResourceDictionary.DeferrableContent*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: DeferrableContent
  nameWithType: ResourceDictionary.DeferrableContent
- uid: System.Windows.ResourceDictionary.EndInit*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: EndInit
  nameWithType: ResourceDictionary.EndInit
- uid: System.Windows.ResourceDictionary.FindName*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: FindName
  nameWithType: ResourceDictionary.FindName
- uid: System.Windows.ResourceDictionary.GetEnumerator*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: GetEnumerator
  nameWithType: ResourceDictionary.GetEnumerator
- uid: System.Windows.ResourceDictionary.IsFixedSize*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: IsFixedSize
  nameWithType: ResourceDictionary.IsFixedSize
- uid: System.Windows.ResourceDictionary.IsReadOnly*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: IsReadOnly
  nameWithType: ResourceDictionary.IsReadOnly
- uid: System.Windows.ResourceDictionary.Item*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Item
  nameWithType: ResourceDictionary.Item
- uid: System.Windows.ResourceDictionary.Keys*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Keys
  nameWithType: ResourceDictionary.Keys
- uid: System.Windows.ResourceDictionary.MergedDictionaries*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: MergedDictionaries
  nameWithType: ResourceDictionary.MergedDictionaries
- uid: System.Windows.ResourceDictionary.OnGettingValue*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: OnGettingValue
  nameWithType: ResourceDictionary.OnGettingValue
- uid: System.Windows.ResourceDictionary.RegisterName*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: RegisterName
  nameWithType: ResourceDictionary.RegisterName
- uid: System.Windows.ResourceDictionary.Remove*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Remove
  nameWithType: ResourceDictionary.Remove
- uid: System.Windows.ResourceDictionary.Source*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Source
  nameWithType: ResourceDictionary.Source
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ResourceDictionary.System.Collections.ICollection.CopyTo
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ResourceDictionary.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ResourceDictionary.System.Collections.ICollection.SyncRoot
- uid: System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ResourceDictionary.System.Collections.IEnumerable.GetEnumerator
- uid: System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Windows.Markup.IUriContext.BaseUri
  nameWithType: ResourceDictionary.System.Windows.Markup.IUriContext.BaseUri
- uid: System.Windows.ResourceDictionary.UnregisterName*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: UnregisterName
  nameWithType: ResourceDictionary.UnregisterName
- uid: System.Windows.ResourceDictionary.Values*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Values
  nameWithType: ResourceDictionary.Values
