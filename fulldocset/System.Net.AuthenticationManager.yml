### YamlMime:ManagedReference
items:
- uid: System.Net.AuthenticationManager
  id: AuthenticationManager
  children:
  - System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)
  - System.Net.AuthenticationManager.CredentialPolicy
  - System.Net.AuthenticationManager.CustomTargetNameDictionary
  - System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)
  - System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)
  - System.Net.AuthenticationManager.RegisteredModules
  - System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)
  - System.Net.AuthenticationManager.Unregister(System.String)
  langs:
  - csharp
  name: AuthenticationManager
  nameWithType: AuthenticationManager
  fullName: System.Net.AuthenticationManager
  type: Class
  summary: "클라이언트 인증 프로세스 중 호출 된 인증 모듈을 관리 합니다."
  remarks: "AuthenticationManager 응용 프로그램에서 사용 하는 인증 모듈을 관리 하는 정적 클래스입니다. 보호 된 리소스, AuthenticationManager 호출을 요청 하면는 <xref:System.Net.AuthenticationManager.Authenticate%2A>가져올 메서드를 한 <xref:System.Net.Authorization>후속 요청에 사용할 인스턴스를.</xref:System.Net.Authorization> </xref:System.Net.AuthenticationManager.Authenticate%2A>       AuthenticationManager 각 등록 된 인증 모듈을 호출 하 여 쿼리는 <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName>각 모듈에 대 한 메서드.</xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName> 첫 번째 인증 모듈을 반환 하는 <xref:System.Net.Authorization>인스턴스 요청을 인증 하는 데 사용 됩니다.</xref:System.Net.Authorization>       기본, 다이제스트, 제공 하는 모듈 협상, NTLM 및 Kerberos 인증 유형을 기본적으로 등록 된 AuthenticationManager 합니다. 구현 하는 추가 인증 모듈의 <xref:System.Net.IAuthenticationModule>인터페이스를 사용 하 여 추가할 수는 <xref:System.Net.AuthenticationManager.Register%2A>메서드.</xref:System.Net.AuthenticationManager.Register%2A> </xref:System.Net.IAuthenticationModule> 인증 모듈 목록에 추가 된 순서 대로 호출 됩니다.      > [!NOTE] > The Kerberos 및 협상 Windows 95/98 또는 Windows NT 4.0에서 인증 유형은 지원 되지 않습니다."
  example:
  - >-
    [!code-cs[System.Net.Authentication#1](~/add/codesnippet/csharp/t-system.net.authenticat_0_1.cs)]
     [!code-cpp[System.Net.Authentication#1](~/add/codesnippet/cpp/t-system.net.authenticat_0_1.cpp)]
     [!code-vb[System.Net.Authentication#1](~/add/codesnippet/visualbasic/t-system.net.authenticat_0_1.vb)]
  syntax:
    content: public class AuthenticationManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)
  id: Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: Authenticate(String,WebRequest,ICredentials)
  nameWithType: AuthenticationManager.Authenticate(String,WebRequest,ICredentials)
  fullName: System.Net.AuthenticationManager.Authenticate(String,WebRequest,ICredentials)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "인증 요청에 응답할 수 있는 첫 번째 모듈을 찾을 각 등록 된 인증 모듈을 호출 합니다."
  remarks: "Authenticate 메서드 호출의 <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName>각 등록 된 인증 모듈을 사용 하 여 응답 모듈 중 하나가 될 때까지 메서드는 <xref:System.Net.Authorization>인스턴스.</xref:System.Net.Authorization> </xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName>       첫 번째 <xref:System.Net.Authorization>반환 된 인스턴스는 요청을 인증 하는 데 사용 됩니다.</xref:System.Net.Authorization> 인증 메서드가 반환 하는 경우 요청을 인증할 수 없는 사용자 지정 인증 모듈을 `null`합니다.       인증 모듈 <xref:System.Net.AuthenticationManager>.</xref:System.Net.AuthenticationManager> 등록 된 순서로 호출 됩니다."
  syntax:
    content: public static System.Net.Authorization Authenticate (string challenge, System.Net.WebRequest request, System.Net.ICredentials credentials);
    parameters:
    - id: challenge
      type: System.String
      description: "인터넷 리소스를 반환한 요구 합니다."
    - id: request
      type: System.Net.WebRequest
      description: "<xref:System.Net.WebRequest>인증 챌린지를 초기화 합니다.</xref:System.Net.WebRequest>"
    - id: credentials
      type: System.Net.ICredentials
      description: "<xref:System.Net.ICredentials>이 요청과 관련 된.</xref:System.Net.ICredentials>"
    return:
      type: System.Net.Authorization
      description: "인스턴스는 <xref href=&quot;System.Net.Authorization&quot;> </xref> 인증 시도의 결과 포함 하는 클래스입니다. 이 메서드가 반환 하는 경우에 다음과 같은 질문에 응답 하도록 없습니다 인증 모듈을 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.AuthenticationManager.Authenticate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>challenge</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>request</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>credentials</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.AuthenticationManager.CredentialPolicy
  id: CredentialPolicy
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: CredentialPolicy
  nameWithType: AuthenticationManager.CredentialPolicy
  fullName: System.Net.AuthenticationManager.CredentialPolicy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "<xref:System.Net.HttpWebRequest>클래스</xref:System.Net.HttpWebRequest> 를 사용 하 여 만든 리소스 요청에 사용할 자격 증명 정책을 가져오거나 설정 합니다."
  remarks: "자격 증명 정책을 웹 페이지의 콘텐츠와 같은 네트워크 리소스에 대 한 요청을 보낼 때 자격 증명을 보낼 것인지 결정 합니다. 자격 증명을 보내는 경우 클라이언트 인증을 요구 하는 서버 클라이언트의 자격 증명이 필요 함을 나타내는 응답을 전송 하는 대신 요청을 받으면 클라이언트를 시도할 수 있습니다. 서버에 대 한 왕복을 저장이이 네트워크를 통해 자격 증명을 보낼 때는 보안 위험이 비교 평가 해야 합니다. 대상 서버에 클라이언트 인증이 필요 없는 경우 자격 증명을 전송 하지 않도록는 것이 좋습니다.       자격 증명 정책을 사용 하거나 자격 증명을 지정 하는 요청에 대해서만 호출 됩니다는 <xref:System.Net.WebProxy>자격 증명을 지정 하는 개체입니다.</xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates setting the credential policy.  \n  \n [!code-cpp[NclCredPolicy#2](~/add/codesnippet/cpp/p-system.net.authenticat_1_1.cpp)]\n [!code-cs[NclCredPolicy#2](~/add/codesnippet/csharp/p-system.net.authenticat_1_1.cs)]"
  syntax:
    content: public static System.Net.ICredentialPolicy CredentialPolicy { get; set; }
    return:
      type: System.Net.ICredentialPolicy
      description: "구현 하는 개체는 <xref href=&quot;System.Net.ICredentialPolicy&quot;> </xref> 자격 증명을 요청과 함께 보내는 지 여부를 결정 하는 인터페이스입니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.AuthenticationManager.CredentialPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.AuthenticationManager.CustomTargetNameDictionary
  id: CustomTargetNameDictionary
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: CustomTargetNameDictionary
  nameWithType: AuthenticationManager.CustomTargetNameDictionary
  fullName: System.Net.AuthenticationManager.CustomTargetNameDictionary
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "사용한 요청에 대 한 Kerberos 인증 하는 동안 호스트를 식별 하는 데 사용 되는 서비스 사용자 이름 (Spn)을 포함 하는 사전을 가져옵니다 <xref:System.Net.WebRequest>와 해당 파생된 클래스입니다.</xref:System.Net.WebRequest>"
  remarks: "SPN은 클라이언트에서 서비스 또는 상호 인증을 위해 서버에서 응용 프로그램 인스턴스 고유 하 게 식별 하는 이름입니다. 상호 인증이 기본적으로 요청 되 고 설정 하 여 요구할 수 있는 <xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=fullName>를 <xref:System.Net.Security.AuthenticationLevel>요청에.</xref:System.Net.Security.AuthenticationLevel> </xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=fullName>       경우는 <xref:System.Net.WebRequest>클라이언트에서 꼭 필요한 대상에 대 한 상호 인증 SPN 필요 합니다.</xref:System.Net.WebRequest> SPN을 알고 있는 경우 요청을 보내기 전에 CustomTargetNameDictionary도 추가할 수 있습니다. 하지만 SPN 정보가이 사전에 추가 하지 않은 경우는 <xref:System.Net.AuthenticationManager>사용 하 여는 <xref:System.Net.WebRequest.RequestUri%2A>메서드를 가장 가능성이 높은 SPN; 작성이 계산 된 값 이며 올바르지 않을 수 있습니다.</xref:System.Net.WebRequest.RequestUri%2A> </xref:System.Net.AuthenticationManager> 상호 인증을 시도 하 고 실패 하면 사전 계산 된 SPN을 확인 하려면 확인할 수 있습니다. SPN이 없으면 인증 프로토콜은 상호 인증을 지원 하지 않는 경우 사전에 입력 됩니다.       이 사전에 SPN 값을 추가 하려면 사용 된 <xref:System.Uri.AbsoluteUri%2A>의 <xref:System.Net.WebRequest.RequestUri%2A>키로.</xref:System.Net.WebRequest.RequestUri%2A> </xref:System.Uri.AbsoluteUri%2A> 키를 포함 하도록 잘렸습니다. 내부적으로 <xref:System.Uri.Scheme%2A>, <xref:System.Uri.Host%2A>, 및 <xref:System.Uri.Port%2A>기본 없으면 포트</xref:System.Uri.Port%2A> </xref:System.Uri.Host%2A> </xref:System.Uri.Scheme%2A>      > [!NOTE] > 무제한 <xref:System.Net.WebPermission>.</xref:System.Net.WebPermission> 필요 메서드 및 속성의 CustomTargetNameDictionary의에 액세스      > [!NOTE] > 때 Kerberos 인증을 수행 하는 프록시를 통해, 프록시와 최종 호스트 이름을 SPN으로 확인 해야 합니다. 프록시 이름 확인은 시간 초과로 보호 됩니다. SPN 지정 하는 최종 호스트 이름의 확인 DNS 조회 걸리며이 작업와 직접 관련 된 제한 시간이 없습니다. 따라서 동기 작업 제한 시간이 만료 오래 걸릴 수 있습니다. 이 문제를 해결 하려면 요청 하기 전에 SPN 캐시를 최종 호스트의 URI 접두사를 추가 합니다.       버전 3.5 s p 1 CustomTargetNameDictionary 속성이 설정 되지 않은 경우 NTLM (NT LAN Manager) 인증 교환에서 SPN의 요청 URL에 사용 되는 호스트 이름 지정으로 기본 설정 합니다. 요청 URL에 사용 되는 호스트 이름에 지정 된 호스트 헤더에서 다를 수 있습니다는 <xref:System.Net.HttpRequestHeader?displayProperty=fullName>클라이언트 요청에.</xref:System.Net.HttpRequestHeader?displayProperty=fullName> 요청 URL에 사용 되는 호스트 이름 다 서버의 실제 호스트 이름, 서버, 컴퓨터의 IP 주소 또는 루프백 주소 라는 컴퓨터를 수 있습니다. 이러한 경우 Windows는 인증 요청을 거부 합니다. 호스트 이름을 사용 하는 Windows에 알리기 위해 할 수는 문제를 해결 하기 위해 클라이언트에서 요청 URL에서 요청 (예: &quot;contoso&quot;)은 실제로 로컬 컴퓨터에 대 한 대체 이름입니다."
  example:
  - "The following code example demonstrates displaying the contents of the CustomTargetNameDictionary.  \n  \n [!code-cpp[NclCredPolicy#5](~/add/codesnippet/cpp/p-system.net.authenticat_0_1.cpp)]\n [!code-cs[NclCredPolicy#5](~/add/codesnippet/csharp/p-system.net.authenticat_0_1.cs)]"
  syntax:
    content: public static System.Collections.Specialized.StringDictionary CustomTargetNameDictionary { get; }
    return:
      type: System.Collections.Specialized.StringDictionary
      description: "쓰기 가능한 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> 호스트 정보로 구성 된 키에 대 한 SPN 값이 들어 있는입니다."
  overload: System.Net.AuthenticationManager.CustomTargetNameDictionary*
  exceptions: []
  platform:
  - net462
- uid: System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)
  id: PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: PreAuthenticate(WebRequest,ICredentials)
  nameWithType: AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)
  fullName: System.Net.AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "요청을 사전 인증 합니다."
  remarks: "인증 모듈에는 요청 미리 인증 수, 하는 경우 PreAuthenticate 메서드는 인스턴스를 반환 하 고 챌린지를 발급 하는 리소스를 기다리지 않고 서버에 인증 정보를 보냅니다. 이 동작은 RFC 2617 섹션 3.3에에서 같습니다 (HTTP 인증: 기본 및 다이제스트 액세스 인증). 인증 요구로 인 한 추가 왕복을 방지 하 여 서버 효율성을 개선 하기 위해 클라이언트를 허용 하는 인증 모듈을 사전 인증을 지원 합니다.       집합을 요청 하는 사전 인증할 수 있는 권한 부여 모듈의 <xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=fullName>속성을 `true`.</xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=fullName>"
  syntax:
    content: public static System.Net.Authorization PreAuthenticate (System.Net.WebRequest request, System.Net.ICredentials credentials);
    parameters:
    - id: request
      type: System.Net.WebRequest
      description: "A <xref:System.Net.WebRequest>인터넷 리소스에.</xref:System.Net.WebRequest>"
    - id: credentials
      type: System.Net.ICredentials
      description: "<xref:System.Net.ICredentials>요청과 관련 된.</xref:System.Net.ICredentials>"
    return:
      type: System.Net.Authorization
      description: "인스턴스는 <xref href=&quot;System.Net.Authorization&quot;> </xref> 요청이 고, 그렇지 않으면 사전 인증 될 수 있도록 클래스 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다. If <code>credentials</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, this method returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Net.AuthenticationManager.PreAuthenticate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>request</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)
  id: Register(System.Net.IAuthenticationModule)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: Register(IAuthenticationModule)
  nameWithType: AuthenticationManager.Register(IAuthenticationModule)
  fullName: System.Net.AuthenticationManager.Register(IAuthenticationModule)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "인증 관리자와 사용자 지정 인증 모듈을 등록합니다."
  remarks: "Register 메서드 인증 모듈을 호출한 모듈 목록 끝에 추가 <xref:System.Net.AuthenticationManager.Authenticate%2A>메서드.</xref:System.Net.AuthenticationManager.Authenticate%2A> 인증 모듈 목록에 추가 된 순서 대로 호출 됩니다. 하는 경우 동일한 모듈 <xref:System.Net.IAuthenticationModule.AuthenticationType%2A>가 이미 등록 되어이 메서드는 등록 된 모듈을 제거 및 추가 `authenticationModule` 목록의 끝에.</xref:System.Net.IAuthenticationModule.AuthenticationType%2A>"
  example:
  - "The following example registers an authentication module with the authentication manager. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \n  \n [!code-cs[System.Net.Sockets.Authentication#2](~/add/codesnippet/csharp/m-system.net.authenticat_2_1.cs)]\n [!code-cpp[System.Net.Sockets.Authentication#2](~/add/codesnippet/cpp/m-system.net.authenticat_2_1.cpp)]\n [!code-vb[System.Net.Sockets.Authentication#2](~/add/codesnippet/visualbasic/m-system.net.authenticat_2_1.vb)]"
  syntax:
    content: public static void Register (System.Net.IAuthenticationModule authenticationModule);
    parameters:
    - id: authenticationModule
      type: System.Net.IAuthenticationModule
      description: "<xref href=&quot;System.Net.IAuthenticationModule&quot;> </xref> 인증 관리자와 등록할 수 있습니다."
  overload: System.Net.AuthenticationManager.Register*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>authenticationModule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.AuthenticationManager.RegisteredModules
  id: RegisteredModules
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: RegisteredModules
  nameWithType: AuthenticationManager.RegisteredModules
  fullName: System.Net.AuthenticationManager.RegisteredModules
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "인증 관리자에 등록 하는 인증 모듈의 목록을 가져옵니다."
  remarks: "RegisteredModules 속성은 제공 된 <xref:System.Collections.IEnumerator>목록이 수 있도록 하는 인스턴스 등록 인증 모듈을 읽을 수.</xref:System.Collections.IEnumerator> <xref:System.Net.AuthenticationManager.Register%2A>모듈 목록 및 <xref:System.Net.AuthenticationManager.Unregister%2A>메서드를 제거 합니다.에서 모듈</xref:System.Net.AuthenticationManager.Unregister%2A> 을 추가합니다 하는 메서드</xref:System.Net.AuthenticationManager.Register%2A>"
  example:
  - "The following example uses the RegisteredModules property to get a list of authentication modules that are registered with the authentication manager. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \n  \n [!code-cs[System.Net.Authentication#8](~/add/codesnippet/csharp/p-system.net.authenticat_2_1.cs)]\n [!code-cpp[System.Net.Authentication#8](~/add/codesnippet/cpp/p-system.net.authenticat_2_1.cpp)]\n [!code-vb[System.Net.Authentication#8](~/add/codesnippet/visualbasic/p-system.net.authenticat_2_1.vb)]"
  syntax:
    content: public static System.Collections.IEnumerator RegisteredModules { get; }
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>등록 된 인증 모듈을 읽을 수 있도록 합니다.</xref:System.Collections.IEnumerator>"
  overload: System.Net.AuthenticationManager.RegisteredModules*
  exceptions: []
  platform:
  - net462
- uid: System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)
  id: Unregister(System.Net.IAuthenticationModule)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: Unregister(IAuthenticationModule)
  nameWithType: AuthenticationManager.Unregister(IAuthenticationModule)
  fullName: System.Net.AuthenticationManager.Unregister(IAuthenticationModule)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "등록 된 모듈 목록에서 지정된 된 인증 모듈을 제거합니다."
  remarks: "Unregister 메서드 인증 모듈에 의해 호출의 목록에서 지정된 된 인증 모듈을 제거는 <xref:System.Net.AuthenticationManager.Authenticate%2A>메서드.</xref:System.Net.AuthenticationManager.Authenticate%2A> 모듈을 사용 하 여 목록에 추가 해야 합니다는 <xref:System.Net.AuthenticationManager.Register%2A>메서드 목록에서 제거 하기 전에.</xref:System.Net.AuthenticationManager.Register%2A>"
  example:
  - "The following example uses the Unregister method to remove the specified authentication module from the list of registered modules. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \n  \n [!code-cs[System.Net.Sockets.Authentication#2](~/add/codesnippet/csharp/m-system.net.authenticat_0_1.cs)]\n [!code-cpp[System.Net.Sockets.Authentication#2](~/add/codesnippet/cpp/m-system.net.authenticat_0_1.cpp)]\n [!code-vb[System.Net.Sockets.Authentication#2](~/add/codesnippet/visualbasic/m-system.net.authenticat_0_1.vb)]"
  syntax:
    content: public static void Unregister (System.Net.IAuthenticationModule authenticationModule);
    parameters:
    - id: authenticationModule
      type: System.Net.IAuthenticationModule
      description: "<xref href=&quot;System.Net.IAuthenticationModule&quot;> </xref> 등록 된 모듈 목록에서를 제거 합니다."
  overload: System.Net.AuthenticationManager.Unregister*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>authenticationModule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "지정 된 <xref href=&quot;System.Net.IAuthenticationModule&quot;> </xref> 등록 되어 있지 않습니다."
  platform:
  - net462
- uid: System.Net.AuthenticationManager.Unregister(System.String)
  id: Unregister(System.String)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: Unregister(String)
  nameWithType: AuthenticationManager.Unregister(String)
  fullName: System.Net.AuthenticationManager.Unregister(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "등록 된 모듈 목록에서 지정된 된 인증 체계를 사용 하 여 인증 모듈을 제거합니다."
  remarks: "<xref:System.Net.AuthenticationManager.Unregister%2A>인증 모듈에 의해 호출의 목록에서 지정된 된 인증 체계를 사용 하 여 인증 모듈을 제거 하는 메서드는 <xref:System.Net.AuthenticationManager.Authenticate%2A>메서드.</xref:System.Net.AuthenticationManager.Authenticate%2A> </xref:System.Net.AuthenticationManager.Unregister%2A> 모듈을 사용 하 여 목록에 추가 해야 합니다는 <xref:System.Net.AuthenticationManager.Register%2A>메서드 목록에서 제거 하기 전에.</xref:System.Net.AuthenticationManager.Register%2A>"
  example:
  - "The following example uses the <xref:System.Net.AuthenticationManager.Unregister%2A> method to remove an authentication module with the specified authentication scheme from the list of registered modules.  \n  \n [!code-vb[AuthenticationManager_UnRegister2#2](~/add/codesnippet/visualbasic/m-system.net.authenticat_1_1.vb)]\n [!code-cpp[AuthenticationManager_UnRegister2#2](~/add/codesnippet/cpp/m-system.net.authenticat_1_1.cpp)]\n [!code-cs[AuthenticationManager_UnRegister2#2](~/add/codesnippet/csharp/m-system.net.authenticat_1_1.cs)]"
  syntax:
    content: public static void Unregister (string authenticationScheme);
    parameters:
    - id: authenticationScheme
      type: System.String
      description: "제거할 모듈의 인증 체계입니다."
  overload: System.Net.AuthenticationManager.Unregister*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>authenticationScheme</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 인증 체계에 대 한 모듈 등록 되지 않았습니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Authenticate(String,WebRequest,ICredentials)
  nameWithType: AuthenticationManager.Authenticate(String,WebRequest,ICredentials)
  fullName: System.Net.AuthenticationManager.Authenticate(String,WebRequest,ICredentials)
- uid: System.Net.Authorization
  parent: System.Net
  isExternal: false
  name: Authorization
  nameWithType: Authorization
  fullName: System.Net.Authorization
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.WebRequest
  parent: System.Net
  isExternal: true
  name: WebRequest
  nameWithType: WebRequest
  fullName: System.Net.WebRequest
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.AuthenticationManager.CredentialPolicy
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: CredentialPolicy
  nameWithType: AuthenticationManager.CredentialPolicy
  fullName: System.Net.AuthenticationManager.CredentialPolicy
- uid: System.Net.ICredentialPolicy
  parent: System.Net
  isExternal: false
  name: ICredentialPolicy
  nameWithType: ICredentialPolicy
  fullName: System.Net.ICredentialPolicy
- uid: System.Net.AuthenticationManager.CustomTargetNameDictionary
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: CustomTargetNameDictionary
  nameWithType: AuthenticationManager.CustomTargetNameDictionary
  fullName: System.Net.AuthenticationManager.CustomTargetNameDictionary
- uid: System.Collections.Specialized.StringDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: System.Collections.Specialized.StringDictionary
- uid: System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: PreAuthenticate(WebRequest,ICredentials)
  nameWithType: AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)
  fullName: System.Net.AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)
- uid: System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Register(IAuthenticationModule)
  nameWithType: AuthenticationManager.Register(IAuthenticationModule)
  fullName: System.Net.AuthenticationManager.Register(IAuthenticationModule)
- uid: System.Net.IAuthenticationModule
  parent: System.Net
  isExternal: false
  name: IAuthenticationModule
  nameWithType: IAuthenticationModule
  fullName: System.Net.IAuthenticationModule
- uid: System.Net.AuthenticationManager.RegisteredModules
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: RegisteredModules
  nameWithType: AuthenticationManager.RegisteredModules
  fullName: System.Net.AuthenticationManager.RegisteredModules
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Unregister(IAuthenticationModule)
  nameWithType: AuthenticationManager.Unregister(IAuthenticationModule)
  fullName: System.Net.AuthenticationManager.Unregister(IAuthenticationModule)
- uid: System.Net.AuthenticationManager.Unregister(System.String)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Unregister(String)
  nameWithType: AuthenticationManager.Unregister(String)
  fullName: System.Net.AuthenticationManager.Unregister(String)
- uid: System.Net.AuthenticationManager.Authenticate*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Authenticate
  nameWithType: AuthenticationManager.Authenticate
- uid: System.Net.AuthenticationManager.CredentialPolicy*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: CredentialPolicy
  nameWithType: AuthenticationManager.CredentialPolicy
- uid: System.Net.AuthenticationManager.CustomTargetNameDictionary*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: CustomTargetNameDictionary
  nameWithType: AuthenticationManager.CustomTargetNameDictionary
- uid: System.Net.AuthenticationManager.PreAuthenticate*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: PreAuthenticate
  nameWithType: AuthenticationManager.PreAuthenticate
- uid: System.Net.AuthenticationManager.Register*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Register
  nameWithType: AuthenticationManager.Register
- uid: System.Net.AuthenticationManager.RegisteredModules*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: RegisteredModules
  nameWithType: AuthenticationManager.RegisteredModules
- uid: System.Net.AuthenticationManager.Unregister*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Unregister
  nameWithType: AuthenticationManager.Unregister
