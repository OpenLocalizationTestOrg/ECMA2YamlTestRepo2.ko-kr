### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.SessionStateStoreProviderBase
  id: SessionStateStoreProviderBase
  children:
  - System.Web.SessionState.SessionStateStoreProviderBase.#ctor
  - System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)
  - System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  - System.Web.SessionState.SessionStateStoreProviderBase.Dispose
  - System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  - System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  - System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  - System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  - System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)
  - System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  - System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  langs:
  - csharp
  name: SessionStateStoreProviderBase
  nameWithType: SessionStateStoreProviderBase
  fullName: System.Web.SessionState.SessionStateStoreProviderBase
  type: Class
  summary: "데이터 저장소에 대 한 세션 상태 공급자의 필수 멤버를 정의합니다."
  remarks: "ASP.NET 세션 상태를 읽고 세션 상태를 사용 하 여 데이터 저장소에서 세션 데이터 저장소 공급자를 기록 합니다. 세션 상태 저장소 공급자는 SessionStateStoreProviderBase 추상 클래스를 상속 하 고 데이터 저장소에 관련 된 구현으로 멤버를 재정의 하는 클래스입니다. 세션 상태 저장소 공급자에 의해 호출 됩니다는 <xref:System.Web.SessionState.SessionStateModule>클래스 저장소에 대 한 데이터 저장소와 통신 하는 ASP.NET 페이지를 처리 하 고 세션 변수 및 제한 시간 값 등의 관련된 세션 정보 검색 중.</xref:System.Web.SessionState.SessionStateModule>       각각에 대해 각 ASP.NET 응용 프로그램 내에서 세션 데이터를 별도로 저장 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>속성.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> ASP.NET 응용 프로그램에서 세션 데이터를 공유 하지 않습니다.       설정 하 여 ASP.NET 응용 프로그램에 대 한 사용자 지정 SessionStateStoreProviderBase 구현을 지정할 수 있습니다는 `mode` 특성에는 `sessionState` 구성 요소를 <xref:System.Web.SessionState.SessionStateMode>및 `customProvider` 이 항목의 예제에 표시 된 대로 특성을 사용자 지정 공급자의 이름입니다.</xref:System.Web.SessionState.SessionStateMode>      ## 잠금 세션 저장소 데이터 때문에 ASP.NET 응용 프로그램은 동시 요청에 응답을 지원 하기 위해 다중 스레드, 동시 요청 수가 동일한 세션 정보에 액세스를 시도할 수 있습니다. 여기서 프레임셋에 여러 프레임 동일한 응용 프로그램에 액세스 하는 시나리오를 살펴보겠습니다. 서로 다른 여러 스레드에서 동시에 웹 서버에는 프레임셋에서 각 프레임에 대 한 별도 요청을 실행할 수 있습니다. 세션 상태 변수를 각 프레임 원본에 대 한 ASP.NET 페이지에 액세스할 경우 동시 세션 스토어에 액세스 하는 여러 스레드를 있을 수 있습니다.       세션 저장소 및 예기치 않은 세션 상태 동작에 대 한 데이터 충돌을 방지 하기는 <xref:System.Web.SessionState.SessionStateModule>SessionStateStoreProviderBase 클래스를 단독으로 ASP.NET 페이지의 실행 기간 동안에 대 한 특정 세션에 대 한 세션 저장소 항목을 잠그는 잠금 기능을 포함 하 고.</xref:System.Web.SessionState.SessionStateModule> 경우에 해당는 <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>특성으로 표시 되어 `ReadOnly`, 동일한 응용 프로그램의 다른 ASP.NET 페이지 데이터 저장소에서 여전히 생길 수에 대 한 대기 중인 읽기 전용 세션에 대 한 요청 차단 해제 될 데이터 세션 저장소에 쓸 수 있습니다.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>       세션 저장소 데이터에 대 한 호출에서 요청의 시작 부분에 잠금이 설정 되 고 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>메서드.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> 요청이 완료 되 면 호출 하는 동안에 잠금이 해제 되는 <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>메서드.</xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>       경우는 <xref:System.Web.SessionState.SessionStateModule>개체 중 하나를 호출 하는 동안 잠긴된 세션 데이터가 발견는 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>또는 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>메서드를 다시 요청 세션 데이터&0;.5 초 간격으로 잠금이 해제 되 되거나 잠긴 세션 데이터는 시간의 양을 값을 초과할 때까지 <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>속성.</xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> 실행 제한 시간 초과 하는 경우는 <xref:System.Web.SessionState.SessionStateModule>개체 호출 됩니다는 <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>메서드를 세션 저장소 데이터를 해제 하 고 해당 시점에 세션 저장소 데이터를 요청 합니다.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule>       세션 저장소 잠겨 있기 때문에 데이터에 대 한 호출에 의해 해제 될 수 있습니다는 <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>메서드를 호출 하기 전에 별도 스레드에서 <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>현재 응답에 대 한 메서드를 설정 하 고이 이미 해제 되 고 다른 세션에서 수정 하는 데이터를 세션 상태 저장소 해제 시도가 수행 수 없습니다.</xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> 이러한 상황을 방지 하는 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>및 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>메서드 잠금 식별자를 반환 합니다.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> 이 잠금 식별자 잠긴된 세션 저장소 데이터를 수정 하는 각 요청에 포함 되어 있어야 합니다. 세션 저장소는 데이터 저장소의 잠금 식별자에 <xref:System.Web.SessionState.SessionStateModule>.</xref:System.Web.SessionState.SessionStateModule> 제공 잠금 식별자와 일치 하는 경우에 데이터가 수정 될      ## 삭제 만료 된 세션 저장 데이터는 <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>특정 세션에 대 한 메서드는, 사용 하 여 데이터 저장소에서 해당 세션에 대 한 데이터가 삭제 되는 <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>메서드도 있습니다; 그렇지 않으면 데이터는 세션에 대 한 이후 요청을 처리 하기 위해 세션 데이터 저장소에 유지 됩니다.</xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> </xref:System.Web.SessionState.HttpSessionState.Abandon%2A> 만료 된 세션 데이터를 삭제 하려면 SessionStateStoreProviderBase 구현 됩니다."
  example:
  - "For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).  \n  \n The following code example shows the Web.config file for an ASP.NET application that is configured to use a custom session-state store provider.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"OdbcSessionServices\" connectionString=\"DSN=SessionState;\" />  \n  </connectionStrings>  \n  \n  <system.web>  \n    <sessionState   \n      mode=\"Custom\"  \n      customProvider=\"OdbcSessionProvider\">  \n      <providers>  \n        <add name=\"OdbcSessionProvider\"  \n             type=\"Samples.AspNet.Session.OdbcSessionStateStore\"  \n             connectionStringName=\"OdbcSessionServices\" />  \n      </providers>  \n    </sessionState>  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: 'public abstract class SessionStateStoreProviderBase : System.Configuration.Provider.ProviderBase'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.#ctor
  id: '#ctor'
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: SessionStateStoreProviderBase()
  nameWithType: SessionStateStoreProviderBase.SessionStateStoreProviderBase()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SessionStateStoreProviderBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Web.SessionState.SessionStateStoreProviderBase>추상 클래스</xref:System.Web.SessionState.SessionStateStoreProviderBase> 를 상속 하는 클래스에 대 한 생성자를 구현할 필요가 없습니다. 초기화에 대 한 값을 <xref:System.Web.SessionState.SessionStateStoreProviderBase>구현에 전달 되는 <xref:System.Configuration.Provider.ProviderBase.Initialize%2A>메서드 구현.</xref:System.Configuration.Provider.ProviderBase.Initialize%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: protected SessionStateStoreProviderBase ();
    parameters: []
  overload: System.Web.SessionState.SessionStateStoreProviderBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)
  id: CreateNewStoreData(System.Web.HttpContext,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: CreateNewStoreData(HttpContext,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "새 <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> 현재 요청에 사용할 개체입니다."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>중 ASP.NET 페이지에 대 한 요청의 시작 부분에 CreateNewStoreData 메서드를 호출 하는 개체는 <xref:System.Web.HttpApplication.AcquireRequestState>이벤트.</xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.SessionState.SessionStateModule> CreateNewStoreData 메서드가 호출 하는 경우:-들어오는 요청에 세션 ID 또는-들어오는 요청에 ID, 하지만 세션 데이터 저장소에 없는 세션입니다.       CreateNewStoreData 메서드를 새로 만들고 <xref:System.Web.SessionState.SessionStateStoreData>비어 있는 개체 <xref:System.Web.SessionState.ISessionStateItemCollection>개체는 <xref:System.Web.HttpStaticObjectsCollection>컬렉션 및 지정 된 `timeout` 값.</xref:System.Web.HttpStaticObjectsCollection> </xref:System.Web.SessionState.ISessionStateItemCollection> </xref:System.Web.SessionState.SessionStateStoreData> <xref:System.Web.HttpStaticObjectsCollection>를 사용 하 여 ASP.NET 응용 프로그램에 대 한 컬렉션을 검색할 수 있습니다는 <xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A>메서드.</xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A> </xref:System.Web.HttpStaticObjectsCollection>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract System.Web.SessionState.SessionStateStoreData CreateNewStoreData (System.Web.HttpContext context, int timeout);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> 현재 요청에 대 한 합니다."
    - id: timeout
      type: System.Int32
      description: "세션 상태 <xref:System.Web.SessionState.HttpSessionState.Timeout*>값에서 새 <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref>.</xref:System.Web.SessionState.HttpSessionState.Timeout*>"
    return:
      type: System.Web.SessionState.SessionStateStoreData
      description: "새 <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> 현재 요청에 대 한 합니다."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  id: CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: CreateUninitializedItem(HttpContext,String,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "데이터 저장소에 새 세션 상태 항목을 추가 합니다."
  remarks: "세션 CreateUninitializedItem 메서드를 사용 하는 경우는 `cookieless` 및 `regenerateExpiredSessionId` 특성은 둘 다 `true`합니다. 필요는 `regenerateExpiredSessionId attribute` 로 설정 `true` 하면는 <xref:System.Web.SessionState.SessionStateModule>생성할 새 개체 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>만료 된 경우 값 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>값이 발견.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.SessionStateModule>       새 생성 프로세스는 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>값을 새로 생성 된 포함 된 URL로 브라우저를 리디렉션할 해야 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>값.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 만료 된를 포함 하는 초기 요청 동안 CreateUninitializedItem 메서드는 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>값.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 후의 <xref:System.Web.SessionState.SessionStateModule>개체 획득 새 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>만료 값을 바꿀 값, 세션 상태 데이터 저장소에 초기화 되지 않은 항목을 추가 하도록 CreateUninitializedItem 메서드를 호출 합니다.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.SessionStateModule> 브라우저는 새로 생성 된 포함 된 URL로 리디렉션됩니다 다음 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>값.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 세션 데이터 저장소에 초기화 되지 않은 항목의 존재 여부 확인 새로 생성 된 포함 된 리디렉션된 요청이 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>값은 만료 된 세션에 대 한 요청에 대해 잘못 인식 되지 않고 및 대신, 새로운 세션으로 취급 합니다.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>       세션 데이터 저장소에 초기화 되지 않은 항목은 새로 생성 된 연결 된 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>값과 기본 값만 포함, 만료 날짜, 시간 및 해당 하는 값을 포함 하는 `actionFlags` 의 매개 변수는 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>및 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>메서드.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 세션 상태 저장소에 초기화 되지 않은 항목을 포함 해야는 `actionFlags` 값과 같지는 <xref:System.Web.SessionState.SessionStateActions>열거형 값입니다.</xref:System.Web.SessionState.SessionStateActions> 이 값이 전달는 <xref:System.Web.SessionState.SessionStateModule>개체는 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>및 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>메서드에 게 알립니다는 <xref:System.Web.SessionState.SessionStateModule>현재 세션은 새 서로 개체 세션 초기화 되지 않았습니다.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.SessionStateModule> <xref:System.Web.SessionState.SessionStateModule>개체 그런 다음 새 세션을 초기화 하 고 발생 시키는 `Session_OnStart` 이벤트.</xref:System.Web.SessionState.SessionStateModule>       쿠키가 없는 세션에 대 한 자세한 내용은 참조는 <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>속성.</xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void CreateUninitializedItem (System.Web.HttpContext context, string id, int timeout);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> 현재 요청에 대 한 합니다."
    - id: id
      type: System.String
      description: "<xref:System.Web.SessionState.HttpSessionState.SessionID*>현재 요청에 대 한.</xref:System.Web.SessionState.HttpSessionState.SessionID*>"
    - id: timeout
      type: System.Int32
      description: "세션 <xref:System.Web.SessionState.HttpSessionState.Timeout*>현재 요청에 대 한.</xref:System.Web.SessionState.HttpSessionState.Timeout*>"
  overload: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.Dispose
  id: Dispose
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: Dispose()
  nameWithType: SessionStateStoreProviderBase.Dispose()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "사용 하는 모든 리소스를 해제는 <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> 구현 합니다."
  remarks: "Dispose 메서드는 시기는 <xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=fullName>이 메서드는 응용 프로그램 도메인을 닫을 때 실행 됩니다.</xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=fullName> 상속 된 클래스는 <xref:System.Web.SessionState.SessionStateStoreProviderBase>클래스를 더 이상 사용 중인 모든 리소스를 해제 합니다.이 메서드를 사용할 수 없습니다.</xref:System.Web.SessionState.SessionStateStoreProviderBase>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void Dispose ();
    parameters: []
  overload: System.Web.SessionState.SessionStateStoreProviderBase.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)
  id: EndRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: EndRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.EndRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "에 의해 호출 된 <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> 요청의 끝에 있는 개체입니다."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>중 ASP.NET 페이지에 대 한 요청이 끝날 때 EndRequest 메서드를 호출 하는 개체는 <xref:System.Web.HttpApplication.EndRequest>이벤트.</xref:System.Web.HttpApplication.EndRequest> </xref:System.Web.SessionState.SessionStateModule> 세션 상태 저장소 공급자에 필요한 요청 정리 작업을 수행 하려면 EndRequest 메서드를 사용할 수 있습니다."
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void EndRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> 현재 요청에 대 한 합니다."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  id: GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "세션 데이터 저장소에서 읽기 전용 세션 상태 데이터를 반환합니다."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>중 요청을 맨 앞에 GetItem 메서드를 호출 하는 개체는 <xref:System.Web.HttpApplication.AcquireRequestState>이벤트 때는 <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>특성이로 설정 된 `ReadOnly`.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> </xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.SessionState.SessionStateModule> 경우는 <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>특성이로 설정 된 `true`, <xref:System.Web.SessionState.SessionStateModule>개체를 대신 호출은 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>메서드.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>       GetItem 메서드는 반환 된 <xref:System.Web.SessionState.SessionStateStoreData>개체 데이터 저장소에서 세션 정보로 채워진와 세션 데이터의 만료 날짜를 업데이트 합니다.</xref:System.Web.SessionState.SessionStateStoreData> GetItem 메서드를 설정 하는 세션 항목 데이터가 없는 데이터 저장소에 경우는 `locked``out` 매개 변수를 `false` 반환 `null`합니다. 이 인해는 <xref:System.Web.SessionState.SessionStateModule>호출 하는 개체는 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>메서드를 데이터 저장소에서 새 세션 항목을 만듭니다.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> </xref:System.Web.SessionState.SessionStateModule>       경우 세션 항목 데이터를 데이터 저장소에서 찾을 수 있지만 데이터 잠겨 GetItem 메서드 설정은 `locked``out` 매개 변수를 `true`, 설정는 `lockAge``out` 매개 변수 설정 (데이터 저장소에서 검색 되는), 현재 날짜와 시간을 뺀 날짜와 시간에서 항목을 잠근는 `lockId``out` 잠금 식별자로 매개 변수 데이터 저장소 및 반환에서 검색 `null`합니다. 이 인해는 <xref:System.Web.SessionState.SessionStateModule>세션 항목 정보를 검색 하려고 하는&0;.5 초 간격 후에 다시 GetItem 메서드를 호출 하는 개체입니다.</xref:System.Web.SessionState.SessionStateModule>       경우 값 하는 `lockAge``out` 초과로 설정 된는 <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>값을 하면 <xref:System.Web.SessionState.SessionStateModule>호출 개체는 <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>세션 항목 데이터에 대 한 잠금을 해제 하려면 GetItem 메서드를 다시 호출 합니다.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>       `actionFlags` 매개 변수는 사용 때 모두는 `cookieless` 및 `regenerateExpiredSessionId` 특성으로 설정 되어 `true`합니다. `actionFlags` 값으로 설정 <xref:System.Web.SessionState.SessionStateActions>초기화 작업을 수행 하는 새 세션의 세션 데이터 저장소에 있는 항목 임을 나타냅니다.</xref:System.Web.SessionState.SessionStateActions> 호출 하 여 세션 데이터 저장소의 초기화 되지 않은 항목이 생성 됩니다는 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>메서드.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> 세션 데이터 저장소의 항목이 지원 되지 않는 초기화 되지 않은 항목을는 `actionFlags` 매개 변수를&0;으로 설정 됩니다.       쿠키 없는 세션을 지 원하는 사용자 지정 세션 상태 저장소 구현 자가 `actionFlags` `out` 현재 항목에 대 한 세션 데이터 저장소에서 반환 된 매개 변수 값입니다. 경우는 `actionFlags` 항목 같은 요청된 된 세션 저장소에 대 한 매개 변수 값은 <xref:System.Web.SessionState.SessionStateActions>GetItem 메서드 다음 열거형 값을 설정한 후&0;은 데이터 저장소에 값을 설정 해야는 `actionFlags` `out` 매개 변수.</xref:System.Web.SessionState.SessionStateActions>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract System.Web.SessionState.SessionStateStoreData GetItem (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> 현재 요청에 대 한 합니다."
    - id: id
      type: System.String
      description: "<xref:System.Web.SessionState.HttpSessionState.SessionID*>현재 요청에 대 한.</xref:System.Web.SessionState.HttpSessionState.SessionID*>"
    - id: locked
      type: System.Boolean
      description: "이 메서드가 반환 될 때로 설정 하는 부울 값을 포함 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 요청한 세션 항목이 고, 그렇지 않으면 세션 데이터 저장소에서 잠긴 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: lockAge
      type: System.TimeSpan
      description: "이 메서드가 반환 될 때를 포함 한 <xref:System.TimeSpan>세션 데이터 저장소의 항목이 잠긴 시간으로 설정 된 개체입니다.</xref:System.TimeSpan>"
    - id: lockId
      type: System.Object
      description: "이 메서드가 반환 될 때 현재 요청에 대 한 잠금 식별자로 설정 하는 개체를 포함 합니다. 잠금 식별자에 자세한에서 &quot;잠금 세션 저장소 데이터&quot;를 참조는 <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> 클래스 요약 합니다."
    - id: actions
      type: System.Web.SessionState.SessionStateActions
      description: "이 메서드가 반환 될 때 포함 중 하나는 <xref href=&quot;System.Web.SessionState.SessionStateActions&quot;> </xref> 현재 세션에는 초기화 되지 않은 쿠키 없는 세션 인지를 나타내는 값입니다."
    return:
      type: System.Web.SessionState.SessionStateStoreData
      description: "A <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> 세션 값 및 세션 데이터 저장소의 정보로 채워집니다."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.GetItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  id: GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "세션 데이터 저장소에서 읽기 전용 세션 상태 데이터를 반환합니다."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>중 요청을 맨 앞에 GetItemExclusive 메서드를 호출 하는 개체는 <xref:System.Web.HttpApplication.AcquireRequestState>이벤트 때는 <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>특성이로 설정 된 `true`, 기본값.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> </xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.SessionState.SessionStateModule> 경우는 <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>특성이로 설정 된 `ReadOnly`, <xref:System.Web.SessionState.SessionStateModule>개체를 대신 호출은 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>메서드.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>       GetItemExclusive 메서드는 반환 된 <xref:System.Web.SessionState.SessionStateStoreData>데이터 저장소에서 세션 정보로 채워진 개체는 저장 된 데이터의 만료 날짜를 업데이트 하 고 요청 기간에 대 한 데이터 저장소에서 세션 항목 데이터를 잠급니다.</xref:System.Web.SessionState.SessionStateStoreData> GetItemExclusive 메서드를 설정 하는 세션 항목 데이터가 없는 데이터 저장소에 경우는 `locked` `out` 매개 변수를 `false` 반환 `null`합니다. 이 인해는 <xref:System.Web.SessionState.SessionStateModule>호출 하는 개체는 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>메서드를 데이터 저장소에서 새 세션 항목을 만듭니다.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> </xref:System.Web.SessionState.SessionStateModule> 경우 세션 항목 데이터를 데이터 저장소에서 찾을 수 있지만 데이터 잠겨 GetItemExclusive 메서드 설정은 `locked` `out` 매개 변수를 `true`, 설정는 `lockAge` `out` 매개 변수 설정 (데이터 저장소에서 검색 되는), 현재 날짜와 시간을 뺀 날짜와 시간에서 항목을 잠근는 `lockId` `out` 잠금 식별자로 매개 변수 데이터 저장소 및 반환에서 검색 `null`합니다. 이 인해는 <xref:System.Web.SessionState.SessionStateModule>세션 항목 정보를 검색 하 고 데이터에 대해 잠금을 획득 하려고 하는&0;.5 초 간격 후에 다시 GetItemExclusive 메서드를 호출 하는 개체입니다.</xref:System.Web.SessionState.SessionStateModule> 경우 값 하는 `lockAge` `out` 초과로 설정 된는 <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>값을 하면 <xref:System.Web.SessionState.SessionStateModule>호출은 <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>세션 항목 데이터에 대 한 잠금을 해제 하려면 다시 GetItemExclusive 메서드를 호출 합니다.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>       `actionFlags` 매개 변수를 사용 하면는 `cookieless` 및 `regenerateExpiredSessionId` 특성은 모두로 설정 됩니다 `true`합니다. `actionFlags` 값으로 설정 <xref:System.Web.SessionState.SessionStateActions>초기화 작업을 수행 하는 새 세션의 세션 데이터 저장소에 있는 항목 임을 나타냅니다.</xref:System.Web.SessionState.SessionStateActions> 호출 하 여 세션 데이터 저장소의 초기화 되지 않은 항목이 생성 됩니다는 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>메서드.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> 세션 데이터 저장소의 항목이 지원 되지 않는 초기화 되지 않은 항목을는 `actionFlags` 매개 변수를&0;으로 설정 됩니다.       쿠키 없는 세션을 지 원하는 사용자 지정 세션 상태 저장소 구현 자가 `actionFlags` `out` 현재 항목에 대 한 세션 데이터 저장소에서 반환 된 매개 변수 값입니다. 경우는 `actionFlags` 항목 같은 요청된 된 세션 저장소에 대 한 매개 변수 값은 <xref:System.Web.SessionState.SessionStateActions>열거형 값을 다음 GetItemExclusive 메서드 데이터 저장소를 설정한 후&0;에 값을 설정 해야는 `actionFlags` `out` 매개 변수.</xref:System.Web.SessionState.SessionStateActions>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract System.Web.SessionState.SessionStateStoreData GetItemExclusive (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> 현재 요청에 대 한 합니다."
    - id: id
      type: System.String
      description: "<xref:System.Web.SessionState.HttpSessionState.SessionID*>현재 요청에 대 한.</xref:System.Web.SessionState.HttpSessionState.SessionID*>"
    - id: locked
      type: System.Boolean
      description: "이 메서드가 반환 될 때로 설정 하는 부울 값을 포함 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 잠금 상태가 성공적으로 가져온 아니면, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: lockAge
      type: System.TimeSpan
      description: "이 메서드가 반환 될 때를 포함 한 <xref:System.TimeSpan>세션 데이터 저장소의 항목이 잠긴 시간으로 설정 된 개체입니다.</xref:System.TimeSpan>"
    - id: lockId
      type: System.Object
      description: "이 메서드가 반환 될 때 현재 요청에 대 한 잠금 식별자로 설정 하는 개체를 포함 합니다. 잠금 식별자에 자세한에서 &quot;잠금 세션 저장소 데이터&quot;를 참조는 <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> 클래스 요약 합니다."
    - id: actions
      type: System.Web.SessionState.SessionStateActions
      description: "이 메서드가 반환 될 때 포함 중 하나는 <xref href=&quot;System.Web.SessionState.SessionStateActions&quot;> </xref> 현재 세션에는 초기화 되지 않은 쿠키 없는 세션 인지를 나타내는 값입니다."
    return:
      type: System.Web.SessionState.SessionStateStoreData
      description: "A <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> 세션 값 및 세션 데이터 저장소의 정보로 채워집니다."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)
  id: InitializeRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: InitializeRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.InitializeRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "에 의해 호출 된 <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> 요청별 초기화에 대 한 개체입니다."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>다른를 호출 하기 전에 InitializeRequest 메서드를 호출 하는 개체 <xref:System.Web.SessionState.SessionStateStoreProviderBase>메서드.</xref:System.Web.SessionState.SessionStateStoreProviderBase> </xref:System.Web.SessionState.SessionStateModule> 세션 상태 저장소 공급자에 필요한 요청 초기화를 수행 하기 InitializeRequest 메서드를 사용할 수 있습니다."
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void InitializeRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> 현재 요청에 대 한 합니다."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  id: ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: ReleaseItemExclusive(HttpContext,String,Object)
  nameWithType: SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "릴리스 세션 데이터에 있는 항목에 대 한 잠금을 저장 합니다."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>개체가 만료 날짜를 업데이트 하 고 세션 데이터 저장소에 있는 항목에 대 한 잠금을 해제 하려면 ReleaseItemExclusive 메서드를 호출 합니다.</xref:System.Web.SessionState.SessionStateModule> 중에 요청이 끝날 때 호출 됩니다는 <xref:System.Web.HttpApplication.ReleaseRequestState>세션 값이 변경 되지 않은 경우 이벤트.</xref:System.Web.HttpApplication.ReleaseRequestState> 세션 값이 수정 된 경우는 <xref:System.Web.SessionState.SessionStateModule>개체를 대신 호출은 <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>메서드.</xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule>       <xref:System.Web.SessionState.SessionStateModule>세션 데이터 저장소에 있는 항목에 대 한 잠금을 초과할 경우에 개체 ReleaseItemExclusive 메서드 호출의 <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>값.</xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> </xref:System.Web.SessionState.SessionStateModule> &quot;세션 저장소 데이터 잠금&quot; 잠금에 대 한 자세한 내용 및 잠금 식별자에 대 한 세부 정보에 대 한 참조는 <xref:System.Web.SessionState.SessionStateStoreProviderBase>클래스 개요.</xref:System.Web.SessionState.SessionStateStoreProviderBase>       ReleaseItemExclusive 메서드는 제공 된 세션을 일치 하는 현재 응용 프로그램에 대 한 세션 데이터 저장소에 있는 항목에서 잠금을 제거 `id` 및 `lockId` 값입니다. 경우는 `lockId` 과 일치 하지 않는 한 데이터 저장소에, ReleaseItemExclusive 메서드는 아무 작업도 수행 합니다."
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void ReleaseItemExclusive (System.Web.HttpContext context, string id, object lockId);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> 현재 요청에 대 한 합니다."
    - id: id
      type: System.String
      description: "현재 요청에 대 한 세션 식별자입니다."
    - id: lockId
      type: System.Object
      description: "현재 요청에 대 한 잠금 식별자입니다."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  id: RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  nameWithType: SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "항목 세션 데이터 저장소에서 데이터를 삭제 합니다."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>중와 같은 요청이 끝날 때 RemoveItem 메서드를 호출 하는 개체는 <xref:System.Web.HttpApplication.ReleaseRequestState>경우 세션 데이터 저장소에서 세션 항목에 대 한 데이터를 삭제 하려면 이벤트는 <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>메서드가 호출 되었습니다.</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> </xref:System.Web.HttpApplication.ReleaseRequestState> </xref:System.Web.SessionState.SessionStateModule> 제공된 된 세션을 일치 하는 현재 응용 프로그램에 대 한 세션 데이터만 `id` 및 `lockId` 값 삭제 됩니다. &quot;세션 저장소 데이터 잠금&quot; 잠금에 대 한 자세한 내용 및 잠금 식별자에 대 한 세부 정보에 대 한 참조는 <xref:System.Web.SessionState.SessionStateStoreProviderBase>클래스 개요.</xref:System.Web.SessionState.SessionStateStoreProviderBase>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void RemoveItem (System.Web.HttpContext context, string id, object lockId, System.Web.SessionState.SessionStateStoreData item);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> 현재 요청에 대 한 합니다."
    - id: id
      type: System.String
      description: "현재 요청에 대 한 세션 식별자입니다."
    - id: lockId
      type: System.Object
      description: "현재 요청에 대 한 잠금 식별자입니다."
    - id: item
      type: System.Web.SessionState.SessionStateStoreData
      description: "<xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> 데이터 저장소에서 삭제할 항목을 나타내는입니다."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)
  id: ResetItemTimeout(System.Web.HttpContext,System.String)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: ResetItemTimeout(HttpContext,String)
  nameWithType: SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "만료 날짜 및 세션 데이터 저장소에 있는 항목의 시간을 업데이트합니다."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>만료 날짜와 시간을 세션에 대 한 현재 날짜 및 시간 외에 세션을 업데이트 하려면 ResetItemTimeout 메서드를 호출 하는 개체 <xref:System.Web.SessionState.HttpSessionState.Timeout%2A>경우이 값 중 하나:- <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>특성은 `true`, 또는-요청 생성 하지 않았습니다.는 <xref:System.Web.HttpApplication.AcquireRequestState>및 <xref:System.Web.HttpApplication.ReleaseRequestState>오류로 인해 이벤트.</xref:System.Web.HttpApplication.ReleaseRequestState> </xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> </xref:System.Web.SessionState.HttpSessionState.Timeout%2A> </xref:System.Web.SessionState.SessionStateModule>       ASP.NET 페이지를 요청 하는 경우 및 <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>특성이로 설정 된 `false`, 만료 날짜와 세션 데이터 저장소에 있는 데이터의 시간을 업데이트 하려면 ResetItemTimeout 메서드는 호출 됩니다.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void ResetItemTimeout (System.Web.HttpContext context, string id);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> 현재 요청에 대 한 합니다."
    - id: id
      type: System.String
      description: "현재 요청에 대 한 세션 식별자입니다."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  id: SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  nameWithType: SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "현재 요청에서 값을 가진 세션 상태 데이터 저장소에 세션 항목 정보를 업데이트 하 고 데이터에 대 한 잠금을 해제 합니다."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>중와 같은 요청이 끝날 때 SetAndReleaseItemExclusive 메서드를 호출 하는 개체는 <xref:System.Web.HttpApplication.ReleaseRequestState>, 이벤트를 데이터 저장소에 현재 세션 항목 정보를 삽입 하거나, 항목에 대 한 만료 시간을 업데이트 하 고 데이터에 대 한 잠금을 해제 하려면 현재 값으로 데이터 저장소에서 기존 세션 항목 정보를 업데이트 합니다.</xref:System.Web.HttpApplication.ReleaseRequestState> </xref:System.Web.SessionState.SessionStateModule> 제공된 된 세션을 일치 하는 현재 응용 프로그램에 대 한 세션 데이터만 `id` 및 `lockId` 값이 업데이트 됩니다. 잠금에 대 한 자세한 내용은 &quot;세션 저장소 데이터 잠금&quot;의 참조는 <xref:System.Web.SessionState.SessionStateStoreProviderBase>클래스 개요.</xref:System.Web.SessionState.SessionStateStoreProviderBase>       현재 요청에 대 한 세션 값 수정 되지 않은 SetAndReleaseItemExclusive 메서드가 호출 되지 않습니다. 대신,는 <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>메서드를 호출 합니다.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>       경우는 <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>메서드를 호출한, SetAndReleaseItemExclusive 메서드가 호출 되지 않습니다.</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> 대신,는 <xref:System.Web.SessionState.SessionStateModule>호출 개체는 <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>메서드 데이터 원본에서 세션 항목 데이터를 삭제 합니다.</xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> </xref:System.Web.SessionState.SessionStateModule>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void SetAndReleaseItemExclusive (System.Web.HttpContext context, string id, System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> 현재 요청에 대 한 합니다."
    - id: id
      type: System.String
      description: "현재 요청에 대 한 세션 식별자입니다."
    - id: item
      type: System.Web.SessionState.SessionStateStoreData
      description: "<xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> 현재 세션 값을 저장할 수 있는 개체입니다."
    - id: lockId
      type: System.Object
      description: "현재 요청에 대 한 잠금 식별자입니다."
    - id: newItem
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>세션 항목; 새 항목으로 식별 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 에 기존 항목으로 세션 항목을 식별 합니다."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  id: SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: SetItemExpireCallback(SessionStateItemExpireCallback)
  nameWithType: SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "대 한 참조를 설정 하는 <xref href=&quot;System.Web.SessionState.SessionStateItemExpireCallback&quot;> </xref> 에 대 한 대리자는 <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref> Global.asax 파일에 정의 된 이벤트입니다."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>결정 하는 모듈을 초기화 하는 경우 개체 SetItemExpireCallback 메서드를 호출 여부에 대 한 호출이 `Session_OnEnd` 에서 지원 되는 이벤트는 <xref:System.Web.SessionState.SessionStateStoreProviderBase>구현 연결 하 고는 <xref:System.Web.SessionState.SessionStateItemExpireCallback>대리자를 함께 `Session_OnEnd` 이벤트.</xref:System.Web.SessionState.SessionStateItemExpireCallback> </xref:System.Web.SessionState.SessionStateStoreProviderBase> </xref:System.Web.SessionState.SessionStateModule>       사용자 지정 세션 상태 저장소 공급자 구현자에 게 알리는 SetItemExpireCallback 메서드를 사용 해야는 <xref:System.Web.SessionState.SessionStateModule>개체 여부에 대 한 호출이 `Session_OnEnd` 이벤트 지원 됩니다에 로컬 참조를 설정 하는 <xref:System.Web.SessionState.SessionStateItemExpireCallback>대리자가 제공한는 `expireCallback` 매개 변수.</xref:System.Web.SessionState.SessionStateItemExpireCallback> </xref:System.Web.SessionState.SessionStateModule> 사용자 지정 구현 시기를 결정 해야 로컬 <xref:System.Web.SessionState.SessionStateItemExpireCallback>호출 될 대리자입니다.</xref:System.Web.SessionState.SessionStateItemExpireCallback> 예를 들어 호출 하는 동안 대리자를 호출할 수 있습니다는 <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>세션이 중단 될 때 호출 되는 메서드.</xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract bool SetItemExpireCallback (System.Web.SessionState.SessionStateItemExpireCallback expireCallback);
    parameters:
    - id: expireCallback
      type: System.Web.SessionState.SessionStateItemExpireCallback
      description: "<xref href=&quot;System.Web.SessionState.SessionStateItemExpireCallback&quot;> </xref> 에 대 한 대리자는 <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref> Global.asax 파일에 정의 된 이벤트입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>세션 상태 저장소 공급자 호출을 지 원하는 경우는 <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref> 이벤트, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: System.Configuration.Provider.ProviderBase
- uid: System.Web.SessionState.SessionStateStoreProviderBase.#ctor
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SessionStateStoreProviderBase()
  nameWithType: SessionStateStoreProviderBase.SessionStateStoreProviderBase()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SessionStateStoreProviderBase()
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateNewStoreData(HttpContext,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
- uid: System.Web.SessionState.SessionStateStoreData
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateStoreData
  nameWithType: SessionStateStoreData
  fullName: System.Web.SessionState.SessionStateStoreData
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateUninitializedItem(HttpContext,String,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.SessionState.SessionStateStoreProviderBase.Dispose
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: Dispose()
  nameWithType: SessionStateStoreProviderBase.Dispose()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.Dispose()
- uid: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: EndRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.EndRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(HttpContext)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.SessionState.SessionStateActions
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateActions
  nameWithType: SessionStateActions
  fullName: System.Web.SessionState.SessionStateActions
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: InitializeRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.InitializeRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(HttpContext)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ReleaseItemExclusive(HttpContext,String,Object)
  nameWithType: SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  nameWithType: SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ResetItemTimeout(HttpContext,String)
  nameWithType: SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  nameWithType: SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetItemExpireCallback(SessionStateItemExpireCallback)
  nameWithType: SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
- uid: System.Web.SessionState.SessionStateItemExpireCallback
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateItemExpireCallback
  nameWithType: SessionStateItemExpireCallback
  fullName: System.Web.SessionState.SessionStateItemExpireCallback
- uid: System.Web.SessionState.SessionStateStoreProviderBase.#ctor*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SessionStateStoreProviderBase
  nameWithType: SessionStateStoreProviderBase.SessionStateStoreProviderBase
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateNewStoreData
  nameWithType: SessionStateStoreProviderBase.CreateNewStoreData
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateUninitializedItem
  nameWithType: SessionStateStoreProviderBase.CreateUninitializedItem
- uid: System.Web.SessionState.SessionStateStoreProviderBase.Dispose*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: Dispose
  nameWithType: SessionStateStoreProviderBase.Dispose
- uid: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: EndRequest
  nameWithType: SessionStateStoreProviderBase.EndRequest
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItem*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItem
  nameWithType: SessionStateStoreProviderBase.GetItem
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItemExclusive
  nameWithType: SessionStateStoreProviderBase.GetItemExclusive
- uid: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: InitializeRequest
  nameWithType: SessionStateStoreProviderBase.InitializeRequest
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ReleaseItemExclusive
  nameWithType: SessionStateStoreProviderBase.ReleaseItemExclusive
- uid: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: RemoveItem
  nameWithType: SessionStateStoreProviderBase.RemoveItem
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ResetItemTimeout
  nameWithType: SessionStateStoreProviderBase.ResetItemTimeout
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetAndReleaseItemExclusive
  nameWithType: SessionStateStoreProviderBase.SetAndReleaseItemExclusive
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetItemExpireCallback
  nameWithType: SessionStateStoreProviderBase.SetItemExpireCallback
