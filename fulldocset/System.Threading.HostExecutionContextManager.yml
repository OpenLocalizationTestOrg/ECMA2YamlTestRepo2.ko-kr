### YamlMime:ManagedReference
items:
- uid: System.Threading.HostExecutionContextManager
  id: HostExecutionContextManager
  children:
  - System.Threading.HostExecutionContextManager.#ctor
  - System.Threading.HostExecutionContextManager.Capture
  - System.Threading.HostExecutionContextManager.Revert(System.Object)
  - System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)
  langs:
  - csharp
  name: HostExecutionContextManager
  nameWithType: HostExecutionContextManager
  fullName: System.Threading.HostExecutionContextManager
  type: Class
  summary: "공용 언어 런타임 호스트 흐름 또는 실행 컨텍스트의 마이그레이션에 참여할 수 있는 기능을 제공 합니다."
  remarks: "하는 경우 현재 <xref:System.AppDomainManager>에 HostExecutionContextManager에 대 한 참조가 해당 <xref:System.AppDomainManager.HostExecutionContextManager%2A>속성을 다음 공용 언어 런타임 관리자에는 호출 될 때마다를 호출는 <xref:System.Threading.ExecutionContext.Run%2A?displayProperty=fullName>호스트가 실행 컨텍스트의 흐름에 참여할 수 있도록 메서드가 발생 합니다.</xref:System.Threading.ExecutionContext.Run%2A?displayProperty=fullName> </xref:System.AppDomainManager.HostExecutionContextManager%2A> </xref:System.AppDomainManager>"
  syntax:
    content: public class HostExecutionContextManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Threading.HostExecutionContextManager.#ctor
  id: '#ctor'
  parent: System.Threading.HostExecutionContextManager
  langs:
  - csharp
  name: HostExecutionContextManager()
  nameWithType: HostExecutionContextManager.HostExecutionContextManager()
  fullName: System.Threading.HostExecutionContextManager.HostExecutionContextManager()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Threading.HostExecutionContextManager&quot;> </xref> 클래스입니다."
  syntax:
    content: public HostExecutionContextManager ();
    parameters: []
  overload: System.Threading.HostExecutionContextManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.HostExecutionContextManager.Capture
  id: Capture
  parent: System.Threading.HostExecutionContextManager
  langs:
  - csharp
  name: Capture()
  nameWithType: HostExecutionContextManager.Capture()
  fullName: System.Threading.HostExecutionContextManager.Capture()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "현재 스레드에서 호스트 실행 컨텍스트를 캡처합니다."
  remarks: "<xref:System.Threading.HostExecutionContext>포함 하는 safehandle을 사용 하 여 만들어집니다는 `IUnknown` 현재 스레드를 실행 하는 호스트에 대 한 포인터입니다.</xref:System.Threading.HostExecutionContext>"
  syntax:
    content: public virtual System.Threading.HostExecutionContext Capture ();
    parameters: []
    return:
      type: System.Threading.HostExecutionContext
      description: "A <xref href=&quot;System.Threading.HostExecutionContext&quot;> </xref> 현재 스레드의 호스트 실행 컨텍스트를 나타내는 개체입니다."
  overload: System.Threading.HostExecutionContextManager.Capture*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.HostExecutionContextManager.Revert(System.Object)
  id: Revert(System.Object)
  parent: System.Threading.HostExecutionContextManager
  langs:
  - csharp
  name: Revert(Object)
  nameWithType: HostExecutionContextManager.Revert(Object)
  fullName: System.Threading.HostExecutionContextManager.Revert(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "호스트 실행 컨텍스트를 이전 상태로 복원합니다."
  remarks: '`previousState`개체에서 반환 해야는 <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A>메서드.</xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A>'
  syntax:
    content: public virtual void Revert (object previousState);
    parameters:
    - id: previousState
      type: System.Object
      description: "되돌리려면 이전 컨텍스트 상태입니다."
  overload: System.Threading.HostExecutionContextManager.Revert*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>previousState</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는- <code>previousState</code> 현재 스레드에서 만들어지지 않았습니다.       -또는- <code>previousState</code> 에 대 한 마지막 상태는 <xref href=&quot;System.Threading.HostExecutionContext&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)
  id: SetHostExecutionContext(System.Threading.HostExecutionContext)
  parent: System.Threading.HostExecutionContextManager
  langs:
  - csharp
  name: SetHostExecutionContext(HostExecutionContext)
  nameWithType: HostExecutionContextManager.SetHostExecutionContext(HostExecutionContext)
  fullName: System.Threading.HostExecutionContextManager.SetHostExecutionContext(HostExecutionContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "지정 된 호스트 실행 컨텍스트를 현재 호스트 실행 컨텍스트를 설정합니다."
  remarks: "SetHostExecutionContext 메서드 <xref:System.Threading.HostExecutionContext>.</xref:System.Threading.HostExecutionContext> current에 대 한 호스트 실행 컨텍스트를 설정합니다.  A <xref:System.Threading.HostExecutionContext>이 메서드에 대 한 매개 변수로 다른 SetHostExecutionContext 메서드 호출에 인수를 전달할 수 없을 때 사용 되었던.</xref:System.Threading.HostExecutionContext> 대신를 사용 하 여는 <xref:System.Threading.HostExecutionContext.CreateCopy%2A?displayProperty=fullName>의 복사본을 만드는 메서드는 <xref:System.Threading.HostExecutionContext>개체를 다음 복사본을 사용 하 여 호스트 실행 컨텍스트를 설정 합니다.</xref:System.Threading.HostExecutionContext> </xref:System.Threading.HostExecutionContext.CreateCopy%2A?displayProperty=fullName>       호출 된 <xref:System.Threading.HostExecutionContextManager.Revert%2A>이 메서드에서 반환 된 개체를 사용 하 여 복원 하는 메서드는 <xref:System.Threading.HostExecutionContext>를 이전 상태로.</xref:System.Threading.HostExecutionContext> </xref:System.Threading.HostExecutionContextManager.Revert%2A>"
  syntax:
    content: public virtual object SetHostExecutionContext (System.Threading.HostExecutionContext hostExecutionContext);
    parameters:
    - id: hostExecutionContext
      type: System.Threading.HostExecutionContext
      description: "<xref href=&quot;System.Threading.HostExecutionContext&quot;> </xref> 설정 해야 합니다."
    return:
      type: System.Object
      description: "복원에 대 한 개체는 <xref href=&quot;System.Threading.HostExecutionContext&quot;> </xref> 를 이전 상태로 있습니다."
  overload: System.Threading.HostExecutionContextManager.SetHostExecutionContext*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>hostExecutionContext</code>캡처 작업을 통해 획득 합니다.       -또는- <code>hostExecutionContext</code> 이전 SetHostExecutionContext 메서드 호출에 인수 되었습니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Threading.HostExecutionContextManager.#ctor
  parent: System.Threading.HostExecutionContextManager
  isExternal: false
  name: HostExecutionContextManager()
  nameWithType: HostExecutionContextManager.HostExecutionContextManager()
  fullName: System.Threading.HostExecutionContextManager.HostExecutionContextManager()
- uid: System.Threading.HostExecutionContextManager.Capture
  parent: System.Threading.HostExecutionContextManager
  isExternal: false
  name: Capture()
  nameWithType: HostExecutionContextManager.Capture()
  fullName: System.Threading.HostExecutionContextManager.Capture()
- uid: System.Threading.HostExecutionContext
  parent: System.Threading
  isExternal: false
  name: HostExecutionContext
  nameWithType: HostExecutionContext
  fullName: System.Threading.HostExecutionContext
- uid: System.Threading.HostExecutionContextManager.Revert(System.Object)
  parent: System.Threading.HostExecutionContextManager
  isExternal: false
  name: Revert(Object)
  nameWithType: HostExecutionContextManager.Revert(Object)
  fullName: System.Threading.HostExecutionContextManager.Revert(Object)
- uid: System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)
  parent: System.Threading.HostExecutionContextManager
  isExternal: false
  name: SetHostExecutionContext(HostExecutionContext)
  nameWithType: HostExecutionContextManager.SetHostExecutionContext(HostExecutionContext)
  fullName: System.Threading.HostExecutionContextManager.SetHostExecutionContext(HostExecutionContext)
- uid: System.Threading.HostExecutionContextManager.#ctor*
  parent: System.Threading.HostExecutionContextManager
  isExternal: false
  name: HostExecutionContextManager
  nameWithType: HostExecutionContextManager.HostExecutionContextManager
- uid: System.Threading.HostExecutionContextManager.Capture*
  parent: System.Threading.HostExecutionContextManager
  isExternal: false
  name: Capture
  nameWithType: HostExecutionContextManager.Capture
- uid: System.Threading.HostExecutionContextManager.Revert*
  parent: System.Threading.HostExecutionContextManager
  isExternal: false
  name: Revert
  nameWithType: HostExecutionContextManager.Revert
- uid: System.Threading.HostExecutionContextManager.SetHostExecutionContext*
  parent: System.Threading.HostExecutionContextManager
  isExternal: false
  name: SetHostExecutionContext
  nameWithType: HostExecutionContextManager.SetHostExecutionContext
