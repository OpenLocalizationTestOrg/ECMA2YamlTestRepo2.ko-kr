### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor
  id: SymmetricProofDescriptor
  children:
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.EncryptingCredentials)
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials
  - System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials
  langs:
  - csharp
  name: SymmetricProofDescriptor
  nameWithType: SymmetricProofDescriptor
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor
  type: Class
  summary: "이 클래스는 대칭 키 기반된 토큰을 발급 하는 데 사용 될 수 있습니다."
  syntax:
    content: 'public class SymmetricProofDescriptor : System.IdentityModel.Tokens.ProofDescriptor'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.ProofDescriptor
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.EncryptingCredentials)
  id: '#ctor(System.IdentityModel.Tokens.EncryptingCredentials)'
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: SymmetricProofDescriptor(EncryptingCredentials)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(EncryptingCredentials)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(EncryptingCredentials)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.SymmetricProofDescriptor&quot;> </xref> 지정된 된 암호화 자격 증명을 사용 하 여 클래스입니다."
  remarks: "STS에 지정 된 <xref:System.IdentityModel.Tokens.EncryptingCredentials>.</xref:System.IdentityModel.Tokens.EncryptingCredentials> 사용 하도록 하려는 경우이 생성자를 사용 합니다."
  syntax:
    content: public SymmetricProofDescriptor (System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials);
    parameters:
    - id: targetWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "<xref href=&quot;System.IdentityModel.Tokens.EncryptingCredentials&quot;> </xref> 사용할 수 있습니다."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)
  id: '#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)'
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: SymmetricProofDescriptor(Byte[],EncryptingCredentials)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Byte[],EncryptingCredentials)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Byte[],EncryptingCredentials)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.SymmetricProofDescriptor&quot;> </xref> 지정된 된 키 자료를 사용 하 여 클래스입니다."
  remarks: "지정된 된 키 바이트를 사용 하는 STS를 원하는 경우이 생성자를 사용 합니다. 이 클라이언트 엔트로피를 보내고 STS만 사용 하는 발급 된 토큰에 대 한 키로 발생 합니다."
  syntax:
    content: public SymmetricProofDescriptor (byte[] key, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials);
    parameters:
    - id: key
      type: System.Byte[]
      description: "발급 된 토큰에 사용 되는 대칭 키입니다."
    - id: targetWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "신뢰 당사자에 대 한 자격 증명을 암호화 하는 키입니다."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)
  id: '#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)'
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.SymmetricProofDescriptor&quot;> </xref> 자동 생성 키를 사용 하 여 클래스입니다."
  remarks: "난수 생성기를 사용 하 여 키를 자동으로 생성 하는 이진 암호로 증명 토큰을 보낼 STS를 원하는 경우이 생성자를 사용 합니다."
  syntax:
    content: public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials);
    parameters:
    - id: keySizeInBits
      type: System.Int32
      description: "대칭 키의 크기입니다."
    - id: targetWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "요청의 대상에 대 한 자격 증명을 암호화 하는 키입니다."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)
  id: '#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)'
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.SymmetricProofDescriptor&quot;> </xref> 자동 생성 키를 사용 하 여 클래스입니다."
  remarks: "자동 생성 키에 암호화 된 키로 증명 토큰을 STS를 원하는 경우이 생성자를 사용 합니다. 이 생성자를 사용 하 여 두 가지 경우를 다룰 수 있습니다: 1.  클라이언트 엔트로피 보내지만 서버에서 거부 합니다.      2.  클라이언트는 서버의 엔트로피 사용 되도록 엔트로피를 보내지 않습니다."
  syntax:
    content: public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials);
    parameters:
    - id: keySizeInBits
      type: System.Int32
      description: "대칭 키의 크기입니다."
    - id: targetWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "요청의 대상에 대 한 자격 증명을 암호화 하는 키입니다."
    - id: requestorWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "요청자에 대 한 자격 증명을 암호화 하는 키입니다."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>keySizeInBits</code>보다 작거나&0;입니다."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])
  id: '#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])'
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[])
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[])
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[])
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.SymmetricProofDescriptor&quot;> </xref> 클래스를 보낼 때 사용할 엔트로피를 결합 합니다."
  remarks: "조합 된 엔트로피를 전송 하려는 경우이 생성자를 사용 합니다."
  syntax:
    content: public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, byte[] sourceEntropy);
    parameters:
    - id: keySizeInBits
      type: System.Int32
      description: "대칭 키의 크기입니다."
    - id: targetWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "요청의 대상에 대 한 자격 증명을 암호화 하는 키입니다."
    - id: requestorWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "엔트로피 또는 증명 토큰을 암호화 하는 데 요청자에 대 한 자격 증명 암호화 합니다."
    - id: sourceEntropy
      type: System.Byte[]
      description: "요청자의 엔트로피입니다."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceEntropy</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이거나 빈 배열입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>keySize</code>가&0; 보다 작습니다."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)
  id: '#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)'
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,String)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,String)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "STS 자동 생성 키가 암호화 된 키로 증명 토큰에 보내는을이 생성자를 사용 합니다. 두 가지 경우는 대상된 여기 1. 클라이언트 전송 엔트로피 하지만 서버에서 거부 2입니다. 클라이언트는 엔트로피 보낼을 하므로 서버 엔트로피를 사용 하지 않은"
  remarks: "경우 `encryptWith` DES 알고리즘은 키 약한 DES 키 여야 하는 수 없도록 보장 합니다.       자동 생성 키에 암호화 된 키로 증명 토큰을 STS를 원하는 경우이 생성자를 사용 합니다. 이 생성자를 사용 하 여 두 가지 경우를 다룰 수 있습니다: 1.  클라이언트 엔트로피 보내지만 서버에서 거부 합니다.      2.  클라이언트는 서버의 엔트로피 사용 되도록 엔트로피를 보내지 않습니다."
  syntax:
    content: public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, string encryptWith);
    parameters:
    - id: keySizeInBits
      type: System.Int32
      description: "대칭 키의 크기입니다."
    - id: targetWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "신뢰 당사자에 대 한 자격 증명을 암호화 하는 키입니다."
    - id: requestorWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "요청자에 대 한 자격 증명을 암호화 하는 키입니다."
    - id: encryptWith
      type: System.String
      description: "에 지정 된 알고리즘 (URI)는 <xref uid=&quot;langword_csharp_&lt;EncryptWith&gt;&quot; name=&quot;&lt;EncryptWith&gt;&quot; href=&quot;&quot;> </xref> RST의 요소입니다."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>keySizeInBits</code>보다 작거나&0;입니다."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)
  id: '#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)'
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[],String)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[],String)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[],String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.SymmetricProofDescriptor&quot;> </xref> 클래스를 보낼 때 사용할 엔트로피를 결합 합니다."
  remarks: "이 생성자를 사용 하 여 조합 된 엔트로피를 보내려고 합니다."
  syntax:
    content: public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, byte[] sourceEntropy, string encryptWith);
    parameters:
    - id: keySizeInBits
      type: System.Int32
      description: "대칭 키의 크기입니다."
    - id: targetWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "SecurityKeyIdentifier 속성의 키를 암호화 하는 데 사용 하 여 신뢰 당사자에 대 한 자격 증명 암호화 합니다."
    - id: requestorWrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "엔트로피 또는 증명 토큰을 암호화 하는 데 요청자에 대 한 자격 증명 암호화 합니다."
    - id: sourceEntropy
      type: System.Byte[]
      description: "요청자의 엔트로피입니다."
    - id: encryptWith
      type: System.String
      description: "증명 키를 암호화 하기 위한 알고리즘의 URI입니다."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>keySizeInBits</code>보다 작거나&0;입니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceEntropy</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이거나 빈 배열입니다."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)
  id: ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: ApplyTo(RequestSecurityTokenResponse)
  nameWithType: SymmetricProofDescriptor.ApplyTo(RequestSecurityTokenResponse)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(RequestSecurityTokenResponse)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "지정 된 RSTR이 증명 설명자의 설정에 따라 수정 합니다."
  remarks: "증명 설명자 인스턴스 내부 횟수에 따라 RSTR 내 요청 된 증명 토큰 같은 적절 한 아티팩트를 설정 합니다."
  syntax:
    content: public override void ApplyTo (System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse response);
    parameters:
    - id: response
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "모든 RSTR을 증명 설명자를 적용 하는 합니다."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>response</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes
  id: GetKeyBytes
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: GetKeyBytes()
  nameWithType: SymmetricProofDescriptor.GetKeyBytes()
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "키 자료를 가져옵니다."
  syntax:
    content: public byte[] GetKeyBytes ();
    parameters: []
    return:
      type: System.Byte[]
      description: "키 자료를 포함 하는 바이트 배열입니다."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy
  id: GetSourceEntropy
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: GetSourceEntropy()
  nameWithType: SymmetricProofDescriptor.GetSourceEntropy()
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "소스 엔트로피를 일반 바이트 단위로 가져옵니다."
  syntax:
    content: protected byte[] GetSourceEntropy ();
    parameters: []
    return:
      type: System.Byte[]
      description: "소스 엔트로피를 포함 하는 바이트 배열입니다."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy
  id: GetTargetEntropy
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: GetTargetEntropy()
  nameWithType: SymmetricProofDescriptor.GetTargetEntropy()
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "대상 엔트로피를 일반 바이트 단위로 가져옵니다."
  syntax:
    content: protected byte[] GetTargetEntropy ();
    parameters: []
    return:
      type: System.Byte[]
      description: "대상 엔트로피를 포함 하는 바이트 배열입니다."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier
  id: KeyIdentifier
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: KeyIdentifier
  nameWithType: SymmetricProofDescriptor.KeyIdentifier
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "키를 정의 하는 발급 된 토큰 내에서 사용할 수 있는 키 식별자를 가져옵니다. 이진 암호 또는 암호화 된 키;는 일반적으로"
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityKeyIdentifier KeyIdentifier { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "키 식별자입니다."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials
  id: RequestorEncryptingCredentials
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: RequestorEncryptingCredentials
  nameWithType: SymmetricProofDescriptor.RequestorEncryptingCredentials
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "요청자의 증명 토큰 요청된 또는 응답에 엔트로피 암호화를 사용할 수 있는 자격 증명을 암호화 가져옵니다."
  syntax:
    content: protected System.IdentityModel.Tokens.EncryptingCredentials RequestorEncryptingCredentials { get; }
    return:
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "요청자의 암호화 자격 증명입니다."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials
  id: TargetEncryptingCredentials
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  langs:
  - csharp
  name: TargetEncryptingCredentials
  nameWithType: SymmetricProofDescriptor.TargetEncryptingCredentials
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "요청한 보안 암호화를 사용할 수 있는 자격 증명을 암호화 하는 신뢰 당사자를 응답에서 토큰을 가져옵니다."
  syntax:
    content: protected System.IdentityModel.Tokens.EncryptingCredentials TargetEncryptingCredentials { get; }
    return:
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "신뢰 당사자 자격 증명을 암호화 합니다."
  overload: System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.ProofDescriptor
  isExternal: false
  name: System.IdentityModel.Tokens.ProofDescriptor
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.EncryptingCredentials)
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: SymmetricProofDescriptor(EncryptingCredentials)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(EncryptingCredentials)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(EncryptingCredentials)
- uid: System.IdentityModel.Tokens.EncryptingCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: EncryptingCredentials
  nameWithType: EncryptingCredentials
  fullName: System.IdentityModel.Tokens.EncryptingCredentials
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: SymmetricProofDescriptor(Byte[],EncryptingCredentials)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Byte[],EncryptingCredentials)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Byte[],EncryptingCredentials)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials)
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[])
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[])
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[])
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,String)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,String)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[],String)
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[],String)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.SymmetricProofDescriptor(Int32,EncryptingCredentials,EncryptingCredentials,Byte[],String)
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: ApplyTo(RequestSecurityTokenResponse)
  nameWithType: SymmetricProofDescriptor.ApplyTo(RequestSecurityTokenResponse)
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(RequestSecurityTokenResponse)
- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: RequestSecurityTokenResponse
  nameWithType: RequestSecurityTokenResponse
  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: GetKeyBytes()
  nameWithType: SymmetricProofDescriptor.GetKeyBytes()
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes()
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: GetSourceEntropy()
  nameWithType: SymmetricProofDescriptor.GetSourceEntropy()
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy()
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: GetTargetEntropy()
  nameWithType: SymmetricProofDescriptor.GetTargetEntropy()
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy()
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: KeyIdentifier
  nameWithType: SymmetricProofDescriptor.KeyIdentifier
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: RequestorEncryptingCredentials
  nameWithType: SymmetricProofDescriptor.RequestorEncryptingCredentials
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: TargetEncryptingCredentials
  nameWithType: SymmetricProofDescriptor.TargetEncryptingCredentials
  fullName: System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor*
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: SymmetricProofDescriptor
  nameWithType: SymmetricProofDescriptor.SymmetricProofDescriptor
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo*
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: ApplyTo
  nameWithType: SymmetricProofDescriptor.ApplyTo
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes*
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: GetKeyBytes
  nameWithType: SymmetricProofDescriptor.GetKeyBytes
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy*
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: GetSourceEntropy
  nameWithType: SymmetricProofDescriptor.GetSourceEntropy
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy*
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: GetTargetEntropy
  nameWithType: SymmetricProofDescriptor.GetTargetEntropy
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier*
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: KeyIdentifier
  nameWithType: SymmetricProofDescriptor.KeyIdentifier
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials*
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: RequestorEncryptingCredentials
  nameWithType: SymmetricProofDescriptor.RequestorEncryptingCredentials
- uid: System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials*
  parent: System.IdentityModel.Tokens.SymmetricProofDescriptor
  isExternal: false
  name: TargetEncryptingCredentials
  nameWithType: SymmetricProofDescriptor.TargetEncryptingCredentials
