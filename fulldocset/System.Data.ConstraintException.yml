### YamlMime:ManagedReference
items:
- uid: System.Data.ConstraintException
  id: ConstraintException
  children:
  - System.Data.ConstraintException.#ctor
  - System.Data.ConstraintException.#ctor(System.String)
  - System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Data.ConstraintException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: ConstraintException
  nameWithType: ConstraintException
  fullName: System.Data.ConstraintException
  type: Class
  summary: "제약 조건을 위반 하는 작업을 시도할 때 throw 되는 예외를 나타냅니다."
  remarks: "**팁:** 완화 하거나 데이터 집합에서 제약 조건 해제 합니다. 제약 조건 DataSet 개체에는 테이블을 채우는 동안 일시적으로 해제 하려면 EnforceConstraints 속성을 사용할 수 있습니다.       기본 키가 이미 데이터 테이블에 있는 기본 키 필드에 값을 할당 하려고 하지 있는지 확인 합니다. 기본 키가 있으면이 예외가 throw 됩니다.       뷰 상태에서 로드 하기 전에 데이터 집합을 지우십시오입니다. 데이터가 있으면 데이터 집합에 로드할 때,이 예외가 throw 될 수 있습니다."
  syntax:
    content: 'public class ConstraintException : System.Data.DataException'
  inheritance:
  - System.Exception
  - System.SystemException
  - System.Data.DataException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.ConstraintException.#ctor
  id: '#ctor'
  parent: System.Data.ConstraintException
  langs:
  - csharp
  name: ConstraintException()
  nameWithType: ConstraintException.ConstraintException()
  fullName: System.Data.ConstraintException.ConstraintException()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.ConstraintException&quot;> </xref> 클래스입니다. 기본 생성자입니다."
  syntax:
    content: public ConstraintException ();
    parameters: []
  overload: System.Data.ConstraintException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.ConstraintException
  langs:
  - csharp
  name: ConstraintException(String)
  nameWithType: ConstraintException.ConstraintException(String)
  fullName: System.Data.ConstraintException.ConstraintException(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.ConstraintException&quot;> </xref> 지정 된 문자열을 사용 합니다."
  syntax:
    content: public ConstraintException (string s);
    parameters:
    - id: s
      type: System.String
      description: "예외가 throw 된 경우 표시할 문자열입니다."
  overload: System.Data.ConstraintException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Data.ConstraintException
  langs:
  - csharp
  name: ConstraintException(SerializationInfo,StreamingContext)
  nameWithType: ConstraintException.ConstraintException(SerializationInfo,StreamingContext)
  fullName: System.Data.ConstraintException.ConstraintException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.ConstraintException&quot;> </xref> 클래스 지정된 된 직렬화 및 스트리밍 컨텍스트를 사용 합니다."
  syntax:
    content: protected ConstraintException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Serialize 하거나 개체를 역직렬화 하는 데 필요한 데이터."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "원본 및 대상 지정 된 직렬화 된 스트림의 설명입니다."
  overload: System.Data.ConstraintException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Data.ConstraintException
  langs:
  - csharp
  name: ConstraintException(String,Exception)
  nameWithType: ConstraintException.ConstraintException(String,Exception)
  fullName: System.Data.ConstraintException.ConstraintException(String,Exception)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.ConstraintException&quot;> </xref> 클래스 지정 된 문자열 및 내부 예외를 사용 합니다."
  syntax:
    content: public ConstraintException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "예외가 throw 된 경우 표시할 문자열입니다."
    - id: innerException
      type: System.Exception
      description: "가져옵니다는 <xref uid=&quot;langword_csharp_Exception&quot; name=&quot;Exception&quot; href=&quot;&quot;> </xref> 현재 예외를 발생 시킨 인스턴스입니다."
  overload: System.Data.ConstraintException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.DataException
  isExternal: false
  name: System.Data.DataException
- uid: System.Data.ConstraintException.#ctor
  parent: System.Data.ConstraintException
  isExternal: false
  name: ConstraintException()
  nameWithType: ConstraintException.ConstraintException()
  fullName: System.Data.ConstraintException.ConstraintException()
- uid: System.Data.ConstraintException.#ctor(System.String)
  parent: System.Data.ConstraintException
  isExternal: false
  name: ConstraintException(String)
  nameWithType: ConstraintException.ConstraintException(String)
  fullName: System.Data.ConstraintException.ConstraintException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.ConstraintException
  isExternal: false
  name: ConstraintException(SerializationInfo,StreamingContext)
  nameWithType: ConstraintException.ConstraintException(SerializationInfo,StreamingContext)
  fullName: System.Data.ConstraintException.ConstraintException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Data.ConstraintException.#ctor(System.String,System.Exception)
  parent: System.Data.ConstraintException
  isExternal: false
  name: ConstraintException(String,Exception)
  nameWithType: ConstraintException.ConstraintException(String,Exception)
  fullName: System.Data.ConstraintException.ConstraintException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Data.ConstraintException.#ctor*
  parent: System.Data.ConstraintException
  isExternal: false
  name: ConstraintException
  nameWithType: ConstraintException.ConstraintException
