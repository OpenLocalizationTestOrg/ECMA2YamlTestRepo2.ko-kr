### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Activities.SendMessageContent
  id: SendMessageContent
  children:
  - System.ServiceModel.Activities.SendMessageContent.#ctor
  - System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument)
  - System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument,System.Type)
  - System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType
  - System.ServiceModel.Activities.SendMessageContent.Message
  - System.ServiceModel.Activities.SendMessageContent.ShouldSerializeDeclaredMessageType
  langs:
  - csharp
  name: SendMessageContent
  nameWithType: SendMessageContent
  fullName: System.ServiceModel.Activities.SendMessageContent
  type: Class
  summary: "워크플로 서비스에서 단일 항목 (메시지)를 보내는 데 사용 되는 클래스입니다. 항목에는 기본 형식, 같은 기본 제공 형식 수 <xref:System.ServiceModel.Channels.Message>, 또는 <xref:System.Xml.Linq.XElement>; 또는 응용 프로그램 정의 데이터 계약, 메시지 계약 또는 직렬화 가능 형식이 XML.</xref:System.Xml.Linq.XElement> </xref:System.ServiceModel.Channels.Message>"
  remarks: "이 클래스를 사용 하는 경우 통신 중에 serialize 된 메시지가 래핑되지 않은, 데이터가 메시지 계약 형식이 아닌 경우 또는 <xref:System.ServiceModel.Channels.Message>.</xref:System.ServiceModel.Channels.Message> 형식의"
  example:
  - "The following example shows how to use a SendMessageContent instance with a <xref:System.ServiceModel.Activities.Send> activity.  \n  \n [!code-cs[ContentBasedCorrelation#0](~/add/codesnippet/csharp/t-system.servicemodel.ac_13_1.cs)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Message")]

      public sealed class SendMessageContent : System.ServiceModel.Activities.SendContent
  inheritance:
  - System.Object
  - System.ServiceModel.Activities.SendContent
  implements: []
  inheritedMembers:
  - System.ServiceModel.Activities.SendContent.Create(System.Activities.InArgument)
  - System.ServiceModel.Activities.SendContent.Create(System.Activities.InArgument,System.Type)
  - System.ServiceModel.Activities.SendContent.Create(System.Collections.Generic.IDictionary{System.String,System.Activities.InArgument})
  platform:
  - net462
- uid: System.ServiceModel.Activities.SendMessageContent.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Activities.SendMessageContent
  langs:
  - csharp
  name: SendMessageContent()
  nameWithType: SendMessageContent.SendMessageContent()
  fullName: System.ServiceModel.Activities.SendMessageContent.SendMessageContent()
  type: Constructor
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.Activities.SendMessageContent&quot;> </xref> 클래스입니다."
  syntax:
    content: public SendMessageContent ();
    parameters: []
  overload: System.ServiceModel.Activities.SendMessageContent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument)
  id: '#ctor(System.Activities.InArgument)'
  parent: System.ServiceModel.Activities.SendMessageContent
  langs:
  - csharp
  name: SendMessageContent(InArgument)
  nameWithType: SendMessageContent.SendMessageContent(InArgument)
  fullName: System.ServiceModel.Activities.SendMessageContent.SendMessageContent(InArgument)
  type: Constructor
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.Activities.SendMessageContent&quot;> </xref> 클래스 지정 된 데이터를 보내려고 합니다."
  remarks: ''
  example:
  - "The following example shows how to use this constructor.  \n  \n [!code-cs[ContentBasedCorrelation#0](~/add/codesnippet/csharp/792c8b8f-2654-4888-aef4-_1.cs)]"
  syntax:
    content: public SendMessageContent (System.Activities.InArgument message);
    parameters:
    - id: message
      type: System.Activities.InArgument
      description: "보낼 데이터입니다."
  overload: System.ServiceModel.Activities.SendMessageContent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument,System.Type)
  id: '#ctor(System.Activities.InArgument,System.Type)'
  parent: System.ServiceModel.Activities.SendMessageContent
  langs:
  - csharp
  name: SendMessageContent(InArgument,Type)
  nameWithType: SendMessageContent.SendMessageContent(InArgument,Type)
  fullName: System.ServiceModel.Activities.SendMessageContent.SendMessageContent(InArgument,Type)
  type: Constructor
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.Activities.SendMessageContent&quot;> </xref> 된 지정 된 메시지 및 메시지 유형입니다."
  syntax:
    content: public SendMessageContent (System.Activities.InArgument message, Type declaredMessageType);
    parameters:
    - id: message
      type: System.Activities.InArgument
      description: "보낼 데이터입니다."
    - id: declaredMessageType
      type: System.Type
      description: "서비스 설명에 표시 되는 데이터 형식입니다. 동일한 형식 이어야 합니다 `message` 또는 기본 유형의 `message`합니다."
  overload: System.ServiceModel.Activities.SendMessageContent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType
  id: DeclaredMessageType
  parent: System.ServiceModel.Activities.SendMessageContent
  langs:
  - csharp
  name: DeclaredMessageType
  nameWithType: SendMessageContent.DeclaredMessageType
  fullName: System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType
  type: Property
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "선언된 된 메시지 형식을 가져오거나 설정 합니다."
  remarks: "DeclaredMessageTypeis WSDL의 서비스 설명에 표시 되는 데이터 형식입니다. 서비스 설명 다양 한 파생된 클래스를 전송 하 고 런타임 시 서비스에서 수신 수 있도록 기본 클래스 형식을 포함 하도록 할 수 있습니다. DeclaredMessageType는 메시지 속성의 인수 형식 또는 기본 형식 이어야 합니다."
  syntax:
    content: public Type DeclaredMessageType { get; set; }
    return:
      type: System.Type
      description: "선언 된 메시지 형식입니다."
  overload: System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.SendMessageContent.Message
  id: Message
  parent: System.ServiceModel.Activities.SendMessageContent
  langs:
  - csharp
  name: Message
  nameWithType: SendMessageContent.Message
  fullName: System.ServiceModel.Activities.SendMessageContent.Message
  type: Property
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "보낼 데이터를 가져오거나 설정 합니다."
  syntax:
    content: public System.Activities.InArgument Message { get; set; }
    return:
      type: System.Activities.InArgument
      description: "보낼 데이터입니다."
  overload: System.ServiceModel.Activities.SendMessageContent.Message*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.SendMessageContent.ShouldSerializeDeclaredMessageType
  id: ShouldSerializeDeclaredMessageType
  parent: System.ServiceModel.Activities.SendMessageContent
  langs:
  - csharp
  name: ShouldSerializeDeclaredMessageType()
  nameWithType: SendMessageContent.ShouldSerializeDeclaredMessageType()
  fullName: System.ServiceModel.Activities.SendMessageContent.ShouldSerializeDeclaredMessageType()
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "나타내는 값을 가져옵니다 여부는 <xref:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType*>속성이 XAML serialize 되어야 합니다.</xref:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType*>"
  syntax:
    content: public bool ShouldSerializeDeclaredMessageType ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>속성을 serialize 해야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Activities.SendMessageContent.ShouldSerializeDeclaredMessageType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Activities.SendContent
  isExternal: false
  name: System.ServiceModel.Activities.SendContent
- uid: System.ServiceModel.Activities.SendMessageContent.#ctor
  parent: System.ServiceModel.Activities.SendMessageContent
  isExternal: false
  name: SendMessageContent()
  nameWithType: SendMessageContent.SendMessageContent()
  fullName: System.ServiceModel.Activities.SendMessageContent.SendMessageContent()
- uid: System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument)
  parent: System.ServiceModel.Activities.SendMessageContent
  isExternal: false
  name: SendMessageContent(InArgument)
  nameWithType: SendMessageContent.SendMessageContent(InArgument)
  fullName: System.ServiceModel.Activities.SendMessageContent.SendMessageContent(InArgument)
- uid: System.Activities.InArgument
  parent: System.Activities
  isExternal: false
  name: InArgument
  nameWithType: InArgument
  fullName: System.Activities.InArgument
- uid: System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument,System.Type)
  parent: System.ServiceModel.Activities.SendMessageContent
  isExternal: false
  name: SendMessageContent(InArgument,Type)
  nameWithType: SendMessageContent.SendMessageContent(InArgument,Type)
  fullName: System.ServiceModel.Activities.SendMessageContent.SendMessageContent(InArgument,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType
  parent: System.ServiceModel.Activities.SendMessageContent
  isExternal: false
  name: DeclaredMessageType
  nameWithType: SendMessageContent.DeclaredMessageType
  fullName: System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType
- uid: System.ServiceModel.Activities.SendMessageContent.Message
  parent: System.ServiceModel.Activities.SendMessageContent
  isExternal: false
  name: Message
  nameWithType: SendMessageContent.Message
  fullName: System.ServiceModel.Activities.SendMessageContent.Message
- uid: System.ServiceModel.Activities.SendMessageContent.ShouldSerializeDeclaredMessageType
  parent: System.ServiceModel.Activities.SendMessageContent
  isExternal: false
  name: ShouldSerializeDeclaredMessageType()
  nameWithType: SendMessageContent.ShouldSerializeDeclaredMessageType()
  fullName: System.ServiceModel.Activities.SendMessageContent.ShouldSerializeDeclaredMessageType()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Activities.SendMessageContent.#ctor*
  parent: System.ServiceModel.Activities.SendMessageContent
  isExternal: false
  name: SendMessageContent
  nameWithType: SendMessageContent.SendMessageContent
- uid: System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType*
  parent: System.ServiceModel.Activities.SendMessageContent
  isExternal: false
  name: DeclaredMessageType
  nameWithType: SendMessageContent.DeclaredMessageType
- uid: System.ServiceModel.Activities.SendMessageContent.Message*
  parent: System.ServiceModel.Activities.SendMessageContent
  isExternal: false
  name: Message
  nameWithType: SendMessageContent.Message
- uid: System.ServiceModel.Activities.SendMessageContent.ShouldSerializeDeclaredMessageType*
  parent: System.ServiceModel.Activities.SendMessageContent
  isExternal: false
  name: ShouldSerializeDeclaredMessageType
  nameWithType: SendMessageContent.ShouldSerializeDeclaredMessageType
