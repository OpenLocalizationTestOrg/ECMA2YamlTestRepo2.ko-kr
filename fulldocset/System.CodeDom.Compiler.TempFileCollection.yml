### YamlMime:ManagedReference
items:
- uid: System.CodeDom.Compiler.TempFileCollection
  id: TempFileCollection
  children:
  - System.CodeDom.Compiler.TempFileCollection.#ctor
  - System.CodeDom.Compiler.TempFileCollection.#ctor(System.String)
  - System.CodeDom.Compiler.TempFileCollection.#ctor(System.String,System.Boolean)
  - System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String)
  - System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String,System.Boolean)
  - System.CodeDom.Compiler.TempFileCollection.AddFile(System.String,System.Boolean)
  - System.CodeDom.Compiler.TempFileCollection.BasePath
  - System.CodeDom.Compiler.TempFileCollection.CopyTo(System.String[],System.Int32)
  - System.CodeDom.Compiler.TempFileCollection.Count
  - System.CodeDom.Compiler.TempFileCollection.Delete
  - System.CodeDom.Compiler.TempFileCollection.Dispose(System.Boolean)
  - System.CodeDom.Compiler.TempFileCollection.Finalize
  - System.CodeDom.Compiler.TempFileCollection.GetEnumerator
  - System.CodeDom.Compiler.TempFileCollection.KeepFiles
  - System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#Count
  - System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#IsSynchronized
  - System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#SyncRoot
  - System.CodeDom.Compiler.TempFileCollection.System#Collections#IEnumerable#GetEnumerator
  - System.CodeDom.Compiler.TempFileCollection.System#IDisposable#Dispose
  - System.CodeDom.Compiler.TempFileCollection.TempDir
  langs:
  - csharp
  name: TempFileCollection
  nameWithType: TempFileCollection
  fullName: System.CodeDom.Compiler.TempFileCollection
  type: Class
  summary: "임시 파일의 컬렉션을 나타냅니다."
  remarks: "TempFileCollection 고유한 파일 이름을 생성 하 고 파일의 목록을 추적 하기 위해 사용할 수 있습니다. 이에 게 유용할 수 <xref:System.CodeDom.Compiler.ICodeCompiler>컴파일러에서 생성 된 중간 파일, 경우에 따라 사용 후 삭제 되는 목록을 관리 하는 경우 구현 자가.</xref:System.CodeDom.Compiler.ICodeCompiler>       에 고유한 임시 파일 이름을 생성 하는 디렉터리를 지정 하는 적절 하 게 오버 로드 된 생성자를 사용 합니다. 여부 파일 컬렉션에 추가 되지 않으면 사용 하는 경우 다르게 지정 나타내려면 생성자 오버 로드를 사용할 수도 있습니다는 <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A>또는 <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>메서드, 컬렉션이 삭제 될 때 삭제 또는 <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A>메서드를 호출 합니다.</xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> </xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> </xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A>       TempFileCollection를 사용 하 여 인스턴스의에 모든 디렉터리의 파일에에서 추가할 수는 <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A>메서드.</xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A>       특정 파일 확장명의 임시 파일에 대 한 고유한 이름의 생성 하려면 호출 <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>및 생성 하는 파일 이름 확장명을 지정 하십시오.</xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>메서드는 전체 경로를 파일 이름으로 지정 된 디렉터리에서 지정된 된 확장으로 구성 된 문자열을 반환 된 <xref:System.CodeDom.Compiler.TempFileCollection.TempDir%2A>속성.</xref:System.CodeDom.Compiler.TempFileCollection.TempDir%2A> </xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>메서드는 파일 이름 확장명 별로 하나의 고유한 파일 이름을 반환 합니다.</xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>       둘 다는 <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A>및 <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>메서드 컬렉션 삭제 될 때 파일을 삭제할지 여부를 지정할 수 있도록 하는 오버 로드를 갖고 또는 <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A>메서드를 호출 합니다.</xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> </xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> </xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A>       <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A>메서드는 제외 하 고 유지 하는 것으로 표시 된 컬렉션의 모든 파일이 삭제 됩니다.</xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A>       <xref:System.CodeDom.Compiler.TempFileCollection.BasePath%2A>속성에서 반환 된 파일 이름을 생성 하는 데 사용 하는 파일 이름 확장명 없이 기본 파일 이름에 전체 경로 나타냅니다는 <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>메서드.</xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> </xref:System.CodeDom.Compiler.TempFileCollection.BasePath%2A>      > [!NOTE] >이 클래스는 모든 멤버에 적용 되는 클래스 수준에 상속 요청과 링크 요청을 포함 합니다. A <xref:System.Security.SecurityException>직접 실행 호출자 또는 파생된 클래스 중 하나에 완전 신뢰 권한이 없는 경우에 throw 됩니다.</xref:System.Security.SecurityException> 보안 요청에 대 한 세부 정보를 참조 하십시오. [링크 요청](~/add/includes/ajax-current-ext-md.md) 및 [상속 요청](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)합니다."
  example:
  - "The following example shows the use of the TempFileCollection class and the <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> and <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> methods.  \n  \n [!code-cs[System.CodeDom.Compiler.TempFileCollection#1](~/add/codesnippet/csharp/t-system.codedom.compile_1_1.cs)]\n [!code-vb[System.CodeDom.Compiler.TempFileCollection#1](~/add/codesnippet/visualbasic/t-system.codedom.compile_1_1.vb)]"
  syntax:
    content: 'public class TempFileCollection : IDisposable, System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.#ctor
  id: '#ctor'
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: TempFileCollection()
  nameWithType: TempFileCollection.TempFileCollection()
  fullName: System.CodeDom.Compiler.TempFileCollection.TempFileCollection()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.CodeDom.Compiler.TempFileCollection&quot;> </xref> 클래스 기본값을 사용 합니다."
  remarks: "이것이 기본 설정 사용 하 여 컬렉션을 초기화 하는 기본 생성자입니다. 기본적으로이 임시 파일 컬렉션 기본 임시 디렉터리에 파일을 저장 하 고 생성 되 고 사용한 후 임시 파일을 삭제 합니다."
  syntax:
    content: public TempFileCollection ();
    parameters: []
  overload: System.CodeDom.Compiler.TempFileCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: TempFileCollection(String)
  nameWithType: TempFileCollection.TempFileCollection(String)
  fullName: System.CodeDom.Compiler.TempFileCollection.TempFileCollection(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.CodeDom.Compiler.TempFileCollection&quot;> </xref> 클래스 기본적으로 임시 파일을 생성 하 고, 사용 후 삭제로 설정 된 지정된 된 임시 디렉터리를 사용 합니다."
  syntax:
    content: public TempFileCollection (string tempDir);
    parameters:
    - id: tempDir
      type: System.String
      description: "임시 파일을 저장 하는 데 사용 하는 임시 디렉터리에 대 한 경로입니다."
  overload: System.CodeDom.Compiler.TempFileCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: TempFileCollection(String,Boolean)
  nameWithType: TempFileCollection.TempFileCollection(String,Boolean)
  fullName: System.CodeDom.Compiler.TempFileCollection.TempFileCollection(String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.CodeDom.Compiler.TempFileCollection&quot;> </xref> 지정한 임시 디렉터리와 지정 된 값을 유지 하거나 기본적으로 임시 파일을 생성 하 고, 사용 후 삭제 여부를 나타내는 클래스입니다."
  remarks: "값 `keepFiles` 설정 하는 데 사용 되는 <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>매개 변수.</xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> 컬렉션에서 임시 파일이 유지 되거나 값에 따라 컴파일 작업이 완료 될 때 삭제는 <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>컬렉션에서 속성이.</xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> 각 파일의 현재 값 컬렉션에 추가 되므로 <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>표시 되지 않으면 연결 되어 있는 방법으로 추가 됩니다 한 `keepFile` 매개 변수 값은 해당 특정 파일에 사용 하는 경우에서.</xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> 경우는 <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A>메서드를 호출 하는 경우 <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>은 `true`와 함께 추가 하는 것을 비롯 한 모든 파일이 삭제 됩니다는 <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>값 `true`.</xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> </xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> </xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> 그러면 식별을 일시적으로 오류 보고 등의 용도로 컴파일 후 유지 한 다음 더 이상 필요 없는 경우 삭제 될 파일 유지 되는 특정 파일."
  syntax:
    content: public TempFileCollection (string tempDir, bool keepFiles);
    parameters:
    - id: tempDir
      type: System.String
      description: "임시 파일을 저장 하는 데 사용 하는 임시 디렉터리에 대 한 경로입니다."
    - id: keepFiles
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>임시 파일을 사용한 후 유지 해야 하는 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 임시 파일을 삭제 해야 하는 경우."
  overload: System.CodeDom.Compiler.TempFileCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String)
  id: AddExtension(System.String)
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: AddExtension(String)
  nameWithType: TempFileCollection.AddExtension(String)
  fullName: System.CodeDom.Compiler.TempFileCollection.AddExtension(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "지정 된 파일 이름 확장명으로 파일 이름 컬렉션에 추가합니다."
  remarks: "이 메서드는 임시 파일 컬렉션에 추가 된 지정한 확장명을 가진 파일 이름을 반환 합니다. 다른 코드가 여전히 파일을 만들어야 사용할 수 있습니다.       이 메서드는 동일한 확장명으로 호출 하는 경우 이름이 같은 반환 하므로 각 파일 이름 확장명에 대해 한 번만 호출할 수 있습니다."
  syntax:
    content: public string AddExtension (string fileExtension);
    parameters:
    - id: fileExtension
      type: System.String
      description: "컬렉션에 추가 하려면 자동 생성 된 임시 파일 이름에 대 한 파일 이름 확장명입니다."
    return:
      type: System.String
      description: "컬렉션에 추가 된 지정한 확장명을 가진 파일 이름입니다."
  overload: System.CodeDom.Compiler.TempFileCollection.AddExtension*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String,System.Boolean)
  id: AddExtension(System.String,System.Boolean)
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: AddExtension(String,Boolean)
  nameWithType: TempFileCollection.AddExtension(String,Boolean)
  fullName: System.CodeDom.Compiler.TempFileCollection.AddExtension(String,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "파일을 삭제할지 아니면 유지 여부를 나타내는 지정된 된 값을 사용 하 여 컬렉션에 지정 된 파일 이름 확장명으로 파일 이름을 추가 합니다."
  remarks: "이 메서드는 임시 파일 컬렉션에 추가 된 지정한 확장명을 가진 파일 이름을 반환 합니다. 다른 코드가 여전히 파일을 만들어야 사용할 수 있습니다.       이 메서드는 동일한 확장명으로 호출 하는 경우 이름이 같은 반환 하므로 각 파일 이름 확장명에 대해 한 번만 호출할 수 있습니다."
  syntax:
    content: public string AddExtension (string fileExtension, bool keepFile);
    parameters:
    - id: fileExtension
      type: System.String
      description: "컬렉션에 추가 하려면 자동 생성 된 임시 파일 이름에 대 한 파일 이름 확장명입니다."
    - id: keepFile
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>파일을 사용한 후 유지 해야 하는 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 파일을 삭제 해야 합니다."
    return:
      type: System.String
      description: "컬렉션에 추가 된 지정한 확장명을 가진 파일 이름입니다."
  overload: System.CodeDom.Compiler.TempFileCollection.AddExtension*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>fileExtension</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.AddFile(System.String,System.Boolean)
  id: AddFile(System.String,System.Boolean)
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: AddFile(String,Boolean)
  nameWithType: TempFileCollection.AddFile(String,Boolean)
  fullName: System.CodeDom.Compiler.TempFileCollection.AddFile(String,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "컬렉션이 삭제 후 또는 때 파일을 유지할지 여부를 나타내는 지정된 된 값을 사용 하 여 컬렉션에 지정된 된 파일을 추가 <xref:System.CodeDom.Compiler.TempFileCollection.Delete*>메서드를 호출 합니다.</xref:System.CodeDom.Compiler.TempFileCollection.Delete*>"
  remarks: ''
  example:
  - "The following example shows the use of the AddFile method to add a file that is to be kept to the collection. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.TempFileCollection> class.  \n  \n [!code-cs[System.CodeDom.Compiler.TempFileCollection#2](~/add/codesnippet/csharp/a38042f1-5040-47a0-b145-_1.cs)]\n [!code-vb[System.CodeDom.Compiler.TempFileCollection#2](~/add/codesnippet/visualbasic/a38042f1-5040-47a0-b145-_1.vb)]"
  syntax:
    content: public void AddFile (string fileName, bool keepFile);
    parameters:
    - id: fileName
      type: System.String
      description: "컬렉션에 추가할 파일의 이름입니다."
    - id: keepFile
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>파일을 사용한 후 유지 해야 하는 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 파일을 삭제 해야 합니다."
  overload: System.CodeDom.Compiler.TempFileCollection.AddFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>fileName</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다.       -또는- <code>fileName</code> 중복 됩니다."
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.BasePath
  id: BasePath
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: BasePath
  nameWithType: TempFileCollection.BasePath
  fullName: System.CodeDom.Compiler.TempFileCollection.BasePath
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "컬렉션에 대 한 임시 파일 이름을 생성 하는 데 사용 되는 임시 디렉터리 경로에 파일 이름 확장명 없이 기본 파일 이름에 전체 경로 가져옵니다."
  syntax:
    content: public string BasePath { get; }
    return:
      type: System.String
      description: "컬렉션에 대 한 임시 파일 이름을 생성 하는 데 사용 되는 임시 디렉터리 경로에 파일 이름 확장명 없이 기본 파일 이름에 전체 경로입니다."
  overload: System.CodeDom.Compiler.TempFileCollection.BasePath*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "BasePath 속성이 설정 되지 않은 않았거나로 설정 된 경우 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 및 <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref> 으로 지정 된 임시 디렉터리에 대 한 권한을 부여 하지 않으면는 <xref:System.CodeDom.Compiler.TempFileCollection.TempDir*>속성.</xref:System.CodeDom.Compiler.TempFileCollection.TempDir*>"
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.CopyTo(System.String[],System.Int32)
  id: CopyTo(System.String[],System.Int32)
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: CopyTo(String[],Int32)
  nameWithType: TempFileCollection.CopyTo(String[],Int32)
  fullName: System.CodeDom.Compiler.TempFileCollection.CopyTo(String[],Int32)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "컬렉션의 멤버를 지정된 된 인덱스에서 시작 하 고 지정된 된 문자열에 복사 합니다."
  syntax:
    content: public void CopyTo (string[] fileNames, int start);
    parameters:
    - id: fileNames
      type: System.String[]
      description: "배열에 복사할 문자열입니다."
    - id: start
      type: System.Int32
      description: "복사를 시작할 배열의 인덱스입니다."
  overload: System.CodeDom.Compiler.TempFileCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.Count
  id: Count
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: Count
  nameWithType: TempFileCollection.Count
  fullName: System.CodeDom.Compiler.TempFileCollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "컬렉션에 있는 파일 수를 가져옵니다."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "컬렉션에 있는 파일의 수입니다."
  overload: System.CodeDom.Compiler.TempFileCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.Delete
  id: Delete
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: Delete()
  nameWithType: TempFileCollection.Delete()
  fullName: System.CodeDom.Compiler.TempFileCollection.Delete()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "보유할으로 표시 되지 않은이 컬렉션 내에서 임시 파일을 삭제 합니다."
  remarks: "Delete 메서드를 개별적으로 유지 되거나 삭제 될 파일 인지를 확인 하려면 컬렉션의 각 파일을 검사 합니다. 파일을 보관 되는 추가 메서드를 사용 하 여 컬렉션에 추가 될 때 명시적으로 표시할 수 있습니다는 `keepFile` 매개 변수입니다. 파일을 사용 하 여 컬렉션에 추가할 때의 <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>맺지 않은 오버 로드는 `keepFile` 매개 변수 값의는 <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>속성 기본 유지 파일 표시기로 사용 됩니다.</xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> </xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>"
  syntax:
    content: public void Delete ();
    parameters: []
  overload: System.CodeDom.Compiler.TempFileCollection.Delete*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: TempFileCollection.Dispose(Boolean)
  fullName: System.CodeDom.Compiler.TempFileCollection.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "사용 하는 관리 되지 않는 리소스를 해제는 <xref href=&quot;System.CodeDom.Compiler.TempFileCollection&quot;> </xref> 관리 되는 리소스를 선택적으로 해제 합니다."
  remarks: "이 메서드는 public `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A>메서드.</xref:System.Object.Finalize%2A> `Dispose()`보호 된 호출 `Dispose(Boolean)` 메서드는 `disposing` 매개 변수 설정 `true`합니다. <xref:System.Object.Finalize%2A>호출 `Dispose` 와 `disposing` 로 설정 `false`합니다.</xref:System.Object.Finalize%2A>       경우는 `disposing` 매개 변수는 `true`,이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <xref:System.CodeDom.Compiler.TempFileCollection>참조.</xref:System.CodeDom.Compiler.TempFileCollection> 이 메서드 호출에서 `Dispose()` 각 참조 된 개체의 메서드."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.CodeDom.Compiler.TempFileCollection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.Finalize
  id: Finalize
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: Finalize()
  nameWithType: TempFileCollection.Finalize()
  fullName: System.CodeDom.Compiler.TempFileCollection.Finalize()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "이 개체는 가비지 수집에서 회수 하기 전에 임시 파일을 삭제 하려고 합니다."
  remarks: "이 메서드를 재정의 <xref:System.Object.Finalize%2A?displayProperty=fullName>호출 하 여 리소스를 정리 하 고 `Dispose(false)`.</xref:System.Object.Finalize%2A?displayProperty=fullName> 재정의 `Dispose(Boolean)` 정리를 사용자 지정할 수 있습니다.       응용 프로그램 코드,이 메서드를 호출 하지 않아야 개체의 `Finalize` 메서드를 호출 하 여 가비지 수집기의 종료를 사용 하지 않도록 설정 된 경우가 아니면 자동으로 가비지 수집 중 호출 됩니다는 <xref:System.GC.SuppressFinalize%2A?displayProperty=fullName>메서드.</xref:System.GC.SuppressFinalize%2A?displayProperty=fullName>       자세한 내용은 참조 [Finalize 메서드 및 소멸자](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [관리 되지 않는 리소스 정리](~/add/includes/ajax-current-ext-md.md), 및 [Finalize 메서드를 재정의](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다."
  syntax:
    content: ~TempFileCollection ();
    parameters: []
  overload: System.CodeDom.Compiler.TempFileCollection.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.GetEnumerator
  id: GetEnumerator
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: TempFileCollection.GetEnumerator()
  fullName: System.CodeDom.Compiler.TempFileCollection.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "컬렉션의 멤버를 열거할 수 있는 열거자를 가져옵니다."
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>컬렉션의 멤버를 포함 하는.</xref:System.Collections.IEnumerator>"
  overload: System.CodeDom.Compiler.TempFileCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.KeepFiles
  id: KeepFiles
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: KeepFiles
  nameWithType: TempFileCollection.KeepFiles
  fullName: System.CodeDom.Compiler.TempFileCollection.KeepFiles
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "기본적으로는 파일을 유지할지 여부를 나타내는 값을 가져오거나 설정 합니다. 때는 <xref:System.CodeDom.Compiler.TempFileCollection.Delete*>메서드를 호출 하거나 컬렉션이 삭제.</xref:System.CodeDom.Compiler.TempFileCollection.Delete*>"
  remarks: "KeepFiles 속성의 값은 기본적으로 사용 경우이 값은 <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>맺지 않은 오버 로드는 `keepFile` 매개 변수 컬렉션에 임시 파일을 추가 하기 위해 호출 됩니다.</xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> 컬렉션의 각 임시 파일에 유지 되거나 삭제 될 파일 인지 파일 단위로에서 결정 하는 연결된 유지 파일 플래그가 있습니다. 파일을 자동으로 유지 또는 연결된 유지 파일 값에 따라 컴파일 완료에서 삭제 합니다. 그러나 컴파일 완료 되 면 유지 된 파일을 해제할 수 false 및 호출 KeepFiles를 설정 하 여는 <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A>메서드.</xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A>  이렇게 하면 모든 파일이 삭제 됩니다."
  syntax:
    content: public bool KeepFiles { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>파일을 유지 합니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.CodeDom.Compiler.TempFileCollection.KeepFiles*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: TempFileCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "대상 배열의 지정한 인덱스에서 시작 하 여 배열에 컬렉션의 요소를 복사 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.CodeDom.Compiler.TempFileCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection> </xref:System.CodeDom.Compiler.TempFileCollection>"
  syntax:
    content: void ICollection.CopyTo (Array array, int start);
    parameters:
    - id: array
      type: System.Array
      description: "<xref:System.Array> <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> 에서 복사한 요소의 대상인</xref:System.Array>&1; 차원 <xref:System.Array>0부터 시작 하는 인덱스가 있어야 합니다.</xref:System.Array>"
    - id: start
      type: System.Int32
      description: "시작 배열에서 복사를 시작할&0;부터 시작 하는 인덱스입니다."
  overload: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: System.Collections.ICollection.Count
  nameWithType: TempFileCollection.System.Collections.ICollection.Count
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "컬렉션에 포함 된 요소의 수를 가져옵니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.CodeDom.Compiler.TempFileCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection> </xref:System.CodeDom.Compiler.TempFileCollection>"
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "<xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> 포함 된 요소 수"
  overload: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TempFileCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "스레드로부터 안전한 컬렉션에 대 한 액세스가 동기화 되어 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.CodeDom.Compiler.TempFileCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection> </xref:System.CodeDom.Compiler.TempFileCollection>"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우에 대 한 액세스는 <xref:System.Collections.ICollection>은 동기화 (스레드로부터 안전함); 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TempFileCollection.System.Collections.ICollection.SyncRoot
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "컬렉션에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.CodeDom.Compiler.TempFileCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection> </xref:System.CodeDom.Compiler.TempFileCollection>"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "<xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> 에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체"
  overload: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: TempFileCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "컬렉션을 반복 하는 열거자를 반환 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.CodeDom.Compiler.TempFileCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IEnumerable>인터페이스.</xref:System.Collections.IEnumerable> </xref:System.CodeDom.Compiler.TempFileCollection>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>컬렉션을 반복에 사용할 수 있는.</xref:System.Collections.IEnumerator>"
  overload: System.CodeDom.Compiler.TempFileCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: TempFileCollection.System.IDisposable.Dispose()
  fullName: System.CodeDom.Compiler.TempFileCollection.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "관련 확보, 해제 또는 관리 되지 않는 리소스를 다시 설정 된 응용 프로그램 정의 작업을 수행 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.CodeDom.Compiler.TempFileCollection>인스턴스로 캐스팅 되는 <xref:System.IDisposable>인터페이스.</xref:System.IDisposable> </xref:System.CodeDom.Compiler.TempFileCollection>"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.CodeDom.Compiler.TempFileCollection.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.TempDir
  id: TempDir
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: TempDir
  nameWithType: TempFileCollection.TempDir
  fullName: System.CodeDom.Compiler.TempFileCollection.TempDir
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "임시 파일을 저장할 임시 디렉터리를 가져옵니다."
  syntax:
    content: public string TempDir { get; }
    return:
      type: System.String
      description: "임시 디렉터리에 임시 파일을 저장입니다."
  overload: System.CodeDom.Compiler.TempFileCollection.TempDir*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.CodeDom.Compiler.TempFileCollection.#ctor
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: TempFileCollection()
  nameWithType: TempFileCollection.TempFileCollection()
  fullName: System.CodeDom.Compiler.TempFileCollection.TempFileCollection()
- uid: System.CodeDom.Compiler.TempFileCollection.#ctor(System.String)
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: TempFileCollection(String)
  nameWithType: TempFileCollection.TempFileCollection(String)
  fullName: System.CodeDom.Compiler.TempFileCollection.TempFileCollection(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.Compiler.TempFileCollection.#ctor(System.String,System.Boolean)
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: TempFileCollection(String,Boolean)
  nameWithType: TempFileCollection.TempFileCollection(String,Boolean)
  fullName: System.CodeDom.Compiler.TempFileCollection.TempFileCollection(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String)
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: AddExtension(String)
  nameWithType: TempFileCollection.AddExtension(String)
  fullName: System.CodeDom.Compiler.TempFileCollection.AddExtension(String)
- uid: System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String,System.Boolean)
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: AddExtension(String,Boolean)
  nameWithType: TempFileCollection.AddExtension(String,Boolean)
  fullName: System.CodeDom.Compiler.TempFileCollection.AddExtension(String,Boolean)
- uid: System.CodeDom.Compiler.TempFileCollection.AddFile(System.String,System.Boolean)
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: AddFile(String,Boolean)
  nameWithType: TempFileCollection.AddFile(String,Boolean)
  fullName: System.CodeDom.Compiler.TempFileCollection.AddFile(String,Boolean)
- uid: System.CodeDom.Compiler.TempFileCollection.BasePath
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: BasePath
  nameWithType: TempFileCollection.BasePath
  fullName: System.CodeDom.Compiler.TempFileCollection.BasePath
- uid: System.CodeDom.Compiler.TempFileCollection.CopyTo(System.String[],System.Int32)
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: CopyTo(String[],Int32)
  nameWithType: TempFileCollection.CopyTo(String[],Int32)
  fullName: System.CodeDom.Compiler.TempFileCollection.CopyTo(String[],Int32)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.CodeDom.Compiler.TempFileCollection.Count
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: Count
  nameWithType: TempFileCollection.Count
  fullName: System.CodeDom.Compiler.TempFileCollection.Count
- uid: System.CodeDom.Compiler.TempFileCollection.Delete
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: Delete()
  nameWithType: TempFileCollection.Delete()
  fullName: System.CodeDom.Compiler.TempFileCollection.Delete()
- uid: System.CodeDom.Compiler.TempFileCollection.Dispose(System.Boolean)
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: TempFileCollection.Dispose(Boolean)
  fullName: System.CodeDom.Compiler.TempFileCollection.Dispose(Boolean)
- uid: System.CodeDom.Compiler.TempFileCollection.Finalize
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: Finalize()
  nameWithType: TempFileCollection.Finalize()
  fullName: System.CodeDom.Compiler.TempFileCollection.Finalize()
- uid: System.CodeDom.Compiler.TempFileCollection.GetEnumerator
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: TempFileCollection.GetEnumerator()
  fullName: System.CodeDom.Compiler.TempFileCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.CodeDom.Compiler.TempFileCollection.KeepFiles
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: KeepFiles
  nameWithType: TempFileCollection.KeepFiles
  fullName: System.CodeDom.Compiler.TempFileCollection.KeepFiles
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: TempFileCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#Count
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: TempFileCollection.System.Collections.ICollection.Count
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.Count
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#IsSynchronized
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TempFileCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.IsSynchronized
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#SyncRoot
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TempFileCollection.System.Collections.ICollection.SyncRoot
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.SyncRoot
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: TempFileCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.CodeDom.Compiler.TempFileCollection.System#IDisposable#Dispose
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: TempFileCollection.System.IDisposable.Dispose()
  fullName: System.CodeDom.Compiler.TempFileCollection.System.IDisposable.Dispose()
- uid: System.CodeDom.Compiler.TempFileCollection.TempDir
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: TempDir
  nameWithType: TempFileCollection.TempDir
  fullName: System.CodeDom.Compiler.TempFileCollection.TempDir
- uid: System.CodeDom.Compiler.TempFileCollection.#ctor*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: TempFileCollection
  nameWithType: TempFileCollection.TempFileCollection
- uid: System.CodeDom.Compiler.TempFileCollection.AddExtension*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: AddExtension
  nameWithType: TempFileCollection.AddExtension
- uid: System.CodeDom.Compiler.TempFileCollection.AddFile*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: AddFile
  nameWithType: TempFileCollection.AddFile
- uid: System.CodeDom.Compiler.TempFileCollection.BasePath*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: BasePath
  nameWithType: TempFileCollection.BasePath
- uid: System.CodeDom.Compiler.TempFileCollection.CopyTo*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: CopyTo
  nameWithType: TempFileCollection.CopyTo
- uid: System.CodeDom.Compiler.TempFileCollection.Count*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: Count
  nameWithType: TempFileCollection.Count
- uid: System.CodeDom.Compiler.TempFileCollection.Delete*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: Delete
  nameWithType: TempFileCollection.Delete
- uid: System.CodeDom.Compiler.TempFileCollection.Dispose*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: Dispose
  nameWithType: TempFileCollection.Dispose
- uid: System.CodeDom.Compiler.TempFileCollection.Finalize*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: Finalize
  nameWithType: TempFileCollection.Finalize
- uid: System.CodeDom.Compiler.TempFileCollection.GetEnumerator*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: TempFileCollection.GetEnumerator
- uid: System.CodeDom.Compiler.TempFileCollection.KeepFiles*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: KeepFiles
  nameWithType: TempFileCollection.KeepFiles
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#CopyTo*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: TempFileCollection.System.Collections.ICollection.CopyTo
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#Count*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: TempFileCollection.System.Collections.ICollection.Count
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TempFileCollection.System.Collections.ICollection.IsSynchronized
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#SyncRoot*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TempFileCollection.System.Collections.ICollection.SyncRoot
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: TempFileCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.CodeDom.Compiler.TempFileCollection.System#IDisposable#Dispose*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: TempFileCollection.System.IDisposable.Dispose
- uid: System.CodeDom.Compiler.TempFileCollection.TempDir*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: TempDir
  nameWithType: TempFileCollection.TempDir
