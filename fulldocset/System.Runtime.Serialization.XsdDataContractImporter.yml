### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.XsdDataContractImporter
  id: XsdDataContractImporter
  children:
  - System.Runtime.Serialization.XsdDataContractImporter.#ctor
  - System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)
  - System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)
  - System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  - System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  - System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  - System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit
  - System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)
  - System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)
  - System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)
  - System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)
  - System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  - System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  - System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  - System.Runtime.Serialization.XsdDataContractImporter.Options
  langs:
  - csharp
  name: XsdDataContractImporter
  nameWithType: XsdDataContractImporter
  fullName: System.Runtime.Serialization.XsdDataContractImporter
  type: Class
  summary: "런타임 (CLR) 형식은 공용 언어에 XML 스키마 파일 (.xsd) 집합의 변환을 허용 합니다."
  remarks: "XML 스키마에서 데이터 계약 형식을 만드는 또는 기존 웹 서비스와 상호 운용 해야 하는 웹 서비스를 만드는 경우는 XsdDataContractImporter를 사용 합니다. XsdDataContractImporter에서는 XML 스키마 집합을 변환 하 고 만듭니다는 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] 선택한 프로그래밍 언어로 데이터를 나타내는 형식이 계약입니다. 코드를 만들려면 사용의 클래스는 <xref:System.CodeDom>네임 스페이스.</xref:System.CodeDom>       반대로 사용 하 여는 <xref:System.Runtime.Serialization.XsdDataContractExporter>클래스 CLR 형식으로 표시 되는 데이터를 통합 하 고 다른 웹 서비스에서 사용할 수 있도록 각 데이터 형식에 대 한 XML 스키마를 내보내야 할 때 웹 서비스를 만들었습니다.</xref:System.Runtime.Serialization.XsdDataContractExporter> 즉, <xref:System.Runtime.Serialization.XsdDataContractExporter>CLR 형식 집합을 XML 스키마 집합으로 변환 합니다.</xref:System.Runtime.Serialization.XsdDataContractExporter>      > [!NOTE] > 디자인 타임에 XML 스키마에서 CLR 형식을 생성, 사용 된 [ServiceModel Metadata 유틸리티 도구 (Svcutil.exe)](~/add/includes/ajax-current-ext-md.md)합니다. XSD 파일에서 코드 생성을 사용 하 여는 `/dataContractOnly` 도구의 스위치입니다. 또한 더 프로세스를 제어 하거나 프로그래밍 방식으로 수행 해야 하는 XsdDataContractImporter를 사용할 수 있습니다."
  example:
  - "The following example creates an <xref:System.Xml.Schema.XmlSchemaSet> and calls the <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> method to create a <xref:System.CodeDom.CodeCompileUnit>. The <xref:System.CodeDom.CodeCompileUnit> is then used to create both Visual C# and Visual Basic code files.  \n  \n [!code-cs[XsdDataContractImporter#0](~/add/codesnippet/csharp/t-system.runtime.seriali_7_1.cs)]\n [!code-vb[XsdDataContractImporter#0](~/add/codesnippet/visualbasic/t-system.runtime.seriali_7_1.vb)]"
  syntax:
    content: public class XsdDataContractImporter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.#ctor
  id: '#ctor'
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: XsdDataContractImporter()
  nameWithType: XsdDataContractImporter.XsdDataContractImporter()
  fullName: System.Runtime.Serialization.XsdDataContractImporter.XsdDataContractImporter()
  type: Constructor
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Runtime.Serialization.XsdDataContractImporter&quot;> </xref> 클래스입니다."
  syntax:
    content: public XsdDataContractImporter ();
    parameters: []
  overload: System.Runtime.Serialization.XsdDataContractImporter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)
  id: '#ctor(System.CodeDom.CodeCompileUnit)'
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: XsdDataContractImporter(CodeCompileUnit)
  nameWithType: XsdDataContractImporter.XsdDataContractImporter(CodeCompileUnit)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.XsdDataContractImporter(CodeCompileUnit)
  type: Constructor
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Runtime.Serialization.XsdDataContractImporter&quot;> </xref> 클래스와 <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> CLR 코드를 생성 하는 데 사용 되어야 합니다."
  remarks: "에 더 많은 코드를 추가 하려면이 생성자를 사용 하 여 한 <xref:System.CodeDom.CodeCompileUnit>이미 생성 된입니다.</xref:System.CodeDom.CodeCompileUnit>"
  example:
  - "The following example creates an <xref:System.Xml.Schema.XmlSchemaSet> and calls the <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> method to create a <xref:System.CodeDom.CodeCompileUnit>. The <xref:System.CodeDom.CodeCompileUnit> is then used to create both Visual C# and Visual Basic code files.  \n  \n [!code-cs[XsdDataContractImporter#1](~/add/codesnippet/csharp/03617d2d-d820-45ea-9187-_1.cs)]\n [!code-vb[XsdDataContractImporter#1](~/add/codesnippet/visualbasic/03617d2d-d820-45ea-9187-_1.vb)]"
  syntax:
    content: public XsdDataContractImporter (System.CodeDom.CodeCompileUnit codeCompileUnit);
    parameters:
    - id: codeCompileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "<xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> 코드를 저장 하는 데 사용 될 됩니다."
  overload: System.Runtime.Serialization.XsdDataContractImporter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)
  id: CanImport(System.Xml.Schema.XmlSchemaSet)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: CanImport(XmlSchemaSet)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "스키마에 포함 되는지 여부를 나타내는 값을 가져옵니다는 <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> 로 변환할 수는 <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following example calls the CanImport method to determine whether the <xref:System.CodeDom.CodeCompileUnit> can be generated.  \n  \n [!code-cs[XsdDataContractImporter#2](~/add/codesnippet/csharp/b2b83fee-fce3-4860-9703-_1.cs)]\n [!code-vb[XsdDataContractImporter#2](~/add/codesnippet/visualbasic/b2b83fee-fce3-4860-9703-_1.vb)]"
  syntax:
    content: public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> 변환할 스키마를 포함 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>스키마를 데이터 계약 형식으로 변환할 수 있으면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Runtime.Serialization.XsdDataContractImporter.CanImport*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.InvalidDataContractException
    commentId: T:System.Runtime.Serialization.InvalidDataContractException
    description: "가져오기와 관련 된 데이터 계약 올바르지 않습니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  id: CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: CanImport(XmlSchemaSet,ICollection<XmlQualifiedName>)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet,ICollection<XmlQualifiedName>)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet,ICollection<XmlQualifiedName>)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "지정한 형식 집합에 포함 되는지 여부를 나타내는 값을 가져옵니다는 <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> 로 생성 된 CLR 형식으로 변환할 수는 <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>합니다."
  syntax:
    content: public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas, System.Collections.Generic.ICollection<System.Xml.XmlQualifiedName> typeNames);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> 변환할 스키마를 포함 합니다."
    - id: typeNames
      type: System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName}
      description: "&lt;xref:System.Collections.Generic.ICollection%601&gt; 의 <xref:System.Xml.XmlQualifiedName>가져올 스키마 형식 집합을 나타내는입니다.</xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>스키마를 변형할 수 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Runtime.Serialization.XsdDataContractImporter.CanImport*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> or <code>typeNames</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.InvalidDataContractException
    commentId: T:System.Runtime.Serialization.InvalidDataContractException
    description: "가져오기와 관련 된 데이터 계약 올바르지 않습니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  id: CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: CanImport(XmlSchemaSet,XmlSchemaElement)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet,XmlSchemaElement)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet,XmlSchemaElement)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "특정 스키마 요소에 포함 되는지 여부를 나타내는 값을 가져옵니다는 <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> 가져올 수 있습니다."
  remarks: "이 메서드 형식과에서 참조 하는 모든 스키마 형식을 확인 합니다."
  syntax:
    content: public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.XmlSchemaElement element);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> 가져오려는 합니다."
    - id: element
      type: System.Xml.Schema.XmlSchemaElement
      description: "특정 <xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;> </xref> 체크 인할 스키마 집합."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>요소; 가져올 수 있습니다 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Runtime.Serialization.XsdDataContractImporter.CanImport*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> or <code>element</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.InvalidDataContractException
    commentId: T:System.Runtime.Serialization.InvalidDataContractException
    description: "가져오기와 관련 된 데이터 계약 올바르지 않습니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  id: CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: CanImport(XmlSchemaSet,XmlQualifiedName)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet,XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "스키마에 포함 되는지 여부를 나타내는 값을 가져옵니다는 <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> 로 변환할 수는 <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>합니다."
  remarks: "가져올 수 있는 형식에 대 한 자세한 내용은 참조 [데이터 계약 Serializer에서 지 원하는 유형](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.XmlQualifiedName typeName);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> 스키마 표현을 포함 하는 합니다."
    - id: typeName
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Collections.IList>의 <xref:System.Xml.XmlQualifiedName>에서 가져와야 할 스키마 형식의 이름을 지정 하는 <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>.</xref:System.Xml.XmlQualifiedName> </xref:System.Collections.IList>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>스키마를 데이터 계약 형식으로 변환할 수 있으면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Runtime.Serialization.XsdDataContractImporter.CanImport*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> or <code>typeName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.InvalidDataContractException
    commentId: T:System.Runtime.Serialization.InvalidDataContractException
    description: "가져오기와 관련 된 데이터 계약 올바르지 않습니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit
  id: CodeCompileUnit
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: CodeCompileUnit
  nameWithType: XsdDataContractImporter.CodeCompileUnit
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit
  type: Property
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "가져옵니다는 <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> 생성 된 CLR 형식을 저장 하는 데 사용 합니다."
  remarks: "이 속성을 사용 하 여 스키마를 가져온 후 호출는 <xref:System.Runtime.Serialization.XsdDataContractImporter>액세스로는 <xref:System.CodeDom.CodeCompileUnit>모든 생성 된 코드를 저장 합니다.</xref:System.CodeDom.CodeCompileUnit> </xref:System.Runtime.Serialization.XsdDataContractImporter>"
  example:
  - "The following example uses creates a <xref:System.CodeDom.CodeCompileUnit>. The <xref:System.CodeDom.CodeCompileUnit> is then used to create both a Visual C# and Visual Basic code file.  \n  \n [!code-cs[XsdDataContractImporter#1](~/add/codesnippet/csharp/p-system.runtime.seriali_1_1.cs)]\n [!code-vb[XsdDataContractImporter#1](~/add/codesnippet/visualbasic/p-system.runtime.seriali_1_1.vb)]"
  syntax:
    content: public System.CodeDom.CodeCompileUnit CodeCompileUnit { get; }
    return:
      type: System.CodeDom.CodeCompileUnit
      description: "A <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> 생성 된 CLR 형식을 저장 하는 데 사용 합니다."
  overload: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)
  id: GetCodeTypeReference(System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: GetCodeTypeReference(XmlQualifiedName)
  nameWithType: XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "반환 된 <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> 지정된 <xref:System.Xml.XmlQualifiedName>.</xref:System.Xml.XmlQualifiedName> 갖는 스키마 형식에 대해 생성 된 CLR 형식"
  remarks: "이 메서드를 사용 하 여 호출한 후 생성된 된 CLR 형식에 대 한 참조를 조회 하는 <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A>메서드.</xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> <xref:System.CodeDom.CodeTypeReference>생성 된 형식의 이름을 포함 하 고는 해당 <xref:System.CodeDom.CodeTypeDeclaration> <xref:System.CodeDom.CodeCompileUnit>.</xref:System.CodeDom.CodeCompileUnit> </xref:System.CodeDom.CodeTypeDeclaration> 를 조회 하는 데 사용 될</xref:System.CodeDom.CodeTypeReference>"
  syntax:
    content: public System.CodeDom.CodeTypeReference GetCodeTypeReference (System.Xml.XmlQualifiedName typeName);
    parameters:
    - id: typeName
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>조회할 스키마 형식을 지정합니다 하</xref:System.Xml.XmlQualifiedName> 는"
    return:
      type: System.CodeDom.CodeTypeReference
      description: "A <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> 갖는 스키마 형식에 대해 생성 된 CLR 형식에 대 한 참조는 <code> typeName </code> 지정 합니다."
  overload: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)
  id: GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: GetCodeTypeReference(XmlQualifiedName,XmlSchemaElement)
  nameWithType: XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName,XmlSchemaElement)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName,XmlSchemaElement)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "반환 된 <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> 지정된 된 XML 정규화 요소 및 스키마 요소입니다."
  remarks: "스키마 요소는 요소 범위에서 지정 된 형식에 대 한 데이터에 대 한 필요 합니다. 대표적인 예로 XSD 특성은 `nillable`합니다. 스키마에서 설정 `nillable` 를 `true` null의 개념은 <xref:System.Nullable%601>.</xref:System.Nullable%601> CLR 형식으로 표현 됩니다. 반면 포함 하는 스키마 요소에 지정 되어 이 가져오기 요소-수준 정보를 조회 하 고 그에 따라 정확한 형식 참조를 반환할 수 있도록 요소에 전달 됩니다.       WSDL을 가져올 때 각 매개 변수에 개별적으로 가져오고 매개 변수 요소 따라서 개별적으로 전달 해야 합니다."
  syntax:
    content: public System.CodeDom.CodeTypeReference GetCodeTypeReference (System.Xml.XmlQualifiedName typeName, System.Xml.Schema.XmlSchemaElement element);
    parameters:
    - id: typeName
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>조회할 스키마 형식의 XML 정규화 된 이름을 지정합니다 하</xref:System.Xml.XmlQualifiedName> 는"
    - id: element
      type: System.Xml.Schema.XmlSchemaElement
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;> </xref> XML 스키마의 요소를 지정 하는 합니다."
    return:
      type: System.CodeDom.CodeTypeReference
      description: "A <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> 지정한 스키마 형식에 대해 생성 된 형식을 나타내는입니다."
  overload: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)
  id: GetKnownTypeReferences(System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: GetKnownTypeReferences(XmlQualifiedName)
  nameWithType: XsdDataContractImporter.GetKnownTypeReferences(XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(XmlQualifiedName)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "목록을 반환 <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> 지정한 스키마 형식에 대 한 코드를 생성할 때 생성 된 알려진된 형식을 나타내는 개체입니다."
  remarks: "스키마 형식에 대 한 CLR 형식을 생성 하는 경우 스키마에 있는 모든 파생된 형식에 대 한 알려진된 형식도 생성 됩니다. 대부분의 경우에서 이러한 알려진된 형식은 생성 된 코드에 특성을 사용 하 여 추가 됩니다. (참조 예를 들어 <xref:System.Runtime.Serialization.KnownTypeAttribute>클래스</xref:System.Runtime.Serialization.KnownTypeAttribute> 그러나) 최상위 형식에 대 한 필요를 생성 하는 알려진 형식의 집합을 반환 하는 방법입니다. 이 메서드는 반환 된 <xref:System.CodeDom.CodeTypeReference>특정 스키마 형식에 대해 생성 된 알려진된 형식에 대 한.</xref:System.CodeDom.CodeTypeReference>       자세한 내용은 참조 [데이터 계약 알려진 형식을](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public System.Collections.Generic.ICollection<System.CodeDom.CodeTypeReference> GetKnownTypeReferences (System.Xml.XmlQualifiedName typeName);
    parameters:
    - id: typeName
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>알려진된 형식 >for 검색할 스키마 형식을 나타내는합니다</xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.Collections.Generic.ICollection{System.CodeDom.CodeTypeReference}
      description: "A &lt;xref:System.Collections.Generic.IList%601&gt; 형식의 <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref>합니다."
  overload: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)
  id: Import(System.Xml.Schema.XmlSchemaSet)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: Import(XmlSchemaSet)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "지정 된 집합에 포함 된 XML 스키마를 변형 한 <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> 에 <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following example uses the <xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A> method to test whether a set of schemas can be imported. If the <xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A> method returns `true`, the code invokes the Import method.  \n  \n [!code-cs[XsdDataContractImporter#2](~/add/codesnippet/csharp/8343a280-8e19-434b-8b6b-_1.cs)]\n [!code-vb[XsdDataContractImporter#2](~/add/codesnippet/visualbasic/8343a280-8e19-434b-8b6b-_1.vb)]"
  syntax:
    content: public void Import (System.Xml.Schema.XmlSchemaSet schemas);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> CLR 형식을 생성할 스키마 표현을 포함 하 합니다."
  overload: System.Runtime.Serialization.XsdDataContractImporter.Import*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  id: Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: Import(XmlSchemaSet,ICollection<XmlQualifiedName>)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet,ICollection<XmlQualifiedName>)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet,ICollection<XmlQualifiedName>)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "지정한 스키마 형식 집합을 변형 한 <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> 로 생성 된 CLR 형식에는 <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>합니다."
  syntax:
    content: public void Import (System.Xml.Schema.XmlSchemaSet schemas, System.Collections.Generic.ICollection<System.Xml.XmlQualifiedName> typeNames);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> 스키마 표현을 포함 하는 합니다."
    - id: typeNames
      type: System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName}
      description: "A &lt;xref:System.Collections.Generic.ICollection%601&gt; (의 <xref:System.Xml.XmlQualifiedName>) 가져올 스키마 형식 집합을 나타내는입니다.</xref:System.Xml.XmlQualifiedName>"
  overload: System.Runtime.Serialization.XsdDataContractImporter.Import*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  id: Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: Import(XmlSchemaSet,XmlSchemaElement)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet,XmlSchemaElement)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet,XmlSchemaElement)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "에 지정 된 XML 스키마 집합에서 지정한 스키마 요소를 변형 한 <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> 반환는 <xref:System.Xml.XmlQualifiedName>지정된 된 요소에 대 한 데이터 계약 이름을 나타내는.</xref:System.Xml.XmlQualifiedName>"
  syntax:
    content: public System.Xml.XmlQualifiedName Import (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.XmlSchemaElement element);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> 변환할 스키마를 포함 합니다."
    - id: element
      type: System.Xml.Schema.XmlSchemaElement
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;> </xref> 변환할 특정 스키마 요소를 나타내는입니다."
    return:
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>지정된 된 요소를 나타내는입니다.</xref:System.Xml.XmlQualifiedName>"
  overload: System.Runtime.Serialization.XsdDataContractImporter.Import*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> or <code>element</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  id: Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: Import(XmlSchemaSet,XmlQualifiedName)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet,XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "에 포함 된 지정 된 XML 스키마 형식을 변형는 <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> 에 <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>합니다."
  syntax:
    content: public void Import (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.XmlQualifiedName typeName);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> 스키마 표현을 포함 하는 합니다."
    - id: typeName
      type: System.Xml.XmlQualifiedName
      description: "A <xref:System.Xml.XmlQualifiedName>가져올 특정 스키마 형식을 나타내는.</xref:System.Xml.XmlQualifiedName>"
  overload: System.Runtime.Serialization.XsdDataContractImporter.Import*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> or <code>typeName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.Options
  id: Options
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: Options
  nameWithType: XsdDataContractImporter.Options
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Options
  type: Property
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "가져오거나는 <xref href=&quot;System.Runtime.Serialization.ImportOptions&quot;> </xref> 가져오기 작업에 대해 설정할 수 있는 옵션이 포함 된 합니다."
  remarks: "사용 된 <xref:System.Runtime.Serialization.ImportOptions>스키마 가져오기 중 CLR 형식이 생성 되는 방식을 사용자 지정 하는 클래스입니다.</xref:System.Runtime.Serialization.ImportOptions>"
  syntax:
    content: public System.Runtime.Serialization.ImportOptions Options { get; set; }
    return:
      type: System.Runtime.Serialization.ImportOptions
      description: "A <xref href=&quot;System.Runtime.Serialization.ImportOptions&quot;> </xref> 설정할 수 있는 옵션이 포함 된 합니다."
  overload: System.Runtime.Serialization.XsdDataContractImporter.Options*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.Serialization.InvalidDataContractException
  isExternal: true
  name: System.Runtime.Serialization.InvalidDataContractException
- uid: System.Runtime.Serialization.XsdDataContractImporter.#ctor
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: XsdDataContractImporter()
  nameWithType: XsdDataContractImporter.XsdDataContractImporter()
  fullName: System.Runtime.Serialization.XsdDataContractImporter.XsdDataContractImporter()
- uid: System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: XsdDataContractImporter(CodeCompileUnit)
  nameWithType: XsdDataContractImporter.XsdDataContractImporter(CodeCompileUnit)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.XsdDataContractImporter(CodeCompileUnit)
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CanImport(XmlSchemaSet)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CanImport(XmlSchemaSet,ICollection<XmlQualifiedName>)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet,ICollection<XmlQualifiedName>)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet,ICollection<XmlQualifiedName>)
- uid: System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<XmlQualifiedName>
  nameWithType: ICollection<XmlQualifiedName>
  fullName: System.Collections.Generic.ICollection<System.Xml.XmlQualifiedName>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Xml.XmlQualifiedName>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.XmlQualifiedName
    name: XmlQualifiedName
    nameWithType: XmlQualifiedName
    fullName: XmlQualifiedName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CanImport(XmlSchemaSet,XmlSchemaElement)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet,XmlSchemaElement)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet,XmlSchemaElement)
- uid: System.Xml.Schema.XmlSchemaElement
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaElement
  nameWithType: XmlSchemaElement
  fullName: System.Xml.Schema.XmlSchemaElement
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CanImport(XmlSchemaSet,XmlQualifiedName)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet,XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet,XmlQualifiedName)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CodeCompileUnit
  nameWithType: XsdDataContractImporter.CodeCompileUnit
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: GetCodeTypeReference(XmlQualifiedName)
  nameWithType: XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName)
- uid: System.CodeDom.CodeTypeReference
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: GetCodeTypeReference(XmlQualifiedName,XmlSchemaElement)
  nameWithType: XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName,XmlSchemaElement)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName,XmlSchemaElement)
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: GetKnownTypeReferences(XmlQualifiedName)
  nameWithType: XsdDataContractImporter.GetKnownTypeReferences(XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(XmlQualifiedName)
- uid: System.Collections.Generic.ICollection{System.CodeDom.CodeTypeReference}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<CodeTypeReference>
  nameWithType: ICollection<CodeTypeReference>
  fullName: System.Collections.Generic.ICollection<System.CodeDom.CodeTypeReference>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.CodeDom.CodeTypeReference>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.CodeDom.CodeTypeReference
    name: CodeTypeReference
    nameWithType: CodeTypeReference
    fullName: CodeTypeReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Import(XmlSchemaSet)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet)
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Import(XmlSchemaSet,ICollection<XmlQualifiedName>)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet,ICollection<XmlQualifiedName>)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet,ICollection<XmlQualifiedName>)
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Import(XmlSchemaSet,XmlSchemaElement)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet,XmlSchemaElement)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet,XmlSchemaElement)
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Import(XmlSchemaSet,XmlQualifiedName)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet,XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet,XmlQualifiedName)
- uid: System.Runtime.Serialization.XsdDataContractImporter.Options
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Options
  nameWithType: XsdDataContractImporter.Options
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Options
- uid: System.Runtime.Serialization.ImportOptions
  parent: System.Runtime.Serialization
  isExternal: false
  name: ImportOptions
  nameWithType: ImportOptions
  fullName: System.Runtime.Serialization.ImportOptions
- uid: System.Runtime.Serialization.XsdDataContractImporter.#ctor*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: XsdDataContractImporter
  nameWithType: XsdDataContractImporter.XsdDataContractImporter
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CanImport
  nameWithType: XsdDataContractImporter.CanImport
- uid: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CodeCompileUnit
  nameWithType: XsdDataContractImporter.CodeCompileUnit
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: GetCodeTypeReference
  nameWithType: XsdDataContractImporter.GetCodeTypeReference
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: GetKnownTypeReferences
  nameWithType: XsdDataContractImporter.GetKnownTypeReferences
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Import
  nameWithType: XsdDataContractImporter.Import
- uid: System.Runtime.Serialization.XsdDataContractImporter.Options*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Options
  nameWithType: XsdDataContractImporter.Options
