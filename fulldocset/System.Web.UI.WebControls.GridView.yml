### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.GridView
  id: GridView
  children:
  - System.Web.UI.WebControls.GridView.#ctor
  - System.Web.UI.WebControls.GridView.AllowCustomPaging
  - System.Web.UI.WebControls.GridView.AllowPaging
  - System.Web.UI.WebControls.GridView.AllowSorting
  - System.Web.UI.WebControls.GridView.AlternatingRowStyle
  - System.Web.UI.WebControls.GridView.AutoGenerateColumns
  - System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton
  - System.Web.UI.WebControls.GridView.AutoGenerateEditButton
  - System.Web.UI.WebControls.GridView.AutoGenerateSelectButton
  - System.Web.UI.WebControls.GridView.BackImageUrl
  - System.Web.UI.WebControls.GridView.BottomPagerRow
  - System.Web.UI.WebControls.GridView.Caption
  - System.Web.UI.WebControls.GridView.CaptionAlign
  - System.Web.UI.WebControls.GridView.CellPadding
  - System.Web.UI.WebControls.GridView.CellSpacing
  - System.Web.UI.WebControls.GridView.ClientIDRowSuffix
  - System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys
  - System.Web.UI.WebControls.GridView.Columns
  - System.Web.UI.WebControls.GridView.ColumnsGenerator
  - System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn(System.Web.UI.WebControls.AutoGeneratedFieldProperties)
  - System.Web.UI.WebControls.GridView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  - System.Web.UI.WebControls.GridView.CreateChildTable
  - System.Web.UI.WebControls.GridView.CreateColumns(System.Web.UI.WebControls.PagedDataSource,System.Boolean)
  - System.Web.UI.WebControls.GridView.CreateControlStyle
  - System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments
  - System.Web.UI.WebControls.GridView.CreateRow(System.Int32,System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  - System.Web.UI.WebControls.GridView.DataBind
  - System.Web.UI.WebControls.GridView.DataKeyNames
  - System.Web.UI.WebControls.GridView.DataKeys
  - System.Web.UI.WebControls.GridView.DeleteMethod
  - System.Web.UI.WebControls.GridView.DeleteRow(System.Int32)
  - System.Web.UI.WebControls.GridView.EditIndex
  - System.Web.UI.WebControls.GridView.EditRowStyle
  - System.Web.UI.WebControls.GridView.EmptyDataRowStyle
  - System.Web.UI.WebControls.GridView.EmptyDataTemplate
  - System.Web.UI.WebControls.GridView.EmptyDataText
  - System.Web.UI.WebControls.GridView.EnableModelValidation
  - System.Web.UI.WebControls.GridView.EnablePersistedSelection
  - System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks
  - System.Web.UI.WebControls.GridView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.GridViewRow,System.Boolean,System.Boolean)
  - System.Web.UI.WebControls.GridView.FooterRow
  - System.Web.UI.WebControls.GridView.FooterStyle
  - System.Web.UI.WebControls.GridView.GetCallbackResult
  - System.Web.UI.WebControls.GridView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  - System.Web.UI.WebControls.GridView.GridLines
  - System.Web.UI.WebControls.GridView.HeaderRow
  - System.Web.UI.WebControls.GridView.HeaderStyle
  - System.Web.UI.WebControls.GridView.HorizontalAlign
  - System.Web.UI.WebControls.GridView.InitializePager(System.Web.UI.WebControls.GridViewRow,System.Int32,System.Web.UI.WebControls.PagedDataSource)
  - System.Web.UI.WebControls.GridView.InitializeRow(System.Web.UI.WebControls.GridViewRow,System.Web.UI.WebControls.DataControlField[])
  - System.Web.UI.WebControls.GridView.IsBindableType(System.Type)
  - System.Web.UI.WebControls.GridView.LoadControlState(System.Object)
  - System.Web.UI.WebControls.GridView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.GridView.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.GridView.OnDataPropertyChanged
  - System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.GridView.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)
  - System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)
  - System.Web.UI.WebControls.GridView.OnPagePreLoad(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.GridView.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)
  - System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)
  - System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)
  - System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)
  - System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)
  - System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)
  - System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)
  - System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)
  - System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)
  - System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)
  - System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)
  - System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)
  - System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)
  - System.Web.UI.WebControls.GridView.PageCount
  - System.Web.UI.WebControls.GridView.PageIndex
  - System.Web.UI.WebControls.GridView.PageIndexChanged
  - System.Web.UI.WebControls.GridView.PageIndexChanging
  - System.Web.UI.WebControls.GridView.PagerSettings
  - System.Web.UI.WebControls.GridView.PagerStyle
  - System.Web.UI.WebControls.GridView.PagerTemplate
  - System.Web.UI.WebControls.GridView.PageSize
  - System.Web.UI.WebControls.GridView.PerformDataBinding(System.Collections.IEnumerable)
  - System.Web.UI.WebControls.GridView.PrepareControlHierarchy
  - System.Web.UI.WebControls.GridView.RaiseCallbackEvent(System.String)
  - System.Web.UI.WebControls.GridView.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.GridView.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.GridView.RowCancelingEdit
  - System.Web.UI.WebControls.GridView.RowCommand
  - System.Web.UI.WebControls.GridView.RowCreated
  - System.Web.UI.WebControls.GridView.RowDataBound
  - System.Web.UI.WebControls.GridView.RowDeleted
  - System.Web.UI.WebControls.GridView.RowDeleting
  - System.Web.UI.WebControls.GridView.RowEditing
  - System.Web.UI.WebControls.GridView.RowHeaderColumn
  - System.Web.UI.WebControls.GridView.Rows
  - System.Web.UI.WebControls.GridView.RowStyle
  - System.Web.UI.WebControls.GridView.RowUpdated
  - System.Web.UI.WebControls.GridView.RowUpdating
  - System.Web.UI.WebControls.GridView.SaveControlState
  - System.Web.UI.WebControls.GridView.SaveViewState
  - System.Web.UI.WebControls.GridView.SelectedDataKey
  - System.Web.UI.WebControls.GridView.SelectedIndex
  - System.Web.UI.WebControls.GridView.SelectedIndexChanged
  - System.Web.UI.WebControls.GridView.SelectedIndexChanging
  - System.Web.UI.WebControls.GridView.SelectedPersistedDataKey
  - System.Web.UI.WebControls.GridView.SelectedRow
  - System.Web.UI.WebControls.GridView.SelectedRowStyle
  - System.Web.UI.WebControls.GridView.SelectedValue
  - System.Web.UI.WebControls.GridView.SelectRow(System.Int32)
  - System.Web.UI.WebControls.GridView.SetEditRow(System.Int32)
  - System.Web.UI.WebControls.GridView.SetPageIndex(System.Int32)
  - System.Web.UI.WebControls.GridView.ShowFooter
  - System.Web.UI.WebControls.GridView.ShowHeader
  - System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty
  - System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)
  - System.Web.UI.WebControls.GridView.SortDirection
  - System.Web.UI.WebControls.GridView.Sorted
  - System.Web.UI.WebControls.GridView.SortedAscendingCellStyle
  - System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle
  - System.Web.UI.WebControls.GridView.SortedDescendingCellStyle
  - System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle
  - System.Web.UI.WebControls.GridView.SortExpression
  - System.Web.UI.WebControls.GridView.Sorting
  - System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#GetCallbackResult
  - System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  - System.Web.UI.WebControls.GridView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys
  - System.Web.UI.WebControls.GridView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPersistedSelector#DataKey
  - System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  - System.Web.UI.WebControls.GridView.TagKey
  - System.Web.UI.WebControls.GridView.TopPagerRow
  - System.Web.UI.WebControls.GridView.TrackViewState
  - System.Web.UI.WebControls.GridView.UpdateMethod
  - System.Web.UI.WebControls.GridView.UpdateRow(System.Int32,System.Boolean)
  - System.Web.UI.WebControls.GridView.UseAccessibleHeader
  - System.Web.UI.WebControls.GridView.VirtualItemCount
  langs:
  - csharp
  name: GridView
  nameWithType: GridView
  fullName: System.Web.UI.WebControls.GridView
  type: Class
  summary: "각 열 필드를 나타냅니다 하 고 각 행은 레코드를 나타냅니다. 테이블의 데이터 원본의 값을 표시 합니다. GridView 컨트롤 선택, 정렬 및 이러한 항목을 편집할 수 있습니다."
  remarks: "이 항목의:- [소개](#introduction)      -   [열 필드](#column_fields)      -   [데이터 바인딩](#binding_to_data)      -   [데이터 작업](#data_operations)      -   [사용자 인터페이스 사용자 지정](#customizing_the_user_interface)      -   [이벤트](#events)      -   [내게 필요한 옵션](#accessibility)      -   [선언적 구문](#declarative_syntax) <a name=&quot;introduction&quot;> </a> # # 소개 하는 GridView 컨트롤은 테이블에 데이터 원본의 값을 표시 하는 데 사용 됩니다.       각 열 필드를 나타내고 레코드를 나타냅니다. 다음 기능을 지원 하는 GridView 컨트롤:- <xref:System.Web.UI.WebControls.SqlDataSource>.</xref:System.Web.UI.WebControls.SqlDataSource> 같은 데이터 소스 컨트롤에 바인딩      -기본 제공 정렬 기능입니다.      -기본 제공 필드를 업데이트 및 삭제 기능입니다.      -기본 제공 페이징 기능입니다.      -기본 제공 행 선택 기능입니다.      동적으로 속성을 설정 하는 GridView 개체 모델에 대 한 프로그래밍 액세스 이벤트를 처리 등에입니다.      -여러 키 필드입니다.      -하이퍼링크 열에 대 한 여러 개의 데이터 필드입니다.      테마 및 스타일을 통해 모양을 사용자 지정할 수 있습니다.      -ASP.NET에서 사용할 수 있는 다른 데이터 바인딩된 컨트롤에 대 한 참조 하십시오 [데이터 바인딩된 컨트롤을 웹 서버 컨트롤](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] >에 대해 잘 알고 있다면는 <xref:System.Web.UI.WebControls.DataGrid>에서.NET Framework 버전 1.0 컨트롤에 대 한 후속은 GridView 컨트롤은 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid>      <a name=&quot;column_fields&quot;></a># # 열 필드의 각 열에 GridView 컨트롤으로 표시 됩니다는 <xref:System.Web.UI.WebControls.DataControlField>개체입니다.</xref:System.Web.UI.WebControls.DataControlField> 기본적으로는 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>속성 `true`, 만듦는 <xref:System.Web.UI.WebControls.AutoGeneratedField>데이터 원본에 있는 각 필드에 대 한 개체입니다.</xref:System.Web.UI.WebControls.AutoGeneratedField> </xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> 그런 다음 각 필드는 각 필드는 데이터 소스에 표시 된 순서 대로 GridView 컨트롤의 열으로 렌더링 됩니다.       필드를 설정 하 여 GridView 컨트롤에 표시 되는 열을 직접 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>속성을 `false` 다음 고유한 열 필드 컬렉션을 정의 합니다.</xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> 열 필드 형식에 따라 컨트롤의 열의 동작을 결정 합니다. 다음 표에서 사용할 수 있는 여러 열 필드 형식을 나열 합니다.      | 열 필드 형식 | 설명 |   |-----------------------|-----------------|   | <xref:System.Web.UI.WebControls.BoundField>| 데이터 원본에서 필드의 값을 표시 합니다.</xref:System.Web.UI.WebControls.BoundField> GridView 컨트롤의 기본 열 형식입니다. |   | <xref:System.Web.UI.WebControls.ButtonField>| GridView 컨트롤의 각 항목에 대 한 명령 단추를 표시 합니다.</xref:System.Web.UI.WebControls.ButtonField> 이렇게 하면 추가 또는 제거 단추 등의 사용자 지정 단추 컨트롤의 열을 만들 수 있습니다. |   | <xref:System.Web.UI.WebControls.CheckBoxField>| GridView 컨트롤의 각 항목에 대 한 확인란을 표시 합니다.</xref:System.Web.UI.WebControls.CheckBoxField> 이 열 필드 형식은 부울 값을 사용 하는 필드를 표시 하는 데 주로 사용 됩니다. |   | <xref:System.Web.UI.WebControls.CommandField>| 미리 정의 된 select를 수행 하는 명령 단추 표시, 편집 또는 삭제 작업. |   | <xref:System.Web.UI.WebControls.HyperLinkField>| 하이퍼링크는 데이터 원본에서 필드의 값을 표시 합니다.</xref:System.Web.UI.WebControls.HyperLinkField> </xref:System.Web.UI.WebControls.CommandField> 이 열 필드 형식에 하이퍼링크의 URL로 두 번째 필드를 바인딩할 수 있습니다. |   | <xref:System.Web.UI.WebControls.ImageField>| GridView 컨트롤의 각 항목에 대 한 이미지를 표시 합니다. |   | <xref:System.Web.UI.WebControls.TemplateField>| 각 항목에 대 한 사용자 정의 콘텐츠 지정한 템플릿에 따라 GridView 컨트롤에 표시 됩니다.</xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.ImageField> 이 열 필드 형식을 사용 하면 사용자 지정 열 필드를 만들 수 있습니다. |       열 필드 컬렉션을 선언적으로 정의 하려면 먼저 추가 중괄호와 닫는 `<Columns>` 및 GridView 컨트롤의 닫는 태그 사이입니다. 다음에 여는 태그와 닫는 간의 포함 시킬 열 필드를 나열 `<Columns>` 태그입니다. 지정 된 열에 추가 되는 <xref:System.Web.UI.WebControls.GridView.Columns%2A>순서 대로 나열 합니다.</xref:System.Web.UI.WebControls.GridView.Columns%2A> <xref:System.Web.UI.WebControls.GridView.Columns%2A>컬렉션을 저장 하는 모든 열 컨트롤의 필드 및 GridView 컨트롤의 열 필드를 프로그래밍 방식으로 관리할 수 있습니다.</xref:System.Web.UI.WebControls.GridView.Columns%2A>       명시적으로 선언 된 열 필드를 자동으로 생성 된 열 필드와 함께에서 표시할 수 있습니다. 모두 사용 하는 명시적으로 선언 된 열 필드 뒤에 자동으로 생성 된 열 필드를 먼저 렌더링 됩니다.      > [!NOTE] > 자동으로 생성 된 열 필드에 추가 되지 않습니다는 <xref:System.Web.UI.WebControls.GridView.Columns%2A>컬렉션.</xref:System.Web.UI.WebControls.GridView.Columns%2A>      <a name=&quot;binding_to_data&quot;></a># # 데이터는 GridView 컨트롤에 바인딩하는 데이터 소스 제어에 바인딩될 수 (같은 <xref:System.Web.UI.WebControls.SqlDataSource>컨트롤 또는 <xref:System.Web.UI.WebControls.ObjectDataSource>제어) 또는 구현 하는 데이터 원본 컬렉션에는 <xref:System.Collections.IEnumerable?displayProperty=fullName>인터페이스와 같은 <xref:System.Data.DataView?displayProperty=fullName>, <xref:System.Collections.ArrayList?displayProperty=fullName>, <xref:System.Collections.Generic.List%601?displayProperty=fullName>, 또는 기타 컬렉션 형식.</xref:System.Collections.Generic.List%601?displayProperty=fullName> </xref:System.Collections.ArrayList?displayProperty=fullName> </xref:System.Data.DataView?displayProperty=fullName> </xref:System.Collections.IEnumerable?displayProperty=fullName> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> 다음 방법 중 하나를 사용 하 여 적절 한 데이터 원본 유형에 GridView 컨트롤을 바인딩할:-데이터 소스 컨트롤을 설정 하려면는 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>GridView 컨트롤의 속성은 <xref:System.Web.UI.Control.ID%2A>데이터 소스 제어의 값입니다.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> GridView 컨트롤의 지정 된 데이터 소스 제어에 자동으로 바인딩하고 활용할 수 데이터 소스 컨트롤의 정렬, 업데이트, 삭제 및 페이징을 수행 하는 기능입니다. 이것은 데이터에 바인딩하는 기본 방법입니다.      -을 구현 하는 데이터 소스를 바인딩할는 <xref:System.Collections.IEnumerable?displayProperty=fullName>인터페이스를 프로그래밍 방식으로 설정는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>GridView의 속성이 데이터 소스에 컨트롤을 다음 호출에서 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>메서드.</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> </xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> </xref:System.Collections.IEnumerable?displayProperty=fullName> 이 메서드를 사용 하면 기본 제공 정렬, update, delete 및 페이징 기능 GridView 컨트롤 제공 하지 않습니다. 적절 한 이벤트를 사용 하 여이 기능을 제공 해야 합니다.       데이터 바인딩에 대 한 자세한 내용은 참조 [ASP.NET 데이터 액세스 콘텐츠 맵](http://msdn.microsoft.com/en-us/f9219396-a0fa-481f-894d-e3d9c67d64f2)합니다.      > [!NOTE] > 악의적인 클라이언트 스크립트가 포함 될 수 있습니다는 사용자 입력을 표시 하려면이 컨트롤을 사용할 수 있습니다. 응용 프로그램에 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 보낸 모든 정보를 확인 합니다. 가능한 경우 항상이 가장 좋습니다 값이이 컨트롤에 표시 되기 전에 HTML로 인코딩된이 지 (의 <xref:System.Web.UI.WebControls.BoundField>기본적으로 값을 HTML로 인코딩하고 클래스).</xref:System.Web.UI.WebControls.BoundField> ASP.NET은 사용자 입력에 있는 스크립트 블록 및 HTML에 있는 입력된 요청 유효성 검사 기능을 제공 합니다. 유효성 검사 서버 컨트롤이 사용자 입력을 평가 하기 위해 제공 됩니다. 자세한 내용은 참조 [유효성 검사 컨트롤 소개](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190)합니다.      <a name=&quot;data_operations&quot;></a># # 데이터 작업 GridView 컨트롤 사용자가 정렬, 업데이트, 삭제, 선택, 및 컨트롤의 항목을 페이징할 수 있는 다양 한 기본 제공 기능을 제공 합니다. 데이터 소스 제어에 GridView 컨트롤 바인딩되면 GridView 컨트롤 데이터 소스 컨트롤의 기능을 사용할 수 있으며 자동 정렬 업데이트 및 삭제 기능.      > [!NOTE] > 하는 GridView 컨트롤 정렬, 업데이트 및 다른 유형의 데이터 원본 삭제에 대 한 지원을 제공할 수 있습니다. 그러나 이러한 작업에 대 한 구현으로 적절 한 이벤트 처리기를 제공 해야 합니다.       정렬 열 머리글을 클릭 하 여 특정 열에 대 한 GridView 컨트롤에서 항목을 정렬 하려면 사용자 수 있습니다. 정렬 기능을 사용 설정 된 <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A>속성을 `true`.</xref:System.Web.UI.WebControls.GridView.AllowSorting%2A>       자동 업데이트, 삭제 및 선택 기능을 사용할 때의 단추를 사용할 수는 <xref:System.Web.UI.WebControls.ButtonField>또는 <xref:System.Web.UI.WebControls.TemplateField>각각 &quot;편집&quot;, &quot;Delete&quot; 및 &quot;Select&quot; 명령 이름으로 열 필드를 클릭 합니다.</xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.ButtonField> GridView 컨트롤에서 자동으로 추가할 수는 <xref:System.Web.UI.WebControls.CommandField>경우 열 필드는 편집, 삭제 또는 선택 단추를는 <xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A>, <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>, 또는 <xref:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton%2A>속성이 `true`각각.</xref:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton%2A> </xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> </xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A> </xref:System.Web.UI.WebControls.CommandField>      > [!NOTE] > 데이터 원본에 레코드 삽입 직접 지원 하지 않는 GridView 컨트롤에서 합니다. 그러나 GridView 컨트롤 함께에서 사용 하 여 레코드를 삽입 하는 `DetailsView` 또는 `FormView` 제어 합니다. 자세한 내용은 참조 <xref:System.Web.UI.WebControls.DetailsView>또는 <xref:System.Web.UI.WebControls.FormView>각각.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView>       동시에 데이터 원본의 모든 레코드를 표시, 하는 대신 GridView 컨트롤 자동으로 분리할 수 레코드 페이지에 있습니다. 페이징을 사용 하려면 설정는 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>속성을 `true`.</xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>      > [!NOTE] > <xref:System.Web.UI.PageStatePersister.ViewState%2A>.</xref:System.Web.UI.PageStatePersister.ViewState%2A> 에 저장 된 정보를 기반으로 다시 게시 하는 GridView 컨트롤 다시 만들어집니다. GridView 컨트롤을 포함 하는 경우는 <xref:System.Web.UI.WebControls.TemplateField>또는 <xref:System.Web.UI.WebControls.CommandField>와 <xref:System.Web.UI.WebControls.CommandField.CausesValidation%2A>속성이로 설정 `true`, 하면 <xref:System.Web.UI.Page.EnableViewState%2A>속성 설정 해야 `true` 동시 데이터를 확인 하려면 같은 업데이트 및 삭제 작업을 적절 한 행에 적용 합니다.</xref:System.Web.UI.Page.EnableViewState%2A> </xref:System.Web.UI.WebControls.CommandField.CausesValidation%2A> </xref:System.Web.UI.WebControls.CommandField> </xref:System.Web.UI.WebControls.TemplateField>      <a name=&quot;customizing_the_user_interface&quot;></a># # 사용자 지정 사용자 인터페이스 사용자는 컨트롤의 다른 부분에 대 한 스타일 속성을 설정 하 여 GridView 컨트롤의 모양을 사용자 지정할 수 있습니다. 다음 표에서 다른 스타일 속성을 나열합니다.      | Style 속성 | 설명 |   |--------------------|-----------------|   | <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>| GridView 컨트롤에 교대로 반복 되는 데이터 행에 대 한 스타일 설정을.</xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> <xref:System.Web.UI.WebControls.GridView.RowStyle%2A>설정과 <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>설정 간의 교대로 반복 되는 데이터 행을 표시할 때이 속성을 설정 합니다. |   | <xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A>| GridView 컨트롤에 편집 되는 행 스타일 설정 합니다. |   | <xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A>| 데이터 원본에는 레코드가 없으면 GridView 컨트롤에 표시 되는 빈 데이터 행에 대 한 스타일 설정을. |   | <xref:System.Web.UI.WebControls.GridView.FooterStyle%2A>| GridView 컨트롤의 바닥글 행에 대 한 스타일 설정 합니다. |   | <xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>| GridView 컨트롤의 머리글 행에 대 한 스타일 설정 합니다. |   | <xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>| GridView 컨트롤의 호출기 행 스타일 설정 합니다. |   | <xref:System.Web.UI.WebControls.GridView.RowStyle%2A>| GridView 컨트롤에 데이터 행에 대 한 스타일 설정을.</xref:System.Web.UI.WebControls.GridView.RowStyle%2A> </xref:System.Web.UI.WebControls.GridView.PagerStyle%2A> </xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A> </xref:System.Web.UI.WebControls.GridView.FooterStyle%2A> </xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A> </xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A> </xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> </xref:System.Web.UI.WebControls.GridView.RowStyle%2A> <xref:System.Web.UI.WebControls.GridView.RowStyle%2A>설정과 <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>설정 간의 교대로 반복 되는 데이터 행을 표시할 <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>속성을 설정도 됩니다. |   | <xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A>| GridView 컨트롤에서 선택한 행에 대 한 스타일 설정 합니다. |   | <xref:System.Web.UI.WebControls.GridView.SortedAscendingCellStyle%2A>| 스타일 설정을 GridView 컨트롤에 따라 데이터 열 데이터 정렬 됩니다.</xref:System.Web.UI.WebControls.GridView.SortedAscendingCellStyle%2A> </xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A>   </xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A></xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A></xref:System.Web.UI.WebControls.GridView.RowStyle%2A> 이 스타일을 설정 하는 경우 스타일 (예를 들어 강조 표시 된 열) 데이터를 오름차순 정렬 될 때 셀에 적용 됩니다. |   | <xref:System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle%2A>| 스타일 설정을 GridView 컨트롤에 따라 데이터 열 데이터 정렬 됩니다.</xref:System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle%2A> 데이터를 오름차순 정렬이 스타일을 설정 하는 경우 데이터는 오름차순으로 정렬 됨을 나타내는 화살표가 GridView 컨트롤의 머리글에 배치 됩니다. |   | <xref:System.Web.UI.WebControls.GridView.SortedDescendingCellStyle%2A>| 스타일 설정을 GridView 컨트롤에 따라 데이터 열 데이터 정렬 됩니다.</xref:System.Web.UI.WebControls.GridView.SortedDescendingCellStyle%2A> 이 스타일을 설정 하는 경우 스타일 (예를 들어 강조 표시 된 열) 데이터를 내림차순 정렬 될 때 셀에 적용 됩니다. |   | <xref:System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle%2A>| 스타일 설정을 GridView 컨트롤에 따라 데이터 열 데이터 정렬 됩니다.</xref:System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle%2A> 이 스타일을 설정 하는 경우 가리키는 화살표가 축소 시에 설정 됩니다 GridView의 헤더 데이터 내림차순으로 정렬 됩니다. |       표시 하거나 컨트롤의 다른 부분을 숨길 수 있습니다. 다음 표에서 표시 하거나 숨길 어느 부분을 제어 하는 속성을 나열 합니다.      | 속성 | 설명 |   |--------------|-----------------|   | <xref:System.Web.UI.WebControls.GridView.ShowFooter%2A>| GridView 컨트롤의 바닥글 구역을 표시 하거나 숨깁니다. |   | <xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>| GridView 컨트롤의 헤더 구역을 표시 하거나 숨깁니다. |      <a name=&quot;events&quot;> </a> # # 이벤트는 GridView 컨트롤 프로그래밍할 수 있는 몇 가지 이벤트를 제공 합니다.</xref:System.Web.UI.WebControls.GridView.ShowHeader%2A> </xref:System.Web.UI.WebControls.GridView.ShowFooter%2A> 그러면 이벤트가 발생할 때마다 사용자 지정 루틴을 실행할 수 있습니다. 다음 표에서 GridView 컨트롤에서 지원 되는 이벤트를 표시 합니다.      | 이벤트 | 설명 |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.GridView.PageIndexChanged>| GridView 컨트롤 페이징 작업을 처리 한 후으 나 페이저 단추 중 하나를 클릭할 때 발생 합니다.</xref:System.Web.UI.WebControls.GridView.PageIndexChanged> 이 이벤트는 사용자가 컨트롤에서 다른 페이지로 이동한 후 작업을 수행 해야 할 때 주로 사용 됩니다. |   | <xref:System.Web.UI.WebControls.GridView.PageIndexChanging>| GridView 하기 전에 컨트롤 페이징 작업을 처리 하지만 페이저 단추 중 하나를 클릭 하는 경우에 발생 합니다.</xref:System.Web.UI.WebControls.GridView.PageIndexChanging> 이 이벤트는 자주 페이징 작업을 취소 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>| 편집 모드를 종료 GridView 컨트롤 앞 행의 취소 단추를 클릭할 때 경우에 발생 합니다.</xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> 이 이벤트는 자주 취소 작업을 중지 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.GridView.RowCommand>| GridView 컨트롤에 단추를 클릭할 때 발생 합니다.</xref:System.Web.UI.WebControls.GridView.RowCommand> 이 이벤트는 자주 컨트롤에서 단추를 클릭 하면 작업을 수행 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.GridView.RowCreated>| GridView 컨트롤에 새 행을 만들 때 발생 합니다.</xref:System.Web.UI.WebControls.GridView.RowCreated> 이 이벤트는 자주 행을 만들 때 행의 내용을 수정 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.GridView.RowDataBound>| 데이터 행을 GridView 컨트롤의 데이터에 바인딩되면 발생 합니다.</xref:System.Web.UI.WebControls.GridView.RowDataBound> 이 이벤트는 종종 행 데이터에 바인딩될 때 행의 내용을 수정 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.GridView.RowDeleted>| 행의 삭제 단추를 클릭 하 고, 데이터 원본에서 레코드를 삭제 하는 GridView 컨트롤 후 발생 합니다.</xref:System.Web.UI.WebControls.GridView.RowDeleted> 이 이벤트는 종종 삭제 작업의 결과 확인 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.GridView.RowDeleting>| GridView 하기 전에 컨트롤이 데이터 원본에서 레코드를 삭제 하지만 행의 삭제 단추를 클릭 하는 경우에 발생 합니다.</xref:System.Web.UI.WebControls.GridView.RowDeleting> 이 이벤트는 종종 삭제 작업을 취소 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.GridView.RowEditing>| GridView 하기 전에 컨트롤이 편집 모드로 전환 되었으면 행의 편집 단추를 클릭할 때 경우에 발생 합니다.</xref:System.Web.UI.WebControls.GridView.RowEditing> 이 이벤트는 종종 편집 작업을 취소 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.GridView.RowUpdated>| 행의 업데이트 단추를 클릭 하 고, 행을 업데이트 하는 GridView 컨트롤 후 발생 합니다.</xref:System.Web.UI.WebControls.GridView.RowUpdated> 이 이벤트는 자주 업데이트 작업의 결과 확인 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.GridView.RowUpdating>| 행의 업데이트 단추를 클릭 하면 컨트롤이 GridView 하기 전에 행을 업데이트 때 경우에 발생 합니다.</xref:System.Web.UI.WebControls.GridView.RowUpdating> 이 이벤트는 자주 업데이트 작업을 취소 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>| GridView 컨트롤 선택 작업을 처리 한 후으 나 행의 선택 단추를 클릭할 때 발생 합니다.</xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> 이 이벤트는 컨트롤에서 행을 선택한 후 작업을 수행 하는 대개. |   | <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>| 전에 GridView 컨트롤 선택 작업을 처리 하지만 행의 선택 단추를 클릭 하는 경우에 발생 합니다.</xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging> 이 이벤트는 종종 선택 작업을 취소 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.GridView.Sorted>| 열을 정렬 하는 하이퍼링크를 클릭 GridView 컨트롤에서 정렬 작업을 처리 한 후 발생 합니다.</xref:System.Web.UI.WebControls.GridView.Sorted> 이 이벤트는 사용자가 열을 정렬에 대 한 하이퍼링크를 클릭 한 후 작업을 수행 하는 데 주로 사용 됩니다. |   | <xref:System.Web.UI.WebControls.GridView.Sorting>| 컨트롤이 GridView 하기 전에 정렬 작업을 처리 하지만 열을 정렬 하는 하이퍼링크를 클릭 하는 경우에 발생 합니다.</xref:System.Web.UI.WebControls.GridView.Sorting> 정렬 작업을 취소 하거나 사용자 지정 정렬 루틴을 수행 하려면이 이벤트는 자주 사용 됩니다. |      <a name=&quot;accessibility&quot;> </a> # #에 대 한 내게 필요한 옵션에 대 한 내게 필요한 옵션 표준을 준수 하는 태그를 생성 되도록이 컨트롤을 구성 하는 방법 내용은 [Visual Studio 및 ASP.NET의 내게 필요한 옵션](~/add/includes/ajax-current-ext-md.md) 및 [ASP.NET 컨트롤 및 내게 필요한 옵션](~/add/includes/ajax-current-ext-md.md)합니다.      <a name=&quot;declarative_syntax&quot;></a># # 선언적 구문```   <asp:GridView       AccessKey=&quot;string&quot;       AllowPaging=&quot;True|False&quot;       AllowSorting=&quot;True|False&quot;       AutoGenerateColumns=&quot;True|False&quot;       AutoGenerateDeleteButton=&quot;True|False&quot;       AutoGenerateEditButton=&quot;True|False&quot;       AutoGenerateSelectButton=&quot;True|False&quot;       BackColor=&quot;color name|#dddddd&quot;       BackImageUrl=&quot;uri&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       Caption=&quot;string&quot;       CaptionAlign=&quot;NotSet|Top|Bottom|Left|Right&quot;       CellPadding=&quot;integer&quot;       CellSpacing=&quot;integer&quot;       CssClass=&quot;string&quot;       DataKeyNames=&quot;string&quot;       DataMember=&quot;string&quot;       DataSource=&quot;string&quot;       DataSourceID=&quot;string&quot;       EditIndex=&quot;integer&quot;       EmptyDataText=&quot;string&quot;       Enabled=&quot;True|False&quot;       EnableSortingAndPagingCallbacks=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       ForeColor=&quot;color name|#dddddd&quot;       GridLines=&quot;None|Horizontal|Vertical|Both&quot;       Height=&quot;size&quot;       HorizontalAlign=&quot;NotSet|Left|Center|Right|Justify&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDataBound=&quot;DataBound event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPageIndexChanged=&quot;PageIndexChanged event handler&quot;       OnPageIndexChanging=&quot;PageIndexChanging event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnRowCancelingEdit=&quot;RowCancelingEdit event handler&quot;       OnRowCommand=&quot;RowCommand event handler&quot;       OnRowCreated=&quot;RowCreated event handler&quot;       OnRowDataBound=&quot;RowDataBound event handler&quot;       OnRowDeleted=&quot;RowDeleted event handler&quot;       OnRowDeleting=&quot;RowDeleting event handler&quot;       OnRowEditing=&quot;RowEditing event handler&quot;       OnRowUpdated=&quot;RowUpdated event handler&quot;       OnRowUpdating=&quot;RowUpdating event handler&quot;       OnSelectedIndexChanged=&quot;SelectedIndexChanged event handler&quot;       OnSelectedIndexChanging=&quot;SelectedIndexChanging event handler&quot;       OnSorted=&quot;Sorted event handler&quot;       OnSorting=&quot;Sorting event handler&quot;       OnUnload=&quot;Unload event handler&quot;       PageIndex=&quot;integer&quot;       PagerSettings-FirstPageImageUrl=&quot;uri&quot;       PagerSettings-FirstPageText=&quot;string&quot;       PagerSettings-LastPageImageUrl=&quot;uri&quot;       PagerSettings-LastPageText=&quot;string&quot;       PagerSettings-Mode=&quot;NextPrevious|Numeric|NextPreviousFirstLast|           NumericFirstLast&quot;       PagerSettings-NextPageImageUrl=&quot;uri&quot;       PagerSettings-NextPageText=&quot;string&quot;       PagerSettings-PageButtonCount=&quot;integer&quot;       PagerSettings-Position=&quot;Bottom|Top|TopAndBottom&quot;       PagerSettings-PreviousPageImageUrl=&quot;uri&quot;       PagerSettings-PreviousPageText=&quot;string&quot;       PagerSettings-Visible=&quot;True|False&quot;       PageSize=&quot;integer&quot;       RowHeaderColumn=&quot;string&quot;       runat=&quot;server&quot;       SelectedIndex=&quot;integer&quot;       ShowFooter=&quot;True|False&quot;       ShowHeader=&quot;True|False&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       ToolTip=&quot;string&quot;       UseAccessibleHeader=&quot;True|False&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   >           <AlternatingRowStyle />           <Columns>                   <asp:BoundField                       AccessibleHeaderText=&quot;string&quot;                       ApplyFormatInEditMode=&quot;True|False&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DataField=&quot;string&quot;                       DataFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       HtmlEncode=&quot;True|False&quot;                       InsertVisible=&quot;True|False&quot;                       NullDisplayText=&quot;string&quot;                       ReadOnly=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:BoundField>                   <asp:ButtonField                       AccessibleHeaderText=&quot;string&quot;                       ButtonType=&quot;Button|Image|Link&quot;                       CausesValidation=&quot;True|False&quot;                       CommandName=&quot;string&quot;                       DataTextField=&quot;string&quot;                       DataTextFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       ImageUrl=&quot;uri&quot;                       InsertVisible=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Text=&quot;string&quot;                       ValidationGroup=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:ButtonField>                   <asp:CheckBoxField                       AccessibleHeaderText=&quot;string&quot;                       DataField=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       ReadOnly=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Text=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:CheckBoxField>                   <asp:CommandField                       AccessibleHeaderText=&quot;string&quot;                       ButtonType=&quot;Button|Image|Link&quot;                       CancelImageUrl=&quot;uri&quot;                       CancelText=&quot;string&quot;                       CausesValidation=&quot;True|False&quot;                       DeleteImageUrl=&quot;uri&quot;                       DeleteText=&quot;string&quot;                       EditImageUrl=&quot;uri&quot;                       EditText=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertImageUrl=&quot;uri&quot;                       InsertText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       NewImageUrl=&quot;uri&quot;                       NewText=&quot;string&quot;                       SelectImageUrl=&quot;uri&quot;                       SelectText=&quot;string&quot;                       ShowCancelButton=&quot;True|False&quot;                       ShowDeleteButton=&quot;True|False&quot;                       ShowEditButton=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       ShowInsertButton=&quot;True|False&quot;                       ShowSelectButton=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       UpdateImageUrl=&quot;uri&quot;                       UpdateText=&quot;string&quot;                       ValidationGroup=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:CommandField>                   <asp:DynamicField                       AccessibleHeaderText=&quot;string&quot;                       ApplyFormatInEditMode=&quot;True|False&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DataField=&quot;string&quot;                       DataFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       HtmlEncode=&quot;True|False&quot;                       InsertVisible=&quot;True|False&quot;                       NullDisplayText=&quot;string&quot;                       ShowHeader=&quot;True|False&quot;                       UIHint=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:DynamicField>                   <asp:HyperLinkField                       AccessibleHeaderText=&quot;string&quot;                       DataNavigateUrlFields=&quot;string&quot;                       DataNavigateUrlFormatString=&quot;string&quot;                       DataTextField=&quot;string&quot;                       DataTextFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       NavigateUrl=&quot;uri&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Target=&quot;string|_blank|_parent|_search|_self|_top&quot;                       Text=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:HyperLinkField>                   <asp:ImageField                       AccessibleHeaderText=&quot;string&quot;                       AlternateText=&quot;string&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DataAlternateTextField=&quot;string&quot;                       DataAlternateTextFormatString=&quot;string&quot;                       DataImageUrlField=&quot;string&quot;                       DataImageUrlFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       NullDisplayText=&quot;string&quot;                       NullImageUrl=&quot;uri&quot;                       ReadOnly=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:ImageField>                   <asp:TemplateField                       AccessibleHeaderText=&quot;string&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                               <ControlStyle />                               <FooterStyle />                               <HeaderStyle />                               <ItemStyle />                           <AlternatingItemTemplate>                               <!-- child controls -->                           </AlternatingItemTemplate>                           <EditItemTemplate>                               <!-- child controls -->                           </EditItemTemplate>                           <FooterTemplate>                               <!-- child controls -->                           </FooterTemplate>                           <HeaderTemplate>                               <!-- child controls -->                           </HeaderTemplate>                           <InsertItemTemplate>                               <!-- child controls -->                           </InsertItemTemplate>                           <ItemTemplate>                               <!-- child controls -->                           </ItemTemplate>                   </asp:TemplateField>           </Columns>           <EditRowStyle />           <EmptyDataRowStyle />           <EmptyDataTemplate>               <!-- child controls -->           </EmptyDataTemplate>           <FooterStyle />           <HeaderStyle />           <PagerSettings               FirstPageImageUrl=&quot;uri&quot;               FirstPageText=&quot;string&quot;               LastPageImageUrl=&quot;uri&quot;               LastPageText=&quot;string&quot;               Mode=&quot;NextPrevious|Numeric|NextPreviousFirstLast|                   NumericFirstLast&quot;               NextPageImageUrl=&quot;uri&quot;               NextPageText=&quot;string&quot;               OnPropertyChanged=&quot;PropertyChanged event handler&quot;               PageButtonCount=&quot;integer&quot;               Position=&quot;Bottom|Top|TopAndBottom&quot;               PreviousPageImageUrl=&quot;uri&quot;               PreviousPageText=&quot;string&quot;               Visible=&quot;True|False&quot;           />           <PagerStyle />           <PagerTemplate>               <!-- child controls -->           </PagerTemplate>           <RowStyle />           <SelectedRowStyle />   </asp:GridView>   ```"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191882).  \n  \n The following example demonstrates how use the GridView control to display the values from the Customers table of the AdventureWorksLT sample database in Microsoft SQL Server. The values are retrieved using a <xref:System.Web.UI.WebControls.SqlDataSource> control.  \n  \n [!code-vb[GridViewSimple#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_194_1.aspx)]\n [!code-cs[GridViewSimple#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_194_1.aspx)]  \n  \n The following example demonstrates how to use the GridView control and a <xref:System.Web.UI.WebControls.LinqDataSource> control so that you can edit records.  \n  \n [!code-vb[GridViewEdit#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_194_2.aspx)]\n [!code-cs[GridViewEdit#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_194_2.aspx)]  \n  \n For an example demonstrating how to access values in cells, see <xref:System.Web.UI.WebControls.GridViewRow>."
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("SelectedIndexChanged")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.GridViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.ControlValueProperty("SelectedValue")]

      [System.Web.UI.DataKeyProperty("SelectedPersistedDataKey")]

      [System.Web.UI.SupportsEventValidation]

      public class GridView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IDataKeysControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.ICallbackContainer, System.Web.UI.WebControls.IDataBoundListControl, System.Web.UI.WebControls.IFieldControl, System.Web.UI.WebControls.IPersistedSelector, System.Web.UI.WebControls.IPostBackContainer
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.BaseDataBoundControl
  - System.Web.UI.WebControls.DataBoundControl
  - System.Web.UI.WebControls.CompositeDataBoundControl
  implements:
  - System.Web.UI.ICallbackEventHandler
  - System.Web.UI.IDataKeysControl
  - System.Web.UI.IPostBackEventHandler
  - System.Web.UI.WebControls.ICallbackContainer
  - System.Web.UI.WebControls.IDataBoundListControl
  - System.Web.UI.WebControls.IFieldControl
  - System.Web.UI.WebControls.IPersistedSelector
  - System.Web.UI.WebControls.IPostBackContainer
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.BaseDataBoundControl.ConfirmInitState
  - System.Web.UI.WebControls.BaseDataBoundControl.DataBound
  - System.Web.UI.WebControls.BaseDataBoundControl.DataSource
  - System.Web.UI.WebControls.BaseDataBoundControl.EnsureDataBound
  - System.Web.UI.WebControls.BaseDataBoundControl.Initialized
  - System.Web.UI.WebControls.BaseDataBoundControl.IsBoundUsingDataSourceID
  - System.Web.UI.WebControls.BaseDataBoundControl.IsDataBindingAutomatic
  - System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding
  - System.Web.UI.WebControls.BaseDataBoundControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.CompositeDataBoundControl.Controls
  - System.Web.UI.WebControls.CompositeDataBoundControl.CreateChildControls
  - System.Web.UI.WebControls.CompositeDataBoundControl.InsertMethod
  - System.Web.UI.WebControls.CompositeDataBoundControl.IsUsingModelBinders
  - System.Web.UI.WebControls.DataBoundControl.CallingDataMethods
  - System.Web.UI.WebControls.DataBoundControl.CreatingModelDataSource
  - System.Web.UI.WebControls.DataBoundControl.DataMember
  - System.Web.UI.WebControls.DataBoundControl.DataSourceID
  - System.Web.UI.WebControls.DataBoundControl.DataSourceObject
  - System.Web.UI.WebControls.DataBoundControl.GetData
  - System.Web.UI.WebControls.DataBoundControl.GetDataSource
  - System.Web.UI.WebControls.DataBoundControl.ItemType
  - System.Web.UI.WebControls.DataBoundControl.MarkAsDataBound
  - System.Web.UI.WebControls.DataBoundControl.OnCreatingModelDataSource(System.Web.UI.WebControls.CreatingModelDataSourceEventArgs)
  - System.Web.UI.WebControls.DataBoundControl.OnLoad(System.EventArgs)
  - System.Web.UI.WebControls.DataBoundControl.PerformSelect
  - System.Web.UI.WebControls.DataBoundControl.SelectArguments
  - System.Web.UI.WebControls.DataBoundControl.SelectMethod
  - System.Web.UI.WebControls.DataBoundControl.ValidateDataSource(System.Object)
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: GridView()
  nameWithType: GridView.GridView()
  fullName: System.Web.UI.WebControls.GridView.GridView()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Web.UI.WebControls.GridView>클래스</xref:System.Web.UI.WebControls.GridView> 의 새 인스턴스를 초기화 하려면이 생성자를 사용 합니다. 동적으로 추가 <xref:System.Web.UI.WebControls.GridView>페이지에 컨트롤을 만드는 새 <xref:System.Web.UI.WebControls.GridView>개체 속성을 설정 하 고 다음 <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> <xref:System.Web.UI.WebControls.PlaceHolder>.</xref:System.Web.UI.WebControls.PlaceHolder> 같은 컨테이너 컨트롤의 컬렉션</xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> 에 추가</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView> 하려면"
  example:
  - "The following example demonstrates how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.GridView> control to a page.  \n  \n [!code-cs[GridViewCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_33_1.aspx)]\n [!code-vb[GridViewCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_33_1.aspx)]"
  syntax:
    content: public GridView ();
    parameters: []
  overload: System.Web.UI.WebControls.GridView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.AllowCustomPaging
  id: AllowCustomPaging
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: AllowCustomPaging
  nameWithType: GridView.AllowCustomPaging
  fullName: System.Web.UI.WebControls.GridView.AllowCustomPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "사용자 지정 페이징을 사용 되는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "페이징을 사용 하면의 내용을 표시 하는 <xref:System.Web.UI.WebControls.GridView>청크에서 제어 합니다.</xref:System.Web.UI.WebControls.GridView> 페이지에 있는 항목 수에 의해 결정 됩니다는 <xref:System.Web.UI.WebControls.GridView.PageSize%2A>속성.</xref:System.Web.UI.WebControls.GridView.PageSize%2A> 일반적으로 데이터 원본의 모든 행 할 때마다 읽기는 <xref:System.Web.UI.WebControls.GridView>컨트롤이 다른 페이지로 이동 합니다.</xref:System.Web.UI.WebControls.GridView> 이 하면 데이터 원본에 있는 항목의 총 수를 매우 큰 경우 리소스를 많이 사용할 수 있습니다. 사용자 지정 페이징을 사용 하면 데이터 원본에서 단일 페이지에 필요한 항목만 읽을 수 있습니다.       페이징을 사용 하도록 사용자 지정을 모두 설정 된 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>및, allowcustompaging은 속성을 `true`.</xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 에 대 한 처리기에는 <xref:System.Web.UI.WebControls.GridView.PageIndexChanging>이벤트를 설정의 <xref:System.Web.UI.WebControls.GridView.PageIndex%2A>속성 새 페이지 인덱스 값을 설정는 <xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A>속성을 데이터 원본에 있는 항목의 총 수는 현재 페이지와 호출에 필요한 행만 반환 하도록 데이터 원본을 설정는 <xref:System.Web.UI.WebControls.GridView.DataBind%2A>메서드.</xref:System.Web.UI.WebControls.GridView.DataBind%2A> </xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A> </xref:System.Web.UI.WebControls.GridView.PageIndex%2A> </xref:System.Web.UI.WebControls.GridView.PageIndexChanging> <xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A>속성 페이지의 총 수를 확인 하기 위해 컨트롤을 사용 하면,이 값은 모든 항목을 읽어 자동으로 결정 일반적으로.</xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A>"
  syntax:
    content: public virtual bool AllowCustomPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사용자 지정 페이징을 활성화 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.GridView.AllowCustomPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.AllowPaging
  id: AllowPaging
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: AllowPaging
  nameWithType: GridView.AllowPaging
  fullName: System.Web.UI.WebControls.GridView.AllowPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "페이징 기능을 사용할지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "같은 시간에 데이터 원본의 모든 레코드를 표시 하는 대신는 <xref:System.Web.UI.WebControls.GridView>컨트롤 수 자동으로 레코드 페이지로 나눌.</xref:System.Web.UI.WebControls.GridView> 데이터 원본에서 페이징 기능을 지 원하는 경우는 <xref:System.Web.UI.WebControls.GridView>제어를 이용할 수 있습니다 및 기본 제공 페이징 기능을 제공 합니다.</xref:System.Web.UI.WebControls.GridView> 페이징 기능을 지 원하는 데이터 원본 개체에 사용할 수는 <xref:System.Collections.ICollection?displayProperty=fullName>인터페이스 또는 페이징 기능을 지 원하는 데이터 소스는.</xref:System.Collections.ICollection?displayProperty=fullName>       페이징 기능을 사용 하도록 설정 하려면 AllowPaging 속성을 설정 `true`합니다. 기본적으로는 <xref:System.Web.UI.WebControls.GridView>제어 페이지에 한 번에 10 개의 레코드를 표시 합니다.</xref:System.Web.UI.WebControls.GridView> 설정 하 여 페이지에 표시 되는 레코드의 수를 변경할 수는 <xref:System.Web.UI.WebControls.GridView.PageSize%2A>속성.</xref:System.Web.UI.WebControls.GridView.PageSize%2A> 데이터 원본 콘텐츠를 표시 하는 데 필요한 페이지의 총 수를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.PageCount%2A>속성.</xref:System.Web.UI.WebControls.GridView.PageCount%2A> 현재 표시 된 페이지의 인덱스를 사용 하 여 확인할 수 있습니다는 <xref:System.Web.UI.WebControls.GridView.PageIndex%2A>속성.</xref:System.Web.UI.WebControls.GridView.PageIndex%2A>       페이징이 활성화 된 경우 호출기 행 이라는 추가 행에 자동으로 표시 됩니다는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> 호출기 행에는 다른 페이지로 이동 하는 데 사용할 수 있는 컨트롤이 포함 됩니다. 사용 하 여 호출기 행 (예: 페이저 디스플레이 모드, 페이저 컨트롤의 텍스트 레이블을 한 번에 표시할 페이지 링크의 수)의 설정을 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.GridView.PagerSettings%2A>속성.</xref:System.Web.UI.WebControls.GridView.PagerSettings%2A> 호출기 행을 설정 하 여 위쪽, 아래쪽 또는 위쪽와 컨트롤의 아래쪽에 표시 될 수는 <xref:System.Web.UI.WebControls.PagerSettings.Position%2A>속성.</xref:System.Web.UI.WebControls.PagerSettings.Position%2A> 설정 하 여&4; 개의 기본 제공 호출기 디스플레이 모드 중 하나를 선택할 수도 있습니다는 <xref:System.Web.UI.WebControls.PagerSettings.Mode%2A>속성.</xref:System.Web.UI.WebControls.PagerSettings.Mode%2A> 다음 표에서 기본 제공 디스플레이 모드를 설명합니다.      | 모드 | 설명 |   |----------|-----------------|   | `PagerButton.NextPrevious`| 페이지 매김 구성 된 컨트롤의 이전 및 다음 단추 집합이. |   | `PagerButton.NextPreviousFirstLast`| A의 페이지 매김 구성 된 컨트롤의 이전, 다음으로, 첫 번째 및 마지막 단추 설정 합니다. |   | `PagerButton.Numeric`| 페이지 매김 구성 된 컨트롤의 집합이 액세스 페이지에 링크 단추를 직접 번호가 매겨집니다. 이 기본 모드. |   | `PagerButton.NumericFirstLast`| 번호 매기기 및 첫 번째 및 마지막 링크 단추로 구성 된 페이지 매김 컨트롤 집합입니다. |       호출기 행 (배경 색, 글꼴 색, 위치 등)의 모양을 제어는 <xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>속성.</xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>      > [!NOTE] >는 <xref:System.Web.UI.WebControls.GridView>데이터 소스에 한 페이지만 레코드의 경우 컨트롤 호출기 행을 자동으로 숨깁니다.</xref:System.Web.UI.WebControls.GridView>       <xref:System.Web.UI.WebControls.GridView>제어 또한 호출기 행에 대 한 사용자 지정 템플릿을 정의할 수 있습니다.</xref:System.Web.UI.WebControls.GridView> 사용자 지정 호출기 행 템플릿을 만드는 방법에 대 한 자세한 내용은 <xref:System.Web.UI.WebControls.GridView.PagerTemplate%2A>.</xref:System.Web.UI.WebControls.GridView.PagerTemplate%2A> 을 참조 하십시오.       <xref:System.Web.UI.WebControls.GridView>컨트롤은 페이징이 발생 하는 경우 사용자 지정 동작을 수행 하는 데 사용할 수 있는 여러 가지 이벤트를 제공 합니다.</xref:System.Web.UI.WebControls.GridView> 다음 표에서 사용할 수 있는 이벤트를 나열합니다.      | 이벤트 | 설명 |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.GridView.PageIndexChanged>| 페이저 단추 중 하나를 클릭 하면 후 발생는 <xref:System.Web.UI.WebControls.GridView>페이징 작업을 처리 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.PageIndexChanged> 이 이벤트는 사용자가 컨트롤에서 다른 페이지로 이동한 후 작업을 수행 해야 할 때 주로 사용 됩니다. |   | <xref:System.Web.UI.WebControls.GridView.PageIndexChanging>| 페이저 단추 중 하나를 클릭할 때 발생을 하기 전에 <xref:System.Web.UI.WebControls.GridView>페이징 작업을 처리 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.PageIndexChanging> 이 이벤트는 자주 페이징 작업을 취소 하는 데 사용 됩니다. |"
  example:
  - "The following example demonstrates how to use the AllowPaging property to declaratively enable the paging feature in the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_198_1.aspx)]\n [!code-cs[GridViewAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_198_1.aspx)]"
  syntax:
    content: public virtual bool AllowPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>페이징 기능을 사용 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.GridView.AllowPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.AllowSorting
  id: AllowSorting
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: AllowSorting
  nameWithType: GridView.AllowSorting
  fullName: System.Web.UI.WebControls.GridView.AllowSorting
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "정렬 기능을 사용할지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "정렬을 지 원하는 데이터 소스 제어에 바인딩되면는 <xref:System.Web.UI.WebControls.GridView>컨트롤의 <xref:System.Web.UI.WebControls.GridView>컨트롤 데이터 소스 컨트롤의 기능을 사용할 수 있으며 자동 정렬 기능을 제공 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView> 경우는 <xref:System.Web.UI.WebControls.GridView>컨트롤을 설정 하 여 데이터 원본에 바인딩되는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>속성을 프로그래밍 방식으로 기능을 제공 해야는 정렬를 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.Sorting>이벤트.</xref:System.Web.UI.WebControls.GridView.Sorting> </xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 서로 다른 데이터 원본에는 정렬 기능을 사용 하도록 설정 하는 데 필요한 요구 합니다. 요구 사항을 확인 하려면 특정 데이터 원본에 대 한 설명서를 참조 하십시오.       정렬 기능을 사용 하려면 AllowSorting 속성을 설정 `true`합니다. 정렬을 사용 하면, 각 열 필드에 대 한 머리글 텍스트는 <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A>속성 집합 링크 단추로 표시 됩니다.</xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A>      > [!NOTE] >는 <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A>속성이 자동으로 생성 된 열 필드는 자동으로 채워집니다.</xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> 통해 직접 열을 정의 하는 경우는 <xref:System.Web.UI.WebControls.GridView.Columns%2A>설정 해야 컬렉션의 <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A>각 열에 대 한 속성 그렇지 않은 경우 열에에서 표시 되지 것입니다 링크 단추 헤더.</xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> </xref:System.Web.UI.WebControls.GridView.Columns%2A>       항목에 사용 하면 열에 대 한 링크 단추 클릭는 <xref:System.Web.UI.WebControls.GridView>정렬 식에 따라 정렬할 제어 합니다.</xref:System.Web.UI.WebControls.GridView> 일반적으로 정렬 식은 단순히 인데 열에 표시 되는 필드의 이름이 고 <xref:System.Web.UI.WebControls.GridView>컨트롤을 해당 열을 기준으로 정렬 합니다.</xref:System.Web.UI.WebControls.GridView> 여러 필드를 정렬할 쉼표로 구분 된 필드 이름 목록이 포함 된 정렬 식을 사용 합니다. 정렬 식을 확인할 수 있습니다 하는 <xref:System.Web.UI.WebControls.GridView>를 사용 하 여 적용 하는 컨트롤의 <xref:System.Web.UI.WebControls.GridView.SortExpression%2A>속성.</xref:System.Web.UI.WebControls.GridView.SortExpression%2A> </xref:System.Web.UI.WebControls.GridView> 반복 해 서 열의 링크 단추를 클릭 하면 정렬 방향을 오름차순 및 내림차순 사이 전환 합니다. 현재 정렬 방향을 확인 하려면는 <xref:System.Web.UI.WebControls.GridView.SortDirection%2A>속성.</xref:System.Web.UI.WebControls.GridView.SortDirection%2A>       <xref:System.Web.UI.WebControls.GridView>컨트롤 정렬 이벤트가 발생할 때 사용자 지정 동작을 수행 하는 데 사용할 수 있는 몇 가지 이벤트를 제공 합니다.</xref:System.Web.UI.WebControls.GridView> 다음 표에서 사용할 수 있는 이벤트를 나열합니다.      | 이벤트 | 설명 |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.GridView.Sorted>| 열 정렬에 대 한 하이퍼링크를 클릭 하면 후 발생는 <xref:System.Web.UI.WebControls.GridView>컨트롤이 정렬 작업을 처리 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.Sorted> 이 이벤트는 사용자가 열을 정렬에 대 한 하이퍼링크를 클릭 한 후 작업을 수행 하는 데 주로 사용 됩니다. |   | <xref:System.Web.UI.WebControls.GridView.Sorting>| 열 정렬에 대 한 하이퍼링크를 클릭할 때 발생을 하기 전에 <xref:System.Web.UI.WebControls.GridView>컨트롤이 정렬 작업을 처리 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.Sorting> 정렬 작업을 취소 하거나 사용자 지정 정렬 루틴을 수행 하려면이 이벤트는 자주 사용 됩니다. |"
  example:
  - "The following example demonstrates how to use the AllowSorting property to enable sorting in a <xref:System.Web.UI.WebControls.GridView> control when automatically generated columns are used.  \n  \n [!code-cs[GridViewAllowSorting#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1089_1.aspx)]\n [!code-vb[GridViewAllowSorting#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1089_1.aspx)]  \n  \n The following example demonstrates how to use the AllowSorting property to enable sorting in a <xref:System.Web.UI.WebControls.GridView> control when a <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection is defined. An image is also programmatically added to the header of the column being sorted to indicate the sort direction. You must provide your own images for this sample to work.  \n  \n [!code-cs[GridViewAllowSortingColumns#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1089_2.aspx)]\n [!code-vb[GridViewAllowSortingColumns#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1089_2.aspx)]"
  syntax:
    content: public virtual bool AllowSorting { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>정렬 기능을 사용 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.GridView.AllowSorting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.AlternatingRowStyle
  id: AlternatingRowStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: AlternatingRowStyle
  nameWithType: GridView.AlternatingRowStyle
  fullName: System.Web.UI.WebControls.GridView.AlternatingRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 의 데이터 행에 교대로 반복 되는 모양을 설정할 수 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "AlternatingRowStyle 속성을 사용 하 여 데이터 행에 교대로 반복 되는 모양을 제어 하는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> 데이터 행을 교대로 표시할이 속성이 설정 된 경우는 <xref:System.Web.UI.WebControls.GridView.RowStyle%2A>설정과 AlternatingRowStyle 설정.</xref:System.Web.UI.WebControls.GridView.RowStyle%2A> 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle>개체를 반환 합니다.</xref:System.Web.UI.WebControls.TableItemStyle> 선언적으로 다음 방법 중 하나를 사용 하는 속성을 설정할 수 있습니다:-의 여는 태그에 특성을 배치는 <xref:System.Web.UI.WebControls.GridView>폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle>개체 (예를 들어 `AlternatingRowStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.GridView>      -중첩 된 `<AlternatingRowStyle>` 여는 태그와 닫는 태그 사이 요소는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>       양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `AlternatingRowStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다."
  example:
  - "The following example demonstrates how to use the AlternatingRowStyle property to declaratively define the style for alternating data rows in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewRowStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1004_1.aspx)]\n [!code-cs[GridViewRowStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1004_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle AlternatingRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 대체에 데이터 행의 스타일을 나타내는 한 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.GridView.AlternatingRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.AutoGenerateColumns
  id: AutoGenerateColumns
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: AutoGenerateColumns
  nameWithType: GridView.AutoGenerateColumns
  fullName: System.Web.UI.WebControls.GridView.AutoGenerateColumns
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 원본에 있는 각 필드에 대 한 바인딩된 필드를 자동으로 만들지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "AutoGenerateColumns 속성이로 설정 된 경우 `true`, <xref:System.Web.UI.WebControls.AutoGeneratedField>개체 데이터 소스에 있는 각 필드에 자동으로 만들어집니다.</xref:System.Web.UI.WebControls.AutoGeneratedField> 각 필드에 열으로 표시 됩니다는 <xref:System.Web.UI.WebControls.GridView>데이터 원본에 표시 된 순서 대로 제어 합니다.</xref:System.Web.UI.WebControls.GridView> 이 옵션은 데이터 소스에 모든 필드를 표시 하는 편리한 방법을 제공합니다 그러나 자동으로 생성 된 열 필드의 표시 방법이 나 동작의 제어를 제한 있습니다.       대신는 <xref:System.Web.UI.WebControls.GridView>열 필드를 자동으로 생성 하는 컨트롤, AutoGenerateColumns 속성을 설정 하 여 열 필드를 수동으로 정의할 수 있습니다 `false` 사용자 지정을 만든 다음 `Columns` 컬렉션.</xref:System.Web.UI.WebControls.GridView> 바인딩된 열 필드 외에도 단추 열 필드, 확인란 열 필드, 명령 필드, 하이퍼링크 열 필드는 이미지 필드 또는 사용자 정의 된 사용자 지정 템플릿을 기준으로 열 필드를 표시할 수 있습니다.       자동으로 생성 된 열 필드와 명시적으로 선언 된 열 필드를 결합할 수 있습니다. 모두 사용 하는 명시적으로 선언 된 열 필드 뒤에 자동으로 생성 된 열 필드를 먼저 렌더링 됩니다. 바인딩된 열을 자동으로 생성 된 필드에 추가 되지 않습니다는 <xref:System.Web.UI.WebControls.GridView.Columns%2A>컬렉션.</xref:System.Web.UI.WebControls.GridView.Columns%2A> 자세한 내용은 <xref:System.Web.UI.WebControls.GridView.Columns%2A>.</xref:System.Web.UI.WebControls.GridView.Columns%2A> 을 참조 하십시오.       이 속성을 설정 하는 경우 `true` 설정 하 고는 <xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A>모델 유형과 속성 <xref:System.Web.DynamicData.DynamicField>컨트롤 생성 됩니다.</xref:System.Web.DynamicData.DynamicField> </xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A> 설정 하지 않은 경우는 <xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A>속성 <xref:System.Web.UI.WebControls.BoundField>컨트롤 생성 됩니다.</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A> 원하지 않는 경우 <xref:System.Web.DynamicData.DynamicField>컨트롤, 다음과 같은 옵션이 있습니다: 설정-는 <xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A>속성을 `null` 에 `Page_Load` 이벤트 처리기.</xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A> </xref:System.Web.DynamicData.DynamicField> 이 경우 <xref:System.Web.UI.WebControls.BoundField>컨트롤 생성 됩니다.</xref:System.Web.UI.WebControls.BoundField>      --만들고 직접 할당 하 여 필드를 자동으로 생성 되는 사용자 지정 코드를 작성 하는 중 <xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A>클래스 및 컨트롤에 해당 형식의 인스턴스를 할당 합니다.</xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A>      -으로 AutoGenerateColumns 설정 `false`합니다. 이 경우 필드가 생성 되 고 <xref:System.Web.UI.WebControls.BoundField>나 <xref:System.Web.UI.WebControls.ImageField>.</xref:System.Web.UI.WebControls.ImageField> </xref:System.Web.UI.WebControls.BoundField> 등의 컨트롤을 사용 하 여 필드를 수동으로 지정 해야      -설정 하지는 <xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A>속성.</xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A> 이 경우 <xref:System.Web.UI.WebControls.BoundField>컨트롤 생성 됩니다.</xref:System.Web.UI.WebControls.BoundField>"
  example:
  - "The following example demonstrates how to use the AutoGenerateColumns property to automatically create bound field columns in a <xref:System.Web.UI.WebControls.GridView> control for each field in the data source.  \n  \n [!code-vb[GridViewSimple#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1153_1.aspx)]\n [!code-cs[GridViewSimple#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1153_1.aspx)]"
  syntax:
    content: public virtual bool AutoGenerateColumns { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>데이터 소스에 각 필드에 대 한 바인딩된 필드를 자동으로 만들려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.GridView.AutoGenerateColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton
  id: AutoGenerateDeleteButton
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: AutoGenerateDeleteButton
  nameWithType: GridView.AutoGenerateDeleteButton
  fullName: System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져오거나 여부는 <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;> </xref> 각 데이터 행에 대 한 삭제 단추가 필드 열에 자동으로 추가 됩니다 한 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "원하는 데이터 소스 제어에 바인딩되면는 <xref:System.Web.UI.WebControls.GridView>컨트롤의 <xref:System.Web.UI.WebControls.GridView>컨트롤 데이터 소스 컨트롤의 기능을 사용할 수 있으며 자동 삭제 기능을 제공 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 데이터를 삭제 하는 데이터 소스 제어에 대 한 데이터를 삭제 하도록 구성 되어야 합니다. 레코드를 삭제 하는 데이터 소스 제어를 구성 하려면 특정 데이터 소스 제어에 대 한 설명서를 참조 하십시오.       AutoGenerateDeleteButton 속성이로 설정 된 경우 `true`, 열 (나타내는 <xref:System.Web.UI.WebControls.CommandField>개체) 각 데이터에 대 한 삭제 단추가 행이 자동으로 추가 된 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.CommandField> 영구적으로 행에 대 한 삭제 단추를 클릭 하면 데이터 원본의 해당 레코드를 제거 합니다.      > [!NOTE] >으로 설정 해야는 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>키 필드 또는 실행 되도록 자동 삭제 기능에 대 한 데이터 소스의 필드를 식별 하는 속성.</xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>       <xref:System.Web.UI.WebControls.GridView>컨트롤은 행이 삭제 되는 경우 사용자 지정 동작을 수행 하는 데 사용할 수 있는 여러 가지 이벤트를 제공 합니다.</xref:System.Web.UI.WebControls.GridView> 다음 표에서 사용할 수 있는 이벤트를 나열합니다.      | 이벤트 | 설명 |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.GridView.RowDeleted>| 행의 삭제 단추를 클릭 하면 후 발생는 <xref:System.Web.UI.WebControls.GridView>데이터 소스에서 레코드를 삭제 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowDeleted> 이 이벤트는 종종 삭제 작업의 결과 확인 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.GridView.RowDeleting>| 행의 삭제 단추를 클릭할 때 발생을 하기 전에 <xref:System.Web.UI.WebControls.GridView>데이터 소스에서 레코드를 삭제 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowDeleting> 이 이벤트는 종종 삭제 작업을 취소 하는 데 사용 됩니다. |"
  example:
  - "The following example demonstrates how to use the AutoGenerateDeleteButton property to enable the automatic deleting feature of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1343_1.aspx)]\n [!code-cs[GridViewEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1343_1.aspx)]"
  syntax:
    content: public virtual bool AutoGenerateDeleteButton { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>자동으로 추가 하는 <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;> </xref> 각 데이터 행의 삭제 단추가 있는 그렇지 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.AutoGenerateEditButton
  id: AutoGenerateEditButton
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: AutoGenerateEditButton
  nameWithType: GridView.AutoGenerateEditButton
  fullName: System.Web.UI.WebControls.GridView.AutoGenerateEditButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져오거나 여부는 <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;> </xref> 각 데이터 행에 대 한 편집 단추가 필드 열에 자동으로 추가 됩니다 한 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "원하는 데이터 소스 컨트롤에 바인딩된 경우는 <xref:System.Web.UI.WebControls.GridView>컨트롤의 <xref:System.Web.UI.WebControls.GridView>컨트롤 데이터 소스 컨트롤의 기능을 사용할 수 있으며 자동 업데이트 기능을 제공 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 데이터를 업데이트 하는 데이터 소스 제어에 대 한 데이터를 업데이트 하도록 구성 되어야 합니다. 레코드를 업데이트 하는 데이터 소스 제어를 구성 하려면 특정 데이터 소스 제어에 대 한 설명서를 참조 하십시오.       AutoGenerateEditButton 속성이로 설정 된 경우 `true`, 열 (나타내는 <xref:System.Web.UI.WebControls.CommandField>개체) 각 데이터에 대 한 편집 단추가 행이 자동으로 추가 된 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.CommandField> 행에 대 한 편집 단추를 클릭 하면 해당 행이 편집 모드로 전환 합니다. 읽기 전용으로 설정 하지 않은 행의 각 열 필드와 같은 적절 한 입력된 컨트롤을 표시 행 편집 모드일 때는 <xref:System.Web.UI.WebControls.TextBox>필드의 데이터 형식에 대 한 제어 합니다.</xref:System.Web.UI.WebControls.TextBox> 이 사용자를 필드의 값을 수정할 수 있습니다.       를 클릭 하면 편집 단추 업데이트 단추와 취소 단추로 바뀝니다. 업데이트 단추를 클릭 하면 모든 값 변경과 데이터 소스에 행을 업데이트 하 고 모드를 표시 하는 행을 반환 합니다. 취소 단추를 클릭 하는 값 변경 사항이 고 모드를 표시 하는 행을 반환 합니다.      > [!NOTE] > 프로그래밍 방식으로 행 편집 모드에 설정 하 여 넣을 수 있습니다는 <xref:System.Web.UI.WebControls.GridView.EditIndex%2A>행의 인덱스를 사용 하 여 속성.</xref:System.Web.UI.WebControls.GridView.EditIndex%2A> 편집 모드를 프로그래밍 방식으로 종료 하려면 설정는 <xref:System.Web.UI.WebControls.GridView.EditIndex%2A>속성을-1.</xref:System.Web.UI.WebControls.GridView.EditIndex%2A>       기본 제공 업데이트 기능을 사용할 경우 설정 해야 합니다는 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>필드의 쉼표로 구분 된 목록 사용 하 여 속성 이름을 기본 키 필드 또는 데이터 원본의 필드를 식별 하 여, 그렇지 않은 경우 기본 제공 업데이트 기능 올바른 레코드를 업데이트 할 수 있습니다.</xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> 자동으로 사용 하 여 필드 열을 생성 하는 경우 (설정 하 여는 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>속성을 `true`), <xref:System.Web.UI.WebControls.GridView>제어 자동으로 사용 하면 하나 이상의에 지정 된 필드에 해당 하는 자동으로 생성 되는 필드 열은 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>속성은 읽기 전용입니다.</xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>       사용 하 여 편집 모드에 있는 행의 모양을 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A>속성.</xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A> 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다.       <xref:System.Web.UI.WebControls.GridView>컨트롤은 행이 업데이트 될 때 사용자 지정 동작을 수행 하는 데 사용할 수 있는 여러 가지 이벤트를 제공 합니다.</xref:System.Web.UI.WebControls.GridView> 다음 표에서 사용할 수 있는 이벤트를 나열합니다.      | 이벤트 | 설명 |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>| 행의 취소 단추를 클릭할 때 발생을 하기 전에 <xref:System.Web.UI.WebControls.GridView>편집 모드가 컨트롤을 취소 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> 이 이벤트는 자주 취소 작업을 중지 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.GridView.RowEditing>| 행의 편집 단추를 클릭할 때 발생을 하기 전에 <xref:System.Web.UI.WebControls.GridView>컨트롤이 편집 모드로 전환 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowEditing> 이 이벤트는 종종 편집 작업을 취소 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.GridView.RowUpdated>| 행의 업데이트 단추를 클릭 하면 후 발생는 <xref:System.Web.UI.WebControls.GridView>컨트롤이 행을 업데이트 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowUpdated> 이 이벤트는 자주 업데이트 작업의 결과 확인 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.GridView.RowUpdating>| 행의 업데이트 단추를 클릭할 때 발생을 하기 전에 <xref:System.Web.UI.WebControls.GridView>컨트롤이 행을 업데이트 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowUpdating> 이 이벤트는 자주 업데이트 작업을 취소 하는 데 사용 됩니다. |"
  example:
  - "The following example demonstrates how to use the AutoGenerateEditButton property to enable the automatic editing feature of the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1016_1.aspx)]\n [!code-cs[GridViewEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1016_1.aspx)]"
  syntax:
    content: public virtual bool AutoGenerateEditButton { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>자동으로 추가 하는 <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;> </xref> 각 데이터 행에 대 한 편집 단추가 필드 열 그렇지 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.GridView.AutoGenerateEditButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.AutoGenerateSelectButton
  id: AutoGenerateSelectButton
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: AutoGenerateSelectButton
  nameWithType: GridView.AutoGenerateSelectButton
  fullName: System.Web.UI.WebControls.GridView.AutoGenerateSelectButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져오거나 여부는 <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;> </xref> 된 각 데이터 행에 대 한 선택 단추 필드 열에 자동으로 추가 됩니다 한 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "AutoGenerateSelectButton 속성이로 설정 된 경우 `true`, 열 (나타내는 <xref:System.Web.UI.WebControls.CommandField>개체) 된 각 데이터에 대 한 선택 단추에 행이 자동으로 추가 된 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.CommandField> 설정 선택 단추 컨트롤에서 해당 행을 선택 하는 행에 대 한를 클릭 하 여 <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>속성을 행의 인덱스입니다.</xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> 검색 하는 <xref:System.Web.UI.WebControls.GridViewRow>사용 하 여 선택된 된 행을 나타내는 개체는 <xref:System.Web.UI.WebControls.GridView.SelectedRow%2A>속성.</xref:System.Web.UI.WebControls.GridView.SelectedRow%2A> </xref:System.Web.UI.WebControls.GridViewRow> 사용 하 여 선택된 된 레코드에 대 한 기본 키 값을 가져올 수도 있습니다는 <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>속성.</xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>속성에 지정 된 키 필드의 값이 포함 된 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>속성.</xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> </xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>      > [!NOTE] > 프로그래밍 방식으로 설정 하 여 행을 선택할 수는 <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>속성.</xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> 행의 선택을 취소 하려면는 <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>속성을-1.</xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>       사용 하 여 선택된 된 행의 모양을 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A>속성.</xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A> 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다.       <xref:System.Web.UI.WebControls.GridView>컨트롤은 행을 선택 하는 경우 사용자 지정 동작을 수행 하는 데 사용할 수 있는 여러 가지 이벤트를 제공 합니다.</xref:System.Web.UI.WebControls.GridView> 다음 표에서 사용할 수 있는 이벤트를 나열합니다.      | 이벤트 | 설명 |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>| 행의 선택 단추를 클릭 하면 후 발생는 <xref:System.Web.UI.WebControls.GridView>select 작업을 처리 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> 이 이벤트는 컨트롤에서 행을 선택한 후 작업을 수행 하는 대개. |   | <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>| 행의 선택 단추를 클릭할 때 발생을 하기 전에 <xref:System.Web.UI.WebControls.GridView>select 작업을 처리 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging> 이 이벤트는 종종 선택 작업을 취소 하는 데 사용 됩니다. |"
  example:
  - "The following example demonstrates how to use the AutoGenerateSelectButton property to enable the automatic selection feature of the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewSelect#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1205_1.aspx)]\n [!code-vb[GridViewSelect#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1205_1.aspx)]"
  syntax:
    content: public virtual bool AutoGenerateSelectButton { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>자동으로 추가 하는 <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;> </xref> 된 각 데이터 행에 대 한 선택 단추 필드 열, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.GridView.AutoGenerateSelectButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.BackImageUrl
  id: BackImageUrl
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: BackImageUrl
  nameWithType: GridView.BackImageUrl
  fullName: System.Web.UI.WebControls.GridView.BackImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "URL의 배경에 표시할 이미지를 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "BackImageUrl 속성을 사용 하 여의 배경에 표시할 이미지에 URL을 지정 하는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 지정된 된 이미지 보다 작은 경우는 <xref:System.Web.UI.WebControls.GridView>백그라운드에서 채울 컨트롤, 이미지를 바둑판식으로 표시 합니다.</xref:System.Web.UI.WebControls.GridView> 이미지 컨트롤 보다 큰 경우 이미지가 잘립니다."
  example:
  - "The following example demonstrates how to use the BackImageUrl property to display a custom image in the background of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewBackImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1003_1.aspx)]\n [!code-vb[GridViewBackImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1003_1.aspx)]"
  syntax:
    content: public virtual string BackImageUrl { get; set; }
    return:
      type: System.String
      description: "배경에 표시할 이미지의 URL은 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다. 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.GridView.BackImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.BottomPagerRow
  id: BottomPagerRow
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: BottomPagerRow
  nameWithType: GridView.BottomPagerRow
  fullName: System.Web.UI.WebControls.GridView.BottomPagerRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref> 의 아래쪽 호출기 행을 나타내는 개체는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "페이징이 활성화 된 경우 (설정 하 여는 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>속성을 `true`), 호출기 행 이라는 추가 행에 자동으로 표시 되는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 호출기 행 사용자가 다른 페이지로 이동 하도록 허용 하 고 위쪽, 아래쪽 또는 위쪽와 컨트롤의 아래쪽에 표시 될 수 있는 컨트롤을 포함 합니다. 프로그래밍 방식으로 액세스할 BottomPagerRow 속성을 사용 하 여는 <xref:System.Web.UI.WebControls.GridViewRow>의 아래쪽 호출기 행을 나타내는 개체는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridViewRow>      > [!NOTE] > The BottomPagerRow 속성은 한 후에 사용할 수는 <xref:System.Web.UI.WebControls.GridView>컨트롤의 아래쪽 호출기 행을 만듭니다는 <xref:System.Web.UI.WebControls.GridView.RowCreated>이벤트.</xref:System.Web.UI.WebControls.GridView.RowCreated> </xref:System.Web.UI.WebControls.GridView>       예를 들어 사용자 지정 콘텐츠를 추가할 때 맨 아래 호출기 행을 프로그래밍 방식으로 조작 해야 할 때이 속성은 일반적으로 사용 됩니다. BottomPagerRow 속성을 수정 후 수행 해야 합니다는 <xref:System.Web.UI.WebControls.GridView>컨트롤이 렌더링 되 고, 그렇지 않으면 만들어졌으면는 <xref:System.Web.UI.WebControls.GridView>컨트롤에 모든 변경 사항을 덮어씁니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView>"
  example:
  - "The following example demonstrates how to use the BottomPagerRow property to access the bottom pager row in a <xref:System.Web.UI.WebControls.GridView> control. The BottomPagerRow property is used to retrieve a <xref:System.Web.UI.WebControls.DropDownList> control from the pager row.  \n  \n [!code-vb[GridViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_54_1.aspx)]\n [!code-cs[GridViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_54_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridViewRow BottomPagerRow { get; }
    return:
      type: System.Web.UI.WebControls.GridViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref> 컨트롤의 아래쪽 호출기 행을 나타내는입니다."
  overload: System.Web.UI.WebControls.GridView.BottomPagerRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.Caption
  id: Caption
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: Caption
  nameWithType: GridView.Caption
  fullName: System.Web.UI.WebControls.GridView.Caption
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "캡션 HTML 요소에 렌더링할 텍스트를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다. 이 속성은 컨트롤의 보조 기술 장치가 사용자에 게 더욱 쉽게 이용할 수 있도록 제공 됩니다."
  remarks: "Caption 속성을 사용 하 여 HTML 캡션 요소에 렌더링할 텍스트를 지정 하는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> 지정 하는 텍스트에는 보조 기술 장치가 컨트롤을 보다 쉽게 액세스할 수 있도록 하는 데 사용할 수 있는 테이블에 대 한 설명을 제공 합니다. 사용 하 여 HTML caption 요소를 렌더링 하는 위치를 지정할 수도 있습니다는 <xref:System.Web.UI.WebControls.GridView.CaptionAlign%2A>속성.</xref:System.Web.UI.WebControls.GridView.CaptionAlign%2A>       이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute>및 [전역화 및 지역화](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to use the Caption property to specify the caption for a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewCaption#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_177_1.aspx)]\n [!code-vb[GridViewCaption#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_177_1.aspx)]"
  syntax:
    content: public virtual string Caption { get; set; }
    return:
      type: System.String
      description: "캡션 HTML 요소에 렌더링할 텍스트를 나타내는 문자열을 한 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.GridView.Caption*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CaptionAlign
  id: CaptionAlign
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CaptionAlign
  nameWithType: GridView.CaptionAlign
  fullName: System.Web.UI.WebControls.GridView.CaptionAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가로 또는 세로 위치에 HTML 캡션 요소의 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다. 이 속성은 컨트롤의 보조 기술 장치가 사용자에 게 더욱 쉽게 이용할 수 있도록 제공 됩니다."
  remarks: "CaptionAlign 속성을 사용 하 여에 HTML 캡션 요소의 가로 또는 세로 위치를 지정 하는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> 이 속성은 컨트롤의 보조 기술 장치가 사용자에 게 더욱 쉽게 이용할 수 있도록 제공 됩니다.       이 속성의 하나를 사용 하는 <xref:System.Web.UI.WebControls.TableCaptionAlign>열거형 값입니다.</xref:System.Web.UI.WebControls.TableCaptionAlign> 다음 표에서 가능한 값을 나열합니다.      | 값 | 설명 |   |-----------|-----------------|   | `TableCaptionAlign.Bottom`| Caption 요소는 테이블의 아래쪽에 맞게 정렬 됩니다. |   | `TableCaptionAlign.Left`| Caption 요소는 테이블의 왼쪽에 맞춥니다. |   | `TableCaptionAlign.NotSet`| Caption 요소 맞춤 설정 되지 않았습니다. |   | `TableCaptionAlign.Right`| Caption 요소는 테이블의 오른쪽에 맞춥니다. |   | `TableCaptionAlign.Top`| Caption 요소는 테이블의 위쪽에 맞춰집니다. |      > [!NOTE] >로이 속성이 설정 된 경우 `TableCaptionAlign.NotSet`, 브라우저의 기본값이 사용 됩니다.       HTML caption 요소에 대 한 텍스트를 지정 하려면 사용 된 <xref:System.Web.UI.WebControls.GridView.Caption%2A>속성.</xref:System.Web.UI.WebControls.GridView.Caption%2A>"
  example:
  - "The following example demonstrates how to use the CaptionAlign property to specify that the caption element for a <xref:System.Web.UI.WebControls.GridView> control is aligned with the top of the control.  \n  \n [!code-cs[GridViewCaption#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_600_1.aspx)]\n [!code-vb[GridViewCaption#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_600_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }
    return:
      type: System.Web.UI.WebControls.TableCaptionAlign
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.TableCaptionAlign&quot;> </xref> 값입니다. 기본값은 <xref uid=&quot;langword_csharp_TableCaptionAlign.NotSet&quot; name=&quot;TableCaptionAlign.NotSet&quot; href=&quot;&quot;> </xref>, 브라우저의 기본 설정을 사용 하 여 합니다."
  overload: System.Web.UI.WebControls.GridView.CaptionAlign*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정한 값 중 하나이 고 <xref href=&quot;System.Web.UI.WebControls.TableCaptionAlign&quot;> </xref> 열거형 값입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CellPadding
  id: CellPadding
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CellPadding
  nameWithType: GridView.CellPadding
  fullName: System.Web.UI.WebControls.GridView.CellPadding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "셀의 내용을 셀 테두리 사이의 간격을 가져오거나 설정 합니다."
  remarks: "CellPadding 속성을 사용 하 여 셀의 내용과 셀 테두리 사이의 간격을 제어할 수 있습니다. 셀의 네 면에 지정 된 안쪽 여백이 추가 됩니다.       모든 셀의 같은 열에는 <xref:System.Web.UI.WebControls.GridView>컨트롤 너비를 같게 만들기가.</xref:System.Web.UI.WebControls.GridView> 안쪽 여백이 가장 넓은 셀에 적용 되 있고 열에 있는 다른 모든 셀이 셀 너비입니다. 마찬가지로, 동일한 행에 있는 모든 셀 높이 같게 만들기가 있어야 합니다. 안쪽 여백이 행에서 가장 높은 셀에 적용 됩니다 있고 행의 다른 모든 셀이 셀 높이입니다. 개별 셀의 크기를 지정할 수 없습니다."
  example:
  - "The following example demonstrates how to use the CellPadding property to declaratively set the amount of space between the contents of a cell and the cell's border.  \n  \n [!code-cs[GridViewCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_836_1.aspx)]\n [!code-vb[GridViewCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_836_1.aspx)]"
  syntax:
    content: public virtual int CellPadding { get; set; }
    return:
      type: System.Int32
      description: "셀의 내용을 셀 테두리 사이의 픽셀에서 공간의 양입니다. 기본값은-1로,이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.GridView.CellPadding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CellSpacing
  id: CellSpacing
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CellSpacing
  nameWithType: GridView.CellSpacing
  fullName: System.Web.UI.WebControls.GridView.CellSpacing
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "셀 사이의 간격을 가져오거나 설정 합니다."
  remarks: "CellSpacing 속성을 사용 하 여에 인접 한 셀 사이의 간격을 제어할 수는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> 세로 및 가로로이 간격이 적용 됩니다. 셀 간격은 일정의 전체 컨트롤에 대 한 합니다. 행 이나 열 사이의 개별 셀 간격을 지정할 수 없습니다.      > [!NOTE] > 0 보다 큰 값으로이 속성을 설정 하 고 다음을 설정 하는 경우는 <xref:System.Web.UI.WebControls.GridView.GridLines%2A>속성 셀 테두리를 표시 하는 값으로 인접 한 셀 테두리 사이의 간격이 생깁니다.</xref:System.Web.UI.WebControls.GridView.GridLines%2A> 이 경우에는 <xref:System.Web.UI.WebControls.Table.CellSpacing%2A>속성 간격의 크기를 제어 합니다.</xref:System.Web.UI.WebControls.Table.CellSpacing%2A>"
  example:
  - "The following example demonstrates how to use the CellSpacing property to declaratively set the amount of space between the cells of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_898_1.aspx)]\n [!code-vb[GridViewCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_898_1.aspx)]"
  syntax:
    content: public virtual int CellSpacing { get; set; }
    return:
      type: System.Int32
      description: "셀 사이 픽셀 단위로 공간의 양입니다. 기본값은 0입니다"
  overload: System.Web.UI.WebControls.GridView.CellSpacing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.ClientIDRowSuffix
  id: ClientIDRowSuffix
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: ClientIDRowSuffix
  nameWithType: GridView.ClientIDRowSuffix
  fullName: System.Web.UI.WebControls.GridView.ClientIDRowSuffix
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "해당 값에 추가 됩니다 데이터 필드의 이름을 가져오거나 설정 합니다.는 <xref:System.Web.UI.Control.ClientID*>속성 값을 데이터 바인딩된 컨트롤의 각 인스턴스를 고유 하 게 식별 합니다.</xref:System.Web.UI.Control.ClientID*>"
  remarks: "방지 하기 위해 컨트롤의 여러 인스턴스가의 여러 행에서 렌더링 될 때 이름 충돌을 <xref:System.Web.UI.WebControls.GridView>컨트롤, ASP.NET <xref:System.Web.UI.Control.ClientID%2A>각 인스턴스에 대 한 값.</xref:System.Web.UI.Control.ClientID%2A> </xref:System.Web.UI.WebControls.GridView> 지정 하는 방법을 <xref:System.Web.UI.Control.ClientID%2A>값을 설정 하 여 생성 됩니다는 <xref:System.Web.UI.Control.ClientIDMode%2A>속성.</xref:System.Web.UI.Control.ClientIDMode%2A> </xref:System.Web.UI.Control.ClientID%2A> 설정 하는 경우는 <xref:System.Web.UI.Control.ClientIDMode%2A>속성을 <xref:System.Web.UI.ClientIDMode>, asp는 <xref:System.Web.UI.Control.ClientID%2A>하나 이상의 ClientIDRowSuffix에 지정 된 데이터 필드에서 파생 된 접미사를 추가 하 여.</xref:System.Web.UI.Control.ClientID%2A> </xref:System.Web.UI.ClientIDMode> </xref:System.Web.UI.Control.ClientIDMode%2A> ClientIDRowSuffix 설정 되지 않은 경우 접미사가 일련 번호입니다."
  syntax:
    content: public virtual string[] ClientIDRowSuffix { get; set; }
    return:
      type: System.String[]
      description: "해당 값은 ASP.NET을 생성할 때 데이터 바인딩된 컨트롤의 각 인스턴스를 고유 하 게 식별 하 사용 되는 데이터 필드의 이름이 고 <xref:System.Web.UI.Control.ClientID*>값.</xref:System.Web.UI.Control.ClientID*>"
  overload: System.Web.UI.WebControls.GridView.ClientIDRowSuffix*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys
  id: ClientIDRowSuffixDataKeys
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: ClientIDRowSuffixDataKeys
  nameWithType: GridView.ClientIDRowSuffixDataKeys
  fullName: System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ASP.NET을 생성할 때 데이터 바인딩된 컨트롤의 각 인스턴스를 고유 하 게 식별 하는 데 사용 되는 데이터 값을 가져옵니다는 <xref:System.Web.UI.Control.ClientID*>값.</xref:System.Web.UI.Control.ClientID*>"
  syntax:
    content: public System.Web.UI.WebControls.DataKeyArray ClientIDRowSuffixDataKeys { get; }
    return:
      type: System.Web.UI.WebControls.DataKeyArray
      description: "ASP.NET을 생성할 때 데이터 바인딩된 컨트롤의 각 인스턴스를 고유 하 게 식별 하는 데 사용 되는 데이터 값은 <xref:System.Web.UI.Control.ClientID*>값.</xref:System.Web.UI.Control.ClientID*>"
  overload: System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.Columns
  id: Columns
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: Columns
  nameWithType: GridView.Columns
  fullName: System.Web.UI.WebControls.GridView.Columns
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컬렉션을 가져옵니다 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 열 필드를 나타내는 개체는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "열 필드의 열을 나타냅니다는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> 열 속성 (컬렉션)에 렌더링 되는 모든 열을 명시적으로 선언 된 필드를 저장을 사용 하 여 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> 또한 프로그래밍 방식으로 열 필드의 컬렉션을 관리 하 Columns 컬렉션을 사용할 수 있습니다.      > [!NOTE] > 열 필드를 자동으로 생성 된 열 필드와 함께에서 사용할 수 있습니다를 명시적으로 선언 합니다. 모두 사용 하는 명시적으로 선언 된 열 필드 뒤에 자동으로 생성 된 열 필드를 먼저 렌더링 됩니다. 열 필드는 Columns 컬렉션에 자동으로 생성 됩니다.       에 열 필드가 표시 되는 <xref:System.Web.UI.WebControls.GridView>Columns 컬렉션에 열 필드가 나타나는 순서.</xref:System.Web.UI.WebControls.GridView> 다음 표에서 다른 열에서 파생 되는 필드 클래스는 <xref:System.Web.UI.WebControls.DataControlField>클래스 및 열 컬렉션에서 사용할 수 있습니다.</xref:System.Web.UI.WebControls.DataControlField>      | 열 필드 형식 | 설명 |   |-----------------------|-----------------|   | <xref:System.Web.UI.WebControls.BoundField>| 데이터 원본에서 필드의 값을 표시 합니다.</xref:System.Web.UI.WebControls.BoundField> 이 <xref:System.Web.UI.WebControls.GridView>컨트롤의 기본 열 형식입니다. |   | <xref:System.Web.UI.WebControls.ButtonField>| 명령 단추에 있는 각 항목에 대 한 표시는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.GridView> 이렇게 하면 추가 또는 제거 단추 등의 사용자 지정 단추 컨트롤의 열을 만들 수 있습니다. |   | <xref:System.Web.UI.WebControls.CheckBoxField>| 각 항목에 대 한 확인란을 표시는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.CheckBoxField> 이 열 필드 형식은 부울 값을 사용 하는 필드를 표시 하는 데 주로 사용 됩니다. |   | <xref:System.Web.UI.WebControls.CommandField>| 미리 정의 된 select를 수행 하는 명령 단추 표시, 편집 또는 삭제 작업. |   | <xref:System.Web.UI.WebControls.HyperLinkField>| 하이퍼링크는 데이터 원본에서 필드의 값을 표시 합니다.</xref:System.Web.UI.WebControls.HyperLinkField> </xref:System.Web.UI.WebControls.CommandField> 이 열 필드 형식에 하이퍼링크의 URL로 두 번째 필드를 바인딩할 수 있습니다. |   | <xref:System.Web.UI.WebControls.ImageField>| <xref:System.Web.UI.WebControls.GridView>컨트롤의 각 항목에 대 한 이미지를 표시 합니다. |   | <xref:System.Web.UI.WebControls.TemplateField>| 각 항목에 대 한 사용자 정의 콘텐츠가 표시 됩니다는 <xref:System.Web.UI.WebControls.GridView>지정한 템플릿에 따라 컨트롤.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.ImageField> 이 열 필드 형식을 사용 하면 사용자 지정 열 필드를 만들 수 있습니다. |       열 필드 Columns 컬렉션에 프로그래밍 방식으로 추가할 수 있지만 더 쉽습니다에서 선언적으로 열 필드를 나열 하는 <xref:System.Web.UI.WebControls.GridView>제어 하 고 사용 하 여는 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A>각 열 필드를 표시 하거나 숨기려면 각 열 필드의 속성입니다.</xref:System.Web.UI.WebControls.DataControlField.Visible%2A> </xref:System.Web.UI.WebControls.GridView>       경우는 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A>열 필드의 속성이로 설정 되어 `false`, 열에 표시 되지 않습니다는 <xref:System.Web.UI.WebControls.GridView>제어 및 열에 대 한 데이터 해도 왕복 클라이언트에.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataControlField.Visible%2A> 대문자로 표시 되지 않는 열에 대 한 데이터를 원하는 경우 추가 필드 이름을 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>속성.</xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>"
  example:
  - "The following example demonstrates how to populate the Columns collection declaratively.  \n  \n [!code-vb[GridViewColumnFields#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_420_1.aspx)]\n [!code-cs[GridViewColumnFields#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_420_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataControlFieldCollection Columns { get; }
    return:
      type: System.Web.UI.WebControls.DataControlFieldCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> 의 모든 열 필드를 포함 하는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.GridView.Columns*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.ColumnsGenerator
  id: ColumnsGenerator
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: ColumnsGenerator
  nameWithType: GridView.ColumnsGenerator
  fullName: System.Web.UI.WebControls.GridView.ColumnsGenerator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 열을 자동으로 생성 하는 컨트롤을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> ASP.NET Dynamic Data 기능을 사용 하는 컨트롤입니다."
  remarks: "페이지에서 ASP.NET Dynamic Data 기능을 사용 하려면 추가 해야 합니다는 <xref:System.Web.DynamicData.DynamicDataManager>컨트롤을 페이지.</xref:System.Web.DynamicData.DynamicDataManager> 와 같은 페이지에서 데이터 바인딩된 컨트롤에 대 한 ASP.NET Dynamic Data 기능을 통해이 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> 개별을 사용 하도록 설정 하려면 <xref:System.Web.UI.WebControls.GridView>Dynamic Data 기능을 사용 하도록 컨트롤을 사용 하 여 연결 해야 합니다는 <xref:System.Web.DynamicData.DynamicDataManager>호출 하 여 컨트롤의 <xref:System.Web.DynamicData.DynamicDataManager.RegisterControl%2A?displayProperty=fullName>동안 메서드는 `Page_Init` 이벤트.</xref:System.Web.DynamicData.DynamicDataManager.RegisterControl%2A?displayProperty=fullName> </xref:System.Web.DynamicData.DynamicDataManager> </xref:System.Web.UI.WebControls.GridView> 이 메서드가 ColumnsGenerator 속성을 자동으로 설정 된 <xref:System.Web.DynamicData.DynamicDataManager>개체입니다.</xref:System.Web.DynamicData.DynamicDataManager>"
  syntax:
    content: public System.Web.UI.IAutoFieldGenerator ColumnsGenerator { get; set; }
    return:
      type: System.Web.UI.IAutoFieldGenerator
      description: "에 대 한 열을 자동으로 생성 하는 컨트롤을 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> ASP.NET Dynamic Data 기능을 사용 하는 컨트롤입니다."
  overload: System.Web.UI.WebControls.GridView.ColumnsGenerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn(System.Web.UI.WebControls.AutoGeneratedFieldProperties)
  id: CreateAutoGeneratedColumn(System.Web.UI.WebControls.AutoGeneratedFieldProperties)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CreateAutoGeneratedColumn(AutoGeneratedFieldProperties)
  nameWithType: GridView.CreateAutoGeneratedColumn(AutoGeneratedFieldProperties)
  fullName: System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn(AutoGeneratedFieldProperties)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "자동으로 생성 된 열 필드를 만듭니다."
  remarks: "메서드는 자동으로 생성 된 열을 만드는 데 CreateAutoGeneratedColumn 때 필드의 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>속성이 `true`.</xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> 자동으로 생성 된 열 필드의 속성을 통해 지정 되며는 <xref:System.Web.UI.WebControls.AutoGeneratedFieldProperties>에 포함 된 개체는 `fieldProperties` 매개 변수.</xref:System.Web.UI.WebControls.AutoGeneratedFieldProperties>      > [!NOTE] > 확장 하려면이 메서드는 주로 컨트롤 개발자가는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedColumn (System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties);
    parameters:
    - id: fieldProperties
      type: System.Web.UI.WebControls.AutoGeneratedFieldProperties
      description: "<xref href=&quot;System.Web.UI.WebControls.AutoGeneratedFieldProperties&quot;> </xref> 만들려는 자동으로 생성 된 열 필드의 속성을 나타내는입니다."
    return:
      type: System.Web.UI.WebControls.AutoGeneratedField
      description: "<xref href=&quot;System.Web.UI.WebControls.AutoGeneratedField&quot;> </xref> 로 지정 된 열을 자동으로 생성 된 필드를 나타내는 <code> fieldProperties </code> 매개 변수입니다."
  overload: System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  id: CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CreateChildControls(IEnumerable,Boolean)
  nameWithType: GridView.CreateChildControls(IEnumerable,Boolean)
  fullName: System.Web.UI.WebControls.GridView.CreateChildControls(IEnumerable,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "렌더링 하는 데 컨트롤 계층 구조를 만듭니다는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 지정 된 데이터 원본을 사용 하 여 제어 합니다."
  remarks: "CreateChildControls 메서드는의 컨트롤 계층 구조를 만드는 데는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 확장 하려면이 메서드는 주로 컨트롤 개발자가는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);
    parameters:
    - id: dataSource
      type: System.Collections.IEnumerable
      description: "&lt;xref:System.Collections.IEnumerable?displayProperty=fullName&gt; 에 대 한 데이터 원본을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
    - id: dataBinding
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>자식 컨트롤에 데이터에 바인딩되어 있음을 나타내려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Int32
      description: "생성 된 행의 수입니다."
  overload: System.Web.UI.WebControls.GridView.CreateChildControls*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>dataSource</code>null을 반환 <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>합니다.       -또는- <code>dataSource</code> 를 구현 하지 않습니다는 <xref:System.Collections.ICollection> 인터페이스를 반환할 수 없습니다는 <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount*>합니다.       -또는- <xref:System.Web.UI.WebControls.GridView.AllowPaging*> 은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 및 <code>dataSource</code> 를 구현 하지 않습니다는 <xref:System.Collections.ICollection> 인터페이스 및 데이터 소스 페이징을 수행할 수 없습니다.       -또는- <code>dataSource</code> 를 구현 하지 않습니다는 <xref:System.Collections.ICollection> 인터페이스 및 <code>dataBinding</code> 로 설정 된 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CreateChildTable
  id: CreateChildTable
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CreateChildTable()
  nameWithType: GridView.CreateChildTable()
  fullName: System.Web.UI.WebControls.GridView.CreateChildTable()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 자식 테이블을 만듭니다."
  remarks: "CreateChildTable 메서드는에서 사용 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.GridView>컨트롤을 자식 테이블을 만듭니다.</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.Table CreateChildTable ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Table
      description: "항상 새 반환 <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> 자식 테이블을 나타내는입니다."
  overload: System.Web.UI.WebControls.GridView.CreateChildTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CreateColumns(System.Web.UI.WebControls.PagedDataSource,System.Boolean)
  id: CreateColumns(System.Web.UI.WebControls.PagedDataSource,System.Boolean)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CreateColumns(PagedDataSource,Boolean)
  nameWithType: GridView.CreateColumns(PagedDataSource,Boolean)
  fullName: System.Web.UI.WebControls.GridView.CreateColumns(PagedDataSource,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤 계층 구조를 작성 하는 데 사용 되는 열 필드의 집합을 만듭니다."
  remarks: "경우는 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>속성이로 설정 되어 `true`, 데이터 원본에 있는 각 필드에 대 한 바인딩된 열 필드가 자동으로 만들어집니다.</xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> 바인딩된 각 열 필드의 행으로 표시 됩니다는 <xref:System.Web.UI.WebControls.GridView>데이터 원본에 표시 된 순서 대로 제어 합니다.</xref:System.Web.UI.WebControls.GridView> CreateColumns 메서드는 자동으로 생성 된 열 필드를 만들려면 사용 됩니다.      > [!NOTE] > 확장 하려면이 메서드는 주로 컨트롤 개발자가는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual System.Collections.ICollection CreateColumns (System.Web.UI.WebControls.PagedDataSource dataSource, bool useDataSource);
    parameters:
    - id: dataSource
      type: System.Web.UI.WebControls.PagedDataSource
      description: "A <xref href=&quot;System.Web.UI.WebControls.PagedDataSource&quot;> </xref> 데이터 소스를 나타내는입니다."
    - id: useDataSource
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>로 지정 된 데이터 원본을 사용 하려면는 `dataSource` 매개 변수, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Collections.ICollection
      description: "A &lt;xref:System.Collections.ICollection?displayProperty=fullName&gt; 컨트롤 계층 구조를 작성 하는 데 사용 하는 필드가 들어 있는입니다."
  overload: System.Web.UI.WebControls.GridView.CreateColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CreateControlStyle
  id: CreateControlStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CreateControlStyle()
  nameWithType: GridView.CreateControlStyle()
  fullName: System.Web.UI.WebControls.GridView.CreateControlStyle()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤에 대 한 기본 스타일을 만듭니다."
  remarks: "CreateControlStyle 메서드를 컨트롤에 대 한 기본 스타일을 만드는 사용 됩니다.      > [!NOTE] > 확장 하려면이 메서드는 주로 컨트롤 개발자가는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected override System.Web.UI.WebControls.Style CreateControlStyle ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> 컨트롤에 대 한 스타일을 나타내는입니다."
  overload: System.Web.UI.WebControls.GridView.CreateControlStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments
  id: CreateDataSourceSelectArguments
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CreateDataSourceSelectArguments()
  nameWithType: GridView.CreateDataSourceSelectArguments()
  fullName: System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "만듭니다는 <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> 처리를 위해 데이터 원본에 전달 되는 인수를 포함 하는 개체입니다."
  remarks: "CreateDataSourceSelectArguments 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.GridView>만들 컨트롤을는 <xref:System.Web.UI.DataSourceSelectArguments>데이터 원본에 전달 된 인수를 포함 하는 개체입니다.</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.WebControls.GridView> 이 구현에서는 <xref:System.Web.UI.DataSourceSelectArguments>페이징 작업에 대 한 인수를 포함 하는 개체입니다.</xref:System.Web.UI.DataSourceSelectArguments>"
  syntax:
    content: protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();
    parameters: []
    return:
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> 데이터 원본에 전달 되는 인수를 포함 하 합니다."
  overload: System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.CreateRow(System.Int32,System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  id: CreateRow(System.Int32,System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: CreateRow(Int32,Int32,DataControlRowType,DataControlRowState)
  nameWithType: GridView.CreateRow(Int32,Int32,DataControlRowType,DataControlRowState)
  fullName: System.Web.UI.WebControls.GridView.CreateRow(Int32,Int32,DataControlRowType,DataControlRowState)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 행을 만듭니다는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "CreateRow 메서드의 행을 만드는 데 사용 됩니다는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 확장 하려면이 메서드는 주로 컨트롤 개발자가는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> 데이터 바인딩된 <xref:System.Web.UI.WebControls.GridView>컨트롤은 자동으로 대상 데이터를 표시 하는 데 필요한 행을 생성 합니다.</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.GridViewRow CreateRow (int rowIndex, int dataSourceIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "만들 행의 인덱스입니다."
    - id: dataSourceIndex
      type: System.Int32
      description: "데이터의 인덱스 행 바인딩할 항목을 원본입니다."
    - id: rowType
      type: System.Web.UI.WebControls.DataControlRowType
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.DataControlRowType&quot;> </xref> 값입니다."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> 값입니다."
    return:
      type: System.Web.UI.WebControls.GridViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref> 지정된 된 매개 변수를 사용 하 여 만들어집니다."
  overload: System.Web.UI.WebControls.GridView.CreateRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.DataBind
  id: DataBind
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: DataBind()
  nameWithType: GridView.DataBind()
  fullName: System.Web.UI.WebControls.GridView.DataBind()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 소스를 바인딩합니다는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다. 이 메서드는 상속 될 수 없습니다."
  remarks: "DataBind 메서드를 사용 하 여 효율성을 데이터 원본에서 데이터를 바인딩하는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> 이 메서드는 컨트롤의 현재 서식 파일의 모든 데이터 바인딩 식을 확인합니다.       DataBind 메서드가 자동으로 호출 하는 경우는 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>속성은 <xref:System.Web.UI.WebControls.GridView>제어 유효한 데이터 소스 제어를 가리킵니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>       수동으로 DataBind 메서드를 호출 하는 대신 모델 바인딩을 사용 DataBind 컨트롤과 <xref:System.Web.UI.WebControls.DataBoundControl.SelectMethod%2A> <xref:System.Web.UI.WebControls.GridView>.</xref:System.Web.UI.WebControls.GridView> 에 대 한 데이터를 반환 하는 메서드의 이름으로 속성</xref:System.Web.UI.WebControls.DataBoundControl.SelectMethod%2A> 을 설정 하 여 <xref:System.Web.UI.WebControls.GridView>자동으로 채워집니다 select 메서드에서 반환 된 데이터.</xref:System.Web.UI.WebControls.GridView> 모델 바인딩 데이터로 작업 하기 위한 코드를 단순화할 수 있습니다. 자세한 내용은 참조 [모델 바인딩 및 Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)합니다."
  example:
  - "The following example demonstrates how to use the DataBind method to bind a data source to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewDataBind#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_182_1.aspx)]\n [!code-vb[GridViewDataBind#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_182_1.aspx)]"
  syntax:
    content: public override sealed void DataBind ();
    parameters: []
  overload: System.Web.UI.WebControls.GridView.DataBind*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.DataKeyNames
  id: DataKeyNames
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: DataKeyNames
  nameWithType: GridView.DataKeyNames
  fullName: System.Web.UI.WebControls.GridView.DataKeyNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 표시 된 항목에 대 한 기본 키 필드의 이름을 포함 하는 배열을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "DataKeyNames 속성을 사용 하 여 하나 이상의 데이터 원본의 기본 키를 나타내는 필드를 지정할 수 있습니다. 이 속성을 각 행을 고유 하 게 식별 하는 데 필요한 필드에만 설정 해야 예를 들어 정수 값에 고유 하 게 하는 경우에 ID 열의 각 행을 식별 합니다. 자동 업데이트에 대 한 순서 대로 DataKeyNames 속성을 설정 하 고의 기능을 삭제 해야 합니다는 <xref:System.Web.UI.WebControls.GridView>컨트롤에서 실행 되도록 합니다.</xref:System.Web.UI.WebControls.GridView> 이러한 키 필드의 값을 업데이트 하거나 삭제할 행을 지정 하기 위해 데이터 소스 제어에 전달 됩니다.       검색 해야 하는 경우 데이터를 업데이트할 때 키 값 또는를 사용 하 여 행을 삭제 하는 `Keys` 의 속성 중 하나 <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs>또는 <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs>클래스가 있습니다.</xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> </xref:System.Web.UI.WebControls.GridViewUpdateEventArgs> 예를 들어 `e.Keys[0]` 에서 첫 번째 데이터 키의 값을 보유 한 <xref:System.Web.UI.WebControls.GridView.RowUpdating>또는 <xref:System.Web.UI.WebControls.GridView.RowDeleting>이벤트 처리기.</xref:System.Web.UI.WebControls.GridView.RowDeleting> </xref:System.Web.UI.WebControls.GridView.RowUpdating>       행을 선택 하는 경우 데이터 키 값을 검색, 사용 하려는 경우는 <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>속성.</xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>       DataKeyNames 속성을 설정 하는 경우는 <xref:System.Web.UI.WebControls.GridView>채웁니다 자동으로 해당 <xref:System.Web.UI.WebControls.GridView.DataKeys%2A>각 행의 기본 키에 액세스 하는 편리한 방법을 제공 하는 지정 된 필드 또는 필드의 값을 사용 하 여 컬렉션.</xref:System.Web.UI.WebControls.GridView.DataKeys%2A> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] >는 <xref:System.Web.UI.WebControls.GridView>컨트롤은 컨트롤 상태에 이러한 키 필드 값을 저장 합니다.</xref:System.Web.UI.WebControls.GridView> 이러한 값이 중요 한 정보가 들어 있으면이 가장 좋습니다 설정 하 여 상태 보기 암호화를 사용 하 여 <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>속성을 `ViewStateEncryptionMode.Always`.</xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>       사용 하는 경우 자동으로 생성 된 필드 열 (설정 하 여는 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>속성을 `true`), <xref:System.Web.UI.WebControls.GridView>컨트롤을 사용 하면 열 하나 이상의 DataKeyNames 속성에 지정 된 필드에 해당 하는 읽기 전용으로 확인 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>       경우는 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A>열 필드의 속성이로 설정 되어 `false`, 열에 표시 되지 않습니다는 <xref:System.Web.UI.WebControls.GridView>제어 및 열에 대 한 데이터 해도 왕복 클라이언트에.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataControlField.Visible%2A> 클라이언트에 사용할 수 있도록 표시 되지 않는 열에 대 한 데이터를 원하는 경우 필드 이름을 DataKeyNames 속성을 추가 합니다."
  example:
  - "The following example demonstrates how to use the DataKeyNames property to specify the key field of the data source. In the example, the `DataKeyNames` attribute of the `GridView` element in markup specifies two key fields by using a comma to separate the names. To run this example, create a Web site that has the following:  \n  \n-   A connection to the AdventureWorksLT sample database and a connection string that is named `AdventureWorksLTConnectionString`. For information about how to set up the AdventureWorksLT sample database, see [How to: Set Up an AdventureWorksLT Sample Database for ASP.NET Development](~/add/includes/ajax-current-ext-md.md).  \n  \n-   A LINQ-to-SQL data context class that is named `AdventureWorksLTDataClassesDataContext`. The data context must have a class for the SalesOrderDetails table. For information about how to create LINQ-to-SQL classes, see [LINQ to SQL](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[GridViewEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1002_1.aspx)]\n [!code-cs[GridViewEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1002_1.aspx)]"
  syntax:
    content: public virtual string[] DataKeyNames { get; set; }
    return:
      type: System.String[]
      description: "기본 키의 이름을 포함 하는 배열에 표시 된 항목에 대 한 필드는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.GridView.DataKeyNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.DataKeys
  id: DataKeys
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: DataKeys
  nameWithType: GridView.DataKeys
  fullName: System.Web.UI.WebControls.GridView.DataKeys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컬렉션을 가져옵니다 <xref href=&quot;System.Web.UI.WebControls.DataKey&quot;> </xref> 데이터를 나타내는 개체 키의 각 행의 값을 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "경우는 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>속성이 설정 되어는 <xref:System.Web.UI.WebControls.GridView>컨트롤 자동으로 만듭니다는 <xref:System.Web.UI.WebControls.DataKey>컨트롤의 각 행에 대 한 개체입니다.</xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> <xref:System.Web.UI.WebControls.DataKey>필드나에 지정 된 필드의 값을 포함 하는 개체는 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>속성.</xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> </xref:System.Web.UI.WebControls.DataKey> <xref:System.Web.UI.WebControls.DataKey>개체는 컨트롤의 DataKeys 컬렉션에 추가 됩니다.</xref:System.Web.UI.WebControls.DataKey> DataKeys 속성을 사용 하 여 검색 하는 <xref:System.Web.UI.WebControls.DataKey>의 특정 데이터 행에 대 한 개체는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataKey>      > [!NOTE] > 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>검색할 속성의 <xref:System.Web.UI.WebControls.DataKey>현재 선택 된 행에 대 한 개체입니다.</xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>속성을 현재 선택 된 행에 대 한 데이터 키 값을 직접 검색.</xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>"
  example:
  - "The following example demonstrates how to use the DataKeys property to determine the data key value of the selected row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewDataKeys#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_962_1.aspx)]\n [!code-vb[GridViewDataKeys#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_962_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataKeyArray DataKeys { get; }
    return:
      type: System.Web.UI.WebControls.DataKeyArray
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataKeyArray&quot;> </xref> 의 각 행의 데이터 키를 포함 하는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.GridView.DataKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.DeleteMethod
  id: DeleteMethod
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: DeleteMethod
  nameWithType: GridView.DeleteMethod
  fullName: System.Web.UI.WebControls.GridView.DeleteMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터를 삭제 하기 위해를 호출할 메서드의 이름을 가져오거나 설정 합니다."
  remarks: "데이터 바인딩 방법으로 사용할 모델 바인딩을 사용 하면이 속성을 설정 합니다.       Web Forms 모델 바인딩 사용에 자습서 시리즈를 참조 하십시오. [모델 바인딩 및 Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)합니다."
  syntax:
    content: public virtual string DeleteMethod { get; set; }
    return:
      type: System.String
      description: "메서드의 이름입니다."
  overload: System.Web.UI.WebControls.GridView.DeleteMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.DeleteRow(System.Int32)
  id: DeleteRow(System.Int32)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: DeleteRow(Int32)
  nameWithType: GridView.DeleteRow(Int32)
  fullName: System.Web.UI.WebControls.GridView.DeleteRow(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 원본에서 지정한 인덱스에 있는 레코드를 삭제합니다."
  remarks: "DeleteRow 메서드를 사용 하 여 프로그래밍 방식으로 데이터 소스에서 지정 된 인덱스에 있는 레코드를 삭제 합니다. 외부에서 레코드를 삭제 해야 하는 경우에 일반적으로이 메서드는는 <xref:System.Web.UI.WebControls.GridView>제어 페이지 내의 다른 컨트롤 처럼.</xref:System.Web.UI.WebControls.GridView> 이 메서드를 호출 발생은 <xref:System.Web.UI.WebControls.GridView.RowDeleted>및 <xref:System.Web.UI.WebControls.GridView.RowDeleting>이벤트.</xref:System.Web.UI.WebControls.GridView.RowDeleting> </xref:System.Web.UI.WebControls.GridView.RowDeleted>"
  example:
  - "The following example demonstrates how to use the DeleteRow method to programmatically delete a record in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewDeleteRow#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_184_1.aspx)]\n [!code-vb[GridViewDeleteRow#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_184_1.aspx)]"
  syntax:
    content: public virtual void DeleteRow (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "삭제할 행의 인덱스입니다."
  overload: System.Web.UI.WebControls.GridView.DeleteRow*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 데이터 소스 제어에 바인딩되어 있지 않은 합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "데이터 소스 컨트롤의 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 컨트롤을 삭제 작업을 지원 하지 않습니다에 바인딩되거나 데이터 원본에 대해 정의 된 delete 명령이 없습니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.EditIndex
  id: EditIndex
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: EditIndex
  nameWithType: GridView.EditIndex
  fullName: System.Web.UI.WebControls.GridView.EditIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "편집할 행의 인덱스를 가져오거나 설정 합니다."
  remarks: "행 인덱스는&0;부터 시작 (첫 번째 행이 행&0; 임).       이 속성은 일반적으로 특정 이벤트에 대 한 처리기를 다음 시나리오 에서만에서 사용:-원하는 <xref:System.Web.UI.WebControls.GridView>컨트롤을 처음으로 페이지에 표시 되는 특정 행에 대 한 모드에서 열립니다.</xref:System.Web.UI.WebControls.GridView> 이 위해 EditIndex 속성에 대 한 처리기에서 설정할 수 있습니다는 <xref:System.Web.UI.Control.Load>의 이벤트는 <xref:System.Web.UI.Page>클래스 또는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.Page> </xref:System.Web.UI.Control.Load>      -확인 하려면 해당 행을 업데이트 한 후 행 편집 되었습니다. 이 위해 행 인덱스에 있는 EditIndex 속성에서 검색할 수 있습니다는 <xref:System.Web.UI.WebControls.GridView.RowUpdated>이벤트 처리기.</xref:System.Web.UI.WebControls.GridView.RowUpdated>      -바인딩하는 <xref:System.Web.UI.WebControls.GridView>컨트롤을 설정 하 여 데이터 소스는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>속성 프로그래밍 방식으로.</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> </xref:System.Web.UI.WebControls.GridView> EditIndex 속성을 설정 해야이 경우에 <xref:System.Web.UI.WebControls.GridView.RowEditing>및 <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>이벤트 처리기.</xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> </xref:System.Web.UI.WebControls.GridView.RowEditing>       포스트백 후 또는 발생 한 이벤트에 대 한 처리기에서 EditIndex 속성을 설정 하면 보다 이후는 <xref:System.Web.UI.Control.Load>이벤트는 <xref:System.Web.UI.WebControls.GridView>컨트롤 지정된 된 행에 대 한 편집 모드로 전환 하지 수도 있습니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.Control.Load> 다른 이벤트 처리기에서이 속성의 값을 읽고 인덱스 편집 중인 행을 반영 하도록 보장 되지 않습니다.       가 사용자를 한 행을 확인 하려면 클릭는 **편집** 단추 또는 하이퍼링크를 하기 전에 <xref:System.Web.UI.WebControls.GridView>컨트롤이 편집 모드로 전환, 행 인덱스를 검색할 수 있습니다는 <xref:System.Web.UI.WebControls.GridViewEditEventArgs.NewEditIndex%2A>의 속성은 <xref:System.Web.UI.WebControls.GridViewEditEventArgs>개체는 <xref:System.Web.UI.WebControls.GridView.RowEditing>이벤트 처리기.</xref:System.Web.UI.WebControls.GridView.RowEditing> </xref:System.Web.UI.WebControls.GridViewEditEventArgs> </xref:System.Web.UI.WebControls.GridViewEditEventArgs.NewEditIndex%2A> </xref:System.Web.UI.WebControls.GridView>       방지 하기 위해는 <xref:System.Web.UI.WebControls.GridView>사용자가 클릭 한 후 편집 모드를 입력할 필요가 제어는 **편집** 단추 또는 하이퍼링크를 집합은 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>속성의는 <xref:System.Web.UI.WebControls.GridViewEditEventArgs>개체를 `true` 에 <xref:System.Web.UI.WebControls.GridView.RowEditing>이벤트 처리기.</xref:System.Web.UI.WebControls.GridView.RowEditing> </xref:System.Web.UI.WebControls.GridViewEditEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Web.UI.WebControls.GridView>"
  example:
  - "The following example demonstrates how to use the EditIndex property to determine which row was updated after it was edited in a <xref:System.Web.UI.WebControls.GridView> control. A message is displayed to indicate that the update was successful.  \n  \n [!code-cs[GridViewRows#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1013_1.aspx)]\n [!code-vb[GridViewRows#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1013_1.aspx)]"
  syntax:
    content: public virtual int EditIndex { get; set; }
    return:
      type: System.Int32
      description: "편집할 행의&0;부터 시작 하는 인덱스입니다. 기본값은-1 행은 편집 하 고 있음을 나타냅니다."
  overload: System.Web.UI.WebControls.GridView.EditIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정된 된 인덱스-1 보다 작은 경우"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.EditRowStyle
  id: EditRowStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: EditRowStyle
  nameWithType: GridView.EditRowStyle
  fullName: System.Web.UI.WebControls.GridView.EditRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 에서 편집을 위해 선택한 행의 표시 모양을 설정할 수 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "EditRowStyle 속성을 사용 하 여에 편집 되는 행의 모양을 제어 하는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle>개체를 반환 합니다.</xref:System.Web.UI.WebControls.TableItemStyle> 선언적으로 다음 방법 중 하나를 사용 하는 속성을 설정할 수 있습니다:-의 여는 태그에 특성을 배치는 <xref:System.Web.UI.WebControls.GridView>폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle>개체 (예를 들어 `EditRowStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.GridView>      -중첩 된 `<EditRowStyle>` 여는 태그와 닫는 태그 사이 요소는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>       양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `EditRowStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다."
  example:
  - "The following example demonstrates how to use the EditRowStyle property to define a custom style for the row being edited in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewEditRowStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_980_1.aspx)]\n [!code-vb[GridViewEditRowStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_980_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 에 편집 되는 행의 스타일을 나타내는 한 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.GridView.EditRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.EmptyDataRowStyle
  id: EmptyDataRowStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: EmptyDataRowStyle
  nameWithType: GridView.EmptyDataRowStyle
  fullName: System.Web.UI.WebControls.GridView.EmptyDataRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조를 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 때 렌더링 되는 빈 데이터 행의 표시 모양을 설정할 수 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 컨트롤이 모든 레코드를 포함 하지 않는 데이터 원본에 바인딩되어 있습니다."
  remarks: "EmptyDataRowStyle 속성을 사용 하 여에 null 행의 모양을 제어 하는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> 컨트롤에 바인딩되는 데이터 원본에 레코드가 없는 경우 null 행 표시 됩니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle>개체를 반환 합니다.</xref:System.Web.UI.WebControls.TableItemStyle> 선언적으로 다음 방법 중 하나를 사용 하는 속성을 설정할 수 있습니다:-의 여는 태그에 특성을 배치는 <xref:System.Web.UI.WebControls.GridView>폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle>개체 (예를 들어 `EmptyDataRowStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.GridView>      -중첩 된 `<EmptyDataRowStyle>` 여는 태그와 닫는 태그 사이 요소는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>       양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `EmptyDataRowStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다."
  example:
  - "The following example demonstrates how to set the EmptyDataRowStyle property declaratively to specify a light blue background and a red font for the null row.  \n  \n [!code-cs[GridViewNullRowTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1110_1.aspx)]\n [!code-vb[GridViewNullRowTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1110_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> null 행 표시 되는 모양을 설정할 수 있습니다."
  overload: System.Web.UI.WebControls.GridView.EmptyDataRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.EmptyDataTemplate
  id: EmptyDataTemplate
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: EmptyDataTemplate
  nameWithType: GridView.EmptyDataTemplate
  fullName: System.Web.UI.WebControls.GridView.EmptyDataTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "때 렌더링 되는 빈 데이터 행에 대 한 사용자 지정 콘텐츠를 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 컨트롤이 모든 레코드를 포함 하지 않는 데이터 원본에 바인딩되어 있습니다."
  remarks: "빈 데이터 행에 표시 됩니다는 <xref:System.Web.UI.WebControls.GridView>제어 컨트롤에 바인딩되는 데이터 원본 모든 레코드를 포함 하지 않습니다.</xref:System.Web.UI.WebControls.GridView> Emptydatatemplate이 속성을 사용 하 여 빈 데이터 행에 대 한 고유의 사용자 지정 사용자 인터페이스 (UI)를 정의할 수 있습니다.       빈 데이터 행에 대 한 사용자 지정 서식 파일을 지정 하려면 먼저 `<EmptyDataTemplate>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> 그런 다음 열기 및 닫기 사이의 서식 파일의 내용을 나열 수 `<EmptyDataTemplate>` 태그입니다. 빈 데이터 행의 스타일을 제어 하기 위해 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A>속성.</xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A> 설정 하 여 빈 데이터 행에 대 한 기본 제공 UI를 사용할 수는 또는 <xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A>이 속성 대신.</xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A>       빈 데이터 서식 파일에서 선언 하는 컨트롤을 프로그래밍 방식으로 액세스 하는 방법에 대 한 정보를 참조 하십시오. [하는 방법: ID 별로 액세스 서버 컨트롤](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > 둘 다는 <xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A>및 emptydatatemplate이 속성이 설정 되어, emptydatatemplate이 속성이 우선 합니다.</xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A>"
  example:
  - "The following example demonstrates how to define a custom template for the empty data row displayed when a <xref:System.Web.UI.WebControls.GridView> control is bound to a data source that does not contain any records.  \n  \n [!code-cs[GridViewNullRowTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_206_1.aspx)]\n [!code-vb[GridViewNullRowTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_206_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> 빈 데이터 행에 대 한 사용자 지정 콘텐츠가 들어 있는입니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>,이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.GridView.EmptyDataTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.EmptyDataText
  id: EmptyDataText
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: EmptyDataText
  nameWithType: GridView.EmptyDataText
  fullName: System.Web.UI.WebControls.GridView.EmptyDataText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "때에 렌더링 되는 빈 데이터 행에 표시할 텍스트를 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 컨트롤이 모든 레코드를 포함 하지 않는 데이터 원본에 바인딩되어 있습니다."
  remarks: "빈 데이터 행에 표시 됩니다는 <xref:System.Web.UI.WebControls.GridView>제어 컨트롤에 바인딩되는 데이터 원본 모든 레코드를 포함 하지 않습니다.</xref:System.Web.UI.WebControls.GridView> EmptyDataText 속성을 사용 하 여 빈 데이터 행에 표시할 텍스트를 지정할 수 있습니다. 빈 데이터 행의 스타일을 제어 하기 위해 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A>속성.</xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A> 빈 데이터 행에 대 한 고유의 사용자 지정 사용자 인터페이스 (UI)을 설정 하 여 정의할 수 있습니다 또는 <xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A>이 속성 대신.</xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A>      > [!NOTE] > 경우는 모두 EmptyDataText 및 <xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A>속성을 설정의 <xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A>속성이 우선 합니다.</xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A> </xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A>       이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute>및 [전역화 및 지역화](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to use the EmptyDataText property to specify the text to display in the empty data row.  \n  \n [!code-vb[GridViewEmptyDataText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_935_1.aspx)]\n [!code-cs[GridViewEmptyDataText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_935_1.aspx)]"
  syntax:
    content: public virtual string EmptyDataText { get; set; }
    return:
      type: System.String
      description: "빈 데이터 행에 표시할 텍스트입니다. 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.GridView.EmptyDataText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.EnableModelValidation
  id: EnableModelValidation
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: EnableModelValidation
  nameWithType: GridView.EnableModelValidation
  fullName: System.Web.UI.WebControls.GridView.EnableModelValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "유효성 검사 컨트롤이 업데이트 작업 또는 삽입 하는 동안 발생 하는 예외를 처리 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public virtual bool EnableModelValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>유효성 검사기 컨트롤이 작업을 업데이트 또는 삽입 하는 동안 발생 하는 예외를 처리 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.GridView.EnableModelValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.EnablePersistedSelection
  id: EnablePersistedSelection
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: EnablePersistedSelection
  nameWithType: GridView.EnablePersistedSelection
  fullName: System.Web.UI.WebControls.GridView.EnablePersistedSelection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "인덱스 또는 데이터 키 값 행의 선택을 기반으로 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "이 속성이 `false` 행을 선택 하 고, 새 페이지에 다른 데이터가 있는 경우에 새 페이지가 표시 되 면 동일한 행이 선택 되어 있습니다. 이 속성을 설정 하는 경우 `true`, 다른 데이터에 있는 페이지를 표시 하는 경우 행을 선택 합니다. 다음 행 선택한에 페이지를 반환 하는 경우 해당 행이 여전히 선택 합니다."
  syntax:
    content: public virtual bool EnablePersistedSelection { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>행 선택 값을 기반으로 데이터 키; 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.GridView.EnablePersistedSelection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks
  id: EnableSortingAndPagingCallbacks
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: EnableSortingAndPagingCallbacks
  nameWithType: GridView.EnableSortingAndPagingCallbacks
  fullName: System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "정렬 및 페이징 작업에 대 한 클라이언트 콜백을 사용 되는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "정렬 또는 페이징 작업을 수행 하면 기본적으로는 <xref:System.Web.UI.WebControls.GridView>제어 작업을 수행 하려면 서버에 다시 게시 합니다.</xref:System.Web.UI.WebControls.GridView> EnableSortingAndPagingCallbacks 속성이로 설정 된 경우 `true`정렬을 수행 하는 클라이언트에는 서비스를 호출 하 고 서버에 게시 하지 않아도 페이징 작업을 다시 합니다.      > [!NOTE] > 하지 않는 브라우저는이 기능을 지원 합니다. 브라우저에서이 기능을 지원 하는지 여부를 확인 하려면는 <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>속성.</xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>       모든 열은 <xref:System.Web.UI.WebControls.GridView.Columns%2A>컬렉션에서 실행 되도록이 기능에 대 한 콜백을 지원 해야 합니다.</xref:System.Web.UI.WebControls.GridView.Columns%2A> 경우는 <xref:System.Web.UI.WebControls.GridView.Columns%2A>컬렉션와 같은 콜백의 경우, 지원 하지 않는 열이 포함 되어 <xref:System.Web.UI.WebControls.TemplateField>, <xref:System.NotSupportedException>예외가 발생 합니다.</xref:System.NotSupportedException> </xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.GridView.Columns%2A>"
  example:
  - "The following example demonstrates how to use the EnableSortingAndPagingCallbacks property to enable client-side callbacks for sorting and paging operations.  \n  \n [!code-vb[GridViewEnableSortingAndPagingCallbacks#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_960_1.aspx)]\n [!code-cs[GridViewEnableSortingAndPagingCallbacks#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_960_1.aspx)]"
  syntax:
    content: public virtual bool EnableSortingAndPagingCallbacks { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>정렬 및 페이징 작업에 대 한 클라이언트 콜백을 사용 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.GridView.Columns*>컬렉션와 같은 콜백의 경우, 지원 하지 않는 열이 포함 되어 <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>.</xref:System.Web.UI.WebControls.GridView.Columns*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.GridViewRow,System.Boolean,System.Boolean)
  id: ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.GridViewRow,System.Boolean,System.Boolean)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: ExtractRowValues(IOrderedDictionary,GridViewRow,Boolean,Boolean)
  nameWithType: GridView.ExtractRowValues(IOrderedDictionary,GridViewRow,Boolean,Boolean)
  fullName: System.Web.UI.WebControls.GridView.ExtractRowValues(IOrderedDictionary,GridViewRow,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정된 된 행 내에서 선언 된 각 필드의 값을 검색 하 고 지정 된 저장 하도록 <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> 개체입니다."
  remarks: "ExtractRowValues 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.GridView>컨트롤에서 지정한 행 내에 선언 된 각 필드의 값을 검색 하는 `row` 매개 변수.</xref:System.Web.UI.WebControls.GridView> 추출 된 값 읽기 전용 필드 및 키 필드를 사용 하 여 포함 하는지 여부를 지정할 수는 `includeReadOnlyFields` 및 `includePrimaryKey` 매개 변수를 각각."
  syntax:
    content: protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, System.Web.UI.WebControls.GridViewRow row, bool includeReadOnlyFields, bool includePrimaryKey);
    parameters:
    - id: fieldValues
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> 필드 값을 저장 하는 데 사용 합니다."
    - id: row
      type: System.Web.UI.WebControls.GridViewRow
      description: "<xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref> 를 필드 값을 검색 합니다."
    - id: includeReadOnlyFields
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>읽기 전용 필드를 포함 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: includePrimaryKey
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>기본 키 필드 또는 필드를 포함 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.GridView.ExtractRowValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.FooterRow
  id: FooterRow
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: FooterRow
  nameWithType: GridView.FooterRow
  fullName: System.Web.UI.WebControls.GridView.FooterRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref> 의 바닥글 행을 나타내는 개체는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "프로그래밍 방식으로 액세스할 FooterRow 속성을 사용 하 여는 <xref:System.Web.UI.WebControls.GridViewRow>의 바닥글 행을 나타내는 개체를 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridViewRow>      > [!NOTE] > The FooterRow 속성은 한 후에 사용할 수는 <xref:System.Web.UI.WebControls.GridView>컨트롤의 바닥글 행을 만듭니다는 <xref:System.Web.UI.WebControls.GridView.RowCreated>이벤트.</xref:System.Web.UI.WebControls.GridView.RowCreated> </xref:System.Web.UI.WebControls.GridView>       예를 들어 사용자 지정 콘텐츠를 추가할 때 바닥글 행을 프로그래밍 방식으로 조작 해야 할 때이 속성은 일반적으로 사용 됩니다. FooterRow 속성을 수정 후 수행 해야 합니다는 <xref:System.Web.UI.WebControls.GridView>컨트롤이 렌더링 되 고, 그렇지 않으면 만들어졌으면는 <xref:System.Web.UI.WebControls.GridView>컨트롤에 모든 변경 사항을 덮어씁니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView>"
  example:
  - "The following example demonstrates how to use the FooterRow property to display the sort direction in the footer row.  \n  \n [!code-vb[GridViewFooterRow#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_775_1.aspx)]\n [!code-cs[GridViewFooterRow#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_775_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridViewRow FooterRow { get; }
    return:
      type: System.Web.UI.WebControls.GridViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref> 의 바닥글 행을 나타내는 한 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.GridView.FooterRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.FooterStyle
  id: FooterStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: FooterStyle
  nameWithType: GridView.FooterStyle
  fullName: System.Web.UI.WebControls.GridView.FooterStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 바닥글 행에 표시 되는 모양을 설정할 수 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "FooterStyle 속성을 사용 하 여의 바닥글 행의 모양을 제어 하는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle>개체를 반환 합니다.</xref:System.Web.UI.WebControls.TableItemStyle> 선언적으로 다음 방법 중 하나를 사용 하는 속성을 설정할 수 있습니다:-의 여는 태그에 특성을 배치는 <xref:System.Web.UI.WebControls.GridView>폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle>개체 (예를 들어 `FooterStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.GridView>      -중첩 된 `<FooterStyle>` 여는 태그와 닫는 태그 사이 요소는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>       양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `FooterStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다."
  example:
  - "The following example demonstrates how to use the FooterStyle property to define a custom style for the footer row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewShowHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_100_1.aspx)]\n [!code-vb[GridViewShowHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_100_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 에 바닥글 행의 스타일을 나타내는 한 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.GridView.FooterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.GetCallbackResult
  id: GetCallbackResult
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: GetCallbackResult()
  nameWithType: GridView.GetCallbackResult()
  fullName: System.Web.UI.WebControls.GridView.GetCallbackResult()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤을 대상으로 하는 콜백 이벤트의 결과 반환 합니다."
  remarks: "<xref:System.Web.UI.WebControls.GridView>구현 제어는 <xref:System.Web.UI.ICallbackEventHandler>사용 하 여 인터페이스는 <xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A>비동기적으로 데이터 및 컨트롤에 검색된 된 데이터를 반환 하려면 GetCallbackResult 메서드를 검색 하.</xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A> </xref:System.Web.UI.ICallbackEventHandler> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual string GetCallbackResult ();
    parameters: []
    return:
      type: System.String
      description: "콜백 결과입니다."
  overload: System.Web.UI.WebControls.GridView.GetCallbackResult*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  id: GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: GetCallbackScript(IButtonControl,String)
  nameWithType: GridView.GetCallbackScript(IButtonControl,String)
  fullName: System.Web.UI.WebControls.GridView.GetCallbackScript(IButtonControl,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "정렬 작업을 수행 하는 단추에 대 한 콜백 스크립트를 만듭니다."
  remarks: "GetCallbackScript 메서드는에서 사용 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.GridView>정렬 작업을 수행 하는 단추에 대 한 콜백 스크립트를 만들 수 있습니다.</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual string GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);
    parameters:
    - id: buttonControl
      type: System.Web.UI.WebControls.IButtonControl
      description: "콜백 스크립트를 만드는 단추 컨트롤입니다."
    - id: argument
      type: System.String
      description: "콜백 스크립트에 전달할 인수입니다."
    return:
      type: System.String
      description: "정렬 작업을 수행 하는 단추에 대 한 콜백 스크립트입니다."
  overload: System.Web.UI.WebControls.GridView.GetCallbackScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.GridLines
  id: GridLines
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: GridLines
  nameWithType: GridView.GridLines
  fullName: System.Web.UI.WebControls.GridView.GridLines
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "모눈선 스타일을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "눈금선 속성을 사용 하 여 모눈선 스타일을 지정 하는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> 다음 표에서 사용 가능한 스타일을 보여 줍니다.      | 스타일 | 설명 |   |-----------|-----------------|   | `GridLines.None`| 눈금선이 없는 표시 됩니다. |   | `GridLines.Horizontal`| 가로 눈금선 표시 됩니다. |   | `GridLines.Vertical`| 세로 눈금선을 표시 합니다. |   | `GridLines.Both`| 가로 및 세로 눈금선을 표시 합니다. |"
  example:
  - "The following example demonstrates how to use the GridLines property to hide the gridlines in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewGridLines#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1102_1.aspx)]\n [!code-cs[GridViewGridLines#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1102_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }
    return:
      type: System.Web.UI.WebControls.GridLines
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.GridLines&quot;> </xref> 값입니다. 기본값은 <xref uid=&quot;langword_csharp_GridLines.Both&quot; name=&quot;GridLines.Both&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.GridView.GridLines*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.HeaderRow
  id: HeaderRow
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: HeaderRow
  nameWithType: GridView.HeaderRow
  fullName: System.Web.UI.WebControls.GridView.HeaderRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref> 에 머리글 행을 나타내는 개체는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "프로그래밍 방식으로 액세스할 HeaderRow 속성을 사용 하 여는 <xref:System.Web.UI.WebControls.GridViewRow>에 머리글 행을 나타내는 개체는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridViewRow>      > [!NOTE] > The HeaderRow 속성은 한 후에 사용할 수는 <xref:System.Web.UI.WebControls.GridView>컨트롤에 머리글 행을 만듭니다는 <xref:System.Web.UI.WebControls.GridView.RowCreated>이벤트.</xref:System.Web.UI.WebControls.GridView.RowCreated> </xref:System.Web.UI.WebControls.GridView>       이 속성은 사용자 지정 콘텐츠를 추가할 때 예를 들어 머리글 행을 프로그래밍 방식으로 조작 해야 할 때 일반적으로 사용 됩니다. HeaderRow 속성을 수정 후 수행 해야 합니다는 <xref:System.Web.UI.WebControls.GridView>컨트롤이 렌더링 되 고, 그렇지 않으면 만들어졌으면는 <xref:System.Web.UI.WebControls.GridView>컨트롤에 모든 변경 사항을 덮어씁니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView>"
  example:
  - "The following example demonstrates how to use the HeaderRow property to programmatically change the font color of the header row based on the sort direction.  \n  \n [!code-vb[GridViewFooterRow#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1107_1.aspx)]\n [!code-cs[GridViewFooterRow#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1107_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridViewRow HeaderRow { get; }
    return:
      type: System.Web.UI.WebControls.GridViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref> 에 머리글 행을 나타내는 한 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.GridView.HeaderRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.HeaderStyle
  id: HeaderStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: HeaderStyle
  nameWithType: GridView.HeaderStyle
  fullName: System.Web.UI.WebControls.GridView.HeaderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 머리글 행에 표시 되는 모양을 설정할 수 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "HeaderStyle 속성을 사용 하 여에 머리글 행의 모양을 제어 하는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle>개체를 반환 합니다.</xref:System.Web.UI.WebControls.TableItemStyle> 선언적으로 다음 방법 중 하나를 사용 하는 속성을 설정할 수 있습니다:-의 여는 태그에 특성을 배치는 <xref:System.Web.UI.WebControls.GridView>폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle>개체 (예를 들어 `HeaderStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.GridView>      -중첩 된 `<HeaderStyle>` 여는 태그와 닫는 태그 사이 요소는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>       양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `HeaderStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다."
  example:
  - "The following example demonstrates how to use the HeaderStyle property to define a custom style for the header row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewShowHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1352_1.aspx)]\n [!code-vb[GridViewShowHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1352_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 에 머리글 행의 스타일을 나타내는 한 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.GridView.HeaderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.HorizontalAlign
  id: HorizontalAlign
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: HorizontalAlign
  nameWithType: GridView.HorizontalAlign
  fullName: System.Web.UI.WebControls.GridView.HorizontalAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가로 맞춤을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 페이지에서 제어 합니다."
  remarks: "HorizontalAlign 속성을 사용 하 여의 가로 맞춤을 지정 하는 <xref:System.Web.UI.WebControls.GridView>페이지 내에서 컨트롤.</xref:System.Web.UI.WebControls.GridView> 다음 표에서 다양 한 가로 맞춤 스타일을 나열 합니다.      | 맞춤 값 | 설명 |   |---------------------|-----------------|   | `HorizontalAlign.NotSet`| <xref:System.Web.UI.WebControls.GridView>컨트롤의 가로 맞춤 설정 되지 않았습니다. |   | `HorizontalAlign.Left`| <xref:System.Web.UI.WebControls.GridView>컨트롤은 페이지에 왼쪽 맞춤. |   | `HorizontalAlign.Center`| 가운데 <xref:System.Web.UI.WebControls.GridView>컨트롤이 페이지에 표시 됩니다. |   | `HorizontalAlign.Right`| <xref:System.Web.UI.WebControls.GridView>컨트롤은 페이지에서 오른쪽 정렬 합니다. |   | `HorizontalAlign.Justify`| <xref:System.Web.UI.WebControls.GridView>제어 페이지의 왼쪽 및 오른쪽 여백에 맞게 정렬 됩니다. |</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView>"
  example:
  - "The following example demonstrates how to use the HorizontalAlign property to align a <xref:System.Web.UI.WebControls.GridView> control on the right side of a page.  \n  \n [!code-vb[GridViewHorizontalAlign#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_660_1.aspx)]\n [!code-cs[GridViewHorizontalAlign#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_660_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }
    return:
      type: System.Web.UI.WebControls.HorizontalAlign
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.HorizontalAlign&quot;> </xref> 값입니다. 기본값은 <xref uid=&quot;langword_csharp_HorizontalAlign.NotSet&quot; name=&quot;HorizontalAlign.NotSet&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.GridView.HorizontalAlign*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.InitializePager(System.Web.UI.WebControls.GridViewRow,System.Int32,System.Web.UI.WebControls.PagedDataSource)
  id: InitializePager(System.Web.UI.WebControls.GridViewRow,System.Int32,System.Web.UI.WebControls.PagedDataSource)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: InitializePager(GridViewRow,Int32,PagedDataSource)
  nameWithType: GridView.InitializePager(GridViewRow,Int32,PagedDataSource)
  fullName: System.Web.UI.WebControls.GridView.InitializePager(GridViewRow,Int32,PagedDataSource)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "페이징 기능을 활성화 하는 경우 표시의 호출기 행을 초기화 합니다."
  remarks: "InitializePager 메서드 페이징 기능을 활성화 하는 경우 표시 되 호출기 행 초기화를 사용 합니다.      > [!NOTE] > 확장 하려면이 메서드는 주로 컨트롤 개발자가는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual void InitializePager (System.Web.UI.WebControls.GridViewRow row, int columnSpan, System.Web.UI.WebControls.PagedDataSource pagedDataSource);
    parameters:
    - id: row
      type: System.Web.UI.WebControls.GridViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref> 호출기 초기화할 행을 나타내는입니다."
    - id: columnSpan
      type: System.Int32
      description: "호출기 행 확장 되어야 하는 열의 수입니다."
    - id: pagedDataSource
      type: System.Web.UI.WebControls.PagedDataSource
      description: "A <xref href=&quot;System.Web.UI.WebControls.PagedDataSource&quot;> </xref> 데이터 소스를 나타내는입니다."
  overload: System.Web.UI.WebControls.GridView.InitializePager*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.InitializeRow(System.Web.UI.WebControls.GridViewRow,System.Web.UI.WebControls.DataControlField[])
  id: InitializeRow(System.Web.UI.WebControls.GridViewRow,System.Web.UI.WebControls.DataControlField[])
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: InitializeRow(GridViewRow,DataControlField[])
  nameWithType: GridView.InitializeRow(GridViewRow,DataControlField[])
  fullName: System.Web.UI.WebControls.GridView.InitializeRow(GridViewRow,DataControlField[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "행을 초기화는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "InitializeRow 메서드는에 행을 초기화 하는 데 사용 되는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 확장 하려면이 메서드는 주로 컨트롤 개발자가는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual void InitializeRow (System.Web.UI.WebControls.GridViewRow row, System.Web.UI.WebControls.DataControlField[] fields);
    parameters:
    - id: row
      type: System.Web.UI.WebControls.GridViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref> 초기화할 행을 나타내는입니다."
    - id: fields
      type: System.Web.UI.WebControls.DataControlField[]
      description: "배열을 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 열 필드를 나타내는 개체의 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.GridView.InitializeRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.IsBindableType(System.Type)
  id: IsBindableType(System.Type)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: IsBindableType(Type)
  nameWithType: GridView.IsBindableType(Type)
  fullName: System.Web.UI.WebControls.GridView.IsBindableType(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정된 된 데이터 형식 열에 바인딩할 수 있는지 여부를 결정 한 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "IsBindableType 메서드는 프로그래밍 방식으로 지정된 된 데이터 형식 열에 바인딩할 수 있는지 여부를 결정 하는 컨트롤 개발자가 일반적으로 사용 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> The following data types can be bound to a column in a <xref:System.Web.UI.WebControls.GridView> control:      -   <xref:System.Boolean?displayProperty=fullName>      -   <xref:System.Byte?displayProperty=fullName>      -   <xref:System.Char?displayProperty=fullName>      -   <xref:System.DateTime?displayProperty=fullName>      -   <xref:System.Decimal?displayProperty=fullName>      -   <xref:System.Double?displayProperty=fullName>      -   <xref:System.Guid?displayProperty=fullName>      -   <xref:System.Int16?displayProperty=fullName>      -   <xref:System.Int32?displayProperty=fullName>      -   <xref:System.Int64?displayProperty=fullName>      -   <xref:System.SByte?displayProperty=fullName>      -   <xref:System.Single?displayProperty=fullName>      -   <xref:System.String?displayProperty=fullName>      -   <xref:System.UInt16?displayProperty=fullName>      -   <xref:System.UInt32?displayProperty=fullName>      -   <xref:System.UInt64?displayProperty=fullName></xref:System.UInt64?displayProperty=fullName></xref:System.UInt32?displayProperty=fullName></xref:System.UInt16?displayProperty=fullName></xref:System.String?displayProperty=fullName></xref:System.Single?displayProperty=fullName></xref:System.SByte?displayProperty=fullName></xref:System.Int64?displayProperty=fullName></xref:System.Int32?displayProperty=fullName></xref:System.Int16?displayProperty=fullName></xref:System.Guid?displayProperty=fullName></xref:System.Double?displayProperty=fullName></xref:System.Decimal?displayProperty=fullName></xref:System.DateTime?displayProperty=fullName></xref:System.Char?displayProperty=fullName></xref:System.Byte?displayProperty=fullName></xref:System.Boolean?displayProperty=fullName></xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: public virtual bool IsBindableType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A &lt;xref:System.Type?displayProperty=fullName&gt; 테스트할 데이터 형식을 나타내는입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정된 된 데이터 형식 열에 바인딩할 수 있으면 한 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.GridView.IsBindableType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: GridView.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.GridView.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 있는 속성의 상태를 로드는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 경우에 유지 해야 하는 컨트롤의 &lt;xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName&gt; 속성이 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "에 있는 속성의 상태를 로드 하도록이 메서드는는 <xref:System.Web.UI.WebControls.GridView>경우에 유지 해야 하는 컨트롤의 <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName>속성이 `false`.</xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 확장 하려면이 메서드는 주로 컨트롤 개발자가는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected override void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "&lt;xref:System.Object?displayProperty=fullName&gt; 컨트롤에 대 한 상태 저장된 컨트롤 값이 들어 있는입니다."
  overload: System.Web.UI.WebControls.GridView.LoadControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: GridView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.GridView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이전에 저장 된 뷰 상태를 로드는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "이 메서드는.NET Framework 인프라에서 주로 사용 하 고 사용자 코드에서 직접 사용할 수 없습니다. 그러나 컨트롤 개발자가 사용자 지정 서버 컨트롤에서 해당 뷰 상태를 복원 하는 방법을 지정 하려면이 메서드를 재정의할 수 있습니다. 자세한 내용은 참조 [ASP.NET 상태 관리 개요](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "&lt;xref:System.Object?displayProperty=fullName&gt; 컨트롤에 대 한 저장 된 뷰 상태 값이 들어 있는입니다."
  overload: System.Web.UI.WebControls.GridView.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnBubbleEvent(System.Object,System.EventArgs)
  id: OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: GridView.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnBubbleEvent(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "웹 서버 컨트롤의 이벤트가 페이지의 사용자 인터페이스 (UI) 서버 컨트롤 계층 구조로 전달 되는지 여부를 결정 합니다."
  remarks: "OnBubbleEvent 메서드를 구현 하는 <xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=fullName>페이지 계층에 자식 컨트롤에서 이벤트를 전달 하는 메서드.</xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=fullName>"
  syntax:
    content: protected override bool OnBubbleEvent (object source, EventArgs e);
    parameters:
    - id: source
      type: System.Object
      description: "이벤트의 소스입니다."
    - id: e
      type: System.EventArgs
      description: "&lt;xref:System.EventArgs?displayProperty=fullName&gt; 하는 이벤트 데이터를 포함 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이벤트가 취소 되었습니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.GridView.OnBubbleEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnDataPropertyChanged
  id: OnDataPropertyChanged
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnDataPropertyChanged()
  nameWithType: GridView.OnDataPropertyChanged()
  fullName: System.Web.UI.WebControls.GridView.OnDataPropertyChanged()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "다시 바인딩 횟수는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 컨트롤을 한 후 해당 데이터는 <> </> *>, <> </> *>, 또는 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID*>속성을 변경 합니다.</xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID*>"
  remarks: "OnDataPropertyChanged 메서드는에서 사용 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.GridView>컨트롤 컨트롤을 한 후 해당 데이터에 바인딩됩니다는 <xref:System.Web.UI.WebControls.DataBoundControl.DataMember%2A>, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>, 또는 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>속성이 변경 될.</xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> </xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> </xref:System.Web.UI.WebControls.DataBoundControl.DataMember%2A> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected override void OnDataPropertyChanged ();
    parameters: []
  overload: System.Web.UI.WebControls.GridView.OnDataPropertyChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)
  id: OnDataSourceViewChanged(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnDataSourceViewChanged(Object,EventArgs)
  nameWithType: GridView.OnDataSourceViewChanged(Object,EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.DataSourceView.DataSourceViewChanged&quot;> </xref> 이벤트입니다."
  remarks: "OnDataSourceViewChanged 메서드 알립니다는 <xref:System.Web.UI.WebControls.GridView>바인딩해야 하 고 기본 데이터 원본의 변경 된 컨트롤.</xref:System.Web.UI.WebControls.GridView> 일반적으로 OnDataSourceViewChanged 메서드는 데이터 원본 뷰의 속성이 변경 되 면 호출 됩니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnDataSourceViewChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected override void OnDataSourceViewChanged (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "이벤트의 소스입니다."
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.GridView.OnDataSourceViewChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: GridView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref> 이벤트입니다."
  remarks: "이 방법으로 알림을 웹 서버 컨트롤을 만들고 인스턴스를 설정 하는 데 필요한 초기화 단계를 수행 해야 합니다. 이 서버 컨트롤의 수명 주기이 단계에서 컨트롤의 뷰 상태가 아직 채울 수 있습니다. 또한 자식 또는이 컨트롤에 부모 인지에 관계 없이이 메서드를 호출할 때 다른 서버 컨트롤을 액세스할 수 없습니다. 다른 서버 컨트롤 생성 하 고 액세스할 준비가 되도록 보장 되지 않습니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnInit 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.GridView.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)
  id: OnPageIndexChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnPageIndexChanged(EventArgs)
  nameWithType: GridView.OnPageIndexChanged(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnPageIndexChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.GridView.PageIndexChanged&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>페이저 단추 중 하나를 클릭 하면 후 이벤트는 <xref:System.Web.UI.WebControls.GridView>페이징 작업을 처리 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.PageIndexChanged> 이렇게 하면이 이벤트가 발생할 때마다 사용자 지정 페이징 작업과 같은 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnPageIndexChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnPageIndexChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "&lt;xref:System.EventArgs?displayProperty=fullName&gt; 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.GridView.OnPageIndexChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)
  id: OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnPageIndexChanging(GridViewPageEventArgs)
  nameWithType: GridView.OnPageIndexChanging(GridViewPageEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnPageIndexChanging(GridViewPageEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.GridView.PageIndexChanging&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>페이저 단추 중 하나를 클릭 하기 전에 이벤트가 발생 된 <xref:System.Web.UI.WebControls.GridView>컨트롤 페이징 작업을 처리 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.PageIndexChanging> 따라서이 이벤트가 발생할 때마다 페이징 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnPageIndexChanging 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.GridViewPageEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewPageEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewPageEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.GridView.OnPageIndexChanging*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "에 대 한 처리기가 없는 <xref href=&quot;System.Web.UI.WebControls.GridView.PageIndexChanging&quot;> </xref> 이벤트입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnPagePreLoad(System.Object,System.EventArgs)
  id: OnPagePreLoad(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnPagePreLoad(Object,EventArgs)
  nameWithType: GridView.OnPagePreLoad(Object,EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnPagePreLoad(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤을 로드 하기 전에 데이터 바인딩된 컨트롤의 초기화 상태를 설정 합니다."
  syntax:
    content: protected override void OnPagePreLoad (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "이벤트의 소스입니다."
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.GridView.OnPagePreLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: GridView.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref> 이벤트입니다."
  remarks: "이 메서드는 상태 보기 및 렌더링 콘텐츠를 저장 하기 전에 필요한 모든 사전 렌더링 단계를 수행 하는 서버 컨트롤을 알립니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnPreRender 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.GridView.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)
  id: OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnRowCancelingEdit(GridViewCancelEditEventArgs)
  nameWithType: GridView.OnRowCancelingEdit(GridViewCancelEditEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowCancelingEdit(GridViewCancelEditEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.GridView.RowCancelingEdit&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>편집 모드에 있는 행의 취소 단추를 클릭할 때 발생 하지만 행 종료 되기 전에 편집 모드.</xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> 따라서이 경우 행 원치 않는 상태가이 이벤트가 발생할 때마다 취소 작업을 중지 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnRowCancelingEdit 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnRowCancelingEdit (System.Web.UI.WebControls.GridViewCancelEditEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewCancelEditEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewCancelEditEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.GridView.OnRowCancelingEdit*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "에 대 한 처리기가 없는 <xref href=&quot;System.Web.UI.WebControls.GridView.RowCancelingEdit&quot;> </xref> 이벤트입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)
  id: OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnRowCommand(GridViewCommandEventArgs)
  nameWithType: GridView.OnRowCommand(GridViewCommandEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowCommand(GridViewCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.GridView.RowCommand&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Web.UI.WebControls.GridView.RowCommand>에 단추를 클릭할 때 이벤트가 발생 된 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowCommand> 따라서이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnRowCommand 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191882).  \n  \n The following example demonstrates how provide an event-handling method for the <xref:System.Web.UI.WebControls.GridView.RowCommand> event. When the Add button is clicked for a given row of the <xref:System.Web.UI.WebControls.GridView> control, the name of the selected customer is added to a <xref:System.Web.UI.WebControls.ListBox> control.  \n  \n [!code-cs[GridViewRowCommmand#1](~/add/codesnippet/csharp/10c8d2a8-eb40-462e-a63f-_1.aspx)]\n [!code-vb[GridViewRowCommmand#1](~/add/codesnippet/visualbasic/10c8d2a8-eb40-462e-a63f-_1.aspx)]"
  syntax:
    content: protected virtual void OnRowCommand (System.Web.UI.WebControls.GridViewCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewCommandEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.GridView.OnRowCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)
  id: OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnRowCreated(GridViewRowEventArgs)
  nameWithType: GridView.OnRowCreated(GridViewRowEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowCreated(GridViewRowEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.GridView.RowCreated&quot;> </xref> 이벤트입니다."
  remarks: "전에 <xref:System.Web.UI.WebControls.GridView>컨트롤을 렌더링 한 <xref:System.Web.UI.WebControls.GridViewRow>컨트롤의 각 행에 대 한 개체를 생성 해야 합니다.</xref:System.Web.UI.WebControls.GridViewRow> </xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.GridView.RowCreated>이벤트가 발생할 때의 각 행의 <xref:System.Web.UI.WebControls.GridView>컨트롤이 만들어집니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowCreated> 따라서이 이벤트가 발생할 때마다 행, 사용자 지정 콘텐츠를 추가 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnRowCreated 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following example demonstrates how provide an event-handling method for the <xref:System.Web.UI.WebControls.GridView.RowCreated> event. When a row is being created, its index is stored in the <xref:System.Web.UI.WebControls.LinkButton.CommandArgument%2A> property of a <xref:System.Web.UI.WebControls.LinkButton> control that is contained in the new row. This enables you to determine the index of the row when the user clicks the command button.  \n  \n [!code-vb[GridViewRowCreated#1](~/add/codesnippet/visualbasic/a62170ef-53b8-4054-ad66-_1.aspx)]\n [!code-cs[GridViewRowCreated#1](~/add/codesnippet/csharp/a62170ef-53b8-4054-ad66-_1.aspx)]"
  syntax:
    content: protected virtual void OnRowCreated (System.Web.UI.WebControls.GridViewRowEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewRowEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRowEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.GridView.OnRowCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)
  id: OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnRowDataBound(GridViewRowEventArgs)
  nameWithType: GridView.OnRowDataBound(GridViewRowEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowDataBound(GridViewRowEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.GridView.RowDataBound&quot;> </xref> 이벤트입니다."
  remarks: "전에 <xref:System.Web.UI.WebControls.GridView>컨트롤이 렌더링 될 수, 데이터 원본에서 레코드를 컨트롤의 각 행을 연결 해야 합니다.</xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.GridView.RowDataBound>이벤트는 데이터 행 (나타내는 <xref:System.Web.UI.WebControls.GridViewRow>개체)의 데이터에 바인딩되는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridViewRow> </xref:System.Web.UI.WebControls.GridView.RowDataBound> 따라서이 이벤트가 발생할 때마다 해당 행에 바인딩된 데이터의 값을 수정 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnRowDataBound 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다.       소스 코드를 Visual Studio 웹 사이트 프로젝트는이 항목에 수반: [다운로드](http://go.microsoft.com/fwlink/?LinkId=191882)합니다."
  syntax:
    content: protected virtual void OnRowDataBound (System.Web.UI.WebControls.GridViewRowEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewRowEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRowEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.GridView.OnRowDataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)
  id: OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnRowDeleted(GridViewDeletedEventArgs)
  nameWithType: GridView.OnRowDeleted(GridViewDeletedEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowDeleted(GridViewDeletedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.GridView.RowDeleted&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Web.UI.WebControls.GridView.RowDeleted>행의 삭제 단추를 클릭 하면 후 이벤트는 <xref:System.Web.UI.WebControls.GridView>컨트롤이 행을 삭제 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowDeleted> 따라서이 이벤트가 발생할 때마다 삭제 작업의 결과 확인 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnRowDeleted 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnRowDeleted (System.Web.UI.WebControls.GridViewDeletedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewDeletedEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewDeletedEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.GridView.OnRowDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)
  id: OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnRowDeleting(GridViewDeleteEventArgs)
  nameWithType: GridView.OnRowDeleting(GridViewDeleteEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowDeleting(GridViewDeleteEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.GridView.RowDeleting&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Web.UI.WebControls.GridView.RowDeleting>이벤트는 행의 삭제 단추를 클릭 하기 전에 <xref:System.Web.UI.WebControls.GridView>컨트롤이 행을 삭제 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowDeleting> 따라서이 이벤트가 발생할 때마다 삭제 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnRowDeleting 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnRowDeleting (System.Web.UI.WebControls.GridViewDeleteEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewDeleteEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewDeleteEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.GridView.OnRowDeleting*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "에 대 한 처리기가 없는 <xref href=&quot;System.Web.UI.WebControls.GridView.RowDeleting&quot;> </xref> 이벤트입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)
  id: OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnRowEditing(GridViewEditEventArgs)
  nameWithType: GridView.OnRowEditing(GridViewEditEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowEditing(GridViewEditEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.GridView.RowEditing&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Web.UI.WebControls.GridView.RowEditing>이벤트는 행의 편집 단추를 클릭 하기 전에 <xref:System.Web.UI.WebControls.GridView>컨트롤이 편집 모드로 전환 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowEditing> 따라서이 이벤트가 발생할 때마다 편집 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnRowEditing 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnRowEditing (System.Web.UI.WebControls.GridViewEditEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewEditEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewEditEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.GridView.OnRowEditing*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "에 대 한 처리기가 없는 <xref href=&quot;System.Web.UI.WebControls.GridView.RowEditing&quot;> </xref> 이벤트입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)
  id: OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnRowUpdated(GridViewUpdatedEventArgs)
  nameWithType: GridView.OnRowUpdated(GridViewUpdatedEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowUpdated(GridViewUpdatedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.GridView.RowUpdated&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Web.UI.WebControls.GridView.RowUpdated>행의 업데이트 단추를 클릭 하면 후 이벤트는 발생 된 <xref:System.Web.UI.WebControls.GridView>컨트롤이 행을 업데이트 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowUpdated> 따라서이 이벤트가 발생할 때마다 업데이트 작업의 결과 확인 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnRowUpdated 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnRowUpdated (System.Web.UI.WebControls.GridViewUpdatedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewUpdatedEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewUpdatedEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.GridView.OnRowUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)
  id: OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnRowUpdating(GridViewUpdateEventArgs)
  nameWithType: GridView.OnRowUpdating(GridViewUpdateEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowUpdating(GridViewUpdateEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.GridView.RowUpdating&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Web.UI.WebControls.GridView.RowUpdating>이벤트는 행의 업데이트 단추를 클릭 하기 전에 <xref:System.Web.UI.WebControls.GridView>컨트롤이 행을 업데이트 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowUpdating> 따라서이 이벤트가 발생할 때마다 업데이트 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnRowUpdating 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnRowUpdating (System.Web.UI.WebControls.GridViewUpdateEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewUpdateEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewUpdateEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.GridView.OnRowUpdating*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "에 대 한 처리기가 없는 <xref href=&quot;System.Web.UI.WebControls.GridView.RowUpdating&quot;> </xref> 이벤트입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)
  id: OnSelectedIndexChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnSelectedIndexChanged(EventArgs)
  nameWithType: GridView.OnSelectedIndexChanged(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.GridView.SelectedIndexChanged&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>행의 선택 단추를 클릭 하면 후 이벤트는 <xref:System.Web.UI.WebControls.GridView>select 작업을 처리 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> 따라서이 이벤트가 발생할 때마다 상태 레이블을 현재 선택 된 행으로 업데이트 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnSelectedIndexChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following example shows how create an event handler for the <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> event. In this example, the selected row is persisted in the view state. So even after a sorting or a paging operation, only that row will be selected.  \n  \n [!code-vb[System.Web.UI.WebControls.GridView.OnSelectedIndexChanged#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_77_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.GridView.OnSelectedIndexChanged#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_77_1.aspx)]"
  syntax:
    content: protected virtual void OnSelectedIndexChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "&lt;xref:System.EventArgs?displayProperty=fullName&gt; 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.GridView.OnSelectedIndexChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)
  id: OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnSelectedIndexChanging(GridViewSelectEventArgs)
  nameWithType: GridView.OnSelectedIndexChanging(GridViewSelectEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(GridViewSelectEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.GridView.SelectedIndexChanging&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>이벤트는 행의 선택 단추를 클릭 하기 전에 <xref:System.Web.UI.WebControls.GridView>select 작업을 처리 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging> 따라서이 이벤트가 발생할 때마다 선택 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnSelectedIndexChanging 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnSelectedIndexChanging (System.Web.UI.WebControls.GridViewSelectEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewSelectEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewSelectEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.GridView.OnSelectedIndexChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)
  id: OnSorted(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnSorted(EventArgs)
  nameWithType: GridView.OnSorted(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnSorted(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.GridView.Sorted&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Web.UI.WebControls.GridView.Sorted>열을 정렬 하는 하이퍼링크를 클릭 하면 후 이벤트는 <xref:System.Web.UI.WebControls.GridView>컨트롤이 정렬 작업을 처리 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.Sorted> 이렇게 하면이 이벤트가 발생할 때마다 사용자 지정 정렬 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnSorted 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnSorted (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "&lt;xref:System.EventArgs?displayProperty=fullName&gt; 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.GridView.OnSorted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)
  id: OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: OnSorting(GridViewSortEventArgs)
  nameWithType: GridView.OnSorting(GridViewSortEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnSorting(GridViewSortEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.GridView.Sorting&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Web.UI.WebControls.GridView.Sorting>이벤트가 발생 한 열을 정렬 하는 하이퍼링크를 클릭 하면 하기 전에 <xref:System.Web.UI.WebControls.GridView>컨트롤이 정렬 작업을 처리 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.Sorting> 따라서이 이벤트가 발생할 때마다 정렬 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnSorting 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnSorting (System.Web.UI.WebControls.GridViewSortEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.GridViewSortEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewSortEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.GridView.OnSorting*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "에 대 한 처리기가 없는 <xref href=&quot;System.Web.UI.WebControls.GridView.Sorting&quot;> </xref> 이벤트입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PageCount
  id: PageCount
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PageCount
  nameWithType: GridView.PageCount
  fullName: System.Web.UI.WebControls.GridView.PageCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 원본에서 레코드를 표시 하는 데 필요한 페이지 수를 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "페이징 기능을 활성화 하는 경우 (설정 하 여는 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>속성을 `true`), 데이터 원본에서 레코드를 표시 하는 데 필요한 페이지의 총 수를 확인 하려면 PageCount 속성을 사용 합니다.</xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 페이지에 표시 된 레코드 수로 데이터 원본에 있는 레코드의 총 수를 분할 하 여이 값은 계산 (에 지정 된 대로 <xref:System.Web.UI.WebControls.GridView.PageSize%2A>속성) 및 반올림 되</xref:System.Web.UI.WebControls.GridView.PageSize%2A>"
  example:
  - "The following example demonstrates how to use the PageCount property to determine the total number of pages displayed in the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_202_1.aspx)]\n [!code-cs[GridViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_202_1.aspx)]"
  syntax:
    content: public virtual int PageCount { get; }
    return:
      type: System.Int32
      description: "페이지 수는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.GridView.PageCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PageIndex
  id: PageIndex
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PageIndex
  nameWithType: GridView.PageIndex
  fullName: System.Web.UI.WebControls.GridView.PageIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재 표시 된 페이지의 인덱스를 가져오거나 설정 합니다."
  remarks: "페이징 기능을 활성화 하는 경우 (설정 하 여는 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>속성을 `true`), PageIndex 속성을 사용 하 여 현재 표시 된 페이지의 인덱스를 확인 합니다.</xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 또한 프로그래밍 방식으로 표시 된 페이지를 변경 하려면이 속성을 사용할 수 있습니다."
  example:
  - "The following example demonstrates how to use the PageIndex property to determine the index of the currently displayed page in the <xref:System.Web.UI.WebControls.GridView> control. The example also shows how the PageIndex property can be used to specify which page is displayed after the user selects a value from the pager row.  \n  \n [!code-vb[GridViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_849_1.aspx)]\n [!code-cs[GridViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_849_1.aspx)]"
  syntax:
    content: public virtual int PageIndex { get; set; }
    return:
      type: System.Int32
      description: "현재 표시 된 페이지의&0;부터 시작 하는 인덱스입니다."
  overload: System.Web.UI.WebControls.GridView.PageIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "PageIndex 속성은 0 보다 작은 값으로 설정 합니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PageIndexChanged
  id: PageIndexChanged
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PageIndexChanged
  nameWithType: GridView.PageIndexChanged
  fullName: System.Web.UI.WebControls.GridView.PageIndexChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "페이저 단추 중 하나를 클릭 하면 후 발생는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 컨트롤 페이징 작업을 처리 합니다."
  remarks: "페이저 단추 중 하나를 클릭 하면 후 PageIndexChanged 이벤트가 발생 된 <xref:System.Web.UI.WebControls.GridView>컨트롤 페이징 작업을 처리 합니다.</xref:System.Web.UI.WebControls.GridView> 이렇게 하면이 이벤트가 발생할 때마다 사용자 지정 페이징 작업과 같은 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       사용자가 선택한 페이지의 인덱스를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.PageIndex%2A>의 속성은 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.PageIndex%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to use the PageIndexChanged event to display the page number selected by the user from the pager row.  \n  \n [!code-vb[GridViewPageIndexChanged#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_26_1.aspx)]\n [!code-cs[GridViewPageIndexChanged#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_26_1.aspx)]"
  syntax:
    content: public event EventHandler PageIndexChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PageIndexChanging
  id: PageIndexChanging
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PageIndexChanging
  nameWithType: GridView.PageIndexChanging
  fullName: System.Web.UI.WebControls.GridView.PageIndexChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "페이저 단추 중 하나를 클릭할 때 발생을 하기 전에 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 컨트롤 페이징 작업을 처리 합니다."
  remarks: "PageIndexChanging는 이벤트가 페이저 단추 중 하나를 클릭 하면 하기 전에 <xref:System.Web.UI.WebControls.GridView>페이징 작업을 처리 합니다.</xref:System.Web.UI.WebControls.GridView> 따라서이 이벤트가 발생할 때마다 페이징 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.      > [!NOTE] > 프로그래밍 방식으로 설정 하는 경우이 이벤트가 발생 하지 않습니다는 <xref:System.Web.UI.WebControls.GridView.PageIndex%2A>속성.</xref:System.Web.UI.WebControls.GridView.PageIndex%2A>       A <xref:System.Web.UI.WebControls.GridViewPageEventArgs>개체 하면 사용자가 선택한 페이지의 인덱스를 확인 하 고 페이징 작업을 취소 해야 함을 나타낼 수 있는 이벤트 처리 메서드에 전달 됩니다.</xref:System.Web.UI.WebControls.GridViewPageEventArgs> 페이징 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>의 속성은 <xref:System.Web.UI.WebControls.GridViewPageEventArgs>개체를 `true`.</xref:System.Web.UI.WebControls.GridViewPageEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to use the PageIndexChanging event to cancel the paging operation if the user attempts to navigate to another page when a <xref:System.Web.UI.WebControls.GridView> control is in edit mode.  \n  \n [!code-cs[GridViewPageIndexChanging#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_115_1.aspx)]\n [!code-vb[GridViewPageIndexChanging#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_115_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewPageEventHandler PageIndexChanging;
    return:
      type: System.Web.UI.WebControls.GridViewPageEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PagerSettings
  id: PagerSettings
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PagerSettings
  nameWithType: GridView.PagerSettings
  fullName: System.Web.UI.WebControls.GridView.PagerSettings
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.PagerSettings&quot;> </xref> 페이저 단추의 속성을 설정할 수 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "PagerSettings 속성을 사용 하 여의 호출기 행의 설정을 제어 하는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> 호출기 행 페이징 기능을 사용할 때 표시 됩니다 (설정 하 여는 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>속성을 `true`) 컨트롤에서 다른 페이지로 이동 하는 데 사용할 수 있는 컨트롤을 포함 하 고.</xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.PagerSettings>개체를 반환 합니다.</xref:System.Web.UI.WebControls.PagerSettings> 선언적으로 다음 방법 중 하나를 사용 하는 속성을 설정할 수 있습니다:-의 여는 태그에 특성을 배치는 <xref:System.Web.UI.WebControls.GridView>폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.PagerSettings>개체 (예를 들어 `PagerSettings-Mode`).</xref:System.Web.UI.WebControls.PagerSettings> </xref:System.Web.UI.WebControls.GridView>      -중첩 된 `<PagerSettings>` 여는 태그와 닫는 태그 사이 요소는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>       양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `PagerStyle.Mode`). 일반 설정에는 일반적으로 호출기 행의 디스플레이 모드 및 사용자 지정 텍스트 또는 이미지 탐색 컨트롤에 대 한 포함 됩니다."
  example:
  - "The following example demonstrates how to set the PagerSettings property declaratively. It sets the font and background for the pager row to blue and light blue, respectively.  \n  \n [!code-vb[GridViewAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1275_1.aspx)]\n [!code-cs[GridViewAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1275_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }
    return:
      type: System.Web.UI.WebControls.PagerSettings
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.PagerSettings&quot;> </xref> 페이저 단추의 속성을 설정할 수 있도록 하는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.GridView.PagerSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PagerStyle
  id: PagerStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PagerStyle
  nameWithType: GridView.PagerStyle
  fullName: System.Web.UI.WebControls.GridView.PagerStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 의 호출기 행 표시 되는 모양을 설정할 수 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "PagerStyle 속성을 사용 하 여의 호출기 행의 모양을 제어 하는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> 호출기 행 페이징 기능을 사용할 때 표시 됩니다 (설정 하 여는 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>속성을 `true`) 컨트롤에서 다른 페이지로 이동 하는 데 사용할 수 있는 컨트롤을 포함 하 고.</xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle>개체를 반환 합니다.</xref:System.Web.UI.WebControls.TableItemStyle> 선언적으로 다음 방법 중 하나를 사용 하는 속성을 설정할 수 있습니다:-의 여는 태그에 특성을 배치는 <xref:System.Web.UI.WebControls.GridView>폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle>개체 (예를 들어 `PagerStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.GridView>      -중첩 된 `<PagerStyle>` 여는 태그와 닫는 태그 사이 요소는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>       양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `PagerStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다."
  example:
  - "The following example demonstrates how to set the PagerStyle property declaratively. It sets the font and background for the pager row to blue and light blue, respectively.  \n  \n [!code-vb[GridViewAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_389_1.aspx)]\n [!code-cs[GridViewAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_389_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 의 호출기 행의 스타일을 나타내는 한 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.GridView.PagerStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PagerTemplate
  id: PagerTemplate
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PagerTemplate
  nameWithType: GridView.PagerTemplate
  fullName: System.Web.UI.WebControls.GridView.PagerTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "호출기 행에 대 한 사용자 지정 콘텐츠를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "호출기 행에 표시 됩니다는 <xref:System.Web.UI.WebControls.GridView>페이징 기능을 활성화 하는 시기를 제어 (때는 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>속성이 true로).</xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> </xref:System.Web.UI.WebControls.GridView> 호출기 행 컨트롤에서 다른 페이지로 이동 하는 데 사용할 수 있는 컨트롤을 포함 합니다. 기본 제공 호출기 행 사용자 인터페이스 (UI)를 사용 하는 대신 PagerTemplate 속성을 사용 하 여 UI를 직접 정의할 수 있습니다.      > [!NOTE] > 때 the PagerTemplate 속성이 설정 되어 있으면 기본 제공 호출기 행 UI를 재정의 합니다.       호출기 행에 대 한 사용자 지정 서식 파일을 지정 하려면 먼저 `<PagerTemplate>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> 그런 다음 열기 및 닫기 사이의 서식 파일의 내용을 나열 수 `<PagerTemplate>` 태그입니다. 호출기 행의 모양을 제어는 <xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>속성.</xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>       일반적으로 단추 컨트롤 페이징 작업을 수행 하는 페이저 서식 파일에 추가 됩니다. <xref:System.Web.UI.WebControls.GridView>때 단추 컨트롤을 페이징 작업을 수행 하는 컨트롤의 `CommandName` &quot;페이지&quot;로 설정 하는 속성을 클릭 합니다.</xref:System.Web.UI.WebControls.GridView> 단추의 `CommandArgument` 속성 페이징 수행할 작업 유형을 결정 합니다. 지 원하는 명령 인수 값을 나열 하는 다음 표에 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>      | `CommandArgument` 값 | 설명 |   |-----------------------------|-----------------|   |&quot; 다음 &quot;| 다음 페이지로 이동 합니다. |   |&quot; Prev &quot;| 이전 페이지로 이동 합니다. |   |&quot; 첫 번째 &quot;| 첫 번째 페이지를 탐색 합니다. |   |&quot; 마지막 &quot;| 마지막 페이지를 탐색 합니다. |   | 정수 값 | 지정된 된 페이지 번호를 탐색 합니다. |"
  example:
  - "The following example demonstrates how to create a custom pager template that allows the user to navigate through a <xref:System.Web.UI.WebControls.GridView> control using a <xref:System.Web.UI.WebControls.DropDownList> control.  \n  \n [!code-vb[GridViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1266_1.aspx)]\n [!code-cs[GridViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1266_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> 호출기 행에 대 한 사용자 지정 콘텐츠가 들어 있는입니다. 기본값은 null로,이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.GridView.PagerTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PageSize
  id: PageSize
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PageSize
  nameWithType: GridView.PageSize
  fullName: System.Web.UI.WebControls.GridView.PageSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 있는 페이지에 표시할 레코드 수를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "페이징 기능을 활성화 하는 경우 (설정 하 여는 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>속성을 `true`), PageSize 속성을 사용 하 여 단일 페이지에 표시할 레코드 수를 지정 합니다.</xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>"
  example:
  - "The following example demonstrates how to use the PageSize property to display 15 records at a time in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewPageSize#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1100_1.aspx)]\n [!code-cs[GridViewPageSize#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1100_1.aspx)]"
  syntax:
    content: public virtual int PageSize { get; set; }
    return:
      type: System.Int32
      description: "단일 페이지에 표시할 레코드 수입니다. 기본값은 10입니다."
  overload: System.Web.UI.WebControls.GridView.PageSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "PageSize 속성은 1 보다 작은 값으로 설정 됩니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PerformDataBinding(System.Collections.IEnumerable)
  id: PerformDataBinding(System.Collections.IEnumerable)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PerformDataBinding(IEnumerable)
  nameWithType: GridView.PerformDataBinding(IEnumerable)
  fullName: System.Web.UI.WebControls.GridView.PerformDataBinding(IEnumerable)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정된 된 데이터 소스에 바인딩하는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "PerformDataBinding 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.GridView>컨트롤을 컨트롤에 지정된 된 데이터 소스를 바인딩할.</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected override void PerformDataBinding (System.Collections.IEnumerable data);
    parameters:
    - id: data
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>데이터 원본이 들어 있는.</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.GridView.PerformDataBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.PrepareControlHierarchy
  id: PrepareControlHierarchy
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: PrepareControlHierarchy()
  nameWithType: GridView.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.GridView.PrepareControlHierarchy()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤 계층 구조를 설정합니다."
  remarks: "이 메서드를 사용 하 여에 대 한 컨트롤 계층 구조를 설정할 수는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 확장 하려면이 메서드는 주로 컨트롤 개발자가는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual void PrepareControlHierarchy ();
    parameters: []
  overload: System.Web.UI.WebControls.GridView.PrepareControlHierarchy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RaiseCallbackEvent(System.String)
  id: RaiseCallbackEvent(System.String)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RaiseCallbackEvent(String)
  nameWithType: GridView.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.GridView.RaiseCallbackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "콜백 처리기에 대 한 인수를 만듭니다는 <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference*>메서드.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference*>"
  remarks: "RaiseCallbackEvent 메서드는에서 사용 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.GridView>컨트롤 콜백 처리기에 대 한 인수를 만드는 데는 <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>메서드.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual void RaiseCallbackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "이벤트 처리기에 전달할 인수입니다."
  overload: System.Web.UI.WebControls.GridView.RaiseCallbackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: GridView.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.GridView.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 적절 한 이벤트를 발생 시키는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 서버에 다시 게시 될 때 제어 합니다."
  remarks: "페이지 호출은 <xref:System.Web.UI.Page.RaisePostBackEvent%2A>포스트백 이벤트가 발생 하는 방법에 대 한 적절 한 이벤트를 발생 한 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.Page.RaisePostBackEvent%2A> 로드 및 변경 내용 알림 작업이 완료 된 후 있지만 사전 렌더링이 발생 하기 전에 페이지 수명 주기에서이 호출이 발생 합니다. 만들려면이 메서드는 구현 된 <xref:System.Web.UI.WebControls.CommandEventArgs>발생 하는 이벤트에 대 한 개체입니다.</xref:System.Web.UI.WebControls.CommandEventArgs>      > [!NOTE] > 확장 하려면이 메서드는 주로 컨트롤 개발자가는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "이벤트 인수를 만들려는 <xref href=&quot;System.Web.UI.WebControls.CommandEventArgs&quot;> </xref> 발생 하는 이벤트 또는 이벤트입니다."
  overload: System.Web.UI.WebControls.GridView.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: GridView.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.GridView.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "웹 서버 컨트롤 콘텐츠를 사용 하 여 지정 된 클라이언트의 브라우저 렌더링 <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> 개체입니다."
  remarks: "Render 메서드는 사용 하 여 지정 된 클라이언트의 브라우저에 서버 컨트롤 콘텐츠를 렌더링 하는 데 <xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName>개체입니다.</xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName>      > [!NOTE] > 확장 하려면이 메서드는 주로 컨트롤 개발자가는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> 클라이언트의 브라우저에서 서버 컨트롤 콘텐츠를 렌더링 하는 데 사용 합니다."
  overload: System.Web.UI.WebControls.GridView.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowCancelingEdit
  id: RowCancelingEdit
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowCancelingEdit
  nameWithType: GridView.RowCancelingEdit
  fullName: System.Web.UI.WebControls.GridView.RowCancelingEdit
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "편집 모드에 있는 행의 취소 단추를 클릭할 때 행 편집 모드를 종료 전에 발생 합니다."
  remarks: "편집 모드에 있는 행의 취소 단추를 클릭할 때 RowCancelingEdit 이벤트가 발생 하지만 행 종료 되기 전에 편집 모드입니다. 따라서이 경우 행 원치 않는 상태가이 이벤트가 발생할 때마다 취소 작업을 중지 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       A <xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs>개체는 현재 행의 인덱스를 확인 하 고 취소 작업을 중지 해야 함을 나타내기 위해 사용할 수 있는 이벤트 처리 메서드에 전달 됩니다.</xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs> 취소 작업을 중지 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>의 속성은 <xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs>개체를 `true`.</xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to use the RowCancelingEdit event to display a cancellation message when the user cancels the update operation of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewRowCancellingEdit#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_3_1.aspx)]\n [!code-vb[GridViewRowCancellingEdit#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_3_1.aspx)]  \n  \n The following example demonstrates how to use the RowCancelingEdit event to cancel the update operation when the data source is set programmatically.  \n  \n [!code-cs[GridViewRowEditing#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_3_2.aspx)]\n [!code-vb[GridViewRowEditing#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_3_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewCancelEditEventHandler RowCancelingEdit;
    return:
      type: System.Web.UI.WebControls.GridViewCancelEditEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowCommand
  id: RowCommand
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowCommand
  nameWithType: GridView.RowCommand
  fullName: System.Web.UI.WebControls.GridView.RowCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 단추를 클릭할 때 발생 한 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "에 단추를 클릭할 때 RowCommand 이벤트 발생는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> 따라서이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       내에서 단추는 <xref:System.Web.UI.WebControls.GridView>컨트롤 컨트롤의 기본 기능 중 일부를 호출할 수도 있습니다.</xref:System.Web.UI.WebControls.GridView> 이러한 작업 중 하나를 수행 하려면 설정는 `CommandName` 다음 표에 있는 값 중 하나에 있는 단추의 속성입니다.      | `CommandName` 값 | 설명 |   |-------------------------|-----------------|   |&quot; 취소 &quot;| 편집 작업을 취소 하 고 반환 된 <xref:System.Web.UI.WebControls.GridView>컨트롤을 읽기 전용 모드로.</xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>이벤트를 발생 시킵니다. |   |&quot; 삭제 &quot;| 현재 레코드를 삭제 합니다.</xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> <xref:System.Web.UI.WebControls.GridView.RowDeleting>발생 및 <xref:System.Web.UI.WebControls.GridView.RowDeleted>이벤트입니다. |   |&quot; 편집 &quot;| 현재 레코드를 편집 모드로 전환 합니다.</xref:System.Web.UI.WebControls.GridView.RowDeleted> </xref:System.Web.UI.WebControls.GridView.RowDeleting> <xref:System.Web.UI.WebControls.GridView.RowEditing>이벤트를 발생 시킵니다. |   |&quot; 페이지 &quot;| 페이징 작업을 수행 합니다.</xref:System.Web.UI.WebControls.GridView.RowEditing> 설정의 `CommandArgument` 단추 &quot;First&quot;, &quot;마지막&quot;를, &quot;다음&quot;, &quot;이전&quot; 또는 페이징 작업의 형식을 지정 하는 페이지 번호를 수행 하려면의 속성입니다. <xref:System.Web.UI.WebControls.GridView.PageIndexChanging>발생 및 <xref:System.Web.UI.WebControls.GridView.PageIndexChanged>이벤트입니다. |   |&quot; 선택 &quot;| 현재 레코드를 선택 합니다.</xref:System.Web.UI.WebControls.GridView.PageIndexChanged> </xref:System.Web.UI.WebControls.GridView.PageIndexChanging> <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>발생 및 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>이벤트입니다. |   |&quot; 정렬 &quot;| 정렬 된 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> </xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging> <xref:System.Web.UI.WebControls.GridView.Sorting>발생 및 <xref:System.Web.UI.WebControls.GridView.Sorted>이벤트입니다. |   |&quot; 업데이트 &quot;| 데이터 소스에서 현재 레코드를 업데이트 합니다.</xref:System.Web.UI.WebControls.GridView.Sorted> </xref:System.Web.UI.WebControls.GridView.Sorting> <xref:System.Web.UI.WebControls.GridView.RowUpdating>발생 및 <xref:System.Web.UI.WebControls.GridView.RowUpdated>이벤트입니다. |       위의 표에 나열 된 단추를 클릭할 때 RowCommand 이벤트가 발생 하지만 것이 좋습니다 작업에 대 한 테이블에 나열 된 이벤트를 사용 하는.</xref:System.Web.UI.WebControls.GridView.RowUpdated> </xref:System.Web.UI.WebControls.GridView.RowUpdating>       A <xref:System.Web.UI.WebControls.GridViewCommandEventArgs>개체 명령 이름 및 단추 클릭의 명령 인수를 확인할 수 있습니다 하는 이벤트 처리 메서드에 전달 됩니다.</xref:System.Web.UI.WebControls.GridViewCommandEventArgs>      > [!NOTE] > 이벤트를 발생 하는 행의 인덱스를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>이벤트에 전달 되는 이벤트 인수의 속성.</xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> <xref:System.Web.UI.WebControls.ButtonField>클래스를 자동으로 채우려고는 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>적절 한 인덱스 값을 갖는 속성입니다.</xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> </xref:System.Web.UI.WebControls.ButtonField> 다른 명령 단추의 수동으로 설정 해야는 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>명령 단추의 속성.</xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 예를 들어, 설정할 수는 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>를 `<%# Container.DataItemIndex %>` 때는 <xref:System.Web.UI.WebControls.GridView>컨트롤에 없는 페이징을 사용 합니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.Button.CommandArgument%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191882).  \n  \n The following example demonstrates how to use the RowCommand event to add the name of a customer from a <xref:System.Web.UI.WebControls.GridView> control to a <xref:System.Web.UI.WebControls.ListBox> control when a row's Add button is clicked.  \n  \n [!code-cs[GridViewRowCommmand#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_121_1.aspx)]\n [!code-vb[GridViewRowCommmand#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_121_1.aspx)]  \n  \n The following example demonstrates how to use the RowCommand event to update the price of a product when a row's button is clicked. This example has the paging functionality enabled for the <xref:System.Web.UI.WebControls.GridView> control and sets the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property of the <xref:System.Web.UI.WebControls.Button> control to the appropriate row index.  \n  \n [!code-cs[GridViewRowCommmand#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_121_2.aspx)]\n [!code-vb[GridViewRowCommmand#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_121_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewCommandEventHandler RowCommand;
    return:
      type: System.Web.UI.WebControls.GridViewCommandEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowCreated
  id: RowCreated
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowCreated
  nameWithType: GridView.RowCreated
  fullName: System.Web.UI.WebControls.GridView.RowCreated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "행을 만들 때 발생 한 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "전에 <xref:System.Web.UI.WebControls.GridView>컨트롤을 렌더링 한 <xref:System.Web.UI.WebControls.GridViewRow>컨트롤의 각 행에 대 한 개체를 생성 해야 합니다.</xref:System.Web.UI.WebControls.GridViewRow> </xref:System.Web.UI.WebControls.GridView> RowCreated 이벤트가 발생할 때의 각 행의 <xref:System.Web.UI.WebControls.GridView>컨트롤이 만들어집니다.</xref:System.Web.UI.WebControls.GridView> 따라서이 이벤트가 발생할 때마다 행, 사용자 지정 콘텐츠를 추가 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       A <xref:System.Web.UI.WebControls.GridViewRowEventArgs>개체 만들고 행의 속성에 액세스할 수 있도록 하는 이벤트 처리 메서드에 전달 됩니다.</xref:System.Web.UI.WebControls.GridViewRowEventArgs> 행에서 특정 셀에 액세스 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.TableRow.Cells%2A>의 속성은 <xref:System.Web.UI.WebControls.GridViewRowEventArgs>개체입니다.</xref:System.Web.UI.WebControls.GridViewRowEventArgs> </xref:System.Web.UI.WebControls.TableRow.Cells%2A> 사용 하 여 만들고 있는 행 형식 (머리글 행, 데이터 행 및 등)은 확인할 수 있습니다는 <xref:System.Web.UI.WebControls.GridViewRow.RowType%2A>속성.</xref:System.Web.UI.WebControls.GridViewRow.RowType%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to use the RowCreated event to store the index of the row being created in the <xref:System.Web.UI.WebControls.LinkButton.CommandArgument%2A> property of a <xref:System.Web.UI.WebControls.LinkButton> control contained in the row. This enables you to determine the index of the row that contains the <xref:System.Web.UI.WebControls.LinkButton> control when the user clicked the button.  \n  \n [!code-vb[GridViewRowCreated#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_98_1.aspx)]\n [!code-cs[GridViewRowCreated#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_98_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewRowEventHandler RowCreated;
    return:
      type: System.Web.UI.WebControls.GridViewRowEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowDataBound
  id: RowDataBound
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowDataBound
  nameWithType: GridView.RowDataBound
  fullName: System.Web.UI.WebControls.GridView.RowDataBound
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 행의 데이터에 바인딩되어 있을 때 발생 한 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "전에 <xref:System.Web.UI.WebControls.GridView>컨트롤이 렌더링 될 수, 데이터 원본에서 레코드를 컨트롤의 각 행을 연결 해야 합니다.</xref:System.Web.UI.WebControls.GridView> 데이터 행 RowDataBound 이벤트가 발생 (으로 표시는 <xref:System.Web.UI.WebControls.GridViewRow>개체)에서 데이터에 바인딩되는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridViewRow> 따라서이 이벤트가 발생할 때마다 해당 행에 바인딩된 데이터의 값을 수정 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       A <xref:System.Web.UI.WebControls.GridViewRowEventArgs>개체에 바인딩되는 행의 속성에 액세스할 수 있는 이벤트 처리 메서드에 전달 됩니다.</xref:System.Web.UI.WebControls.GridViewRowEventArgs> 행에서 특정 셀에 액세스 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.TableRow.Cells%2A>속성은 <xref:System.Web.UI.WebControls.GridViewRow>에 포함 된 개체는 <xref:System.Web.UI.WebControls.GridViewRowEventArgs.Row%2A>속성은 <xref:System.Web.UI.WebControls.GridViewRowEventArgs>개체.</xref:System.Web.UI.WebControls.GridViewRowEventArgs> </xref:System.Web.UI.WebControls.GridViewRowEventArgs.Row%2A> </xref:System.Web.UI.WebControls.GridViewRow> </xref:System.Web.UI.WebControls.TableRow.Cells%2A> 사용 하 여 바인딩된 되 고 있는 행 형식 (머리글 행, 데이터 행 및 등)을 확인할 수 있습니다는 <xref:System.Web.UI.WebControls.GridViewRow.RowType%2A>속성.</xref:System.Web.UI.WebControls.GridViewRow.RowType%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191882).  \n  \n The following example demonstrates how to use the RowDataBound event to modify the value of a field in the data source before it is displayed in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewRowDataBound#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_141_1.aspx)]\n [!code-vb[GridViewRowDataBound#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_141_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewRowEventHandler RowDataBound;
    return:
      type: System.Web.UI.WebControls.GridViewRowEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowDeleted
  id: RowDeleted
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowDeleted
  nameWithType: GridView.RowDeleted
  fullName: System.Web.UI.WebControls.GridView.RowDeleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "행의 삭제 단추를 클릭 하면 후 발생는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 컨트롤이 행을 삭제 합니다."
  remarks: "행의 삭제 단추를 클릭 하면 후 RowDeleted 이벤트가 발생 된 <xref:System.Web.UI.WebControls.GridView>컨트롤이 행을 삭제 합니다.</xref:System.Web.UI.WebControls.GridView> 따라서이 이벤트가 발생할 때마다 삭제 작업의 결과 확인 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       A <xref:System.Web.UI.WebControls.GridViewDeletedEventArgs>개체 발생할 수 있는 모든 예외와 영향을 받는 행 수를 확인할 수 있는 이벤트 처리 메서드에 전달 됩니다.</xref:System.Web.UI.WebControls.GridViewDeletedEventArgs> 설정 하 여 이벤트 처리 메서드에서 예외가 처리 되었는지 여부를 나타낼 수도 있습니다는 <xref:System.Web.UI.WebControls.GridViewDeletedEventArgs.ExceptionHandled%2A>의 속성은 <xref:System.Web.UI.WebControls.GridViewDeletedEventArgs>개체입니다.</xref:System.Web.UI.WebControls.GridViewDeletedEventArgs> </xref:System.Web.UI.WebControls.GridViewDeletedEventArgs.ExceptionHandled%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to use the RowDeleted event to check the result of the delete operation. A message is displayed to indicate to the user whether the operation succeeded.  \n  \n [!code-cs[GridViewRowDeleted#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_152_1.aspx)]\n [!code-vb[GridViewRowDeleted#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_152_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewDeletedEventHandler RowDeleted;
    return:
      type: System.Web.UI.WebControls.GridViewDeletedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowDeleting
  id: RowDeleting
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowDeleting
  nameWithType: GridView.RowDeleting
  fullName: System.Web.UI.WebControls.GridView.RowDeleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "행의 삭제 단추를 클릭할 때 발생을 하기 전에 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 컨트롤이 행을 삭제 합니다."
  remarks: "RowDeleting 이벤트가 발생 한 행의 삭제 단추를 클릭 하면 하기 전에 <xref:System.Web.UI.WebControls.GridView>컨트롤이 행을 삭제 합니다.</xref:System.Web.UI.WebControls.GridView> 따라서이 이벤트가 발생할 때마다 삭제 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       A <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs>개체는 현재 행의 인덱스를 확인 하 고 삭제 작업을 취소 해야 함을 나타내기 위해 사용할 수 있는 이벤트 처리 메서드에 전달 됩니다.</xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> 삭제 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>의 속성은 <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs>개체를 `true`.</xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 또한는 <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Keys%2A>및 <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Values%2A>컬렉션, 필요한 경우 데이터 소스에 값 전달 되기 전에.</xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Values%2A> </xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Keys%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to use the RowDeleting event to cancel the delete operation. The page contains a <xref:System.Web.UI.WebControls.GridView> control that displays a list of customer names and addresses from the AdventureWorksLT database. When the user clicks the **Delete** link for a row, the handler for the RowDeleting event checks the last name of the person displayed in the row that the user is trying to delete. If the last name is \"Beaver\", the delete operation is canceled, and an error message is displayed. For any other name, the delete operation proceeds and the row is deleted.  \n  \n The event handler uses the <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.RowIndex%2A> property of the <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> object to find the row that the user is trying to delete. The example examines the contents of the <xref:System.Web.UI.WebControls.GridView.Rows%2A> collection. If the value you want to compare to is a key value, you could examine the <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> collection instead.  \n  \n Rows are deleted from the CustomerAddress table instead of the Customer table in order to keep the example simple. The <xref:System.Web.UI.WebControls.GridView> control shows the result of joining three tables: Customer, Address, and CustomerAddress. When a CustomerAddress row is deleted, the corresponding <xref:System.Web.UI.WebControls.GridView> row disappears. Referential integrity constraints would make the code for an example that actually deletes rows from the Customer table more complex.  \n  \n For information about how to set up the AdventureWorksLT database, see [How to: Set Up an AdventureWorksLT Sample Database for ASP.NET Development](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[GridViewRowDeleting#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_24_1.aspx)]\n [!code-cs[GridViewRowDeleting#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_24_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewDeleteEventHandler RowDeleting;
    return:
      type: System.Web.UI.WebControls.GridViewDeleteEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowEditing
  id: RowEditing
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowEditing
  nameWithType: GridView.RowEditing
  fullName: System.Web.UI.WebControls.GridView.RowEditing
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "행의 편집 단추를 클릭할 때 발생을 하기 전에 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 컨트롤이 편집 모드로 전환 합니다."
  remarks: "RowEditing 이벤트가 발생 한 행의 편집 단추를 클릭 하면 하기 전에 <xref:System.Web.UI.WebControls.GridView>컨트롤이 편집 모드로 전환 합니다.</xref:System.Web.UI.WebControls.GridView> 따라서이 이벤트가 발생할 때마다 편집 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       A <xref:System.Web.UI.WebControls.GridViewEditEventArgs>개체는 현재 행의 인덱스를 확인 하 고 편집 작업을 취소 해야 함을 나타내기 위해 사용할 수 있는 이벤트 처리 메서드에 전달 됩니다.</xref:System.Web.UI.WebControls.GridViewEditEventArgs> 편집 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>의 속성은 <xref:System.Web.UI.WebControls.GridViewEditEventArgs>개체를 `true`.</xref:System.Web.UI.WebControls.GridViewEditEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to use the RowEditing event to put a row in edit mode when the data source is set programmatically.  \n  \n [!code-cs[GridViewRowEditing#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_133_1.aspx)]\n [!code-vb[GridViewRowEditing#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_133_1.aspx)]  \n  \n The following example demonstrates how to use the RowEditing event to cancel the editing operation if the user attempts to edit the record for a company in the United States.  \n  \n [!code-vb[GridViewRowEditing#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_133_2.aspx)]\n [!code-cs[GridViewRowEditing#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_133_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewEditEventHandler RowEditing;
    return:
      type: System.Web.UI.WebControls.GridViewEditEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowHeaderColumn
  id: RowHeaderColumn
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowHeaderColumn
  nameWithType: GridView.RowHeaderColumn
  fullName: System.Web.UI.WebControls.GridView.RowHeaderColumn
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "열 머리글에 대 한으로 사용할 열의 이름을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다. 이 속성은 컨트롤의 보조 기술 장치가 사용자에 게 더욱 쉽게 이용할 수 있도록 제공 됩니다."
  remarks: "Html에서 테이블의 머리글 행 또는 열과 함께 연결할 수 있습니다. 방향을 설정 하 여 지정 된 `scope` 특성에는 `<th>` 요소. <xref:System.Web.UI.WebControls.GridView>컨트롤을 설정 하 여 표시 될 수 있는 기본 제공 머리글 행에는 <xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>속성을 `true`.</xref:System.Web.UI.WebControls.GridView.ShowHeader%2A> </xref:System.Web.UI.WebControls.GridView> 머리글 열을 선택적으로 지정할 수 있습니다 (일반적으로 첫 번째 또는 마지막 열에는 <xref:System.Web.UI.WebControls.GridView>컨트롤)이이 속성을 설정 하 여.</xref:System.Web.UI.WebControls.GridView> 지정 된 필드 이름에 해당 하는 열의 모든 셀으로 렌더링 됩니다이 속성이 설정 된 경우 `<th scope=&quot;row&quot;>` 요소입니다.      > [!NOTE] > 헤더를 지정된 된 열의 처리 되는 <xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>, <xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>, 및 <xref:System.Web.UI.WebControls.GridView.UseAccessibleHeader%2A>속성은 header 열에 적용 되지 않습니다.</xref:System.Web.UI.WebControls.GridView.UseAccessibleHeader%2A> </xref:System.Web.UI.WebControls.GridView.ShowHeader%2A> </xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>       기본 렌더링은 `<th>` 굵게 및 가운데 맞춤으로 텍스트를 가로로 렌더링 요소가 유지 됩니다. 개발자의 동작을 재정의할 수는 `<th>` 는 연계를 사용 하 여 스타일 시트입니다.      > [!NOTE] > 바인딩된 필드에만이 속성이 작동 합니다. 서식 파일 필드와 함께 작동 하지 않습니다."
  example:
  - "The following example demonstrates how to use the RowHeaderColumn property to display a header column in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewRowHeaderColumn#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_213_1.aspx)]\n [!code-cs[GridViewRowHeaderColumn#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_213_1.aspx)]"
  syntax:
    content: public virtual string RowHeaderColumn { get; set; }
    return:
      type: System.String
      description: "열 머리글로 사용할 열의 이름입니다. 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.GridView.RowHeaderColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.Rows
  id: Rows
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: Rows
  nameWithType: GridView.Rows
  fullName: System.Web.UI.WebControls.GridView.Rows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컬렉션을 가져옵니다 <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref> 데이터 행을 나타내는 개체는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "행 속성 (컬렉션)의 데이터 행을 저장을 사용 하는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.GridView>컨트롤을 만들어서 행 컬렉션을 자동으로 채웁니다는 <xref:System.Web.UI.WebControls.GridViewRow>개체 데이터 소스에 있는 각 레코드에 대 한 한 다음 컬렉션에 각 개체를 추가 합니다.</xref:System.Web.UI.WebControls.GridViewRow> </xref:System.Web.UI.WebControls.GridView> 이 속성은 컨트롤의 특정 행에 액세스 하거나 행의 전체 컬렉션을 반복에 일반적으로 사용 됩니다.      > [!NOTE] > 행만 자신의 <xref:System.Web.UI.WebControls.GridViewRow.RowType%2A>속성이로 설정 `DataControlRowType.DataRow` 행 컬렉션에 저장 됩니다.</xref:System.Web.UI.WebControls.GridViewRow.RowType%2A> <xref:System.Web.UI.WebControls.GridViewRow>머리글, 바닥글 및 호출기 행을 나타내는 개체 컬렉션에 포함 되지 않습니다.</xref:System.Web.UI.WebControls.GridViewRow>"
  example:
  - "The following example demonstrates how to use the Rows collection to access the row being edited in a <xref:System.Web.UI.WebControls.GridView> control. After a row is updated, a message is displayed to indicate that the update was successful.  \n  \n [!code-cs[GridViewRows#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_233_1.aspx)]\n [!code-vb[GridViewRows#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_233_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridViewRowCollection Rows { get; }
    return:
      type: System.Web.UI.WebControls.GridViewRowCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRowCollection&quot;> </xref> 의 모든 데이터 행을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.GridView.Rows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowStyle
  id: RowStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowStyle
  nameWithType: GridView.RowStyle
  fullName: System.Web.UI.WebControls.GridView.RowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 데이터 행에 표시 되는 모양을 설정할 수 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "RowStyle 속성을 사용 하 여에 데이터 행의 모양을 제어 하는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> 경우는 <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>RowStyle 설정 사이 교대로 반복 되는 데이터 행을 표시할을 속성 설정 및 <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>설정.</xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> </xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle>개체를 반환 합니다.</xref:System.Web.UI.WebControls.TableItemStyle> 선언적으로 다음 방법 중 하나를 사용 하는 속성을 설정할 수 있습니다:-의 여는 태그에 특성을 배치는 <xref:System.Web.UI.WebControls.GridView>폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle>개체 (예를 들어 `RowStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.GridView>      -중첩 된 `<RowStyle>` 여는 태그와 닫는 태그 사이 요소는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>       양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `RowStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다."
  example:
  - "The following example demonstrates how to use the RowStyle property to declaratively define the style for the item rows in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewRowStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_996_1.aspx)]\n [!code-cs[GridViewRowStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_996_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 에 데이터 행의 스타일을 나타내는 한 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.GridView.RowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowUpdated
  id: RowUpdated
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowUpdated
  nameWithType: GridView.RowUpdated
  fullName: System.Web.UI.WebControls.GridView.RowUpdated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "행의 업데이트 단추를 클릭 하면 후 발생는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 컨트롤이 행을 업데이트 합니다."
  remarks: "행의 업데이트 단추를 클릭 하면 후 RowUpdated 이벤트 발생는 <xref:System.Web.UI.WebControls.GridView>컨트롤이 행을 업데이트 합니다.</xref:System.Web.UI.WebControls.GridView> 따라서이 이벤트가 발생할 때마다 업데이트 작업의 결과 확인 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       A <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs>개체 발생할 수 있는 모든 예외와 영향을 받는 행 수를 확인할 수 있는 이벤트 처리 메서드에 전달 됩니다.</xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> 설정 하 여 이벤트 처리 메서드에서 예외가 처리 되었는지 여부를 나타낼 수도 있습니다는 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A>의 속성은 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs>개체입니다.</xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> </xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to use the RowUpdated event to check the result of the update operation. A message is displayed to indicate to the user whether the operation succeeded.  \n  \n [!code-vb[GridViewRowUpdated#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_146_1.aspx)]\n [!code-cs[GridViewRowUpdated#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_146_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewUpdatedEventHandler RowUpdated;
    return:
      type: System.Web.UI.WebControls.GridViewUpdatedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.RowUpdating
  id: RowUpdating
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: RowUpdating
  nameWithType: GridView.RowUpdating
  fullName: System.Web.UI.WebControls.GridView.RowUpdating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "행의 업데이트 단추를 클릭할 때 발생을 하기 전에 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 컨트롤이 행을 업데이트 합니다."
  remarks: "RowUpdating 이벤트가 발생 한 행의 업데이트 단추를 클릭 하면 하기 전에 <xref:System.Web.UI.WebControls.GridView>컨트롤이 행을 업데이트 합니다.</xref:System.Web.UI.WebControls.GridView> 따라서이 이벤트가 발생할 때마다 업데이트 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       A <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs>개체는 현재 행의 인덱스를 확인 하 고 업데이트 작업을 취소 해야 함을 나타내기 위해 사용할 수 있는 이벤트 처리 메서드에 전달 됩니다.</xref:System.Web.UI.WebControls.GridViewUpdateEventArgs> 업데이트 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>의 속성은 <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs>개체를 `true`.</xref:System.Web.UI.WebControls.GridViewUpdateEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 조작할 수도 있습니다는 <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A>, <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A>, 및 <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A>컬렉션, 필요한 경우 데이터 소스에 값 전달 되기 전에.</xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A> </xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A> </xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A> 이러한 컬렉션을 사용 하는 일반적인 방법은 데이터 원본에 저장 되기 전에 사용자가 제공 하는 값을 HTML 인코딩하려면입니다. 이렇게 하면 스크립트 삽입 공격을 방지 합니다.      > [!NOTE] >는 <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A>, <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A>및 <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A>컬렉션으로 자동 채워집니다 경우에만 <xref:System.Web.UI.WebControls.GridView>제어를 사용 하 여 데이터에 바인딩되는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A>속성.</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A> </xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A> </xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to use the RowUpdating event to update the values in the data source object when the data source is set programmatically.  \n  \n [!code-cs[GridViewRowEditing#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_52_1.aspx)]\n [!code-vb[GridViewRowEditing#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_52_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewUpdateEventHandler RowUpdating;
    return:
      type: System.Web.UI.WebControls.GridViewUpdateEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: GridView.SaveControlState()
  fullName: System.Web.UI.WebControls.GridView.SaveControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 있는 속성의 상태를 저장는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 경우에 유지 해야 하는 컨트롤의 &lt;xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName&gt; 속성이로 설정 되어 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "에 속성의 상태를 저장 하려면이 메서드는는 <xref:System.Web.UI.WebControls.GridView>경우에 유지 해야 하는 컨트롤의 <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName>속성이 `false`.</xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 확장 하려면이 메서드는 주로 컨트롤 개발자가는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected override object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "서버 컨트롤 현재 뷰 상태를 반환합니다. 컨트롤과 연결 된 뷰 상태가 없으면이 메서드가 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.GridView.SaveControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: GridView.SaveViewState()
  fullName: System.Web.UI.WebControls.GridView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이전에 저장 된 뷰 상태를 로드는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt; 컨트롤에 대 한 저장 된 뷰 상태 값이 들어 있는입니다."
  overload: System.Web.UI.WebControls.GridView.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SelectedDataKey
  id: SelectedDataKey
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SelectedDataKey
  nameWithType: GridView.SelectedDataKey
  fullName: System.Web.UI.WebControls.GridView.SelectedDataKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataKey&quot;> </xref> 에서 선택한 행에 대 한 데이터 키 값을 포함 하는 개체는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "경우는 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>속성이 설정 되어는 <xref:System.Web.UI.WebControls.GridView>컨트롤 자동으로 만듭니다는 <xref:System.Web.UI.WebControls.DataKey>값 또는 지정 된 필드 또는 필드의 값을 사용 하 여 컨트롤의 각 행에 대 한 개체입니다.</xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> <xref:System.Web.UI.WebControls.DataKey>개체를 컨트롤의 추가 됩니다 <xref:System.Web.UI.WebControls.GridView.DataKeys%2A>컬렉션.</xref:System.Web.UI.WebControls.GridView.DataKeys%2A> </xref:System.Web.UI.WebControls.DataKey> 일반적으로 <xref:System.Web.UI.WebControls.GridView.DataKeys%2A>속성 검색을 사용 하 여 <xref:System.Web.UI.WebControls.DataKey>의 특정 데이터 행에 대 한 개체는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.GridView.DataKeys%2A> 방금 하는 경우를 검색 해야 하는 반면는 <xref:System.Web.UI.WebControls.DataKey>개체의 현재 선택 된 행을 간단히으로 사용할 수 있습니다 SelectedDataKey 속성 바로 가기를.</xref:System.Web.UI.WebControls.DataKey>      > [!NOTE] > 검색 하는 것 같습니다는 <xref:System.Web.UI.WebControls.DataKey>로 지정 된 인덱스에 개체는 <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>속성은 <xref:System.Web.UI.WebControls.GridView.DataKeys%2A>컬렉션.</xref:System.Web.UI.WebControls.GridView.DataKeys%2A> </xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> </xref:System.Web.UI.WebControls.DataKey> 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>속성을 현재 선택 된 행에 대 한 데이터 키 값을 직접 검색.</xref:System.Web.UI.WebControls.GridView.SelectedValue%2A>       만드는 경우는 <xref:System.Web.UI.WebControls.ControlParameter>개체 및의 인덱싱된 SelectedDataKey 속성을 사용 하 여 첫 번째 필드 이외의 키 필드에 액세스 하려면는 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>의 속성은 <xref:System.Web.UI.WebControls.ControlParameter>개체.</xref:System.Web.UI.WebControls.ControlParameter> </xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> </xref:System.Web.UI.WebControls.ControlParameter> 예는 다음과 같습니다."
  example:
  - "The following example demonstrates how to use the SelectedDataKey property to determine the data key value of the selected row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewSelectedDataKey#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_93_1.aspx)]\n [!code-vb[GridViewSelectedDataKey#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_93_1.aspx)]  \n  \n The following example demonstrates how to use the second key field as a parameter in a master/detail scenario. A <xref:System.Web.UI.WebControls.GridView> control is used to display records from the Order Details table of the Northwind database. When a record is selected in the <xref:System.Web.UI.WebControls.GridView> control, the details of the product from the Products table are displayed in a <xref:System.Web.UI.WebControls.DetailsView> control. ProductID is the second key name in the <xref:System.Web.UI.WebControls.GridView> control. To access the second key, the value of GridView1.SelectedDataKey[1] is used as the <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> for the <xref:System.Web.UI.WebControls.ControlParameter> object of the <xref:System.Web.UI.WebControls.SqlDataSource> control of the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-cs[GridViewSelectedDataKeyIndex#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_93_2.aspx)]\n [!code-vb[GridViewSelectedDataKeyIndex#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_93_2.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataKey SelectedDataKey { get; }
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "<xref href=&quot;System.Web.UI.WebControls.DataKey&quot;> </xref> 에서 선택한 행에 대 한 한 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 현재 선택은 행이 없음을 나타냅니다."
  overload: System.Web.UI.WebControls.GridView.SelectedDataKey*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "에 지정 된 데이터 키의 <xref:System.Web.UI.WebControls.GridView.DataKeyNames*>속성.</xref:System.Web.UI.WebControls.GridView.DataKeyNames*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SelectedIndex
  id: SelectedIndex
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SelectedIndex
  nameWithType: GridView.SelectedIndex
  fullName: System.Web.UI.WebControls.GridView.SelectedIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "선택한 행의 인덱스를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "SelectedIndex 속성을 사용 하 여에서 현재 선택 된 행의 인덱스를 결정 하는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> 또한 프로그래밍 방식으로 컨트롤의 행을 선택 하려면이 속성을 사용할 수 있습니다. 행의 선택을 지우려면이 속성을-1로 설정 합니다. 사용 하 여 현재 선택 된 행의 모양을 사용자 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A>속성.</xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A> 현재 선택 된 행에 액세스 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.SelectedRow%2A>속성.</xref:System.Web.UI.WebControls.GridView.SelectedRow%2A>"
  example:
  - "The following example demonstrates how to use the SelectedIndex property to select the second row in a <xref:System.Web.UI.WebControls.GridView> control when the control is initially displayed.  \n  \n [!code-cs[GridViewSelect#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_806_1.aspx)]\n [!code-vb[GridViewSelect#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_806_1.aspx)]"
  syntax:
    content: public virtual int SelectedIndex { get; set; }
    return:
      type: System.Int32
      description: "선택한 행의&0;부터 시작 인덱스는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다. 기본값은-1로, 현재 선택 된 행이 없음을 나타냅니다."
  overload: System.Web.UI.WebControls.GridView.SelectedIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "SelectedIndex 속성은-1 보다 작은 값으로 설정 됩니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SelectedIndexChanged
  id: SelectedIndexChanged
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SelectedIndexChanged
  nameWithType: GridView.SelectedIndexChanged
  fullName: System.Web.UI.WebControls.GridView.SelectedIndexChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "행의 선택 단추를 클릭 하면 후 발생는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> select 작업을 처리 합니다."
  remarks: "행의 선택 단추를 클릭 하면 후 SelectedIndexChanged 이벤트가 발생 된 <xref:System.Web.UI.WebControls.GridView>select 작업을 처리 합니다.</xref:System.Web.UI.WebControls.GridView> 따라서이 이벤트가 발생할 때마다 상태 레이블을 현재 선택 된 행으로 업데이트 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to use the SelectedIndexChanged event to display the name of the customer in the selected row of the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewSelect#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_150_1.aspx)]\n [!code-vb[GridViewSelect#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_150_1.aspx)]"
  syntax:
    content: public event EventHandler SelectedIndexChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SelectedIndexChanging
  id: SelectedIndexChanging
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SelectedIndexChanging
  nameWithType: GridView.SelectedIndexChanging
  fullName: System.Web.UI.WebControls.GridView.SelectedIndexChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "행의 선택 단추를 클릭할 때 발생을 하기 전에 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> select 작업을 처리 합니다."
  remarks: "SelectedIndexChanging 이벤트가 발생 한 행의 선택 단추를 클릭 하면 하기 전에 <xref:System.Web.UI.WebControls.GridView>select 작업을 처리 합니다.</xref:System.Web.UI.WebControls.GridView> 따라서이 이벤트가 발생할 때마다 선택 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.      > [!NOTE] > 프로그래밍 방식으로 설정 하는 경우이 이벤트가 발생 하지 않습니다는 <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>속성.</xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>       A <xref:System.Web.UI.WebControls.GridViewSelectEventArgs>개체는이 통해 사용자가 선택한 행의 인덱스를 확인 하 고 선택 작업을 취소 해야 함을 나타내기 위해 이벤트 처리 메서드에 전달 됩니다.</xref:System.Web.UI.WebControls.GridViewSelectEventArgs> 선택 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>의 속성은 <xref:System.Web.UI.WebControls.GridViewSelectEventArgs>개체를 `true`.</xref:System.Web.UI.WebControls.GridViewSelectEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to use the SelectedIndexChanging event to cancel a select operation.  \n  \n [!code-cs[GridViewSelect#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_37_1.aspx)]\n [!code-vb[GridViewSelect#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_37_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewSelectEventHandler SelectedIndexChanging;
    return:
      type: System.Web.UI.WebControls.GridViewSelectEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SelectedPersistedDataKey
  id: SelectedPersistedDataKey
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SelectedPersistedDataKey
  nameWithType: GridView.SelectedPersistedDataKey
  fullName: System.Web.UI.WebControls.GridView.SelectedPersistedDataKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "유지 되는 선택한 항목에 대 한 데이터 키 값을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  syntax:
    content: public virtual System.Web.UI.WebControls.DataKey SelectedPersistedDataKey { get; set; }
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "데이터에 유지 되는 선택한 항목에 대 한 키를 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 현재 선택 된 항목이 나타냅니다."
  overload: System.Web.UI.WebControls.GridView.SelectedPersistedDataKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SelectedRow
  id: SelectedRow
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SelectedRow
  nameWithType: GridView.SelectedRow
  fullName: System.Web.UI.WebControls.GridView.SelectedRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref> 컨트롤에서 선택한 행을 나타내는 개체입니다."
  remarks: "행을 선택 하는 경우는 <xref:System.Web.UI.WebControls.GridView>제어, SelectedRow 속성을 사용 하 여 검색 하는 <xref:System.Web.UI.WebControls.GridViewRow>해당 행을 나타내는 개체입니다.</xref:System.Web.UI.WebControls.GridViewRow> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 검색 하는 것 같습니다는 <xref:System.Web.UI.WebControls.GridViewRow>로 지정 된 인덱스에 개체는 <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>속성은 <xref:System.Web.UI.WebControls.GridView.Rows%2A>컬렉션.</xref:System.Web.UI.WebControls.GridView.Rows%2A> </xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> </xref:System.Web.UI.WebControls.GridViewRow>       그런 다음이 개체 선택된 된 행의 속성에 액세스 데 사용할 수 있습니다."
  example:
  - "The following example demonstrates how to use the SelectedRow property to access the properties of the <xref:System.Web.UI.WebControls.GridViewRow> object that represents the selected row in the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewSelect#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_482_1.aspx)]\n [!code-vb[GridViewSelect#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_482_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridViewRow SelectedRow { get; }
    return:
      type: System.Web.UI.WebControls.GridViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref> 컨트롤에서 선택한 행을 나타내는입니다."
  overload: System.Web.UI.WebControls.GridView.SelectedRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SelectedRowStyle
  id: SelectedRowStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SelectedRowStyle
  nameWithType: GridView.SelectedRowStyle
  fullName: System.Web.UI.WebControls.GridView.SelectedRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 에서 선택한 행의 표시 되는 모양을 설정할 수 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "선택한 행의 모양을 제어 SelectedRowStyle 속성을 사용 하 여 한 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle>개체를 반환 합니다.</xref:System.Web.UI.WebControls.TableItemStyle> 선언적으로 다음 방법 중 하나를 사용 하는 속성을 설정할 수 있습니다:-의 여는 태그에 특성을 배치는 <xref:System.Web.UI.WebControls.GridView>폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle>개체 (예를 들어 `SelectedRowStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.GridView>      -중첩 된 `<SelectedRowStyle>` 여는 태그와 닫는 태그 사이 요소는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>       양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `SelectedRowStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다."
  example:
  - "The following example demonstrates how to use the SelectedRowStyle property to define a custom style for the selected row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewSelect#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_603_1.aspx)]\n [!code-vb[GridViewSelect#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_603_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle SelectedRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 에서 선택한 행의 스타일을 나타내는 한 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.GridView.SelectedRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SelectedValue
  id: SelectedValue
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SelectedValue
  nameWithType: GridView.SelectedValue
  fullName: System.Web.UI.WebControls.GridView.SelectedValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "선택한 행의 데이터 키 값을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "경우는 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>속성이 데이터 원본의 기본 키를 나타내는 필드 이름의 쉼표로 구분 된 목록으로 설정 되어는 <xref:System.Web.UI.WebControls.GridView>컨트롤 자동으로 만듭니다는 <xref:System.Web.UI.WebControls.DataKey>값 또는 지정 된 필드 또는 필드의 값을 사용 하 여 컨트롤의 각 행에 대 한 개체입니다.</xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> <xref:System.Web.UI.WebControls.DataKey>개체를 컨트롤의 추가 됩니다 <xref:System.Web.UI.WebControls.GridView.DataKeys%2A>컬렉션.</xref:System.Web.UI.WebControls.GridView.DataKeys%2A> </xref:System.Web.UI.WebControls.DataKey> 일반적으로 <xref:System.Web.UI.WebControls.GridView.DataKeys%2A>속성 검색을 사용 하 여 <xref:System.Web.UI.WebControls.DataKey>의 특정 데이터 행에 대 한 개체는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.GridView.DataKeys%2A> 방금 하는 경우를 검색 해야 하는 반면는 <xref:System.Web.UI.WebControls.DataKey>개체의 현재 선택 된 행을 사용 하면는 <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>가기로 속성.</xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> </xref:System.Web.UI.WebControls.DataKey> 보다 손쉽게 SelectedValue 속성을 사용 하 여 선택된 된 행의 첫 번째 키 필드의 데이터 키 값을 직접 확인할 수 있습니다.       만들려는 경우 한 <xref:System.Web.UI.WebControls.ControlParameter>개체를 첫 번째 필드를 사용 하 여 이외의 키 필드에 액세스 하는 <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>속성.</xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> </xref:System.Web.UI.WebControls.ControlParameter> 예를 들어 <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>.</xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> 을 참조 하십시오."
  example:
  - "The following example demonstrates how to use the SelectedValue property to determine the data key value of the selected row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewSelectedValue#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_553_1.aspx)]\n [!code-vb[GridViewSelectedValue#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_553_1.aspx)]"
  syntax:
    content: public object SelectedValue { get; }
    return:
      type: System.Object
      description: "데이터에서 선택한 행의 값을 키는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.GridView.SelectedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SelectRow(System.Int32)
  id: SelectRow(System.Int32)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SelectRow(Int32)
  nameWithType: GridView.SelectRow(Int32)
  fullName: System.Web.UI.WebControls.GridView.SelectRow(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "행에서 편집을 선택는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "이 메서드는 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>이벤트.</xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>"
  syntax:
    content: public void SelectRow (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "편집할 행의 인덱스입니다."
  overload: System.Web.UI.WebControls.GridView.SelectRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SetEditRow(System.Int32)
  id: SetEditRow(System.Int32)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SetEditRow(Int32)
  nameWithType: GridView.SetEditRow(Int32)
  fullName: System.Web.UI.WebControls.GridView.SetEditRow(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "행에서 편집 모드로 전환 되어 한 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 지정된 된 행 인덱스를 사용 하 여 제어 합니다."
  remarks: "이 메서드는 <xref:System.Web.UI.WebControls.GridView.RowEditing>이벤트.</xref:System.Web.UI.WebControls.GridView.RowEditing>"
  syntax:
    content: public void SetEditRow (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "편집할 행의 인덱스입니다."
  overload: System.Web.UI.WebControls.GridView.SetEditRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SetPageIndex(System.Int32)
  id: SetPageIndex(System.Int32)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SetPageIndex(Int32)
  nameWithType: GridView.SetPageIndex(Int32)
  fullName: System.Web.UI.WebControls.GridView.SetPageIndex(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "설정의 페이지 인덱스가 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 행 인덱스를 사용 하 여 제어 합니다."
  remarks: "이 메서드는 <xref:System.Web.UI.WebControls.GridView.PageIndexChanged>이벤트.</xref:System.Web.UI.WebControls.GridView.PageIndexChanged>"
  syntax:
    content: public void SetPageIndex (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "페이지를 편집에 있는 행의 인덱스입니다."
  overload: System.Web.UI.WebControls.GridView.SetPageIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.ShowFooter
  id: ShowFooter
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: ShowFooter
  nameWithType: GridView.ShowFooter
  fullName: System.Web.UI.WebControls.GridView.ShowFooter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "바닥글 행에 표시 되는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "ShowFooter 속성을 사용 하 여 지정할 수 있는지 여부를 <xref:System.Web.UI.WebControls.GridView>컨트롤의 바닥글 행을 표시 합니다.</xref:System.Web.UI.WebControls.GridView> 바닥글 행의 모양을 제어는 <xref:System.Web.UI.WebControls.GridView.FooterStyle%2A>속성.</xref:System.Web.UI.WebControls.GridView.FooterStyle%2A>"
  example:
  - "The following example demonstrates how to use the ShowFooter property to display the footer row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewShowHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1216_1.aspx)]\n [!code-vb[GridViewShowHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1216_1.aspx)]"
  syntax:
    content: public virtual bool ShowFooter { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>바닥글 행을 표시 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.GridView.ShowFooter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.ShowHeader
  id: ShowHeader
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: ShowHeader
  nameWithType: GridView.ShowHeader
  fullName: System.Web.UI.WebControls.GridView.ShowHeader
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "머리글 행에 표시 되는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "ShowHeader 속성을 사용 하 여 지정할 수 있는지 여부를 <xref:System.Web.UI.WebControls.GridView>컨트롤의 머리글 행을 표시 합니다.</xref:System.Web.UI.WebControls.GridView> 머리글 행의 모양을 제어는 <xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>속성.</xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>"
  example:
  - "The following example demonstrates how to use the ShowHeader property to display the header row in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[GridViewShowHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_292_1.aspx)]\n [!code-vb[GridViewShowHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_292_1.aspx)]"
  syntax:
    content: public virtual bool ShowHeader { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>머리글 행을 표시 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.GridView.ShowHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty
  id: ShowHeaderWhenEmpty
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: ShowHeaderWhenEmpty
  nameWithType: GridView.ShowHeaderWhenEmpty
  fullName: System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져오거나 설정 합니다. 있는지 여부를에 열 머리글의 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 열에 데이터가 없는 컨트롤은 표시 됩니다."
  syntax:
    content: public virtual bool ShowHeaderWhenEmpty { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>머리글 표시 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)
  id: Sort(System.String,System.Web.UI.WebControls.SortDirection)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: Sort(String,SortDirection)
  nameWithType: GridView.Sort(String,SortDirection)
  fullName: System.Web.UI.WebControls.GridView.Sort(String,SortDirection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "정렬 된 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 지정 된 정렬 식 및 방향에 따라 제어 합니다."
  remarks: "Sort 메서드를 사용 하 여 프로그래밍 방식으로 정렬 된 <xref:System.Web.UI.WebControls.GridView>지정 된 정렬 식 및 방향을 사용 하 여 제어 합니다.</xref:System.Web.UI.WebControls.GridView> 정렬 식은 열 또는 열을 정렬할을 지정 합니다. 여러 열을 정렬 하려면 필드 이름의 쉼표로 구분 된 목록을 포함 하는 정렬 식을 만듭니다. 정렬 방향을 오름차순 또는 내림차순 정렬 수행 되는지 여부를 나타냅니다. 정렬 해야 하는 경우에 일반적으로이 메서드는는 <xref:System.Web.UI.WebControls.GridView>컨트롤에서 컨트롤 외부와 같은 페이지에서 다른 컨트롤에서.</xref:System.Web.UI.WebControls.GridView> 이 메서드는 또한 일반적으로 사용에 대 한 기본 정렬 순서를 프로그래밍 방식으로 설정 하는 <xref:System.Web.UI.WebControls.GridView>컨트롤은 처음 렌더링할 때.</xref:System.Web.UI.WebControls.GridView> 이 메서드를 호출 발생은 <xref:System.Web.UI.WebControls.GridView.Sorted>및 <xref:System.Web.UI.WebControls.GridView.Sorting>이벤트.</xref:System.Web.UI.WebControls.GridView.Sorting> </xref:System.Web.UI.WebControls.GridView.Sorted>"
  example:
  - "The following example demonstrates how to use the Sort method to programmatically sort the <xref:System.Web.UI.WebControls.GridView> control by multiple columns.  \n  \n [!code-cs[GridViewSort#1](~/add/codesnippet/csharp/73688195-5df0-44a7-842d-_1.aspx)]\n [!code-vb[GridViewSort#1](~/add/codesnippet/visualbasic/73688195-5df0-44a7-842d-_1.aspx)]"
  syntax:
    content: public virtual void Sort (string sortExpression, System.Web.UI.WebControls.SortDirection sortDirection);
    parameters:
    - id: sortExpression
      type: System.String
      description: "정렬에 사용 되는 정렬 식의 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
    - id: sortDirection
      type: System.Web.UI.WebControls.SortDirection
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.SortDirection&quot;> </xref> 값입니다."
  overload: System.Web.UI.WebControls.GridView.Sort*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 컨트롤이 데이터 소스 제어에 바인딩되어 있지만 <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> 연결 된 소스는 데이터와 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SortDirection
  id: SortDirection
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SortDirection
  nameWithType: GridView.SortDirection
  fullName: System.Web.UI.WebControls.GridView.SortDirection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "정렬 하 고 열의 정렬 방향을 가져옵니다."
  remarks: "오름차순 또는 내림차순 정렬 하 고 열이 정렬 되어 있는지 여부를 확인 하려면 SortDirection 속성을 사용 합니다.      > [!NOTE] >는 <xref:System.Web.UI.WebControls.GridView>컨트롤에 자동으로이 속성을 설정 하는 기본 제공 정렬 기능.</xref:System.Web.UI.WebControls.GridView> 정렬 방향을 또는 경우에 사용자 지정 정렬 기능을 추가 하는 프로그래밍 방식으로 결정 해야 하는 경우에이 속성은 일반적으로 사용 됩니다는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>"
  example:
  - "The following example demonstrates how to use the SortDirection property to programmatically determine the sort direction of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewFooterRow#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_871_1.aspx)]\n [!code-cs[GridViewFooterRow#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_871_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.SortDirection SortDirection { get; }
    return:
      type: System.Web.UI.WebControls.SortDirection
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.SortDirection&quot;> </xref> 값입니다. 기본값은 <xref uid=&quot;langword_csharp_SortDirection.Ascending&quot; name=&quot;SortDirection.Ascending&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.GridView.SortDirection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.Sorted
  id: Sorted
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: Sorted
  nameWithType: GridView.Sorted
  fullName: System.Web.UI.WebControls.GridView.Sorted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "열 정렬에 대 한 하이퍼링크를 클릭 하면 후 발생는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 컨트롤이 정렬 작업을 처리 합니다."
  remarks: "열 정렬에 대 한 하이퍼링크를 클릭 하면 후 Sorted 이벤트가 발생 된 <xref:System.Web.UI.WebControls.GridView>컨트롤이 정렬 작업을 처리 합니다.</xref:System.Web.UI.WebControls.GridView> 이렇게 하면이 이벤트가 발생할 때마다 사용자 지정 정렬 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to use the Sorted event to display the name of the column being sorted.  \n  \n [!code-vb[GridViewSorting#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_149_1.aspx)]\n [!code-cs[GridViewSorting#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_149_1.aspx)]"
  syntax:
    content: public event EventHandler Sorted;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SortedAscendingCellStyle
  id: SortedAscendingCellStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SortedAscendingCellStyle
  nameWithType: GridView.SortedAscendingCellStyle
  fullName: System.Web.UI.WebControls.GridView.SortedAscendingCellStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 CSS 스타일을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 열이 오름차순으로 정렬 될 때 열입니다."
  remarks: "이 속성이로 설정 된 경우 `true`, 데이터를 오름차순 정렬 될 때 열에는 셀에 스타일 적용 됩니다. 예를 들어, 오름차순 정렬 때 열을 특정 색으로 강조 표시할 수 있습니다."
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle SortedAscendingCellStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>스타일에 적용 된 경우는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 하면 열이 고, 그렇지 않으면 오름차순 정렬 된 제어 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.GridView.SortedAscendingCellStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle
  id: SortedAscendingHeaderStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SortedAscendingHeaderStyle
  nameWithType: GridView.SortedAscendingHeaderStyle
  fullName: System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 적용할 CSS 스타일을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 열이 오름차순으로 정렬 하는 경우 열 머리글입니다."
  remarks: "이 속성이로 설정 된 경우 `true`, 열 머리글에 정렬 방향을 나타내는 화살표로 표시 됩니다."
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle SortedAscendingHeaderStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>스타일에 적용 된 경우는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 열이 고, 그렇지 않으면 오름차순 정렬 된 경우 제목 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SortedDescendingCellStyle
  id: SortedDescendingCellStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SortedDescendingCellStyle
  nameWithType: GridView.SortedDescendingCellStyle
  fullName: System.Web.UI.WebControls.GridView.SortedDescendingCellStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "스타일을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 열이 내림차순으로 정렬 될 때 열입니다."
  remarks: "이 속성이로 설정 된 경우 `true`, 데이터 내림차순으로 정렬 될 열에는 셀에 스타일 적용 됩니다. 예를 들어 내림차순 정렬 때 열을 특정 색으로 강조 표시할 수 있습니다."
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle SortedDescendingCellStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>스타일에 적용 된 경우는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 열이 고, 그렇지 않으면 내림차순 정렬 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.GridView.SortedDescendingCellStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle
  id: SortedDescendingHeaderStyle
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SortedDescendingHeaderStyle
  nameWithType: GridView.SortedDescendingHeaderStyle
  fullName: System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 적용할 스타일을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 열이 내림차순으로 정렬 하는 경우 열 머리글입니다."
  remarks: "이 속성이로 설정 된 경우 `true`, 열 머리글에 정렬 방향을 나타내는 화살표로 표시 됩니다."
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle SortedDescendingHeaderStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>스타일에 적용 된 경우는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 열이 고, 그렇지 않으면 내림차순 정렬 된 경우 제목 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.SortExpression
  id: SortExpression
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: SortExpression
  nameWithType: GridView.SortExpression
  fullName: System.Web.UI.WebControls.GridView.SortExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "열 또는 정렬 하 고 관련 된 정렬 식을 가져옵니다."
  remarks: "SortExpression 속성을 사용 하 여 열과 정렬 하 고 관련 된 정렬 식을 결정 합니다.      > [!NOTE] >는 <xref:System.Web.UI.WebControls.GridView>컨트롤에 자동으로이 속성을 설정 하는 기본 제공 정렬 기능.</xref:System.Web.UI.WebControls.GridView> 이 속성은 일반적으로 프로그래밍 방식으로 정렬 하 고 열을 결정 하는 경우에 사용 됩니다 또는 사용자 고유의 사용자 지정 정렬 기능을 추가할는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>       여러 열을 정렬 하는 경우이 속성 필드를 정렬할 쉼표로 구분 된 목록이 들어 있습니다."
  example:
  - "The following example demonstrates how to use the SortExpression property to determine the name of the column being sorted.  \n  \n [!code-cs[GridViewAllowSortingColumns#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_14_1.aspx)]\n [!code-vb[GridViewAllowSortingColumns#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_14_1.aspx)]"
  syntax:
    content: public virtual string SortExpression { get; }
    return:
      type: System.String
      description: "열 또는 정렬 하 고 관련 된 정렬 식입니다."
  overload: System.Web.UI.WebControls.GridView.SortExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.Sorting
  id: Sorting
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: Sorting
  nameWithType: GridView.Sorting
  fullName: System.Web.UI.WebControls.GridView.Sorting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "열 정렬에 대 한 하이퍼링크를 클릭할 때 발생을 하기 전에 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 컨트롤이 정렬 작업을 처리 합니다."
  remarks: "열 정렬에 대 한 하이퍼링크를 클릭 하면 하기 전에 Sorting 이벤트 발생는 <xref:System.Web.UI.WebControls.GridView>컨트롤이 정렬 작업을 처리 합니다.</xref:System.Web.UI.WebControls.GridView> 따라서이 이벤트가 발생할 때마다 정렬 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       A <xref:System.Web.UI.WebControls.GridViewSortEventArgs>개체 열에 대 한 정렬 식을 확인 하 고 선택 작업을 취소 해야 함을 나타내기 위해 사용할 수 있는 이벤트 처리 메서드에 전달 됩니다.</xref:System.Web.UI.WebControls.GridViewSortEventArgs> 선택 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>의 속성은 <xref:System.Web.UI.WebControls.GridViewSortEventArgs>개체를 `true`.</xref:System.Web.UI.WebControls.GridViewSortEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       프로그래밍 방식으로 정렬 작업을 시작 하는 방법에 대 한 정보를 참조 하십시오.는 <xref:System.Web.UI.WebControls.GridView.Sort%2A>메서드.</xref:System.Web.UI.WebControls.GridView.Sort%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to use the Sorting event to perform the sorting functionality when the <xref:System.Web.UI.WebControls.GridView> control is bound to a <xref:System.Data.DataTable> object by setting the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> property programmatically.  \n  \n [!code-cs[GridViewSorting#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_126_1.aspx)]\n [!code-vb[GridViewSorting#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_126_1.aspx)]  \n  \n The following example demonstrates how to use the Sorting event to cancel a sorting operation.  \n  \n [!code-vb[GridViewSorting#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_126_2.aspx)]\n [!code-cs[GridViewSorting#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_126_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.GridViewSortEventHandler Sorting;
    return:
      type: System.Web.UI.WebControls.GridViewSortEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#GetCallbackResult
  id: System#Web#UI#ICallbackEventHandler#GetCallbackResult
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  nameWithType: GridView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤을 대상으로 하는 콜백 이벤트의 결과 반환 합니다."
  remarks: "<xref:System.Web.UI.WebControls.GridView>구현 제어는 <xref:System.Web.UI.ICallbackEventHandler>사용 하 여 인터페이스는 <xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A>비동기적으로 데이터를 검색 하 고 <xref:System.Web.UI.WebControls.GridView.GetCallbackResult%2A>컨트롤에 검색된 된 데이터를 반환 하는 메서드.</xref:System.Web.UI.WebControls.GridView.GetCallbackResult%2A> </xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A> </xref:System.Web.UI.ICallbackEventHandler> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: string ICallbackEventHandler.GetCallbackResult ();
    parameters: []
    return:
      type: System.String
      description: "콜백 결과입니다."
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#GetCallbackResult*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  id: System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  nameWithType: GridView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "콜백 처리기에 대 한 인수를 만듭니다는 <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference*>메서드.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference*>"
  remarks: "ICallbackEventHandler.RaiseCallbackEvent는에서 사용 되는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.GridView>컨트롤 콜백 처리기에 대 한 인수를 만드는 데는 <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>메서드.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "이벤트 처리기에 전달할 인수입니다."
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys
  id: System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys
  nameWithType: GridView.System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ASP.NET을 생성할 때 데이터 바인딩된 컨트롤의 각 인스턴스를 고유 하 게 식별 하는 데 사용 되는 데이터 값을 가져옵니다는 <xref:System.Web.UI.Control.ClientID*>값.</xref:System.Web.UI.Control.ClientID*>"
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.GridView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.IDataKeysControl>인터페이스.</xref:System.Web.UI.IDataKeysControl> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: System.Web.UI.WebControls.DataKeyArray System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys { get; }
    return:
      type: System.Web.UI.WebControls.DataKeyArray
      description: "ASP.NET을 생성할 때 데이터 바인딩된 컨트롤의 각 인스턴스를 고유 하 게 식별 하는 데 사용 되는 데이터 값은 <xref:System.Web.UI.Control.ClientID*>값.</xref:System.Web.UI.Control.ClientID*>"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: GridView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 적절 한 이벤트를 발생 시키는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 서버에 다시 게시 될 때 제어 합니다."
  remarks: "페이지 호출은 <xref:System.Web.UI.Page.RaisePostBackEvent%2A>에 대 한 적절 한 이벤트를 발생 시키는 포스트백 이벤트가 발생할 경우 메서드는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.Page.RaisePostBackEvent%2A> 로드 및 변경 내용 알림 작업이 완료 된 후 있지만 사전 렌더링이 발생 하기 전에 페이지 수명 주기에서이 호출이 발생 합니다. 만들려면이 메서드는 구현 된 <xref:System.Web.UI.WebControls.CommandEventArgs>발생 하는 이벤트에 대 한 개체입니다.</xref:System.Web.UI.WebControls.CommandEventArgs>      > [!NOTE] > 확장 하려면이 메서드는 주로 컨트롤 개발자가는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "이벤트 인수를 만들려는 <xref href=&quot;System.Web.UI.WebControls.CommandEventArgs&quot;> </xref> 발생 하는 이벤트 또는 이벤트입니다."
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  id: System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  nameWithType: GridView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "정렬 작업을 수행 하는 단추에 대 한 콜백 스크립트를 만듭니다."
  remarks: "ICallbackContainer.GetCallbackScript는에서 사용 되는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.GridView>정렬 작업을 수행 하는 단추에 대 한 콜백 스크립트를 만들 수 있습니다.</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: string ICallbackContainer.GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);
    parameters:
    - id: buttonControl
      type: System.Web.UI.WebControls.IButtonControl
      description: "콜백 스크립트를 만드는 단추 컨트롤입니다."
    - id: argument
      type: System.String
      description: "콜백 스크립트에 전달할 인수입니다."
    return:
      type: System.String
      description: "정렬 작업을 수행 하는 단추에 대 한 콜백 스크립트입니다."
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  id: System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 바인딩된 컨트롤에 표시 된 항목에 대 한 기본 키 필드의 이름을 가져오거나 설정 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.GridView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IDataBoundControl>인터페이스.</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.GridView>       이 속성에 대 한 액세스를 제공는 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>의 속성은 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> 통해 노출 되는 <xref:System.Web.UI.WebControls.IDataBoundControl>인터페이스.</xref:System.Web.UI.WebControls.IDataBoundControl>       ASP.NET Dynamic Data이이 속성을 지원합니다."
  syntax:
    content: string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }
    return:
      type: System.String[]
      description: "배열에 표시 되는 항목에 대 한 기본 키 필드의 이름을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  id: System#Web#UI#WebControls#IDataBoundControl#DataMember
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 바인딩된 컨트롤에 바인딩할 데이터 소스 컨트롤에 의해 노출 되는 테이블을 가져오거나 설정 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.GridView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IDataBoundControl>인터페이스.</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.GridView>       데이터 소스에 여러 데이터 소스를 포함 하는 경우 특정 데이터 테이블, 컬렉션 또는 기타 데이터 컨트롤을 바인딩할를 설정 하려면이 속성을 사용 합니다. 예를 들어 데이터 소스는 <xref:System.Data.DataSet>인스턴스 여러 테이블이 포함 된이 속성을 사용 하 여 컨트롤을 바인딩할 테이블을 지정할 수 있습니다.</xref:System.Data.DataSet>       ASP.NET Dynamic Data이이 속성을 지원합니다."
  syntax:
    content: string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }
    return:
      type: System.String
      description: "데이터 바인딩된 컨트롤에 바인딩할 데이터 소스 컨트롤에 의해 노출 되는 테이블입니다."
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataMember*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  id: System#Web#UI#WebControls#IDataBoundControl#DataSource
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 바인딩된 컨트롤에서 데이터 항목의 목록을 검색할 데이터 원본 개체를 가져오거나 설정 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.GridView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IDataBoundControl>인터페이스.</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.GridView>       ASP.NET Dynamic Data이이 속성을 지원합니다."
  syntax:
    content: object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }
    return:
      type: System.Object
      description: "데이터 바인딩된 컨트롤을 사용 하는 데이터 원본 개체입니다."
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  id: System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 바인딩된 컨트롤에서 데이터 항목의 목록을 검색할 데이터 원본의 ID를 가져오거나 설정 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.GridView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IDataBoundControl>인터페이스.</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.GridView>       ASP.NET Dynamic Data이이 속성을 지원합니다."
  syntax:
    content: string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }
    return:
      type: System.String
      description: "데이터 바인딩된 컨트롤에서 데이터 항목을 검색할 데이터 원본의 ID입니다."
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  id: System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 바인딩된 컨트롤에서 데이터 항목의 목록을 검색할 데이터 원본 개체를 가져오거나 설정 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.GridView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IDataBoundControl>인터페이스.</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.GridView>       ASP.NET Dynamic Data이이 속성을 지원합니다."
  syntax:
    content: System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }
    return:
      type: System.Web.UI.IDataSource
      description: "데이터 바인딩된 컨트롤에서 데이터 항목의 목록을 검색할 데이터 원본 개체"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix
  id: System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "해당 값에 추가 됩니다 데이터 필드의 이름을 가져오거나 설정 합니다.는 <xref:System.Web.UI.Control.ClientID*>속성 값을 데이터 바인딩된 컨트롤의 각 인스턴스를 고유 하 게 식별 합니다.</xref:System.Web.UI.Control.ClientID*>"
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.GridView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IDataBoundListControl>인터페이스.</xref:System.Web.UI.WebControls.IDataBoundListControl> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: string[] System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix { get; set; }
    return:
      type: System.String[]
      description: "해당 값은 ASP.NET을 생성할 때 데이터 바인딩된 컨트롤의 각 인스턴스를 고유 하 게 식별 하 사용 되는 데이터 필드의 이름이 고 <xref:System.Web.UI.Control.ClientID*>값.</xref:System.Web.UI.Control.ClientID*>"
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys
  id: System#Web#UI#WebControls#IDataBoundListControl#DataKeys
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundListControl.DataKeys
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.DataKeys
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.DataKeys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 개체의 컬렉션을 가져옵니다는 <xref:System.Web.UI.WebControls.GridView.DataKeys*>데이터 바인딩된 컨트롤의 값입니다.</xref:System.Web.UI.WebControls.GridView.DataKeys*>"
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.GridView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IDataBoundListControl>인터페이스.</xref:System.Web.UI.WebControls.IDataBoundListControl> </xref:System.Web.UI.WebControls.GridView>       ASP.NET Dynamic Data이이 속성을 지원합니다."
  syntax:
    content: System.Web.UI.WebControls.DataKeyArray System.Web.UI.WebControls.IDataBoundListControl.DataKeys { get; }
    return:
      type: System.Web.UI.WebControls.DataKeyArray
      description: "데이터 바인딩된 컨트롤의 각 행의 데이터 키가 포함 된 배열입니다."
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection
  id: System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "인덱스 또는 데이터 키 값 행의 선택을 기반으로 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.GridView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IDataBoundListControl>인터페이스.</xref:System.Web.UI.WebControls.IDataBoundListControl> </xref:System.Web.UI.WebControls.GridView>       ASP.NET Dynamic Data이이 속성을 지원합니다."
  syntax:
    content: bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>행 선택 값을 기반으로 데이터 키; 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey
  id: System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 바인딩된 컨트롤에서 선택한 행에 대 한 데이터 키 값을 포함 하는 개체를 가져옵니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.GridView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IDataBoundListControl>인터페이스.</xref:System.Web.UI.WebControls.IDataBoundListControl> </xref:System.Web.UI.WebControls.GridView>       ASP.NET Dynamic Data이이 속성을 지원합니다."
  syntax:
    content: System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey { get; }
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "선택한 행의 데이터 키 값입니다."
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex
  id: System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 바인딩된 컨트롤에서 선택한 행의 인덱스를 가져오거나 설정 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.GridView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IDataBoundListControl>인터페이스.</xref:System.Web.UI.WebControls.IDataBoundListControl> </xref:System.Web.UI.WebControls.GridView>       ASP.NET Dynamic Data이이 속성을 지원합니다."
  syntax:
    content: int System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex { get; set; }
    return:
      type: System.Int32
      description: "데이터 바인딩된 컨트롤에서 선택한 행의 인덱스입니다."
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator
  id: System#Web#UI#WebControls#IFieldControl#FieldsGenerator
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  nameWithType: GridView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ASP.NET 동적 데이터에서 사용 하기 위해 데이터 바인딩된 컨트롤에 대 한 열을 자동으로 생성 하는 컨트롤을 가져오거나 설정 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.GridView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IFieldControl>인터페이스.</xref:System.Web.UI.WebControls.IFieldControl> </xref:System.Web.UI.WebControls.GridView>       ASP.NET Dynamic Data이이 속성을 지원합니다."
  syntax:
    content: System.Web.UI.IAutoFieldGenerator System.Web.UI.WebControls.IFieldControl.FieldsGenerator { get; set; }
    return:
      type: System.Web.UI.IAutoFieldGenerator
      description: "데이터 바인딩된 컨트롤에 대 한 열을 자동으로 생성 하는 컨트롤입니다."
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPersistedSelector#DataKey
  id: System#Web#UI#WebControls#IPersistedSelector#DataKey
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IPersistedSelector.DataKey
  nameWithType: GridView.System.Web.UI.WebControls.IPersistedSelector.DataKey
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IPersistedSelector.DataKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Web.UI.WebControls.IPersistedSelector.DataKey%2A?displayProperty=fullName&gt;합니다."
  remarks: "선택한 행을 지정할 수 있습니다 때 유지 되는 <xref:System.Web.UI.WebControls.GridView>컨트롤은 페이징 모드.</xref:System.Web.UI.WebControls.GridView> 기본적으로 행 선택은 행 인덱스를 기반으로 합니다. 같은 행 (예를 들어 셋째 행)는 각 페이지에서 선택 됩니다. 또는 선택한 행의 데이터 키에 따라 지 속성을 사용할 수 있습니다. 이 경우 3 페이지 1에 행을 선택 하는 경우 2 페이지로 이동 하면 행이 2 페이지에서 선택 됩니다. 1 페이지로 다시 이동 하면 행 3이 여전히 선택 합니다. 이 기능을 설정 하려면이 속성을 설정 `true`합니다.      > [!NOTE] > 버전 2.0, 3.0 및 3.5의 ASP.NET에서는 행 선택 된 행 인덱스에 대해서만 기반으로 합니다. 기본적으로 ASP.NET 4의 행 선택은 이전 버전과 호환성에 대 한 인덱스를 기반으로 합니다."
  syntax:
    content: System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IPersistedSelector.DataKey { get; set; }
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "지속형된 데이터 바인딩된 컨트롤에서 선택한 레코드에 대 한 데이터 키 값입니다."
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPersistedSelector#DataKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  id: System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  isEii: true
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  nameWithType: GridView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "만듭니다는 <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> 지정된 된 단추 컨트롤의 포스트백 동작을 나타내는 개체입니다."
  syntax:
    content: System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);
    parameters:
    - id: buttonControl
      type: System.Web.UI.WebControls.IButtonControl
      description: "콜백 스크립트를 만드는 단추 컨트롤입니다."
    return:
      type: System.Web.UI.PostBackOptions
      description: "A <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> 지정된 된 단추 컨트롤의 포스트백 동작을 나타내는입니다."
  overload: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> buttonControl </code> 매개 변수에 포함 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>buttonControl</code>유효성 검사는 고 유효성을 검사 하는 동일한 컨테이너에 다시 게시 하려고 합니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.TagKey
  id: TagKey
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: TagKey
  nameWithType: GridView.TagKey
  fullName: System.Web.UI.WebControls.GridView.TagKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> 에 대 한 값은 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "TagKey 속성에 대 한 적절 한 HTML 태그를 작성 하기 위한 출력 스트림의 사용 하면는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> 경우는 <xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A>속성이 `true`,이 속성은 반환 `HtmlTextWriterTag.Div`, 그렇지 않으면이 속성은 반환 `HtmlTextWriterTag.Table`.</xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A>"
  syntax:
    content: protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> 에 대 한 값은 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.GridView.TagKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.TopPagerRow
  id: TopPagerRow
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: TopPagerRow
  nameWithType: GridView.TopPagerRow
  fullName: System.Web.UI.WebControls.GridView.TopPagerRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref> 의 상위 호출기 행을 나타내는 개체는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "페이징이 활성화 된 경우 (설정 하 여는 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>속성을 `true`), 호출기 행 이라는 추가 행에 자동으로 표시 되는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 호출기 행 사용자가 다른 페이지로 이동 하도록 허용 하 고 위쪽, 아래쪽 또는 위쪽와 컨트롤의 아래쪽에 표시 될 수 있는 컨트롤을 포함 합니다. 프로그래밍 방식으로 액세스할 TopPagerRow 속성을 사용 하 여는 <xref:System.Web.UI.WebControls.GridViewRow>의 상위 호출기 행을 나타내는 개체는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridViewRow>      > [!NOTE] > The TopPagerRow 속성은 한 후에 사용할 수는 <xref:System.Web.UI.WebControls.GridView>컨트롤의 위쪽 호출기 행을 만듭니다는 <xref:System.Web.UI.WebControls.GridView.RowCreated>이벤트.</xref:System.Web.UI.WebControls.GridView.RowCreated> </xref:System.Web.UI.WebControls.GridView>       이 속성은 일반적으로 프로그래밍 방식으로 조작 위쪽 페이저 행 예를 들어 사용자 지정 내용을 추가 해야 할 때 사용 됩니다. TopPagerRow 속성을 수정 후 수행 해야 합니다는 <xref:System.Web.UI.WebControls.GridView>컨트롤이 렌더링 되 고, 그렇지 않으면 만들어졌으면는 <xref:System.Web.UI.WebControls.GridView>컨트롤에 모든 변경 사항을 덮어씁니다.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView>"
  example:
  - "The following example demonstrates how to use the TopPagerRow property to access the top pager row in a <xref:System.Web.UI.WebControls.GridView> control. The TopPagerRow property is used to retrieve a <xref:System.Web.UI.WebControls.DropDownList> control from the pager row.  \n  \n [!code-vb[GridViewTopPagerRow#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_315_1.aspx)]\n [!code-cs[GridViewTopPagerRow#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_315_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridViewRow TopPagerRow { get; }
    return:
      type: System.Web.UI.WebControls.GridViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.GridViewRow&quot;> </xref> 컨트롤의 위쪽 호출기 행을 나타내는입니다."
  overload: System.Web.UI.WebControls.GridView.TopPagerRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: GridView.TrackViewState()
  fullName: System.Web.UI.WebControls.GridView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "뷰 상태 변경을 추적는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 컨트롤의 저장할 수 있도록 <xref href=&quot;System.Web.UI.StateBag&quot;> </xref> 개체입니다. 이 개체는를 통해 액세스할 수는 &lt;xref:System.Web.UI.Control.ViewState%2A?displayProperty=fullName&gt; 속성입니다."
  remarks: "이 메서드는 컨트롤의 뷰 상태의 일환으로 컨트롤의 변경 내용을 추적 하 고 저장을 시작 하는 시작 위치를 표시 하도록 재정의 됩니다."
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.GridView.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.UpdateMethod
  id: UpdateMethod
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: UpdateMethod
  nameWithType: GridView.UpdateMethod
  fullName: System.Web.UI.WebControls.GridView.UpdateMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터를 업데이트 하기 위해를 호출할 메서드의 이름을 가져오거나 설정 합니다."
  remarks: "데이터 바인딩 방법으로 사용할 모델 바인딩을 사용 하면이 속성을 설정 합니다.       Web Forms 모델 바인딩 사용에 자습서 시리즈를 참조 하십시오. [모델 바인딩 및 Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)합니다."
  syntax:
    content: public virtual string UpdateMethod { get; set; }
    return:
      type: System.String
      description: "메서드의 이름입니다."
  overload: System.Web.UI.WebControls.GridView.UpdateMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.UpdateRow(System.Int32,System.Boolean)
  id: UpdateRow(System.Int32,System.Boolean)
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: UpdateRow(Int32,Boolean)
  nameWithType: GridView.UpdateRow(Int32,Boolean)
  fullName: System.Web.UI.WebControls.GridView.UpdateRow(Int32,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "행의 필드 값을 사용 하 여 지정 된 행 인덱스에 있는 레코드를 업데이트 합니다."
  remarks: "UpdateRow 메서드를 사용 하 여 프로그래밍 방식으로 데이터 원본에 지정 된 인덱스에 있는 레코드를 업데이트 합니다. 외부에서 레코드를 업데이트 해야 하는 경우에 일반적으로이 메서드는는 <xref:System.Web.UI.WebControls.GridView>제어 페이지 내의 다른 컨트롤 처럼.</xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 양방향 데이터 바인딩된 입력된 컨트롤을 포함 하는 행에 대해 또는 현재 편집 모드에 있는 행에 대해서만이 메서드를 호출할 수 있습니다. 양방향 바인딩 식에 대 한 자세한 내용은 참조 [데이터베이스에 바인딩](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)합니다.       업데이트 작업 전의 페이지 유효성 검사를 수행할지 여부를 지정 하려면는 `causesValidation` 매개 변수입니다. 이 메서드를 호출 발생은 <xref:System.Web.UI.WebControls.GridView.RowUpdated>및 <xref:System.Web.UI.WebControls.GridView.RowUpdating>이벤트.</xref:System.Web.UI.WebControls.GridView.RowUpdating> </xref:System.Web.UI.WebControls.GridView.RowUpdated>"
  example:
  - "The following example demonstrates how to use the UpdateRow method to programmatically update a record in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[GridViewUpdateRow#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_0_1.aspx)]\n [!code-cs[GridViewUpdateRow#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_0_1.aspx)]"
  syntax:
    content: public virtual void UpdateRow (int rowIndex, bool causesValidation);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "업데이트할 행의 인덱스입니다."
    - id: causesValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 메서드를 호출할 때는 페이지 유효성 검사를 수행 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.GridView.UpdateRow*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 컨트롤이 데이터 소스 제어에 바인딩되어 있지만 <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> 연결 된 소스는 데이터와 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.UseAccessibleHeader
  id: UseAccessibleHeader
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: UseAccessibleHeader
  nameWithType: GridView.UseAccessibleHeader
  fullName: System.Web.UI.WebControls.GridView.UseAccessibleHeader
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져오거나 여부는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 컨트롤이 머리글 액세스할 수 있는 형식으로 렌더링 합니다. 이 속성은 컨트롤의 보조 기술 장치가 사용자에 게 더욱 쉽게 이용할 수 있도록 제공 됩니다."
  remarks: "UseAccessibleHeader 속성을 사용 하 여 지정할 수 있는지 여부를 <xref:System.Web.UI.WebControls.GridView>컨트롤이 액세스할 수 있는 형식에 해당 머리글 행을 렌더링 합니다.</xref:System.Web.UI.WebControls.GridView> 이 속성은 컨트롤의 보조 기술 장치가 사용자에 게 더욱 쉽게 이용할 수 있도록 제공 됩니다. 기본적으로이 속성의 값은 `true` 컨트롤에 대 한 헤더를 사용 하 여 렌더링 되 고 `<th>` 테이블 머리글 셀 태그입니다. 또한 한 `scope=&quot;col&quot;` 특성이 머리글이 열에 있는 모든 셀에 적용 되도록 지정 하려면 테이블 머리글에 추가 됩니다. 기본 렌더링은 `<th>` 굵게 및 가운데 맞춤으로 텍스트를 가로로 렌더링 요소가 유지 됩니다. 개발자의 스타일을 재정의할 수는 `<th>` 는 연계를 사용 하 여 스타일 시트입니다.       이 속성의 값이 `false`, 컨트롤에 대 한 헤더를 사용 하 여 렌더링 되 `<td>` 테이블 셀 태그입니다."
  example:
  - "The following example demonstrates how to use the UseAccessibleHeader property to disable the accessible header.  \n  \n [!code-vb[GridViewUseAccessibleHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1058_1.aspx)]\n [!code-cs[GridViewUseAccessibleHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1058_1.aspx)]"
  syntax:
    content: public virtual bool UseAccessibleHeader { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 컨트롤이 액세스할 수 있는 형식; 헤더를 렌더링 합니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.GridView.UseAccessibleHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.GridView.VirtualItemCount
  id: VirtualItemCount
  parent: System.Web.UI.WebControls.GridView
  langs:
  - csharp
  name: VirtualItemCount
  nameWithType: GridView.VirtualItemCount
  fullName: System.Web.UI.WebControls.GridView.VirtualItemCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 원본에 있는 가상 항목의 수를 설정 하거나 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 컨트롤에 바인딩된 사용자 지정 페이징을 사용 하는 경우."
  remarks: "이 속성은 사용 경우에만의 값은 <xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A>속성은 `true`.</xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A> 자세한 내용은 참조는 <xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A>속성.</xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A>"
  syntax:
    content: public virtual int VirtualItemCount { get; set; }
    return:
      type: System.Int32
      description: "원본 데이터에 있는 항목의 가상 수는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 컨트롤에 바인딩된 사용자 지정 페이징을 사용 하는 경우."
  overload: System.Web.UI.WebControls.GridView.VirtualItemCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.CompositeDataBoundControl
  isExternal: false
  name: System.Web.UI.WebControls.CompositeDataBoundControl
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.WebControls.GridView.#ctor
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: GridView()
  nameWithType: GridView.GridView()
  fullName: System.Web.UI.WebControls.GridView.GridView()
- uid: System.Web.UI.WebControls.GridView.AllowCustomPaging
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AllowCustomPaging
  nameWithType: GridView.AllowCustomPaging
  fullName: System.Web.UI.WebControls.GridView.AllowCustomPaging
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.GridView.AllowPaging
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AllowPaging
  nameWithType: GridView.AllowPaging
  fullName: System.Web.UI.WebControls.GridView.AllowPaging
- uid: System.Web.UI.WebControls.GridView.AllowSorting
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AllowSorting
  nameWithType: GridView.AllowSorting
  fullName: System.Web.UI.WebControls.GridView.AllowSorting
- uid: System.Web.UI.WebControls.GridView.AlternatingRowStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AlternatingRowStyle
  nameWithType: GridView.AlternatingRowStyle
  fullName: System.Web.UI.WebControls.GridView.AlternatingRowStyle
- uid: System.Web.UI.WebControls.TableItemStyle
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableItemStyle
  nameWithType: TableItemStyle
  fullName: System.Web.UI.WebControls.TableItemStyle
- uid: System.Web.UI.WebControls.GridView.AutoGenerateColumns
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AutoGenerateColumns
  nameWithType: GridView.AutoGenerateColumns
  fullName: System.Web.UI.WebControls.GridView.AutoGenerateColumns
- uid: System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AutoGenerateDeleteButton
  nameWithType: GridView.AutoGenerateDeleteButton
  fullName: System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton
- uid: System.Web.UI.WebControls.GridView.AutoGenerateEditButton
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AutoGenerateEditButton
  nameWithType: GridView.AutoGenerateEditButton
  fullName: System.Web.UI.WebControls.GridView.AutoGenerateEditButton
- uid: System.Web.UI.WebControls.GridView.AutoGenerateSelectButton
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AutoGenerateSelectButton
  nameWithType: GridView.AutoGenerateSelectButton
  fullName: System.Web.UI.WebControls.GridView.AutoGenerateSelectButton
- uid: System.Web.UI.WebControls.GridView.BackImageUrl
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: BackImageUrl
  nameWithType: GridView.BackImageUrl
  fullName: System.Web.UI.WebControls.GridView.BackImageUrl
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.GridView.BottomPagerRow
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: BottomPagerRow
  nameWithType: GridView.BottomPagerRow
  fullName: System.Web.UI.WebControls.GridView.BottomPagerRow
- uid: System.Web.UI.WebControls.GridViewRow
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewRow
  nameWithType: GridViewRow
  fullName: System.Web.UI.WebControls.GridViewRow
- uid: System.Web.UI.WebControls.GridView.Caption
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Caption
  nameWithType: GridView.Caption
  fullName: System.Web.UI.WebControls.GridView.Caption
- uid: System.Web.UI.WebControls.GridView.CaptionAlign
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CaptionAlign
  nameWithType: GridView.CaptionAlign
  fullName: System.Web.UI.WebControls.GridView.CaptionAlign
- uid: System.Web.UI.WebControls.TableCaptionAlign
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableCaptionAlign
  nameWithType: TableCaptionAlign
  fullName: System.Web.UI.WebControls.TableCaptionAlign
- uid: System.Web.UI.WebControls.GridView.CellPadding
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CellPadding
  nameWithType: GridView.CellPadding
  fullName: System.Web.UI.WebControls.GridView.CellPadding
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.GridView.CellSpacing
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CellSpacing
  nameWithType: GridView.CellSpacing
  fullName: System.Web.UI.WebControls.GridView.CellSpacing
- uid: System.Web.UI.WebControls.GridView.ClientIDRowSuffix
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ClientIDRowSuffix
  nameWithType: GridView.ClientIDRowSuffix
  fullName: System.Web.UI.WebControls.GridView.ClientIDRowSuffix
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ClientIDRowSuffixDataKeys
  nameWithType: GridView.ClientIDRowSuffixDataKeys
  fullName: System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys
- uid: System.Web.UI.WebControls.DataKeyArray
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataKeyArray
  nameWithType: DataKeyArray
  fullName: System.Web.UI.WebControls.DataKeyArray
- uid: System.Web.UI.WebControls.GridView.Columns
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Columns
  nameWithType: GridView.Columns
  fullName: System.Web.UI.WebControls.GridView.Columns
- uid: System.Web.UI.WebControls.DataControlFieldCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCollection
  nameWithType: DataControlFieldCollection
  fullName: System.Web.UI.WebControls.DataControlFieldCollection
- uid: System.Web.UI.WebControls.GridView.ColumnsGenerator
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ColumnsGenerator
  nameWithType: GridView.ColumnsGenerator
  fullName: System.Web.UI.WebControls.GridView.ColumnsGenerator
- uid: System.Web.UI.IAutoFieldGenerator
  parent: System.Web.UI
  isExternal: false
  name: IAutoFieldGenerator
  nameWithType: IAutoFieldGenerator
  fullName: System.Web.UI.IAutoFieldGenerator
- uid: System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn(System.Web.UI.WebControls.AutoGeneratedFieldProperties)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateAutoGeneratedColumn(AutoGeneratedFieldProperties)
  nameWithType: GridView.CreateAutoGeneratedColumn(AutoGeneratedFieldProperties)
  fullName: System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn(AutoGeneratedFieldProperties)
- uid: System.Web.UI.WebControls.AutoGeneratedField
  parent: System.Web.UI.WebControls
  isExternal: false
  name: AutoGeneratedField
  nameWithType: AutoGeneratedField
  fullName: System.Web.UI.WebControls.AutoGeneratedField
- uid: System.Web.UI.WebControls.AutoGeneratedFieldProperties
  parent: System.Web.UI.WebControls
  isExternal: false
  name: AutoGeneratedFieldProperties
  nameWithType: AutoGeneratedFieldProperties
  fullName: System.Web.UI.WebControls.AutoGeneratedFieldProperties
- uid: System.Web.UI.WebControls.GridView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateChildControls(IEnumerable,Boolean)
  nameWithType: GridView.CreateChildControls(IEnumerable,Boolean)
  fullName: System.Web.UI.WebControls.GridView.CreateChildControls(IEnumerable,Boolean)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.WebControls.GridView.CreateChildTable
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateChildTable()
  nameWithType: GridView.CreateChildTable()
  fullName: System.Web.UI.WebControls.GridView.CreateChildTable()
- uid: System.Web.UI.WebControls.Table
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Table
  nameWithType: Table
  fullName: System.Web.UI.WebControls.Table
- uid: System.Web.UI.WebControls.GridView.CreateColumns(System.Web.UI.WebControls.PagedDataSource,System.Boolean)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateColumns(PagedDataSource,Boolean)
  nameWithType: GridView.CreateColumns(PagedDataSource,Boolean)
  fullName: System.Web.UI.WebControls.GridView.CreateColumns(PagedDataSource,Boolean)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.WebControls.PagedDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: PagedDataSource
  nameWithType: PagedDataSource
  fullName: System.Web.UI.WebControls.PagedDataSource
- uid: System.Web.UI.WebControls.GridView.CreateControlStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateControlStyle()
  nameWithType: GridView.CreateControlStyle()
  fullName: System.Web.UI.WebControls.GridView.CreateControlStyle()
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateDataSourceSelectArguments()
  nameWithType: GridView.CreateDataSourceSelectArguments()
  fullName: System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments()
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.GridView.CreateRow(System.Int32,System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateRow(Int32,Int32,DataControlRowType,DataControlRowState)
  nameWithType: GridView.CreateRow(Int32,Int32,DataControlRowType,DataControlRowState)
  fullName: System.Web.UI.WebControls.GridView.CreateRow(Int32,Int32,DataControlRowType,DataControlRowState)
- uid: System.Web.UI.WebControls.DataControlRowType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowType
  nameWithType: DataControlRowType
  fullName: System.Web.UI.WebControls.DataControlRowType
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.GridView.DataBind
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DataBind()
  nameWithType: GridView.DataBind()
  fullName: System.Web.UI.WebControls.GridView.DataBind()
- uid: System.Web.UI.WebControls.GridView.DataKeyNames
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DataKeyNames
  nameWithType: GridView.DataKeyNames
  fullName: System.Web.UI.WebControls.GridView.DataKeyNames
- uid: System.Web.UI.WebControls.GridView.DataKeys
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DataKeys
  nameWithType: GridView.DataKeys
  fullName: System.Web.UI.WebControls.GridView.DataKeys
- uid: System.Web.UI.WebControls.GridView.DeleteMethod
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DeleteMethod
  nameWithType: GridView.DeleteMethod
  fullName: System.Web.UI.WebControls.GridView.DeleteMethod
- uid: System.Web.UI.WebControls.GridView.DeleteRow(System.Int32)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DeleteRow(Int32)
  nameWithType: GridView.DeleteRow(Int32)
  fullName: System.Web.UI.WebControls.GridView.DeleteRow(Int32)
- uid: System.Web.UI.WebControls.GridView.EditIndex
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EditIndex
  nameWithType: GridView.EditIndex
  fullName: System.Web.UI.WebControls.GridView.EditIndex
- uid: System.Web.UI.WebControls.GridView.EditRowStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EditRowStyle
  nameWithType: GridView.EditRowStyle
  fullName: System.Web.UI.WebControls.GridView.EditRowStyle
- uid: System.Web.UI.WebControls.GridView.EmptyDataRowStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EmptyDataRowStyle
  nameWithType: GridView.EmptyDataRowStyle
  fullName: System.Web.UI.WebControls.GridView.EmptyDataRowStyle
- uid: System.Web.UI.WebControls.GridView.EmptyDataTemplate
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EmptyDataTemplate
  nameWithType: GridView.EmptyDataTemplate
  fullName: System.Web.UI.WebControls.GridView.EmptyDataTemplate
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.WebControls.GridView.EmptyDataText
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EmptyDataText
  nameWithType: GridView.EmptyDataText
  fullName: System.Web.UI.WebControls.GridView.EmptyDataText
- uid: System.Web.UI.WebControls.GridView.EnableModelValidation
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EnableModelValidation
  nameWithType: GridView.EnableModelValidation
  fullName: System.Web.UI.WebControls.GridView.EnableModelValidation
- uid: System.Web.UI.WebControls.GridView.EnablePersistedSelection
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EnablePersistedSelection
  nameWithType: GridView.EnablePersistedSelection
  fullName: System.Web.UI.WebControls.GridView.EnablePersistedSelection
- uid: System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EnableSortingAndPagingCallbacks
  nameWithType: GridView.EnableSortingAndPagingCallbacks
  fullName: System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks
- uid: System.Web.UI.WebControls.GridView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.GridViewRow,System.Boolean,System.Boolean)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ExtractRowValues(IOrderedDictionary,GridViewRow,Boolean,Boolean)
  nameWithType: GridView.ExtractRowValues(IOrderedDictionary,GridViewRow,Boolean,Boolean)
  fullName: System.Web.UI.WebControls.GridView.ExtractRowValues(IOrderedDictionary,GridViewRow,Boolean,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.GridView.FooterRow
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: FooterRow
  nameWithType: GridView.FooterRow
  fullName: System.Web.UI.WebControls.GridView.FooterRow
- uid: System.Web.UI.WebControls.GridView.FooterStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: FooterStyle
  nameWithType: GridView.FooterStyle
  fullName: System.Web.UI.WebControls.GridView.FooterStyle
- uid: System.Web.UI.WebControls.GridView.GetCallbackResult
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: GetCallbackResult()
  nameWithType: GridView.GetCallbackResult()
  fullName: System.Web.UI.WebControls.GridView.GetCallbackResult()
- uid: System.Web.UI.WebControls.GridView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: GetCallbackScript(IButtonControl,String)
  nameWithType: GridView.GetCallbackScript(IButtonControl,String)
  fullName: System.Web.UI.WebControls.GridView.GetCallbackScript(IButtonControl,String)
- uid: System.Web.UI.WebControls.IButtonControl
  parent: System.Web.UI.WebControls
  isExternal: false
  name: IButtonControl
  nameWithType: IButtonControl
  fullName: System.Web.UI.WebControls.IButtonControl
- uid: System.Web.UI.WebControls.GridView.GridLines
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: GridLines
  nameWithType: GridView.GridLines
  fullName: System.Web.UI.WebControls.GridView.GridLines
- uid: System.Web.UI.WebControls.GridLines
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridLines
  nameWithType: GridLines
  fullName: System.Web.UI.WebControls.GridLines
- uid: System.Web.UI.WebControls.GridView.HeaderRow
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: HeaderRow
  nameWithType: GridView.HeaderRow
  fullName: System.Web.UI.WebControls.GridView.HeaderRow
- uid: System.Web.UI.WebControls.GridView.HeaderStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: HeaderStyle
  nameWithType: GridView.HeaderStyle
  fullName: System.Web.UI.WebControls.GridView.HeaderStyle
- uid: System.Web.UI.WebControls.GridView.HorizontalAlign
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: HorizontalAlign
  nameWithType: GridView.HorizontalAlign
  fullName: System.Web.UI.WebControls.GridView.HorizontalAlign
- uid: System.Web.UI.WebControls.HorizontalAlign
  parent: System.Web.UI.WebControls
  isExternal: false
  name: HorizontalAlign
  nameWithType: HorizontalAlign
  fullName: System.Web.UI.WebControls.HorizontalAlign
- uid: System.Web.UI.WebControls.GridView.InitializePager(System.Web.UI.WebControls.GridViewRow,System.Int32,System.Web.UI.WebControls.PagedDataSource)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: InitializePager(GridViewRow,Int32,PagedDataSource)
  nameWithType: GridView.InitializePager(GridViewRow,Int32,PagedDataSource)
  fullName: System.Web.UI.WebControls.GridView.InitializePager(GridViewRow,Int32,PagedDataSource)
- uid: System.Web.UI.WebControls.GridView.InitializeRow(System.Web.UI.WebControls.GridViewRow,System.Web.UI.WebControls.DataControlField[])
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: InitializeRow(GridViewRow,DataControlField[])
  nameWithType: GridView.InitializeRow(GridViewRow,DataControlField[])
  fullName: System.Web.UI.WebControls.GridView.InitializeRow(GridViewRow,DataControlField[])
- uid: System.Web.UI.WebControls.DataControlField[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlField
  nameWithType: DataControlField
  fullName: System.Web.UI.WebControls.DataControlField[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.DataControlField
    name: DataControlField
    nameWithType: DataControlField
    fullName: DataControlField[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.GridView.IsBindableType(System.Type)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: IsBindableType(Type)
  nameWithType: GridView.IsBindableType(Type)
  fullName: System.Web.UI.WebControls.GridView.IsBindableType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.GridView.LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: GridView.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.GridView.LoadControlState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.GridView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: GridView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.GridView.LoadViewState(Object)
- uid: System.Web.UI.WebControls.GridView.OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: GridView.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnBubbleEvent(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.GridView.OnDataPropertyChanged
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnDataPropertyChanged()
  nameWithType: GridView.OnDataPropertyChanged()
  fullName: System.Web.UI.WebControls.GridView.OnDataPropertyChanged()
- uid: System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnDataSourceViewChanged(Object,EventArgs)
  nameWithType: GridView.OnDataSourceViewChanged(Object,EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(Object,EventArgs)
- uid: System.Web.UI.WebControls.GridView.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: GridView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnInit(EventArgs)
- uid: System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnPageIndexChanged(EventArgs)
  nameWithType: GridView.OnPageIndexChanged(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnPageIndexChanged(EventArgs)
- uid: System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnPageIndexChanging(GridViewPageEventArgs)
  nameWithType: GridView.OnPageIndexChanging(GridViewPageEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnPageIndexChanging(GridViewPageEventArgs)
- uid: System.Web.UI.WebControls.GridViewPageEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewPageEventArgs
  nameWithType: GridViewPageEventArgs
  fullName: System.Web.UI.WebControls.GridViewPageEventArgs
- uid: System.Web.UI.WebControls.GridView.OnPagePreLoad(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnPagePreLoad(Object,EventArgs)
  nameWithType: GridView.OnPagePreLoad(Object,EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnPagePreLoad(Object,EventArgs)
- uid: System.Web.UI.WebControls.GridView.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: GridView.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowCancelingEdit(GridViewCancelEditEventArgs)
  nameWithType: GridView.OnRowCancelingEdit(GridViewCancelEditEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowCancelingEdit(GridViewCancelEditEventArgs)
- uid: System.Web.UI.WebControls.GridViewCancelEditEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewCancelEditEventArgs
  nameWithType: GridViewCancelEditEventArgs
  fullName: System.Web.UI.WebControls.GridViewCancelEditEventArgs
- uid: System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowCommand(GridViewCommandEventArgs)
  nameWithType: GridView.OnRowCommand(GridViewCommandEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowCommand(GridViewCommandEventArgs)
- uid: System.Web.UI.WebControls.GridViewCommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewCommandEventArgs
  nameWithType: GridViewCommandEventArgs
  fullName: System.Web.UI.WebControls.GridViewCommandEventArgs
- uid: System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowCreated(GridViewRowEventArgs)
  nameWithType: GridView.OnRowCreated(GridViewRowEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowCreated(GridViewRowEventArgs)
- uid: System.Web.UI.WebControls.GridViewRowEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewRowEventArgs
  nameWithType: GridViewRowEventArgs
  fullName: System.Web.UI.WebControls.GridViewRowEventArgs
- uid: System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowDataBound(GridViewRowEventArgs)
  nameWithType: GridView.OnRowDataBound(GridViewRowEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowDataBound(GridViewRowEventArgs)
- uid: System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowDeleted(GridViewDeletedEventArgs)
  nameWithType: GridView.OnRowDeleted(GridViewDeletedEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowDeleted(GridViewDeletedEventArgs)
- uid: System.Web.UI.WebControls.GridViewDeletedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewDeletedEventArgs
  nameWithType: GridViewDeletedEventArgs
  fullName: System.Web.UI.WebControls.GridViewDeletedEventArgs
- uid: System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowDeleting(GridViewDeleteEventArgs)
  nameWithType: GridView.OnRowDeleting(GridViewDeleteEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowDeleting(GridViewDeleteEventArgs)
- uid: System.Web.UI.WebControls.GridViewDeleteEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewDeleteEventArgs
  nameWithType: GridViewDeleteEventArgs
  fullName: System.Web.UI.WebControls.GridViewDeleteEventArgs
- uid: System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowEditing(GridViewEditEventArgs)
  nameWithType: GridView.OnRowEditing(GridViewEditEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowEditing(GridViewEditEventArgs)
- uid: System.Web.UI.WebControls.GridViewEditEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewEditEventArgs
  nameWithType: GridViewEditEventArgs
  fullName: System.Web.UI.WebControls.GridViewEditEventArgs
- uid: System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowUpdated(GridViewUpdatedEventArgs)
  nameWithType: GridView.OnRowUpdated(GridViewUpdatedEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowUpdated(GridViewUpdatedEventArgs)
- uid: System.Web.UI.WebControls.GridViewUpdatedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewUpdatedEventArgs
  nameWithType: GridViewUpdatedEventArgs
  fullName: System.Web.UI.WebControls.GridViewUpdatedEventArgs
- uid: System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowUpdating(GridViewUpdateEventArgs)
  nameWithType: GridView.OnRowUpdating(GridViewUpdateEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnRowUpdating(GridViewUpdateEventArgs)
- uid: System.Web.UI.WebControls.GridViewUpdateEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewUpdateEventArgs
  nameWithType: GridViewUpdateEventArgs
  fullName: System.Web.UI.WebControls.GridViewUpdateEventArgs
- uid: System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnSelectedIndexChanged(EventArgs)
  nameWithType: GridView.OnSelectedIndexChanged(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(EventArgs)
- uid: System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnSelectedIndexChanging(GridViewSelectEventArgs)
  nameWithType: GridView.OnSelectedIndexChanging(GridViewSelectEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(GridViewSelectEventArgs)
- uid: System.Web.UI.WebControls.GridViewSelectEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewSelectEventArgs
  nameWithType: GridViewSelectEventArgs
  fullName: System.Web.UI.WebControls.GridViewSelectEventArgs
- uid: System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnSorted(EventArgs)
  nameWithType: GridView.OnSorted(EventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnSorted(EventArgs)
- uid: System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnSorting(GridViewSortEventArgs)
  nameWithType: GridView.OnSorting(GridViewSortEventArgs)
  fullName: System.Web.UI.WebControls.GridView.OnSorting(GridViewSortEventArgs)
- uid: System.Web.UI.WebControls.GridViewSortEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewSortEventArgs
  nameWithType: GridViewSortEventArgs
  fullName: System.Web.UI.WebControls.GridViewSortEventArgs
- uid: System.Web.UI.WebControls.GridView.PageCount
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PageCount
  nameWithType: GridView.PageCount
  fullName: System.Web.UI.WebControls.GridView.PageCount
- uid: System.Web.UI.WebControls.GridView.PageIndex
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PageIndex
  nameWithType: GridView.PageIndex
  fullName: System.Web.UI.WebControls.GridView.PageIndex
- uid: System.Web.UI.WebControls.GridView.PageIndexChanged
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PageIndexChanged
  nameWithType: GridView.PageIndexChanged
  fullName: System.Web.UI.WebControls.GridView.PageIndexChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.GridView.PageIndexChanging
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PageIndexChanging
  nameWithType: GridView.PageIndexChanging
  fullName: System.Web.UI.WebControls.GridView.PageIndexChanging
- uid: System.Web.UI.WebControls.GridViewPageEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewPageEventHandler
  nameWithType: GridViewPageEventHandler
  fullName: System.Web.UI.WebControls.GridViewPageEventHandler
- uid: System.Web.UI.WebControls.GridView.PagerSettings
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PagerSettings
  nameWithType: GridView.PagerSettings
  fullName: System.Web.UI.WebControls.GridView.PagerSettings
- uid: System.Web.UI.WebControls.PagerSettings
  parent: System.Web.UI.WebControls
  isExternal: false
  name: PagerSettings
  nameWithType: PagerSettings
  fullName: System.Web.UI.WebControls.PagerSettings
- uid: System.Web.UI.WebControls.GridView.PagerStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PagerStyle
  nameWithType: GridView.PagerStyle
  fullName: System.Web.UI.WebControls.GridView.PagerStyle
- uid: System.Web.UI.WebControls.GridView.PagerTemplate
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PagerTemplate
  nameWithType: GridView.PagerTemplate
  fullName: System.Web.UI.WebControls.GridView.PagerTemplate
- uid: System.Web.UI.WebControls.GridView.PageSize
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PageSize
  nameWithType: GridView.PageSize
  fullName: System.Web.UI.WebControls.GridView.PageSize
- uid: System.Web.UI.WebControls.GridView.PerformDataBinding(System.Collections.IEnumerable)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PerformDataBinding(IEnumerable)
  nameWithType: GridView.PerformDataBinding(IEnumerable)
  fullName: System.Web.UI.WebControls.GridView.PerformDataBinding(IEnumerable)
- uid: System.Web.UI.WebControls.GridView.PrepareControlHierarchy
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PrepareControlHierarchy()
  nameWithType: GridView.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.GridView.PrepareControlHierarchy()
- uid: System.Web.UI.WebControls.GridView.RaiseCallbackEvent(System.String)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RaiseCallbackEvent(String)
  nameWithType: GridView.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.GridView.RaiseCallbackEvent(String)
- uid: System.Web.UI.WebControls.GridView.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: GridView.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.GridView.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.GridView.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: GridView.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.GridView.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.GridView.RowCancelingEdit
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowCancelingEdit
  nameWithType: GridView.RowCancelingEdit
  fullName: System.Web.UI.WebControls.GridView.RowCancelingEdit
- uid: System.Web.UI.WebControls.GridViewCancelEditEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewCancelEditEventHandler
  nameWithType: GridViewCancelEditEventHandler
  fullName: System.Web.UI.WebControls.GridViewCancelEditEventHandler
- uid: System.Web.UI.WebControls.GridView.RowCommand
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowCommand
  nameWithType: GridView.RowCommand
  fullName: System.Web.UI.WebControls.GridView.RowCommand
- uid: System.Web.UI.WebControls.GridViewCommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewCommandEventHandler
  nameWithType: GridViewCommandEventHandler
  fullName: System.Web.UI.WebControls.GridViewCommandEventHandler
- uid: System.Web.UI.WebControls.GridView.RowCreated
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowCreated
  nameWithType: GridView.RowCreated
  fullName: System.Web.UI.WebControls.GridView.RowCreated
- uid: System.Web.UI.WebControls.GridViewRowEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewRowEventHandler
  nameWithType: GridViewRowEventHandler
  fullName: System.Web.UI.WebControls.GridViewRowEventHandler
- uid: System.Web.UI.WebControls.GridView.RowDataBound
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowDataBound
  nameWithType: GridView.RowDataBound
  fullName: System.Web.UI.WebControls.GridView.RowDataBound
- uid: System.Web.UI.WebControls.GridView.RowDeleted
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowDeleted
  nameWithType: GridView.RowDeleted
  fullName: System.Web.UI.WebControls.GridView.RowDeleted
- uid: System.Web.UI.WebControls.GridViewDeletedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewDeletedEventHandler
  nameWithType: GridViewDeletedEventHandler
  fullName: System.Web.UI.WebControls.GridViewDeletedEventHandler
- uid: System.Web.UI.WebControls.GridView.RowDeleting
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowDeleting
  nameWithType: GridView.RowDeleting
  fullName: System.Web.UI.WebControls.GridView.RowDeleting
- uid: System.Web.UI.WebControls.GridViewDeleteEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewDeleteEventHandler
  nameWithType: GridViewDeleteEventHandler
  fullName: System.Web.UI.WebControls.GridViewDeleteEventHandler
- uid: System.Web.UI.WebControls.GridView.RowEditing
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowEditing
  nameWithType: GridView.RowEditing
  fullName: System.Web.UI.WebControls.GridView.RowEditing
- uid: System.Web.UI.WebControls.GridViewEditEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewEditEventHandler
  nameWithType: GridViewEditEventHandler
  fullName: System.Web.UI.WebControls.GridViewEditEventHandler
- uid: System.Web.UI.WebControls.GridView.RowHeaderColumn
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowHeaderColumn
  nameWithType: GridView.RowHeaderColumn
  fullName: System.Web.UI.WebControls.GridView.RowHeaderColumn
- uid: System.Web.UI.WebControls.GridView.Rows
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Rows
  nameWithType: GridView.Rows
  fullName: System.Web.UI.WebControls.GridView.Rows
- uid: System.Web.UI.WebControls.GridViewRowCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewRowCollection
  nameWithType: GridViewRowCollection
  fullName: System.Web.UI.WebControls.GridViewRowCollection
- uid: System.Web.UI.WebControls.GridView.RowStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowStyle
  nameWithType: GridView.RowStyle
  fullName: System.Web.UI.WebControls.GridView.RowStyle
- uid: System.Web.UI.WebControls.GridView.RowUpdated
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowUpdated
  nameWithType: GridView.RowUpdated
  fullName: System.Web.UI.WebControls.GridView.RowUpdated
- uid: System.Web.UI.WebControls.GridViewUpdatedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewUpdatedEventHandler
  nameWithType: GridViewUpdatedEventHandler
  fullName: System.Web.UI.WebControls.GridViewUpdatedEventHandler
- uid: System.Web.UI.WebControls.GridView.RowUpdating
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowUpdating
  nameWithType: GridView.RowUpdating
  fullName: System.Web.UI.WebControls.GridView.RowUpdating
- uid: System.Web.UI.WebControls.GridViewUpdateEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewUpdateEventHandler
  nameWithType: GridViewUpdateEventHandler
  fullName: System.Web.UI.WebControls.GridViewUpdateEventHandler
- uid: System.Web.UI.WebControls.GridView.SaveControlState
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SaveControlState()
  nameWithType: GridView.SaveControlState()
  fullName: System.Web.UI.WebControls.GridView.SaveControlState()
- uid: System.Web.UI.WebControls.GridView.SaveViewState
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SaveViewState()
  nameWithType: GridView.SaveViewState()
  fullName: System.Web.UI.WebControls.GridView.SaveViewState()
- uid: System.Web.UI.WebControls.GridView.SelectedDataKey
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedDataKey
  nameWithType: GridView.SelectedDataKey
  fullName: System.Web.UI.WebControls.GridView.SelectedDataKey
- uid: System.Web.UI.WebControls.DataKey
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataKey
  nameWithType: DataKey
  fullName: System.Web.UI.WebControls.DataKey
- uid: System.Web.UI.WebControls.GridView.SelectedIndex
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedIndex
  nameWithType: GridView.SelectedIndex
  fullName: System.Web.UI.WebControls.GridView.SelectedIndex
- uid: System.Web.UI.WebControls.GridView.SelectedIndexChanged
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedIndexChanged
  nameWithType: GridView.SelectedIndexChanged
  fullName: System.Web.UI.WebControls.GridView.SelectedIndexChanged
- uid: System.Web.UI.WebControls.GridView.SelectedIndexChanging
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedIndexChanging
  nameWithType: GridView.SelectedIndexChanging
  fullName: System.Web.UI.WebControls.GridView.SelectedIndexChanging
- uid: System.Web.UI.WebControls.GridViewSelectEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewSelectEventHandler
  nameWithType: GridViewSelectEventHandler
  fullName: System.Web.UI.WebControls.GridViewSelectEventHandler
- uid: System.Web.UI.WebControls.GridView.SelectedPersistedDataKey
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedPersistedDataKey
  nameWithType: GridView.SelectedPersistedDataKey
  fullName: System.Web.UI.WebControls.GridView.SelectedPersistedDataKey
- uid: System.Web.UI.WebControls.GridView.SelectedRow
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedRow
  nameWithType: GridView.SelectedRow
  fullName: System.Web.UI.WebControls.GridView.SelectedRow
- uid: System.Web.UI.WebControls.GridView.SelectedRowStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedRowStyle
  nameWithType: GridView.SelectedRowStyle
  fullName: System.Web.UI.WebControls.GridView.SelectedRowStyle
- uid: System.Web.UI.WebControls.GridView.SelectedValue
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedValue
  nameWithType: GridView.SelectedValue
  fullName: System.Web.UI.WebControls.GridView.SelectedValue
- uid: System.Web.UI.WebControls.GridView.SelectRow(System.Int32)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectRow(Int32)
  nameWithType: GridView.SelectRow(Int32)
  fullName: System.Web.UI.WebControls.GridView.SelectRow(Int32)
- uid: System.Web.UI.WebControls.GridView.SetEditRow(System.Int32)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SetEditRow(Int32)
  nameWithType: GridView.SetEditRow(Int32)
  fullName: System.Web.UI.WebControls.GridView.SetEditRow(Int32)
- uid: System.Web.UI.WebControls.GridView.SetPageIndex(System.Int32)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SetPageIndex(Int32)
  nameWithType: GridView.SetPageIndex(Int32)
  fullName: System.Web.UI.WebControls.GridView.SetPageIndex(Int32)
- uid: System.Web.UI.WebControls.GridView.ShowFooter
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ShowFooter
  nameWithType: GridView.ShowFooter
  fullName: System.Web.UI.WebControls.GridView.ShowFooter
- uid: System.Web.UI.WebControls.GridView.ShowHeader
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ShowHeader
  nameWithType: GridView.ShowHeader
  fullName: System.Web.UI.WebControls.GridView.ShowHeader
- uid: System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ShowHeaderWhenEmpty
  nameWithType: GridView.ShowHeaderWhenEmpty
  fullName: System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty
- uid: System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Sort(String,SortDirection)
  nameWithType: GridView.Sort(String,SortDirection)
  fullName: System.Web.UI.WebControls.GridView.Sort(String,SortDirection)
- uid: System.Web.UI.WebControls.SortDirection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SortDirection
  nameWithType: SortDirection
  fullName: System.Web.UI.WebControls.SortDirection
- uid: System.Web.UI.WebControls.GridView.SortDirection
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortDirection
  nameWithType: GridView.SortDirection
  fullName: System.Web.UI.WebControls.GridView.SortDirection
- uid: System.Web.UI.WebControls.GridView.Sorted
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Sorted
  nameWithType: GridView.Sorted
  fullName: System.Web.UI.WebControls.GridView.Sorted
- uid: System.Web.UI.WebControls.GridView.SortedAscendingCellStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortedAscendingCellStyle
  nameWithType: GridView.SortedAscendingCellStyle
  fullName: System.Web.UI.WebControls.GridView.SortedAscendingCellStyle
- uid: System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortedAscendingHeaderStyle
  nameWithType: GridView.SortedAscendingHeaderStyle
  fullName: System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle
- uid: System.Web.UI.WebControls.GridView.SortedDescendingCellStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortedDescendingCellStyle
  nameWithType: GridView.SortedDescendingCellStyle
  fullName: System.Web.UI.WebControls.GridView.SortedDescendingCellStyle
- uid: System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortedDescendingHeaderStyle
  nameWithType: GridView.SortedDescendingHeaderStyle
  fullName: System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle
- uid: System.Web.UI.WebControls.GridView.SortExpression
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortExpression
  nameWithType: GridView.SortExpression
  fullName: System.Web.UI.WebControls.GridView.SortExpression
- uid: System.Web.UI.WebControls.GridView.Sorting
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Sorting
  nameWithType: GridView.Sorting
  fullName: System.Web.UI.WebControls.GridView.Sorting
- uid: System.Web.UI.WebControls.GridViewSortEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridViewSortEventHandler
  nameWithType: GridViewSortEventHandler
  fullName: System.Web.UI.WebControls.GridViewSortEventHandler
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#GetCallbackResult
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  nameWithType: GridView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  nameWithType: GridView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys
  nameWithType: GridView.System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: GridView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  nameWithType: GridView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataMember
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataSource
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
- uid: System.Web.UI.IDataSource
  parent: System.Web.UI
  isExternal: false
  name: IDataSource
  nameWithType: IDataSource
  fullName: System.Web.UI.IDataSource
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.DataKeys
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.DataKeys
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.DataKeys
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  nameWithType: GridView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPersistedSelector#DataKey
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IPersistedSelector.DataKey
  nameWithType: GridView.System.Web.UI.WebControls.IPersistedSelector.DataKey
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IPersistedSelector.DataKey
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  nameWithType: GridView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  fullName: System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
- uid: System.Web.UI.PostBackOptions
  parent: System.Web.UI
  isExternal: false
  name: PostBackOptions
  nameWithType: PostBackOptions
  fullName: System.Web.UI.PostBackOptions
- uid: System.Web.UI.WebControls.GridView.TagKey
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: TagKey
  nameWithType: GridView.TagKey
  fullName: System.Web.UI.WebControls.GridView.TagKey
- uid: System.Web.UI.HtmlTextWriterTag
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterTag
  nameWithType: HtmlTextWriterTag
  fullName: System.Web.UI.HtmlTextWriterTag
- uid: System.Web.UI.WebControls.GridView.TopPagerRow
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: TopPagerRow
  nameWithType: GridView.TopPagerRow
  fullName: System.Web.UI.WebControls.GridView.TopPagerRow
- uid: System.Web.UI.WebControls.GridView.TrackViewState
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: TrackViewState()
  nameWithType: GridView.TrackViewState()
  fullName: System.Web.UI.WebControls.GridView.TrackViewState()
- uid: System.Web.UI.WebControls.GridView.UpdateMethod
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: UpdateMethod
  nameWithType: GridView.UpdateMethod
  fullName: System.Web.UI.WebControls.GridView.UpdateMethod
- uid: System.Web.UI.WebControls.GridView.UpdateRow(System.Int32,System.Boolean)
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: UpdateRow(Int32,Boolean)
  nameWithType: GridView.UpdateRow(Int32,Boolean)
  fullName: System.Web.UI.WebControls.GridView.UpdateRow(Int32,Boolean)
- uid: System.Web.UI.WebControls.GridView.UseAccessibleHeader
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: UseAccessibleHeader
  nameWithType: GridView.UseAccessibleHeader
  fullName: System.Web.UI.WebControls.GridView.UseAccessibleHeader
- uid: System.Web.UI.WebControls.GridView.VirtualItemCount
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: VirtualItemCount
  nameWithType: GridView.VirtualItemCount
  fullName: System.Web.UI.WebControls.GridView.VirtualItemCount
- uid: System.Web.UI.WebControls.GridView.#ctor*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: GridView
  nameWithType: GridView.GridView
- uid: System.Web.UI.WebControls.GridView.AllowCustomPaging*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AllowCustomPaging
  nameWithType: GridView.AllowCustomPaging
- uid: System.Web.UI.WebControls.GridView.AllowPaging*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AllowPaging
  nameWithType: GridView.AllowPaging
- uid: System.Web.UI.WebControls.GridView.AllowSorting*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AllowSorting
  nameWithType: GridView.AllowSorting
- uid: System.Web.UI.WebControls.GridView.AlternatingRowStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AlternatingRowStyle
  nameWithType: GridView.AlternatingRowStyle
- uid: System.Web.UI.WebControls.GridView.AutoGenerateColumns*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AutoGenerateColumns
  nameWithType: GridView.AutoGenerateColumns
- uid: System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AutoGenerateDeleteButton
  nameWithType: GridView.AutoGenerateDeleteButton
- uid: System.Web.UI.WebControls.GridView.AutoGenerateEditButton*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AutoGenerateEditButton
  nameWithType: GridView.AutoGenerateEditButton
- uid: System.Web.UI.WebControls.GridView.AutoGenerateSelectButton*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: AutoGenerateSelectButton
  nameWithType: GridView.AutoGenerateSelectButton
- uid: System.Web.UI.WebControls.GridView.BackImageUrl*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: BackImageUrl
  nameWithType: GridView.BackImageUrl
- uid: System.Web.UI.WebControls.GridView.BottomPagerRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: BottomPagerRow
  nameWithType: GridView.BottomPagerRow
- uid: System.Web.UI.WebControls.GridView.Caption*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Caption
  nameWithType: GridView.Caption
- uid: System.Web.UI.WebControls.GridView.CaptionAlign*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CaptionAlign
  nameWithType: GridView.CaptionAlign
- uid: System.Web.UI.WebControls.GridView.CellPadding*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CellPadding
  nameWithType: GridView.CellPadding
- uid: System.Web.UI.WebControls.GridView.CellSpacing*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CellSpacing
  nameWithType: GridView.CellSpacing
- uid: System.Web.UI.WebControls.GridView.ClientIDRowSuffix*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ClientIDRowSuffix
  nameWithType: GridView.ClientIDRowSuffix
- uid: System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ClientIDRowSuffixDataKeys
  nameWithType: GridView.ClientIDRowSuffixDataKeys
- uid: System.Web.UI.WebControls.GridView.Columns*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Columns
  nameWithType: GridView.Columns
- uid: System.Web.UI.WebControls.GridView.ColumnsGenerator*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ColumnsGenerator
  nameWithType: GridView.ColumnsGenerator
- uid: System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateAutoGeneratedColumn
  nameWithType: GridView.CreateAutoGeneratedColumn
- uid: System.Web.UI.WebControls.GridView.CreateChildControls*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateChildControls
  nameWithType: GridView.CreateChildControls
- uid: System.Web.UI.WebControls.GridView.CreateChildTable*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateChildTable
  nameWithType: GridView.CreateChildTable
- uid: System.Web.UI.WebControls.GridView.CreateColumns*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateColumns
  nameWithType: GridView.CreateColumns
- uid: System.Web.UI.WebControls.GridView.CreateControlStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateControlStyle
  nameWithType: GridView.CreateControlStyle
- uid: System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateDataSourceSelectArguments
  nameWithType: GridView.CreateDataSourceSelectArguments
- uid: System.Web.UI.WebControls.GridView.CreateRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: CreateRow
  nameWithType: GridView.CreateRow
- uid: System.Web.UI.WebControls.GridView.DataBind*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DataBind
  nameWithType: GridView.DataBind
- uid: System.Web.UI.WebControls.GridView.DataKeyNames*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DataKeyNames
  nameWithType: GridView.DataKeyNames
- uid: System.Web.UI.WebControls.GridView.DataKeys*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DataKeys
  nameWithType: GridView.DataKeys
- uid: System.Web.UI.WebControls.GridView.DeleteMethod*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DeleteMethod
  nameWithType: GridView.DeleteMethod
- uid: System.Web.UI.WebControls.GridView.DeleteRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: DeleteRow
  nameWithType: GridView.DeleteRow
- uid: System.Web.UI.WebControls.GridView.EditIndex*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EditIndex
  nameWithType: GridView.EditIndex
- uid: System.Web.UI.WebControls.GridView.EditRowStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EditRowStyle
  nameWithType: GridView.EditRowStyle
- uid: System.Web.UI.WebControls.GridView.EmptyDataRowStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EmptyDataRowStyle
  nameWithType: GridView.EmptyDataRowStyle
- uid: System.Web.UI.WebControls.GridView.EmptyDataTemplate*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EmptyDataTemplate
  nameWithType: GridView.EmptyDataTemplate
- uid: System.Web.UI.WebControls.GridView.EmptyDataText*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EmptyDataText
  nameWithType: GridView.EmptyDataText
- uid: System.Web.UI.WebControls.GridView.EnableModelValidation*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EnableModelValidation
  nameWithType: GridView.EnableModelValidation
- uid: System.Web.UI.WebControls.GridView.EnablePersistedSelection*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EnablePersistedSelection
  nameWithType: GridView.EnablePersistedSelection
- uid: System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: EnableSortingAndPagingCallbacks
  nameWithType: GridView.EnableSortingAndPagingCallbacks
- uid: System.Web.UI.WebControls.GridView.ExtractRowValues*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ExtractRowValues
  nameWithType: GridView.ExtractRowValues
- uid: System.Web.UI.WebControls.GridView.FooterRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: FooterRow
  nameWithType: GridView.FooterRow
- uid: System.Web.UI.WebControls.GridView.FooterStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: FooterStyle
  nameWithType: GridView.FooterStyle
- uid: System.Web.UI.WebControls.GridView.GetCallbackResult*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: GetCallbackResult
  nameWithType: GridView.GetCallbackResult
- uid: System.Web.UI.WebControls.GridView.GetCallbackScript*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: GetCallbackScript
  nameWithType: GridView.GetCallbackScript
- uid: System.Web.UI.WebControls.GridView.GridLines*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: GridLines
  nameWithType: GridView.GridLines
- uid: System.Web.UI.WebControls.GridView.HeaderRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: HeaderRow
  nameWithType: GridView.HeaderRow
- uid: System.Web.UI.WebControls.GridView.HeaderStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: HeaderStyle
  nameWithType: GridView.HeaderStyle
- uid: System.Web.UI.WebControls.GridView.HorizontalAlign*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: HorizontalAlign
  nameWithType: GridView.HorizontalAlign
- uid: System.Web.UI.WebControls.GridView.InitializePager*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: InitializePager
  nameWithType: GridView.InitializePager
- uid: System.Web.UI.WebControls.GridView.InitializeRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: InitializeRow
  nameWithType: GridView.InitializeRow
- uid: System.Web.UI.WebControls.GridView.IsBindableType*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: IsBindableType
  nameWithType: GridView.IsBindableType
- uid: System.Web.UI.WebControls.GridView.LoadControlState*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: LoadControlState
  nameWithType: GridView.LoadControlState
- uid: System.Web.UI.WebControls.GridView.LoadViewState*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: LoadViewState
  nameWithType: GridView.LoadViewState
- uid: System.Web.UI.WebControls.GridView.OnBubbleEvent*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnBubbleEvent
  nameWithType: GridView.OnBubbleEvent
- uid: System.Web.UI.WebControls.GridView.OnDataPropertyChanged*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnDataPropertyChanged
  nameWithType: GridView.OnDataPropertyChanged
- uid: System.Web.UI.WebControls.GridView.OnDataSourceViewChanged*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnDataSourceViewChanged
  nameWithType: GridView.OnDataSourceViewChanged
- uid: System.Web.UI.WebControls.GridView.OnInit*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnInit
  nameWithType: GridView.OnInit
- uid: System.Web.UI.WebControls.GridView.OnPageIndexChanged*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnPageIndexChanged
  nameWithType: GridView.OnPageIndexChanged
- uid: System.Web.UI.WebControls.GridView.OnPageIndexChanging*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnPageIndexChanging
  nameWithType: GridView.OnPageIndexChanging
- uid: System.Web.UI.WebControls.GridView.OnPagePreLoad*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnPagePreLoad
  nameWithType: GridView.OnPagePreLoad
- uid: System.Web.UI.WebControls.GridView.OnPreRender*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnPreRender
  nameWithType: GridView.OnPreRender
- uid: System.Web.UI.WebControls.GridView.OnRowCancelingEdit*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowCancelingEdit
  nameWithType: GridView.OnRowCancelingEdit
- uid: System.Web.UI.WebControls.GridView.OnRowCommand*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowCommand
  nameWithType: GridView.OnRowCommand
- uid: System.Web.UI.WebControls.GridView.OnRowCreated*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowCreated
  nameWithType: GridView.OnRowCreated
- uid: System.Web.UI.WebControls.GridView.OnRowDataBound*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowDataBound
  nameWithType: GridView.OnRowDataBound
- uid: System.Web.UI.WebControls.GridView.OnRowDeleted*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowDeleted
  nameWithType: GridView.OnRowDeleted
- uid: System.Web.UI.WebControls.GridView.OnRowDeleting*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowDeleting
  nameWithType: GridView.OnRowDeleting
- uid: System.Web.UI.WebControls.GridView.OnRowEditing*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowEditing
  nameWithType: GridView.OnRowEditing
- uid: System.Web.UI.WebControls.GridView.OnRowUpdated*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowUpdated
  nameWithType: GridView.OnRowUpdated
- uid: System.Web.UI.WebControls.GridView.OnRowUpdating*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnRowUpdating
  nameWithType: GridView.OnRowUpdating
- uid: System.Web.UI.WebControls.GridView.OnSelectedIndexChanged*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnSelectedIndexChanged
  nameWithType: GridView.OnSelectedIndexChanged
- uid: System.Web.UI.WebControls.GridView.OnSelectedIndexChanging*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnSelectedIndexChanging
  nameWithType: GridView.OnSelectedIndexChanging
- uid: System.Web.UI.WebControls.GridView.OnSorted*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnSorted
  nameWithType: GridView.OnSorted
- uid: System.Web.UI.WebControls.GridView.OnSorting*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: OnSorting
  nameWithType: GridView.OnSorting
- uid: System.Web.UI.WebControls.GridView.PageCount*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PageCount
  nameWithType: GridView.PageCount
- uid: System.Web.UI.WebControls.GridView.PageIndex*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PageIndex
  nameWithType: GridView.PageIndex
- uid: System.Web.UI.WebControls.GridView.PagerSettings*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PagerSettings
  nameWithType: GridView.PagerSettings
- uid: System.Web.UI.WebControls.GridView.PagerStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PagerStyle
  nameWithType: GridView.PagerStyle
- uid: System.Web.UI.WebControls.GridView.PagerTemplate*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PagerTemplate
  nameWithType: GridView.PagerTemplate
- uid: System.Web.UI.WebControls.GridView.PageSize*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PageSize
  nameWithType: GridView.PageSize
- uid: System.Web.UI.WebControls.GridView.PerformDataBinding*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PerformDataBinding
  nameWithType: GridView.PerformDataBinding
- uid: System.Web.UI.WebControls.GridView.PrepareControlHierarchy*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: PrepareControlHierarchy
  nameWithType: GridView.PrepareControlHierarchy
- uid: System.Web.UI.WebControls.GridView.RaiseCallbackEvent*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RaiseCallbackEvent
  nameWithType: GridView.RaiseCallbackEvent
- uid: System.Web.UI.WebControls.GridView.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: GridView.RaisePostBackEvent
- uid: System.Web.UI.WebControls.GridView.Render*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Render
  nameWithType: GridView.Render
- uid: System.Web.UI.WebControls.GridView.RowHeaderColumn*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowHeaderColumn
  nameWithType: GridView.RowHeaderColumn
- uid: System.Web.UI.WebControls.GridView.Rows*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Rows
  nameWithType: GridView.Rows
- uid: System.Web.UI.WebControls.GridView.RowStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: RowStyle
  nameWithType: GridView.RowStyle
- uid: System.Web.UI.WebControls.GridView.SaveControlState*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SaveControlState
  nameWithType: GridView.SaveControlState
- uid: System.Web.UI.WebControls.GridView.SaveViewState*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SaveViewState
  nameWithType: GridView.SaveViewState
- uid: System.Web.UI.WebControls.GridView.SelectedDataKey*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedDataKey
  nameWithType: GridView.SelectedDataKey
- uid: System.Web.UI.WebControls.GridView.SelectedIndex*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedIndex
  nameWithType: GridView.SelectedIndex
- uid: System.Web.UI.WebControls.GridView.SelectedPersistedDataKey*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedPersistedDataKey
  nameWithType: GridView.SelectedPersistedDataKey
- uid: System.Web.UI.WebControls.GridView.SelectedRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedRow
  nameWithType: GridView.SelectedRow
- uid: System.Web.UI.WebControls.GridView.SelectedRowStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedRowStyle
  nameWithType: GridView.SelectedRowStyle
- uid: System.Web.UI.WebControls.GridView.SelectedValue*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectedValue
  nameWithType: GridView.SelectedValue
- uid: System.Web.UI.WebControls.GridView.SelectRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SelectRow
  nameWithType: GridView.SelectRow
- uid: System.Web.UI.WebControls.GridView.SetEditRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SetEditRow
  nameWithType: GridView.SetEditRow
- uid: System.Web.UI.WebControls.GridView.SetPageIndex*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SetPageIndex
  nameWithType: GridView.SetPageIndex
- uid: System.Web.UI.WebControls.GridView.ShowFooter*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ShowFooter
  nameWithType: GridView.ShowFooter
- uid: System.Web.UI.WebControls.GridView.ShowHeader*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ShowHeader
  nameWithType: GridView.ShowHeader
- uid: System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: ShowHeaderWhenEmpty
  nameWithType: GridView.ShowHeaderWhenEmpty
- uid: System.Web.UI.WebControls.GridView.Sort*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: Sort
  nameWithType: GridView.Sort
- uid: System.Web.UI.WebControls.GridView.SortDirection*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortDirection
  nameWithType: GridView.SortDirection
- uid: System.Web.UI.WebControls.GridView.SortedAscendingCellStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortedAscendingCellStyle
  nameWithType: GridView.SortedAscendingCellStyle
- uid: System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortedAscendingHeaderStyle
  nameWithType: GridView.SortedAscendingHeaderStyle
- uid: System.Web.UI.WebControls.GridView.SortedDescendingCellStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortedDescendingCellStyle
  nameWithType: GridView.SortedDescendingCellStyle
- uid: System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortedDescendingHeaderStyle
  nameWithType: GridView.SortedDescendingHeaderStyle
- uid: System.Web.UI.WebControls.GridView.SortExpression*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: SortExpression
  nameWithType: GridView.SortExpression
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#GetCallbackResult*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult
  nameWithType: GridView.System.Web.UI.ICallbackEventHandler.GetCallbackResult
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent
  nameWithType: GridView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys
  nameWithType: GridView.System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: GridView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript
  nameWithType: GridView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataMember*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataMember
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSource*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSource
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.DataKeys
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.DataKeys
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex
  nameWithType: GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  nameWithType: GridView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPersistedSelector#DataKey*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IPersistedSelector.DataKey
  nameWithType: GridView.System.Web.UI.WebControls.IPersistedSelector.DataKey
- uid: System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions
  nameWithType: GridView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions
- uid: System.Web.UI.WebControls.GridView.TagKey*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: TagKey
  nameWithType: GridView.TagKey
- uid: System.Web.UI.WebControls.GridView.TopPagerRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: TopPagerRow
  nameWithType: GridView.TopPagerRow
- uid: System.Web.UI.WebControls.GridView.TrackViewState*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: TrackViewState
  nameWithType: GridView.TrackViewState
- uid: System.Web.UI.WebControls.GridView.UpdateMethod*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: UpdateMethod
  nameWithType: GridView.UpdateMethod
- uid: System.Web.UI.WebControls.GridView.UpdateRow*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: UpdateRow
  nameWithType: GridView.UpdateRow
- uid: System.Web.UI.WebControls.GridView.UseAccessibleHeader*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: UseAccessibleHeader
  nameWithType: GridView.UseAccessibleHeader
- uid: System.Web.UI.WebControls.GridView.VirtualItemCount*
  parent: System.Web.UI.WebControls.GridView
  isExternal: false
  name: VirtualItemCount
  nameWithType: GridView.VirtualItemCount
