### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.MessageFilter
  id: MessageFilter
  children:
  - System.ServiceModel.Dispatcher.MessageFilter.#ctor
  - System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1
  - System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  langs:
  - csharp
  name: MessageFilter
  nameWithType: MessageFilter
  fullName: System.ServiceModel.Dispatcher.MessageFilter
  type: Class
  summary: "<xref uid=&quot;langword_csharp_abstract&quot; name=&quot;abstract&quot; href=&quot;&quot;></xref>쿼리 메시지에 사용 되는 필터의 다양 한 클래스에 대 한 기본 클래스입니다."
  remarks: "MessageFilter가는 `abstract` 메시지 검사에 사용할 조건을 지정 하기 위해 개발자가 구현 하는 클래스입니다. 일반적으로 필터는 메시지의 특정 부분에 대 한 검사를 기준으로 메시지도 수행할 작업을 결정 하는 끝점 응용 프로그램에서 사용 됩니다. 예를 들어, 큐 프로세스에서는 함으로써 메시지를 큐 앞으로 이동할지 여부를 결정 하는 알려진된 헤더의 우선 순위 요소를 확인 하려면 XPath 1.0 쿼리를 사용할 수 있습니다.       필터가 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>.</xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> 를 구현 하는 필터 테이블에 저장 됩니다. 테이블에서 각 필터는 메시지가 필터와 일치 하는 경우 수행할 작업을 나타내는 데 사용할 수 있는 지정 된 필터 데이터와 연결 됩니다. <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A>메서드는 메시지 필터를 충족 하는지 확인 하는 데 사용 됩니다.</xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A>       테이블 필터는 변경 내용을 검색 하려면 없기 때문에 필터를 만든 후에 필터에 의해 사용 되는 조건은 변경할 수 없습니다. 필터 기준을 수정 하려면 유일한 방법은 새를 생성 하 고 기존 필터를 삭제 하는 것입니다.       다음 구현 클래스는 `abstract`MessageFilter 클래스:- <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>-XPath 1.0 식을 사용 하 여 일치 하는 항목에 대 한 조건을 지정 합니다.</xref:System.ServiceModel.Dispatcher.XPathMessageFilter>      - <xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter>모든 메시지와 일치 합니다.</xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter>      - <xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter>메시지가 일치 합니다.</xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter>      - <xref:System.ServiceModel.Dispatcher.ActionMessageFilter>메시지 동작이 지정된 동작 집합 중 하나 인지를 테스트 합니다.</xref:System.ServiceModel.Dispatcher.ActionMessageFilter>      - <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter>메시지가 지정 된 끝점 주소를 충족 하는지 여부를 테스트 합니다.</xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter>       <xref:System.ServiceModel.Channels.ChannelListenerBase%601>이 `abstract` 기본 큐가 아닌 수신기 작성에 사용할 수 있는 클래스입니다.</xref:System.ServiceModel.Channels.ChannelListenerBase%601>"
  syntax:
    content: >-
      [System.Runtime.Serialization.DataContract]

      [System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.XPathMessageFilter))]

      [System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.ActionMessageFilter))]

      [System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchAllMessageFilter))]

      [System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchNoneMessageFilter))]

      public abstract class MessageFilter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageFilter.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Dispatcher.MessageFilter
  langs:
  - csharp
  name: MessageFilter()
  nameWithType: MessageFilter.MessageFilter()
  fullName: System.ServiceModel.Dispatcher.MessageFilter.MessageFilter()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "파생된 클래스에서 호출 하는 경우의 새 인스턴스를 초기화 합니다.는 <xref href=&quot;System.ServiceModel.Dispatcher.MessageFilter&quot;> </xref> 클래스입니다."
  remarks: "생성자에서 파생 되는 필터만 있도록 보호 <xref:System.ServiceModel.Dispatcher.MessageFilter>인스턴스화할 수 있습니다.</xref:System.ServiceModel.Dispatcher.MessageFilter>"
  syntax:
    content: protected MessageFilter ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.MessageFilter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1
  id: CreateFilterTable``1
  parent: System.ServiceModel.Dispatcher.MessageFilter
  langs:
  - csharp
  name: CreateFilterTable()
  nameWithType: MessageFilter.CreateFilterTable()
  fullName: System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  syntax:
    content: protected virtual System.ServiceModel.Dispatcher.IMessageFilterTable<FilterData> CreateFilterTable<FilterData> ();
    parameters: []
    return:
      type: System.ServiceModel.Dispatcher.IMessageFilterTable{FilterData}
      description: "추가할 수 있습니다."
  overload: System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable<FilterData>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)
  id: Match(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.MessageFilter
  langs:
  - csharp
  name: Match(Message)
  nameWithType: MessageFilter.Match(Message)
  fullName: System.ServiceModel.Dispatcher.MessageFilter.Match(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "파생된 클래스에서 재정의 되 면 메시지가 필터 기준을 충족 하는지 여부를 테스트 합니다. 본문을 검사할 수 없습니다."
  remarks: "이 메서드는 메시지 본문 내용을 검사할 수 없습니다."
  syntax:
    content: public abstract bool Match (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>테스트할 개체</xref:System.ServiceModel.Channels.Message>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.ServiceModel.Channels.Message>필터 기준을 충족 하는 개체, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.Channels.Message>"
  overload: System.ServiceModel.Dispatcher.MessageFilter.Match*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  id: Match(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.MessageFilter
  langs:
  - csharp
  name: Match(MessageBuffer)
  nameWithType: MessageFilter.Match(MessageBuffer)
  fullName: System.ServiceModel.Dispatcher.MessageFilter.Match(MessageBuffer)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "파생된 클래스에서 재정의 되 면 버퍼링 된 메시지가 필터 기준을 충족 하는지 여부를 테스트 합니다."
  remarks: "메시지 본문은 필터에서 검사 하도록 하는 경우 완전히 버퍼링 해야 합니다. 본문은 <xref:System.ServiceModel.Channels.MessageBuffer>완전히 버퍼링 및 필터 사용 하 여 검사할 수 있습니다.</xref:System.ServiceModel.Channels.MessageBuffer> 본문은 <xref:System.ServiceModel.Channels.Message>월 전체적으로 버퍼링된 되지 않은 필터 검사에 사용할 수 있습니다.</xref:System.ServiceModel.Channels.Message> 헤더 요소는 <xref:System.ServiceModel.Channels.Message>가 자동으로 버퍼링 하 고 사용 중인 없이도 검사할 수 있습니다.</xref:System.ServiceModel.Channels.Message>"
  syntax:
    content: public abstract bool Match (System.ServiceModel.Channels.MessageBuffer buffer);
    parameters:
    - id: buffer
      type: System.ServiceModel.Channels.MessageBuffer
      description: "<xref:System.ServiceModel.Channels.MessageBuffer>테스트할 개체</xref:System.ServiceModel.Channels.MessageBuffer>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.ServiceModel.Channels.MessageBuffer>필터 기준을 충족 하는 개체, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.Channels.MessageBuffer>"
  overload: System.ServiceModel.Dispatcher.MessageFilter.Match*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Dispatcher.MessageFilter.#ctor
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: MessageFilter()
  nameWithType: MessageFilter.MessageFilter()
  fullName: System.ServiceModel.Dispatcher.MessageFilter.MessageFilter()
- uid: System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: CreateFilterTable()
  nameWithType: MessageFilter.CreateFilterTable()
  fullName: System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable()
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable{FilterData}
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: IMessageFilterTable<FilterData>
  nameWithType: IMessageFilterTable<FilterData>
  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<FilterData>
  spec.csharp:
  - uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1
    name: IMessageFilterTable
    nameWithType: IMessageFilterTable
    fullName: IMessageFilterTable<FilterData>
  - name: <
    nameWithType: <
    fullName: <
  - uid: FilterData
    name: FilterData
    nameWithType: FilterData
    fullName: FilterData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: Match(Message)
  nameWithType: MessageFilter.Match(Message)
  fullName: System.ServiceModel.Dispatcher.MessageFilter.Match(Message)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: Match(MessageBuffer)
  nameWithType: MessageFilter.Match(MessageBuffer)
  fullName: System.ServiceModel.Dispatcher.MessageFilter.Match(MessageBuffer)
- uid: System.ServiceModel.Channels.MessageBuffer
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageBuffer
  nameWithType: MessageBuffer
  fullName: System.ServiceModel.Channels.MessageBuffer
- uid: System.ServiceModel.Dispatcher.MessageFilter.#ctor*
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: MessageFilter
  nameWithType: MessageFilter.MessageFilter
- uid: System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable<FilterData>*
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: CreateFilterTable<FilterData>
  nameWithType: MessageFilter.CreateFilterTable<FilterData>
- uid: System.ServiceModel.Dispatcher.MessageFilter.Match*
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: Match
  nameWithType: MessageFilter.Match
