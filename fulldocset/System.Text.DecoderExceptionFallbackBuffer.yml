### YamlMime:ManagedReference
items:
- uid: System.Text.DecoderExceptionFallbackBuffer
  id: DecoderExceptionFallbackBuffer
  children:
  - System.Text.DecoderExceptionFallbackBuffer.#ctor
  - System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)
  - System.Text.DecoderExceptionFallbackBuffer.GetNextChar
  - System.Text.DecoderExceptionFallbackBuffer.MovePrevious
  - System.Text.DecoderExceptionFallbackBuffer.Remaining
  langs:
  - csharp
  name: DecoderExceptionFallbackBuffer
  nameWithType: DecoderExceptionFallbackBuffer
  fullName: System.Text.DecoderExceptionFallbackBuffer
  type: Class
  summary: "Throw <xref:System.Text.DecoderFallbackException>인코딩된 입력된 바이트 시퀀스 없습니다 디코딩된 출력 문자로 변환할.</xref:System.Text.DecoderFallbackException> 이 클래스는 상속 될 수 없습니다."
  remarks: "A common reason for an encoding or decoding operation to fail is if the underlying encoding class does not provide a mapping between a character and an equivalent byte sequence. If the input byte sequence cannot be converted to an output character, the decoding operation calls the [Fallback(Byte\\[\\], Int32)](assetId:///M:System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)?qualifyHint=False&autoUpgrade=True) method, which throws <xref:System.Text.DecoderFallbackException>.  \n  \n The <xref:System.Text.DecoderFallbackBuffer?displayProperty=fullName> class, which represents a data buffer used in a decoding operation, is the base class for the DecoderExceptionFallbackBuffer class. However, instead of a data buffer, the DecoderExceptionFallbackBuffer class represents a standard behavior in which an exception is thrown if a decoding operation fails. No actual data buffer exists, and the members designed to manipulate such a buffer do no significant work."
  syntax:
    content: 'public sealed class DecoderExceptionFallbackBuffer : System.Text.DecoderFallbackBuffer'
  inheritance:
  - System.Text.DecoderFallbackBuffer
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Text.DecoderExceptionFallbackBuffer.#ctor
  id: '#ctor'
  parent: System.Text.DecoderExceptionFallbackBuffer
  langs:
  - csharp
  name: DecoderExceptionFallbackBuffer()
  nameWithType: DecoderExceptionFallbackBuffer.DecoderExceptionFallbackBuffer()
  fullName: System.Text.DecoderExceptionFallbackBuffer.DecoderExceptionFallbackBuffer()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Text.DecoderExceptionFallbackBuffer&quot;> </xref> 클래스입니다."
  syntax:
    content: public DecoderExceptionFallbackBuffer ();
    parameters: []
  overload: System.Text.DecoderExceptionFallbackBuffer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)
  id: Fallback(System.Byte[],System.Int32)
  parent: System.Text.DecoderExceptionFallbackBuffer
  langs:
  - csharp
  name: Fallback(Byte[],Int32)
  nameWithType: DecoderExceptionFallbackBuffer.Fallback(Byte[],Int32)
  fullName: System.Text.DecoderExceptionFallbackBuffer.Fallback(Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Throw <xref:System.Text.DecoderFallbackException>입력된 바이트 시퀀스를 디코딩할 수 없습니다.</xref:System.Text.DecoderFallbackException> 명목 반환 값은 사용 되지 않습니다."
  remarks: "<xref:System.Text.Encoding.GetBytes%2A>및 <xref:System.Text.Decoder.Convert%2A>메서드는 입력에 알 수 없는 바이트에 도달할 경우 대체 (fallback)를 호출 합니다.</xref:System.Text.Decoder.Convert%2A> </xref:System.Text.Encoding.GetBytes%2A> 에 대 한 응답 대체 (fallback) 메서드에서 항상 throw <xref:System.Text.DecoderFallbackException>입력된 데이터를 표시 합니다.</xref:System.Text.DecoderFallbackException> 대체 (fallback) 메서드는 명목상으로 입력된 바이트 시퀀스를 디코딩할 수 없는 경우 예외가 throw 됩니다 있는지 여부를 나타냅니다."
  syntax:
    content: public override bool Fallback (byte[] bytesUnknown, int index);
    parameters:
    - id: bytesUnknown
      type: System.Byte[]
      description: "바이트의 입력된 배열입니다."
    - id: index
      type: System.Int32
      description: "입력에서 바이트의 인덱스 위치입니다."
    return:
      type: System.Boolean
      description: "없음. 대체 방법은 항상 예외를 throw 하기 때문에 아무 값도 반환 합니다.       명목 반환 값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다. 이 메서드는 추상 메서드를 구현 하기 때문에 변경 되지 않는 있지만 반환 값이 정의 됩니다."
  overload: System.Text.DecoderExceptionFallbackBuffer.Fallback*
  exceptions:
  - type: System.Text.DecoderFallbackException
    commentId: T:System.Text.DecoderFallbackException
    description: "이 메서드는 항상 디코딩할 수 없는 입력된 바이트의 값과 인덱스 위치를 보고 하는 예외를 throw 합니다."
  platform:
  - net462
- uid: System.Text.DecoderExceptionFallbackBuffer.GetNextChar
  id: GetNextChar
  parent: System.Text.DecoderExceptionFallbackBuffer
  langs:
  - csharp
  name: GetNextChar()
  nameWithType: DecoderExceptionFallbackBuffer.GetNextChar()
  fullName: System.Text.DecoderExceptionFallbackBuffer.GetNextChar()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "예외 데이터 버퍼의 다음 문자를 검색 합니다."
  remarks: "때문에 <xref:System.Text.DecoderExceptionFallbackBuffer>는 실제 예외 데이터 버퍼가 없으므로 GetNextChar 메서드 항상 유니코드 NULL 문자를 반환 합니다.</xref:System.Text.DecoderExceptionFallbackBuffer>"
  syntax:
    content: public override char GetNextChar ();
    parameters: []
    return:
      type: System.Char
      description: "반환 값은 항상 NULL 유니코드 문자 (U +&0000;)입니다.       이 메서드는 추상 메서드를 구현 하기 때문에 변경 되지 않는 있지만 반환 값이 정의 됩니다."
  overload: System.Text.DecoderExceptionFallbackBuffer.GetNextChar*
  exceptions: []
  platform:
  - net462
- uid: System.Text.DecoderExceptionFallbackBuffer.MovePrevious
  id: MovePrevious
  parent: System.Text.DecoderExceptionFallbackBuffer
  langs:
  - csharp
  name: MovePrevious()
  nameWithType: DecoderExceptionFallbackBuffer.MovePrevious()
  fullName: System.Text.DecoderExceptionFallbackBuffer.MovePrevious()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "다음 호출이 <xref:System.Text.DecoderExceptionFallbackBuffer.GetNextChar*>현재 위치 앞 예외 데이터 버퍼 문자 위치에 액세스할 수 있습니다.</xref:System.Text.DecoderExceptionFallbackBuffer.GetNextChar*>"
  remarks: "때문에 <xref:System.Text.DecoderExceptionFallbackBuffer>는 실제 예외 데이터 버퍼가 없으므로 MovePrevious 메서드는 항상 반환 `false`.</xref:System.Text.DecoderExceptionFallbackBuffer>"
  syntax:
    content: public override bool MovePrevious ();
    parameters: []
    return:
      type: System.Boolean
      description: "반환 값은 항상 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다.       이 메서드는 추상 메서드를 구현 하기 때문에 변경 되지 않는 있지만 반환 값이 정의 됩니다."
  overload: System.Text.DecoderExceptionFallbackBuffer.MovePrevious*
  exceptions: []
  platform:
  - net462
- uid: System.Text.DecoderExceptionFallbackBuffer.Remaining
  id: Remaining
  parent: System.Text.DecoderExceptionFallbackBuffer
  langs:
  - csharp
  name: Remaining
  nameWithType: DecoderExceptionFallbackBuffer.Remaining
  fullName: System.Text.DecoderExceptionFallbackBuffer.Remaining
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "현재에서 문자 수를 가져옵니다 <xref href=&quot;System.Text.DecoderExceptionFallbackBuffer&quot;> </xref> 계속 처리 하는 개체입니다."
  remarks: "때문에 <xref:System.Text.DecoderExceptionFallbackBuffer>는 실제 예외 데이터 버퍼가 없으므로 남은 속성은 항상&0;을 반환 합니다.</xref:System.Text.DecoderExceptionFallbackBuffer>"
  syntax:
    content: public override int Remaining { get; }
    return:
      type: System.Int32
      description: "반환 값은 항상&0;입니다.       이 메서드는 추상 메서드를 구현 하기 때문에 변경 되지 않는 있지만 반환 값이 정의 됩니다."
  overload: System.Text.DecoderExceptionFallbackBuffer.Remaining*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Text.DecoderFallbackBuffer
  isExternal: false
  name: System.Text.DecoderFallbackBuffer
- uid: System.Text.DecoderFallbackException
  isExternal: true
  name: System.Text.DecoderFallbackException
- uid: System.Text.DecoderExceptionFallbackBuffer.#ctor
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: DecoderExceptionFallbackBuffer()
  nameWithType: DecoderExceptionFallbackBuffer.DecoderExceptionFallbackBuffer()
  fullName: System.Text.DecoderExceptionFallbackBuffer.DecoderExceptionFallbackBuffer()
- uid: System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: Fallback(Byte[],Int32)
  nameWithType: DecoderExceptionFallbackBuffer.Fallback(Byte[],Int32)
  fullName: System.Text.DecoderExceptionFallbackBuffer.Fallback(Byte[],Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Text.DecoderExceptionFallbackBuffer.GetNextChar
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: GetNextChar()
  nameWithType: DecoderExceptionFallbackBuffer.GetNextChar()
  fullName: System.Text.DecoderExceptionFallbackBuffer.GetNextChar()
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Text.DecoderExceptionFallbackBuffer.MovePrevious
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: MovePrevious()
  nameWithType: DecoderExceptionFallbackBuffer.MovePrevious()
  fullName: System.Text.DecoderExceptionFallbackBuffer.MovePrevious()
- uid: System.Text.DecoderExceptionFallbackBuffer.Remaining
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: Remaining
  nameWithType: DecoderExceptionFallbackBuffer.Remaining
  fullName: System.Text.DecoderExceptionFallbackBuffer.Remaining
- uid: System.Text.DecoderExceptionFallbackBuffer.#ctor*
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: DecoderExceptionFallbackBuffer
  nameWithType: DecoderExceptionFallbackBuffer.DecoderExceptionFallbackBuffer
- uid: System.Text.DecoderExceptionFallbackBuffer.Fallback*
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: Fallback
  nameWithType: DecoderExceptionFallbackBuffer.Fallback
- uid: System.Text.DecoderExceptionFallbackBuffer.GetNextChar*
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: GetNextChar
  nameWithType: DecoderExceptionFallbackBuffer.GetNextChar
- uid: System.Text.DecoderExceptionFallbackBuffer.MovePrevious*
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: MovePrevious
  nameWithType: DecoderExceptionFallbackBuffer.MovePrevious
- uid: System.Text.DecoderExceptionFallbackBuffer.Remaining*
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: Remaining
  nameWithType: DecoderExceptionFallbackBuffer.Remaining
