### YamlMime:ManagedReference
items:
- uid: System.Web.UI.AsyncPostBackTrigger
  id: AsyncPostBackTrigger
  children:
  - System.Web.UI.AsyncPostBackTrigger.#ctor
  - System.Web.UI.AsyncPostBackTrigger.ControlID
  - System.Web.UI.AsyncPostBackTrigger.EventName
  - System.Web.UI.AsyncPostBackTrigger.HasTriggered
  - System.Web.UI.AsyncPostBackTrigger.Initialize
  - System.Web.UI.AsyncPostBackTrigger.OnEvent(System.Object,System.EventArgs)
  - System.Web.UI.AsyncPostBackTrigger.ToString
  langs:
  - csharp
  name: AsyncPostBackTrigger
  nameWithType: AsyncPostBackTrigger
  fullName: System.Web.UI.AsyncPostBackTrigger
  type: Class
  summary: "컨트롤 및 컨트롤의 선택적 이벤트를 발생 시키는 비동기 포스트백 컨트롤 트리거로 정의 <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> 새로 고침을 제어 합니다."
  remarks: "컨트롤에 대 한 트리거를 사용할 수 있도록 AsyncPostBackTrigger 컨트롤을 사용 하 여 프로그램 <xref:System.Web.UI.UpdatePanel>컨트롤.</xref:System.Web.UI.UpdatePanel> 비동기 포스트백 후 패널의 콘텐츠를 새로 발생 하는 업데이트 패널에 대 한 트리거 되는 제어 합니다. 비동기 트리거 클래스를 정의 하는 것은 다음 시나리오에서 유용 합니다.-패널 외부에 있는 컨트롤에 대 한 합니다.      액세스 패널 내에 있는 컨트롤에 대 한 경우는 <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>속성은 `false`.</xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>      -부모 패널 새로 고치려는 중첩 된 패널 내에 있는 컨트롤에 대 한       역할을 하는 트리거 업데이트 패널와 같은 명명 컨테이너에 AsyncPostBackTrigger 컨트롤에서 참조 하는 컨트롤 이어야 합니다. 다른 명명 컨테이너의 컨트롤을 기반으로 하는 트리거는 지원 되지 않습니다.       AsyncPostBackTrigger 제어를 사용 하 여 추가 된 **UpdatePanelTrigger 컬렉션 편집기** 대화 상자는 디자이너에서 사용 하거나 만들어서는 `Triggers` 요소에서 선언적으로 <xref:System.Web.UI.UpdatePanel>컨트롤.</xref:System.Web.UI.UpdatePanel> <xref:System.Web.UI.AsyncPostBackTrigger.ControlID%2A>속성은 필요 하지만 <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A>속성은 선택 사항.</xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> </xref:System.Web.UI.AsyncPostBackTrigger.ControlID%2A> 경우는 <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A>속성을 지정 하지 않으면는 <xref:System.ComponentModel.DefaultEventAttribute>특성 컨트롤의 기본 이벤트를 확인 하는 데 사용 됩니다.</xref:System.ComponentModel.DefaultEventAttribute> </xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> 예를 들어에 대 한 기본 이벤트는 <xref:System.Web.UI.WebControls.Button>컨트롤은는 <xref:System.Web.UI.WebControls.Button.Click>이벤트.</xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.Button> <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A>속성은 대/소문자 구분.</xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A>       또한 트리거로 명명 컨테이너를 참조할 수 있습니다. 포스트백을 발생 시키는 컨테이너의 모든 자식 컨트롤에 대 한 트리거 것으로 간주 됩니다는 경우에 <xref:System.Web.UI.UpdatePanel>컨트롤.</xref:System.Web.UI.UpdatePanel>       프로그래밍 방식으로 AsyncPostBackTrigger 컨트롤을 추가 하는 것은 지원 되지 않습니다. 포스트백 컨트롤을 프로그래밍 방식으로 등록 하려면는 <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>의 메서드는 <xref:System.Web.UI.ScriptManager>컨트롤.</xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> 다음 호출에서 <xref:System.Web.UI.UpdatePanel.Update%2A>의 메서드는 <xref:System.Web.UI.UpdatePanel>컨트롤이 다시 게시 하는 시기를 제어 합니다.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel.Update%2A>       모두 사용 하 여 컨트롤을 정의 하는 경우 <xref:System.Web.UI.PostBackTrigger>AsyncPostBackTrigger, 예외가 throw 됩니다.</xref:System.Web.UI.PostBackTrigger>"
  example:
  - "The following example shows how to add an AsyncPostBackTrigger control declaratively. A <xref:System.Web.UI.WebControls.Button> control that is outside an <xref:System.Web.UI.UpdatePanel> control lets users enter a search term to find in the `Products` table of the Northwind database. A <xref:System.Web.UI.WebControls.GridView> control that is inside the <xref:System.Web.UI.UpdatePanel> control shows the results. The <xref:System.Web.UI.WebControls.Button> control is specified as an asynchronous trigger for the <xref:System.Web.UI.UpdatePanel> control.  \n  \n [!code-vb[System.Web.UI.AsyncPostBackTrigger#1](~/add/codesnippet/visualbasic/t-system.web.ui.asyncpos_1.aspx)]\n [!code-cs[System.Web.UI.AsyncPostBackTrigger#1](~/add/codesnippet/csharp/t-system.web.ui.asyncpos_1.aspx)]"
  syntax:
    content: 'public class AsyncPostBackTrigger : System.Web.UI.UpdatePanelControlTrigger'
  inheritance:
  - System.Object
  - System.Web.UI.UpdatePanelTrigger
  - System.Web.UI.UpdatePanelControlTrigger
  implements: []
  inheritedMembers:
  - System.Web.UI.UpdatePanelControlTrigger.FindTargetControl(System.Boolean)
  - System.Web.UI.UpdatePanelTrigger.Owner
  platform:
  - net462
- uid: System.Web.UI.AsyncPostBackTrigger.#ctor
  id: '#ctor'
  parent: System.Web.UI.AsyncPostBackTrigger
  langs:
  - csharp
  name: AsyncPostBackTrigger()
  nameWithType: AsyncPostBackTrigger.AsyncPostBackTrigger()
  fullName: System.Web.UI.AsyncPostBackTrigger.AsyncPostBackTrigger()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "새 인스턴스를 초기화 한 <xref href=&quot;System.Web.UI.AsyncPostBackTrigger&quot;> </xref> 클래스입니다."
  remarks: "추가 <xref:System.Web.UI.AsyncPostBackTrigger>제어를 사용 하 여는 **UpdatePanelTrigger 컬렉션 편집기** 대화 상자는 디자이너에서 사용 하거나 만들어서는 `Triggers` 에서 선언적으로 요소는 <xref:System.Web.UI.UpdatePanel>컨트롤.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.AsyncPostBackTrigger>       추가 <xref:System.Web.UI.AsyncPostBackTrigger>컨트롤이 프로그래밍 방식으로 지원 되지 않습니다.</xref:System.Web.UI.AsyncPostBackTrigger>"
  syntax:
    content: public AsyncPostBackTrigger ();
    parameters: []
  overload: System.Web.UI.AsyncPostBackTrigger.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AsyncPostBackTrigger.ControlID
  id: ControlID
  parent: System.Web.UI.AsyncPostBackTrigger
  langs:
  - csharp
  name: ControlID
  nameWithType: AsyncPostBackTrigger.ControlID
  fullName: System.Web.UI.AsyncPostBackTrigger.ControlID
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "에 대 한 비동기 포스트백을 트리거하는 컨트롤의 이름을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> 제어 합니다."
  syntax:
    content: public string ControlID { get; set; }
    return:
      type: System.String
      description: "서버 컨트롤 id입니다."
  overload: System.Web.UI.AsyncPostBackTrigger.ControlID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AsyncPostBackTrigger.EventName
  id: EventName
  parent: System.Web.UI.AsyncPostBackTrigger
  langs:
  - csharp
  name: EventName
  nameWithType: AsyncPostBackTrigger.EventName
  fullName: System.Web.UI.AsyncPostBackTrigger.EventName
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "포스트백 컨트롤 이벤트를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> 컨트롤을 업데이트 합니다."
  remarks: "EventName 속성은 선택 사항입니다. 지정 하지 않으면는 <xref:System.ComponentModel.DefaultEventAttribute>특성 컨트롤의 기본 이벤트를 확인 하는 데 사용 됩니다.</xref:System.ComponentModel.DefaultEventAttribute> 다음 표에서 몇 가지 일반적인 ASP.NET 2.0 컨트롤에 대 한 기본 이벤트를 나열합니다.      | 컨트롤 | 기본 이벤트 |   |-------------|-------------------|   | <xref:System.Web.UI.WebControls.Button>| <xref:System.Web.UI.WebControls.Button.Click>|   | <xref:System.Web.UI.WebControls.Calendar>| <xref:System.Web.UI.WebControls.Calendar.SelectionChanged>|   | <xref:System.Web.UI.WebControls.CheckBox>| <xref:System.Web.UI.WebControls.CheckBox.CheckedChanged>|   | <xref:System.Web.UI.WebControls.GridView>| <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|   | <xref:System.Web.UI.WebControls.TextBox>| <xref:System.Web.UI.WebControls.TextBox.TextChanged>|</xref:System.Web.UI.WebControls.TextBox.TextChanged></xref:System.Web.UI.WebControls.TextBox></xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged></xref:System.Web.UI.WebControls.GridView></xref:System.Web.UI.WebControls.CheckBox.CheckedChanged></xref:System.Web.UI.WebControls.CheckBox></xref:System.Web.UI.WebControls.Calendar.SelectionChanged></xref:System.Web.UI.WebControls.Calendar></xref:System.Web.UI.WebControls.Button.Click></xref:System.Web.UI.WebControls.Button>"
  syntax:
    content: public string EventName { get; set; }
    return:
      type: System.String
      description: "이벤트 이름입니다. 기본값은 <xref:System.String>.</xref:System.String>"
  overload: System.Web.UI.AsyncPostBackTrigger.EventName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AsyncPostBackTrigger.HasTriggered
  id: HasTriggered
  parent: System.Web.UI.AsyncPostBackTrigger
  langs:
  - csharp
  name: HasTriggered()
  nameWithType: AsyncPostBackTrigger.HasTriggered()
  fullName: System.Web.UI.AsyncPostBackTrigger.HasTriggered()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "트리거가 호출 되었는지 여부를 나타내는 값을 반환 합니다."
  remarks: "컨트롤 개발자가 트리거가 호출 되었는지 여부를 확인 하기 위한 사용자 지정 논리를 제공 하려면 HasTriggered 메서드를 재정의할 수 있습니다. 사용자 지정 트리거를 보려면는 `Triggers` 의 요소는 <xref:System.Web.UI.UpdatePanel>컨트롤, 페이지 또는 Web.config 파일의 요소에 한 지시문을 추가할 수 있습니다.</xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: protected override bool HasTriggered ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>트리거가 호출 될 때; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.AsyncPostBackTrigger.HasTriggered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AsyncPostBackTrigger.Initialize
  id: Initialize
  parent: System.Web.UI.AsyncPostBackTrigger
  langs:
  - csharp
  name: Initialize()
  nameWithType: AsyncPostBackTrigger.Initialize()
  fullName: System.Web.UI.AsyncPostBackTrigger.Initialize()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "초기화는 <xref href=&quot;System.Web.UI.AsyncPostBackTrigger&quot;> </xref> 제어 하 고 트리거에 지정 된 이벤트가 있고 올바른지 여부를 결정 합니다."
  syntax:
    content: protected override void Initialize ();
    parameters: []
  overload: System.Web.UI.AsyncPostBackTrigger.Initialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "No <xref href=\"System.Web.UI.ScriptManager\"></xref> control was found on the page.  \n  \n \\- or -  \n  \n The event that is named in the <xref:System.Web.UI.AsyncPostBackTrigger.EventName*> property is not found for the control that is named in the <xref:System.Web.UI.UpdatePanelControlTrigger.ControlID*> property.  \n  \n \\- or -  \n  \n The event that is named in the <xref:System.Web.UI.AsyncPostBackTrigger.EventName*> property for the control that is named in the <xref:System.Web.UI.UpdatePanelControlTrigger.ControlID*> property does not match a standard event handler signature."
  platform:
  - net462
- uid: System.Web.UI.AsyncPostBackTrigger.OnEvent(System.Object,System.EventArgs)
  id: OnEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.AsyncPostBackTrigger
  langs:
  - csharp
  name: OnEvent(Object,EventArgs)
  nameWithType: AsyncPostBackTrigger.OnEvent(Object,EventArgs)
  fullName: System.Web.UI.AsyncPostBackTrigger.OnEvent(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "다시 게시 및 새로 고침을 트리거하는 이벤트를 발생 한 <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> 제어 합니다."
  syntax:
    content: public void OnEvent (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "이벤트 전송자입니다."
    - id: e
      type: System.EventArgs
      description: "이벤트 데이터입니다."
  overload: System.Web.UI.AsyncPostBackTrigger.OnEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AsyncPostBackTrigger.ToString
  id: ToString
  parent: System.Web.UI.AsyncPostBackTrigger
  langs:
  - csharp
  name: ToString()
  nameWithType: AsyncPostBackTrigger.ToString()
  fullName: System.Web.UI.AsyncPostBackTrigger.ToString()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "현재 문자열 표현을 반환 <xref href=&quot;System.Web.UI.AsyncPostBackTrigger&quot;> </xref> 제어 합니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "현재 나타내는 string <xref href=&quot;System.Web.UI.AsyncPostBackTrigger&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.AsyncPostBackTrigger.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.UpdatePanelControlTrigger
  isExternal: false
  name: System.Web.UI.UpdatePanelControlTrigger
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.AsyncPostBackTrigger.#ctor
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: AsyncPostBackTrigger()
  nameWithType: AsyncPostBackTrigger.AsyncPostBackTrigger()
  fullName: System.Web.UI.AsyncPostBackTrigger.AsyncPostBackTrigger()
- uid: System.Web.UI.AsyncPostBackTrigger.ControlID
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: ControlID
  nameWithType: AsyncPostBackTrigger.ControlID
  fullName: System.Web.UI.AsyncPostBackTrigger.ControlID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.AsyncPostBackTrigger.EventName
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: EventName
  nameWithType: AsyncPostBackTrigger.EventName
  fullName: System.Web.UI.AsyncPostBackTrigger.EventName
- uid: System.Web.UI.AsyncPostBackTrigger.HasTriggered
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: HasTriggered()
  nameWithType: AsyncPostBackTrigger.HasTriggered()
  fullName: System.Web.UI.AsyncPostBackTrigger.HasTriggered()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.AsyncPostBackTrigger.Initialize
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: Initialize()
  nameWithType: AsyncPostBackTrigger.Initialize()
  fullName: System.Web.UI.AsyncPostBackTrigger.Initialize()
- uid: System.Web.UI.AsyncPostBackTrigger.OnEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: OnEvent(Object,EventArgs)
  nameWithType: AsyncPostBackTrigger.OnEvent(Object,EventArgs)
  fullName: System.Web.UI.AsyncPostBackTrigger.OnEvent(Object,EventArgs)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.AsyncPostBackTrigger.ToString
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: ToString()
  nameWithType: AsyncPostBackTrigger.ToString()
  fullName: System.Web.UI.AsyncPostBackTrigger.ToString()
- uid: System.Web.UI.AsyncPostBackTrigger.#ctor*
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: AsyncPostBackTrigger
  nameWithType: AsyncPostBackTrigger.AsyncPostBackTrigger
- uid: System.Web.UI.AsyncPostBackTrigger.ControlID*
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: ControlID
  nameWithType: AsyncPostBackTrigger.ControlID
- uid: System.Web.UI.AsyncPostBackTrigger.EventName*
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: EventName
  nameWithType: AsyncPostBackTrigger.EventName
- uid: System.Web.UI.AsyncPostBackTrigger.HasTriggered*
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: HasTriggered
  nameWithType: AsyncPostBackTrigger.HasTriggered
- uid: System.Web.UI.AsyncPostBackTrigger.Initialize*
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: Initialize
  nameWithType: AsyncPostBackTrigger.Initialize
- uid: System.Web.UI.AsyncPostBackTrigger.OnEvent*
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: OnEvent
  nameWithType: AsyncPostBackTrigger.OnEvent
- uid: System.Web.UI.AsyncPostBackTrigger.ToString*
  parent: System.Web.UI.AsyncPostBackTrigger
  isExternal: false
  name: ToString
  nameWithType: AsyncPostBackTrigger.ToString
