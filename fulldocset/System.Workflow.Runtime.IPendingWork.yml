### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.IPendingWork
  id: IPendingWork
  children:
  - System.Workflow.Runtime.IPendingWork.Commit(System.Transactions.Transaction,System.Collections.ICollection)
  - System.Workflow.Runtime.IPendingWork.Complete(System.Boolean,System.Collections.ICollection)
  - System.Workflow.Runtime.IPendingWork.MustCommit(System.Collections.ICollection)
  langs:
  - csharp
  name: IPendingWork
  nameWithType: IPendingWork
  fullName: System.Workflow.Runtime.IPendingWork
  type: Interface
  summary: "작업 일괄 처리에 참여 하는 메서드를 제공 합니다."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]IPendingWork 인터페이스 메커니즘을 일괄 처리 하는 워크플로 런타임 엔진에 참여 하는 서비스에 제공 됩니다. 영 속 저장소를 사용 하는 서비스에 대 한 일괄 처리 메커니즘은 특히 유용 합니다. 종종 이러한 경우 워크플로 런타임 엔진의 내부 상태와 서비스에서 사용 하는 영 속 저장소 간의 일관성을 유지 하는 것이 유용 합니다.       서비스는 워크플로 트랜잭션 일괄 처리에서 제공에 참여 하도록 하려는 경우는 <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>, IPendingWork 인터페이스에 의해 정의 된 메서드를 구현 해야 합니다.</xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> 워크플로 런타임 엔진에서 호출 됩니다는 <xref:System.Workflow.Runtime.IPendingWork.Commit%2A>일괄 처리 커밋을 서비스에서 메서드.</xref:System.Workflow.Runtime.IPendingWork.Commit%2A>       <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>클래스 IPendingWork 인터페이스를 구현 합니다.</xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public interface IPendingWork
  implements: []
  platform:
  - net462
- uid: System.Workflow.Runtime.IPendingWork.Commit(System.Transactions.Transaction,System.Collections.ICollection)
  id: Commit(System.Transactions.Transaction,System.Collections.ICollection)
  parent: System.Workflow.Runtime.IPendingWork
  langs:
  - csharp
  name: Commit(Transaction,ICollection)
  nameWithType: IPendingWork.Commit(Transaction,ICollection)
  fullName: System.Workflow.Runtime.IPendingWork.Commit(Transaction,ICollection)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "지정 된를 사용 하 여 작업 항목 목록을 커밋합니다 <xref href=&quot;System.Transactions.Transaction&quot;> </xref> 개체입니다."
  remarks: "워크플로 런타임 엔진은 해당 의미 체계가 작업 일괄 처리의 보류 중인 작업 커밋되어야 함을 지시 Commit 메서드를 호출 합니다. 커밋 지점에 도달 하면 워크플로 런타임 엔진은 각 Commit 메서드를 호출할 <xref:System.Workflow.Runtime.IPendingWork>은 작업 일괄 처리에서 개체, 않으면 워크플로 런타임 엔진은 통과 Commit 메서드와 연결 된 항목의 컬렉션 <xref:System.Workflow.Runtime.IPendingWork>개체입니다.</xref:System.Workflow.Runtime.IPendingWork> </xref:System.Workflow.Runtime.IPendingWork> 일괄 처리에서 작업을 모두 성공 하거나 모두 실패 합니다. Commit 메서드 구현에서에 전달 되는 작업 항목이 커밋할 수 없는 경우 예외를 throw 해야 합니다. 구현에 따라 작업 항목을 커밋할 수 없는 경우 커밋 메서드에서 일부 롤백을 수행 해야 할 수도 있습니다. 워크플로 런타임 엔진의 모든 작업 일괄 처리에서 작업을 성공적으로 커밋하면, 호출 <xref:System.Workflow.Runtime.IPendingWork.Complete%2A>와 `succeeded` 매개 변수 설정 `true`, 그렇지 않으면 호출 <xref:System.Workflow.Runtime.IPendingWork.Complete%2A>와 `succeeded` 로 설정 `false`.</xref:System.Workflow.Runtime.IPendingWork.Complete%2A> </xref:System.Workflow.Runtime.IPendingWork.Complete%2A>"
  syntax:
    content: public void Commit (System.Transactions.Transaction transaction, System.Collections.ICollection items);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "<xref href=&quot;System.Transactions.Transaction&quot;> </xref> 보류 중인 작업을 연관 됩니다."
    - id: items
      type: System.Collections.ICollection
      description: "작업 항목을 커밋할 수입니다."
  overload: System.Workflow.Runtime.IPendingWork.Commit*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.IPendingWork.Complete(System.Boolean,System.Collections.ICollection)
  id: Complete(System.Boolean,System.Collections.ICollection)
  parent: System.Workflow.Runtime.IPendingWork
  langs:
  - csharp
  name: Complete(Boolean,ICollection)
  nameWithType: IPendingWork.Complete(Boolean,ICollection)
  fullName: System.Workflow.Runtime.IPendingWork.Complete(Boolean,ICollection)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "트랜잭션이 완료 될 때 호출 합니다."
  remarks: "경우 `succeeded` 은 `true`이면 트랜잭션이 성공 했으며 작업 일괄 처리에서 사용 하는 모든 리소스를 해제할 수 있습니다. 경우 `succeeded` 은 `false`, 트랜잭션이 실패 했습니다. 구현에 따라 트랜잭션이 실패할 경우 작업 일괄 처리에서 작업 적절 한 롤백을 수행할 수 있습니다."
  syntax:
    content: public void Complete (bool succeeded, System.Collections.ICollection items);
    parameters:
    - id: succeeded
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>트랜잭션이 성공 했으면; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: items
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>작업 항목.</xref:System.Collections.ICollection>"
  overload: System.Workflow.Runtime.IPendingWork.Complete*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.IPendingWork.MustCommit(System.Collections.ICollection)
  id: MustCommit(System.Collections.ICollection)
  parent: System.Workflow.Runtime.IPendingWork
  langs:
  - csharp
  name: MustCommit(ICollection)
  nameWithType: IPendingWork.MustCommit(ICollection)
  fullName: System.Workflow.Runtime.IPendingWork.MustCommit(ICollection)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "항목이 있는지 여부를 즉시 커밋되어야 어설션 작업 일괄 처리에서 수 있도록 합니다."
  remarks: "MustCommit 반환 하는 경우 `false`, 작업이 이후 커밋 지점으로 연기 될 수 있습니다. 항목을 커밋해야 하는 경우 다음 반환 `true` 모든 항목이 현재 커밋 지점에서 커밋됩니다. 가능한 커밋 지점에 대 한 논의 알려면 <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>클래스</xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>"
  syntax:
    content: public bool MustCommit (System.Collections.ICollection items);
    parameters:
    - id: items
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>작업 항목.</xref:System.Collections.ICollection>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컬렉션의 항목이 즉시 커밋되어야; 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Workflow.Runtime.IPendingWork.MustCommit*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Runtime.IPendingWork.Commit(System.Transactions.Transaction,System.Collections.ICollection)
  parent: System.Workflow.Runtime.IPendingWork
  isExternal: false
  name: Commit(Transaction,ICollection)
  nameWithType: IPendingWork.Commit(Transaction,ICollection)
  fullName: System.Workflow.Runtime.IPendingWork.Commit(Transaction,ICollection)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Workflow.Runtime.IPendingWork.Complete(System.Boolean,System.Collections.ICollection)
  parent: System.Workflow.Runtime.IPendingWork
  isExternal: false
  name: Complete(Boolean,ICollection)
  nameWithType: IPendingWork.Complete(Boolean,ICollection)
  fullName: System.Workflow.Runtime.IPendingWork.Complete(Boolean,ICollection)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Runtime.IPendingWork.MustCommit(System.Collections.ICollection)
  parent: System.Workflow.Runtime.IPendingWork
  isExternal: false
  name: MustCommit(ICollection)
  nameWithType: IPendingWork.MustCommit(ICollection)
  fullName: System.Workflow.Runtime.IPendingWork.MustCommit(ICollection)
- uid: System.Workflow.Runtime.IPendingWork.Commit*
  parent: System.Workflow.Runtime.IPendingWork
  isExternal: false
  name: Commit
  nameWithType: IPendingWork.Commit
- uid: System.Workflow.Runtime.IPendingWork.Complete*
  parent: System.Workflow.Runtime.IPendingWork
  isExternal: false
  name: Complete
  nameWithType: IPendingWork.Complete
- uid: System.Workflow.Runtime.IPendingWork.MustCommit*
  parent: System.Workflow.Runtime.IPendingWork
  isExternal: false
  name: MustCommit
  nameWithType: IPendingWork.MustCommit
