### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.PointAnimationUsingPath
  id: PointAnimationUsingPath
  children:
  - System.Windows.Media.Animation.PointAnimationUsingPath.#ctor
  - System.Windows.Media.Animation.PointAnimationUsingPath.Clone
  - System.Windows.Media.Animation.PointAnimationUsingPath.CreateInstanceCore
  - System.Windows.Media.Animation.PointAnimationUsingPath.GetCurrentValueCore(System.Windows.Point,System.Windows.Point,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.PointAnimationUsingPath.IsAdditive
  - System.Windows.Media.Animation.PointAnimationUsingPath.IsCumulative
  - System.Windows.Media.Animation.PointAnimationUsingPath.OnChanged
  - System.Windows.Media.Animation.PointAnimationUsingPath.PathGeometry
  - System.Windows.Media.Animation.PointAnimationUsingPath.PathGeometryProperty
  langs:
  - csharp
  name: PointAnimationUsingPath
  nameWithType: PointAnimationUsingPath
  fullName: System.Windows.Media.Animation.PointAnimationUsingPath
  type: Class
  summary: "값을 애니메이션는 <xref href=&quot;System.Windows.Point&quot;> </xref> 속성을 사용 하 여 두 개 이상의 대상 값을 <xref href=&quot;System.Windows.Media.PathGeometry&quot;> </xref> 해당 값을 지정 합니다. 이 애니메이션은 경로 따라 시각적 개체를 이동 데 사용할 수 있습니다."
  remarks: "PointAnimationUsingPath에 지정 된 <xref:System.Windows.Media.Animation.Timeline.Duration%2A>.</xref:System.Windows.Media.Animation.Timeline.Duration%2A> 통한 선형 보간을 사용합니다       PointAnimationUsingPath는 개체가 사용 하는 경우 화면에 개체의 위치에 애니메이션을 적용 하는 데 특히 적합 한 <xref:System.Windows.Point>위치를 지정 하는 속성.</xref:System.Windows.Point>"
  syntax:
    content: 'public class PointAnimationUsingPath : System.Windows.Media.Animation.PointAnimationBase'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.Animation.Timeline
  - System.Windows.Media.Animation.AnimationTimeline
  - System.Windows.Media.Animation.PointAnimationBase
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.Animation.AnimationTimeline.AllocateClock
  - System.Windows.Media.Animation.AnimationTimeline.CreateClock
  - System.Windows.Media.Animation.AnimationTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty
  - System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty
  - System.Windows.Media.Animation.AnimationTimeline.IsDestinationDefault
  - System.Windows.Media.Animation.PointAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.PointAnimationBase.GetCurrentValue(System.Windows.Point,System.Windows.Point,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.PointAnimationBase.TargetPropertyType
  - System.Windows.Media.Animation.Timeline.AccelerationRatio
  - System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.AutoReverse
  - System.Windows.Media.Animation.Timeline.AutoReverseProperty
  - System.Windows.Media.Animation.Timeline.BeginTime
  - System.Windows.Media.Animation.Timeline.BeginTimeProperty
  - System.Windows.Media.Animation.Timeline.CloneCurrentValue
  - System.Windows.Media.Animation.Timeline.Completed
  - System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)
  - System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
  - System.Windows.Media.Animation.Timeline.DecelerationRatio
  - System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
  - System.Windows.Media.Animation.Timeline.Duration
  - System.Windows.Media.Animation.Timeline.DurationProperty
  - System.Windows.Media.Animation.Timeline.FillBehavior
  - System.Windows.Media.Animation.Timeline.FillBehaviorProperty
  - System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
  - System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.Timeline.Name
  - System.Windows.Media.Animation.Timeline.NameProperty
  - System.Windows.Media.Animation.Timeline.RemoveRequested
  - System.Windows.Media.Animation.Timeline.RepeatBehavior
  - System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
  - System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
  - System.Windows.Media.Animation.Timeline.SpeedRatio
  - System.Windows.Media.Animation.Timeline.SpeedRatioProperty
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.PointAnimationUsingPath.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Animation.PointAnimationUsingPath
  langs:
  - csharp
  name: PointAnimationUsingPath()
  nameWithType: PointAnimationUsingPath.PointAnimationUsingPath()
  fullName: System.Windows.Media.Animation.PointAnimationUsingPath.PointAnimationUsingPath()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.Windows.Media.Animation.PointAnimationUsingPath&quot;> </xref> 클래스입니다."
  remarks: "기본값은 없습니다 <xref:System.Windows.Media.PathGeometry>하나를 사용자 지정 해야 하므로.</xref:System.Windows.Media.PathGeometry>"
  syntax:
    content: public PointAnimationUsingPath ();
    parameters: []
  overload: System.Windows.Media.Animation.PointAnimationUsingPath.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.PointAnimationUsingPath.Clone
  id: Clone
  parent: System.Windows.Media.Animation.PointAnimationUsingPath
  langs:
  - csharp
  name: Clone()
  nameWithType: PointAnimationUsingPath.Clone()
  fullName: System.Windows.Media.Animation.PointAnimationUsingPath.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "수정 가능한 복제본을 만듭니다 <xref href=&quot;System.Windows.Media.Animation.PointAnimationUsingPath&quot;> </xref>,이 개체 값의 전체 복사본입니다. 종속성 속성을 복사 하는 경우이 메서드는 리소스 참조와 데이터 바인딩을 복사 (하지만 이러한 요소는 더 이상 확인) 나 하지 않습니다 애니메이션의 현재 값입니다."
  remarks: "수정 가능한 복사본을 생성 하기 위해이 메서드는 고정 된 <xref:System.Windows.Freezable>개체 (또는 모든 <xref:System.Windows.Freezable>개체).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 편의 위해이 메서드는 강력한 형식의 구현이 포함 된 상속 된 버전을 숨깁니다.       자세한 내용은 <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName> 을 참조 하십시오."
  syntax:
    content: public System.Windows.Media.Animation.PointAnimationUsingPath Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Animation.PointAnimationUsingPath
      description: "현재 개체의 수정 가능한 복제본입니다. 복제 된 개체의 <> </> *> 속성은 됩니다 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 경우에 원본의 <> </> *> 속성은<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Animation.PointAnimationUsingPath.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.PointAnimationUsingPath.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Animation.PointAnimationUsingPath
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: PointAnimationUsingPath.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.PointAnimationUsingPath.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.Windows.Media.Animation.PointAnimationUsingPath&quot;> </xref>합니다."
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "새 인스턴스입니다."
  overload: System.Windows.Media.Animation.PointAnimationUsingPath.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.PointAnimationUsingPath.GetCurrentValueCore(System.Windows.Point,System.Windows.Point,System.Windows.Media.Animation.AnimationClock)
  id: GetCurrentValueCore(System.Windows.Point,System.Windows.Point,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.PointAnimationUsingPath
  langs:
  - csharp
  name: GetCurrentValueCore(Point,Point,AnimationClock)
  nameWithType: PointAnimationUsingPath.GetCurrentValueCore(Point,Point,AnimationClock)
  fullName: System.Windows.Media.Animation.PointAnimationUsingPath.GetCurrentValueCore(Point,Point,AnimationClock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "결정 된 대로 애니메이션 효과 줄 속성의 현재 값을 나타내는 값을 계산는 <xref href=&quot;System.Windows.Media.Animation.PointAnimationUsingPath&quot;> </xref>합니다."
  remarks: "경우는 `defaultOriginValue` 은 첫 번째 컴퍼지션 체인에서이 값이 됩니다 (있는 경우) 스냅숏 값 또는 기본 속성 값; 그렇지 않으면이 값을 이전 애니메이션 체인에서 반환한 값은 <xref:System.Windows.Media.Animation.AnimationClock>없는 <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.</xref:System.Windows.Media.Animation.Clock.Stopped%2A> </xref:System.Windows.Media.Animation.AnimationClock>       `defaultDestinationValue` 경우 기준 값은 애니메이션 속성의 첫 번째 컴퍼지션 계층 이며 그렇지 않은 경우이 값은 이전 컴퍼지션 계층 속성에 대 한 애니메이션의 출력 값입니다."
  syntax:
    content: protected override System.Windows.Point GetCurrentValueCore (System.Windows.Point defaultOriginValue, System.Windows.Point defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);
    parameters:
    - id: defaultOriginValue
      type: System.Windows.Point
      description: "애니메이션에 명시적으로 설정 된 자체 없는 경우 사용 하는 제안 된 원점 값 시작 값입니다."
    - id: defaultDestinationValue
      type: System.Windows.Point
      description: "애니메이션에 명시적으로 설정 된 자체 없는 경우 사용 하는 제안 된 대상 값 끝 값입니다."
    - id: animationClock
      type: System.Windows.Media.Animation.AnimationClock
      description: "<xref href=&quot;System.Windows.Media.Animation.AnimationClock&quot;> </xref> 생성 하는 <> </> *> 또는 <> </> *> 애니메이션에 사용 합니다."
    return:
      type: System.Windows.Point
      description: "현재 애니메이션에 따라 결정 된 속성의 계산 된 값입니다."
  overload: System.Windows.Media.Animation.PointAnimationUsingPath.GetCurrentValueCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.PointAnimationUsingPath.IsAdditive
  id: IsAdditive
  parent: System.Windows.Media.Animation.PointAnimationUsingPath
  langs:
  - csharp
  name: IsAdditive
  nameWithType: PointAnimationUsingPath.IsAdditive
  fullName: System.Windows.Media.Animation.PointAnimationUsingPath.IsAdditive
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "애니메이션의 출력 값이 되는 속성의 기본 값에 추가 되는지 여부를 지정 하는 값을 가져옵니다."
  remarks: "<a name=&quot;dependencyPropertyInfo_Additive&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>|   | 메타 데이터 속성이 **true**| None |      > [!NOTE] >이 종속성 속성은에서 식별자 필드를 제공 한다는 점에서 <xref:System.Windows.Media.Animation.AnimationTimeline>, 다양 한 파생된 클래스에서 공유 됩니다.</xref:System.Windows.Media.Animation.AnimationTimeline> </xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>"
  syntax:
    content: public bool IsAdditive { get; set; }
    return:
      type: System.Boolean
      description: '**true 이면** 애니메이션의 출력 값이 고, 그렇지 않으면 대체 하지 않고 애니메이션 효과가 적용 되는 속성의 기본 값에 추가 하는 경우 **false**합니다. 기본값은 **false**입니다.'
  overload: System.Windows.Media.Animation.PointAnimationUsingPath.IsAdditive*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.PointAnimationUsingPath.IsCumulative
  id: IsCumulative
  parent: System.Windows.Media.Animation.PointAnimationUsingPath
  langs:
  - csharp
  name: IsCumulative
  nameWithType: PointAnimationUsingPath.IsCumulative
  fullName: System.Windows.Media.Animation.PointAnimationUsingPath.IsCumulative
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "반복 될 때 애니메이션 값을 누적 되는지 여부를 지정 하는 값을 가져오거나 설정 합니다."
  remarks: "이 속성이로 설정 된 경우 **true**, 출력 될 때이 값만 누적 애니메이션의 <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A>속성으로 인해 단순 지속 시간 동안 반복 될.</xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> 부모 항목이 반복 다시 시작할 때 또는에서 해당 clock이 때문에 해당 값이 누적 되지 않습니다는 <xref:System.Windows.Media.Animation.ClockController.Begin%2A>호출.</xref:System.Windows.Media.Animation.ClockController.Begin%2A>      <a name=&quot;dependencyPropertyInfo_Cumulative&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty>|   | 메타 데이터 속성이 `true`| None |      > [!NOTE] >이 종속성 속성은에서 식별자 필드를 제공 한다는 점에서 <xref:System.Windows.Media.Animation.AnimationTimeline>, 다양 한 파생된 클래스에서 공유 됩니다.</xref:System.Windows.Media.Animation.AnimationTimeline> </xref:System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty>"
  syntax:
    content: public bool IsCumulative { get; set; }
    return:
      type: System.Boolean
      description: '**true 이면** 애니메이션이 해당 값을 누적 하면 때 해당 <> </> *> 속성으로 인해 반복의 단순 지속 시간. 그렇지 않으면 * *false**합니다. 기본값은 * *false** 합니다.'
  overload: System.Windows.Media.Animation.PointAnimationUsingPath.IsCumulative*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.PointAnimationUsingPath.OnChanged
  id: OnChanged
  parent: System.Windows.Media.Animation.PointAnimationUsingPath
  langs:
  - csharp
  name: OnChanged()
  nameWithType: PointAnimationUsingPath.OnChanged()
  fullName: System.Windows.Media.Animation.PointAnimationUsingPath.OnChanged()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "호출 될 때이 <xref href=&quot;System.Windows.Media.Animation.PointAnimationUsingPath&quot;> </xref> 수정 됩니다."
  syntax:
    content: protected override void OnChanged ();
    parameters: []
  overload: System.Windows.Media.Animation.PointAnimationUsingPath.OnChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.PointAnimationUsingPath.PathGeometry
  id: PathGeometry
  parent: System.Windows.Media.Animation.PointAnimationUsingPath
  langs:
  - csharp
  name: PathGeometry
  nameWithType: PointAnimationUsingPath.PathGeometry
  fullName: System.Windows.Media.Animation.PointAnimationUsingPath.PathGeometry
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "이 애니메이션의 출력 값을 생성 하는 데 사용 된 기 하 도형을 지정 합니다."
  remarks: "태그 또는 코드를 사용 하 여 경로 만드는 예 <xref:System.Windows.Media.PathGeometry>.</xref:System.Windows.Media.PathGeometry> 참조      <a name=&quot;dependencyPropertyInfo_PathGeometry&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Media.Animation.PointAnimationUsingPath.PathGeometryProperty>|   | 메타 데이터 속성이 `true`| None |</xref:System.Windows.Media.Animation.PointAnimationUsingPath.PathGeometryProperty>"
  syntax:
    content: public System.Windows.Media.PathGeometry PathGeometry { get; set; }
    return:
      type: System.Windows.Media.PathGeometry
      description: "값의 출력이 애니메이션이 생성 하는 데 사용 된 경로입니다. 기본값은 **null**합니다."
  overload: System.Windows.Media.Animation.PointAnimationUsingPath.PathGeometry*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.PointAnimationUsingPath.PathGeometryProperty
  id: PathGeometryProperty
  parent: System.Windows.Media.Animation.PointAnimationUsingPath
  langs:
  - csharp
  name: PathGeometryProperty
  nameWithType: PointAnimationUsingPath.PathGeometryProperty
  fullName: System.Windows.Media.Animation.PointAnimationUsingPath.PathGeometryProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "식별 된 <xref:System.Windows.Media.Animation.PointAnimationUsingPath.PathGeometry*>종속성 속성입니다.</xref:System.Windows.Media.Animation.PointAnimationUsingPath.PathGeometry*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty PathGeometryProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.PointAnimationBase
  isExternal: false
  name: System.Windows.Media.Animation.PointAnimationBase
- uid: System.Windows.Media.Animation.PointAnimationUsingPath.#ctor
  parent: System.Windows.Media.Animation.PointAnimationUsingPath
  isExternal: false
  name: PointAnimationUsingPath()
  nameWithType: PointAnimationUsingPath.PointAnimationUsingPath()
  fullName: System.Windows.Media.Animation.PointAnimationUsingPath.PointAnimationUsingPath()
- uid: System.Windows.Media.Animation.PointAnimationUsingPath.Clone
  parent: System.Windows.Media.Animation.PointAnimationUsingPath
  isExternal: false
  name: Clone()
  nameWithType: PointAnimationUsingPath.Clone()
  fullName: System.Windows.Media.Animation.PointAnimationUsingPath.Clone()
- uid: System.Windows.Media.Animation.PointAnimationUsingPath
  parent: System.Windows.Media.Animation
  isExternal: false
  name: PointAnimationUsingPath
  nameWithType: PointAnimationUsingPath
  fullName: System.Windows.Media.Animation.PointAnimationUsingPath
- uid: System.Windows.Media.Animation.PointAnimationUsingPath.CreateInstanceCore
  parent: System.Windows.Media.Animation.PointAnimationUsingPath
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: PointAnimationUsingPath.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.PointAnimationUsingPath.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Animation.PointAnimationUsingPath.GetCurrentValueCore(System.Windows.Point,System.Windows.Point,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.PointAnimationUsingPath
  isExternal: false
  name: GetCurrentValueCore(Point,Point,AnimationClock)
  nameWithType: PointAnimationUsingPath.GetCurrentValueCore(Point,Point,AnimationClock)
  fullName: System.Windows.Media.Animation.PointAnimationUsingPath.GetCurrentValueCore(Point,Point,AnimationClock)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Media.Animation.AnimationClock
  parent: System.Windows.Media.Animation
  isExternal: false
  name: AnimationClock
  nameWithType: AnimationClock
  fullName: System.Windows.Media.Animation.AnimationClock
- uid: System.Windows.Media.Animation.PointAnimationUsingPath.IsAdditive
  parent: System.Windows.Media.Animation.PointAnimationUsingPath
  isExternal: false
  name: IsAdditive
  nameWithType: PointAnimationUsingPath.IsAdditive
  fullName: System.Windows.Media.Animation.PointAnimationUsingPath.IsAdditive
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Animation.PointAnimationUsingPath.IsCumulative
  parent: System.Windows.Media.Animation.PointAnimationUsingPath
  isExternal: false
  name: IsCumulative
  nameWithType: PointAnimationUsingPath.IsCumulative
  fullName: System.Windows.Media.Animation.PointAnimationUsingPath.IsCumulative
- uid: System.Windows.Media.Animation.PointAnimationUsingPath.OnChanged
  parent: System.Windows.Media.Animation.PointAnimationUsingPath
  isExternal: false
  name: OnChanged()
  nameWithType: PointAnimationUsingPath.OnChanged()
  fullName: System.Windows.Media.Animation.PointAnimationUsingPath.OnChanged()
- uid: System.Windows.Media.Animation.PointAnimationUsingPath.PathGeometry
  parent: System.Windows.Media.Animation.PointAnimationUsingPath
  isExternal: false
  name: PathGeometry
  nameWithType: PointAnimationUsingPath.PathGeometry
  fullName: System.Windows.Media.Animation.PointAnimationUsingPath.PathGeometry
- uid: System.Windows.Media.PathGeometry
  parent: System.Windows.Media
  isExternal: false
  name: PathGeometry
  nameWithType: PathGeometry
  fullName: System.Windows.Media.PathGeometry
- uid: System.Windows.Media.Animation.PointAnimationUsingPath.PathGeometryProperty
  parent: System.Windows.Media.Animation.PointAnimationUsingPath
  isExternal: false
  name: PathGeometryProperty
  nameWithType: PointAnimationUsingPath.PathGeometryProperty
  fullName: System.Windows.Media.Animation.PointAnimationUsingPath.PathGeometryProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Animation.PointAnimationUsingPath.#ctor*
  parent: System.Windows.Media.Animation.PointAnimationUsingPath
  isExternal: false
  name: PointAnimationUsingPath
  nameWithType: PointAnimationUsingPath.PointAnimationUsingPath
- uid: System.Windows.Media.Animation.PointAnimationUsingPath.Clone*
  parent: System.Windows.Media.Animation.PointAnimationUsingPath
  isExternal: false
  name: Clone
  nameWithType: PointAnimationUsingPath.Clone
- uid: System.Windows.Media.Animation.PointAnimationUsingPath.CreateInstanceCore*
  parent: System.Windows.Media.Animation.PointAnimationUsingPath
  isExternal: false
  name: CreateInstanceCore
  nameWithType: PointAnimationUsingPath.CreateInstanceCore
- uid: System.Windows.Media.Animation.PointAnimationUsingPath.GetCurrentValueCore*
  parent: System.Windows.Media.Animation.PointAnimationUsingPath
  isExternal: false
  name: GetCurrentValueCore
  nameWithType: PointAnimationUsingPath.GetCurrentValueCore
- uid: System.Windows.Media.Animation.PointAnimationUsingPath.IsAdditive*
  parent: System.Windows.Media.Animation.PointAnimationUsingPath
  isExternal: false
  name: IsAdditive
  nameWithType: PointAnimationUsingPath.IsAdditive
- uid: System.Windows.Media.Animation.PointAnimationUsingPath.IsCumulative*
  parent: System.Windows.Media.Animation.PointAnimationUsingPath
  isExternal: false
  name: IsCumulative
  nameWithType: PointAnimationUsingPath.IsCumulative
- uid: System.Windows.Media.Animation.PointAnimationUsingPath.OnChanged*
  parent: System.Windows.Media.Animation.PointAnimationUsingPath
  isExternal: false
  name: OnChanged
  nameWithType: PointAnimationUsingPath.OnChanged
- uid: System.Windows.Media.Animation.PointAnimationUsingPath.PathGeometry*
  parent: System.Windows.Media.Animation.PointAnimationUsingPath
  isExternal: false
  name: PathGeometry
  nameWithType: PointAnimationUsingPath.PathGeometry
