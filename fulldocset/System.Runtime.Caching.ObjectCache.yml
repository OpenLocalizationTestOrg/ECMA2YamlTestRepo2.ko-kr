### YamlMime:ManagedReference
items:
- uid: System.Runtime.Caching.ObjectCache
  id: ObjectCache
  children:
  - System.Runtime.Caching.ObjectCache.#ctor
  - System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  - System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)
  - System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  - System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  - System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)
  - System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  - System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)
  - System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)
  - System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities
  - System.Runtime.Caching.ObjectCache.Get(System.String,System.String)
  - System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)
  - System.Runtime.Caching.ObjectCache.GetCount(System.String)
  - System.Runtime.Caching.ObjectCache.GetEnumerator
  - System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)
  - System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])
  - System.Runtime.Caching.ObjectCache.Host
  - System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration
  - System.Runtime.Caching.ObjectCache.Item(System.String)
  - System.Runtime.Caching.ObjectCache.Name
  - System.Runtime.Caching.ObjectCache.NoSlidingExpiration
  - System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)
  - System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  - System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)
  - System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  - System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  - System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: ObjectCache
  nameWithType: ObjectCache
  fullName: System.Runtime.Caching.ObjectCache
  type: Class
  summary: "개체 캐시를 나타내고 개체 캐시에 액세스 하기 위한 기본 메서드 및 속성을 제공 합니다."
  remarks: "ObjectCache 형식은 메모리 내 개체 캐시에 대 한 기본 형식이입니다. 사용자 지정 캐시 구현을 개발 하려면 ObjectCache 클래스에서 파생 됩니다.      > [!NOTE] > The ObjectCache 클래스의 새는 [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]합니다.       기본 제공 <xref:System.Runtime.Caching.MemoryCache>ObjectCache 클래스에서 클래스 파생</xref:System.Runtime.Caching.MemoryCache> <xref:System.Runtime.Caching.MemoryCache>클래스는 유일 하 게 구체적인 개체 캐시 구현에는 [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] ObjectCache 클래스에서 파생 된</xref:System.Runtime.Caching.MemoryCache>"
  syntax:
    content: 'public abstract class ObjectCache : System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,object>>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.#ctor
  id: '#ctor'
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: ObjectCache()
  nameWithType: ObjectCache.ObjectCache()
  fullName: System.Runtime.Caching.ObjectCache.ObjectCache()
  type: Constructor
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "초기화 하기 위해 파생된 클래스의 생성자에서 호출 된 <xref href=&quot;System.Runtime.Caching.ObjectCache&quot;> </xref> 클래스입니다."
  syntax:
    content: protected ObjectCache ();
    parameters: []
  overload: System.Runtime.Caching.ObjectCache.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  id: Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Add(CacheItem,CacheItemPolicy)
  nameWithType: ObjectCache.Add(CacheItem,CacheItemPolicy)
  fullName: System.Runtime.Caching.ObjectCache.Add(CacheItem,CacheItemPolicy)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "파생된 클래스에서 재정의 되 면 캐시에 캐시 엔트리를 삽입 하려고 한 <xref href=&quot;System.Runtime.Caching.CacheItem&quot;> </xref> 인스턴스를 선택한 항목을 제거 해야 하는 방법에 대 한 세부 정보를 추가 합니다."
  remarks: "<xref:System.Runtime.Caching.ObjectCache.Add%2A>메서드 오버 로드는 가상 (추상이 아님)에 <xref:System.Runtime.Caching.ObjectCache>클래스 <xref:System.Runtime.Caching.ObjectCache.Add%2A>메서드는 내부적으로 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 호출</xref:System.Runtime.Caching.ObjectCache.Add%2A> </xref:System.Runtime.Caching.ObjectCache> </xref:System.Runtime.Caching.ObjectCache.Add%2A> 이 캐시 자가 제공 해야 하는 메서드 오버 로드의 수를 줄입니다. 캐시를 구현 하는 경우 특별 한 동작에 대 한 필요 하지 않습니다는 <xref:System.Runtime.Caching.ObjectCache.Add%2A>메서드를 구현할 수 있는 것은 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>메서드 오버 로드.</xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> </xref:System.Runtime.Caching.ObjectCache.Add%2A>"
  syntax:
    content: public virtual bool Add (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);
    parameters:
    - id: item
      type: System.Runtime.Caching.CacheItem
      description: "추가할 개체입니다."
    - id: policy
      type: System.Runtime.Caching.CacheItemPolicy
      description: "캐시 항목에 대 한 제거 정보를 포함 하는 개체입니다. 이 개체는 간단한 절대 만료 보다 많은 옵션을 제거를 제공합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>삽입이 성공 또는 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 없을 경우는 같은 키로 있는 캐시의 항목이 이미 <code> item </code>합니다."
  overload: System.Runtime.Caching.ObjectCache.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)
  id: Add(System.String,System.Object,System.DateTimeOffset,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Add(String,Object,DateTimeOffset,String)
  nameWithType: ObjectCache.Add(String,Object,DateTimeOffset,String)
  fullName: System.Runtime.Caching.ObjectCache.Add(String,Object,DateTimeOffset,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "파생된 클래스에서 재정의 되 면 기존 캐시 엔트리를 덮어쓰지 않고 캐시에 캐시 엔트리를 삽입 합니다."
  remarks: "<xref:System.Runtime.Caching.ObjectCache.Add%2A>메서드 오버 로드는 가상 (추상이 아님)에 <xref:System.Runtime.Caching.ObjectCache>클래스 <xref:System.Runtime.Caching.ObjectCache.Add%2A>메서드는 내부적으로 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 호출</xref:System.Runtime.Caching.ObjectCache.Add%2A> </xref:System.Runtime.Caching.ObjectCache> </xref:System.Runtime.Caching.ObjectCache.Add%2A> 이 캐시 자가 제공 해야 하는 메서드 오버 로드의 수를 줄입니다. 캐시를 구현 하는 경우 특별 한 동작에 대 한 필요 하지 않습니다는 <xref:System.Runtime.Caching.ObjectCache.Add%2A>메서드를 구현할 수 있는 것은 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>메서드 오버 로드.</xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> </xref:System.Runtime.Caching.ObjectCache.Add%2A>"
  syntax:
    content: public virtual bool Add (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "캐시 항목에 대 한 고유 식별자입니다."
    - id: value
      type: System.Object
      description: "삽입할 개체입니다."
    - id: absoluteExpiration
      type: System.DateTimeOffset
      description: "고정 된 날짜 및 시간입니다. 캐시 항목이 만료 됩니다. 이 매개 변수는 필수는 <xref:System.Runtime.Caching.ObjectCache.Add*>메서드를 호출 합니다.</xref:System.Runtime.Caching.ObjectCache.Add*>"
    - id: regionName
      type: System.String
      description: "선택 사항입니다. 캐시를 캐시 항목 수 추가할 수 있는, 영역이 구현 된 경우에 명명 된 영역입니다. 지역에서 아직 구현 되지 [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>삽입이 성공 또는 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 없을 경우는 같은 키로 있는 캐시의 항목이 이미 <code> key </code>합니다."
  overload: System.Runtime.Caching.ObjectCache.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  id: Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Add(String,Object,CacheItemPolicy,String)
  nameWithType: ObjectCache.Add(String,Object,CacheItemPolicy,String)
  fullName: System.Runtime.Caching.ObjectCache.Add(String,Object,CacheItemPolicy,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "파생된 클래스에서 재정의 되 면 항목은 제거 하는 방법에 대 한 정보를 지정 하는 캐시에 캐시 엔트리를 삽입 합니다."
  remarks: "<xref:System.Runtime.Caching.ObjectCache.Add%2A>메서드 오버 로드는 가상 (추상이 아님)에 <xref:System.Runtime.Caching.ObjectCache>클래스 <xref:System.Runtime.Caching.ObjectCache.Add%2A>메서드는 내부적으로 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 호출</xref:System.Runtime.Caching.ObjectCache.Add%2A> </xref:System.Runtime.Caching.ObjectCache> </xref:System.Runtime.Caching.ObjectCache.Add%2A> 이 캐시 자가 제공 해야 하는 메서드 오버 로드의 수를 줄입니다. 캐시를 구현 하는 경우 특별 한 동작에 대 한 필요 하지 않습니다는 <xref:System.Runtime.Caching.ObjectCache.Add%2A>메서드를 구현할 수 있는 것은 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>메서드 오버 로드.</xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> </xref:System.Runtime.Caching.ObjectCache.Add%2A>"
  syntax:
    content: public virtual bool Add (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "캐시 항목에 대 한 고유 식별자입니다."
    - id: value
      type: System.Object
      description: "삽입할 개체입니다."
    - id: policy
      type: System.Runtime.Caching.CacheItemPolicy
      description: "캐시 항목에 대 한 제거 정보를 포함 하는 개체입니다. 이 개체는 간단한 절대 만료 보다 많은 옵션을 제거를 제공합니다."
    - id: regionName
      type: System.String
      description: "선택 사항입니다. 캐시를 캐시 항목 수 추가할 수 있는, 영역이 구현 된 경우에 명명 된 영역입니다. 선택적 매개 변수에 대 한 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>삽입 시도가 성공 하면 또는 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 없을 경우는 같은 키로 캐시 엔트리가 이미 <code> key </code>합니다."
  overload: System.Runtime.Caching.ObjectCache.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  id: AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: AddOrGetExisting(CacheItem,CacheItemPolicy)
  nameWithType: ObjectCache.AddOrGetExisting(CacheItem,CacheItemPolicy)
  fullName: System.Runtime.Caching.ObjectCache.AddOrGetExisting(CacheItem,CacheItemPolicy)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "파생된 클래스에서 재정의 되 면 지정 된 삽입 <xref href=&quot;System.Runtime.Caching.CacheItem&quot;> </xref> 개체를 캐시에 항목은 제거 하는 방법에 대 한 정보를 지정 합니다."
  syntax:
    content: public abstract System.Runtime.Caching.CacheItem AddOrGetExisting (System.Runtime.Caching.CacheItem value, System.Runtime.Caching.CacheItemPolicy policy);
    parameters:
    - id: value
      type: System.Runtime.Caching.CacheItem
      description: "삽입할 개체입니다."
    - id: policy
      type: System.Runtime.Caching.CacheItemPolicy
      description: "캐시 항목에 대 한 제거 정보를 포함 하는 개체입니다. 이 개체는 간단한 절대 만료 보다 많은 옵션을 제거를 제공합니다."
    return:
      type: System.Runtime.Caching.CacheItem
      description: "키가 같은 캐시 엔트리가 있으면 지정 된 캐시 엔트리; 그렇지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Runtime.Caching.ObjectCache.AddOrGetExisting*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)
  id: AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: AddOrGetExisting(String,Object,DateTimeOffset,String)
  nameWithType: ObjectCache.AddOrGetExisting(String,Object,DateTimeOffset,String)
  fullName: System.Runtime.Caching.ObjectCache.AddOrGetExisting(String,Object,DateTimeOffset,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "파생된 클래스에서 재정의 되 면 캐시에 추가 하는 키, 캐시 항목, 절대 만료 값 및 옵션 영역에 대 한 개체를 사용 하 여 캐시에 캐시 엔트리를 삽입 합니다."
  remarks: "이 AddOrGetExisting 메서드 오버 로드 하지는 개체 값을 반환 된 <xref:System.Runtime.Caching.CacheItem>개체입니다.</xref:System.Runtime.Caching.CacheItem>"
  syntax:
    content: public abstract object AddOrGetExisting (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "캐시 항목에 대 한 고유 식별자입니다."
    - id: value
      type: System.Object
      description: "삽입할 개체입니다."
    - id: absoluteExpiration
      type: System.DateTimeOffset
      description: "고정 된 날짜 및 시간입니다. 캐시 항목이 만료 됩니다."
    - id: regionName
      type: System.String
      description: "선택 사항입니다. 캐시를 캐시 항목 수 추가할 수 있는, 영역이 구현 된 경우에 명명 된 영역입니다. 선택적 매개 변수에 대 한 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Object
      description: "같은 키를 가진 캐시 엔트리가 있으면 지정 된 캐시 항목의 값입니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Runtime.Caching.ObjectCache.AddOrGetExisting*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  id: AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: AddOrGetExisting(String,Object,CacheItemPolicy,String)
  nameWithType: ObjectCache.AddOrGetExisting(String,Object,CacheItemPolicy,String)
  fullName: System.Runtime.Caching.ObjectCache.AddOrGetExisting(String,Object,CacheItemPolicy,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "파생된 클래스에서 재정의 되 면 키와 캐시 항목 및 항목은 제거 하는 방법에 대 한 정보에 대 한 값을 지정 하는 캐시에 캐시 엔트리를 삽입 합니다."
  remarks: "AddOrGetExisting 메서드는 개체 값 하지는 <xref:System.Runtime.Caching.CacheItem>개체입니다.</xref:System.Runtime.Caching.CacheItem>"
  syntax:
    content: public abstract object AddOrGetExisting (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "캐시 항목에 대 한 고유 식별자입니다."
    - id: value
      type: System.Object
      description: "삽입할 개체입니다."
    - id: policy
      type: System.Runtime.Caching.CacheItemPolicy
      description: "캐시 항목에 대 한 제거 정보를 포함 하는 개체입니다. 이 개체는 간단한 절대 만료 보다 많은 옵션을 제거를 제공합니다."
    - id: regionName
      type: System.String
      description: "선택 사항입니다. 캐시를 캐시 항목 수 추가할 수 있는, 영역이 구현 된 경우에 명명 된 영역입니다. 선택적 매개 변수에 대 한 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Object
      description: "같은 키를 가진 캐시 엔트리가 있으면 지정 된 캐시 항목의 값입니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Runtime.Caching.ObjectCache.AddOrGetExisting*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)
  id: Contains(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Contains(String,String)
  nameWithType: ObjectCache.Contains(String,String)
  fullName: System.Runtime.Caching.ObjectCache.Contains(String,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "파생된 클래스에서 재정의 되 면 캐시 항목이 캐시에 이미 있는지 여부를 확인 합니다."
  syntax:
    content: public abstract bool Contains (string key, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "캐시 항목에 대 한 고유 식별자입니다."
    - id: regionName
      type: System.String
      description: "선택 사항입니다. 캐시를 찾을 수 있는, 영역이 구현 된 경우 캐시의 명명 된 영역입니다. 선택적 매개 변수에 대 한 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>캐시는 동일한 키 값을 갖는 엔트리를 캐시에 포함 하는 경우 <code> key </code>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Runtime.Caching.ObjectCache.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)
  id: CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: CreateCacheEntryChangeMonitor(IEnumerable<String>,String)
  nameWithType: ObjectCache.CreateCacheEntryChangeMonitor(IEnumerable<String>,String)
  fullName: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(IEnumerable<String>,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "파생된 클래스에서 재정의 된 경우는 <xref href=&quot;System.Runtime.Caching.CacheEntryChangeMonitor&quot;> </xref> 지정 된 캐시 항목에 대 한 변경에 대 한 응답에서 이벤트를 트리거할 수 있는 개체입니다."
  remarks: "파생 된 경우 <xref:System.Runtime.Caching.ObjectCache>기본 CreateCacheEntryChangeMonitor 메서드를 재정의 하는 클래스, 캐시 구현을 작성 해야는 <xref:System.Runtime.Caching.CacheEntryChangeMonitor>개체입니다.</xref:System.Runtime.Caching.CacheEntryChangeMonitor> </xref:System.Runtime.Caching.ObjectCache> 이 특수 변경 모니터에 지정 된 캐시 항목에는 변경 될 때 호출자에 게 알리는 `keys` 매개 변수입니다. 예를 들어 모니터링 되는 항목에는 `keys` 이 메서드에서 만든 변경 모니터는 이벤트를 트리거합니다, 매개 변수를 업데이트 또는 캐시에서 제거 합니다.       캐시를 구현 하는 명명 된 캐시 영역을 지 원하는 경우 문자열 값으로 지정할 수 있습니다는 `regionName` 매개 변수입니다. 그렇지 않으면 매개 변수 기본값으로 `null`합니다.      > [!NOTE] > 일부 캐시 구현 변경 모니터 캐시 항목을 지원 합니다. 캐시 구현 지원 하는지 확인 하려면 <xref:System.Runtime.Caching.CacheEntryChangeMonitor>개체를 특정 캐시 구현에 대 한 설명서를 참조 하십시오.</xref:System.Runtime.Caching.CacheEntryChangeMonitor>"
  syntax:
    content: public abstract System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor (System.Collections.Generic.IEnumerable<string> keys, string regionName = null);
    parameters:
    - id: keys
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "모니터링할 캐시 엔트리의 고유 식별자입니다."
    - id: regionName
      type: System.String
      description: "선택 사항입니다. 명명 된 영역에 캐시 키를 캐시에는 `keys` 영역이 구현 된 경우 매개 변수가 존재 합니다. 선택적 매개 변수에 대 한 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Runtime.Caching.CacheEntryChangeMonitor
      description: "캐시의 캐시 항목을 모니터링 하는 변경 모니터입니다."
  overload: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities
  id: DefaultCacheCapabilities
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: DefaultCacheCapabilities
  nameWithType: ObjectCache.DefaultCacheCapabilities
  fullName: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "파생된 클래스에서 재정의 하는 경우에 캐시 구현에서 제공 하는 기능에 대 한 설명을 가져옵니다."
  syntax:
    content: public abstract System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities { get; }
    return:
      type: System.Runtime.Caching.DefaultCacheCapabilities
      description: "캐시 구현의 기본 기능을 나타내는 플래그의 비트 조합입니다."
  overload: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Get(System.String,System.String)
  id: Get(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Get(String,String)
  nameWithType: ObjectCache.Get(String,String)
  fullName: System.Runtime.Caching.ObjectCache.Get(String,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "파생된 클래스에서 재정의 되 면 캐시에서 지정된 된 캐시 엔트리를 개체로 서 가져옵니다."
  syntax:
    content: public abstract object Get (string key, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "가져올 캐시 항목에 대 한 고유 식별자입니다."
    - id: regionName
      type: System.String
      description: "선택 사항입니다. 캐시 엔트리가 추가 된, 영역이 구현 된 경우 캐시의 명명 된 영역입니다. 선택적 매개 변수에 대 한 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Object
      description: "로 식별 되는 캐시 엔트리에 <code> key </code>합니다."
  overload: System.Runtime.Caching.ObjectCache.Get*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)
  id: GetCacheItem(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: GetCacheItem(String,String)
  nameWithType: ObjectCache.GetCacheItem(String,String)
  fullName: System.Runtime.Caching.ObjectCache.GetCacheItem(String,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "파생된 클래스에서 재정의 하는 경우 캐시에서 지정된 된 캐시 엔트리를 가져옵니다는 <xref href=&quot;System.Runtime.Caching.CacheItem&quot;> </xref> 인스턴스."
  remarks: "일부 캐시 구현 <xref:System.Runtime.Caching.CacheItem>클래스</xref:System.Runtime.Caching.CacheItem> 길어질 수 있으므로이 메서드 오버 로드가 존재 이 경우에 <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29>메서드 오버 로드는 반드시 캐시 된 데이터에 대 한 모든 정보를 반환 하지 않습니다.</xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> 그러나 항목은 GetCacheItem 메서드 오버 로드 보다 더 캐시 값을 반환 하도록 사용자 지정 캐시를 사용 합니다.       항목은 GetCacheItem 메서드는 <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29>메서드를 제외 하 고 항목은 GetCacheItem 메서드 반환 반환로 캐시 엔트리를 <xref:System.Runtime.Caching.CacheItem>인스턴스.</xref:System.Runtime.Caching.CacheItem> </xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29>"
  syntax:
    content: public abstract System.Runtime.Caching.CacheItem GetCacheItem (string key, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "가져올 캐시 항목에 대 한 고유 식별자입니다."
    - id: regionName
      type: System.String
      description: "선택 사항입니다. 캐시 추가 된, 영역이 구현 된 경우 캐시의 명명 된 영역입니다. 지역에서 아직 구현 되지 [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Runtime.Caching.CacheItem
      description: "로 식별 되는 캐시 엔트리에 <code> key </code>합니다."
  overload: System.Runtime.Caching.ObjectCache.GetCacheItem*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.GetCount(System.String)
  id: GetCount(System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: GetCount(String)
  nameWithType: ObjectCache.GetCount(String)
  fullName: System.Runtime.Caching.ObjectCache.GetCount(String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "파생된 클래스에서 재정의 되 면 캐시의 총 캐시 항목 수를 가져옵니다."
  syntax:
    content: public abstract long GetCount (string regionName = null);
    parameters:
    - id: regionName
      type: System.String
      description: "선택 사항입니다. 캐시를 캐시 항목 수를 계산 해야 영역이 구현 된 경우에 명명 된 영역입니다. 선택적 매개 변수에 대 한 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Int64
      description: "캐시의 캐시 항목의 수입니다. 경우 <code> regionName </code> 않습니다 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 지정된 된 캐시 영역에 있는 항목의 수를 나타냅니다."
  overload: System.Runtime.Caching.ObjectCache.GetCount*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.GetEnumerator
  id: GetEnumerator
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ObjectCache.GetEnumerator()
  fullName: System.Runtime.Caching.ObjectCache.GetEnumerator()
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "파생된 클래스에서 재정의 되 면 캐시 항목의 컬렉션을 반복 하는 데 사용할 수 있는 열거자를 만듭니다."
  remarks: "캐시 구현자는 무시 하 고 캐시 항목의 컬렉션을 반복 하는 사용자 지정 수단을 제공 하려면이 메서드를 확장할 수도 있습니다.      > [!NOTE] > 열거자를 반환 합니다. 전체 캐시 항목을 반환 하는 보다 더 비용이 많이 드는 작업은 일반적으로 합니다.       이 메서드는 명시적 인터페이스 구현 하는 <xref:System.Runtime.Caching.ObjectCache>에 대 한 클래스에는 <xref:System.Collections.IEnumerable.GetEnumerator%2A>및 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>메서드.</xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> </xref:System.Collections.IEnumerable.GetEnumerator%2A> </xref:System.Runtime.Caching.ObjectCache>"
  syntax:
    content: protected abstract System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string,object>> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
      description: "캐시의 캐시 항목에 대 한 액세스를 제공 하는 열거자 개체입니다."
  overload: System.Runtime.Caching.ObjectCache.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)
  id: GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: GetValues(IEnumerable<String>,String)
  nameWithType: ObjectCache.GetValues(IEnumerable<String>,String)
  fullName: System.Runtime.Caching.ObjectCache.GetValues(IEnumerable<String>,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "파생된 클래스에서 재정의 되 면 지정된 된 키에 해당 하는 캐시 항목 집합을 가져옵니다."
  remarks: "GetValues 메서드 오버 로드는 단일 네트워크를 호출 하는 동안 여러 캐시 항목이 캐시에서 가져올 수 있는 분산 된 캐시에 대 한 성능 최적화입니다.       호출자가 하나 이상의 키 메서드를 전달할 수는 없지만 보장이 없습니다 모든 키 캐시의 엔트리를 나타냅니다. 따라서 반환 된 사전 메서드에 전달 된 키의 수보다 적은 수의 항목을 포함 될 수 있습니다."
  syntax:
    content: public abstract System.Collections.Generic.IDictionary<string,object> GetValues (System.Collections.Generic.IEnumerable<string> keys, string regionName = null);
    parameters:
    - id: keys
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "가져올 캐시 엔트리의 고유 식별자의 컬렉션입니다."
    - id: regionName
      type: System.String
      description: "선택 사항입니다. 추가 된 캐시의 캐시 항목을 된, 영역이 구현 된 경우에 명명 된 영역입니다. 선택적 매개 변수에 대 한 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "캐시 항목을 나타내는 키/값 쌍의 사전입니다."
  overload: System.Runtime.Caching.ObjectCache.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])
  id: GetValues(System.String,System.String[])
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: GetValues(String,String[])
  nameWithType: ObjectCache.GetValues(String,String[])
  fullName: System.Runtime.Caching.ObjectCache.GetValues(String,String[])
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "지정된 된 키에 해당 하는 캐시 항목 집합을 가져옵니다."
  remarks: "GetValues 메서드 오버 로드는 <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29>메서드 오버 로드 하지만 C#과 같은 관리 되는 언어에서 지원 되는 선택적 매개 변수 구문을 사용 하 여 명명 된 영역을 전달할 수 있습니다.</xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29>       때문에이 메서드는 가상 메서드는 <xref:System.Runtime.Caching.ObjectCache>클래스를 전달 하는 기본 구현을 제공는 `params` 배열을 <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29>메서드 오버 로드.</xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> </xref:System.Runtime.Caching.ObjectCache>"
  syntax:
    content: public virtual System.Collections.Generic.IDictionary<string,object> GetValues (string regionName, string[] keys);
    parameters:
    - id: regionName
      type: System.String
      description: "선택 사항입니다. 추가 된 캐시의 캐시 항목을 된, 영역이 구현 된 경우에 명명 된 영역입니다. 지역에서 아직 구현 되지 [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: keys
      type: System.String[]
      description: "가져올 캐시 엔트리의 고유 식별자의 컬렉션입니다."
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "캐시 항목을 나타내는 키/값 쌍의 사전입니다."
  overload: System.Runtime.Caching.ObjectCache.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Host
  id: Host
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Host
  nameWithType: ObjectCache.Host
  fullName: System.Runtime.Caching.ObjectCache.Host
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "사용할 수 있는 관리 되는 호스팅 환경에 대 한 참조를 설정 하거나 가져옵니다 <xref href=&quot;System.Runtime.Caching.ObjectCache&quot;> </xref> 구현은 하 고 있는 호스트 관련 서비스를 제공할 수 <xref href=&quot;System.Runtime.Caching.ObjectCache&quot;> </xref> 구현 합니다."
  remarks: "호스트 속성에서 사용 하기 위한 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] 환경와.NET Framework에 의존 하는 동작을 구현 하는 캐시 구현 환경을 호스팅합니다.       다음 표에서 환경 서비스를 호스트 하는 관리 되는 호스팅 환경에서 사용할 수 있는 고 호스트 속성을 통해 <xref:System.Runtime.Caching.ObjectCache>를 사용할 수 있는 구현 되는 집합이: | 서비스 | 설명 |   |-------------|-----------------|   | <xref:System.Runtime.Caching.Hosting.IApplicationIdentifier>| 예: 성능 카운터를 확인 하는 기능에 대 한 캐시 구현에 의해 필요할 수 있는 응용 프로그램 도메인 식별자를 제공 하는 호스트 환경이 수 있습니다. |   | <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem>| 호스트 환경에서 제공 되는 것을 사용 하는 대신 사용자 지정 파일 변경 알림 시스템을 제공할 수 있습니다는 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]. |   | <xref:System.Runtime.Caching.Hosting.IMemoryCacheManager>| 호스트 환경에 캐시 구현 보고서 캐시 메모리 소비량을 수 있습니다.</xref:System.Runtime.Caching.Hosting.IMemoryCacheManager> </xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> </xref:System.Runtime.Caching.Hosting.IApplicationIdentifier> </xref:System.Runtime.Caching.ObjectCache> 이 통해 중앙에서 여러 캐시 구현에서 메모리 소비를 관리 하는 호스트 환경. |      > [!NOTE] > 호출자가이 속성 값의 제한 없는 코드 액세스 보안 권한이 필요 합니다."
  syntax:
    content: public static IServiceProvider Host { get; set; }
    return:
      type: System.IServiceProvider
      description: "캐시를 인식 하는 관리 되는 호스팅 환경에 대 한 참조입니다."
  overload: System.Runtime.Caching.ObjectCache.Host*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "속성에 할당 되는 값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "속성 값을 한 번 설정 하려고 했습니다."
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration
  id: InfiniteAbsoluteExpiration
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: InfiniteAbsoluteExpiration
  nameWithType: ObjectCache.InfiniteAbsoluteExpiration
  fullName: System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration
  type: Field
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "캐시 엔트리가 없습니다 절대 만료에 있음을 나타내는 값을 가져옵니다."
  remarks: "만료 값은 만료 되지 않도록 해야 하는 대로 InfiniteAbsoluteExpiration 필드 값 설정 된 캐시에 삽입 되는 캐시 엔트리에 절대 점에 시간의에 기반 합니다. 그러나 메모리 부족으로 인 한 변경 모니터 이벤트 제거와 같은 특정 캐시 구현에 의해 결정 된 다른 이유로이 설정 사용 하 여 캐시 엔트리를 캐시에서 제거할 수 있습니다."
  syntax:
    content: public static readonly DateTimeOffset InfiniteAbsoluteExpiration;
    return:
      type: System.DateTimeOffset
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Item(System.String)
  id: Item(System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Item(String)
  nameWithType: ObjectCache.Item(String)
  fullName: System.Runtime.Caching.ObjectCache.Item(String)
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "에 대 한 기본 인덱서를 가져오거나 설정 합니다.는 <xref href=&quot;System.Runtime.Caching.ObjectCache&quot;> </xref> 클래스입니다."
  remarks: "이 속성의 set 접근자의 동작은 같은 <xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29>메서드.</xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> 내부적으로 캐시 구현에 지정된 된 값의 절대 만료를 설정할 수는 <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration>메서드.</xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> 그러나이 문제는 결국 캐시 구현 합니다.       Get 접근자의 동작은 호출 처럼는 <xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29>메서드와 사용 하 여 `null` 영역 이름에 대 한.</xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29>"
  syntax:
    content: public abstract object this[string key] { get; set; }
    parameters:
    - id: key
      type: System.String
      description: "캐시에 캐시 엔트리의 고유 식별자입니다."
    return:
      type: System.Object
      description: "캐시 인스턴스의 인덱서로 사용 되는 키입니다."
  overload: System.Runtime.Caching.ObjectCache.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Name
  id: Name
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Name
  nameWithType: ObjectCache.Name
  fullName: System.Runtime.Caching.ObjectCache.Name
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "특정의 이름을 가져옵니다 <xref href=&quot;System.Runtime.Caching.ObjectCache&quot;> </xref> 인스턴스."
  remarks: "일부 캐시 구현에는 단일 응용 프로그램에서 실행 되는 캐시를 여러 개 지원할 수 있습니다. 이 속성을 사용 하면 캐시 구현자는 특정 캐시 인스턴스를 식별 하는 이름을 반환 합니다."
  syntax:
    content: public abstract string Name { get; }
    return:
      type: System.String
      description: "특정 캐시 인스턴스의 이름입니다."
  overload: System.Runtime.Caching.ObjectCache.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.NoSlidingExpiration
  id: NoSlidingExpiration
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: NoSlidingExpiration
  nameWithType: ObjectCache.NoSlidingExpiration
  fullName: System.Runtime.Caching.ObjectCache.NoSlidingExpiration
  type: Field
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "캐시 엔트리가 없습니다 슬라이딩 만료 시간에 있음을 나타냅니다."
  remarks: "기간 또는 정의 된 기간에 따라 만료를 상대 만료는 라고도 합니다. 일반적으로 상대 만료 기반으로 하는 항목을 제거 하는 캐시 구현 시간의 하며 지정한 창에 액세스 하지 않은 항목을 제거 합니다.       슬라이딩 기간이으로 인해 NoSlidingExpiration 필드 값이 만료 값으로 설정 된 캐시에 삽입 하는 캐시 엔트리를 제거 하지 않습니다. 그러나 절대 만료 나 일부 다른 eviction이 이벤트가 발생 하면 이러한는 변경 모니터 또는 메모리가 중 캐시 항목을 제거할 수 있습니다."
  syntax:
    content: public static readonly TimeSpan NoSlidingExpiration;
    return:
      type: System.TimeSpan
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)
  id: Remove(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Remove(String,String)
  nameWithType: ObjectCache.Remove(String,String)
  fullName: System.Runtime.Caching.ObjectCache.Remove(String,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "파생된 클래스에서 재정의 되 면 캐시 엔트리를 캐시에서 제거 합니다."
  remarks: "캐시 항목이 캐시에 해당 하는 경우 사용자 지정 캐시 구현에서이 메서드를 재정의 하는 경우 `key`, 제거 된 항목의 값을 반환 합니다. 메서드는 반환 해야 하는 경우 캐시에서 제거 된 아무, `null`합니다.      > [!NOTE] > 일부 분산된 캐시 구현 캐시에서 제거 된 값을 반환 하는 기능을 지원 하지 않을 수 있습니다. 캐시 구현이 제거 된 캐시 항목의 값 반환을 지원 하지 않는 때문일 수 있습니다. 반환 값은 너무 비용이 저렴 한 개체가 마샬링 때문에 수도 있습니다. 이러한 경우 캐시 구현을 반환할 수 있습니다 `null`합니다."
  syntax:
    content: public abstract object Remove (string key, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "캐시 항목에 대 한 고유 식별자입니다."
    - id: regionName
      type: System.String
      description: "선택 사항입니다. 캐시 엔트리가 추가 된, 영역이 구현 된 경우 캐시의 명명 된 영역입니다. 선택적 매개 변수에 대 한 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Object
      description: "키를 사용 하면 지정 된 제거 되는 캐시 항목의 값을 나타내는 개체 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 지정된 된 항목을 찾을 수 없는 경우."
  overload: System.Runtime.Caching.ObjectCache.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  id: Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Set(CacheItem,CacheItemPolicy)
  nameWithType: ObjectCache.Set(CacheItem,CacheItemPolicy)
  fullName: System.Runtime.Caching.ObjectCache.Set(CacheItem,CacheItemPolicy)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "파생된 클래스에서 재정의 되 면 캐시에 캐시 엔트리를 삽입 한 <xref href=&quot;System.Runtime.Caching.CacheItem&quot;> </xref> 인스턴스를 항목은 제거 하는 방법에 대 한 정보를 지정 합니다."
  remarks: "경우에 대 한 키 `item` 존재 하지 않는 `item` 새 캐시 항목으로 삽입 됩니다. 경우 일치 하는 키를 가진 항목이 `item` 의 값 존재 `item` 업데이트 하거나 기존 캐시 항목의 값을 덮어쓰는 데 사용 됩니다."
  syntax:
    content: public abstract void Set (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);
    parameters:
    - id: item
      type: System.Runtime.Caching.CacheItem
      description: "추가할 캐시 항목입니다."
    - id: policy
      type: System.Runtime.Caching.CacheItemPolicy
      description: "캐시 항목에 대 한 제거 정보를 포함 하는 개체입니다. 이 개체는 간단한 절대 만료 보다 많은 옵션을 제거를 제공합니다."
  overload: System.Runtime.Caching.ObjectCache.Set*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)
  id: Set(System.String,System.Object,System.DateTimeOffset,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Set(String,Object,DateTimeOffset,String)
  nameWithType: ObjectCache.Set(String,Object,DateTimeOffset,String)
  fullName: System.Runtime.Caching.ObjectCache.Set(String,Object,DateTimeOffset,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "파생된 클래스에서 재정의 되 면 시간 기반 만료 정보를 지정 하는 캐시에 캐시 엔트리를 삽입 합니다."
  remarks: "일치 하는 항목이 있으면 `key` 캐시에 존재 하지 않는 `value` 및 `key` 새 캐시 항목으로 삽입 하는 데 사용 됩니다. 경우 일치 하는 키를 가진 항목이 `item` 있으면 캐시 항목을 업데이트 하거나 사용 하 여 덮어쓸 `value`합니다."
  syntax:
    content: public abstract void Set (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "캐시 항목에 대 한 고유 식별자입니다."
    - id: value
      type: System.Object
      description: "삽입할 개체입니다."
    - id: absoluteExpiration
      type: System.DateTimeOffset
      description: "고정 된 날짜 및 시간입니다. 캐시 항목이 만료 됩니다."
    - id: regionName
      type: System.String
      description: "선택 사항입니다. 캐시를 캐시 항목 수 추가할 수 있는, 영역이 구현 된 경우에 명명 된 영역입니다. 선택적 매개 변수에 대 한 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Runtime.Caching.ObjectCache.Set*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  id: Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Set(String,Object,CacheItemPolicy,String)
  nameWithType: ObjectCache.Set(String,Object,CacheItemPolicy,String)
  fullName: System.Runtime.Caching.ObjectCache.Set(String,Object,CacheItemPolicy,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "파생된 클래스에서 재정의 되 면 캐시에 캐시 엔트리를 삽입 합니다."
  remarks: "이 메서드 오버 로드에서 절대 만료 시간을 기준으로 사용할 수 있는 것 보다 더 많은 제거 또는 만료 정보를 제공할 수 있습니다.       일치 하는 항목이 있으면 `key` 캐시에 존재 하지 않는 `value` 및 `key` 새 캐시 항목으로 삽입 하는 데 사용 됩니다. 경우 일치 하는 키를 가진 항목이 `item` 있으면 캐시 항목을 업데이트 하거나 사용 하 여 덮어쓸 `value`합니다."
  syntax:
    content: public abstract void Set (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "캐시 항목에 대 한 고유 식별자입니다."
    - id: value
      type: System.Object
      description: "삽입할 개체입니다."
    - id: policy
      type: System.Runtime.Caching.CacheItemPolicy
      description: "캐시 항목에 대 한 제거 정보를 포함 하는 개체입니다. 이 개체는 간단한 절대 만료 보다 많은 옵션을 제거를 제공합니다."
    - id: regionName
      type: System.String
      description: "선택 사항입니다. 캐시를 캐시 항목 수 추가할 수 있는, 영역이 구현 된 경우에 명명 된 영역입니다. 선택적 매개 변수에 대 한 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Runtime.Caching.ObjectCache.Set*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  isEii: true
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: System.Collections.Generic.IEnumerable()
  nameWithType: ObjectCache.System.Collections.Generic.IEnumerable()
  fullName: System.Runtime.Caching.ObjectCache.System.Collections.Generic.IEnumerable()
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  syntax:
    content: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string,object>> IEnumerable<KeyValuePair<string,object>>.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
      description: "추가할 수 있습니다."
  overload: System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable<System#Collections#Generic#KeyValuePair<System#String,System#Object>>#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ObjectCache.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Runtime.Caching.ObjectCache.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "제네릭 컬렉션 반복을 지원 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 파생 된 경우에 사용할 수 있습니다 <xref:System.Runtime.Caching.ObjectCache>인스턴스로 캐스팅 되는 <xref:System.Collections.IEnumerable>인터페이스.</xref:System.Collections.IEnumerable> </xref:System.Runtime.Caching.ObjectCache>       개발자는 캐시 항목의 제네릭 컬렉션을 반복이 메서드를 사용할 수 있습니다.       이것이 기본 <xref:System.Collections.IEnumerable.GetEnumerator%2A>내부적으로 호출 하는 구현에서 <xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A>메서드.</xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A> </xref:System.Collections.IEnumerable.GetEnumerator%2A>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "캐시에서 항목에 대 한 액세스를 제공 하는 열거자 개체입니다."
  overload: System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Runtime.Caching.ObjectCache.#ctor
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: ObjectCache()
  nameWithType: ObjectCache.ObjectCache()
  fullName: System.Runtime.Caching.ObjectCache.ObjectCache()
- uid: System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Add(CacheItem,CacheItemPolicy)
  nameWithType: ObjectCache.Add(CacheItem,CacheItemPolicy)
  fullName: System.Runtime.Caching.ObjectCache.Add(CacheItem,CacheItemPolicy)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Caching.CacheItem
  parent: System.Runtime.Caching
  isExternal: false
  name: CacheItem
  nameWithType: CacheItem
  fullName: System.Runtime.Caching.CacheItem
- uid: System.Runtime.Caching.CacheItemPolicy
  parent: System.Runtime.Caching
  isExternal: false
  name: CacheItemPolicy
  nameWithType: CacheItemPolicy
  fullName: System.Runtime.Caching.CacheItemPolicy
- uid: System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Add(String,Object,DateTimeOffset,String)
  nameWithType: ObjectCache.Add(String,Object,DateTimeOffset,String)
  fullName: System.Runtime.Caching.ObjectCache.Add(String,Object,DateTimeOffset,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Add(String,Object,CacheItemPolicy,String)
  nameWithType: ObjectCache.Add(String,Object,CacheItemPolicy,String)
  fullName: System.Runtime.Caching.ObjectCache.Add(String,Object,CacheItemPolicy,String)
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: AddOrGetExisting(CacheItem,CacheItemPolicy)
  nameWithType: ObjectCache.AddOrGetExisting(CacheItem,CacheItemPolicy)
  fullName: System.Runtime.Caching.ObjectCache.AddOrGetExisting(CacheItem,CacheItemPolicy)
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: AddOrGetExisting(String,Object,DateTimeOffset,String)
  nameWithType: ObjectCache.AddOrGetExisting(String,Object,DateTimeOffset,String)
  fullName: System.Runtime.Caching.ObjectCache.AddOrGetExisting(String,Object,DateTimeOffset,String)
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: AddOrGetExisting(String,Object,CacheItemPolicy,String)
  nameWithType: ObjectCache.AddOrGetExisting(String,Object,CacheItemPolicy,String)
  fullName: System.Runtime.Caching.ObjectCache.AddOrGetExisting(String,Object,CacheItemPolicy,String)
- uid: System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Contains(String,String)
  nameWithType: ObjectCache.Contains(String,String)
  fullName: System.Runtime.Caching.ObjectCache.Contains(String,String)
- uid: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: CreateCacheEntryChangeMonitor(IEnumerable<String>,String)
  nameWithType: ObjectCache.CreateCacheEntryChangeMonitor(IEnumerable<String>,String)
  fullName: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(IEnumerable<String>,String)
- uid: System.Runtime.Caching.CacheEntryChangeMonitor
  parent: System.Runtime.Caching
  isExternal: false
  name: CacheEntryChangeMonitor
  nameWithType: CacheEntryChangeMonitor
  fullName: System.Runtime.Caching.CacheEntryChangeMonitor
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: DefaultCacheCapabilities
  nameWithType: ObjectCache.DefaultCacheCapabilities
  fullName: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities
- uid: System.Runtime.Caching.DefaultCacheCapabilities
  parent: System.Runtime.Caching
  isExternal: false
  name: DefaultCacheCapabilities
  nameWithType: DefaultCacheCapabilities
  fullName: System.Runtime.Caching.DefaultCacheCapabilities
- uid: System.Runtime.Caching.ObjectCache.Get(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Get(String,String)
  nameWithType: ObjectCache.Get(String,String)
  fullName: System.Runtime.Caching.ObjectCache.Get(String,String)
- uid: System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetCacheItem(String,String)
  nameWithType: ObjectCache.GetCacheItem(String,String)
  fullName: System.Runtime.Caching.ObjectCache.GetCacheItem(String,String)
- uid: System.Runtime.Caching.ObjectCache.GetCount(System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetCount(String)
  nameWithType: ObjectCache.GetCount(String)
  fullName: System.Runtime.Caching.ObjectCache.GetCount(String)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Runtime.Caching.ObjectCache.GetEnumerator
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetEnumerator()
  nameWithType: ObjectCache.GetEnumerator()
  fullName: System.Runtime.Caching.ObjectCache.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<KeyValuePair<String,Object>>
  nameWithType: IEnumerator<KeyValuePair<String,Object>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetValues(IEnumerable<String>,String)
  nameWithType: ObjectCache.GetValues(IEnumerable<String>,String)
  fullName: System.Runtime.Caching.ObjectCache.GetValues(IEnumerable<String>,String)
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetValues(String,String[])
  nameWithType: ObjectCache.GetValues(String,String[])
  fullName: System.Runtime.Caching.ObjectCache.GetValues(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Caching.ObjectCache.Host
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Host
  nameWithType: ObjectCache.Host
  fullName: System.Runtime.Caching.ObjectCache.Host
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: InfiniteAbsoluteExpiration
  nameWithType: ObjectCache.InfiniteAbsoluteExpiration
  fullName: System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration
- uid: System.Runtime.Caching.ObjectCache.Item(System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Item(String)
  nameWithType: ObjectCache.Item(String)
  fullName: System.Runtime.Caching.ObjectCache.Item(String)
- uid: System.Runtime.Caching.ObjectCache.Name
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Name
  nameWithType: ObjectCache.Name
  fullName: System.Runtime.Caching.ObjectCache.Name
- uid: System.Runtime.Caching.ObjectCache.NoSlidingExpiration
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: NoSlidingExpiration
  nameWithType: ObjectCache.NoSlidingExpiration
  fullName: System.Runtime.Caching.ObjectCache.NoSlidingExpiration
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Remove(String,String)
  nameWithType: ObjectCache.Remove(String,String)
  fullName: System.Runtime.Caching.ObjectCache.Remove(String,String)
- uid: System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Set(CacheItem,CacheItemPolicy)
  nameWithType: ObjectCache.Set(CacheItem,CacheItemPolicy)
  fullName: System.Runtime.Caching.ObjectCache.Set(CacheItem,CacheItemPolicy)
- uid: System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Set(String,Object,DateTimeOffset,String)
  nameWithType: ObjectCache.Set(String,Object,DateTimeOffset,String)
  fullName: System.Runtime.Caching.ObjectCache.Set(String,Object,DateTimeOffset,String)
- uid: System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Set(String,Object,CacheItemPolicy,String)
  nameWithType: ObjectCache.Set(String,Object,CacheItemPolicy,String)
  fullName: System.Runtime.Caching.ObjectCache.Set(String,Object,CacheItemPolicy,String)
- uid: System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: System.Collections.Generic.IEnumerable()
  nameWithType: ObjectCache.System.Collections.Generic.IEnumerable()
  fullName: System.Runtime.Caching.ObjectCache.System.Collections.Generic.IEnumerable()
- uid: System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ObjectCache.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Runtime.Caching.ObjectCache.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Runtime.Caching.ObjectCache.#ctor*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: ObjectCache
  nameWithType: ObjectCache.ObjectCache
- uid: System.Runtime.Caching.ObjectCache.Add*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Add
  nameWithType: ObjectCache.Add
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: AddOrGetExisting
  nameWithType: ObjectCache.AddOrGetExisting
- uid: System.Runtime.Caching.ObjectCache.Contains*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Contains
  nameWithType: ObjectCache.Contains
- uid: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: CreateCacheEntryChangeMonitor
  nameWithType: ObjectCache.CreateCacheEntryChangeMonitor
- uid: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: DefaultCacheCapabilities
  nameWithType: ObjectCache.DefaultCacheCapabilities
- uid: System.Runtime.Caching.ObjectCache.Get*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Get
  nameWithType: ObjectCache.Get
- uid: System.Runtime.Caching.ObjectCache.GetCacheItem*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetCacheItem
  nameWithType: ObjectCache.GetCacheItem
- uid: System.Runtime.Caching.ObjectCache.GetCount*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetCount
  nameWithType: ObjectCache.GetCount
- uid: System.Runtime.Caching.ObjectCache.GetEnumerator*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetEnumerator
  nameWithType: ObjectCache.GetEnumerator
- uid: System.Runtime.Caching.ObjectCache.GetValues*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetValues
  nameWithType: ObjectCache.GetValues
- uid: System.Runtime.Caching.ObjectCache.Host*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Host
  nameWithType: ObjectCache.Host
- uid: System.Runtime.Caching.ObjectCache.Item*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Item
  nameWithType: ObjectCache.Item
- uid: System.Runtime.Caching.ObjectCache.Name*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Name
  nameWithType: ObjectCache.Name
- uid: System.Runtime.Caching.ObjectCache.Remove*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Remove
  nameWithType: ObjectCache.Remove
- uid: System.Runtime.Caching.ObjectCache.Set*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Set
  nameWithType: ObjectCache.Set
- uid: System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable<System#Collections#Generic#KeyValuePair<System#String,System#Object>>#GetEnumerator*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator
  nameWithType: ObjectCache.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator
- uid: System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ObjectCache.System.Collections.IEnumerable.GetEnumerator
