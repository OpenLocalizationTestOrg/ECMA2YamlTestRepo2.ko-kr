### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.KeyPressEventArgs
  id: KeyPressEventArgs
  children:
  - System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)
  - System.Windows.Forms.KeyPressEventArgs.Handled
  - System.Windows.Forms.KeyPressEventArgs.KeyChar
  langs:
  - csharp
  name: KeyPressEventArgs
  nameWithType: KeyPressEventArgs
  fullName: System.Windows.Forms.KeyPressEventArgs
  type: Class
  summary: "에 대 한 데이터를 제공는 <xref href=&quot;System.Windows.Forms.Control.KeyPress&quot;> </xref> 이벤트입니다."
  remarks: "KeyPressEventArgs 키를 누를 때 구성 되는 문자를 지정 합니다. 예를 들어 사용자가 SHIFT + K를 누르면 <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A>속성 대문자 K. 반환       A <xref:System.Windows.Forms.Control.KeyPress>이벤트 키를 누를 때 발생 합니다.</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> <xref:System.Windows.Forms.Control.KeyPress>이벤트는 <xref:System.Windows.Forms.Control.KeyUp>및 <xref:System.Windows.Forms.Control.KeyDown>.</xref:System.Windows.Forms.Control.KeyDown> </xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyPress> 밀접 한 관련이 있는 두 개의 이벤트 <xref:System.Windows.Forms.Control.KeyDown>각 이벤트 앞 <xref:System.Windows.Forms.Control.KeyPress>사용자가 키를 누를 때 이벤트 및 <xref:System.Windows.Forms.Control.KeyUp>이벤트 키를 놓을 때 발생 합니다.</xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.Control.KeyDown> 중복 키를 누르고 때 <xref:System.Windows.Forms.Control.KeyDown>및 <xref:System.Windows.Forms.Control.KeyPress>이벤트가 문자에서 반복 될 때마다 발생 합니다.</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.Control.KeyDown> 하나의 <xref:System.Windows.Forms.Control.KeyUp>이벤트 출시 하는 즉시 생성 됩니다.</xref:System.Windows.Forms.Control.KeyUp>       각 <xref:System.Windows.Forms.Control.KeyPress>이벤트는 KeyPressEventArgs 전달 됩니다.</xref:System.Windows.Forms.Control.KeyPress> A <xref:System.Windows.Forms.KeyEventArgs>각 함께 전달 되 면 <xref:System.Windows.Forms.Control.KeyDown>및 <xref:System.Windows.Forms.Control.KeyUp>이벤트.</xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyDown> </xref:System.Windows.Forms.KeyEventArgs> A <xref:System.Windows.Forms.KeyEventArgs>임의의 한정자 키 (CTRL, shift 키 또는 ALT)를 다른 키와 함께 눌렀는지 여부를 지정 합니다.</xref:System.Windows.Forms.KeyEventArgs> (이 한정자 정보를 통해 얻을 수도 있습니다는 <xref:System.Windows.Forms.Control.ModifierKeys%2A>의 속성은 <xref:System.Windows.Forms.Control>클래스)</xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Control.ModifierKeys%2A>       설정 <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A>를 `true` 취소 하 여 `KeyPress` 이벤트.</xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> 이렇게 하면 컨트롤이에서 키 누름을 처리 합니다.      > [!NOTE] > 일부 컨트롤 <xref:System.Windows.Forms.Control.KeyDown>.</xref:System.Windows.Forms.Control.KeyDown> 에 특정 키 입력을 처리 합니다 예를 들어 <xref:System.Windows.Forms.RichTextBox>하기 전에 Enter 키를 처리 <xref:System.Windows.Forms.Control.KeyPress>호출 됩니다.</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.RichTextBox> 이러한 경우에는 취소할 수 없습니다는 <xref:System.Windows.Forms.Control.KeyPress>이벤트에서 키 입력을 취소 해야 <xref:System.Windows.Forms.Control.KeyDown>대신.</xref:System.Windows.Forms.Control.KeyDown> </xref:System.Windows.Forms.Control.KeyPress>       이벤트 모델에 대 한 정보를 참조 하십시오. [이벤트](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example illustrates using the KeyPressEventArgs to count keys as they are pressed and to display the results after each key press. <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> is then set to true to keep the operating system from further processing the key. The example assumes a form with a <xref:System.Windows.Forms.TextBox> placed on it.  \n  \n [!code-cpp[Classic KeyPressEventArgs Example#1](~/add/codesnippet/cpp/t-system.windows.forms.k_0_1.cpp)]\n [!code-cs[Classic KeyPressEventArgs Example#1](~/add/codesnippet/csharp/t-system.windows.forms.k_0_1.cs)]\n [!code-vb[Classic KeyPressEventArgs Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.k_0_1.vb)]  \n  \n You must create a new instance of this class. You must also set the event handler. You can do this in the constructor for your class.  \n  \n [!code-cpp[Classic KeyPressEventArgs Example#2](~/add/codesnippet/cpp/t-system.windows.forms.k_0_2.cpp)]\n [!code-cs[Classic KeyPressEventArgs Example#2](~/add/codesnippet/csharp/t-system.windows.forms.k_0_2.cs)]\n [!code-vb[Classic KeyPressEventArgs Example#2](~/add/codesnippet/visualbasic/t-system.windows.forms.k_0_2.vb)]  \n  \n When the specified event is raised in the control, the attached method is called and the application can execute code in response to the event."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class KeyPressEventArgs : EventArgs
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)
  id: '#ctor(System.Char)'
  parent: System.Windows.Forms.KeyPressEventArgs
  langs:
  - csharp
  name: KeyPressEventArgs(Char)
  nameWithType: KeyPressEventArgs.KeyPressEventArgs(Char)
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyPressEventArgs(Char)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Forms.KeyPressEventArgs&quot;> </xref> 클래스입니다."
  remarks: "사용 하 여는 <xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=fullName>보조 키의 현재 상태를 가져올 속성입니다.</xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=fullName>"
  example:
  - The following example displays a message box that shows the current state of the SHIFT key.
  syntax:
    content: public KeyPressEventArgs (char keyChar);
    parameters:
    - id: keyChar
      type: System.Char
      description: "사용자가 누른 키에 해당 하는 ASCII 문자입니다."
  overload: System.Windows.Forms.KeyPressEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyPressEventArgs.Handled
  id: Handled
  parent: System.Windows.Forms.KeyPressEventArgs
  langs:
  - csharp
  name: Handled
  nameWithType: KeyPressEventArgs.Handled
  fullName: System.Windows.Forms.KeyPressEventArgs.Handled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "나타내는 값을 가져오거나 여부는 <xref href=&quot;System.Windows.Forms.Control.KeyPress&quot;> </xref> 이벤트가 처리 합니다."
  remarks: "이벤트 처리 되지 않은 경우 기본 처리에 대 한 운영 체제에 전송 됩니다. Handled 설정 `true` 취소 하는 `KeyPress` 이벤트입니다."
  example:
  - "The following example creates a <xref:System.Windows.Forms.TextBox> control. The `keypressed` method uses the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property to check whether the ENTER key is pressed. If the ENTER key is pressed, the Handled property is set to `true`, which indicates the event is handled.  \n  \n [!code-vb[KeyPressEventArgs#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_4_1.vb)]\n [!code-cs[KeyPressEventArgs#1](~/add/codesnippet/csharp/p-system.windows.forms.k_4_1.cs)]\n [!code-cpp[KeyPressEventArgs#1](~/add/codesnippet/cpp/p-system.windows.forms.k_4_1.cpp)]"
  syntax:
    content: public bool Handled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이벤트가 처리 됩니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.KeyPressEventArgs.Handled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyPressEventArgs.KeyChar
  id: KeyChar
  parent: System.Windows.Forms.KeyPressEventArgs
  langs:
  - csharp
  name: KeyChar
  nameWithType: KeyPressEventArgs.KeyChar
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyChar
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "누른 키에 해당 하는 문자를 가져오거나 설정 합니다."
  remarks: "특별 한 런타임 환경에서 키 입력을 수정 하 고 런타임 시 키 입력을 샘플 KeyChar 속성을 사용 합니다. 예를 들어 KeyChar을 우편 번호를 입력 하면 숫자가 아닌 키를 사용 하지 않도록 설정 변경 하거나 모든 알파벳 키 누르기 데이터 입력 필드에 대문자 또는 키보드 또는 다른 키 입력된 장치 특정 키 조합에 대 한 모니터를 사용할 수 있습니다.       다음 키 설정 또는 얻을 수 있습니다: a-z, A-Z-합니다.      -CTRL 합니다.      -문장 부호입니다.      -숫자 모두 위쪽의 키보드와 숫자 키패드의 키입니다.      -입력 합니다.       가져오거나 다음 키를 설정할 수 없습니다.-The TAB 키입니다.      -삽입 및 삭제 합니다.      -홈입니다.      -종료 합니다.      -PAGE UP 및 PAGE DOWN 합니다.      -F&1;-F&2;입니다.      -ALT 합니다.      화살표 키입니다.      > [!NOTE] > 위에서 언급 한 문자가 아닌 키 중 하나를 검색 하는 방법에 대 한 내용은 <xref:System.Windows.Forms.KeyEventArgs>클래스</xref:System.Windows.Forms.KeyEventArgs> 를 참조 하십시오.      -"
  example:
  - "The following example creates a <xref:System.Windows.Forms.TextBox> control. The `keypressed` method uses the KeyChar property to check whether the ENTER key pressed. If the ENTER key is pressed, the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> property is set to `true`, which indicates the event is handled.  \n  \n [!code-vb[KeyPressEventArgs#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_2_1.vb)]\n [!code-cs[KeyPressEventArgs#1](~/add/codesnippet/csharp/p-system.windows.forms.k_2_1.cs)]\n [!code-cpp[KeyPressEventArgs#1](~/add/codesnippet/cpp/p-system.windows.forms.k_2_1.cpp)]"
  syntax:
    content: public char KeyChar { get; set; }
    return:
      type: System.Char
      description: "구성 된 ASCII 문자입니다. 예를 들어 사용자가 SHIFT + K를 누르면이 속성 대문자 K. 반환"
  overload: System.Windows.Forms.KeyPressEventArgs.KeyChar*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyPressEventArgs(Char)
  nameWithType: KeyPressEventArgs.KeyPressEventArgs(Char)
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyPressEventArgs(Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Windows.Forms.KeyPressEventArgs.Handled
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: Handled
  nameWithType: KeyPressEventArgs.Handled
  fullName: System.Windows.Forms.KeyPressEventArgs.Handled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.KeyPressEventArgs.KeyChar
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyChar
  nameWithType: KeyPressEventArgs.KeyChar
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyChar
- uid: System.Windows.Forms.KeyPressEventArgs.#ctor*
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyPressEventArgs
  nameWithType: KeyPressEventArgs.KeyPressEventArgs
- uid: System.Windows.Forms.KeyPressEventArgs.Handled*
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: Handled
  nameWithType: KeyPressEventArgs.Handled
- uid: System.Windows.Forms.KeyPressEventArgs.KeyChar*
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyChar
  nameWithType: KeyPressEventArgs.KeyChar
