### YamlMime:ManagedReference
items:
- uid: System.Configuration.Provider.ProviderBase
  id: ProviderBase
  children:
  - System.Configuration.Provider.ProviderBase.#ctor
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.Provider.ProviderBase.Name
  langs:
  - csharp
  name: ProviderBase
  nameWithType: ProviderBase
  fullName: System.Configuration.Provider.ProviderBase
  type: Class
  summary: "확장 가능 공급자 모델에 대 한 기본 구현을 제공합니다."
  remarks: "공급자 모델 전체 또는 일부의 여러 ASP.NET 등의 기능을 구성원 자격, 프로필 및 보호 되는 구성 기능을 캡슐화 하는 데 사용 됩니다. 개발자를 여러 번 구현 된 경우 캡슐화 된 기능을 제공 하는 지원 클래스를 만들 수 있습니다. 또한 개발자는 공급자 모델을 사용 하 여 새 기능을 작성할 수 있습니다. 이 효과적으로 기능 코드를 복제 하거나 구현 메서드를 변경 해야 하는 경우 응용 프로그램 계층을 다시 코딩 하지 않고 여러 번 구현 기능의 기능을 지원할 수 있습니다.       ProviderBase 클래스는 단순와 포함 된 몇 가지 기본적인 방법을 모든 공급자에 공통 된 속성입니다. 기능 관련 공급자 (예: <xref:System.Web.Security.MembershipProvider>) ProviderBase에서 상속 하 고 필요한 메서드 및 해당 기능의 특정 구현 공급자가 지원 해야 하는 속성을 설정 합니다.</xref:System.Web.Security.MembershipProvider> 구현 별 공급자 (같은 <xref:System.Web.Security.SqlMembershipProvider>)에서 상속 된 기능 관련 공급자 (이 경우 <xref:System.Web.Security.MembershipProvider>).</xref:System.Web.Security.MembershipProvider> </xref:System.Web.Security.SqlMembershipProvider>       공급자 모델의 가장 중요 한 측면 (예를 들어 여부 데이터가 유지 되는지 또는 데이터베이스를 텍스트 파일로) 구현에서는 응용 프로그램 코드에서 추출 된입니다. 구성 파일에 지정 된 기능에 대 한 구현 관련 공급자의 유형을 지정 됩니다. 기능 수준이 공급자 다음 구성 파일에서 형식의 읽고 기능 코드에 대 한 팩터리 역할을 합니다. 응용 프로그램 개발자는 응용 프로그램 코드에서 기능 클래스를 유도할 수 있습니다. 구현 형식 수 스왑할 수 구성 파일에서 다른 구현 방법을 수용 하기 위해 코드를 다시 작성할 필요가 없습니다.       ASP.NET에 포함 된 공급자는 대부분 프로필 또는 멤버와 같은 기능에 대 한 데이터 지 속성 구현 추상화 합니다. 그러나이 모델은 다른 종류의 추상화 하 고 여러 가지 방법으로 구현할 수 있는 기능 기능을 적용할 수 있습니다."
  example:
  - For an example of how to use the ProviderBase class, see [Profile Provider Implementation Example](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract class ProviderBase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderBase.#ctor
  id: '#ctor'
  parent: System.Configuration.Provider.ProviderBase
  langs:
  - csharp
  name: ProviderBase()
  nameWithType: ProviderBase.ProviderBase()
  fullName: System.Configuration.Provider.ProviderBase.ProviderBase()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Configuration.Provider.ProviderBase&quot;> </xref> 클래스입니다."
  syntax:
    content: protected ProviderBase ();
    parameters: []
  overload: System.Configuration.Provider.ProviderBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderBase.Description
  id: Description
  parent: System.Configuration.Provider.ProviderBase
  langs:
  - csharp
  name: Description
  nameWithType: ProviderBase.Description
  fullName: System.Configuration.Provider.ProviderBase.Description
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "관리 도구 또는 기타 사용자 인터페이스 (Ui)에 표시 하기 위해 적합 한 간략 하 고 친숙 한 설명을 가져옵니다."
  remarks: "구성 된 공급자는 설명의 값을 제공 하지 않는 경우는 <xref:System.Configuration.Provider.ProviderBase.Name%2A>속성이 기본값으로 반환 됩니다.</xref:System.Configuration.Provider.ProviderBase.Name%2A>"
  syntax:
    content: public virtual string Description { get; }
    return:
      type: System.String
      description: "간략 하 고 친숙 한 설명은 관리 도구 또는 다른 Ui에 표시 하기에 적합 합니다."
  overload: System.Configuration.Provider.ProviderBase.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Configuration.Provider.ProviderBase
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: ProviderBase.Initialize(String,NameValueCollection)
  fullName: System.Configuration.Provider.ProviderBase.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "공급자를 초기화합니다."
  remarks: "기본 클래스 구현을 내부적으로 추적 노드의 수가 공급자의 `Initialize` 메서드가 호출 되었습니다. 공급자를 두 번 이상 초기화는 `InvalidOperationException` 공급자 이미 초기화 되어 있다고 알리는 throw 됩니다.       대부분의 기능 공급자 호출 공급자 관련 초기화를 수행 하기 전에 초기화, 때문에이 메서드는 이중 초기화 방지 하기 위한 중앙 위치입니다."
  example:
  - For an example of how to use Initialize, see [Profile Provider Implementation Example](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public virtual void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "공급자의 이름입니다."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "이 공급자에 대 한 구성에 지정 된 공급자별 특성을 나타내는 이름/값 쌍의 컬렉션입니다."
  overload: System.Configuration.Provider.ProviderBase.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "공급자 이름은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "공급자의 이름에는 길이가&0;에 있습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "공급자가 이미 초기화 된 다음에 공급자 Initialize를 호출 하려고 시도 합니다."
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderBase.Name
  id: Name
  parent: System.Configuration.Provider.ProviderBase
  langs:
  - csharp
  name: Name
  nameWithType: ProviderBase.Name
  fullName: System.Configuration.Provider.ProviderBase.Name
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "공급자를 구성 하는 동안 참조 하는 데 사용 되는 이름을 가져옵니다."
  remarks: '이 문자열에 대해 권장 되는 패턴은: [*공급자 작성자*] [*구현 형식*] [*기능*] 공급자입니다. 하지만 <xref:System.Configuration.Provider.ProviderBase.Description%2A>속성에는 또한 간단한 설명을 제공, Name 속성은 공급자에 대 한 식별자로 사용 됩니다.</xref:System.Configuration.Provider.ProviderBase.Description%2A>'
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: "공급자를 구성 하는 동안 참조에 사용 되는 이름입니다."
  overload: System.Configuration.Provider.ProviderBase.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Configuration.Provider.ProviderBase.#ctor
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: ProviderBase()
  nameWithType: ProviderBase.ProviderBase()
  fullName: System.Configuration.Provider.ProviderBase.ProviderBase()
- uid: System.Configuration.Provider.ProviderBase.Description
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Description
  nameWithType: ProviderBase.Description
  fullName: System.Configuration.Provider.ProviderBase.Description
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: ProviderBase.Initialize(String,NameValueCollection)
  fullName: System.Configuration.Provider.ProviderBase.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Configuration.Provider.ProviderBase.Name
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Name
  nameWithType: ProviderBase.Name
  fullName: System.Configuration.Provider.ProviderBase.Name
- uid: System.Configuration.Provider.ProviderBase.#ctor*
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: ProviderBase
  nameWithType: ProviderBase.ProviderBase
- uid: System.Configuration.Provider.ProviderBase.Description*
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Description
  nameWithType: ProviderBase.Description
- uid: System.Configuration.Provider.ProviderBase.Initialize*
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Initialize
  nameWithType: ProviderBase.Initialize
- uid: System.Configuration.Provider.ProviderBase.Name*
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Name
  nameWithType: ProviderBase.Name
