### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  id: AuthenticablePrincipal
  children:
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(System.String,System.String)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(System.String)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword
  langs:
  - csharp
  name: AuthenticablePrincipal
  nameWithType: AuthenticablePrincipal
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  type: Class
  summary: "인증할 수 있는 보안 주체에서 공통 계정 및 연락처 데이터를 캡슐화 합니다."
  syntax:
    content: >-
      [System.DirectoryServices.AccountManagement.DirectoryRdnPrefix("CN")]

      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public class AuthenticablePrincipal : System.DirectoryServices.AccountManagement.Principal
  inheritance:
  - System.Object
  - System.DirectoryServices.AccountManagement.Principal
  implements: []
  inheritedMembers:
  - System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted
  - System.DirectoryServices.AccountManagement.Principal.Context
  - System.DirectoryServices.AccountManagement.Principal.ContextRaw
  - System.DirectoryServices.AccountManagement.Principal.ContextType
  - System.DirectoryServices.AccountManagement.Principal.Delete
  - System.DirectoryServices.AccountManagement.Principal.Description
  - System.DirectoryServices.AccountManagement.Principal.DisplayName
  - System.DirectoryServices.AccountManagement.Principal.Dispose
  - System.DirectoryServices.AccountManagement.Principal.DistinguishedName
  - System.DirectoryServices.AccountManagement.Principal.Equals(System.Object)
  - System.DirectoryServices.AccountManagement.Principal.ExtensionGet(System.String)
  - System.DirectoryServices.AccountManagement.Principal.ExtensionSet(System.String,System.Object)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.String)
  - System.DirectoryServices.AccountManagement.Principal.GetGroups
  - System.DirectoryServices.AccountManagement.Principal.GetGroups(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.Principal.GetHashCode
  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject
  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType
  - System.DirectoryServices.AccountManagement.Principal.Guid
  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.GroupPrincipal)
  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.Name
  - System.DirectoryServices.AccountManagement.Principal.SamAccountName
  - System.DirectoryServices.AccountManagement.Principal.Save
  - System.DirectoryServices.AccountManagement.Principal.Save(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.Principal.Sid
  - System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass
  - System.DirectoryServices.AccountManagement.Principal.ToString
  - System.DirectoryServices.AccountManagement.Principal.UserPrincipalName
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  id: '#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)'
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: AuthenticablePrincipal(PrincipalContext)
  nameWithType: AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext)
  type: Constructor
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.DirectoryServices.AccountManagement.AuthenticablePrincipal&quot;> </xref> 지정된 된 컨텍스트를 사용 하 여 클래스입니다. 이 생성자는 기본 클래스를 초기화 하기 위해 파생 클래스 생성자에 의해 호출 됩니다 하며 사용자 코드에서 직접 사용 하기 위해 없습니다."
  remarks: "이 클래스 로부터 파생 되는 사용자 지정 확장 프로그램 클래스는 기본 클래스를 초기화 하기 위해 파생된 클래스 생성자에서이 생성자를 호출할 수 있습니다. 자세한 내용은 참조는 [보안 주체가 확장](http://msdn.microsoft.com/en-us/49d1b257-d652-4224-bdae-2edabced8f00) 개요 항목입니다."
  syntax:
    content: protected AuthenticablePrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> 서버 또는 도메인 작업이 수행 되도록 지정 하는 합니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)
  id: '#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)'
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: AuthenticablePrincipal(PrincipalContext,String,String,Boolean)
  nameWithType: AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext,String,String,Boolean)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext,String,String,Boolean)
  type: Constructor
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.DirectoryServices.AccountManagement.AuthenticablePrincipal&quot;> </xref> 지정 된 컨텍스트, SAM 계정 이름, 암호를 사용 하 여 클래스 및 값을 사용 하도록 설정 합니다. 이 생성자는 기본 클래스를 초기화 하기 위해 파생 클래스 생성자에 의해 호출 됩니다 하며 사용자 코드에서 직접 사용 하기 위해 없습니다."
  remarks: "이 클래스 로부터 파생 되는 사용자 지정 확장 프로그램 클래스는 기본 클래스를 초기화 하기 위해 파생된 클래스 생성자에서이 생성자를 호출할 수 있습니다. 자세한 내용은 참조는 [보안 주체가 확장](http://msdn.microsoft.com/en-us/49d1b257-d652-4224-bdae-2edabced8f00) 개요 항목입니다."
  syntax:
    content: protected AuthenticablePrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName, string password, bool enabled);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> 서버 또는 도메인 작업이 수행 되도록 지정 하는 합니다."
    - id: samAccountName
      type: System.String
      description: "이 보안 주체에 대 한 SAM 계정 이름입니다."
    - id: password
      type: System.String
      description: "이 계정에 대 한 암호입니다."
    - id: enabled
      type: System.Boolean
      description: "계정이 활성화 되어 있는지 여부를 지정 하는 부울 값입니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate
  id: AccountExpirationDate
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: AccountExpirationDate
  nameWithType: AuthenticablePrincipal.AccountExpirationDate
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Nullable을 가져오거나 설정 합니다. <xref:System.DateTime>계정이 만료 되는 시간과 날짜를 지정 하는.</xref:System.DateTime>"
  remarks: "모든와 마찬가지로 <xref:System.DateTime>속성에 <xref:System.DirectoryServices.AccountManagement>, 시간 UTC 형식에 반환 됩니다.</xref:System.DirectoryServices.AccountManagement> </xref:System.DateTime>  현지 시간으로 변환 하려면 호출는 <xref:System.DateTime.ToLocalTime%2A>반환 개체의 메서드를.</xref:System.DateTime.ToLocalTime%2A>       AccountExpirationDate 설정 하는 경우 UTC 시간 기본값은입니다.  현지 시간으로 기록 하려는 경우 다음 <xref:System.DateTime.Kind%2A> <xref:System.DateTime> <xref:DateTimeKind.Local>.</xref:DateTimeKind.Local> 개체</xref:System.DateTime> 의 속성</xref:System.DateTime.Kind%2A> 지정"
  syntax:
    content: public Nullable<DateTime> AccountExpirationDate { get; set; }
    return:
      type: System.Nullable{System.DateTime}
      description: "A <xref:System.DateTime>날짜 및 계정 만료 되는 시간 또는 null을 지정 하는 계정이 만료 되지 않는 경우.</xref:System.DateTime>"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "내부 저장소에서이 속성을 지원 하지 않습니다."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime
  id: AccountLockoutTime
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: AccountLockoutTime
  nameWithType: AuthenticablePrincipal.AccountLockoutTime
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Nullable 가져옵니다 <xref:System.DateTime>는 계정이 잠겨 시간과 날짜를 지정 하는.</xref:System.DateTime>"
  remarks: "계정 잠금 시간이 시스템에 따라 다르며 및 계정 관리 API가 설정할 수 없습니다. 계정 잠금 해제를 사용 하 여는 <xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount%2A>메서드.</xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount%2A>       계정을 때 아웃 잠겨 있지 않을 수 있습니다 수는 <xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime%2A>null이 아닌 값을 반환 합니다.</xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime%2A> 응용 프로그램을 사용할지는 <xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut%2A>는 계정이 잠겨 있는지 여부를 결정 하는 메서드.</xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut%2A>       모든와 마찬가지로 <xref:System.DateTime>속성에 <xref:System.DirectoryServices.AccountManagement>, 시간 UTC 형식에 반환 됩니다.</xref:System.DirectoryServices.AccountManagement> </xref:System.DateTime>  현지 시간으로 변환 하려면 호출는 <xref:System.DateTime.ToLocalTime%2A>반환 개체의 메서드를.</xref:System.DateTime.ToLocalTime%2A>"
  syntax:
    content: public Nullable<DateTime> AccountLockoutTime { get; }
    return:
      type: System.Nullable{System.DateTime}
      description: "A <xref:System.DateTime>날짜 및 시간을 계정이 잠겨 또는 null을 지정 하는 잠금 시간이 없는 계정으로 설정 된 경우.</xref:System.DateTime>"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "내부 저장소에서이 속성을 지원 하지 않습니다."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter
  id: AdvancedSearchFilter
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: AdvancedSearchFilter
  nameWithType: AuthenticablePrincipal.AdvancedSearchFilter
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "반환 된 <xref:System.DirectoryServices.AccountManagement.AdvancedSearchFilter>개체와 함께 사용할 [예제로 쿼리](http://msdn.microsoft.com/en-us/84ac40bb-04c4-4d0b-adaf-0ddb9253599e) 개체를 전달 하기 전에 읽기 전용 속성을 설정 하는 <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalSearcher&quot;> </xref>.</xref:System.DirectoryServices.AccountManagement.AdvancedSearchFilter>"
  remarks: "참조는 [예제로 쿼리](http://msdn.microsoft.com/en-us/84ac40bb-04c4-4d0b-adaf-0ddb9253599e) 예제에 대 한 설명서입니다."
  syntax:
    content: public virtual System.DirectoryServices.AccountManagement.AdvancedFilters AdvancedSearchFilter { get; }
    return:
      type: System.DirectoryServices.AccountManagement.AdvancedFilters
      description: "<xref:System.DirectoryServices.AccountManagement.AdvancedSearchFilter>개체입니다.</xref:System.DirectoryServices.AccountManagement.AdvancedSearchFilter>"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption
  id: AllowReversiblePasswordEncryption
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: AllowReversiblePasswordEncryption
  nameWithType: AuthenticablePrincipal.AllowReversiblePasswordEncryption
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "이 계정에 대해 해독 가능한 암호 암호화를 사용할 수 있는지 여부를 지정 하는 부울 값을 가져오거나 설정 합니다."
  syntax:
    content: public bool AllowReversiblePasswordEncryption { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 계정에 대해 해독 가능한 암호 암호화를 사용 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "내부 저장소에서이 속성을 지원 하지 않습니다."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount
  id: BadLogonCount
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: BadLogonCount
  nameWithType: AuthenticablePrincipal.BadLogonCount
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "잘못 된 자격 증명을 사용 하 여이 계정에 대 한 로그온 시도 횟수를 가져옵니다."
  syntax:
    content: public int BadLogonCount { get; }
    return:
      type: System.Int32
      description: "이 계정에 대 한 잘못 된 자격 증명을 사용 하 여 시도 하는 로그온 횟수입니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "내부 저장소에서이 속성을 지원 하지 않습니다."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates
  id: Certificates
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: Certificates
  nameWithType: AuthenticablePrincipal.Certificates
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "가져옵니다는 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot;> </xref> X509를 포함 하는이 계정에 대 한 인증서입니다."
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2Collection Certificates { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: "A <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot;> </xref> X509를 포함 하는이 계정에 대 한 인증서입니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "내부 저장소에서이 속성을 지원 하지 않습니다."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(System.String,System.String)
  id: ChangePassword(System.String,System.String)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: ChangePassword(String,String)
  nameWithType: AuthenticablePrincipal.ChangePassword(String,String)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(String,String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "이전 암호와에서 새 암호를 계정 암호를 변경합니다. 이를 사용 하지 않는 한 <xref href=&quot;System.DirectoryServices.AccountManagement.ComputerPrincipal&quot;> </xref>합니다."
  remarks: "컴퓨터 보안 주체에 대 한이 메서드를 사용 하는 것이 없습니다. 이를 호출 하는 <xref:System.DirectoryServices.AccountManagement.ComputerPrincipal>하면는 <xref:System.NotSupportedException>throw 됩니다.</xref:System.NotSupportedException> </xref:System.DirectoryServices.AccountManagement.ComputerPrincipal>"
  syntax:
    content: public void ChangePassword (string oldPassword, string newPassword);
    parameters:
    - id: oldPassword
      type: System.String
      description: "변경 되는 암호입니다."
    - id: newPassword
      type: System.String
      description: "새 암호입니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "주 서버는 유지 되지 합니다."
  - type: System.DirectoryServices.AccountManagement.PasswordException
    commentId: T:System.DirectoryServices.AccountManagement.PasswordException
    description: "새 암호 복잡성 요구 사항에 맞지 않습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "주 서버는 사용자가 아닙니다."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted
  id: DelegationPermitted
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: DelegationPermitted
  nameWithType: AuthenticablePrincipal.DelegationPermitted
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "계정을 위임할 수 있는지 여부를 나타내는 Nullable 부울 값을 가져오거나 설정 합니다."
  syntax:
    content: public bool DelegationPermitted { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>계정을 위임할 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "내부 저장소에서이 속성을 지원 하지 않습니다."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled
  id: Enabled
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: Enabled
  nameWithType: AuthenticablePrincipal.Enabled
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "인증을 위해이 계정이 사용 되는지 여부를 지정 하는 Nullable 부울 값을 가져오거나 설정 합니다."
  remarks: "주 서버는 저장소에 유지 되지이 속성은 null을 반환 합니다. 보안 주체가 지속 되 면 사용 하도록 설정 하는 기본 설정 저장소에 따라 다릅니다. AD DS 및 AD LDS 저장소 새 보안 주체 때 비활성화 유지 하기 반면 SAM 유지 되는 경우 새 보안 주체를 수 있습니다. 응용 프로그램 저장소에 유지 된 후이 속성 값을 설정만 수 있습니다."
  syntax:
    content: public Nullable<bool> Enabled { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>보안 주체가 되거나 활성화 되거나 계정이; 유지 되지 않은 경우에 null 이면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "내부 저장소에서이 속성을 지원 하지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "응용 프로그램에서이 속성에 대 한 null 값을 설정 하려고 합니다."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow
  id: ExpirePasswordNow
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: ExpirePasswordNow()
  nameWithType: AuthenticablePrincipal.ExpirePasswordNow()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "이 계정에 대 한 암호를 만료 됩니다. 이렇게 하면 다음 로그온 할 때 자신의 암호를 변경 하려면 사용자를 시작 합니다."
  remarks: "다음 로그온 할 때 암호를 변경 하도록 하려면이 메서드를 호출 합니다."
  syntax:
    content: public void ExpirePasswordNow ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.PrincipalOperationException
    commentId: T:System.DirectoryServices.AccountManagement.PrincipalOperationException
    description: "저장소에 변경 내용을 저장 하는 경우 예외가 발생 합니다."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "않은 잘못 된 암호 시도가 지정 된 날짜 및 시간 범위에 기록 된 인증 보안 주체 개체의 컬렉션을 반환 합니다."
  remarks: "시간이 UTC 기본값으로 설정 됩니다.  다음 지정 시간을 현지 시간으로 지정 하려는 경우는 <xref:System.DateTime.Kind%2A>의 속성은 `time` <xref:DateTimeKind.Local>.</xref:DateTimeKind.Local> 개체</xref:System.DateTime.Kind%2A>"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal> FindByBadPasswordAttempt (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> 서버 또는 도메인 작업이 수행 되도록 지정 하는 개체입니다."
    - id: time
      type: System.DateTime
      description: "A <xref:System.DateTime>잘못 된 암호 시도의 시간과 날짜를 식별 하는 개체입니다.</xref:System.DateTime> 이 매개 변수를 형식 매개 변수와 함께 사용 되어 반환 된 개체에 기록 하는 잘못 된 로그온 시도 시간 범위를 결정 합니다."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref> 열거형 값에 적용 되는 일치 항목의 유형을 지정 하는 `time` 매개 변수입니다."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
      description: "A &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%271&gt; 하나 이상 포함 하는 <xref href=&quot;System.DirectoryServices.AccountManagement.AuthenticablePrincipal&quot;> </xref> 개체나 결과가 없는 경우에 빈 컬렉션입니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  id: FindByBadPasswordAttempt``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: protected static System.DirectoryServices.AccountManagement.PrincipalSearchResult<T> FindByBadPasswordAttempt<T> (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "추가할 수 있습니다."
    - id: time
      type: System.DateTime
      description: "추가할 수 있습니다."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "추가할 수 있습니다."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
      description: "추가할 수 있습니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt<T>*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "계정 만료 시간이 지정 된 날짜 및 시간 범위에 기록 된 인증 보안 주체 개체의 컬렉션을 반환 합니다."
  remarks: "시간이 UTC 기본값으로 설정 됩니다. 다음 지정 시간을 현지 시간으로 지정 하려는 경우는 <xref:System.DateTime.Kind%2A>의 속성은 `time` <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> 개체</xref:System.DateTime.Kind%2A>"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal> FindByExpirationTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> 서버 또는 도메인 작업이 수행 되도록 지정 하는 합니다."
    - id: time
      type: System.DateTime
      description: "A <xref:System.DateTime>날짜 및 시간 계정 만료 기간을 식별 하는 개체입니다.</xref:System.DateTime> 이 매개 변수를 형식 매개 변수와 함께 사용 되어 반환 된 개체에 기록 된 계정 만료 시간 범위를 결정 합니다."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref> 열거형 값에 적용 되는 일치 항목의 유형을 지정 하는 `time` 매개 변수입니다."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
      description: "A &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; 하나 이상 포함 하는 <xref href=&quot;System.DirectoryServices.AccountManagement.AuthenticablePrincipal&quot;> </xref> 개체입니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  id: FindByExpirationTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: protected static System.DirectoryServices.AccountManagement.PrincipalSearchResult<T> FindByExpirationTime<T> (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "추가할 수 있습니다."
    - id: time
      type: System.DateTime
      description: "추가할 수 있습니다."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "추가할 수 있습니다."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
      description: "추가할 수 있습니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime<T>*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "인증에 계정 잠금 시간이 지정한 날짜 및 시간 범위에 기록 된 보안 주체 개체의 컬렉션을 반환 합니다."
  remarks: "시간이 UTC 기본값으로 설정 됩니다.  다음 지정 시간을 현지 시간으로 지정 하려는 경우는 <xref:System.DateTime.Kind%2A>의 속성은 `time` <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> 개체</xref:System.DateTime.Kind%2A>"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal> FindByLockoutTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> 서버 또는 도메인 작업이 수행 되도록 지정 하는 합니다."
    - id: time
      type: System.DateTime
      description: "A <xref:System.DateTime>계정 잠금의 시간과 날짜를 식별 하는 개체입니다.</xref:System.DateTime> 이 매개 변수를 형식 매개 변수와 함께 사용 되어 반환 된 개체에 계정 잠금이 기록 하는 시간 범위를 결정 합니다."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref> 열거형 값에 적용 되는 일치 항목의 유형을 지정 하는 `time` 매개 변수입니다."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
      description: "A &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; 하나 이상 포함 하는 <xref href=&quot;System.DirectoryServices.AccountManagement.AuthenticablePrincipal&quot;> </xref> 개체입니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  id: FindByLockoutTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: protected static System.DirectoryServices.AccountManagement.PrincipalSearchResult<T> FindByLockoutTime<T> (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "추가할 수 있습니다."
    - id: time
      type: System.DateTime
      description: "추가할 수 있습니다."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "추가할 수 있습니다."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
      description: "추가할 수 있습니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime<T>*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByLogonTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "계정 로그온이 지정한 날짜 및 시간 범위에 기록 된 인증 보안 주체 개체의 컬렉션을 반환 합니다."
  remarks: "시간이 UTC 기본값으로 설정 됩니다. 다음 지정 시간을 현지 시간으로 지정 하려는 경우는 <xref:System.DateTime.Kind%2A>의 속성은 `time` <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> 개체</xref:System.DateTime.Kind%2A>"
  example:
  - "The following code connects to the ADAM instance hosted by the server \"adamHost1.fabrikam.com\" on port number \"5000.\" The username (adamAdmin), and password (SecretPwd123) are specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor.  \n  \n A search is performed for all authenticable principals under the container \"DC=adamApp1,DC=fabrikam,DC=com\" that have not logged on to this ADAM instance for the last 45 days. The principals returned by the search are then deleted.  \n  \n```  \nPrincipalContext ctx = new PrincipalContext(  \n                                      ContextType.ApplicationDirectory,   \n                                      \"adamHost1.fabrikam.com:5000\",   \n                                      \"DC=adamApp1,DC=fabrikam,DC=com\",   \n                                      \"adamAdmin\", \"SecretPwd123\");  \n  \nPrincipalSearchResult<AuthenticablePrincipal> oldPrincipals =   \n                     AuthenticablePrincipal.FindByLogonTime(ctx,   \n                            (DateTime.Now - new TimeSpan(45, 0, 0, 0)),   \n                            MatchType.LessThan);  \n  \nforeach (Principal p in oldPrincipals)  \n{  \n    p.Delete();  \n}  \n  \noldPrincipals.Dispose();  \nctx.Dispose();  \n  \n```"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal> FindByLogonTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> 서버 또는 도메인 작업이 수행 되도록 지정 하는 합니다."
    - id: time
      type: System.DateTime
      description: "A <xref:System.DateTime>로그온 기록의 시간과 날짜를 식별 하는 개체입니다.</xref:System.DateTime> 이 매개 변수를 형식 매개 변수와 함께 사용 되어 반환 된 개체에 계정 로그온이 기록 하는 시간 범위를 결정 합니다."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref> 열거형 값에 적용 되는 일치 항목의 유형을 지정 하는 `time` 매개 변수입니다."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
      description: "A &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; 하나 이상 포함 하는 <xref href=&quot;System.DirectoryServices.AccountManagement.AuthenticablePrincipal&quot;> </xref> 개체입니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  id: FindByLogonTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByLogonTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: protected static System.DirectoryServices.AccountManagement.PrincipalSearchResult<T> FindByLogonTime<T> (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "추가할 수 있습니다."
    - id: time
      type: System.DateTime
      description: "추가할 수 있습니다."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "추가할 수 있습니다."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
      description: "추가할 수 있습니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime<T>*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "에 계정 암호 설정이 지정 된 날짜 및 시간 범위에서 기록 된 보안 주체 개체 인증의 컬렉션을 반환 합니다."
  remarks: "시간이 UTC 기본값으로 설정 됩니다. 다음 지정 시간을 현지 시간으로 지정 하려는 경우는 <xref:System.DateTime.Kind%2A>의 속성은 `time` <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> 개체</xref:System.DateTime.Kind%2A>"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal> FindByPasswordSetTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> 서버 또는 도메인 작업이 수행 되도록 지정 하는 합니다."
    - id: time
      type: System.DateTime
      description: "A <xref:System.DateTime>암호 설정의 시간과 날짜를 식별 하는 개체입니다.</xref:System.DateTime> 이 매개 변수를 형식 매개 변수와 함께 사용 되어 반환 된 개체에 암호가 설정 기록 된 시간 범위를 결정 합니다."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref> 열거형 값에 적용 되는 일치 항목의 유형을 지정 하는 `time` 매개 변수입니다."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
      description: "A &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; 하나 이상 포함 하는 <xref href=&quot;System.DirectoryServices.AccountManagement.AuthenticablePrincipal&quot;> </xref> 개체입니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  id: FindByPasswordSetTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: protected static System.DirectoryServices.AccountManagement.PrincipalSearchResult<T> FindByPasswordSetTime<T> (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "추가할 수 있습니다."
    - id: time
      type: System.DateTime
      description: "추가할 수 있습니다."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "추가할 수 있습니다."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
      description: "추가할 수 있습니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime<T>*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory
  id: HomeDirectory
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: HomeDirectory
  nameWithType: AuthenticablePrincipal.HomeDirectory
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "이 계정에 대 한 홈 디렉터리를 가져오거나 설정 합니다."
  syntax:
    content: public string HomeDirectory { get; set; }
    return:
      type: System.String
      description: "홈이이 계정에 대 한 디렉터리 또는 홈 디렉터리가 없는 경우 null입니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "내부 저장소에서이 속성을 지원 하지 않습니다."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive
  id: HomeDrive
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: HomeDrive
  nameWithType: AuthenticablePrincipal.HomeDrive
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "이 계정에 대 한 홈 드라이브를 가져오거나 설정 합니다."
  syntax:
    content: public string HomeDrive { get; set; }
    return:
      type: System.String
      description: "계정 또는 홈 드라이브가 없는 경우에 null에 대 한 홈 드라이브입니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "내부 저장소에서이 속성을 지원 하지 않습니다."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut
  id: IsAccountLockedOut
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: IsAccountLockedOut()
  nameWithType: AuthenticablePrincipal.IsAccountLockedOut()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "계정이 현재 잠겨 있는지 여부를 지정 하는 부울 값을 반환 합니다."
  remarks: "계정을 때 아웃 잠겨 있지 않을 수 있습니다 수는 <xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime%2A>null이 아닌 값을 반환 합니다.</xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime%2A> 이 메서드는 계정이 잠겨 있는지 여부를 확인 하려면 올바른 저장소 특정 잠금 값을 계산 합니다."
  syntax:
    content: public bool IsAccountLockedOut ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>계정이 잠겨 있으면; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt
  id: LastBadPasswordAttempt
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: LastBadPasswordAttempt
  nameWithType: AuthenticablePrincipal.LastBadPasswordAttempt
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Nullable 가져옵니다 <xref:System.DateTime>이 계정에 대해 마지막 잘못 된 암호 시도의 시간과 날짜를 지정 하는.</xref:System.DateTime>"
  remarks: "모든와 마찬가지로 <xref:System.DateTime>속성에 <xref:System.DirectoryServices.AccountManagement>, 시간 UTC 형식에 반환 됩니다.</xref:System.DirectoryServices.AccountManagement> </xref:System.DateTime>  현지 시간으로 변환 하려면 호출는 <xref:System.DateTime.ToLocalTime%2A>반환 개체의 메서드를.</xref:System.DateTime.ToLocalTime%2A>"
  syntax:
    content: public Nullable<DateTime> LastBadPasswordAttempt { get; }
    return:
      type: System.Nullable{System.DateTime}
      description: "Nullable <xref:System.DateTime>이 계정에 대해 마지막 잘못 된 암호 시도의 시간과 날짜를 지정 하는 또는 잘못 된 암호 시도 실패 하지 않으면 null 기록 됩니다.</xref:System.DateTime>"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "내부 저장소에서이 속성을 지원 하지 않습니다."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon
  id: LastLogon
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: LastLogon
  nameWithType: AuthenticablePrincipal.LastLogon
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Nullable 가져옵니다 <xref:System.DateTime>날짜와이 계정의 마지막 로그온 시간을 지정 하는.</xref:System.DateTime>"
  remarks: "모든와 마찬가지로 <xref:System.DateTime>속성에 <xref:System.DirectoryServices.AccountManagement>, 시간 UTC 형식에 반환 됩니다.</xref:System.DirectoryServices.AccountManagement> </xref:System.DateTime>  현지 시간으로 변환 하려면 호출는 <xref:System.DateTime.ToLocalTime%2A>반환 개체의 메서드를.</xref:System.DateTime.ToLocalTime%2A>"
  syntax:
    content: public Nullable<DateTime> LastLogon { get; }
    return:
      type: System.Nullable{System.DateTime}
      description: "Nullable <xref:System.DateTime>날짜와이 계정의 마지막 로그온 시간을 지정 하는.</xref:System.DateTime>"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "내부 저장소에서이 속성을 지원 하지 않습니다."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet
  id: LastPasswordSet
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: LastPasswordSet
  nameWithType: AuthenticablePrincipal.LastPasswordSet
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Nullable 가져옵니다 <xref:System.DateTime>마지막 날짜 및 암호가이 계정에 대해 설정 된 시간을 지정 하는.</xref:System.DateTime>"
  remarks: "모든와 마찬가지로 <xref:System.DateTime>속성에 <xref:System.DirectoryServices.AccountManagement>, 시간 UTC 형식에 반환 됩니다.</xref:System.DirectoryServices.AccountManagement> </xref:System.DateTime>  현지 시간으로 변환 하려면 호출는 <xref:System.DateTime.ToLocalTime%2A>반환 개체의 메서드를.</xref:System.DateTime.ToLocalTime%2A>"
  syntax:
    content: public Nullable<DateTime> LastPasswordSet { get; }
    return:
      type: System.Nullable{System.DateTime}
      description: "Nullable <xref:System.DateTime>마지막 날짜 및 암호가이 계정에 대해 설정 된 시간을 지정 하는.</xref:System.DateTime>"
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "내부 저장소에서이 속성을 지원 하지 않습니다."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires
  id: PasswordNeverExpires
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: PasswordNeverExpires
  nameWithType: AuthenticablePrincipal.PasswordNeverExpires
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "이 계정에 대 한 암호 만료 여부를 지정 하는 부울 값을 가져오거나 설정 합니다."
  syntax:
    content: public bool PasswordNeverExpires { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 계정에 대 한 암호가 만료 된 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "내부 저장소에서이 속성을 지원 하지 않습니다."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired
  id: PasswordNotRequired
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: PasswordNotRequired
  nameWithType: AuthenticablePrincipal.PasswordNotRequired
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "이 계정에 필요한 암호 인지를 지정 하는 부울 값을 가져오거나 설정 합니다."
  syntax:
    content: public bool PasswordNotRequired { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>암호가이 계정에 대 한 필요 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "내부 저장소에서이 속성을 지원 하지 않습니다."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes
  id: PermittedLogonTimes
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: PermittedLogonTimes
  nameWithType: AuthenticablePrincipal.PermittedLogonTimes
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "주 서버 로그온 할 수는 경우 시간을 가져오거나 설정 합니다."
  syntax:
    content: public byte[] PermittedLogonTimes { get; set; }
    return:
      type: System.Byte[]
      description: "이 계정에 대해 허용 되는 로그온 시간입니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "내부 저장소에서이 속성을 지원 하지 않습니다."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations
  id: PermittedWorkstations
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: PermittedWorkstations
  nameWithType: AuthenticablePrincipal.PermittedWorkstations
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "이 보안 주체에 로그인 하도록 허용 된 워크스테이션의 목록을 가져옵니다."
  syntax:
    content: public System.DirectoryServices.AccountManagement.PrincipalValueCollection<string> PermittedWorkstations { get; }
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalValueCollection{System.String}
      description: "이 보안 주체에 로그인 하도록 허용 된 워크스테이션의 변경 가능한 목록입니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "내부 저장소에서이 속성을 지원 하지 않습니다."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword
  id: RefreshExpiredPassword
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: RefreshExpiredPassword()
  nameWithType: AuthenticablePrincipal.RefreshExpiredPassword()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "만료 된 암호를 새로 고칩니다."
  syntax:
    content: public void RefreshExpiredPassword ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.PrincipalOperationException
    commentId: T:System.DirectoryServices.AccountManagement.PrincipalOperationException
    description: "저장소에 변경 내용을 저장 하는 경우 예외가 발생 합니다."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath
  id: ScriptPath
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: ScriptPath
  nameWithType: AuthenticablePrincipal.ScriptPath
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "이 계정에 대 한 스크립트 경로 가져오거나 설정 합니다."
  syntax:
    content: public string ScriptPath { get; set; }
    return:
      type: System.String
      description: "이 계정 또는 스크립트 경로가 없는 경우에 null에 대 한 스크립트의 경로입니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "내부 저장소에서이 속성을 지원 하지 않습니다."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(System.String)
  id: SetPassword(System.String)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: SetPassword(String)
  nameWithType: AuthenticablePrincipal.SetPassword(String)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "지정된 된 값으로 계정 암호를 설정합니다."
  syntax:
    content: public void SetPassword (string newPassword);
    parameters:
    - id: newPassword
      type: System.String
      description: "새 암호입니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.PasswordException
    commentId: T:System.DirectoryServices.AccountManagement.PasswordException
    description: "호출자에 게 적절 한 권한이, 새 암호가 암호 복잡성 요구 사항을 충족 하지 않는 또는 기타 다른 이유로 거부를 저장 하는 기본 암호를 변경 하는 경우 예외를 throw 합니다."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired
  id: SmartcardLogonRequired
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: SmartcardLogonRequired
  nameWithType: AuthenticablePrincipal.SmartcardLogonRequired
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "스마트 카드는 계정에 로그온 하는 데 필요한 지 여부를 지정 하는 부울 값을 가져오거나 설정 합니다."
  syntax:
    content: public bool SmartcardLogonRequired { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>스마트 카드는이 계정에 로그온 해야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "내부 저장소에서이 속성을 지원 하지 않습니다."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount
  id: UnlockAccount
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: UnlockAccount()
  nameWithType: AuthenticablePrincipal.UnlockAccount()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "현재 잠겨 있는 경우 계정 잠금 해제 합니다."
  remarks: ''
  example:
  - "The following example code connects to the LDAP domain \"fabrikam.com\" with the username (administrator) and password (SecretPwd123) initialized in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor.  \n  \n A search is performed to find the user with name \"John Smith\" under the container specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor: \"CN=Users,DC=fabrikam,DC=com.\"  If the user is found, a check is performed to determine whether this user's account has been locked out. If the account has been locked out, the code example unlocks the account.  \n  \n```  \nPrincipalContext ctx = new PrincipalContext(ContextType.Domain,   \n                                         \"fabrikam.com\",   \n                                         \"CN=Users,DC=fabrikam,DC=com\",   \n                                         \"administrator\",   \n                                         \"SecretPwd123\");  \n  \nUserPrincipal usr = UserPrincipal.FindByIdentity(ctx, \"John Smith\");  \nif (usr != null)  \n{  \n    if (usr.IsAccountLockedOut())  \n        usr.UnlockAccount();  \n  \n    usr.Dispose();  \n}  \nctx.Dispose();   \n```"
  syntax:
    content: public void UnlockAccount ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.PrincipalOperationException
    commentId: T:System.DirectoryServices.AccountManagement.PrincipalOperationException
    description: "저장소에 변경 내용을 저장 하는 경우 예외가 발생 합니다."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword
  id: UserCannotChangePassword
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: UserCannotChangePassword
  nameWithType: AuthenticablePrincipal.UserCannotChangePassword
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "사용자가이 계정에 대 한 암호를 변경할 수 있는지 여부를 지정 하는 부울 값을 가져오거나 설정 합니다. 이를 사용 하지 않는 한 <xref href=&quot;System.DirectoryServices.AccountManagement.ComputerPrincipal&quot;> </xref>합니다."
  remarks: "컴퓨터 보안 주체에 대 한이 메서드를 사용 하는 것이 없습니다. 이를 호출 하는 <xref:System.DirectoryServices.AccountManagement.ComputerPrincipal>하면는 <xref:System.NotSupportedException>throw 됩니다.</xref:System.NotSupportedException> </xref:System.DirectoryServices.AccountManagement.ComputerPrincipal>"
  syntax:
    content: public bool UserCannotChangePassword { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사용자; 암호를 변경할 수 없는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "내부 저장소에서이 속성을 지원 하지 않습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "이 주 개체는 사용자가 아닙니다."
  platform:
  - net462
references:
- uid: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: System.DirectoryServices.AccountManagement.Principal
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.DirectoryServices.AccountManagement.PasswordException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PasswordException
  nameWithType: PasswordException
  fullName: System.DirectoryServices.AccountManagement.PasswordException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.DirectoryServices.AccountManagement.PrincipalOperationException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalOperationException
  nameWithType: PrincipalOperationException
  fullName: System.DirectoryServices.AccountManagement.PrincipalOperationException
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AuthenticablePrincipal(PrincipalContext)
  nameWithType: AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext)
- uid: System.DirectoryServices.AccountManagement.PrincipalContext
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalContext
  nameWithType: PrincipalContext
  fullName: System.DirectoryServices.AccountManagement.PrincipalContext
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AuthenticablePrincipal(PrincipalContext,String,String,Boolean)
  nameWithType: AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext,String,String,Boolean)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext,String,String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AccountExpirationDate
  nameWithType: AuthenticablePrincipal.AccountExpirationDate
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate
- uid: System.Nullable{System.DateTime}
  parent: System
  isExternal: true
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.DateTime>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AccountLockoutTime
  nameWithType: AuthenticablePrincipal.AccountLockoutTime
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AdvancedSearchFilter
  nameWithType: AuthenticablePrincipal.AdvancedSearchFilter
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: AdvancedFilters
  nameWithType: AdvancedFilters
  fullName: System.DirectoryServices.AccountManagement.AdvancedFilters
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AllowReversiblePasswordEncryption
  nameWithType: AuthenticablePrincipal.AllowReversiblePasswordEncryption
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: BadLogonCount
  nameWithType: AuthenticablePrincipal.BadLogonCount
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: Certificates
  nameWithType: AuthenticablePrincipal.Certificates
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2Collection
  nameWithType: X509Certificate2Collection
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(System.String,System.String)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: ChangePassword(String,String)
  nameWithType: AuthenticablePrincipal.ChangePassword(String,String)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(String,String)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: DelegationPermitted
  nameWithType: AuthenticablePrincipal.DelegationPermitted
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: Enabled
  nameWithType: AuthenticablePrincipal.Enabled
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled
- uid: System.Nullable{System.Boolean}
  parent: System
  isExternal: true
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: ExpirePasswordNow()
  nameWithType: AuthenticablePrincipal.ExpirePasswordNow()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow()
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<AuthenticablePrincipal>
  nameWithType: PrincipalSearchResult<AuthenticablePrincipal>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal>
  spec.csharp:
  - uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
    name: PrincipalSearchResult
    nameWithType: PrincipalSearchResult
    fullName: PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
    name: AuthenticablePrincipal
    nameWithType: AuthenticablePrincipal
    fullName: AuthenticablePrincipal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DirectoryServices.AccountManagement.MatchType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: MatchType
  nameWithType: MatchType
  fullName: System.DirectoryServices.AccountManagement.MatchType
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<T>
  nameWithType: PrincipalSearchResult<T>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<T>
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLogonTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLogonTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: HomeDirectory
  nameWithType: AuthenticablePrincipal.HomeDirectory
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: HomeDrive
  nameWithType: AuthenticablePrincipal.HomeDrive
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: IsAccountLockedOut()
  nameWithType: AuthenticablePrincipal.IsAccountLockedOut()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut()
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: LastBadPasswordAttempt
  nameWithType: AuthenticablePrincipal.LastBadPasswordAttempt
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: LastLogon
  nameWithType: AuthenticablePrincipal.LastLogon
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: LastPasswordSet
  nameWithType: AuthenticablePrincipal.LastPasswordSet
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PasswordNeverExpires
  nameWithType: AuthenticablePrincipal.PasswordNeverExpires
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PasswordNotRequired
  nameWithType: AuthenticablePrincipal.PasswordNotRequired
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PermittedLogonTimes
  nameWithType: AuthenticablePrincipal.PermittedLogonTimes
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PermittedWorkstations
  nameWithType: AuthenticablePrincipal.PermittedWorkstations
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations
- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection{System.String}
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalValueCollection<String>
  nameWithType: PrincipalValueCollection<String>
  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<System.String>
  spec.csharp:
  - uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection`1
    name: PrincipalValueCollection
    nameWithType: PrincipalValueCollection
    fullName: PrincipalValueCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: RefreshExpiredPassword()
  nameWithType: AuthenticablePrincipal.RefreshExpiredPassword()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword()
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: ScriptPath
  nameWithType: AuthenticablePrincipal.ScriptPath
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(System.String)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: SetPassword(String)
  nameWithType: AuthenticablePrincipal.SetPassword(String)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(String)
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: SmartcardLogonRequired
  nameWithType: AuthenticablePrincipal.SmartcardLogonRequired
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: UnlockAccount()
  nameWithType: AuthenticablePrincipal.UnlockAccount()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount()
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: UserCannotChangePassword
  nameWithType: AuthenticablePrincipal.UserCannotChangePassword
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AuthenticablePrincipal
  nameWithType: AuthenticablePrincipal.AuthenticablePrincipal
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AccountExpirationDate
  nameWithType: AuthenticablePrincipal.AccountExpirationDate
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AccountLockoutTime
  nameWithType: AuthenticablePrincipal.AccountLockoutTime
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AdvancedSearchFilter
  nameWithType: AuthenticablePrincipal.AdvancedSearchFilter
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AllowReversiblePasswordEncryption
  nameWithType: AuthenticablePrincipal.AllowReversiblePasswordEncryption
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: BadLogonCount
  nameWithType: AuthenticablePrincipal.BadLogonCount
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: Certificates
  nameWithType: AuthenticablePrincipal.Certificates
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: ChangePassword
  nameWithType: AuthenticablePrincipal.ChangePassword
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: DelegationPermitted
  nameWithType: AuthenticablePrincipal.DelegationPermitted
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: Enabled
  nameWithType: AuthenticablePrincipal.Enabled
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: ExpirePasswordNow
  nameWithType: AuthenticablePrincipal.ExpirePasswordNow
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByBadPasswordAttempt
  nameWithType: AuthenticablePrincipal.FindByBadPasswordAttempt
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt<T>*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByBadPasswordAttempt<T>
  nameWithType: AuthenticablePrincipal.FindByBadPasswordAttempt<T>
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByExpirationTime
  nameWithType: AuthenticablePrincipal.FindByExpirationTime
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime<T>*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByExpirationTime<T>
  nameWithType: AuthenticablePrincipal.FindByExpirationTime<T>
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLockoutTime
  nameWithType: AuthenticablePrincipal.FindByLockoutTime
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime<T>*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLockoutTime<T>
  nameWithType: AuthenticablePrincipal.FindByLockoutTime<T>
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLogonTime
  nameWithType: AuthenticablePrincipal.FindByLogonTime
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime<T>*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLogonTime<T>
  nameWithType: AuthenticablePrincipal.FindByLogonTime<T>
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByPasswordSetTime
  nameWithType: AuthenticablePrincipal.FindByPasswordSetTime
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime<T>*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByPasswordSetTime<T>
  nameWithType: AuthenticablePrincipal.FindByPasswordSetTime<T>
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: HomeDirectory
  nameWithType: AuthenticablePrincipal.HomeDirectory
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: HomeDrive
  nameWithType: AuthenticablePrincipal.HomeDrive
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: IsAccountLockedOut
  nameWithType: AuthenticablePrincipal.IsAccountLockedOut
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: LastBadPasswordAttempt
  nameWithType: AuthenticablePrincipal.LastBadPasswordAttempt
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: LastLogon
  nameWithType: AuthenticablePrincipal.LastLogon
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: LastPasswordSet
  nameWithType: AuthenticablePrincipal.LastPasswordSet
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PasswordNeverExpires
  nameWithType: AuthenticablePrincipal.PasswordNeverExpires
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PasswordNotRequired
  nameWithType: AuthenticablePrincipal.PasswordNotRequired
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PermittedLogonTimes
  nameWithType: AuthenticablePrincipal.PermittedLogonTimes
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PermittedWorkstations
  nameWithType: AuthenticablePrincipal.PermittedWorkstations
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: RefreshExpiredPassword
  nameWithType: AuthenticablePrincipal.RefreshExpiredPassword
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: ScriptPath
  nameWithType: AuthenticablePrincipal.ScriptPath
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: SetPassword
  nameWithType: AuthenticablePrincipal.SetPassword
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: SmartcardLogonRequired
  nameWithType: AuthenticablePrincipal.SmartcardLogonRequired
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: UnlockAccount
  nameWithType: AuthenticablePrincipal.UnlockAccount
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword*
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: UserCannotChangePassword
  nameWithType: AuthenticablePrincipal.UserCannotChangePassword
