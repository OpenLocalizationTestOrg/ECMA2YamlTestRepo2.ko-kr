### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.IServiceContainer
  id: IServiceContainer
  children:
  - System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  - System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)
  - System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  - System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object,System.Boolean)
  - System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type)
  - System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type,System.Boolean)
  langs:
  - csharp
  name: IServiceContainer
  nameWithType: IServiceContainer
  fullName: System.ComponentModel.Design.IServiceContainer
  type: Interface
  summary: "서비스에 대 한 컨테이너를 제공합니다."
  remarks: "서비스 컨테이너 정의 따라 서비스 공급자입니다. 서비스를 제공할 뿐만 아니라도 서비스 추가 및 제거에 대 한 메커니즘을 제공 합니다. 서비스는.NET Framework 디자인 타임 아키텍처의 기초가 됩니다. 서비스는 서비스 또는 서비스를 제공 하는 서비스 개체에 의해 구현 하는 메서드와 특정 기능에 대 한 디자인 타임 개체 액세스를 제공 합니다.       디자인 타임에는 서비스를 가져오려면, 호출의 <xref:System.ComponentModel.Component.GetService%2A>디자인 모드에는 구성 요소의 메서드와.</xref:System.ComponentModel.Component.GetService%2A> 디자이너와 다른 개체를 추가 하거나 제거할 서비스를 통해 디자인 타임에는 <xref:System.ComponentModel.Design.IDesignerHost>인터페이스.</xref:System.ComponentModel.Design.IDesignerHost>       서비스 컨테이너 서비스 컨테이너의 트리를 작성 합니다. 다른 서비스 컨테이너에 포함 될 수 있습니다. 기본적으로 IServiceContainer 인터페이스는 가장 가까운 서비스 컨테이너에 서비스를 추가합니다. 서비스를 추가 하는 승격 하는 지침이 포함 된 추가할 수 있습니다. 서비스를 승격 되 면 서비스 컨테이너 트리의 최상위에 도달할 때까지에 모든 부모 서비스 컨테이너에 추가 됩니다. 그러면 디자이너 프로세스의 다른 개체에서 사용할 수 있는 글로벌 서비스를 제공 합니다."
  example:
  - "The following code example contains the code for a <xref:System.Windows.Forms.Form> that is configured to demonstrate the behavior of a network of linked service containers.  \n  \n [!code-cs[IServiceContainerExample#1](~/add/codesnippet/csharp/t-system.componentmodel._108_1.cs)]\n [!code-cpp[IServiceContainerExample#1](~/add/codesnippet/cpp/t-system.componentmodel._108_1.cpp)]\n [!code-vb[IServiceContainerExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._108_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IServiceContainer : IServiceProvider
  implements:
  - System.IServiceProvider
  platform:
  - net462
- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  id: AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  parent: System.ComponentModel.Design.IServiceContainer
  langs:
  - csharp
  name: AddService(Type,ServiceCreatorCallback)
  nameWithType: IServiceContainer.AddService(Type,ServiceCreatorCallback)
  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,ServiceCreatorCallback)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "서비스 컨테이너에 지정된 된 서비스를 추가합니다."
  remarks: ''
  example:
  - "The following example illustrates how to add a service to an <xref:System.ComponentModel.Design.IServiceContainer>.  \n  \n [!code-cs[ServiceContainerExample#3](~/add/codesnippet/csharp/4abfcb9d-94a0-4da6-9ce0-_1.cs)]\n [!code-vb[ServiceContainerExample#3](~/add/codesnippet/visualbasic/4abfcb9d-94a0-4da6-9ce0-_1.vb)]\n [!code-cpp[ServiceContainerExample#3](~/add/codesnippet/cpp/4abfcb9d-94a0-4da6-9ce0-_1.cpp)]"
  syntax:
    content: public void AddService (Type serviceType, System.ComponentModel.Design.ServiceCreatorCallback callback);
    parameters:
    - id: serviceType
      type: System.Type
      description: "추가할 서비스의 형식입니다."
    - id: callback
      type: System.ComponentModel.Design.ServiceCreatorCallback
      description: "서비스를 만드는 데 사용 되는 콜백 개체입니다. 이 서비스가 사용 가능으로 선언를 허용 하지만 서비스가 요청 될 때까지 개체 만들기를 지연 합니다."
  overload: System.ComponentModel.Design.IServiceContainer.AddService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)
  id: AddService(System.Type,System.Object)
  parent: System.ComponentModel.Design.IServiceContainer
  langs:
  - csharp
  name: AddService(Type,Object)
  nameWithType: IServiceContainer.AddService(Type,Object)
  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "서비스 컨테이너에 지정된 된 서비스를 추가합니다."
  remarks: ''
  example:
  - "The following example illustrates how to add a service to an <xref:System.ComponentModel.Design.IServiceContainer>.  \n  \n [!code-cs[ServiceContainerExample#2](~/add/codesnippet/csharp/78041303-5e2c-4bbb-9d48-_1.cs)]\n [!code-vb[ServiceContainerExample#2](~/add/codesnippet/visualbasic/78041303-5e2c-4bbb-9d48-_1.vb)]\n [!code-cpp[ServiceContainerExample#2](~/add/codesnippet/cpp/78041303-5e2c-4bbb-9d48-_1.cpp)]"
  syntax:
    content: public void AddService (Type serviceType, object serviceInstance);
    parameters:
    - id: serviceType
      type: System.Type
      description: "추가할 서비스의 형식입니다."
    - id: serviceInstance
      type: System.Object
      description: "추가할 서비스 유형의 인스턴스입니다. 표시 된 형식을 상속 하거나 구현 함이 개체는 `serviceType` 매개 변수입니다."
  overload: System.ComponentModel.Design.IServiceContainer.AddService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  id: AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  parent: System.ComponentModel.Design.IServiceContainer
  langs:
  - csharp
  name: AddService(Type,ServiceCreatorCallback,Boolean)
  nameWithType: IServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)
  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "서비스 컨테이너에 지정된 된 서비스를 추가 하 고 필요에 따라 서비스를 부모 서비스 컨테이너로 승격 시킵니다."
  syntax:
    content: public void AddService (Type serviceType, System.ComponentModel.Design.ServiceCreatorCallback callback, bool promote);
    parameters:
    - id: serviceType
      type: System.Type
      description: "추가할 서비스의 형식입니다."
    - id: callback
      type: System.ComponentModel.Design.ServiceCreatorCallback
      description: "서비스를 만드는 데 사용 되는 콜백 개체입니다. 이 서비스가 사용 가능으로 선언를 허용 하지만 서비스가 요청 될 때까지 개체 만들기를 지연 합니다."
    - id: promote
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 요청을 부모 서비스 컨테이너로; 승격 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.Design.IServiceContainer.AddService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object,System.Boolean)
  id: AddService(System.Type,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.IServiceContainer
  langs:
  - csharp
  name: AddService(Type,Object,Boolean)
  nameWithType: IServiceContainer.AddService(Type,Object,Boolean)
  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "서비스 컨테이너에 지정된 된 서비스를 추가 하 고 필요에 따라 서비스를 부모 서비스 컨테이너로 승격 시킵니다."
  syntax:
    content: public void AddService (Type serviceType, object serviceInstance, bool promote);
    parameters:
    - id: serviceType
      type: System.Type
      description: "추가할 서비스의 형식입니다."
    - id: serviceInstance
      type: System.Object
      description: "추가할 서비스 유형의 인스턴스입니다. 표시 된 형식을 상속 하거나 구현 함이 개체는 `serviceType` 매개 변수입니다."
    - id: promote
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 요청을 부모 서비스 컨테이너로; 승격 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.Design.IServiceContainer.AddService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type)
  id: RemoveService(System.Type)
  parent: System.ComponentModel.Design.IServiceContainer
  langs:
  - csharp
  name: RemoveService(Type)
  nameWithType: IServiceContainer.RemoveService(Type)
  fullName: System.ComponentModel.Design.IServiceContainer.RemoveService(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "지정한 서비스 유형을 서비스 컨테이너에서 제거합니다."
  remarks: ''
  example:
  - "The following example demonstrates how to remove a service from an <xref:System.ComponentModel.Design.IServiceContainer>.  \n  \n [!code-cs[ServiceContainerExample#4](~/add/codesnippet/csharp/m-system.componentmodel._36_1.cs)]\n [!code-vb[ServiceContainerExample#4](~/add/codesnippet/visualbasic/m-system.componentmodel._36_1.vb)]\n [!code-cpp[ServiceContainerExample#4](~/add/codesnippet/cpp/m-system.componentmodel._36_1.cpp)]"
  syntax:
    content: public void RemoveService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "제거할 서비스의 형식입니다."
  overload: System.ComponentModel.Design.IServiceContainer.RemoveService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type,System.Boolean)
  id: RemoveService(System.Type,System.Boolean)
  parent: System.ComponentModel.Design.IServiceContainer
  langs:
  - csharp
  name: RemoveService(Type,Boolean)
  nameWithType: IServiceContainer.RemoveService(Type,Boolean)
  fullName: System.ComponentModel.Design.IServiceContainer.RemoveService(Type,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "지정 된 서비스 유형을 서비스 컨테이너에서 제거 하 고 필요에 따라 서비스를 부모 서비스 컨테이너로 승격 시킵니다."
  remarks: ''
  example:
  - "The following example demonstrates how to remove a service from an <xref:System.ComponentModel.Design.IServiceContainer>.  \n  \n [!code-cs[ServiceContainerExample#4](~/add/codesnippet/csharp/1ae84a0c-9fec-44a0-ac5a-_1.cs)]\n [!code-vb[ServiceContainerExample#4](~/add/codesnippet/visualbasic/1ae84a0c-9fec-44a0-ac5a-_1.vb)]\n [!code-cpp[ServiceContainerExample#4](~/add/codesnippet/cpp/1ae84a0c-9fec-44a0-ac5a-_1.cpp)]"
  syntax:
    content: public void RemoveService (Type serviceType, bool promote);
    parameters:
    - id: serviceType
      type: System.Type
      description: "제거할 서비스의 형식입니다."
    - id: promote
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 요청을 부모 서비스 컨테이너로; 승격 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.Design.IServiceContainer.RemoveService*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  parent: System.ComponentModel.Design.IServiceContainer
  isExternal: false
  name: AddService(Type,ServiceCreatorCallback)
  nameWithType: IServiceContainer.AddService(Type,ServiceCreatorCallback)
  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,ServiceCreatorCallback)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.ServiceCreatorCallback
  parent: System.ComponentModel.Design
  isExternal: false
  name: ServiceCreatorCallback
  nameWithType: ServiceCreatorCallback
  fullName: System.ComponentModel.Design.ServiceCreatorCallback
- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)
  parent: System.ComponentModel.Design.IServiceContainer
  isExternal: false
  name: AddService(Type,Object)
  nameWithType: IServiceContainer.AddService(Type,Object)
  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  parent: System.ComponentModel.Design.IServiceContainer
  isExternal: false
  name: AddService(Type,ServiceCreatorCallback,Boolean)
  nameWithType: IServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)
  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.IServiceContainer
  isExternal: false
  name: AddService(Type,Object,Boolean)
  nameWithType: IServiceContainer.AddService(Type,Object,Boolean)
  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,Object,Boolean)
- uid: System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type)
  parent: System.ComponentModel.Design.IServiceContainer
  isExternal: false
  name: RemoveService(Type)
  nameWithType: IServiceContainer.RemoveService(Type)
  fullName: System.ComponentModel.Design.IServiceContainer.RemoveService(Type)
- uid: System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type,System.Boolean)
  parent: System.ComponentModel.Design.IServiceContainer
  isExternal: false
  name: RemoveService(Type,Boolean)
  nameWithType: IServiceContainer.RemoveService(Type,Boolean)
  fullName: System.ComponentModel.Design.IServiceContainer.RemoveService(Type,Boolean)
- uid: System.ComponentModel.Design.IServiceContainer.AddService*
  parent: System.ComponentModel.Design.IServiceContainer
  isExternal: false
  name: AddService
  nameWithType: IServiceContainer.AddService
- uid: System.ComponentModel.Design.IServiceContainer.RemoveService*
  parent: System.ComponentModel.Design.IServiceContainer
  isExternal: false
  name: RemoveService
  nameWithType: IServiceContainer.RemoveService
