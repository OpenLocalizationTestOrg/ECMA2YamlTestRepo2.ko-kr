### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.Mapping.ResultTypeAttribute
  id: ResultTypeAttribute
  children:
  - System.Data.Linq.Mapping.ResultTypeAttribute.#ctor(System.Type)
  - System.Data.Linq.Mapping.ResultTypeAttribute.Type
  langs:
  - csharp
  name: ResultTypeAttribute
  nameWithType: ResultTypeAttribute
  fullName: System.Data.Linq.Mapping.ResultTypeAttribute
  type: Class
  summary: "각 유형의 결과 지정 하는 데 사용 함수에 대 한 다양 한 결과 형식 발생합니다."
  remarks: "이 특성 다양 한 결과 형식을 반환 하는 함수에 적용 됩니다. 함수에서 반환 된 결과 형식을 선언 하는 데 사용 됩니다. 상속 형식에 대 한 상속 계층의 루트 형식에만 지정 해야 합니다.       <xref:System.Data.Linq.Mapping.ResultTypeAttribute.Type?displayProperty=fullName>.</xref:System.Data.Linq.Mapping.ResultTypeAttribute.Type?displayProperty=fullName> 를 참조 하십시오."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true)]

      public sealed class ResultTypeAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ResultTypeAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Data.Linq.Mapping.ResultTypeAttribute
  langs:
  - csharp
  name: ResultTypeAttribute(Type)
  nameWithType: ResultTypeAttribute.ResultTypeAttribute(Type)
  fullName: System.Data.Linq.Mapping.ResultTypeAttribute.ResultTypeAttribute(Type)
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Linq.Mapping.ResultTypeAttribute&quot;> </xref> 클래스입니다."
  syntax:
    content: public ResultTypeAttribute (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "다양 한 결과 형식이 함수에서 반환 된 결과의 형식입니다."
  overload: System.Data.Linq.Mapping.ResultTypeAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ResultTypeAttribute.Type
  id: Type
  parent: System.Data.Linq.Mapping.ResultTypeAttribute
  langs:
  - csharp
  name: Type
  nameWithType: ResultTypeAttribute.Type
  fullName: System.Data.Linq.Mapping.ResultTypeAttribute.Type
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "다양 한 결과 형식이 함수에 대 한 유효 하거나 필요한 형식 매핑을 가져옵니다."
  remarks: "이 특성 다양 한 결과 형식을 반환 하는 함수에 적용 됩니다. 함수에서 반환 된 결과 형식을 선언 하는 데 사용 됩니다. 상속 형식에 대 한 상속 계층의 루트 형식에만 지정 해야 합니다."
  example:
  - >-
    [!code-vb[DLinqSprox#4](~/add/codesnippet/visualbasic/sprox/northwind-sprox.vb#4)]
     [!code-cs[DLinqSprox#4](~/add/codesnippet/csharp/sprox/northwind-sprox.cs#4)]
  syntax:
    content: public Type Type { get; }
    return:
      type: System.Type
      description: "결과의 형식 (<xref:System.Type>).</xref:System.Type>"
  overload: System.Data.Linq.Mapping.ResultTypeAttribute.Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Data.Linq.Mapping.ResultTypeAttribute.#ctor(System.Type)
  parent: System.Data.Linq.Mapping.ResultTypeAttribute
  isExternal: false
  name: ResultTypeAttribute(Type)
  nameWithType: ResultTypeAttribute.ResultTypeAttribute(Type)
  fullName: System.Data.Linq.Mapping.ResultTypeAttribute.ResultTypeAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.Linq.Mapping.ResultTypeAttribute.Type
  parent: System.Data.Linq.Mapping.ResultTypeAttribute
  isExternal: false
  name: Type
  nameWithType: ResultTypeAttribute.Type
  fullName: System.Data.Linq.Mapping.ResultTypeAttribute.Type
- uid: System.Data.Linq.Mapping.ResultTypeAttribute.#ctor*
  parent: System.Data.Linq.Mapping.ResultTypeAttribute
  isExternal: false
  name: ResultTypeAttribute
  nameWithType: ResultTypeAttribute.ResultTypeAttribute
- uid: System.Data.Linq.Mapping.ResultTypeAttribute.Type*
  parent: System.Data.Linq.Mapping.ResultTypeAttribute
  isExternal: false
  name: Type
  nameWithType: ResultTypeAttribute.Type
