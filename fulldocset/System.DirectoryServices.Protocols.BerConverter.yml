### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.Protocols.BerConverter
  id: BerConverter
  children:
  - System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])
  - System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])
  langs:
  - csharp
  name: BerConverter
  nameWithType: BerConverter
  fullName: System.DirectoryServices.Protocols.BerConverter
  type: Class
  summary: "BerConverter 클래스 인코딩한 기본 인코딩 규칙 (BER)를 사용 하 여 구조적된 데이터를 디코딩합니다."
  syntax:
    content: public sealed class BerConverter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])
  id: Decode(System.String,System.Byte[])
  parent: System.DirectoryServices.Protocols.BerConverter
  langs:
  - csharp
  name: Decode(String,Byte[])
  nameWithType: BerConverter.Decode(String,Byte[])
  fullName: System.DirectoryServices.Protocols.BerConverter.Decode(String,Byte[])
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "디코드 메서드 BER를 사용 하 여 구조적된 데이터를 검색 하는 데이터의 이진 표현을 디코딩합니다."
  syntax:
    content: public static object[] Decode (string format, byte[] value);
    parameters:
    - id: format
      type: System.String
      description: "서식 문자열입니다."
    - id: value
      type: System.Byte[]
      description: "BER 데이터의 배열입니다."
    return:
      type: System.Object[]
      description: "디코딩된 데이터입니다."
  overload: System.DirectoryServices.Protocols.BerConverter.Decode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> format </code> 매개 변수는 null 참조를 포함 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> format </code> 매개 변수에 정의 되지 않은 문자를 포함 합니다."
  - type: System.DirectoryServices.Protocols.BerConversionException
    commentId: T:System.DirectoryServices.Protocols.BerConversionException
    description: "기본 디코딩 실패 합니다. 디코딩 규칙은 다음과 같습니다.       <table><thead><tr><th> 코드       </th><th> 해당 결과       </th></tr></thead><tbody><tr><td> &quot;{&quot; &quot;}&quot; &quot;[&quot; &quot;]&quot; &quot;n&quot; &quot;x&quot;       </td><td> 해당 결과 없음       </td></tr><tr><td> &quot;i&quot; &quot;e&quot;       </td><td> 정수       </td></tr><tr><td> &quot; b&quot;       </td><td> 부울       </td></tr><tr><td> &quot; a&quot;       </td><td> 문자열       </td></tr><tr><td> &quot; O &quot;       </td><td> byte]       </td></tr><tr><td> &quot; B&quot;       </td><td> 비트 문자열을 포함 하는 byte]       </td></tr><tr><td> &quot; v&quot;       </td><td> string]       </td></tr><tr><td> &quot; V&quot;       </td><td> byte]       </td></tr></tbody></table>"
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])
  id: Encode(System.String,System.Object[])
  parent: System.DirectoryServices.Protocols.BerConverter
  langs:
  - csharp
  name: Encode(String,Object[])
  nameWithType: BerConverter.Encode(String,Object[])
  fullName: System.DirectoryServices.Protocols.BerConverter.Encode(String,Object[])
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "인코딩 메서드 BER를 사용 하 여 데이터의 이진 표현을 검색 하는 구조화 된 데이터를 인코딩합니다."
  remarks: "다음은 유효한 형식 문자입니다.       인코딩 규칙: | 코드 | 해당 인수가 |   |----------|----------------------------|   |&quot; {&quot; &quot;}&quot; &quot;[&quot; &quot;]&quot; &quot;n&quot;| 해당 인수 없음 |   |&quot; t&quot; &quot;i&quot; &quot;e&quot; | int |   |&quot; &quot; |&8; 진수 문자열 |   |&quot; b&quot;| bool |   |&quot; s&quot;| 문자열 |   |&quot; &quot;X&quot; o &quot; | byte |   |&quot; v&quot;| string |   |&quot; V&quot;| byte] [|      > [!NOTE] > &quot;v&quot; 및 &quot;V&quot;은 특별 한 한다는 점에서 이중 {}가 필요 합니다. 예를 들어 {{v}을 (를) 사용 하 여 및 {{V}}.      ## 예외 | 예외 | 조건 |   |---------------|---------------|   | ArgumentNullException | `format` 가 null 참조 (`Nothing` Visual basic에서). |   | ArgumentException | 다음 조건 중 하나에서이 예외가 발생합니다.<br /><br /> -형식 문자열에 대 한 충분 한 인수가 아닙니다.<br />-형식 문자열 인수가 올바르지 않습니다.<br />-형식 문자열이 정의 되지 않은 문자를 포함 합니다. |   | BerConversionException | 반환 값을 처리 중 오류가 발생 합니다. |"
  syntax:
    content: public static byte[] Encode (string format, object[] value);
    parameters:
    - id: format
      type: System.String
      description: "서식 문자열입니다."
    - id: value
      type: System.Object[]
      description: "배열 형식이 지정 된 데이터입니다."
    return:
      type: System.Byte[]
      description: "BER 인코딩된 데이터의 배열입니다."
  overload: System.DirectoryServices.Protocols.BerConverter.Encode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.DirectoryServices.Protocols.BerConversionException
  parent: System.DirectoryServices.Protocols
  isExternal: false
  name: BerConversionException
  nameWithType: BerConversionException
  fullName: System.DirectoryServices.Protocols.BerConversionException
- uid: System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])
  parent: System.DirectoryServices.Protocols.BerConverter
  isExternal: false
  name: Decode(String,Byte[])
  nameWithType: BerConverter.Decode(String,Byte[])
  fullName: System.DirectoryServices.Protocols.BerConverter.Decode(String,Byte[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])
  parent: System.DirectoryServices.Protocols.BerConverter
  isExternal: false
  name: Encode(String,Object[])
  nameWithType: BerConverter.Encode(String,Object[])
  fullName: System.DirectoryServices.Protocols.BerConverter.Encode(String,Object[])
- uid: System.DirectoryServices.Protocols.BerConverter.Decode*
  parent: System.DirectoryServices.Protocols.BerConverter
  isExternal: false
  name: Decode
  nameWithType: BerConverter.Decode
- uid: System.DirectoryServices.Protocols.BerConverter.Encode*
  parent: System.DirectoryServices.Protocols.BerConverter
  isExternal: false
  name: Encode
  nameWithType: BerConverter.Encode
