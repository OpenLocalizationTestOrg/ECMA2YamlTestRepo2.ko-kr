### YamlMime:ManagedReference
items:
- uid: System.Security.SecurityState
  id: SecurityState
  children:
  - System.Security.SecurityState.#ctor
  - System.Security.SecurityState.EnsureState
  - System.Security.SecurityState.IsStateAvailable
  langs:
  - csharp
  name: SecurityState
  nameWithType: SecurityState
  fullName: System.Security.SecurityState
  type: Class
  summary: "작업의 보안 상태를 요청에 대 한 기본 클래스를 제공는 <xref href=&quot;System.AppDomainManager&quot;> </xref> 개체입니다."
  remarks: "보안 관련 작업을 수행할 수를 지정 하는 속성을 포함 하는 클래스를 제공 하려면이 클래스에서 상속 해야 합니다. 파생된 클래스에서 인스턴스화된 SecurityState 개체는 전달 된 <xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=fullName>호스트가 해당 작업을 수행 하도록 허용 하는지 여부를 결정 하는 메서드.</xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=fullName> 기본 구현에서 <xref:System.AppDomainManager.CheckSecuritySettings%2A>메서드는 항상 반환 `false`.</xref:System.AppDomainManager.CheckSecuritySettings%2A>  허용 되는 작업을 감지 하는 메서드를 재정의 해야 합니다.       예를 들어 웹 카메라 라이브러리 코드에 액세스 하려는 경우 만들면 됩니다는 `WebcamSecurityState` 개체와 호출은 <xref:System.Security.SecurityState.EnsureState%2A>메서드를 다음 예제와 같이 호스트 웹 카메라 액세스를 허용 하는지 여부를 확인 합니다.</xref:System.Security.SecurityState.EnsureState%2A>  (에 대 한 코드를 찾을 수 `WebcamSecurityState` &quot;예&quot; 섹션에 있습니다.)      ```   WebcamSecurityState securityState = new WebcamSecurityState(&quot;Safe access to Webcam&quot;, WebcamSecurityOptions.SafeAccess);   try   {      securityState.EnsureState();      // Allocate memory.      }   catch (ApplicationException e)   {       // Handle any exception that is thrown.       System.Diagnostics.Debug.WriteLine(e.Message);   }   ```호출을 처리 하는 <xref:System.AppDomainManager>의 인식 `WebcamSecurityState` 재정의 통해는 <xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=fullName>메서드를 다음 예에서 같이.</xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=fullName> </xref:System.AppDomainManager>      ```   [SecurityCritical]   public override bool CheckSecuritySettings(System.Security.SecurityState securityState)   {      switch (securityState.ToString())      {         case &quot;WebcamSecurityState&quot;:         {             if ((securityState as WebcamSecurityState).Options == WebcamSecurityOptions.SafeAccess)                 return PromptUser((securityState as WebcamSecurityState).Description);              return false;         }      }         return false;   }   private bool PromptUser(string text)   {      // Replace the OpenFileDialog with a custom user prompt.      OpenFileDialog o = new OpenFileDialog();      o.Title = text;      if (o.ShowDialog() == DialogResult.OK)         return true;      else         return false;   }      ```"
  example:
  - "The following example shows how to override the SecurityState class.  \n  \n```  \n[SecurityCritical]  \npublic enum WebcamSecurityOptions  \n    {  \n        SafeAccess,  \n        FullAccess  \n    }  \n[SecurityCritical]  \npublic class WebcamSecurityState : SecurityState  \n{  \n    public WebcamSecurityState(string description, WebcamSecurityOptions options)  \n    {  \n        Options = options;  \n        Description = description;  \n    }  \n    public WebcamSecurityOptions Options { get; set; }  \n    public string Description { get; set; }  \n    public override void EnsureState()  \n    {  \n       if (!IsStateAvailable())  \n           throw new ApplicationException(\"WebcamSecurityState not available\");  \n    }  \n }  \n  \n```"
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public abstract class SecurityState
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.SecurityState.#ctor
  id: '#ctor'
  parent: System.Security.SecurityState
  langs:
  - csharp
  name: SecurityState()
  nameWithType: SecurityState.SecurityState()
  fullName: System.Security.SecurityState.SecurityState()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.SecurityState&quot;> </xref> 클래스입니다."
  syntax:
    content: protected SecurityState ();
    parameters: []
  overload: System.Security.SecurityState.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityState.EnsureState
  id: EnsureState
  parent: System.Security.SecurityState
  langs:
  - csharp
  name: EnsureState()
  nameWithType: SecurityState.EnsureState()
  fullName: System.Security.SecurityState.EnsureState()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "파생된 클래스에서 재정의 되 면 확인 된 나타내는 상태 <xref href=&quot;System.Security.SecurityState&quot;> </xref> 호스트에서 사용할 수 있습니다."
  remarks: "이 메서드의 구현은 다음 예제와 유사 해야 합니다.      ```   public override void EnsureState()   {       if (!IsStateAvailable())             throw new ApplicationException(&quot;WebcamSecurityState not available&quot;);   }      ```"
  syntax:
    content: public abstract void EnsureState ();
    parameters: []
  overload: System.Security.SecurityState.EnsureState*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityState.IsStateAvailable
  id: IsStateAvailable
  parent: System.Security.SecurityState
  langs:
  - csharp
  name: IsStateAvailable()
  nameWithType: SecurityState.IsStateAvailable()
  fullName: System.Security.SecurityState.IsStateAvailable()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "나타내는 값을 가져옵니다 여부이 구현에 대 한 상태는 <xref href=&quot;System.Security.SecurityState&quot;> </xref> 클래스는 현재 호스트에서 사용할 수 있습니다."
  remarks: "IsStateAvailable 호출은 <xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=fullName>메서드를이 클래스가 나타내는 상태는 호스트에서 사용할 수 있는지 확인 합니다.</xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=fullName>       참조는 <xref:System.Security.SecurityState>의 예제 구현은 대 한 클래스는 <xref:System.AppDomainManager.CheckSecuritySettings%2A>메서드.</xref:System.AppDomainManager.CheckSecuritySettings%2A> </xref:System.Security.SecurityState>"
  syntax:
    content: public bool IsStateAvailable ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>상태를 사용할 수 없는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.SecurityState.IsStateAvailable*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityState.#ctor
  parent: System.Security.SecurityState
  isExternal: false
  name: SecurityState()
  nameWithType: SecurityState.SecurityState()
  fullName: System.Security.SecurityState.SecurityState()
- uid: System.Security.SecurityState.EnsureState
  parent: System.Security.SecurityState
  isExternal: false
  name: EnsureState()
  nameWithType: SecurityState.EnsureState()
  fullName: System.Security.SecurityState.EnsureState()
- uid: System.Security.SecurityState.IsStateAvailable
  parent: System.Security.SecurityState
  isExternal: false
  name: IsStateAvailable()
  nameWithType: SecurityState.IsStateAvailable()
  fullName: System.Security.SecurityState.IsStateAvailable()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.SecurityState.#ctor*
  parent: System.Security.SecurityState
  isExternal: false
  name: SecurityState
  nameWithType: SecurityState.SecurityState
- uid: System.Security.SecurityState.EnsureState*
  parent: System.Security.SecurityState
  isExternal: false
  name: EnsureState
  nameWithType: SecurityState.EnsureState
- uid: System.Security.SecurityState.IsStateAvailable*
  parent: System.Security.SecurityState
  isExternal: false
  name: IsStateAvailable
  nameWithType: SecurityState.IsStateAvailable
