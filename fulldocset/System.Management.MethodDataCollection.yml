### YamlMime:ManagedReference
items:
- uid: System.Management.MethodDataCollection
  id: MethodDataCollection
  children:
  - System.Management.MethodDataCollection.Add(System.String)
  - System.Management.MethodDataCollection.Add(System.String,System.Management.ManagementBaseObject,System.Management.ManagementBaseObject)
  - System.Management.MethodDataCollection.CopyTo(System.Array,System.Int32)
  - System.Management.MethodDataCollection.CopyTo(System.Management.MethodData[],System.Int32)
  - System.Management.MethodDataCollection.Count
  - System.Management.MethodDataCollection.GetEnumerator
  - System.Management.MethodDataCollection.IsSynchronized
  - System.Management.MethodDataCollection.Item(System.String)
  - System.Management.MethodDataCollection.Remove(System.String)
  - System.Management.MethodDataCollection.SyncRoot
  - System.Management.MethodDataCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: MethodDataCollection
  nameWithType: MethodDataCollection
  fullName: System.Management.MethodDataCollection
  type: Class
  summary: "컬렉션에서 사용할 수 있는 메서드 집합을 나타냅니다."
  remarks: ''
  example:
  - "The following example lists information about the **Win32_Process.Create** method using the <xref:System.Management.MethodData> class. For more information on the **Win32_Process** class, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.  \n  \n [!code-vb[wminet_MethodDataCollection#1](~/add/codesnippet/visualbasic/t-system.management.meth_1_1.vb)]\n [!code-cs[wminet_MethodDataCollection#1](~/add/codesnippet/csharp/t-system.management.meth_1_1.cs)]"
  syntax:
    content: 'public class MethodDataCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Management.MethodDataCollection.Add(System.String)
  id: Add(System.String)
  parent: System.Management.MethodDataCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: MethodDataCollection.Add(String)
  fullName: System.Management.MethodDataCollection.Add(String)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Adds a <xref href=&quot;System.Management.MethodData&quot;></xref> to the <xref href=&quot;System.Management.MethodDataCollection&quot;></xref>. 이 오버 로드를 컬렉션에 매개 변수 없이 새 메서드를 추가 합니다."
  remarks: "추가 <xref:System.Management.MethodData>개체는 <xref:System.Management.MethodDataCollection>클래스에는 인스턴스가 없는 경우에 수행할 수 있습니다.</xref:System.Management.MethodDataCollection> </xref:System.Management.MethodData> 다른 모든 경우 예외가 발생 합니다.      ## 직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public virtual void Add (string methodName);
    parameters:
    - id: methodName
      type: System.String
      description: "추가할 메서드의 이름입니다."
  overload: System.Management.MethodDataCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Management.MethodDataCollection.Add(System.String,System.Management.ManagementBaseObject,System.Management.ManagementBaseObject)
  id: Add(System.String,System.Management.ManagementBaseObject,System.Management.ManagementBaseObject)
  parent: System.Management.MethodDataCollection
  langs:
  - csharp
  name: Add(String,ManagementBaseObject,ManagementBaseObject)
  nameWithType: MethodDataCollection.Add(String,ManagementBaseObject,ManagementBaseObject)
  fullName: System.Management.MethodDataCollection.Add(String,ManagementBaseObject,ManagementBaseObject)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Adds a <xref href=&quot;System.Management.MethodData&quot;></xref> to the <xref href=&quot;System.Management.MethodDataCollection&quot;></xref>. 이 오버 로드를 컬렉션에 새 메서드는 지정 된 매개 변수 개체를 추가 합니다."
  remarks: "추가 <xref:System.Management.MethodData>개체는 <xref:System.Management.MethodDataCollection>클래스에는 인스턴스가 없는 경우에 수행할 수 있습니다.</xref:System.Management.MethodDataCollection> </xref:System.Management.MethodData> 다른 모든 경우 예외가 발생 합니다.      ## 직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public virtual void Add (string methodName, System.Management.ManagementBaseObject inParameters, System.Management.ManagementBaseObject outParameters);
    parameters:
    - id: methodName
      type: System.String
      description: "추가할 메서드의 이름입니다."
    - id: inParameters
      type: System.Management.ManagementBaseObject
      description: "<xref href=&quot;System.Management.ManagementBaseObject&quot;> </xref> 메서드에 입력된 매개 변수를 보유 합니다."
    - id: outParameters
      type: System.Management.ManagementBaseObject
      description: "<xref href=&quot;System.Management.ManagementBaseObject&quot;> </xref> 메서드로 출력 매개 변수를 보유 합니다."
  overload: System.Management.MethodDataCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Management.MethodDataCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Management.MethodDataCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: MethodDataCollection.CopyTo(Array,Int32)
  fullName: System.Management.MethodDataCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "복사본의 <xref href=&quot;System.Management.MethodDataCollection&quot;> </xref> 를 배열에 있습니다."
  remarks: "##직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "컬렉션을 복사할 대상 배열입니다."
    - id: index
      type: System.Int32
      description: "시작할 인덱스입니다."
  overload: System.Management.MethodDataCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Management.MethodDataCollection.CopyTo(System.Management.MethodData[],System.Int32)
  id: CopyTo(System.Management.MethodData[],System.Int32)
  parent: System.Management.MethodDataCollection
  langs:
  - csharp
  name: CopyTo(MethodData[],Int32)
  nameWithType: MethodDataCollection.CopyTo(MethodData[],Int32)
  fullName: System.Management.MethodDataCollection.CopyTo(MethodData[],Int32)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "복사본의 <xref href=&quot;System.Management.MethodDataCollection&quot;> </xref> 을 특수화 된 <xref href=&quot;System.Management.MethodData&quot;> </xref> 배열입니다."
  remarks: "##직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public void CopyTo (System.Management.MethodData[] methodArray, int index);
    parameters:
    - id: methodArray
      type: System.Management.MethodData[]
      description: "복사할 대상 배열에서 <xref href=&quot;System.Management.MethodData&quot;> </xref> 개체입니다."
    - id: index
      type: System.Int32
      description: "복사를 시작할 대상 배열의 인덱스입니다."
  overload: System.Management.MethodDataCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Management.MethodDataCollection.Count
  id: Count
  parent: System.Management.MethodDataCollection
  langs:
  - csharp
  name: Count
  nameWithType: MethodDataCollection.Count
  fullName: System.Management.MethodDataCollection.Count
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "개체 수를 가져옵니다는 <xref href=&quot;System.Management.MethodDataCollection&quot;> </xref> 컬렉션입니다."
  remarks: "##속성 값이 있는 <xref:System.Management.MethodDataCollection>.</xref:System.Management.MethodDataCollection> 의 개체 수      ## 직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "반환 된 <xref:System.Int32>컬렉션의 개체 수를 나타내는 값입니다.</xref:System.Int32>"
  overload: System.Management.MethodDataCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Management.MethodDataCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Management.MethodDataCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: MethodDataCollection.GetEnumerator()
  fullName: System.Management.MethodDataCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "에 대 한 열거자를 반환 합니다.는 <xref href=&quot;System.Management.MethodDataCollection&quot;> </xref>합니다."
  remarks: "이 메서드를 호출할 때마다 컬렉션에 새 열거자를 반환합니다. 동일한 메서드 컬렉션에 대 한 여러 열거자를 얻을 수 있습니다. 그러나 각 열거자는 컬렉션의 스냅숏을 때문에 열거자를 가져온 후 컬렉션에 변경한 내용은 반영 되지 않습니다.       만 반복할 수 (Visual Basic.NET에서와 같이 `For Each` 문 또는 C# `For` 문)을 통해 앞 으로만 이동 가능한 열거자를 한 번입니다. 인스턴스가 포함 된 메모리는 하는 열거자를 되감을 수 없기 WMI가 해제 됩니다. 따라서는 <xref:System.Management.MethodDataCollection.Count%2A>되감기를 열거자 요구 하므로 메서드를 사용할 수 없습니다.</xref:System.Management.MethodDataCollection.Count%2A>       앞 으로만 이동 가능한 열거자는 일반적으로 더 빨리 기본 열거자 보다 적은 메모리를 사용 하 여 적지만 <xref:System.Management.MethodDataCollection.MethodDataEnumerator.Reset%2A>.</xref:System.Management.MethodDataCollection.MethodDataEnumerator.Reset%2A> 에 대 한 호출을 허용 하지 않습니다.       열거자를 되감아 컬렉션의 개체 여러 열거할 수 있는 유지 됩니다.      ## 직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public System.Management.MethodDataCollection.MethodDataEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Management.MethodDataCollection.MethodDataEnumerator
      description: "<xref:System.Collections.IEnumerator>컬렉션을 열거 합니다.</xref:System.Collections.IEnumerator>"
  overload: System.Management.MethodDataCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Management.MethodDataCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Management.MethodDataCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: MethodDataCollection.IsSynchronized
  fullName: System.Management.MethodDataCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "개체가 동기화 되는지 여부를 나타내는 값을 가져옵니다."
  remarks: "##속성 값 `true` 고, 그렇지 않으면 동기화 된 개체가 있으면 `false`합니다.      ## 직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "반환 된 <xref:System.Boolean>개체가 동기화 되는지 여부를 나타내는 값입니다.</xref:System.Boolean>"
  overload: System.Management.MethodDataCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Management.MethodDataCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Management.MethodDataCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: MethodDataCollection.Item(String)
  fullName: System.Management.MethodDataCollection.Item(String)
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "지정 된 가져옵니다 <xref href=&quot;System.Management.MethodData&quot;> </xref> 에서 <xref href=&quot;System.Management.MethodDataCollection&quot;> </xref>합니다."
  remarks: "##속성 값을 A <xref:System.Management.MethodData>지정된 방법에 대 한 모든 정보가 들어 있는.</xref:System.Management.MethodData>      ## 직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public virtual System.Management.MethodData this[string methodName] { get; }
    parameters:
    - id: methodName
      type: System.String
      description: "요청 된 메서드의 이름입니다."
    return:
      type: System.Management.MethodData
      description: "반환 된 <xref href=&quot;System.Management.MethodData&quot;> </xref> 메서드 데이터 컬렉션에서 지정된 된 메서드를 포함 하 합니다."
  overload: System.Management.MethodDataCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Management.MethodDataCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Management.MethodDataCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: MethodDataCollection.Remove(String)
  fullName: System.Management.MethodDataCollection.Remove(String)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Removes a <xref href=&quot;System.Management.MethodData&quot;></xref> from the <xref href=&quot;System.Management.MethodDataCollection&quot;></xref>."
  remarks: "제거 <xref:System.Management.MethodData>에서 개체는 <xref:System.Management.MethodDataCollection>클래스에는 인스턴스가 없는 경우에 수행할 수 있습니다.</xref:System.Management.MethodDataCollection> </xref:System.Management.MethodData> 다른 모든 경우 예외가 발생 합니다.      ## 직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public virtual void Remove (string methodName);
    parameters:
    - id: methodName
      type: System.String
      description: "컬렉션에서 제거할 메서드의 이름입니다."
  overload: System.Management.MethodDataCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Management.MethodDataCollection.SyncRoot
  id: SyncRoot
  parent: System.Management.MethodDataCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: MethodDataCollection.SyncRoot
  fullName: System.Management.MethodDataCollection.SyncRoot
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "동기화에 사용할 개체를 가져옵니다."
  remarks: "##속성 개체를 동기화에 사용할 값입니다.      ## 직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "반환 된 <xref:System.Object>동기화에 사용할 개체를 나타내는 값입니다.</xref:System.Object>"
  overload: System.Management.MethodDataCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Management.MethodDataCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Management.MethodDataCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: MethodDataCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Management.MethodDataCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "반환 된 <xref:System.Collections.IEnumerator>반복 하는 <xref href=&quot;System.Management.MethodDataCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  remarks: "[Visual Basic, C#]       `foreach` C# 언어의 (`for each` Visual basic에서)은 열거자의 복잡성을 숨깁니다.  따라서 사용 하 여 `foreach` 열거자를 직접 조작 하는 대신이 좋습니다.       열거자는 컬렉션의에서 데이터를 읽는 데 사용할 수 있지만 기본 컬렉션을 수정 하는 사용할 수 없습니다.       처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치 됩니다. <xref:System.Collections.IEnumerator.Reset%2A>또한이 위치로 복원 열거자를 가져옵니다.</xref:System.Collections.IEnumerator.Reset%2A> 이 위치에서, 호출 <xref:System.Collections.IEnumerator.Current%2A>예외를 throw 합니다.</xref:System.Collections.IEnumerator.Current%2A> 따라서 <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> 의 값을 읽기 전에 컬렉션의 첫 번째 요소로 열거자를</xref:System.Collections.IEnumerator.MoveNext%2A> 호출 해야 합니다.       <xref:System.Collections.IEnumerator.Current%2A>될 때까지 동일한 개체를 반환 <xref:System.Collections.IEnumerator.MoveNext%2A>또는 <xref:System.Collections.IEnumerator.Reset%2A>호출 됩니다.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>설정 <xref:System.Collections.IEnumerator.Current%2A>를 다음 요소로.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       경우 <xref:System.Collections.IEnumerator.MoveNext%2A>전달 컬렉션의 마지막 요소 뒤에 열거자는 컬렉션의 끝에 배치 되 고 <xref:System.Collections.IEnumerator.MoveNext%2A>반환 `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> 열거자가 있는 경우이 위치에 대 한 후속 호출에서 <xref:System.Collections.IEnumerator.MoveNext%2A>반환할 수도 `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> 마지막으로 호출 하는 경우 <xref:System.Collections.IEnumerator.MoveNext%2A>반환 `false`호출, <xref:System.Collections.IEnumerator.Current%2A>예외를 throw 합니다.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Current%2A>다시, 컬렉션의 첫 번째 요소를 호출할 수 있습니다 <xref:System.Collections.IEnumerator.Reset%2A>그 뒤 <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A> 설정 하려면       열거자는 컬렉션이 변경 되지으로 유효한 상태를 유지 합니다. 예: 추가, 수정 또는 요소를 삭제, 열거자가 복구할 수 없게 무효화 및 <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A> <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> throw</xref:System.Collections.IEnumerator.Reset%2A> 또는</xref:System.Collections.IEnumerator.MoveNext%2A> 을 다음에 호출할 컬렉션 변경 될 경우 사이 컬렉션이 수정 되는 경우 <xref:System.Collections.IEnumerator.MoveNext%2A>및 <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>열거자가 이미 무효로 되 었 하는 경우에 설정 하는 요소를 반환 합니다.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       열거자는 컬렉션에 배타적으로 액세스가 없습니다. 따라서 컬렉션을 열거지 않습니다 본질적으로 스레드로부터 안전한 프로시저가 합니다. 컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다. 열거 동안 스레드 보안을 보장 하려면 전체 열거 동안 컬렉션을 잠글 하거나 다른 스레드에서 변경 된 내용으로 인해 발생 한 예외를 catch 합니다.       이 메서드는 o (1) 작업."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> for the <xref href=&quot;System.Management.MethodDataCollection&quot;></xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Management.MethodDataCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Management.MethodDataCollection.Add(System.String)
  parent: System.Management.MethodDataCollection
  isExternal: false
  name: Add(String)
  nameWithType: MethodDataCollection.Add(String)
  fullName: System.Management.MethodDataCollection.Add(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Management.MethodDataCollection.Add(System.String,System.Management.ManagementBaseObject,System.Management.ManagementBaseObject)
  parent: System.Management.MethodDataCollection
  isExternal: false
  name: Add(String,ManagementBaseObject,ManagementBaseObject)
  nameWithType: MethodDataCollection.Add(String,ManagementBaseObject,ManagementBaseObject)
  fullName: System.Management.MethodDataCollection.Add(String,ManagementBaseObject,ManagementBaseObject)
- uid: System.Management.ManagementBaseObject
  parent: System.Management
  isExternal: false
  name: ManagementBaseObject
  nameWithType: ManagementBaseObject
  fullName: System.Management.ManagementBaseObject
- uid: System.Management.MethodDataCollection.CopyTo(System.Array,System.Int32)
  parent: System.Management.MethodDataCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: MethodDataCollection.CopyTo(Array,Int32)
  fullName: System.Management.MethodDataCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Management.MethodDataCollection.CopyTo(System.Management.MethodData[],System.Int32)
  parent: System.Management.MethodDataCollection
  isExternal: false
  name: CopyTo(MethodData[],Int32)
  nameWithType: MethodDataCollection.CopyTo(MethodData[],Int32)
  fullName: System.Management.MethodDataCollection.CopyTo(MethodData[],Int32)
- uid: System.Management.MethodData[]
  parent: System.Management
  isExternal: false
  name: MethodData
  nameWithType: MethodData
  fullName: System.Management.MethodData[]
  spec.csharp:
  - uid: System.Management.MethodData
    name: MethodData
    nameWithType: MethodData
    fullName: MethodData[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Management.MethodDataCollection.Count
  parent: System.Management.MethodDataCollection
  isExternal: false
  name: Count
  nameWithType: MethodDataCollection.Count
  fullName: System.Management.MethodDataCollection.Count
- uid: System.Management.MethodDataCollection.GetEnumerator
  parent: System.Management.MethodDataCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: MethodDataCollection.GetEnumerator()
  fullName: System.Management.MethodDataCollection.GetEnumerator()
- uid: System.Management.MethodDataCollection.MethodDataEnumerator
  parent: System.Management
  isExternal: false
  name: MethodDataCollection+MethodDataEnumerator
  nameWithType: MethodDataCollection+MethodDataEnumerator
  fullName: System.Management.MethodDataCollection+MethodDataEnumerator
- uid: System.Management.MethodDataCollection.IsSynchronized
  parent: System.Management.MethodDataCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: MethodDataCollection.IsSynchronized
  fullName: System.Management.MethodDataCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Management.MethodDataCollection.Item(System.String)
  parent: System.Management.MethodDataCollection
  isExternal: false
  name: Item(String)
  nameWithType: MethodDataCollection.Item(String)
  fullName: System.Management.MethodDataCollection.Item(String)
- uid: System.Management.MethodData
  parent: System.Management
  isExternal: false
  name: MethodData
  nameWithType: MethodData
  fullName: System.Management.MethodData
- uid: System.Management.MethodDataCollection.Remove(System.String)
  parent: System.Management.MethodDataCollection
  isExternal: false
  name: Remove(String)
  nameWithType: MethodDataCollection.Remove(String)
  fullName: System.Management.MethodDataCollection.Remove(String)
- uid: System.Management.MethodDataCollection.SyncRoot
  parent: System.Management.MethodDataCollection
  isExternal: false
  name: SyncRoot
  nameWithType: MethodDataCollection.SyncRoot
  fullName: System.Management.MethodDataCollection.SyncRoot
- uid: System.Management.MethodDataCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Management.MethodDataCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: MethodDataCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Management.MethodDataCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Management.MethodDataCollection.Add*
  parent: System.Management.MethodDataCollection
  isExternal: false
  name: Add
  nameWithType: MethodDataCollection.Add
- uid: System.Management.MethodDataCollection.CopyTo*
  parent: System.Management.MethodDataCollection
  isExternal: false
  name: CopyTo
  nameWithType: MethodDataCollection.CopyTo
- uid: System.Management.MethodDataCollection.Count*
  parent: System.Management.MethodDataCollection
  isExternal: false
  name: Count
  nameWithType: MethodDataCollection.Count
- uid: System.Management.MethodDataCollection.GetEnumerator*
  parent: System.Management.MethodDataCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: MethodDataCollection.GetEnumerator
- uid: System.Management.MethodDataCollection.IsSynchronized*
  parent: System.Management.MethodDataCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: MethodDataCollection.IsSynchronized
- uid: System.Management.MethodDataCollection.Item*
  parent: System.Management.MethodDataCollection
  isExternal: false
  name: Item
  nameWithType: MethodDataCollection.Item
- uid: System.Management.MethodDataCollection.Remove*
  parent: System.Management.MethodDataCollection
  isExternal: false
  name: Remove
  nameWithType: MethodDataCollection.Remove
- uid: System.Management.MethodDataCollection.SyncRoot*
  parent: System.Management.MethodDataCollection
  isExternal: false
  name: SyncRoot
  nameWithType: MethodDataCollection.SyncRoot
- uid: System.Management.MethodDataCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Management.MethodDataCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: MethodDataCollection.System.Collections.IEnumerable.GetEnumerator
