### YamlMime:ManagedReference
items:
- uid: System.Reflection.TypeFilter
  id: TypeFilter
  langs:
  - csharp
  name: TypeFilter
  nameWithType: TypeFilter
  fullName: System.Reflection.TypeFilter
  type: Delegate
  summary: "배열에 나타난 클래스 필터링 <xref:System.Type>개체입니다.</xref:System.Type>"
  remarks: "`TypeFilter` 대리자 클래스의 목록을 필터링 하기 위해 사용 됩니다. 필터링의 배열에서 나타내는 클래스를 통해 특히 <xref:System.Type>개체입니다.</xref:System.Type> <xref:System.Type.FindInterfaces%2A?displayProperty=fullName>메서드에서이 대리자를 사용 하 여 반환 하는 인터페이스의 목록을 필터링 합니다.</xref:System.Type.FindInterfaces%2A?displayProperty=fullName> 각 파생된 클래스 <xref:System.Delegate>및 <xref:System.MulticastDelegate>생성자와 `DynamicInvoke` 메서드.</xref:System.MulticastDelegate> </xref:System.Delegate> 에 대 한 설명에 지정 된 Visual c + + 코드 예제를 보려면 `Delegate`합니다."
  example:
  - "This example shows how to define a method matching the TypeFilter delegate prototype allowing you to use reflection to filter or return a subset of matching entries.  \n  \n [!code-vb[Typefilter#1](~/add/codesnippet/visualbasic/t-system.reflection.type_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public delegate bool TypeFilter(Type m, object filterCriteria);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
