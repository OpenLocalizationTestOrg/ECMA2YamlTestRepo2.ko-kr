### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.TabletDeviceCollection
  id: TabletDeviceCollection
  children:
  - System.Windows.Input.TabletDeviceCollection.CopyTo(System.Windows.Input.TabletDevice[],System.Int32)
  - System.Windows.Input.TabletDeviceCollection.Count
  - System.Windows.Input.TabletDeviceCollection.IsSynchronized
  - System.Windows.Input.TabletDeviceCollection.Item(System.Int32)
  - System.Windows.Input.TabletDeviceCollection.SyncRoot
  - System.Windows.Input.TabletDeviceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Windows.Input.TabletDeviceCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: TabletDeviceCollection
  nameWithType: TabletDeviceCollection
  fullName: System.Windows.Input.TabletDeviceCollection
  type: Class
  summary: "포함 된 <xref href=&quot;System.Windows.Input.TabletDevice&quot;> </xref> 디지타이저 장치 태블릿 장치를 나타내는 개체입니다."
  remarks: ''
  example:
  - "The following example demonstrates the TabletDeviceCollection class.  \n  \n [!code-vb[HwCaps#15](~/add/codesnippet/visualbasic/HwCaps_VB/Window1.xaml.vb#15)]\n [!code-cs[HwCaps#15](~/add/codesnippet/csharp/HwCaps_CS/Window1.xaml.cs#15)]"
  syntax:
    content: 'public class TabletDeviceCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.TabletDeviceCollection.CopyTo(System.Windows.Input.TabletDevice[],System.Int32)
  id: CopyTo(System.Windows.Input.TabletDevice[],System.Int32)
  parent: System.Windows.Input.TabletDeviceCollection
  langs:
  - csharp
  name: CopyTo(TabletDevice[],Int32)
  nameWithType: TabletDeviceCollection.CopyTo(TabletDevice[],Int32)
  fullName: System.Windows.Input.TabletDeviceCollection.CopyTo(TabletDevice[],Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "지정 된 대상 배열 인덱스부터 지정 된&1; 차원 배열에 현재 컬렉션의 모든 요소를 복사 합니다."
  remarks: ''
  example:
  - "The following example demonstrates the CopyTo method.  \n  \n [!code-vb[HwCaps#18](~/add/codesnippet/visualbasic/HwCaps_VB/Window1.xaml.vb#18)]\n [!code-cs[HwCaps#18](~/add/codesnippet/csharp/HwCaps_CS/Window1.xaml.cs#18)]"
  syntax:
    content: public void CopyTo (System.Windows.Input.TabletDevice[] array, int index);
    parameters:
    - id: array
      type: System.Windows.Input.TabletDevice[]
      description: "컬렉션에서 복사한 요소의 대상인&1; 차원 배열입니다. 배열에는&0;부터 시작 하는 인덱스가 있어야 합니다."
    - id: index
      type: System.Int32
      description: "복사가 시작 되는 배열 매개 변수에&0;부터 시작 하는 인덱스입니다."
  overload: System.Windows.Input.TabletDeviceCollection.CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "경우 <code> index </code> + 컬렉션 개수 보다 크거나 같은 경우는 <code> array.length </code>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If <code>array</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "If <code>index</code> is less than 0 or <code>index</code> is greater than or equal to <code>array.length</code>."
  platform:
  - net462
- uid: System.Windows.Input.TabletDeviceCollection.Count
  id: Count
  parent: System.Windows.Input.TabletDeviceCollection
  langs:
  - csharp
  name: Count
  nameWithType: TabletDeviceCollection.Count
  fullName: System.Windows.Input.TabletDeviceCollection.Count
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "개수를 가져옵니다 <xref href=&quot;System.Windows.Input.TabletDevice&quot;> </xref> 컬렉션의 개체입니다."
  remarks: ''
  example:
  - "The following example demonstrates the Count property.  \n  \n [!code-vb[HwCaps#16](~/add/codesnippet/visualbasic/HwCaps_VB/Window1.xaml.vb#16)]\n [!code-cs[HwCaps#16](~/add/codesnippet/csharp/HwCaps_CS/Window1.xaml.cs#16)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "수가 <xref href=&quot;System.Windows.Input.TabletDevice&quot;> </xref> 컬렉션의 개체입니다."
  overload: System.Windows.Input.TabletDeviceCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.TabletDeviceCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Windows.Input.TabletDeviceCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: TabletDeviceCollection.IsSynchronized
  fullName: System.Windows.Input.TabletDeviceCollection.IsSynchronized
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "컬렉션에 대 한 액세스가 동기화 되어 있는지 여부를 나타내는 값을 가져옵니다 (스레드로부터 안전함)."
  remarks: ''
  example:
  - "The following example demonstrates the IsSynchronized property.  \n  \n [!code-vb[HwCaps#17](~/add/codesnippet/visualbasic/HwCaps_VB/Window1.xaml.vb#17)]\n [!code-cs[HwCaps#17](~/add/codesnippet/csharp/HwCaps_CS/Window1.xaml.cs#17)]"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컬렉션에 대 한 액세스가 경우 동기화 (스레드로부터 안전함). 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Input.TabletDeviceCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.TabletDeviceCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.Input.TabletDeviceCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: TabletDeviceCollection.Item(Int32)
  fullName: System.Windows.Input.TabletDeviceCollection.Item(Int32)
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "가져옵니다는 <xref href=&quot;System.Windows.Input.TabletDevice&quot;> </xref> 컬렉션 내의 지정한 인덱스에는 개체입니다."
  remarks: ''
  example:
  - "The following example demonstrates the Item property.  \n  \n [!code-vb[HwCaps#19](~/add/codesnippet/visualbasic/HwCaps_VB/Window1.xaml.vb#19)]\n [!code-cs[HwCaps#19](~/add/codesnippet/csharp/HwCaps_CS/Window1.xaml.cs#19)]"
  syntax:
    content: public System.Windows.Input.TabletDevice this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "0 기반 인덱스는 <xref href=&quot;System.Windows.Input.TabletDevice&quot;> </xref> 하는 컬렉션에서 검색 됩니다."
    return:
      type: System.Windows.Input.TabletDevice
      description: "<xref href=&quot;System.Windows.Input.TabletDevice&quot;> </xref> 컬렉션 내의 지정한 인덱스에는 개체입니다."
  overload: System.Windows.Input.TabletDeviceCollection.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "경우 <code> index </code> 가 0 보다 작은 또는 <code> index </code> 개수 보다 크거나 <xref href=&quot;System.Windows.Input.TabletDeviceCollection&quot;> </xref> 컬렉션의 개체입니다."
  platform:
  - net462
- uid: System.Windows.Input.TabletDeviceCollection.SyncRoot
  id: SyncRoot
  parent: System.Windows.Input.TabletDeviceCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: TabletDeviceCollection.SyncRoot
  fullName: System.Windows.Input.TabletDeviceCollection.SyncRoot
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "컬렉션에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다."
  remarks: ''
  example:
  - "The following example demonstrates the SyncRoot property.  \n  \n [!code-vb[HwCaps#17](~/add/codesnippet/visualbasic/HwCaps_VB/Window1.xaml.vb#17)]\n [!code-cs[HwCaps#17](~/add/codesnippet/csharp/HwCaps_CS/Window1.xaml.cs#17)]"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "컬렉션에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체입니다."
  overload: System.Windows.Input.TabletDeviceCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.TabletDeviceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Windows.Input.TabletDeviceCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: TabletDeviceCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.Input.TabletDeviceCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "이 멤버는.NET Framework를 지원 하며 사용자 코드에서 사용할 수 없습니다."
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "배열입니다."
    - id: index
      type: System.Int32
      description: "인덱스입니다."
  overload: System.Windows.Input.TabletDeviceCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.TabletDeviceCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.Input.TabletDeviceCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: TabletDeviceCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Input.TabletDeviceCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "이 멤버는.NET Framework를 지원 하며 사용자 코드에서 사용할 수 없습니다."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "이 멤버는.NET Framework를 지원 하며 사용자 코드에서 사용할 수 없습니다."
  overload: System.Windows.Input.TabletDeviceCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Windows.Input.TabletDeviceCollection.CopyTo(System.Windows.Input.TabletDevice[],System.Int32)
  parent: System.Windows.Input.TabletDeviceCollection
  isExternal: false
  name: CopyTo(TabletDevice[],Int32)
  nameWithType: TabletDeviceCollection.CopyTo(TabletDevice[],Int32)
  fullName: System.Windows.Input.TabletDeviceCollection.CopyTo(TabletDevice[],Int32)
- uid: System.Windows.Input.TabletDevice[]
  parent: System.Windows.Input
  isExternal: false
  name: TabletDevice
  nameWithType: TabletDevice
  fullName: System.Windows.Input.TabletDevice[]
  spec.csharp:
  - uid: System.Windows.Input.TabletDevice
    name: TabletDevice
    nameWithType: TabletDevice
    fullName: TabletDevice[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Input.TabletDeviceCollection.Count
  parent: System.Windows.Input.TabletDeviceCollection
  isExternal: false
  name: Count
  nameWithType: TabletDeviceCollection.Count
  fullName: System.Windows.Input.TabletDeviceCollection.Count
- uid: System.Windows.Input.TabletDeviceCollection.IsSynchronized
  parent: System.Windows.Input.TabletDeviceCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: TabletDeviceCollection.IsSynchronized
  fullName: System.Windows.Input.TabletDeviceCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.TabletDeviceCollection.Item(System.Int32)
  parent: System.Windows.Input.TabletDeviceCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: TabletDeviceCollection.Item(Int32)
  fullName: System.Windows.Input.TabletDeviceCollection.Item(Int32)
- uid: System.Windows.Input.TabletDevice
  parent: System.Windows.Input
  isExternal: false
  name: TabletDevice
  nameWithType: TabletDevice
  fullName: System.Windows.Input.TabletDevice
- uid: System.Windows.Input.TabletDeviceCollection.SyncRoot
  parent: System.Windows.Input.TabletDeviceCollection
  isExternal: false
  name: SyncRoot
  nameWithType: TabletDeviceCollection.SyncRoot
  fullName: System.Windows.Input.TabletDeviceCollection.SyncRoot
- uid: System.Windows.Input.TabletDeviceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Windows.Input.TabletDeviceCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: TabletDeviceCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.Input.TabletDeviceCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.Input.TabletDeviceCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.Input.TabletDeviceCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: TabletDeviceCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Input.TabletDeviceCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Input.TabletDeviceCollection.CopyTo*
  parent: System.Windows.Input.TabletDeviceCollection
  isExternal: false
  name: CopyTo
  nameWithType: TabletDeviceCollection.CopyTo
- uid: System.Windows.Input.TabletDeviceCollection.Count*
  parent: System.Windows.Input.TabletDeviceCollection
  isExternal: false
  name: Count
  nameWithType: TabletDeviceCollection.Count
- uid: System.Windows.Input.TabletDeviceCollection.IsSynchronized*
  parent: System.Windows.Input.TabletDeviceCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: TabletDeviceCollection.IsSynchronized
- uid: System.Windows.Input.TabletDeviceCollection.Item*
  parent: System.Windows.Input.TabletDeviceCollection
  isExternal: false
  name: Item
  nameWithType: TabletDeviceCollection.Item
- uid: System.Windows.Input.TabletDeviceCollection.SyncRoot*
  parent: System.Windows.Input.TabletDeviceCollection
  isExternal: false
  name: SyncRoot
  nameWithType: TabletDeviceCollection.SyncRoot
- uid: System.Windows.Input.TabletDeviceCollection.System#Collections#ICollection#CopyTo*
  parent: System.Windows.Input.TabletDeviceCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: TabletDeviceCollection.System.Collections.ICollection.CopyTo
- uid: System.Windows.Input.TabletDeviceCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Windows.Input.TabletDeviceCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: TabletDeviceCollection.System.Collections.IEnumerable.GetEnumerator
