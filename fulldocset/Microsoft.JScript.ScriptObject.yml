### YamlMime:ManagedReference
items:
- uid: Microsoft.JScript.ScriptObject
  id: ScriptObject
  children:
  - Microsoft.JScript.ScriptObject.engine
  - Microsoft.JScript.ScriptObject.GetField(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetFields(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMember(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMembers(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.GetMethods(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetParent
  - Microsoft.JScript.ScriptObject.GetProperties(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - Microsoft.JScript.ScriptObject.Item(System.Double)
  - Microsoft.JScript.ScriptObject.Item(System.Int32)
  - Microsoft.JScript.ScriptObject.Item(System.Object[])
  - Microsoft.JScript.ScriptObject.Item(System.String)
  - Microsoft.JScript.ScriptObject.parent
  - Microsoft.JScript.ScriptObject.UnderlyingSystemType
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)
  langs:
  - csharp
  name: ScriptObject
  nameWithType: ScriptObject
  fullName: Microsoft.JScript.ScriptObject
  type: Class
  summary: "모든 JScript 클래스를 지원 합니다. 모든 JScript 클래스의 최종 기본 클래스입니다. 이 클래스는 개체 및 함수 범주에 속합니다."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class ScriptObject : System.Reflection.IReflect
  inheritance:
  - System.Object
  implements:
  - System.Reflection.IReflect
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.engine
  id: engine
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: engine
  nameWithType: ScriptObject.engine
  fullName: Microsoft.JScript.ScriptObject.engine
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "스크립팅 엔진에 대 한 참조를 저장 합니다."
  syntax:
    content: public Microsoft.JScript.Vsa.VsaEngine engine;
    return:
      type: Microsoft.JScript.Vsa.VsaEngine
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.GetField(System.String,System.Reflection.BindingFlags)
  id: GetField(System.String,System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: GetField(String,BindingFlags)
  nameWithType: ScriptObject.GetField(String,BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetField(String,BindingFlags)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "지정된 된 이름을 가진 필드를 가져옵니다."
  syntax:
    content: public System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "가져올 필드의 이름입니다."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "리플렉션으로 멤버에 대 한 검색 수행 하는 방법을 지정 하는 열거형 값의 비트 조합입니다."
    return:
      type: System.Reflection.FieldInfo
      description: "지정 된 지정 된 필드 <code> name </code>, 열 또는 스크립트 개체 필드가 포함 되어 있지 않으면 null입니다."
  overload: Microsoft.JScript.ScriptObject.GetField*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.GetFields(System.Reflection.BindingFlags)
  id: GetFields(System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: GetFields(BindingFlags)
  nameWithType: ScriptObject.GetFields(BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetFields(BindingFlags)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "배열을 가져옵니다 <xref:System.Reflection.FieldInfo>현재 스크립트 개체의 모든 필드에 해당 하는 개체입니다.</xref:System.Reflection.FieldInfo>"
  syntax:
    content: public virtual System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "리플렉션으로 멤버에 대 한 검색 수행 하는 방법을 지정 하는 열거형 값의 비트 조합입니다."
    return:
      type: System.Reflection.FieldInfo[]
      description: "현재 스크립트 개체의 모든 필드가 포함 된 개체의 배열입니다."
  overload: Microsoft.JScript.ScriptObject.GetFields*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.GetMember(System.String,System.Reflection.BindingFlags)
  id: GetMember(System.String,System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: GetMember(String,BindingFlags)
  nameWithType: ScriptObject.GetMember(String,BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetMember(String,BindingFlags)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "파생된 클래스에서 재정의 하는 경우의 배열을 가져옵니다 <xref:System.Reflection.MemberInfo>지정 된 이름과 일치 하는 모든 멤버에 해당 하는 개체입니다.</xref:System.Reflection.MemberInfo>"
  syntax:
    content: public abstract System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "검색할 멤버의 이름입니다."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "리플렉션으로 멤버에 대 한 검색 수행 하는 방법을 지정 하는 열거형 값의 비트 조합입니다."
    return:
      type: System.Reflection.MemberInfo[]
      description: "일치 하는 개체의 배열에서 <code> name </code> 인수입니다."
  overload: Microsoft.JScript.ScriptObject.GetMember*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.GetMembers(System.Reflection.BindingFlags)
  id: GetMembers(System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: GetMembers(BindingFlags)
  nameWithType: ScriptObject.GetMembers(BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetMembers(BindingFlags)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "파생된 클래스에서 재정의 하는 경우의 배열을 가져옵니다 <xref:System.Reflection.MemberInfo>현재 스크립트 개체의 모든 멤버에 해당 하는 개체입니다.</xref:System.Reflection.MemberInfo>"
  syntax:
    content: public abstract System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "리플렉션으로 멤버에 대 한 검색 수행 하는 방법을 지정 하는 열거형 값의 비트 조합입니다."
    return:
      type: System.Reflection.MemberInfo[]
      description: "현재 스크립트 개체의 모든 멤버가 포함 된 개체의 배열입니다."
  overload: Microsoft.JScript.ScriptObject.GetMembers*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags)
  id: GetMethod(System.String,System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: GetMethod(String,BindingFlags)
  nameWithType: ScriptObject.GetMethod(String,BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetMethod(String,BindingFlags)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "지정된 된 이름을 갖는 메서드를 가져옵니다."
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "가져올 메서드의 이름입니다."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "리플렉션으로 멤버에 대 한 검색 수행 하는 방법을 지정 하는 열거형 값의 비트 조합입니다."
    return:
      type: System.Reflection.MethodInfo
      description: "지정 된 변수가 있는 메서드에 <code> name </code>, 또는 스크립트 개체 메서드가 포함 되어 있지 않으면 null입니다."
  overload: Microsoft.JScript.ScriptObject.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: ScriptObject.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: Microsoft.JScript.ScriptObject.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "지정된 된 선택 조건을 사용 하 여 지정된 된 이름을 갖는 메서드를 가져옵니다."
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "검색할 메서드 이름입니다."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "리플렉션으로 멤버에 대 한 검색 수행 하는 방법을 지정 하는 열거형 값의 비트 조합입니다."
    - id: binder
      type: System.Reflection.Binder
      description: "공식 인수 형식으로 실제 인수 형식을 형식 변환을 수행 하는 개체입니다."
    - id: types
      type: System.Type[]
      description: "일치 하는 메서드를 찾는 데 사용 되는 매개 변수 형식입니다."
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "배열 형식이 수정 된 매개 변수 서명과 함께 작동 하도록 바인딩을 사용 하는 매개 변수 한정자입니다."
    return:
      type: System.Reflection.MethodInfo
      description: "지정 된 변수가 있는 메서드에 <code> name </code>, 또는 스크립트 개체 메서드가 포함 되어 있지 않으면 null입니다."
  overload: Microsoft.JScript.ScriptObject.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.GetMethods(System.Reflection.BindingFlags)
  id: GetMethods(System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: GetMethods(BindingFlags)
  nameWithType: ScriptObject.GetMethods(BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetMethods(BindingFlags)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "배열을 가져옵니다 <xref:System.Reflection.MethodInfo>현재 스크립트 개체의 모든 메서드에 해당 하는 개체입니다.</xref:System.Reflection.MethodInfo>"
  syntax:
    content: public virtual System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "리플렉션으로 멤버에 대 한 검색 수행 하는 방법을 지정 하는 열거형 값의 비트 조합입니다."
    return:
      type: System.Reflection.MethodInfo[]
      description: "현재 스크립트 개체의 모든 메서드가 포함 된 개체의 배열입니다."
  overload: Microsoft.JScript.ScriptObject.GetMethods*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.GetParent
  id: GetParent
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: GetParent()
  nameWithType: ScriptObject.GetParent()
  fullName: Microsoft.JScript.ScriptObject.GetParent()
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "부모 개체에 대 한 참조를 가져옵니다."
  remarks: "부모를 스크립트 개체를 구현 하지 않으므로 자체 메서드나 속성에 대 한 요청을 위임 하는 개체입니다. 예를 들어 만들 때에 <xref:Microsoft.JScript.NumberObject>는 <xref:Microsoft.JScript.NumberConstructor>부모에 <xref:Microsoft.JScript.NumberPrototype>.</xref:Microsoft.JScript.NumberPrototype> 는,</xref:Microsoft.JScript.NumberConstructor> 사용 하 여</xref:Microsoft.JScript.NumberObject>"
  syntax:
    content: public Microsoft.JScript.ScriptObject GetParent ();
    parameters: []
    return:
      type: Microsoft.JScript.ScriptObject
      description: "부모 개체에 대 한 참조입니다."
  overload: Microsoft.JScript.ScriptObject.GetParent*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.GetProperties(System.Reflection.BindingFlags)
  id: GetProperties(System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: GetProperties(BindingFlags)
  nameWithType: ScriptObject.GetProperties(BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetProperties(BindingFlags)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "배열을 가져옵니다 <xref:System.Reflection.PropertyInfo>현재 스크립트 개체의 모든 속성에 해당 하는 개체입니다.</xref:System.Reflection.PropertyInfo>"
  syntax:
    content: public virtual System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "리플렉션으로 멤버에 대 한 검색 수행 하는 방법을 지정 하는 열거형 값의 비트 조합입니다."
    return:
      type: System.Reflection.PropertyInfo[]
      description: "현재 스크립트 개체의 모든 속성이 포함 된 개체의 배열입니다."
  overload: Microsoft.JScript.ScriptObject.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags)
  id: GetProperty(System.String,System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: GetProperty(String,BindingFlags)
  nameWithType: ScriptObject.GetProperty(String,BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetProperty(String,BindingFlags)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "지정된 된 이름을 가진 속성을 가져옵니다."
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "가져올 속성의 이름입니다."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "리플렉션으로 멤버에 대 한 검색 수행 하는 방법을 지정 하는 열거형 값의 비트 조합입니다."
    return:
      type: System.Reflection.PropertyInfo
      description: "가 지정 하는 속성 <code> name </code>, 열 또는 스크립트 개체 속성이 포함 되어 있지 않으면 null입니다."
  overload: Microsoft.JScript.ScriptObject.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  id: GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: ScriptObject.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: Microsoft.JScript.ScriptObject.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "지정된 된 선택 조건을 사용 하 여 지정된 된 이름을 가진 속성을 가져옵니다."
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "검색할 속성의 이름입니다."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "리플렉션으로 멤버에 대 한 검색 수행 하는 방법을 지정 하는 열거형 값의 비트 조합입니다."
    - id: binder
      type: System.Reflection.Binder
      description: "공식 인수 형식으로 실제 인수 형식을 형식 변환을 수행 하는 개체입니다."
    - id: returnType
      type: System.Type
      description: "속성이 있어야 하는 반환 값의 형식입니다."
    - id: types
      type: System.Type[]
      description: "인덱스 형식에 대 한 검색 중인 속성입니다. 클래스에 대 한 인덱서 같은 인덱스 속성에 사용 합니다."
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "배열 형식이 수정 된 매개 변수 서명과 함께 작동 하도록 바인딩을 사용 하는 매개 변수 한정자입니다."
    return:
      type: System.Reflection.PropertyInfo
      description: "가 지정 하는 속성 <code> name </code>, 열 또는 스크립트 개체 속성이 포함 되어 있지 않으면 null입니다."
  overload: Microsoft.JScript.ScriptObject.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: ScriptObject.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: Microsoft.JScript.ScriptObject.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "지정된 된 멤버를 호출 합니다."
  syntax:
    content: public virtual object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo locale, string[] namedParameters);
    parameters:
    - id: name
      type: System.String
      description: "호출할 멤버의 이름입니다."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "리플렉션으로 멤버에 대 한 검색 수행 하는 방법을 지정 하는 열거형 값의 비트 조합입니다."
    - id: binder
      type: System.Reflection.Binder
      description: "공식 인수 형식으로 실제 인수 형식을 형식 변환을 수행 하는 개체입니다."
    - id: target
      type: System.Object
      description: "멤버를 호출 하는 개체입니다. 이 현재 스크립트 개체 여야 합니다."
    - id: args
      type: System.Object[]
      description: "숫자, 순서 및 멤버의 매개 변수 형식을 호출할 포함 된 개체의 배열입니다. 매개 변수가 없는 경우 빈 배열입니다."
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "배열 args 매개 변수와 동일한 길이입니다. 메타 데이터에서 호출된 된 멤버의 인수 특성을 나타냅니다."
    - id: locale
      type: System.Globalization.CultureInfo
      description: "특정 문화권 또는 로캘이 대 한 정보를 제공합니다. 숫자, 날짜, 및 문자열의 형식을 올바르게 지정 하는 데 사용 합니다."
    - id: namedParameters
      type: System.String[]
      description: "배열 매개 변수입니다."
    return:
      type: System.Object
      description: "멤버에 대 한 호출의 반환 값입니다."
  overload: Microsoft.JScript.ScriptObject.InvokeMember*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.Item(System.Double)
  id: Item(System.Double)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: Item(Double)
  nameWithType: ScriptObject.Item(Double)
  fullName: Microsoft.JScript.ScriptObject.Item(Double)
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "지정 된 지정 된 스크립트의 구성원이 되는 개체를 가져오거나 <xref:System.Double>인덱스 값입니다.</xref:System.Double>"
  syntax:
    content: public object this[double index] { get; set; }
    parameters:
    - id: index
      type: System.Double
      description: "멤버의 인덱스입니다."
    return:
      type: System.Object
      description: "에 있는 멤버의 값 <code> index </code>합니다."
  overload: Microsoft.JScript.ScriptObject.Item*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.Item(System.Int32)
  id: Item(System.Int32)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ScriptObject.Item(Int32)
  fullName: Microsoft.JScript.ScriptObject.Item(Int32)
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "지정 된 지정 된 스크립트의 구성원이 되는 개체를 가져오거나 <xref:System.Int32>인덱스 값입니다.</xref:System.Int32>"
  syntax:
    content: public object this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "멤버의 인덱스입니다."
    return:
      type: System.Object
      description: "에 있는 멤버의 값 <code> index </code>합니다."
  overload: Microsoft.JScript.ScriptObject.Item*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.Item(System.Object[])
  id: Item(System.Object[])
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: Item(Object[])
  nameWithType: ScriptObject.Item(Object[])
  fullName: Microsoft.JScript.ScriptObject.Item(Object[])
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "지정된 된 이름으로 지정 된 스크립트 개체의 멤버를 가져오거나 설정 합니다. <xref:System.Double>인덱스 값 또는 <xref:System.Int32>인덱스 값입니다.</xref:System.Int32> </xref:System.Double>"
  remarks: "경우는 `pars` 배열에 요소가 둘 이상, 마지막 요소는이 속성에 대 한 인수입니다."
  syntax:
    content: public object this[object[] pars] { get; set; }
    parameters:
    - id: pars
      type: System.Object[]
      description: "이름 또는 멤버의 인덱스입니다."
    return:
      type: System.Object
      description: "에 지정 된 멤버의 값 <code> pars </code>합니다."
  overload: Microsoft.JScript.ScriptObject.Item*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.Item(System.String)
  id: Item(System.String)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: Item(String)
  nameWithType: ScriptObject.Item(String)
  fullName: Microsoft.JScript.ScriptObject.Item(String)
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "지정된 된 이름으로 지정 된 스크립트 개체의 멤버를 가져오거나 설정 합니다."
  syntax:
    content: public object this[string name] { get; set; }
    parameters:
    - id: name
      type: System.String
      description: "멤버의 이름입니다."
    return:
      type: System.Object
      description: "명명 된 멤버의 값 <code> name </code>합니다."
  overload: Microsoft.JScript.ScriptObject.Item*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.parent
  id: parent
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: parent
  nameWithType: ScriptObject.parent
  fullName: Microsoft.JScript.ScriptObject.parent
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "부모 개체에 대 한 참조를 저장합니다."
  remarks: "부모를 스크립트 개체를 구현 하지 않으므로 자체 메서드나 속성에 대 한 요청을 위임 하는 개체입니다. 예를 들어 만들 때에 <xref:Microsoft.JScript.NumberObject>는 <xref:Microsoft.JScript.NumberConstructor>부모에 <xref:Microsoft.JScript.NumberPrototype>.</xref:Microsoft.JScript.NumberPrototype> 는,</xref:Microsoft.JScript.NumberConstructor> 사용 하 여</xref:Microsoft.JScript.NumberObject>"
  syntax:
    content: protected Microsoft.JScript.ScriptObject parent;
    return:
      type: Microsoft.JScript.ScriptObject
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.UnderlyingSystemType
  id: UnderlyingSystemType
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: UnderlyingSystemType
  nameWithType: ScriptObject.UnderlyingSystemType
  fullName: Microsoft.JScript.ScriptObject.UnderlyingSystemType
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "스크립트 개체의 형식을 가져옵니다."
  syntax:
    content: public virtual Type UnderlyingSystemType { get; }
    return:
      type: System.Type
      description: "스크립트 개체의 형식입니다."
  overload: Microsoft.JScript.ScriptObject.UnderlyingSystemType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)
  id: WrapMembers(System.Reflection.MemberInfo,System.Object)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: WrapMembers(MemberInfo,Object)
  nameWithType: ScriptObject.WrapMembers(MemberInfo,Object)
  fullName: Microsoft.JScript.ScriptObject.WrapMembers(MemberInfo,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "지정 된 개체와 함께 지정된 된 멤버를 포함 하는 래핑된 개체를 만듭니다."
  remarks: "이 메서드를 저장 한 다음 자신의 하는 경우 해당 값을 반환할 멤버를 포함 하지 않는 다른 개체를 활성화 합니다."
  syntax:
    content: protected static System.Reflection.MemberInfo[] WrapMembers (System.Reflection.MemberInfo member, object obj);
    parameters:
    - id: member
      type: System.Reflection.MemberInfo
      description: "줄 바꿈되도록 할 멤버입니다."
    - id: obj
      type: System.Object
      description: "개체는 `member` 에 정의 되어 있습니다."
    return:
      type: System.Reflection.MemberInfo[]
      description: "멤버 정보를 포함 하는 래핑된 개체가 있는 단일 요소 배열 및 <code> obj </code>합니다."
  overload: Microsoft.JScript.ScriptObject.WrapMembers*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object)
  id: WrapMembers(System.Reflection.MemberInfo[],System.Object)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: WrapMembers(MemberInfo[],Object)
  nameWithType: ScriptObject.WrapMembers(MemberInfo[],Object)
  fullName: Microsoft.JScript.ScriptObject.WrapMembers(MemberInfo[],Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "지정된 된 개체와 함께 지정 된 멤버를 포함 하는 래핑된 개체의 배열을 만듭니다."
  remarks: "이 메서드는 이러한 멤버를 저장 한 후 해당 값을 반환 하 큐브인 것 처럼 자체 포함 하지 않는 다른 개체를 활성화 합니다."
  syntax:
    content: protected static System.Reflection.MemberInfo[] WrapMembers (System.Reflection.MemberInfo[] members, object obj);
    parameters:
    - id: members
      type: System.Reflection.MemberInfo[]
      description: "줄 바꿈되도록 할 멤버입니다."
    - id: obj
      type: System.Object
      description: "개체는 `members` 에 정의 됩니다."
    return:
      type: System.Reflection.MemberInfo[]
      description: "각 멤버 정보와의 복사본을 포함 하는 래핑된 개체의 배열 <code> obj </code>합니다."
  overload: Microsoft.JScript.ScriptObject.WrapMembers*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)
  id: WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)
  parent: Microsoft.JScript.ScriptObject
  langs:
  - csharp
  name: WrapMembers(MemberInfo[],Object,SimpleHashtable)
  nameWithType: ScriptObject.WrapMembers(MemberInfo[],Object,SimpleHashtable)
  fullName: Microsoft.JScript.ScriptObject.WrapMembers(MemberInfo[],Object,SimpleHashtable)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "지정된 된 데이터 저장소에 결과 캐시 지정된 된 개체와 함께 지정 된 멤버를 포함 하는 래핑된 개체의 배열을 만듭니다."
  remarks: "이 메서드는 이러한 멤버를 저장 한 후 해당 값을 반환 하 큐브인 것 처럼 자체 포함 하지 않는 다른 개체를 활성화 합니다."
  syntax:
    content: protected static System.Reflection.MemberInfo[] WrapMembers (System.Reflection.MemberInfo[] members, object obj, Microsoft.JScript.SimpleHashtable cache);
    parameters:
    - id: members
      type: System.Reflection.MemberInfo[]
      description: "줄 바꿈되도록 할 멤버입니다."
    - id: obj
      type: System.Object
      description: "개체는 `members` 에 정의 됩니다."
    - id: cache
      type: Microsoft.JScript.SimpleHashtable
      description: "래핑된 개체에 대 한 임시 데이터 저장소입니다."
    return:
      type: System.Reflection.MemberInfo[]
      description: "각 멤버 정보와의 복사본을 포함 하는 래핑된 개체의 배열 <code> obj </code>합니다."
  overload: Microsoft.JScript.ScriptObject.WrapMembers*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.JScript.ScriptObject.engine
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: engine
  nameWithType: ScriptObject.engine
  fullName: Microsoft.JScript.ScriptObject.engine
- uid: Microsoft.JScript.Vsa.VsaEngine
  parent: Microsoft.JScript.Vsa
  isExternal: false
  name: VsaEngine
  nameWithType: VsaEngine
  fullName: Microsoft.JScript.Vsa.VsaEngine
- uid: Microsoft.JScript.ScriptObject.GetField(System.String,System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetField(String,BindingFlags)
  nameWithType: ScriptObject.GetField(String,BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetField(String,BindingFlags)
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: Microsoft.JScript.ScriptObject.GetFields(System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetFields(BindingFlags)
  nameWithType: ScriptObject.GetFields(BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetFields(BindingFlags)
- uid: System.Reflection.FieldInfo[]
  parent: System.Reflection
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo[]
  spec.csharp:
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: FieldInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.JScript.ScriptObject.GetMember(System.String,System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetMember(String,BindingFlags)
  nameWithType: ScriptObject.GetMember(String,BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetMember(String,BindingFlags)
- uid: System.Reflection.MemberInfo[]
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo[]
  spec.csharp:
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: MemberInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.JScript.ScriptObject.GetMembers(System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetMembers(BindingFlags)
  nameWithType: ScriptObject.GetMembers(BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetMembers(BindingFlags)
- uid: Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetMethod(String,BindingFlags)
  nameWithType: ScriptObject.GetMethod(String,BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetMethod(String,BindingFlags)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: ScriptObject.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: Microsoft.JScript.ScriptObject.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.ParameterModifier[]
  parent: System.Reflection
  isExternal: false
  name: ParameterModifier
  nameWithType: ParameterModifier
  fullName: System.Reflection.ParameterModifier[]
  spec.csharp:
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    nameWithType: ParameterModifier
    fullName: ParameterModifier[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.JScript.ScriptObject.GetMethods(System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetMethods(BindingFlags)
  nameWithType: ScriptObject.GetMethods(BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetMethods(BindingFlags)
- uid: System.Reflection.MethodInfo[]
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo[]
  spec.csharp:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: MethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.JScript.ScriptObject.GetParent
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetParent()
  nameWithType: ScriptObject.GetParent()
  fullName: Microsoft.JScript.ScriptObject.GetParent()
- uid: Microsoft.JScript.ScriptObject
  parent: Microsoft.JScript
  isExternal: false
  name: ScriptObject
  nameWithType: ScriptObject
  fullName: Microsoft.JScript.ScriptObject
- uid: Microsoft.JScript.ScriptObject.GetProperties(System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetProperties(BindingFlags)
  nameWithType: ScriptObject.GetProperties(BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetProperties(BindingFlags)
- uid: System.Reflection.PropertyInfo[]
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo[]
  spec.csharp:
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetProperty(String,BindingFlags)
  nameWithType: ScriptObject.GetProperty(String,BindingFlags)
  fullName: Microsoft.JScript.ScriptObject.GetProperty(String,BindingFlags)
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: ScriptObject.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: Microsoft.JScript.ScriptObject.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.JScript.ScriptObject.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: ScriptObject.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: Microsoft.JScript.ScriptObject.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.JScript.ScriptObject.Item(System.Double)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: Item(Double)
  nameWithType: ScriptObject.Item(Double)
  fullName: Microsoft.JScript.ScriptObject.Item(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.JScript.ScriptObject.Item(System.Int32)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: Item(Int32)
  nameWithType: ScriptObject.Item(Int32)
  fullName: Microsoft.JScript.ScriptObject.Item(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.JScript.ScriptObject.Item(System.Object[])
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: Item(Object[])
  nameWithType: ScriptObject.Item(Object[])
  fullName: Microsoft.JScript.ScriptObject.Item(Object[])
- uid: Microsoft.JScript.ScriptObject.Item(System.String)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: Item(String)
  nameWithType: ScriptObject.Item(String)
  fullName: Microsoft.JScript.ScriptObject.Item(String)
- uid: Microsoft.JScript.ScriptObject.parent
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: parent
  nameWithType: ScriptObject.parent
  fullName: Microsoft.JScript.ScriptObject.parent
- uid: Microsoft.JScript.ScriptObject.UnderlyingSystemType
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: UnderlyingSystemType
  nameWithType: ScriptObject.UnderlyingSystemType
  fullName: Microsoft.JScript.ScriptObject.UnderlyingSystemType
- uid: Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: WrapMembers(MemberInfo,Object)
  nameWithType: ScriptObject.WrapMembers(MemberInfo,Object)
  fullName: Microsoft.JScript.ScriptObject.WrapMembers(MemberInfo,Object)
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: WrapMembers(MemberInfo[],Object)
  nameWithType: ScriptObject.WrapMembers(MemberInfo[],Object)
  fullName: Microsoft.JScript.ScriptObject.WrapMembers(MemberInfo[],Object)
- uid: Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: WrapMembers(MemberInfo[],Object,SimpleHashtable)
  nameWithType: ScriptObject.WrapMembers(MemberInfo[],Object,SimpleHashtable)
  fullName: Microsoft.JScript.ScriptObject.WrapMembers(MemberInfo[],Object,SimpleHashtable)
- uid: Microsoft.JScript.SimpleHashtable
  parent: Microsoft.JScript
  isExternal: false
  name: SimpleHashtable
  nameWithType: SimpleHashtable
  fullName: Microsoft.JScript.SimpleHashtable
- uid: Microsoft.JScript.ScriptObject.GetField*
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetField
  nameWithType: ScriptObject.GetField
- uid: Microsoft.JScript.ScriptObject.GetFields*
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetFields
  nameWithType: ScriptObject.GetFields
- uid: Microsoft.JScript.ScriptObject.GetMember*
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetMember
  nameWithType: ScriptObject.GetMember
- uid: Microsoft.JScript.ScriptObject.GetMembers*
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetMembers
  nameWithType: ScriptObject.GetMembers
- uid: Microsoft.JScript.ScriptObject.GetMethod*
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetMethod
  nameWithType: ScriptObject.GetMethod
- uid: Microsoft.JScript.ScriptObject.GetMethods*
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetMethods
  nameWithType: ScriptObject.GetMethods
- uid: Microsoft.JScript.ScriptObject.GetParent*
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetParent
  nameWithType: ScriptObject.GetParent
- uid: Microsoft.JScript.ScriptObject.GetProperties*
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetProperties
  nameWithType: ScriptObject.GetProperties
- uid: Microsoft.JScript.ScriptObject.GetProperty*
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: GetProperty
  nameWithType: ScriptObject.GetProperty
- uid: Microsoft.JScript.ScriptObject.InvokeMember*
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: InvokeMember
  nameWithType: ScriptObject.InvokeMember
- uid: Microsoft.JScript.ScriptObject.Item*
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: Item
  nameWithType: ScriptObject.Item
- uid: Microsoft.JScript.ScriptObject.UnderlyingSystemType*
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: UnderlyingSystemType
  nameWithType: ScriptObject.UnderlyingSystemType
- uid: Microsoft.JScript.ScriptObject.WrapMembers*
  parent: Microsoft.JScript.ScriptObject
  isExternal: false
  name: WrapMembers
  nameWithType: ScriptObject.WrapMembers
