### YamlMime:ManagedReference
items:
- uid: System.Configuration.ConfigurationCollectionAttribute
  id: ConfigurationCollectionAttribute
  children:
  - System.Configuration.ConfigurationCollectionAttribute.#ctor(System.Type)
  - System.Configuration.ConfigurationCollectionAttribute.AddItemName
  - System.Configuration.ConfigurationCollectionAttribute.ClearItemsName
  - System.Configuration.ConfigurationCollectionAttribute.CollectionType
  - System.Configuration.ConfigurationCollectionAttribute.ItemType
  - System.Configuration.ConfigurationCollectionAttribute.RemoveItemName
  langs:
  - csharp
  name: ConfigurationCollectionAttribute
  nameWithType: ConfigurationCollectionAttribute
  fullName: System.Configuration.ConfigurationCollectionAttribute
  type: Class
  summary: ".NET Framework 구성 요소 컬렉션의 인스턴스를 만들고를 선언적으로 지시 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "ConfigurationCollectionAttribute 특성을 사용 하 여 데코레이팅하는 <xref:System.Configuration.ConfigurationElementCollection>요소.</xref:System.Configuration.ConfigurationElementCollection> 이렇게 하면.NET Framework 컬렉션의 인스턴스를 만들고 사용자 지정을 사용 하 여 초기화 하는 데 <xref:System.Configuration.ConfigurationElement>값.</xref:System.Configuration.ConfigurationElement>      > [!NOTE] > 특성 사용된 (선언적) 모델을 사용 하는 가장 간단한 방법은 사용자 지정 구성 요소를 만들 수는 있습니다. 요소를 선언 하 고 해당 ConfigurationCollectionAttribute 특성으로 데코레이팅 합니다. 이 특성으로 표시 된 각 요소에 대 한.NET Framework 리플렉션을 사용 하 여 데코레이팅하 매개 변수를 읽고 만들 관련 <xref:System.Configuration.ConfigurationElementCollection>인스턴스.</xref:System.Configuration.ConfigurationElementCollection> 프로그래밍 모델을 사용할 수도 있습니다. 사용자 지정 공용 컬렉션을 선언할 수 있지만 재정의할 수는 작업은이 경우에 <xref:System.Configuration.ConfigurationElementCollection>멤버 및 속성 컬렉션을 반환 합니다.</xref:System.Configuration.ConfigurationElementCollection>       .NET Framework 구성 시스템에는 사용자 지정 구성 요소를 만드는 동안 사용할 수 있는 특성 유형을 제공 합니다. 특성의 두 종류가:-.NET Framework를 사용자 지정 구성 요소 속성을 만들 방법을 지시 하는 특성입니다. 이러한 형식에 포함:-ConfigurationCollectionAttribute- <xref:System.Configuration.ConfigurationPropertyAttribute>-.NET Framework를 사용자 지정 구성 요소 속성의 유효성을 검사 하는 방법을 지시 하는 특성.</xref:System.Configuration.ConfigurationPropertyAttribute> These types include:          -   <xref:System.Configuration.IntegerValidatorAttribute>          -   <xref:System.Configuration.LongValidatorAttribute>          -   <xref:System.Configuration.RegexStringValidatorAttribute>          -   <xref:System.Configuration.StringValidatorAttribute>          -   <xref:System.Configuration.TimeSpanValidatorAttribute></xref:System.Configuration.TimeSpanValidatorAttribute></xref:System.Configuration.StringValidatorAttribute></xref:System.Configuration.RegexStringValidatorAttribute></xref:System.Configuration.LongValidatorAttribute></xref:System.Configuration.IntegerValidatorAttribute>"
  example:
  - "The following example shows how to use the ConfigurationCollectionAttribute.  \n  \n This example consists of three classes: `UrlsSection`, `UrlsCollection` and `UrlConfigElement`.The `UrlsSection` class uses the ConfigurationCollectionAttribute to define a custom configuration section. This section contains a URL collection (defined by the `UrlsCollection` class) of URL elements (defined by the `UrlConfigElement` class). When you run the example, an instance of the `UrlsSection` class is created and the following configuration elements are generated in the application configuration file:  \n  \n```  \n<configuration>  \n    <configSections>  \n        <section name=\"MyUrls\" type=\"UrlsSection,   \n          ConfigurationCollectionAttribute, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\" />  \n    </configSections>  \n    <MyUrls>  \n        <urls>  \n            <remove name=\"Contoso\" />  \n            <add name=\"Contoso\" url=\"http://www.contoso.com\" port=\"0\" />  \n        </urls>  \n    </MyUrls>  \n</configuration  \n```  \n  \n [!code-cs[System.Configuration.ConfigurationCollectionAttribute#1](~/add/codesnippet/csharp/t-system.configuration.c_7_1.cs)]\n [!code-vb[System.Configuration.ConfigurationCollectionAttribute#1](~/add/codesnippet/visualbasic/t-system.configuration.c_7_1.vb)]  \n  \n [!code-cs[System.Configuration.ConfigurationCollectionAttribute#31](~/add/codesnippet/csharp/t-system.configuration.c_7_2.cs)]\n [!code-vb[System.Configuration.ConfigurationCollectionAttribute#31](~/add/codesnippet/visualbasic/t-system.configuration.c_7_2.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Property)]

      public sealed class ConfigurationCollectionAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationCollectionAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Configuration.ConfigurationCollectionAttribute
  langs:
  - csharp
  name: ConfigurationCollectionAttribute(Type)
  nameWithType: ConfigurationCollectionAttribute.ConfigurationCollectionAttribute(Type)
  fullName: System.Configuration.ConfigurationCollectionAttribute.ConfigurationCollectionAttribute(Type)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Configuration.ConfigurationCollectionAttribute&quot;> </xref> 클래스입니다."
  remarks: "만들 속성 컬렉션의 사용자 지정 형식을.NET Framework를이 생성자를 사용 합니다."
  example:
  - "The following example shows how to use the ConfigurationCollectionAttribute.  \n  \n [!code-cs[System.Configuration.ConfigurationCollectionAttribute#20](~/add/codesnippet/csharp/m-system.configuration.c_25_1.cs)]\n [!code-vb[System.Configuration.ConfigurationCollectionAttribute#20](~/add/codesnippet/visualbasic/m-system.configuration.c_25_1.vb)]"
  syntax:
    content: public ConfigurationCollectionAttribute (Type itemType);
    parameters:
    - id: itemType
      type: System.Type
      description: "만들 속성 컬렉션의 형식입니다."
  overload: System.Configuration.ConfigurationCollectionAttribute.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>itemType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.ConfigurationCollectionAttribute.AddItemName
  id: AddItemName
  parent: System.Configuration.ConfigurationCollectionAttribute
  langs:
  - csharp
  name: AddItemName
  nameWithType: ConfigurationCollectionAttribute.AddItemName
  fullName: System.Configuration.ConfigurationCollectionAttribute.AddItemName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "이름을 가져오거나 설정 합니다.는 <xref uid=&quot;langword_csharp_&lt;add&gt;&quot; name=&quot;&lt;add&gt;&quot; href=&quot;&quot;> </xref> 구성 요소입니다."
  remarks: "AddItemName 속성을 사용 하면 구성 요소에 다른 이름을 지정할 수 있습니다. 예를 들어, 사용할 수 `addUrl` &quot;추가&quot; 하는 대신 합니다."
  example:
  - "The following example shows how to use the AddItemName property.  \n  \n [!code-cs[System.Configuration.ConfigurationCollectionAttribute#20](~/add/codesnippet/csharp/p-system.configuration.c_47_1.cs)]\n [!code-vb[System.Configuration.ConfigurationCollectionAttribute#20](~/add/codesnippet/visualbasic/p-system.configuration.c_47_1.vb)]"
  syntax:
    content: public string AddItemName { get; set; }
    return:
      type: System.String
      description: "표준 이름을 대체 하는 이름 &quot;추가&quot; 구성 항목에 대 한 합니다."
  overload: System.Configuration.ConfigurationCollectionAttribute.AddItemName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationCollectionAttribute.ClearItemsName
  id: ClearItemsName
  parent: System.Configuration.ConfigurationCollectionAttribute
  langs:
  - csharp
  name: ClearItemsName
  nameWithType: ConfigurationCollectionAttribute.ClearItemsName
  fullName: System.Configuration.ConfigurationCollectionAttribute.ClearItemsName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "이름을 가져오거나 설정 합니다.는 <xref uid=&quot;langword_csharp_&lt;clear&gt;&quot; name=&quot;&lt;clear&gt;&quot; href=&quot;&quot;> </xref> 구성 요소입니다."
  remarks: "ClearItemsName 속성에 다른 이름을 지정할 수 있습니다는 `<clear>` 구성 요소입니다. 예를 들어, 사용할 수 `clearUrls` &quot;지우기&quot; 대신 합니다."
  example:
  - "The following example shows how to use the ClearItemsName.  \n  \n [!code-cs[System.Configuration.ConfigurationCollectionAttribute#20](~/add/codesnippet/csharp/p-system.configuration.c_18_1.cs)]\n [!code-vb[System.Configuration.ConfigurationCollectionAttribute#20](~/add/codesnippet/visualbasic/p-system.configuration.c_18_1.vb)]"
  syntax:
    content: public string ClearItemsName { get; set; }
    return:
      type: System.String
      description: "표준 이름을 대체 하는 이름 &quot;지우기&quot; 구성 항목에 대 한 합니다."
  overload: System.Configuration.ConfigurationCollectionAttribute.ClearItemsName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationCollectionAttribute.CollectionType
  id: CollectionType
  parent: System.Configuration.ConfigurationCollectionAttribute
  langs:
  - csharp
  name: CollectionType
  nameWithType: ConfigurationCollectionAttribute.CollectionType
  fullName: System.Configuration.ConfigurationCollectionAttribute.CollectionType
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "형식을 가져오거나 설정 합니다.는 <xref href=&quot;System.Configuration.ConfigurationCollectionAttribute&quot;> </xref> 특성입니다."
  syntax:
    content: public System.Configuration.ConfigurationElementCollectionType CollectionType { get; set; }
    return:
      type: System.Configuration.ConfigurationElementCollectionType
      description: "종류는 <xref href=&quot;System.Configuration.ConfigurationCollectionAttribute&quot;> </xref>합니다."
  overload: System.Configuration.ConfigurationCollectionAttribute.CollectionType*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationCollectionAttribute.ItemType
  id: ItemType
  parent: System.Configuration.ConfigurationCollectionAttribute
  langs:
  - csharp
  name: ItemType
  nameWithType: ConfigurationCollectionAttribute.ItemType
  fullName: System.Configuration.ConfigurationCollectionAttribute.ItemType
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "컬렉션 요소의 형식을 가져옵니다."
  remarks: "ItemType 속성은 구성 요소 형식을 가져오기 위해 리플렉션에 의해 사용 됩니다."
  syntax:
    content: public Type ItemType { get; }
    return:
      type: System.Type
      description: "컬렉션 요소의 형식입니다."
  overload: System.Configuration.ConfigurationCollectionAttribute.ItemType*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationCollectionAttribute.RemoveItemName
  id: RemoveItemName
  parent: System.Configuration.ConfigurationCollectionAttribute
  langs:
  - csharp
  name: RemoveItemName
  nameWithType: ConfigurationCollectionAttribute.RemoveItemName
  fullName: System.Configuration.ConfigurationCollectionAttribute.RemoveItemName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "이름을 가져오거나 설정 합니다.는 <xref uid=&quot;langword_csharp_&lt;remove&gt;&quot; name=&quot;&lt;remove&gt;&quot; href=&quot;&quot;> </xref> 구성 요소입니다."
  remarks: "RemoveItemName 속성에 다른 이름을 지정할 수 있습니다는 `<remove>` 구성 요소입니다. 예를 들어, 사용할 수 `removeUrl` &quot;제거&quot; 대신 합니다."
  example:
  - "The following example shows how to use the RemoveItemName property.  \n  \n [!code-cs[System.Configuration.ConfigurationCollectionAttribute#20](~/add/codesnippet/csharp/p-system.configuration.c_41_1.cs)]\n [!code-vb[System.Configuration.ConfigurationCollectionAttribute#20](~/add/codesnippet/visualbasic/p-system.configuration.c_41_1.vb)]"
  syntax:
    content: public string RemoveItemName { get; set; }
    return:
      type: System.String
      description: "표준 이름을 대체 하는 이름 &quot;제거&quot; 구성 요소에 대 한 합니다."
  overload: System.Configuration.ConfigurationCollectionAttribute.RemoveItemName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Configuration.ConfigurationCollectionAttribute.#ctor(System.Type)
  parent: System.Configuration.ConfigurationCollectionAttribute
  isExternal: false
  name: ConfigurationCollectionAttribute(Type)
  nameWithType: ConfigurationCollectionAttribute.ConfigurationCollectionAttribute(Type)
  fullName: System.Configuration.ConfigurationCollectionAttribute.ConfigurationCollectionAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Configuration.ConfigurationCollectionAttribute.AddItemName
  parent: System.Configuration.ConfigurationCollectionAttribute
  isExternal: false
  name: AddItemName
  nameWithType: ConfigurationCollectionAttribute.AddItemName
  fullName: System.Configuration.ConfigurationCollectionAttribute.AddItemName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ConfigurationCollectionAttribute.ClearItemsName
  parent: System.Configuration.ConfigurationCollectionAttribute
  isExternal: false
  name: ClearItemsName
  nameWithType: ConfigurationCollectionAttribute.ClearItemsName
  fullName: System.Configuration.ConfigurationCollectionAttribute.ClearItemsName
- uid: System.Configuration.ConfigurationCollectionAttribute.CollectionType
  parent: System.Configuration.ConfigurationCollectionAttribute
  isExternal: false
  name: CollectionType
  nameWithType: ConfigurationCollectionAttribute.CollectionType
  fullName: System.Configuration.ConfigurationCollectionAttribute.CollectionType
- uid: System.Configuration.ConfigurationElementCollectionType
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElementCollectionType
  nameWithType: ConfigurationElementCollectionType
  fullName: System.Configuration.ConfigurationElementCollectionType
- uid: System.Configuration.ConfigurationCollectionAttribute.ItemType
  parent: System.Configuration.ConfigurationCollectionAttribute
  isExternal: false
  name: ItemType
  nameWithType: ConfigurationCollectionAttribute.ItemType
  fullName: System.Configuration.ConfigurationCollectionAttribute.ItemType
- uid: System.Configuration.ConfigurationCollectionAttribute.RemoveItemName
  parent: System.Configuration.ConfigurationCollectionAttribute
  isExternal: false
  name: RemoveItemName
  nameWithType: ConfigurationCollectionAttribute.RemoveItemName
  fullName: System.Configuration.ConfigurationCollectionAttribute.RemoveItemName
- uid: System.Configuration.ConfigurationCollectionAttribute.#ctor*
  parent: System.Configuration.ConfigurationCollectionAttribute
  isExternal: false
  name: ConfigurationCollectionAttribute
  nameWithType: ConfigurationCollectionAttribute.ConfigurationCollectionAttribute
- uid: System.Configuration.ConfigurationCollectionAttribute.AddItemName*
  parent: System.Configuration.ConfigurationCollectionAttribute
  isExternal: false
  name: AddItemName
  nameWithType: ConfigurationCollectionAttribute.AddItemName
- uid: System.Configuration.ConfigurationCollectionAttribute.ClearItemsName*
  parent: System.Configuration.ConfigurationCollectionAttribute
  isExternal: false
  name: ClearItemsName
  nameWithType: ConfigurationCollectionAttribute.ClearItemsName
- uid: System.Configuration.ConfigurationCollectionAttribute.CollectionType*
  parent: System.Configuration.ConfigurationCollectionAttribute
  isExternal: false
  name: CollectionType
  nameWithType: ConfigurationCollectionAttribute.CollectionType
- uid: System.Configuration.ConfigurationCollectionAttribute.ItemType*
  parent: System.Configuration.ConfigurationCollectionAttribute
  isExternal: false
  name: ItemType
  nameWithType: ConfigurationCollectionAttribute.ItemType
- uid: System.Configuration.ConfigurationCollectionAttribute.RemoveItemName*
  parent: System.Configuration.ConfigurationCollectionAttribute
  isExternal: false
  name: RemoveItemName
  nameWithType: ConfigurationCollectionAttribute.RemoveItemName
