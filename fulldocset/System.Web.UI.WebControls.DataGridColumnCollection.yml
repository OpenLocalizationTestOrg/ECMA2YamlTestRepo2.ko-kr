### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.DataGridColumnCollection
  id: DataGridColumnCollection
  children:
  - System.Web.UI.WebControls.DataGridColumnCollection.#ctor(System.Web.UI.WebControls.DataGrid,System.Collections.ArrayList)
  - System.Web.UI.WebControls.DataGridColumnCollection.Add(System.Web.UI.WebControls.DataGridColumn)
  - System.Web.UI.WebControls.DataGridColumnCollection.AddAt(System.Int32,System.Web.UI.WebControls.DataGridColumn)
  - System.Web.UI.WebControls.DataGridColumnCollection.Clear
  - System.Web.UI.WebControls.DataGridColumnCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.WebControls.DataGridColumnCollection.Count
  - System.Web.UI.WebControls.DataGridColumnCollection.GetEnumerator
  - System.Web.UI.WebControls.DataGridColumnCollection.IndexOf(System.Web.UI.WebControls.DataGridColumn)
  - System.Web.UI.WebControls.DataGridColumnCollection.IsReadOnly
  - System.Web.UI.WebControls.DataGridColumnCollection.IsSynchronized
  - System.Web.UI.WebControls.DataGridColumnCollection.Item(System.Int32)
  - System.Web.UI.WebControls.DataGridColumnCollection.Remove(System.Web.UI.WebControls.DataGridColumn)
  - System.Web.UI.WebControls.DataGridColumnCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot
  - System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#TrackViewState
  langs:
  - csharp
  name: DataGridColumnCollection
  nameWithType: DataGridColumnCollection
  fullName: System.Web.UI.WebControls.DataGridColumnCollection
  type: Class
  summary: "컬렉션 <xref href=&quot;System.Web.UI.WebControls.DataGridColumn&quot;> </xref>-파생 열 개체의 열을 나타내는 한 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "DataGridColumnCollection 컬렉션을 사용 하 여 프로그래밍 방식으로 컬렉션을 관리 하려면 <xref:System.Web.UI.WebControls.DataGridColumn>-파생 열 개체입니다.</xref:System.Web.UI.WebControls.DataGridColumn> 이러한 개체의 열을 나타내는 한 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> 추가, 제거 또는 DataGridColumnCollection 컬렉션에 열을 삽입할 수 있습니다.      > [!NOTE] > 때는 <xref:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns%2A>속성이로 설정 되어 `true,` 에서 만든 열에서 <xref:System.Web.UI.WebControls.DataGrid>제어에 추가 되지 않습니다는 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A>컬렉션.</xref:System.Web.UI.WebControls.DataGrid.Columns%2A> </xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns%2A>       <xref:System.Web.UI.WebControls.DataGrid>컨트롤의 내용을 저장 하지 않습니다는 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A>뷰 상태에 대 한 컬렉션입니다.</xref:System.Web.UI.WebControls.DataGrid.Columns%2A> </xref:System.Web.UI.WebControls.DataGrid> 를 추가 하거나 열을 동적으로 제거 하려면 하면 프로그래밍 방식으로 추가 하거나 제거 해야 열 페이지를 새로 고칠 때마다 합니다. 제공 된 `Page_Init` 함수를 추가 하거나 제거 하기 전에 열은 <xref:System.Web.UI.WebControls.DataGrid>컨트롤의 상태가 다시 로드 되 고 컨트롤을 다시 작성 됩니다.</xref:System.Web.UI.WebControls.DataGrid> 그렇지 않으면 변경 내용이 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A>컬렉션에 반영 되지 않습니다는 <xref:System.Web.UI.WebControls.DataGrid>표시 될 때 제어.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.Columns%2A>      > [!NOTE] > 프로그래밍 방식으로 열을 추가 하거나 열을 제거 수 있지만 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A>의 컬렉션은 <xref:System.Web.UI.WebControls.DataGrid>는 정적으로 열이 나열을 사용 하 여 보다 쉽게 제어가 <xref:System.Web.UI.WebControls.DataGridColumn.Visible%2A>각 열을 표시 하거나 숨기려면 속성.</xref:System.Web.UI.WebControls.DataGridColumn.Visible%2A> </xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.Columns%2A>       열에 표시 되는 순서를 결정 하는 컬렉션의 열 순서는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid>       다음 표에서 <xref:System.Web.UI.WebControls.DataGridColumn>클래스</xref:System.Web.UI.WebControls.DataGridColumn> 에서 파생 되는 다른 열 클래스를 보여 줍니다.      | 열 클래스 | 설명 |   |------------------|-----------------|   | <xref:System.Web.UI.WebControls.BoundColumn>| 데이터 원본의 필드에 바인딩되는 열.</xref:System.Web.UI.WebControls.BoundColumn> 필드의 각 항목 텍스트로 표시합니다. 이 <xref:System.Web.UI.WebControls.DataGrid>컨트롤에 대 한 기본 열 형식입니다. |   | <xref:System.Web.UI.WebControls.ButtonColumn>| 열에서 각 항목에 대 한 명령 단추를 표시 하는 열.</xref:System.Web.UI.WebControls.ButtonColumn> </xref:System.Web.UI.WebControls.DataGrid> 이렇게 하면 추가 / 제거 단추와 같이 사용자 지정 단추 컨트롤의 열을 만들 수 있습니다. |   | <xref:System.Web.UI.WebControls.EditCommandColumn>| 편집을 포함 하는 열이 열에서 각 항목에 대 한 명령입니다. |   | <xref:System.Web.UI.WebControls.HyperLinkColumn>| 하이퍼링크 열에서 각 항목을 표시 하는 열.</xref:System.Web.UI.WebControls.HyperLinkColumn> </xref:System.Web.UI.WebControls.EditCommandColumn> 열 내용의 정적 텍스트 또는 데이터 원본의 필드에 바인딩할 수 있습니다. |   | <xref:System.Web.UI.WebControls.TemplateColumn>| 지정된 된 서식 파일에 따라 열에 각 항목을 표시 하는 열.</xref:System.Web.UI.WebControls.TemplateColumn> 예를 들어 이미지를 표시 하는 열의 내용을 제어할 수 있습니다. |      > [!NOTE] >는 <xref:System.Web.UI.WebControls.DataGridColumn>클래스는 나열 된 열 클래스에 대 한 기본 클래스입니다.</xref:System.Web.UI.WebControls.DataGridColumn> DataGridColumnCollection 컬렉션에 직접 사용 되지 않습니다."
  example:
  - "The following code example demonstrates how to use the DataGridColumnCollection collection to dynamically add a column to the <xref:System.Web.UI.WebControls.DataGrid> control. Note that the <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> property of the <xref:System.Web.UI.WebControls.DataGrid> control is an instance of the DataGridColumnCollection class.  \n  \n [!code-cs[DataGridCtor#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_336_1.aspx)]\n [!code-vb[DataGridCtor#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_336_1.aspx)]"
  syntax:
    content: 'public sealed class DataGridColumnCollection : System.Collections.ICollection, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGridColumnCollection.#ctor(System.Web.UI.WebControls.DataGrid,System.Collections.ArrayList)
  id: '#ctor(System.Web.UI.WebControls.DataGrid,System.Collections.ArrayList)'
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  langs:
  - csharp
  name: DataGridColumnCollection(DataGrid,ArrayList)
  nameWithType: DataGridColumnCollection.DataGridColumnCollection(DataGrid,ArrayList)
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.DataGridColumnCollection(DataGrid,ArrayList)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref> 클래스입니다."
  remarks: "이 생성자를 사용 하 여 만들고 <xref:System.Web.UI.WebControls.DataGridColumnCollection>클래스</xref:System.Web.UI.WebControls.DataGridColumnCollection> 의 새 인스턴스를 초기화 합니다."
  example:
  - "The following code example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.DataGridColumnCollection> class.  \n  \n [!code-vb[Classic DataGridColumnCollection.DataGridColumnCollection Example#1](~/add/codesnippet/visualbasic/9d53f500-b633-4f2a-8ee5-_1.vb)]\n [!code-cs[Classic DataGridColumnCollection.DataGridColumnCollection Example#1](~/add/codesnippet/csharp/9d53f500-b633-4f2a-8ee5-_1.cs)]"
  syntax:
    content: public DataGridColumnCollection (System.Web.UI.WebControls.DataGrid owner, System.Collections.ArrayList columns);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.DataGrid
      description: "<xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 이 컬렉션에 해당 하는 컨트롤입니다."
    - id: columns
      type: System.Collections.ArrayList
      description: "A <xref href=&quot;System.Collections.ArrayList&quot;> </xref> 열의 컬렉션을 저장 하는 합니다."
  overload: System.Web.UI.WebControls.DataGridColumnCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGridColumnCollection.Add(System.Web.UI.WebControls.DataGridColumn)
  id: Add(System.Web.UI.WebControls.DataGridColumn)
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  langs:
  - csharp
  name: Add(DataGridColumn)
  nameWithType: DataGridColumnCollection.Add(DataGridColumn)
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.Add(DataGridColumn)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 추가 <xref href=&quot;System.Web.UI.WebControls.DataGridColumn&quot;> </xref>-파생 열 개체의 끝에는 <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref> 컬렉션입니다."
  remarks: "이 메서드를 사용 하 여 추가 하는 <xref:System.Web.UI.WebControls.DataGridColumn>-파생 열 개체의 끝에는 <xref:System.Web.UI.WebControls.DataGridColumnCollection>컬렉션.</xref:System.Web.UI.WebControls.DataGridColumnCollection> </xref:System.Web.UI.WebControls.DataGridColumn>       <xref:System.Web.UI.WebControls.DataGrid>컨트롤의 내용을 저장 하지 않습니다는 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A>뷰 상태에 대 한 컬렉션입니다.</xref:System.Web.UI.WebControls.DataGrid.Columns%2A> </xref:System.Web.UI.WebControls.DataGrid> 를 추가 하거나 열을 동적으로 제거 하려면 하면 프로그래밍 방식으로 추가 하거나 제거 해야 열 페이지를 새로 고칠 때마다 합니다. 제공 된 `Page_Init` 함수를 추가 하거나 제거 하기 전에 열은 <xref:System.Web.UI.WebControls.DataGrid>컨트롤의 상태가 다시 로드 하 고 다시 빌드되기 수.</xref:System.Web.UI.WebControls.DataGrid> 그렇지 않으면 변경 내용이 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A>컬렉션에 반영 되지 않습니다는 <xref:System.Web.UI.WebControls.DataGrid>표시 될 때 제어.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.Columns%2A>      > [!NOTE] > 프로그래밍 방식으로 열을 추가 하거나 열을 제거 수 있지만 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A>의 컬렉션은 <xref:System.Web.UI.WebControls.DataGrid>는 정적으로 열이 나열을 사용 하 여 보다 쉽게 제어가 <xref:System.Web.UI.WebControls.DataGridColumn.Visible%2A>각 열을 표시 하거나 숨기려면 속성.</xref:System.Web.UI.WebControls.DataGridColumn.Visible%2A> </xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.Columns%2A>"
  example:
  - "The following code example demonstrates how to use the Add method to dynamically add a column to the <xref:System.Web.UI.WebControls.DataGrid> control. Note that the <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> property of the <xref:System.Web.UI.WebControls.DataGrid> control is an instance of the <xref:System.Web.UI.WebControls.DataGridColumnCollection> class.  \n  \n [!code-cs[DataGridCtor#1](~/add/codesnippet/csharp/d6773162-9b7b-4897-827e-_1.aspx)]\n [!code-vb[DataGridCtor#1](~/add/codesnippet/visualbasic/d6773162-9b7b-4897-827e-_1.aspx)]"
  syntax:
    content: public void Add (System.Web.UI.WebControls.DataGridColumn column);
    parameters:
    - id: column
      type: System.Web.UI.WebControls.DataGridColumn
      description: "<xref href=&quot;System.Web.UI.WebControls.DataGridColumn&quot;> </xref>-파생 열 개체를 추가 하는 <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataGridColumnCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGridColumnCollection.AddAt(System.Int32,System.Web.UI.WebControls.DataGridColumn)
  id: AddAt(System.Int32,System.Web.UI.WebControls.DataGridColumn)
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  langs:
  - csharp
  name: AddAt(Int32,DataGridColumn)
  nameWithType: DataGridColumnCollection.AddAt(Int32,DataGridColumn)
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.AddAt(Int32,DataGridColumn)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "삽입 한 <xref href=&quot;System.Web.UI.WebControls.DataGridColumn&quot;> </xref>-파생 열 개체의 <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref> 컬렉션 내의 지정한 인덱스에 있습니다."
  remarks: "이 메서드를 사용 하 여 삽입 한 <xref:System.Web.UI.WebControls.DataGridColumn>-파생 열 개체의 지정 된 인덱스 위치에는 <xref:System.Web.UI.WebControls.DataGridColumnCollection>컬렉션.</xref:System.Web.UI.WebControls.DataGridColumnCollection> </xref:System.Web.UI.WebControls.DataGridColumn>       <xref:System.Web.UI.WebControls.DataGrid>컨트롤의 내용을 저장 하지 않습니다는 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A>뷰 상태에 대 한 컬렉션입니다.</xref:System.Web.UI.WebControls.DataGrid.Columns%2A> </xref:System.Web.UI.WebControls.DataGrid> 를 추가 하거나 열을 동적으로 제거 하려면 하면 프로그래밍 방식으로 추가 하거나 제거 해야 열 페이지를 새로 고칠 때마다 합니다. 제공 된 `Page_Init` 함수를 추가 하거나 제거 하기 전에 열은 <xref:System.Web.UI.WebControls.DataGrid>컨트롤의 상태가 다시 로드 하 고 다시 빌드되기 수.</xref:System.Web.UI.WebControls.DataGrid> 그렇지 않으면 변경 내용이 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A>컬렉션에 반영 되지 않습니다는 <xref:System.Web.UI.WebControls.DataGrid>표시 될 때 제어.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.Columns%2A>      > [!NOTE] > 프로그래밍 방식으로 열을 추가 하거나 열을 제거 수 있지만 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A>의 컬렉션은 <xref:System.Web.UI.WebControls.DataGrid>는 정적으로 열이 나열을 사용 하 여 보다 쉽게 제어가 <xref:System.Web.UI.WebControls.DataGridColumn.Visible%2A>각 열을 표시 하거나 숨기려면 속성.</xref:System.Web.UI.WebControls.DataGridColumn.Visible%2A> </xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.Columns%2A>"
  example:
  - "The following code example demonstrates how to use the AddAt method to dynamically add a column to the <xref:System.Web.UI.WebControls.DataGrid> control. Note that the <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> property of the <xref:System.Web.UI.WebControls.DataGrid> control is an instance of the <xref:System.Web.UI.WebControls.DataGridColumnCollection> collection.  \n  \n [!code-vb[Classic DataGridColumnCollection.AddAt Example#1](~/add/codesnippet/visualbasic/a27592b9-b814-4b38-b9d1-_1.aspx)]\n [!code-cs[Classic DataGridColumnCollection.AddAt Example#1](~/add/codesnippet/csharp/a27592b9-b814-4b38-b9d1-_1.aspx)]"
  syntax:
    content: public void AddAt (int index, System.Web.UI.WebControls.DataGridColumn column);
    parameters:
    - id: index
      type: System.Int32
      description: "인덱스 위치는 <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref> 삽입 하는 <xref href=&quot;System.Web.UI.WebControls.DataGridColumn&quot;> </xref>-파생 열입니다."
    - id: column
      type: System.Web.UI.WebControls.DataGridColumn
      description: "<xref href=&quot;System.Web.UI.WebControls.DataGridColumn&quot;> </xref>-파생 열에 삽입 하는 <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataGridColumnCollection.AddAt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>column</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGridColumnCollection.Clear
  id: Clear
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: DataGridColumnCollection.Clear()
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "모든 제거 <xref href=&quot;System.Web.UI.WebControls.DataGridColumn&quot;> </xref>-파생 열 개체의 <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref> 컬렉션입니다."
  remarks: "모든 제거 하려면이 메서드를 사용 하 여 <xref:System.Web.UI.WebControls.DataGridColumn>-파생 열 개체는 <xref:System.Web.UI.WebControls.DataGridColumnCollection>컬렉션.</xref:System.Web.UI.WebControls.DataGridColumnCollection> </xref:System.Web.UI.WebControls.DataGridColumn>      > [!NOTE] >는 <xref:System.Web.UI.WebControls.TableRowCollection.Count%2A>자동으로 속성이 `0` 후이 메서드를 사용 합니다.</xref:System.Web.UI.WebControls.TableRowCollection.Count%2A>"
  example:
  - "The following code example demonstrates how to use the Clear method to empty the <xref:System.Web.UI.WebControls.DataGridColumnCollection> collection before adding new columns to the collection.  \n  \n [!code-cs[Classic DataGridColumnCollection.Clear Example#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_119_1.aspx)]\n [!code-vb[Classic DataGridColumnCollection.Clear Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_119_1.aspx)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.WebControls.DataGridColumnCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGridColumnCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: DataGridColumnCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "항목을 복사는 <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref> 지정 된 컬렉션 &lt;xref:System.Array?displayProperty=fullName&gt;의 지정된 된 인덱스에서 시작 하는 &lt;xref:System.Array?displayProperty=fullName&gt;합니다."
  remarks: "내용을 복사 하려면이 메서드를 사용 하 여는 <xref:System.Web.UI.WebControls.DataGridColumnCollection>여 지정 된 컬렉션 <xref:System.Array?displayProperty=fullName>지정된 된 인덱스부터 시작 합니다.</xref:System.Array?displayProperty=fullName> </xref:System.Web.UI.WebControls.DataGridColumnCollection>      > [!NOTE] >는 `array` 매개 변수는&0;부터 시작 <xref:System.Array?displayProperty=fullName>.</xref:System.Array?displayProperty=fullName> 이어야 합니다."
  example:
  - "The following code example demonstrates how to use the CopyTo method to copy the contents of the <xref:System.Web.UI.WebControls.DataGridColumnCollection> collection to an array of <xref:System.Web.UI.WebControls.DataGridColumn> objects.  \n  \n [!code-vb[Classic DataGridColumnCollection.CopyTo Example#1](~/add/codesnippet/visualbasic/3afafdff-8022-4a7b-90d5-_1.aspx)]\n [!code-cs[Classic DataGridColumnCollection.CopyTo Example#1](~/add/codesnippet/csharp/3afafdff-8022-4a7b-90d5-_1.aspx)]"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "0부터 시작 &lt;xref:System.Array?displayProperty=fullName&gt; 에서 복사한 항목을 수신 하는 <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref>합니다."
    - id: index
      type: System.Int32
      description: "지정 된 첫 번째 위치 &lt;xref:System.Array?displayProperty=fullName&gt; 복사한 내용을 받을 수 있습니다."
  overload: System.Web.UI.WebControls.DataGridColumnCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGridColumnCollection.Count
  id: Count
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  langs:
  - csharp
  name: Count
  nameWithType: DataGridColumnCollection.Count
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "열 수를 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref> 컬렉션입니다."
  remarks: "이 속성을 사용 하 여에 있는 열의 수를 결정 하는 <xref:System.Web.UI.WebControls.DataGridColumnCollection>컬렉션.</xref:System.Web.UI.WebControls.DataGridColumnCollection> Count 속성 컬렉션을 반복할 때 컬렉션의 상한을 결정 하 일반적으로 사용 됩니다."
  example:
  - "The following code example demonstrates how to use the Count property to determine the upper bound of the <xref:System.Web.UI.WebControls.DataGridColumnCollection> collection. This value is then used to iterate though the collection.  \n  \n [!code-vb[classic datagridcolumncollection.this example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_80_1.aspx)]\n [!code-cs[classic datagridcolumncollection.this example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_80_1.aspx)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "에 있는 열의 수는 <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataGridColumnCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGridColumnCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DataGridColumnCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "반환은 &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt; 모두 포함 하는 인터페이스는 <xref href=&quot;System.Web.UI.WebControls.DataGridColumn&quot;> </xref>-파생 열 개체에는 <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref> 컬렉션입니다."
  remarks: "이 메서드를 만드는 데는 <xref:System.Collections.IEnumerator?displayProperty=fullName>각 항목 얻으려고 쉽게 반복할 수 있는 인터페이스는 <xref:System.Web.UI.WebControls.DataGridColumnCollection>컬렉션.</xref:System.Web.UI.WebControls.DataGridColumnCollection> </xref:System.Collections.IEnumerator?displayProperty=fullName>       사용 하 여는 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>컬렉션에서 항목을 현재 가져올 속성을 가리키는.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>       사용 하 여는 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>컬렉션의 다음 항목으로 이동 하는 메서드.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>       사용 하 여는 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>초기 위치에 열거자를 이동 하는 메서드.</xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>      > [!NOTE] >는 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>만든 후에 메서드를 호출 해야는 <xref:System.Collections.IEnumerator?displayProperty=fullName>또는 개체를 사용 하 여 후는 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>열거자는 컬렉션의 첫 번째 항목을 이동 하는 메서드.</xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> </xref:System.Collections.IEnumerator?displayProperty=fullName> </xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> 그렇지 않은 경우으로 표시 되는 항목의 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>속성이 정의 되지 않습니다.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use the GetEnumerator method to create a <xref:System.Collections.IEnumerator?displayProperty=fullName> interface that can be iterated though to display the contents of the <xref:System.Web.UI.WebControls.DataGridColumnCollection> collection.  \n  \n [!code-vb[Classic DataGridColumnCollection.GetEnumerator Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_48_1.aspx)]\n [!code-cs[Classic DataGridColumnCollection.GetEnumerator Example#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_48_1.aspx)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "A &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt; 모두 포함 하는 인터페이스 <xref href=&quot;System.Web.UI.WebControls.DataGridColumn&quot;> </xref>-파생 열 개체에는 <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataGridColumnCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGridColumnCollection.IndexOf(System.Web.UI.WebControls.DataGridColumn)
  id: IndexOf(System.Web.UI.WebControls.DataGridColumn)
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  langs:
  - csharp
  name: IndexOf(DataGridColumn)
  nameWithType: DataGridColumnCollection.IndexOf(DataGridColumn)
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.IndexOf(DataGridColumn)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 인덱스를 반환 <xref href=&quot;System.Web.UI.WebControls.DataGridColumn&quot;> </xref>-파생 열 개체를는 <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref> 컬렉션입니다."
  remarks: "지정 된 인덱스 번호를 확인 하려면이 메서드를 사용 하 여 <xref:System.Web.UI.WebControls.DataGridColumn>-파생 열 개체의 <xref:System.Web.UI.WebControls.DataGridColumnCollection>컬렉션.</xref:System.Web.UI.WebControls.DataGridColumnCollection> </xref:System.Web.UI.WebControls.DataGridColumn> 하는 경우 지정 된 <xref:System.Web.UI.WebControls.DataGridColumn>-개체가 파생된 열이 발견 되지 않으면 인덱스는 `-1` 반환 됩니다.</xref:System.Web.UI.WebControls.DataGridColumn>"
  example:
  - "The following code example demonstrates how to use the IndexOf method to determine the index of a <xref:System.Web.UI.WebControls.DataGridColumn>-derived object in a <xref:System.Web.UI.WebControls.DataGridColumnCollection> collection.  \n  \n [!code-vb[Classic DataGridColumnCollection.IndexOf Example#1](~/add/codesnippet/visualbasic/7249da23-cbd6-4b32-b7b3-_1.aspx)]\n [!code-cs[Classic DataGridColumnCollection.IndexOf Example#1](~/add/codesnippet/csharp/7249da23-cbd6-4b32-b7b3-_1.aspx)]"
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.DataGridColumn column);
    parameters:
    - id: column
      type: System.Web.UI.WebControls.DataGridColumn
      description: "<xref href=&quot;System.Web.UI.WebControls.DataGridColumn&quot;> </xref>-파생 열에서 검색할는 <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref>합니다."
    return:
      type: System.Int32
      description: "지정 된 인덱스 위치 <xref href=&quot;System.Web.UI.WebControls.DataGridColumn&quot;> </xref>-파생 열의 <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_-1&quot; name=&quot;-1&quot; href=&quot;&quot;> </xref>를 나타내는 지정 된 <xref href=&quot;System.Web.UI.WebControls.DataGridColumn&quot;> </xref>-파생된 개체를 찾을 수 없습니다."
  overload: System.Web.UI.WebControls.DataGridColumnCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGridColumnCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: DataGridColumnCollection.IsReadOnly
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져옵니다 있는지 여부를 열에는 <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref> 컬렉션을 수정할 수 있습니다."
  remarks: "이 속성은 항상 반환 `false` 임을 나타내는 <xref:System.Web.UI.WebControls.DataGridColumnCollection>모든 경우에에서 컬렉션에 쓸 수 있습니다.</xref:System.Web.UI.WebControls.DataGridColumnCollection>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>모든 경우"
  overload: System.Web.UI.WebControls.DataGridColumnCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGridColumnCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: DataGridColumnCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 액세스 여부를 나타내는 값을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref> 컬렉션이 동기화 되어 스레드로부터 안전 하 게 보호 합니다."
  remarks: "이 속성에서 파생 되는 <xref:System.Collections.ICollection?displayProperty=fullName>클래스 및 항상 반환 하도록 재정의 `false`.</xref:System.Collections.ICollection?displayProperty=fullName>       IsSynchronized 속성에 대 한 자세한 내용은 참조는 <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>의 속성은 <xref:System.Collections.ICollection?displayProperty=fullName>인터페이스.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>모든 경우"
  overload: System.Web.UI.WebControls.DataGridColumnCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGridColumnCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataGridColumnCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataGridColumn&quot;> </xref>-파생 열 개체를는 <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref> 컬렉션 내의 지정한 인덱스에 있습니다."
  remarks: "이 인덱서를 사용 하 여 한 <xref:System.Web.UI.WebControls.DataGridColumn>-파생 열 개체를는 <xref:System.Web.UI.WebControls.DataGridColumnCollection>배열 표기법을 사용 하 여 지정된 된 인덱스에 컬렉션.</xref:System.Web.UI.WebControls.DataGridColumnCollection> </xref:System.Web.UI.WebControls.DataGridColumn>"
  example:
  - "The following code example demonstrates how to use the indexer to get a <xref:System.Web.UI.WebControls.DataGridColumn>-derived column object from the <xref:System.Web.UI.WebControls.DataGridColumnCollection> collection. The heading text from the <xref:System.Web.UI.WebControls.DataGridColumn>-derived column object is then displayed on the Web page for each item in the collection.  \n  \n [!code-vb[classic datagridcolumncollection.this example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_716_1.aspx)]\n [!code-cs[classic datagridcolumncollection.this example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_716_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.DataGridColumn this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "인덱스는 <xref href=&quot;System.Web.UI.WebControls.DataGridColumn&quot;> </xref>-파생 열의 <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref> 를 검색 합니다."
    return:
      type: System.Web.UI.WebControls.DataGridColumn
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataGridColumn&quot;> </xref>-파생 열의 <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref> 지정 된 인덱스입니다."
  overload: System.Web.UI.WebControls.DataGridColumnCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGridColumnCollection.Remove(System.Web.UI.WebControls.DataGridColumn)
  id: Remove(System.Web.UI.WebControls.DataGridColumn)
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  langs:
  - csharp
  name: Remove(DataGridColumn)
  nameWithType: DataGridColumnCollection.Remove(DataGridColumn)
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.Remove(DataGridColumn)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 제거 <xref href=&quot;System.Web.UI.WebControls.DataGridColumn&quot;> </xref>-파생 열 개체를는 <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref> 컬렉션입니다."
  remarks: "이 메서드를 사용 하 여 지정 된 제거 <xref:System.Web.UI.WebControls.DataGridColumn>-파생 열 개체를 한 <xref:System.Web.UI.WebControls.DataGridColumnCollection>컬렉션.</xref:System.Web.UI.WebControls.DataGridColumnCollection> </xref:System.Web.UI.WebControls.DataGridColumn>       <xref:System.Web.UI.WebControls.DataGrid>컨트롤의 내용을 저장 하지 않습니다는 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A>뷰 상태에 대 한 컬렉션입니다.</xref:System.Web.UI.WebControls.DataGrid.Columns%2A> </xref:System.Web.UI.WebControls.DataGrid> 를 추가 하거나 열을 동적으로 제거 하려면 하면 프로그래밍 방식으로 추가 하거나 제거 해야 열 페이지를 새로 고칠 때마다 합니다. 제공 된 `Page_Init` 함수를 추가 하거나 제거 하기 전에 열은 <xref:System.Web.UI.WebControls.DataGrid>컨트롤의 상태가 다시 로드 하 고 다시 빌드되기 수.</xref:System.Web.UI.WebControls.DataGrid> 그렇지 않으면 변경 내용이 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A>컬렉션에 반영 되지 않습니다는 <xref:System.Web.UI.WebControls.DataGrid>표시 될 때 제어.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.Columns%2A>      > [!NOTE] > 프로그래밍 방식으로 열을 추가 하거나 열을 제거 수 있지만 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A>의 컬렉션은 <xref:System.Web.UI.WebControls.DataGrid>는 정적으로 열이 나열을 사용 하 여 보다 쉽게 제어가 <xref:System.Web.UI.WebControls.DataGridColumn.Visible%2A>각 열을 표시 하거나 숨기려면 속성.</xref:System.Web.UI.WebControls.DataGridColumn.Visible%2A> </xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.Columns%2A>"
  example:
  - "The following code example demonstrates how to use the Remove method to remove a column from the <xref:System.Web.UI.WebControls.DataGridColumnCollection> collection. Note that the <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> property of the <xref:System.Web.UI.WebControls.DataGrid> control is the <xref:System.Web.UI.WebControls.DataGridColumnCollection> collection.  \n  \n [!code-cs[Classic DataGridColumnCollection.Remove Example#1](~/add/codesnippet/csharp/643f695d-a1cb-471f-810b-_1.aspx)]\n [!code-vb[Classic DataGridColumnCollection.Remove Example#1](~/add/codesnippet/visualbasic/643f695d-a1cb-471f-810b-_1.aspx)]"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.DataGridColumn column);
    parameters:
    - id: column
      type: System.Web.UI.WebControls.DataGridColumn
      description: "<xref href=&quot;System.Web.UI.WebControls.DataGridColumn&quot;> </xref>-파생 열에서 제거 하 고 <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataGridColumnCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGridColumnCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: DataGridColumnCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "제거는 <xref href=&quot;System.Web.UI.WebControls.DataGridColumn&quot;> </xref>-파생 열 개체를는 <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref> 컬렉션 내의 지정한 인덱스에 있습니다."
  remarks: "이 메서드를 사용 하 여 제거 하는 <xref:System.Web.UI.WebControls.DataGridColumn>-파생 열 개체를 한 <xref:System.Web.UI.WebControls.DataGridColumnCollection>컬렉션 내의 지정한 인덱스에.</xref:System.Web.UI.WebControls.DataGridColumnCollection> </xref:System.Web.UI.WebControls.DataGridColumn>       <xref:System.Web.UI.WebControls.DataGrid>컨트롤의 내용을 저장 하지 않습니다는 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A>뷰 상태에 대 한 컬렉션입니다.</xref:System.Web.UI.WebControls.DataGrid.Columns%2A> </xref:System.Web.UI.WebControls.DataGrid> 를 추가 하거나 열을 동적으로 제거 하려면 하면 프로그래밍 방식으로 추가 하거나 제거 해야 열 페이지를 새로 고칠 때마다 합니다. 제공 된 `Page_Init` 함수를 추가 하거나 제거 하기 전에 열은 <xref:System.Web.UI.WebControls.DataGrid>컨트롤의 상태가 다시 로드 하 고 다시 빌드되기 수.</xref:System.Web.UI.WebControls.DataGrid> 그렇지 않으면 변경 내용이 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A>컬렉션에 반영 되지 않습니다는 <xref:System.Web.UI.WebControls.DataGrid>표시 될 때 제어.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.Columns%2A>      > [!NOTE] > 프로그래밍 방식으로 열을 추가 하거나 열을 제거 수 있지만 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A>의 컬렉션은 <xref:System.Web.UI.WebControls.DataGrid>는 정적으로 열이 나열을 사용 하 여 보다 쉽게 제어가 <xref:System.Web.UI.WebControls.DataGridColumn.Visible%2A>각 열을 표시 하거나 숨기려면 속성.</xref:System.Web.UI.WebControls.DataGridColumn.Visible%2A> </xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.Columns%2A>"
  example:
  - "The following code example demonstrates how to use the RemoveAt method to remove a column from the <xref:System.Web.UI.WebControls.DataGridColumnCollection> collection. Note that the <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> property of the <xref:System.Web.UI.WebControls.DataGrid> control is the <xref:System.Web.UI.WebControls.DataGridColumnCollection> collection.  \n  \n [!code-cs[Classic DataGridColumnCollection.RemoveAt Example#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_78_1.aspx)]\n [!code-vb[Classic DataGridColumnCollection.RemoveAt Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_78_1.aspx)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "인덱스는 <xref href=&quot;System.Web.UI.WebControls.DataGridColumn&quot;> </xref>-파생 열의 <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref> 를 제거 합니다."
  overload: System.Web.UI.WebControls.DataGridColumnCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>보다 작은 <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref> 보다 큰 <xref:System.Web.UI.WebControls.DataGridColumnCollection.Count*>합니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: DataGridColumnCollection.SyncRoot
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref> 컬렉션입니다."
  remarks: "이 구현에서 반환 되는 개체는 <xref:System.Web.UI.WebControls.DataGridColumnCollection>개체입니다.</xref:System.Web.UI.WebControls.DataGridColumnCollection>       SyncRoot 속성에 대 한 자세한 내용은 참조는 <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>의 속성은 <xref:System.Collections.ICollection?displayProperty=fullName>인터페이스.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt; 컬렉션에 대 한 액세스를 동기화에 사용할 수 있는 합니다."
  overload: System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: DataGridColumnCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컬렉션에서 해당 뷰 상태의 변경 내용을 추적 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: "IStateManager.IsTrackingViewState 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 한 <xref:System.Web.UI.WebControls.DataGridColumnCollection>인스턴스로 캐스팅 되는 <xref:System.Web.UI.IStateManager>인터페이스.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.DataGridColumnCollection>"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref> 개체에서 해당 뷰 상태의 변경 내용을 추적, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: DataGridColumnCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이전에 저장 된 상태를 로드 합니다."
  syntax:
    content: void IStateManager.LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "<xref:System.Object>컨트롤에 대 한 저장 된 뷰 상태 값이 들어 있는.</xref:System.Object>"
  overload: System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: DataGridColumnCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "상태 변경 내용을 포함 하는 개체를 반환 합니다."
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>컨트롤에 대 한 저장 된 뷰 상태 값이 들어 있는.</xref:System.Object>"
  overload: System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: DataGridColumnCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "상태 변경 내용 추적을 시작 합니다."
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.WebControls.DataGridColumnCollection.#ctor(System.Web.UI.WebControls.DataGrid,System.Collections.ArrayList)
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: DataGridColumnCollection(DataGrid,ArrayList)
  nameWithType: DataGridColumnCollection.DataGridColumnCollection(DataGrid,ArrayList)
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.DataGridColumnCollection(DataGrid,ArrayList)
- uid: System.Web.UI.WebControls.DataGrid
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataGrid
  nameWithType: DataGrid
  fullName: System.Web.UI.WebControls.DataGrid
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Web.UI.WebControls.DataGridColumnCollection.Add(System.Web.UI.WebControls.DataGridColumn)
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: Add(DataGridColumn)
  nameWithType: DataGridColumnCollection.Add(DataGridColumn)
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.Add(DataGridColumn)
- uid: System.Web.UI.WebControls.DataGridColumn
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataGridColumn
  nameWithType: DataGridColumn
  fullName: System.Web.UI.WebControls.DataGridColumn
- uid: System.Web.UI.WebControls.DataGridColumnCollection.AddAt(System.Int32,System.Web.UI.WebControls.DataGridColumn)
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: AddAt(Int32,DataGridColumn)
  nameWithType: DataGridColumnCollection.AddAt(Int32,DataGridColumn)
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.AddAt(Int32,DataGridColumn)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.DataGridColumnCollection.Clear
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: Clear()
  nameWithType: DataGridColumnCollection.Clear()
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.Clear()
- uid: System.Web.UI.WebControls.DataGridColumnCollection.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: DataGridColumnCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.UI.WebControls.DataGridColumnCollection.Count
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: Count
  nameWithType: DataGridColumnCollection.Count
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.Count
- uid: System.Web.UI.WebControls.DataGridColumnCollection.GetEnumerator
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: DataGridColumnCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.DataGridColumnCollection.IndexOf(System.Web.UI.WebControls.DataGridColumn)
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: IndexOf(DataGridColumn)
  nameWithType: DataGridColumnCollection.IndexOf(DataGridColumn)
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.IndexOf(DataGridColumn)
- uid: System.Web.UI.WebControls.DataGridColumnCollection.IsReadOnly
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: DataGridColumnCollection.IsReadOnly
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.DataGridColumnCollection.IsSynchronized
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: DataGridColumnCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.IsSynchronized
- uid: System.Web.UI.WebControls.DataGridColumnCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataGridColumnCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.Item(Int32)
- uid: System.Web.UI.WebControls.DataGridColumnCollection.Remove(System.Web.UI.WebControls.DataGridColumn)
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: Remove(DataGridColumn)
  nameWithType: DataGridColumnCollection.Remove(DataGridColumn)
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.Remove(DataGridColumn)
- uid: System.Web.UI.WebControls.DataGridColumnCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: DataGridColumnCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: SyncRoot
  nameWithType: DataGridColumnCollection.SyncRoot
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot
- uid: System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: DataGridColumnCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: DataGridColumnCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: DataGridColumnCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: DataGridColumnCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.DataGridColumnCollection.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.DataGridColumnCollection.#ctor*
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: DataGridColumnCollection
  nameWithType: DataGridColumnCollection.DataGridColumnCollection
- uid: System.Web.UI.WebControls.DataGridColumnCollection.Add*
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: Add
  nameWithType: DataGridColumnCollection.Add
- uid: System.Web.UI.WebControls.DataGridColumnCollection.AddAt*
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: AddAt
  nameWithType: DataGridColumnCollection.AddAt
- uid: System.Web.UI.WebControls.DataGridColumnCollection.Clear*
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: Clear
  nameWithType: DataGridColumnCollection.Clear
- uid: System.Web.UI.WebControls.DataGridColumnCollection.CopyTo*
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataGridColumnCollection.CopyTo
- uid: System.Web.UI.WebControls.DataGridColumnCollection.Count*
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: Count
  nameWithType: DataGridColumnCollection.Count
- uid: System.Web.UI.WebControls.DataGridColumnCollection.GetEnumerator*
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: DataGridColumnCollection.GetEnumerator
- uid: System.Web.UI.WebControls.DataGridColumnCollection.IndexOf*
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: IndexOf
  nameWithType: DataGridColumnCollection.IndexOf
- uid: System.Web.UI.WebControls.DataGridColumnCollection.IsReadOnly*
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: DataGridColumnCollection.IsReadOnly
- uid: System.Web.UI.WebControls.DataGridColumnCollection.IsSynchronized*
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: DataGridColumnCollection.IsSynchronized
- uid: System.Web.UI.WebControls.DataGridColumnCollection.Item*
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: Item
  nameWithType: DataGridColumnCollection.Item
- uid: System.Web.UI.WebControls.DataGridColumnCollection.Remove*
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: Remove
  nameWithType: DataGridColumnCollection.Remove
- uid: System.Web.UI.WebControls.DataGridColumnCollection.RemoveAt*
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: RemoveAt
  nameWithType: DataGridColumnCollection.RemoveAt
- uid: System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot*
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: SyncRoot
  nameWithType: DataGridColumnCollection.SyncRoot
- uid: System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: DataGridColumnCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: DataGridColumnCollection.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: DataGridColumnCollection.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.DataGridColumnCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: DataGridColumnCollection.System.Web.UI.IStateManager.TrackViewState
