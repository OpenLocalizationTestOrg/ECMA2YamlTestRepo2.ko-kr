### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ITypedList
  id: ITypedList
  children:
  - System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  - System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])
  langs:
  - csharp
  name: ITypedList
  nameWithType: ITypedList
  fullName: System.ComponentModel.ITypedList
  type: Interface
  summary: "바인딩할 개체의 공용 속성에서 속성 바인딩에 사용할 수 있는 다를 바인딩할 수 있는 목록에 대 한 스키마를 검색할 수 있는 기능을 제공 합니다."
  remarks: "예를 들어, 사용 중인 경우에이 인터페이스를 사용 하 여는 <xref:System.Data.DataView>를 나타내는 개체입니다는 `customer` 속성 바인딩할 하려는 테이블을는 `customer` 개체를 <xref:System.Data.DataView>나타내는 <xref:System.Data.DataView>.</xref:System.Data.DataView> 의 속성이 아니라</xref:System.Data.DataView> </xref:System.Data.DataView>       이 인터페이스에 대 한 디자인 타임 지원 바인딩 가능한 목록 필요 하지 않습니다.       런타임 시 또는 디자이너에서 데이터 바인딩 발생할 수 있지만 둘 다에 대 한 규칙이 있습니다. 런타임 시 데이터는 다음에 바인딩할 수 있습니다:- <xref:System.Array>-의 구현자 <xref:System.Collections.IList>구현자에 강력한 형식의 <xref:System.Collections.IList.Item%2A>속성 (즉,는 <xref:System.Type>이외의 <xref:System.Object>).</xref:System.Object> </xref:System.Type> </xref:System.Collections.IList.Item%2A> </xref:System.Collections.IList> </xref:System.Array> 기본 구현 하 여이 수행할 수 있습니다 <xref:System.Collections.IList.Item%2A>개인.</xref:System.Collections.IList.Item%2A> <xref:System.Collections.IList>강력한 형식의 컬렉션의 규칙을 따르는, <xref:System.Collections.CollectionBase>.</xref:System.Collections.CollectionBase> 에서 파생 되어야</xref:System.Collections.IList> 만들려는 경우      -ITypedList 구현 합니다.       디자이너에서 바인딩할 수를 초기화할 수 있습니다 <xref:System.ComponentModel.Component>동일한 규칙에 따라 개체입니다.</xref:System.ComponentModel.Component>       데이터 원본에 대 한 바인딩에 대 한 자세한 내용은 <xref:System.Windows.Forms.Binding?displayProperty=fullName>클래스</xref:System.Windows.Forms.Binding?displayProperty=fullName> 를 참조 하십시오."
  example:
  - "The following code example demonstrates how to implement the ITypedList interface. A generic type named `SortableBindingList` derives from the <xref:System.ComponentModel.BindingList%601> class and implements the ITypedList interface. For a full code listing, see [How to: Implement the ITypedList Interface](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.ComponentModel.ITypedList#1](~/add/codesnippet/csharp/t-system.componentmodel._167_1.cs)]\n [!code-vb[System.ComponentModel.ITypedList#1](~/add/codesnippet/visualbasic/t-system.componentmodel._167_1.vb)]"
  syntax:
    content: public interface ITypedList
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  id: GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: System.ComponentModel.ITypedList
  langs:
  - csharp
  name: GetItemProperties(PropertyDescriptor[])
  nameWithType: ITypedList.GetItemProperties(PropertyDescriptor[])
  fullName: System.ComponentModel.ITypedList.GetItemProperties(PropertyDescriptor[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "반환 된 <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> 데이터에 바인딩하는 데 사용 하는 각 항목의 속성을 나타내는입니다."
  remarks: "경우는 `listAccessors` 매개 변수가 않습니다 `null`, <xref:System.ComponentModel.ITypedList>.</xref:System.ComponentModel.ITypedList> 를 구현 하는 개체에 대 한 검색 하는 컨테이너의 목록을 식별 하는 속성 설명자를 일반적으로 포함 예를 들어 한 <xref:System.Data.DataSet>포함 하는 두 개의 테이블 `myCustomers` 및 `myOrders`, 라는 관계가 형성 된 `myCustOrders`.</xref:System.Data.DataSet> 만드는 경우는 <xref:System.Data.DataView>를 보려면 개체 `myCustomers`, 다음 GetItemProperties 메서드를 호출 하면 `null` 열에 대 한 속성 설명자를 반환 `myCustomers`.</xref:System.Data.DataView> 에 대 한 속성 설명자는 반환 된 속성 설명자 중 하나는 결과적으로, `myCustOrders`대 한 속성 설명자를 포함 하는 목록 접근자 배열 인 GetItemProperties 메서드를 호출 하는 때와 마찬가지로, `myCustOrders` 대 한 속성 설명자를 반환 합니다 `myOrders`합니다."
  example:
  - "The following code example demonstrates how to implement the GetItemProperties method. For a full code listing, see [How to: Implement the ITypedList Interface](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.ComponentModel.ITypedList#3](~/add/codesnippet/csharp/3b46cd55-3314-419e-a8e7-_1.cs)]\n [!code-vb[System.ComponentModel.ITypedList#3](~/add/codesnippet/visualbasic/3b46cd55-3314-419e-a8e7-_1.vb)]"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "배열을 <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> 바인딩 가능한 컬렉션에서 찾을 개체입니다. 이 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> 데이터에 바인딩하는 데 사용 하는 각 항목의 속성을 나타내는입니다."
  overload: System.ComponentModel.ITypedList.GetItemProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])
  id: GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: System.ComponentModel.ITypedList
  langs:
  - csharp
  name: GetListName(PropertyDescriptor[])
  nameWithType: ITypedList.GetListName(PropertyDescriptor[])
  fullName: System.ComponentModel.ITypedList.GetListName(PropertyDescriptor[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "목록의 이름을 반환합니다."
  remarks: "이 메서드는 여는 사용 되지 않는 디자인 타임 프레임 워크에만 사용 <xref:System.Windows.Forms.DataGrid>컨트롤.</xref:System.Windows.Forms.DataGrid>"
  example:
  - "The following code example demonstrates how to implement the GetListName method. For a full code listing, see [How to: Implement the ITypedList Interface](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.ComponentModel.ITypedList#4](~/add/codesnippet/csharp/a1408425-c386-40d6-a339-_1.cs)]\n [!code-vb[System.ComponentModel.ITypedList#4](~/add/codesnippet/visualbasic/a1408425-c386-40d6-a339-_1.vb)]"
  syntax:
    content: public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "배열을 <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> 개체를 목록 이름이 반환 됩니다. 이 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.String
      description: "이름 목록입니다."
  overload: System.ComponentModel.ITypedList.GetListName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: System.ComponentModel.ITypedList
  isExternal: false
  name: GetItemProperties(PropertyDescriptor[])
  nameWithType: ITypedList.GetItemProperties(PropertyDescriptor[])
  fullName: System.ComponentModel.ITypedList.GetItemProperties(PropertyDescriptor[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.PropertyDescriptor[]
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor[]
  spec.csharp:
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: PropertyDescriptor[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: System.ComponentModel.ITypedList
  isExternal: false
  name: GetListName(PropertyDescriptor[])
  nameWithType: ITypedList.GetListName(PropertyDescriptor[])
  fullName: System.ComponentModel.ITypedList.GetListName(PropertyDescriptor[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.ITypedList.GetItemProperties*
  parent: System.ComponentModel.ITypedList
  isExternal: false
  name: GetItemProperties
  nameWithType: ITypedList.GetItemProperties
- uid: System.ComponentModel.ITypedList.GetListName*
  parent: System.ComponentModel.ITypedList
  isExternal: false
  name: GetListName
  nameWithType: ITypedList.GetListName
