### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.HandleExternalEventActivity
  id: HandleExternalEventActivity
  children:
  - System.Workflow.Activities.HandleExternalEventActivity.#ctor
  - System.Workflow.Activities.HandleExternalEventActivity.#ctor(System.String)
  - System.Workflow.Activities.HandleExternalEventActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken
  - System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty
  - System.Workflow.Activities.HandleExternalEventActivity.EventName
  - System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty
  - System.Workflow.Activities.HandleExternalEventActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.HandleExternalEventActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.Activities.HandleExternalEventActivity.Initialize(System.IServiceProvider)
  - System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties
  - System.Workflow.Activities.HandleExternalEventActivity.InterfaceType
  - System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty
  - System.Workflow.Activities.HandleExternalEventActivity.Invoked
  - System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent
  - System.Workflow.Activities.HandleExternalEventActivity.OnClosed(System.IServiceProvider)
  - System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(System.EventArgs)
  - System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings
  - System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty
  - System.Workflow.Activities.HandleExternalEventActivity.Roles
  - System.Workflow.Activities.HandleExternalEventActivity.RolesProperty
  - System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName
  - System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  - System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  - System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  - System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  - System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  langs:
  - csharp
  name: HandleExternalEventActivity
  nameWithType: HandleExternalEventActivity
  fullName: System.Workflow.Activities.HandleExternalEventActivity
  type: Class
  summary: "로컬 서비스에 의해 발생 하는 이벤트를 처리 하는 데 사용 되는 워크플로 통신 활동을 정의 합니다."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]로컬 서비스는 로컬 서비스 인터페이스를 구현 하는 클래스 (로 표시 된 인터페이스 <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) <xref:System.Workflow.Activities.ExternalDataExchangeService>.</xref:System.Workflow.Activities.ExternalDataExchangeService> 에 추가 되 고</xref:System.Workflow.Activities.ExternalDataExchangeAttribute>       HandleExternalEventActivity 데이터를 받을 때 <xref:System.Workflow.Activities.ExternalDataExchangeService>서비스 <xref:System.Workflow.Activities.ExternalDataEventArgs>.</xref:System.Workflow.Activities.ExternalDataEventArgs> 에서 파생 된 이벤트 데이터를 사용 하 여 이벤트를 발생 시킵니다.</xref:System.Workflow.Activities.ExternalDataExchangeService>       HandleExternalEventActivity는 차단 활동입니다.       HandleExternalEventActivity에서 파생 된 클래스를 구현 하지 않아야는 <xref:System.Workflow.ComponentModel.IActivityEventListener%601>인터페이스 파생된 클래스가 올바로 실행 되지 않습니다.</xref:System.Workflow.ComponentModel.IActivityEventListener%601>"
  example:
  - "The following code example shows how to create and set values for the HandleExternalEventActivity class.  This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Raise Event To Load Workflow](http://msdn.microsoft.com/en-us/71330ada-adcd-42a9-8b38-468d8a0cfb80).  \n  \n [!code-cs[wf_samples#160](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#160)]\n [!code-vb[wf_samples#160](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#160)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Invoked")]

      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.HandleExternalEventActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.HandleExternalEventActivityValidator))]

      public class HandleExternalEventActivity : System.Workflow.ComponentModel.Activity, System.Workflow.Activities.IEventActivity, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>, System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  implements:
  - System.Workflow.Activities.IEventActivity
  - System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  - System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  inheritedMembers:
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: HandleExternalEventActivity()
  nameWithType: HandleExternalEventActivity.HandleExternalEventActivity()
  fullName: System.Workflow.Activities.HandleExternalEventActivity.HandleExternalEventActivity()
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Workflow.Activities.HandleExternalEventActivity&quot;> </xref> 클래스입니다."
  remarks: ''
  example:
  - "The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class. This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Raise Event To Load Workflow](http://msdn.microsoft.com/en-us/71330ada-adcd-42a9-8b38-468d8a0cfb80).  \n  \n [!code-cs[wf_samples#160](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#160)]\n [!code-vb[wf_samples#160](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#160)]"
  syntax:
    content: public HandleExternalEventActivity ();
    parameters: []
  overload: System.Workflow.Activities.HandleExternalEventActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: HandleExternalEventActivity(String)
  nameWithType: HandleExternalEventActivity.HandleExternalEventActivity(String)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.HandleExternalEventActivity(String)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Workflow.Activities.HandleExternalEventActivity&quot;> </xref> 클래스 활동의 이름을 사용 합니다."
  syntax:
    content: public HandleExternalEventActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: "활동의 사용자 정의 이름입니다."
  overload: System.Workflow.Activities.HandleExternalEventActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: Cancel(ActivityExecutionContext)
  nameWithType: HandleExternalEventActivity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Cancel(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "이벤트 처리를 취소합니다."
  syntax:
    content: protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> 의 실행 환경을 나타내는 <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>합니다."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> 의 <xref href=&quot;System.Workflow.Activities.HandleExternalEventActivity&quot;> </xref> 요청된 된 작업의 끝입니다."
  overload: System.Workflow.Activities.HandleExternalEventActivity.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken
  id: CorrelationToken
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: CorrelationToken
  nameWithType: HandleExternalEventActivity.CorrelationToken
  fullName: System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "에 바인딩을 가져오거나는 <xref href=&quot;System.Workflow.Runtime.CorrelationToken&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following example shows how to access the `CorrelationToken` property of a `HandleExternalEventActivity`. This example is from the Correlated Local Service SDK sample, from the CorrelatedLocalServiceWorkflow.designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Correlated Local Service Sample](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).  \n  \n [!code-cs[Wf_samples#198](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#198)]\n [!code-vb[Wf_samples#198](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#198)]"
  syntax:
    content: public virtual System.Workflow.Runtime.CorrelationToken CorrelationToken { get; set; }
    return:
      type: System.Workflow.Runtime.CorrelationToken
      description: "이 속성은 올바른 이벤트 상관 관계를 사용 <xref href=&quot;System.Workflow.Activities.IEventActivity&quot;> </xref>-이벤트의 페이로드를 기준으로 활동을 상속 합니다. 예를 들어 경우는 단일 워크플로 인스턴스가 수신 대기 중인 동일한 이벤트의 여러 인스턴스에 대 한 같은 시간에는 <xref uid=&quot;langword_csharp_CorrelationToken&quot; name=&quot;CorrelationToken&quot; href=&quot;&quot;> </xref> 속성은 해당 워크플로 인스턴스의 적절 한 활동으로 이벤트를 라우팅하는 데 사용 합니다.       이 상관 관계를 올바른 워크플로 인스턴스에 이벤트의 상호 일치 하지 않습니다. 이벤트를 명시적 워크플로 인스턴스로 보내는 하 고 사용 하 여 상관 관계를 올바른 워크플로 인스턴스에 의해 이루어진다는 <xref:System.Workflow.Activities.ExternalDataEventArgs.InstanceId*>제대로 올바른 워크플로 인스턴스를 식별 하는 속성.</xref:System.Workflow.Activities.ExternalDataEventArgs.InstanceId*>       [!INCLUDE[crexample](~/add/includes/ajax-current-ext-md.md)]상관 관계 참조는 [상관 관계가 지정 된 로컬 서비스 예제 추가 정보](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd)합니다."
  overload: System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty
  id: CorrelationTokenProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: CorrelationTokenProperty
  nameWithType: HandleExternalEventActivity.CorrelationTokenProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "나타냅니다는 <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> 를 대상으로 하는 <xref:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken*>속성.</xref:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken*>"
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.EventName
  id: EventName
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: EventName
  nameWithType: HandleExternalEventActivity.EventName
  fullName: System.Workflow.Activities.HandleExternalEventActivity.EventName
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "발생된 한 이벤트의 이름을 가져옵니다. 이 속성은 로컬 통신이 발생할 수 있습니다 설정 되어야 합니다."
  remarks: ''
  example:
  - "The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.  This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Raise Event To Load Workflow](http://msdn.microsoft.com/en-us/71330ada-adcd-42a9-8b38-468d8a0cfb80).  \n  \n [!code-cs[wf_samples#160](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#160)]\n [!code-vb[wf_samples#160](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#160)]"
  syntax:
    content: public virtual string EventName { get; set; }
    return:
      type: System.String
      description: "발생된 한 이벤트의 이름입니다."
  overload: System.Workflow.Activities.HandleExternalEventActivity.EventName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty
  id: EventNameProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: EventNameProperty
  nameWithType: HandleExternalEventActivity.EventNameProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "로 표시 된 인터페이스에 정의 된 이벤트의 이름에 해당 하는 <xref href=&quot;System.Workflow.Activities.ExternalDataExchangeAttribute&quot;> </xref>합니다."
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty EventNameProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: Execute(ActivityExecutionContext)
  nameWithType: HandleExternalEventActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Execute(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "실행 하려고 하면는 <xref href=&quot;System.Workflow.Activities.HandleExternalEventActivity&quot;> </xref> 연관는 <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref>합니다."
  syntax:
    content: protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> 연관 된 <xref href=&quot;System.Workflow.Activities.HandleExternalEventActivity&quot;> </xref>합니다."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> 의 <xref href=&quot;System.Workflow.Activities.HandleExternalEventActivity&quot;> </xref> 요청된 된 작업의 끝입니다."
  overload: System.Workflow.Activities.HandleExternalEventActivity.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  id: HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: HandleFault(ActivityExecutionContext,Exception)
  nameWithType: HandleExternalEventActivity.HandleFault(ActivityExecutionContext,Exception)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.HandleFault(ActivityExecutionContext,Exception)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "이 인스턴스의 실행 컨텍스트 내에서 예외가 발생 하는 경우 호출 됩니다."
  syntax:
    content: protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> 이 인스턴스에 대 한 합니다."
    - id: exception
      type: System.Exception
      description: "<xref:System.Exception>이 오류를 발생 시킨.</xref:System.Exception>"
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionStatus&quot;> </xref> 이 인스턴스를 취소 하려고 시도 하는 결과입니다."
  overload: System.Workflow.Activities.HandleExternalEventActivity.HandleFault*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>exception</code>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.Initialize(System.IServiceProvider)
  id: Initialize(System.IServiceProvider)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: Initialize(IServiceProvider)
  nameWithType: HandleExternalEventActivity.Initialize(IServiceProvider)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Initialize(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "서비스 공급자를 사용 하 여 이벤트를 초기화합니다."
  syntax:
    content: protected override sealed void Initialize (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "<xref:System.IServiceProvider>해당 클래스 사용자 지정 지원을 제공합니다 하는</xref:System.IServiceProvider>"
  overload: System.Workflow.Activities.HandleExternalEventActivity.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>provider</code>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서), 서비스 공급자의 형식이 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>), 또는 서비스 공급자에 대 한 프록시는 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)."
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties
  id: InitializeProperties
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: InitializeProperties()
  nameWithType: HandleExternalEventActivity.InitializeProperties()
  fullName: System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "종속성 속성에 대 한 초기화를 수행합니다."
  remarks: "이 메서드를 초기화는 <xref:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken%2A>속성을 확인는 <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A>및 <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A>속성 설정 되 고에서 참조 되는 이벤트 확인의 <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A>속성에서 참조 하는 인터페이스에서 확인할 수 있습니다는 <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A>속성.</xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A> </xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> </xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> </xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A> </xref:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken%2A>"
  syntax:
    content: protected override void InitializeProperties ();
    parameters: []
  overload: System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.InterfaceType
  id: InterfaceType
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: InterfaceType
  nameWithType: HandleExternalEventActivity.InterfaceType
  fullName: System.Workflow.Activities.HandleExternalEventActivity.InterfaceType
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "가져오거나는 <xref href=&quot;System.Workflow.Activities.ExternalDataExchangeAttribute&quot;> </xref> 인터페이스 형식의 이벤트를 처리 하는 로컬 서비스 특성을 사용 합니다. 이 속성은 로컬 통신이 발생할 수 있습니다 설정 되어야 합니다."
  remarks: ''
  example:
  - "The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.  This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Raise Event To Load Workflow](http://msdn.microsoft.com/en-us/71330ada-adcd-42a9-8b38-468d8a0cfb80).  \n  \n [!code-cs[wf_samples#160](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#160)]\n [!code-vb[wf_samples#160](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#160)]"
  syntax:
    content: public virtual Type InterfaceType { get; set; }
    return:
      type: System.Type
      description: "이벤트를 처리 하는 로컬 서비스의 인터페이스 형식입니다."
  overload: System.Workflow.Activities.HandleExternalEventActivity.InterfaceType*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty
  id: InterfaceTypeProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: InterfaceTypeProperty
  nameWithType: HandleExternalEventActivity.InterfaceTypeProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "로 표시 된 인터페이스의 이름에 해당 하는 <xref href=&quot;System.Workflow.Activities.ExternalDataExchangeAttribute&quot;> </xref>합니다."
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.Invoked
  id: Invoked
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: Invoked
  nameWithType: HandleExternalEventActivity.Invoked
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Invoked
  type: Event
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "외부 이벤트를 받을 때 발생 합니다."
  remarks: ''
  example:
  - "The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.  This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Raise Event To Load Workflow](http://msdn.microsoft.com/en-us/71330ada-adcd-42a9-8b38-468d8a0cfb80).  \n  \n [!code-cs[wf_samples#160](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#160)]\n [!code-vb[wf_samples#160](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#160)]"
  syntax:
    content: public event EventHandler<System.Workflow.Activities.ExternalDataEventArgs> Invoked;
    return:
      type: System.EventHandler{System.Workflow.Activities.ExternalDataEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent
  id: InvokedEvent
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: InvokedEvent
  nameWithType: HandleExternalEventActivity.InvokedEvent
  fullName: System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "활동이 로컬 서비스에서 예상된 된 이벤트를 받으면 실행 되는 이벤트 대리자를 정의 합니다."
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty InvokedEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.OnClosed(System.IServiceProvider)
  id: OnClosed(System.IServiceProvider)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: OnClosed(IServiceProvider)
  nameWithType: HandleExternalEventActivity.OnClosed(IServiceProvider)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.OnClosed(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "활동의 전환의 일부로 워크플로 런타임에 의해 호출 된 <xref uid=&quot;langword_csharp_Closed&quot; name=&quot;Closed&quot; href=&quot;&quot;> </xref> 상태입니다."
  remarks: "이 메서드는 실행 중에 사용 된 리소스를 정리할 수 있도록 활동을 제공 합니다."
  syntax:
    content: protected override void OnClosed (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "<xref:System.IServiceProvider>서비스를 제공 하는.</xref:System.IServiceProvider>"
  overload: System.Workflow.Activities.HandleExternalEventActivity.OnClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(System.EventArgs)
  id: OnInvoked(System.EventArgs)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: OnInvoked(EventArgs)
  nameWithType: HandleExternalEventActivity.OnInvoked(EventArgs)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(EventArgs)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "파생된 클래스가 인바운드 처리할 수 있도록 외부 이벤트를 받을 직후에 호출 <xref:System.EventArgs>활동이 종료 되기 전에.</xref:System.EventArgs>"
  remarks: "받은에서 멤버를 추출 하는 파생된 클래스에서 OnInvoked 메서드를 사용 하는 가장 일반적인 <xref:System.EventArgs>파생 클래스 활동의 공용 속성의 값을 설정 합니다.</xref:System.EventArgs>"
  example:
  - "The following example shows an implementation of the `OnInvoked` method. This example is from the Correlated Local Service SDK sample, from the TaskCompleted.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Correlated Local Service Sample](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).  \n  \n [!code-cs[Wf_samples#223](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#223)]\n [!code-vb[Wf_samples#223](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#223)]"
  syntax:
    content: protected virtual void OnInvoked (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>방금 받은 외부 이벤트에서 받습니다.</xref:System.EventArgs>"
  overload: System.Workflow.Activities.HandleExternalEventActivity.OnInvoked*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings
  id: ParameterBindings
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: ParameterBindings
  nameWithType: HandleExternalEventActivity.ParameterBindings
  fullName: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "매개 변수 바인딩의 컬렉션을 가져옵니다."
  remarks: ''
  example:
  - "The following example shows how to access the `ParameterBindings` property. This example is from the Ordering State Machine SDK sample, from the SampleWorkflow.designer.cs file.  [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Ordering State Machine Sample](http://msdn.microsoft.com/en-us/59272cf4-bc98-439c-bcfa-b66999ebce5c).  \n  \n [!code-cs[wf_samples#125](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#125)]\n [!code-vb[wf_samples#125](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#125)]"
  syntax:
    content: public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }
    return:
      type: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
      description: "매개 변수 바인딩의 컬렉션입니다."
  overload: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty
  id: ParameterBindingsProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: ParameterBindingsProperty
  nameWithType: HandleExternalEventActivity.ParameterBindingsProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "나타냅니다는 <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> 를 대상으로 하는 <xref:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings*>속성.</xref:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings*>"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.Roles
  id: Roles
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: Roles
  nameWithType: HandleExternalEventActivity.Roles
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Roles
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "워크플로 역할 컬렉션에 대 한 참조를 가져오거나 설정 합니다."
  remarks: "<xref:System.Workflow.Activities.WorkflowRoleCollection>를 통해 워크플로 인스턴스에 메시지를 보낼 수 있는 사용자 집합을 제한 한 <xref:System.Workflow.Activities.HandleExternalEventActivity>활동.</xref:System.Workflow.Activities.HandleExternalEventActivity> </xref:System.Workflow.Activities.WorkflowRoleCollection>"
  example:
  - "The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.  This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Raise Event To Load Workflow](http://msdn.microsoft.com/en-us/71330ada-adcd-42a9-8b38-468d8a0cfb80).  \n  \n [!code-cs[wf_samples#160](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#160)]\n [!code-vb[wf_samples#160](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#160)]"
  syntax:
    content: public System.Workflow.Activities.WorkflowRoleCollection Roles { get; set; }
    return:
      type: System.Workflow.Activities.WorkflowRoleCollection
      description: "워크플로 역할의 컬렉션입니다."
  overload: System.Workflow.Activities.HandleExternalEventActivity.Roles*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.RolesProperty
  id: RolesProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: RolesProperty
  nameWithType: HandleExternalEventActivity.RolesProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.RolesProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "이 활동에 호스트에서 메시지를 보낼 수 있는 유효한 사용자 역할을 식별 합니다. 두 가지 유형의 지원 되는 역할 유형은 Active Directory와 ASP.NET입니다."
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty RolesProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName
  id: System#Workflow#Activities#IEventActivity#QueueName
  isEii: true
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: System.Workflow.Activities.IEventActivity.QueueName
  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.QueueName
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.QueueName
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "이름을 가져옵니다는 <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref> 활동이 데이터 도착을 대기 중인에 있습니다."
  syntax:
    content: IComparable System.Workflow.Activities.IEventActivity.QueueName { get; }
    return:
      type: System.IComparable
      description: "이름에서 <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref> 활동이 데이터 도착을 대기 중인에 있습니다."
  overload: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  id: System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  isEii: true
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "구독을 만듭니다는 <xref href=&quot;System.Workflow.Activities.HandleExternalEventActivity&quot;> </xref> 이벤트에는 활동입니다."
  syntax:
    content: void IEventActivity.Subscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs> parentEventHandler);
    parameters:
    - id: parentContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> 의 실행 환경을 나타내는 <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>합니다."
    - id: parentEventHandler
      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
      description: "<xref:System.EventHandler>부모 이벤트에 대 한.</xref:System.EventHandler>"
  overload: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  id: System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  isEii: true
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "구독을 취소는 <xref href=&quot;System.Workflow.Activities.HandleExternalEventActivity&quot;> </xref> 이벤트에는 활동입니다."
  syntax:
    content: void IEventActivity.Unsubscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs> parentEventHandler);
    parameters:
    - id: parentContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> 활동의 실행 환경을 나타내는입니다."
    - id: parentEventHandler
      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
      description: "<xref:System.EventHandler>부모 이벤트에 대 한.</xref:System.EventHandler>"
  overload: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  id: System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  isEii: true
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: void IActivityEventListener<QueueEventArgs>.OnEvent (object sender, System.Workflow.ComponentModel.QueueEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "추가할 수 있습니다."
    - id: e
      type: System.Workflow.ComponentModel.QueueEventArgs
      description: "추가할 수 있습니다."
  overload: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#QueueEventArgs>#OnEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  id: System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  isEii: true
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "지정된 된 속성에 대 한 액세스 형식을 반환합니다."
  remarks: "컴파일 타임에 속성은 서로 올바르게 바인딩되어 있는지 여부를 확인 하는 데 사용 합니다. 이 인터페이스가 없는 경우이 정보는 속성 getter/setter에서 직접 유추 됩니다."
  syntax:
    content: System.Workflow.ComponentModel.Compiler.AccessTypes IDynamicPropertyTypeProvider.GetAccessType (IServiceProvider serviceProvider, string propertyName);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "구현 하는 개체 <xref:System.IServiceProvider>들이 필요한 경우 디자인 타임 서비스에 대 한 액세스를 제공할 수 있습니다.</xref:System.IServiceProvider>"
    - id: propertyName
      type: System.String
      description: "속성의 이름입니다."
    return:
      type: System.Workflow.ComponentModel.Compiler.AccessTypes
      description: "<xref href=&quot;System.Workflow.ComponentModel.Compiler.AccessTypes&quot;> </xref> 열거형 값 속성의 액세스 수준을 나타내는입니다."
  overload: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  id: System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  isEii: true
  parent: System.Workflow.Activities.HandleExternalEventActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "반환 된 <xref:System.Type>지정된 된 속성의.</xref:System.Type>"
  remarks: "컴파일 타임에 속성은 서로 올바르게 바인딩되어 있는지 여부를 확인 하는 데 사용 합니다."
  syntax:
    content: Type IDynamicPropertyTypeProvider.GetPropertyType (IServiceProvider serviceProvider, string propertyName);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "구현 하는 개체 <xref:System.IServiceProvider>들이 필요한 경우 디자인 타임 서비스에 대 한 액세스를 제공할 수 있습니다.</xref:System.IServiceProvider>"
    - id: propertyName
      type: System.String
      description: "속성의 이름입니다."
    return:
      type: System.Type
      description: "<xref:System.Type>이름이로 전달 되는 속성에 대 한는 <code> propertyName  </code>매개 변수.</xref:System.Type>"
  overload: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: System.Workflow.ComponentModel.Activity
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Workflow.Activities.HandleExternalEventActivity.#ctor
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: HandleExternalEventActivity()
  nameWithType: HandleExternalEventActivity.HandleExternalEventActivity()
  fullName: System.Workflow.Activities.HandleExternalEventActivity.HandleExternalEventActivity()
- uid: System.Workflow.Activities.HandleExternalEventActivity.#ctor(System.String)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: HandleExternalEventActivity(String)
  nameWithType: HandleExternalEventActivity.HandleExternalEventActivity(String)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.HandleExternalEventActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.HandleExternalEventActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: Cancel(ActivityExecutionContext)
  nameWithType: HandleExternalEventActivity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Cancel(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: CorrelationToken
  nameWithType: HandleExternalEventActivity.CorrelationToken
  fullName: System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken
- uid: System.Workflow.Runtime.CorrelationToken
  parent: System.Workflow.Runtime
  isExternal: false
  name: CorrelationToken
  nameWithType: CorrelationToken
  fullName: System.Workflow.Runtime.CorrelationToken
- uid: System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: CorrelationTokenProperty
  nameWithType: HandleExternalEventActivity.CorrelationTokenProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.Activities.HandleExternalEventActivity.EventName
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: EventName
  nameWithType: HandleExternalEventActivity.EventName
  fullName: System.Workflow.Activities.HandleExternalEventActivity.EventName
- uid: System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: EventNameProperty
  nameWithType: HandleExternalEventActivity.EventNameProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty
- uid: System.Workflow.Activities.HandleExternalEventActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: Execute(ActivityExecutionContext)
  nameWithType: HandleExternalEventActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Execute(ActivityExecutionContext)
- uid: System.Workflow.Activities.HandleExternalEventActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: HandleFault(ActivityExecutionContext,Exception)
  nameWithType: HandleExternalEventActivity.HandleFault(ActivityExecutionContext,Exception)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.HandleFault(ActivityExecutionContext,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Workflow.Activities.HandleExternalEventActivity.Initialize(System.IServiceProvider)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: Initialize(IServiceProvider)
  nameWithType: HandleExternalEventActivity.Initialize(IServiceProvider)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Initialize(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: InitializeProperties()
  nameWithType: HandleExternalEventActivity.InitializeProperties()
  fullName: System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties()
- uid: System.Workflow.Activities.HandleExternalEventActivity.InterfaceType
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: InterfaceType
  nameWithType: HandleExternalEventActivity.InterfaceType
  fullName: System.Workflow.Activities.HandleExternalEventActivity.InterfaceType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: InterfaceTypeProperty
  nameWithType: HandleExternalEventActivity.InterfaceTypeProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty
- uid: System.Workflow.Activities.HandleExternalEventActivity.Invoked
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: Invoked
  nameWithType: HandleExternalEventActivity.Invoked
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Invoked
- uid: System.EventHandler{System.Workflow.Activities.ExternalDataEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ExternalDataEventArgs>
  nameWithType: EventHandler<ExternalDataEventArgs>
  fullName: System.EventHandler<System.Workflow.Activities.ExternalDataEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Activities.ExternalDataEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Activities.ExternalDataEventArgs
    name: ExternalDataEventArgs
    nameWithType: ExternalDataEventArgs
    fullName: ExternalDataEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: InvokedEvent
  nameWithType: HandleExternalEventActivity.InvokedEvent
  fullName: System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent
- uid: System.Workflow.Activities.HandleExternalEventActivity.OnClosed(System.IServiceProvider)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: OnClosed(IServiceProvider)
  nameWithType: HandleExternalEventActivity.OnClosed(IServiceProvider)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.OnClosed(IServiceProvider)
- uid: System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(System.EventArgs)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: OnInvoked(EventArgs)
  nameWithType: HandleExternalEventActivity.OnInvoked(EventArgs)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: HandleExternalEventActivity.ParameterBindings
  fullName: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings
- uid: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: WorkflowParameterBindingCollection
  nameWithType: WorkflowParameterBindingCollection
  fullName: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
- uid: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: ParameterBindingsProperty
  nameWithType: HandleExternalEventActivity.ParameterBindingsProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty
- uid: System.Workflow.Activities.HandleExternalEventActivity.Roles
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: Roles
  nameWithType: HandleExternalEventActivity.Roles
  fullName: System.Workflow.Activities.HandleExternalEventActivity.Roles
- uid: System.Workflow.Activities.WorkflowRoleCollection
  parent: System.Workflow.Activities
  isExternal: false
  name: WorkflowRoleCollection
  nameWithType: WorkflowRoleCollection
  fullName: System.Workflow.Activities.WorkflowRoleCollection
- uid: System.Workflow.Activities.HandleExternalEventActivity.RolesProperty
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: RolesProperty
  nameWithType: HandleExternalEventActivity.RolesProperty
  fullName: System.Workflow.Activities.HandleExternalEventActivity.RolesProperty
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.QueueName
  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.QueueName
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.QueueName
- uid: System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
- uid: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: IActivityEventListener<QueueEventArgs>
  nameWithType: IActivityEventListener<QueueEventArgs>
  fullName: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  spec.csharp:
  - uid: System.Workflow.ComponentModel.IActivityEventListener`1
    name: IActivityEventListener
    nameWithType: IActivityEventListener
    fullName: IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.QueueEventArgs
    name: QueueEventArgs
    nameWithType: QueueEventArgs
    fullName: QueueEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Workflow.ComponentModel.QueueEventArgs
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: QueueEventArgs
  nameWithType: QueueEventArgs
  fullName: System.Workflow.ComponentModel.QueueEventArgs
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
- uid: System.Workflow.ComponentModel.Compiler.AccessTypes
  parent: System.Workflow.ComponentModel.Compiler
  isExternal: false
  name: AccessTypes
  nameWithType: AccessTypes
  fullName: System.Workflow.ComponentModel.Compiler.AccessTypes
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  fullName: System.Workflow.Activities.HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
- uid: System.Workflow.Activities.HandleExternalEventActivity.#ctor*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: HandleExternalEventActivity
  nameWithType: HandleExternalEventActivity.HandleExternalEventActivity
- uid: System.Workflow.Activities.HandleExternalEventActivity.Cancel*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: Cancel
  nameWithType: HandleExternalEventActivity.Cancel
- uid: System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: CorrelationToken
  nameWithType: HandleExternalEventActivity.CorrelationToken
- uid: System.Workflow.Activities.HandleExternalEventActivity.EventName*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: EventName
  nameWithType: HandleExternalEventActivity.EventName
- uid: System.Workflow.Activities.HandleExternalEventActivity.Execute*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: Execute
  nameWithType: HandleExternalEventActivity.Execute
- uid: System.Workflow.Activities.HandleExternalEventActivity.HandleFault*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: HandleFault
  nameWithType: HandleExternalEventActivity.HandleFault
- uid: System.Workflow.Activities.HandleExternalEventActivity.Initialize*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: Initialize
  nameWithType: HandleExternalEventActivity.Initialize
- uid: System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: InitializeProperties
  nameWithType: HandleExternalEventActivity.InitializeProperties
- uid: System.Workflow.Activities.HandleExternalEventActivity.InterfaceType*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: InterfaceType
  nameWithType: HandleExternalEventActivity.InterfaceType
- uid: System.Workflow.Activities.HandleExternalEventActivity.OnClosed*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: OnClosed
  nameWithType: HandleExternalEventActivity.OnClosed
- uid: System.Workflow.Activities.HandleExternalEventActivity.OnInvoked*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: OnInvoked
  nameWithType: HandleExternalEventActivity.OnInvoked
- uid: System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: HandleExternalEventActivity.ParameterBindings
- uid: System.Workflow.Activities.HandleExternalEventActivity.Roles*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: Roles
  nameWithType: HandleExternalEventActivity.Roles
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.QueueName
  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.QueueName
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Subscribe
  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Subscribe
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Unsubscribe
  nameWithType: HandleExternalEventActivity.System.Workflow.Activities.IEventActivity.Unsubscribe
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#QueueEventArgs>#OnEvent*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>.OnEvent
  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>.OnEvent
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType
  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType
- uid: System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType*
  parent: System.Workflow.Activities.HandleExternalEventActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType
  nameWithType: HandleExternalEventActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType
