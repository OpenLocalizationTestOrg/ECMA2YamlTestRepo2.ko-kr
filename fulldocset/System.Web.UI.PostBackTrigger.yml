### YamlMime:ManagedReference
items:
- uid: System.Web.UI.PostBackTrigger
  id: PostBackTrigger
  children:
  - System.Web.UI.PostBackTrigger.#ctor
  - System.Web.UI.PostBackTrigger.ControlID
  - System.Web.UI.PostBackTrigger.HasTriggered
  - System.Web.UI.PostBackTrigger.Initialize
  - System.Web.UI.PostBackTrigger.ToString
  langs:
  - csharp
  name: PostBackTrigger
  nameWithType: PostBackTrigger
  fullName: System.Web.UI.PostBackTrigger
  type: Class
  summary: "안에 있는 컨트롤을 정의 <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> 포스트백 컨트롤로 제어 합니다."
  remarks: "PostBackTrigger 컨트롤 내에 있는 컨트롤을 사용 하도록 설정 하는 데 사용할는 <xref:System.Web.UI.UpdatePanel>비동기 포스트백을 수행 하는 대신 포스트백이 발생할 수 있습니다.</xref:System.Web.UI.UpdatePanel>       사용 하 여는 <xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A>의 메서드는 <xref:System.Web.UI.ScriptManager>포스트백 컨트롤을 프로그래밍 방식으로 등록할 컨트롤입니다.</xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A> 호출할 수 있습니다는 <xref:System.Web.UI.UpdatePanel.Update%2A>의 메서드는 <xref:System.Web.UI.UpdatePanel>트리거 컨트롤이 포스트백을 수행 하는 시기를 제어 합니다.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel.Update%2A>      > [!NOTE] > PostBackTrigger 컨트롤을 프로그래밍 방식으로 추가할 수 없습니다.       컨트롤은 모두 PostBackTrigger로 설정 하는 경우 및 <xref:System.Web.UI.AsyncPostBackTrigger>컨트롤, 예외가 throw 됩니다.</xref:System.Web.UI.AsyncPostBackTrigger>"
  example:
  - "The following example shows how to declaratively define a PostBackTrigger control for an <xref:System.Web.UI.UpdatePanel> control. In the panel, a <xref:System.Web.UI.WebControls.FileUpload> control enables users to upload a file. Users must first check whether the file to upload exists. The <xref:System.Web.UI.WebControls.Button> control that calls the event handler to check the file name causes an asynchronous postback. However, the <xref:System.Web.UI.WebControls.Button> control that uploads the file is registered as a PostBackTrigger, because files cannot be uploaded asynchronously.  \n  \n [!code-vb[System.Web.UI.PostBackTrigger#1](~/add/codesnippet/visualbasic/t-system.web.ui.postback_1_1.aspx)]\n [!code-cs[System.Web.UI.PostBackTrigger#1](~/add/codesnippet/csharp/t-system.web.ui.postback_1_1.aspx)]"
  syntax:
    content: 'public class PostBackTrigger : System.Web.UI.UpdatePanelControlTrigger'
  inheritance:
  - System.Object
  - System.Web.UI.UpdatePanelTrigger
  - System.Web.UI.UpdatePanelControlTrigger
  implements: []
  inheritedMembers:
  - System.Web.UI.UpdatePanelControlTrigger.FindTargetControl(System.Boolean)
  - System.Web.UI.UpdatePanelTrigger.Owner
  platform:
  - net462
- uid: System.Web.UI.PostBackTrigger.#ctor
  id: '#ctor'
  parent: System.Web.UI.PostBackTrigger
  langs:
  - csharp
  name: PostBackTrigger()
  nameWithType: PostBackTrigger.PostBackTrigger()
  fullName: System.Web.UI.PostBackTrigger.PostBackTrigger()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.PostBackTrigger&quot;> </xref> 클래스입니다."
  remarks: "새로 만들려면 <xref:System.Web.UI.PostBackTrigger>개체를 가져오려면는 **UpdatePanelTrigger 컬렉션 편집기** 대화 만들거나 디자이너에서 상자는 `<Triggers>` 에서 선언적으로 요소는 <xref:System.Web.UI.UpdatePanel>컨트롤.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.PostBackTrigger> 프로그래밍 방식으로 추가 <xref:System.Web.UI.PostBackTrigger>컨트롤은 지원 되지 않습니다.</xref:System.Web.UI.PostBackTrigger>"
  syntax:
    content: public PostBackTrigger ();
    parameters: []
  overload: System.Web.UI.PostBackTrigger.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PostBackTrigger.ControlID
  id: ControlID
  parent: System.Web.UI.PostBackTrigger
  langs:
  - csharp
  name: ControlID
  nameWithType: PostBackTrigger.ControlID
  fullName: System.Web.UI.PostBackTrigger.ControlID
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "해당 하는 컨트롤의 이름을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.PostBackTrigger&quot;> </xref> 제어 하는 데는 <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> 제어 합니다."
  syntax:
    content: public string ControlID { get; set; }
    return:
      type: System.String
      description: "서버 컨트롤 id로 나타내는 문자열"
  overload: System.Web.UI.PostBackTrigger.ControlID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PostBackTrigger.HasTriggered
  id: HasTriggered
  parent: System.Web.UI.PostBackTrigger
  langs:
  - csharp
  name: HasTriggered()
  nameWithType: PostBackTrigger.HasTriggered()
  fullName: System.Web.UI.PostBackTrigger.HasTriggered()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "트리거가 활성화 되었는지 여부를 나타내는 값을 반환 합니다."
  remarks: "컨트롤 개발자가 트리거가 활성화 되었는지 여부를 확인 하기 위한 사용자 지정 논리를 제공 하도록 HasTriggered 속성을 재정의할 수 있습니다. 디자인 타임에 표시 하 여 사용자 지정 트리거를 보려면는 `<Triggers>` 의 요소는 <xref:System.Web.UI.UpdatePanel>컨트롤, 페이지 또는 Web.config 파일의 섹션에는 지시문을 추가할 수 있습니다.</xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: protected override bool HasTriggered ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>트리거 정품 인증 되었다면; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.PostBackTrigger.HasTriggered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PostBackTrigger.Initialize
  id: Initialize
  parent: System.Web.UI.PostBackTrigger
  langs:
  - csharp
  name: Initialize()
  nameWithType: PostBackTrigger.Initialize()
  fullName: System.Web.UI.PostBackTrigger.Initialize()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "초기화는 <xref href=&quot;System.Web.UI.PostBackTrigger&quot;> </xref> 개체입니다."
  syntax:
    content: protected override void Initialize ();
    parameters: []
  overload: System.Web.UI.PostBackTrigger.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PostBackTrigger.ToString
  id: ToString
  parent: System.Web.UI.PostBackTrigger
  langs:
  - csharp
  name: ToString()
  nameWithType: PostBackTrigger.ToString()
  fullName: System.Web.UI.PostBackTrigger.ToString()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "현재를 나타내는 문자열을 반환 <xref href=&quot;System.Web.UI.PostBackTrigger&quot;> </xref> 개체입니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "현재 나타내는 string <xref href=&quot;System.Web.UI.PostBackTrigger&quot;> </xref> 개체입니다."
  overload: System.Web.UI.PostBackTrigger.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.UpdatePanelControlTrigger
  isExternal: false
  name: System.Web.UI.UpdatePanelControlTrigger
- uid: System.Web.UI.PostBackTrigger.#ctor
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: PostBackTrigger()
  nameWithType: PostBackTrigger.PostBackTrigger()
  fullName: System.Web.UI.PostBackTrigger.PostBackTrigger()
- uid: System.Web.UI.PostBackTrigger.ControlID
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: ControlID
  nameWithType: PostBackTrigger.ControlID
  fullName: System.Web.UI.PostBackTrigger.ControlID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.PostBackTrigger.HasTriggered
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: HasTriggered()
  nameWithType: PostBackTrigger.HasTriggered()
  fullName: System.Web.UI.PostBackTrigger.HasTriggered()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.PostBackTrigger.Initialize
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: Initialize()
  nameWithType: PostBackTrigger.Initialize()
  fullName: System.Web.UI.PostBackTrigger.Initialize()
- uid: System.Web.UI.PostBackTrigger.ToString
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: ToString()
  nameWithType: PostBackTrigger.ToString()
  fullName: System.Web.UI.PostBackTrigger.ToString()
- uid: System.Web.UI.PostBackTrigger.#ctor*
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: PostBackTrigger
  nameWithType: PostBackTrigger.PostBackTrigger
- uid: System.Web.UI.PostBackTrigger.ControlID*
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: ControlID
  nameWithType: PostBackTrigger.ControlID
- uid: System.Web.UI.PostBackTrigger.HasTriggered*
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: HasTriggered
  nameWithType: PostBackTrigger.HasTriggered
- uid: System.Web.UI.PostBackTrigger.Initialize*
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: Initialize
  nameWithType: PostBackTrigger.Initialize
- uid: System.Web.UI.PostBackTrigger.ToString*
  parent: System.Web.UI.PostBackTrigger
  isExternal: false
  name: ToString
  nameWithType: PostBackTrigger.ToString
