### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator
  id: CustomUserNameSecurityTokenAuthenticator
  children:
  - System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.UserNamePasswordValidator)
  - System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)
  langs:
  - csharp
  name: CustomUserNameSecurityTokenAuthenticator
  nameWithType: CustomUserNameSecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator
  type: Class
  summary: "인증 된 <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;> </xref> 사용자 지정 인증 체계를 사용 하 여 보안 토큰입니다."
  remarks: "Windows 인증에서 제공 하는 경우 CustomUserNameSecurityTokenAuthenticator 클래스를 재정의 하는 <xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator>클래스 충분 하지 않으면.</xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator> <xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator>사용자 이름 및 암호를 인증 하는 클래스는 <xref:System.IdentityModel.Tokens.UserNameSecurityToken>Windows 계정으로 보안 토큰입니다.</xref:System.IdentityModel.Tokens.UserNameSecurityToken> </xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator>       사용자 지정 인증 체계를 제공 하려면 <xref:System.IdentityModel.Selectors.UserNamePasswordValidator>인증 체계를 구현 하 고 그런 다음 해당 클래스 CustomUserNameSecurityTokenAuthenticator 클래스에 대 한 생성자에 클래스</xref:System.IdentityModel.Selectors.UserNamePasswordValidator> 에서 클래스를 파생"
  syntax:
    content: 'public class CustomUserNameSecurityTokenAuthenticator : System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator
  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  implements: []
  inheritedMembers:
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net462
- uid: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.UserNamePasswordValidator)
  id: '#ctor(System.IdentityModel.Selectors.UserNamePasswordValidator)'
  parent: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator
  langs:
  - csharp
  name: CustomUserNameSecurityTokenAuthenticator(UserNamePasswordValidator)
  nameWithType: CustomUserNameSecurityTokenAuthenticator.CustomUserNameSecurityTokenAuthenticator(UserNamePasswordValidator)
  fullName: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.CustomUserNameSecurityTokenAuthenticator(UserNamePasswordValidator)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator&quot;> </xref> 클래스 지정된 된 유효성 검사기를 사용 합니다."
  remarks: "<xref:System.IdentityModel.Selectors.UserNamePasswordValidator>에 지정 된는 `validator` 매개 변수에서 사용 되는 <xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A>사용자를 인증 하는 메서드.</xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> </xref:System.IdentityModel.Selectors.UserNamePasswordValidator>"
  syntax:
    content: public CustomUserNameSecurityTokenAuthenticator (System.IdentityModel.Selectors.UserNamePasswordValidator validator);
    parameters:
    - id: validator
      type: System.IdentityModel.Selectors.UserNamePasswordValidator
      description: "A <xref href=&quot;System.IdentityModel.Selectors.UserNamePasswordValidator&quot;> </xref> 사용자 이름 및 사용자 지정 인증 체계를 사용 하 여 암호를 인증 하는 합니다."
  overload: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>validator</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)
  id: ValidateUserNamePasswordCore(System.String,System.String)
  parent: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateUserNamePasswordCore(String,String)
  nameWithType: CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)
  fullName: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "지정 된 사용자 이름 및 암호를 인증 하 고에 대 한 권한 부여 정책의 집합을 반환 <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;> </xref> 보안 토큰입니다."
  remarks: "ValidateUserNamePasswordCore 메서드에서 사용 하는 <xref:System.IdentityModel.Selectors.UserNamePasswordValidator>에 전달 되는 <xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.%23ctor%2A>사용자를 인증 하는 생성자입니다.</xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.%23ctor%2A> </xref:System.IdentityModel.Selectors.UserNamePasswordValidator>       사용자 이름 및 암호 유효성을 검사할 수 없습니다, <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>.</xref:System.IdentityModel.Tokens.SecurityTokenValidationException> throw       빈 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>필드에 <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.</xref:System.IdentityModel.Policy.IAuthorizationPolicy> 의</xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 적용이 응용 프로그램에 대 한 권한 부여 정책이 있으면 반환       때 `null` ValidateUserNamePasswordCore 메서드에서 반환 된 [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>.</xref:System.IdentityModel.Tokens.SecurityTokenValidationException> throw"
  syntax:
    content: protected override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateUserNamePasswordCore (string userName, string password);
    parameters:
    - id: userName
      type: System.String
      description: "보안 토큰과 연결 된 사용자 이름입니다."
    - id: password
      type: System.String
      description: "보안 토큰과 연결 된 암호입니다."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; 형식의 <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> 적용이 응용 프로그램에 대 한 권한 부여 정책의 집합이 들어 있는입니다."
  overload: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenValidationException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenValidationException
    description: "<code>userName</code>및 <code>password</code> 조합을 사용할 수 없습니다."
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.SecurityTokenValidationException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenValidationException
  nameWithType: SecurityTokenValidationException
  fullName: System.IdentityModel.Tokens.SecurityTokenValidationException
- uid: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.UserNamePasswordValidator)
  parent: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator
  isExternal: false
  name: CustomUserNameSecurityTokenAuthenticator(UserNamePasswordValidator)
  nameWithType: CustomUserNameSecurityTokenAuthenticator.CustomUserNameSecurityTokenAuthenticator(UserNamePasswordValidator)
  fullName: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.CustomUserNameSecurityTokenAuthenticator(UserNamePasswordValidator)
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: UserNamePasswordValidator
  nameWithType: UserNamePasswordValidator
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator
- uid: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)
  parent: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator
  isExternal: false
  name: ValidateUserNamePasswordCore(String,String)
  nameWithType: CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)
  fullName: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: IAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.#ctor*
  parent: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator
  isExternal: false
  name: CustomUserNameSecurityTokenAuthenticator
  nameWithType: CustomUserNameSecurityTokenAuthenticator.CustomUserNameSecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore*
  parent: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator
  isExternal: false
  name: ValidateUserNamePasswordCore
  nameWithType: CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore
