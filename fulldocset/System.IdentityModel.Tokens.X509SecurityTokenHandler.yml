### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler
  id: X509SecurityTokenHandler
  children:
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator
  langs:
  - csharp
  name: X509SecurityTokenHandler
  nameWithType: X509SecurityTokenHandler
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler
  type: Class
  summary: "형식의 토큰을 처리 하는 보안 토큰 처리기를 나타냅니다. <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref>합니다. 기본적으로 처리기는 X.509 인증서의 신뢰 체인 유효성 검사를 수행 합니다."
  syntax:
    content: 'public class X509SecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityTokenHandler
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.Configuration
  - System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection
  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: X509SecurityTokenHandler()
  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler()
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.X509SecurityTokenHandler&quot;> </xref> 클래스 기본값을 사용 합니다."
  remarks: "<xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A>속성이 `false` 및 <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A>유효성 검사기의 기본 인증서 유효성 검사기로 사용 됩니다.</xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> </xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A>"
  syntax:
    content: public X509SecurityTokenHandler ();
    parameters: []
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: X509SecurityTokenHandler(Boolean)
  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.X509SecurityTokenHandler&quot;> </xref> 인증서를 Windows 계정에 매핑되어 있어야 하는지 여부를 나타내는 값을 사용 하 여 클래스입니다."
  remarks: "<xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A>유효성 검사기의 기본 인증서 유효성 검사기로 사용 됩니다.</xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A>"
  syntax:
    content: public X509SecurityTokenHandler (bool mapToWindows);
    parameters:
    - id: mapToWindows
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>인증서; Windows 계정에 매핑되어야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 설정 된 <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*>속성.</xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*>"
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)
  id: '#ctor(System.IdentityModel.Selectors.X509CertificateValidator)'
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: X509SecurityTokenHandler(X509CertificateValidator)
  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(X509CertificateValidator)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler(X509CertificateValidator)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.X509SecurityTokenHandler&quot;> </xref> 지정된 인증서 유효성 검사기를 사용 하 여 클래스입니다."
  remarks: "<xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A>속성이 `false`.</xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A>"
  syntax:
    content: public X509SecurityTokenHandler (System.IdentityModel.Selectors.X509CertificateValidator certificateValidator);
    parameters:
    - id: certificateValidator
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "사용 하 여 인증서 유효성 검사기입니다. 설정 된 <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*>속성.</xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*>"
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)
  id: '#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)'
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: X509SecurityTokenHandler(Boolean,X509CertificateValidator)
  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean,X509CertificateValidator)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean,X509CertificateValidator)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.X509SecurityTokenHandler&quot;> </xref> 인증서는 Windows 계정 및 지정 된 인증서 유효성 검사기에 매핑되고 수 있는지 여부를 나타내는 값을 사용 하 여 클래스입니다."
  syntax:
    content: public X509SecurityTokenHandler (bool mapToWindows, System.IdentityModel.Selectors.X509CertificateValidator certificateValidator);
    parameters:
    - id: mapToWindows
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>인증서; Windows 계정에 매핑되어야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 설정 된 <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*>속성.</xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*>"
    - id: certificateValidator
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "사용 하 여 인증서 유효성 검사기입니다. 설정 된 <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*>속성.</xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*>"
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  id: CanReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: CanReadKeyIdentifierClause(XmlReader)
  nameWithType: X509SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "지정된 된 화면을 참조 하는지 여부를 나타내는 값을 반환 된 <xref uid=&quot;langword_csharp_&lt;ds:X509Data&gt;&quot; name=&quot;&lt;ds:X509Data&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  syntax:
    content: public override bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "키 식별자 절의 시작 요소에 배치 하는 XML 판독기입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>판독기가 참조 하는 경우는 <xref uid=&quot;langword_csharp_&lt;ds:X509Data&gt;&quot; name=&quot;&lt;ds:X509Data&gt;&quot; href=&quot;&quot;> </xref> 요소, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  id: CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: CanReadToken(XmlReader)
  nameWithType: X509SecurityTokenHandler.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Ws-security 사양에 정의 된 대로 판독기에는 X.509 보안 토큰을 가리키는지 여부를 나타내는 값을 반환 합니다."
  syntax:
    content: public override bool CanReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "토큰 XML을 가리키는 판독기입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>X.509 보안 토큰; 판독기가 가리키는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken
  id: CanValidateToken
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: CanValidateToken
  nameWithType: X509SecurityTokenHandler.CanValidateToken
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "이 처리기 형식의 토큰의 유효성 검사를 지원 하는지 여부를 나타내는 값을 가져옵니다 <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref>합니다."
  syntax:
    content: public override bool CanValidateToken { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>처리기가 지 원하는 형식의 토큰의 유효성을 검사 하는 경우 <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: X509SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "이 처리기에 의해 지정 된 키 식별자 절을 serialize 할 수 있는지 여부를 나타내는 값을 반환 합니다."
  remarks: "지원 되는 키 식별자 절 유형은: 1입니다.  <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>2입니다.</xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>  <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>3입니다.</xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>  <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause></xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>"
  syntax:
    content: public override bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);
    parameters:
    - id: securityKeyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "Serialize 되는 키 식별자 절."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <code> securityKeyIdentifierClause </code> 지원 되는 경우는 <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes*>속성이로 설정 되어 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes*>"
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityKeyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken
  id: CanWriteToken
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: CanWriteToken
  nameWithType: X509SecurityTokenHandler.CanWriteToken
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "이 처리기 형식의 토큰을 쓸 수 있는지 여부를 나타내는 값을 가져옵니다 <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref>합니다."
  syntax:
    content: public override bool CanWriteToken { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>처리기 형식의 토큰을 쓸 수 있는 경우 <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator
  id: CertificateValidator
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: CertificateValidator
  nameWithType: X509SecurityTokenHandler.CertificateValidator
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "가져오거나는 <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref> 현재 인스턴스에서 사용 되는 합니다."
  syntax:
    content: public System.IdentityModel.Selectors.X509CertificateValidator CertificateValidator { get; set; }
    return:
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "현재 인스턴스에서 사용 되는 X.509 인증서 유효성 검사기입니다."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers
  id: GetTokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: GetTokenTypeIdentifiers()
  nameWithType: X509SecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "WS 보안 X.509 토큰 프로필에 정의 된 X.509 보안 토큰 형식을 가져옵니다."
  syntax:
    content: public override string[] GetTokenTypeIdentifiers ();
    parameters: []
    return:
      type: System.String[]
      description: "X.509 토큰 형식 URI입니다. 기본적으로 값은 <xref:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate*>속성.</xref:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate*>"
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  id: LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: X509SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "사용자 지정 구성을 XML에서 로드 합니다."
  syntax:
    content: public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfigElements);
    parameters:
    - id: customConfigElements
      type: System.Xml.XmlNodeList
      description: "사용자 지정 구성이 포함 된 XML 요소입니다."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>customConfigElements</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "지정 된 사용자 지정 구성이 올바르지 않습니다."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows
  id: MapToWindows
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: MapToWindows
  nameWithType: X509SecurityTokenHandler.MapToWindows
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "유효성을 검사 하는 토큰을 Windows 계정에 매핑되어 있어야 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public bool MapToWindows { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>유효성 검사 토큰이; Windows 계정에 매핑되어야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  id: ReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: ReadKeyIdentifierClause(XmlReader)
  nameWithType: X509SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "지정된 된 XML 판독기에서 참조 하는 키 식별자 절을 역직렬화 합니다."
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "키 식별자 절을 참조 하는 XML 판독기입니다."
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "XML 로부터 deserialize 된 하는 키 식별자 절."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  id: ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: ReadToken(XmlReader)
  nameWithType: X509SecurityTokenHandler.ReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "지정된 된 XML 판독기에서 참조 하는 X.509 보안 토큰을 deserialize 합니다."
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "X.509 보안 토큰을 가리키고 있는 XML 판독기입니다."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "XML에서 deserialize 된 보안 토큰입니다. 인스턴스 <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref>합니다."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>reader</code>WS 보안 X.509 토큰 프로필에 정의 된 대로 유효한 X.509 보안 토큰을 가리키고 있지 않습니다. 또는 Base64 또는 HexBinary 이외의 지정 하면 됩니다."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType
  id: TokenType
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: TokenType
  nameWithType: X509SecurityTokenHandler.TokenType
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "가져옵니다는 <xref:System.Type>이 처리기를 처리 하는 토큰입니다.</xref:System.Type>"
  syntax:
    content: public override Type TokenType { get; }
    return:
      type: System.Type
      description: "기본적으로 형식의 <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref> 클래스입니다."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: ValidateToken(SecurityToken)
  nameWithType: X509SecurityTokenHandler.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "지정 된 X.509 보안 토큰의 유효성을 검사 합니다."
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "토큰 유효성을 검사할 수입니다."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
      description: "토큰에 포함 된 id입니다."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>token</code>할당할 수 없으면 <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는-없는 발급자 이름 레지스트리는 (<xref href=&quot;System.IdentityModel.Tokens.IssuerNameRegistry&quot;></xref>) 구성 합니다. (의 <> </> *> 속성의는 <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration&quot;> </xref> 으로 참조 되는 <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*>속성은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.)</xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*>"
  - type: System.IdentityModel.Tokens.SecurityTokenValidationException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenValidationException
    description: "현재 <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref> 토큰에 대 한 인증서 유효성을 검사 하지 못했습니다."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "현재 <xref href=&quot;System.IdentityModel.Tokens.IssuerNameRegistry&quot;> </xref> 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 토큰에는 인증서의 발급자를 확인 하려고 할 때입니다."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  nameWithType: X509SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "XML 작성기에 지정 된 키 식별자 절을 serialize합니다."
  syntax:
    content: public override void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "키 식별자 절을 직렬화할지 XML 작성기입니다."
    - id: securityKeyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "Serialize 하는 키 식별자 절."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityKeyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes*>속성은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes*>"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  id: WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: X509SecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "지정된 된 XML 작성기에 지정 된 X.509 보안 토큰을 serialize합니다."
  syntax:
    content: public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "토큰을 직렬화할지 XML 작성기입니다."
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "직렬화 하는 데 X.509 보안 토큰입니다. 인스턴스 <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref>합니다."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>token</code>할당할 수 없으면 <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes
  id: WriteXmlDSigDefinedClauseTypes
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: WriteXmlDSigDefinedClauseTypes
  nameWithType: X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "XmlDsig 정의 절 형식을 기본 설정 되는지 여부를 지정 하는 값을 가져오거나 설정 합니다."
  remarks: "XmlDSig 정의 지원 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>유형은:-X509IssuerSerial-X509SKI-X509Certificate</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>"
  syntax:
    content: public bool WriteXmlDSigDefinedClauseTypes { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>XmlDsig 정의 절 유형은; 기본 설정 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator
  id: X509NTAuthChainTrustValidator
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: X509NTAuthChainTrustValidator
  nameWithType: X509SecurityTokenHandler.X509NTAuthChainTrustValidator
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "가져오거나는 <xref href=&quot;System.IdentityModel.Tokens.X509NTAuthChainTrustValidator&quot;> </xref> 하는 인스턴스에서 사용 되는 현재 인증서 유효성 검사 중 들어오는 X.509 인증서가 Windows 계정에 매핑될 때."
  syntax:
    content: public System.IdentityModel.Tokens.X509NTAuthChainTrustValidator X509NTAuthChainTrustValidator { get; set; }
    return:
      type: System.IdentityModel.Tokens.X509NTAuthChainTrustValidator
      description: "X.509 인증서 유효성 검사기를 지정된 된 X.509 인증서의 유효성을 검사 하 고 인증서를 Windows 계정에 매핑할 수 있는지 여부 및 신뢰할 수 있는 인증서 체인 인지 확인 합니다."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityTokenHandler
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IdentityModel.Tokens.SecurityTokenValidationException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenValidationException
  nameWithType: SecurityTokenValidationException
  fullName: System.IdentityModel.Tokens.SecurityTokenValidationException
- uid: System.IdentityModel.Tokens.SecurityTokenException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenException
  nameWithType: SecurityTokenException
  fullName: System.IdentityModel.Tokens.SecurityTokenException
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: X509SecurityTokenHandler()
  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler()
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler()
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: X509SecurityTokenHandler(Boolean)
  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: X509SecurityTokenHandler(X509CertificateValidator)
  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(X509CertificateValidator)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler(X509CertificateValidator)
- uid: System.IdentityModel.Selectors.X509CertificateValidator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: X509CertificateValidator
  nameWithType: X509CertificateValidator
  fullName: System.IdentityModel.Selectors.X509CertificateValidator
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: X509SecurityTokenHandler(Boolean,X509CertificateValidator)
  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean,X509CertificateValidator)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean,X509CertificateValidator)
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanReadKeyIdentifierClause(XmlReader)
  nameWithType: X509SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanReadToken(XmlReader)
  nameWithType: X509SecurityTokenHandler.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(XmlReader)
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanValidateToken
  nameWithType: X509SecurityTokenHandler.CanValidateToken
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: X509SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanWriteToken
  nameWithType: X509SecurityTokenHandler.CanWriteToken
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CertificateValidator
  nameWithType: X509SecurityTokenHandler.CertificateValidator
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: GetTokenTypeIdentifiers()
  nameWithType: X509SecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: X509SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: MapToWindows
  nameWithType: X509SecurityTokenHandler.MapToWindows
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: ReadKeyIdentifierClause(XmlReader)
  nameWithType: X509SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: ReadToken(XmlReader)
  nameWithType: X509SecurityTokenHandler.ReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(XmlReader)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: TokenType
  nameWithType: X509SecurityTokenHandler.TokenType
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: ValidateToken(SecurityToken)
  nameWithType: X509SecurityTokenHandler.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(SecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ClaimsIdentity>
  nameWithType: ReadOnlyCollection<ClaimsIdentity>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    nameWithType: ClaimsIdentity
    fullName: ClaimsIdentity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  nameWithType: X509SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: X509SecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: WriteXmlDSigDefinedClauseTypes
  nameWithType: X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: X509NTAuthChainTrustValidator
  nameWithType: X509SecurityTokenHandler.X509NTAuthChainTrustValidator
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator
- uid: System.IdentityModel.Tokens.X509NTAuthChainTrustValidator
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: X509NTAuthChainTrustValidator
  nameWithType: X509NTAuthChainTrustValidator
  fullName: System.IdentityModel.Tokens.X509NTAuthChainTrustValidator
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: X509SecurityTokenHandler
  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanReadKeyIdentifierClause
  nameWithType: X509SecurityTokenHandler.CanReadKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanReadToken
  nameWithType: X509SecurityTokenHandler.CanReadToken
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanValidateToken
  nameWithType: X509SecurityTokenHandler.CanValidateToken
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanWriteKeyIdentifierClause
  nameWithType: X509SecurityTokenHandler.CanWriteKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanWriteToken
  nameWithType: X509SecurityTokenHandler.CanWriteToken
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CertificateValidator
  nameWithType: X509SecurityTokenHandler.CertificateValidator
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: GetTokenTypeIdentifiers
  nameWithType: X509SecurityTokenHandler.GetTokenTypeIdentifiers
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: LoadCustomConfiguration
  nameWithType: X509SecurityTokenHandler.LoadCustomConfiguration
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: MapToWindows
  nameWithType: X509SecurityTokenHandler.MapToWindows
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: ReadKeyIdentifierClause
  nameWithType: X509SecurityTokenHandler.ReadKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: ReadToken
  nameWithType: X509SecurityTokenHandler.ReadToken
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: TokenType
  nameWithType: X509SecurityTokenHandler.TokenType
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: ValidateToken
  nameWithType: X509SecurityTokenHandler.ValidateToken
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: WriteKeyIdentifierClause
  nameWithType: X509SecurityTokenHandler.WriteKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: WriteToken
  nameWithType: X509SecurityTokenHandler.WriteToken
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: WriteXmlDSigDefinedClauseTypes
  nameWithType: X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: X509NTAuthChainTrustValidator
  nameWithType: X509SecurityTokenHandler.X509NTAuthChainTrustValidator
