### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  id: SamlAuthorizationDecisionStatement
  children:
  - System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor
  - System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction})
  - System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction},System.IdentityModel.Tokens.SamlEvidence)
  - System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision
  - System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})
  - System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ClaimType
  - System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Evidence
  - System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly
  - System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.MakeReadOnly
  - System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource
  - System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions
  - System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  langs:
  - csharp
  name: SamlAuthorizationDecisionStatement
  nameWithType: SamlAuthorizationDecisionStatement
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  type: Class
  summary: "에 대 한 클레임을 나타냅니다는 <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref> 보안 토큰을 지정된 된 리소스에 대 한 주체의 액세스와 관련 된 권한 부여 결정을 만들었다고 가정 합니다."
  remarks: "<xref:System.IdentityModel.Tokens.SamlSecurityToken>보안 토큰 제목을 특정 리소스에 액세스할 수 있는 권한이 있는지 여부를 지정할 수 있는 SAML 어설션을 사용 하 여 클레임을 지정 합니다.</xref:System.IdentityModel.Tokens.SamlSecurityToken> SAML 어설션의 클레임은 SAML 설명으로 표현 됩니다. SAML 사양에서는 일련의 SAML 설명 형식 정의 하 고 SamlAuthorizationDecisionStatement 그 중 하나입니다. SamlAuthorizationDecisionStatement에는 지정된 된 리소스에 대 한 주체의 액세스와 관련 된 권한 부여 결정 이루어졌을 어설션 합니다. 다음 표에서 권한 부여 결정과 연결 된 속성을 요약 합니다.      | 속성 | 설명 |   |--------------|-----------------|   | <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision%2A>| <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource%2A>속성에 의해 표시 되는 리소스와 관련 하 여 SAML 기관이 내린 권한 부여. |   | <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Evidence%2A>| SAML 기관이 결정을 내리는 데 사용한 SAML 어설션의 집합입니다. |   | <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource%2A>| Access 검색 된 리소스를 식별 하는 URI 참조입니다. |   | <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions%2A>| 제목은 동작 집합을 나타내는 리소스에서 수행할 수 있는 권한이 <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource%2A>속성입니다. |</xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource%2A> </xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions%2A> </xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource%2A> </xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Evidence%2A> </xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource%2A> </xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision%2A>"
  syntax:
    content: 'public class SamlAuthorizationDecisionStatement : System.IdentityModel.Tokens.SamlSubjectStatement'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SamlStatement
  - System.IdentityModel.Tokens.SamlSubjectStatement
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SamlSubjectStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)
  - System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject
  - System.IdentityModel.Tokens.SamlSubjectStatement.SetSubject(System.IdentityModel.Tokens.SamlSubject)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  langs:
  - csharp
  name: SamlAuthorizationDecisionStatement()
  nameWithType: SamlAuthorizationDecisionStatement.SamlAuthorizationDecisionStatement()
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlAuthorizationDecisionStatement()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement&quot;> </xref> 클래스입니다."
  remarks: "이 생성자는 <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly%2A>속성을 `false` 및 <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ClaimType%2A>속성을 `http://schemas.microsoft.com/mb/2005/09/ClaimType/SamlAuthorizationDecision`.</xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ClaimType%2A> </xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly%2A>"
  syntax:
    content: public SamlAuthorizationDecisionStatement ();
    parameters: []
  overload: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction})
  id: '#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction})'
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  langs:
  - csharp
  name: SamlAuthorizationDecisionStatement(SamlSubject,String,SamlAccessDecision,IEnumerable<SamlAction>)
  nameWithType: SamlAuthorizationDecisionStatement.SamlAuthorizationDecisionStatement(SamlSubject,String,SamlAccessDecision,IEnumerable<SamlAction>)
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlAuthorizationDecisionStatement(SamlSubject,String,SamlAccessDecision,IEnumerable<SamlAction>)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement&quot;> </xref> 클래스입니다.  지정 된 주체, 리소스, 권한 부여 결정 및 리소스에서 주체가 수행 하려는 작업을 사용 합니다."
  remarks: "이 생성자는 <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly%2A>속성을 `false`, <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ClaimType%2A>속성을 `http://schemas.microsoft.com/mb/2005/09/ClaimType/SamlAuthorizationDecision`, 및 <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Evidence%2A>속성을 `null`.</xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Evidence%2A> </xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ClaimType%2A> </xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly%2A>"
  syntax:
    content: public SamlAuthorizationDecisionStatement (System.IdentityModel.Tokens.SamlSubject samlSubject, string resource, System.IdentityModel.Tokens.SamlAccessDecision accessDecision, System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SamlAction> samlActions);
    parameters:
    - id: samlSubject
      type: System.IdentityModel.Tokens.SamlSubject
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSubject&quot;> </xref> 클레임의 주체를 나타내는입니다. 설정 된 <xref:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject*>속성.</xref:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject*>"
    - id: resource
      type: System.String
      description: "Access 검색 된 리소스를 식별 하는 URI 참조입니다. 설정 된 <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource*>속성.</xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource*>"
    - id: accessDecision
      type: System.IdentityModel.Tokens.SamlAccessDecision
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAccessDecision&quot;> </xref> 하 여 지정된 된 리소스에 대 한 주체의 액세스와 관련 SAML 기관이 내린 권한 부여를 지정 하는 합니다. 설정 된 <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision*>속성.</xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision*>"
    - id: samlActions
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction}
      description: "&lt;xref:System.Collections.Generic.IEnumerable%601&gt; 형식의 <xref href=&quot;System.IdentityModel.Tokens.SamlAction&quot;> </xref> 동작의 집합을 지정 하는 주체는 리소스에서 수행 하도록 허용 하는 합니다. 설정 된 <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions*>속성.</xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions*>"
  overload: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>samlActions</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는- <code>samlActions</code> 포함 되는 멤버 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다.       -or-       <code>samlSubject</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>authorityBindings</code>포함 되는 멤버 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다.       -or-       <code>resource</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or empty."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction},System.IdentityModel.Tokens.SamlEvidence)
  id: '#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction},System.IdentityModel.Tokens.SamlEvidence)'
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  langs:
  - csharp
  name: SamlAuthorizationDecisionStatement(SamlSubject,String,SamlAccessDecision,IEnumerable<SamlAction>,SamlEvidence)
  nameWithType: SamlAuthorizationDecisionStatement.SamlAuthorizationDecisionStatement(SamlSubject,String,SamlAccessDecision,IEnumerable<SamlAction>,SamlEvidence)
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlAuthorizationDecisionStatement(SamlSubject,String,SamlAccessDecision,IEnumerable<SamlAction>,SamlEvidence)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement&quot;> </xref> 클래스입니다.  지정 된 주체, 리소스, 권한 부여 결정 및 리소스에서 주체가 수행 하려는 작업을 사용 합니다."
  remarks: "이 생성자는 <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly%2A>속성을 `false`, <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ClaimType%2A>속성을 `http://schemas.microsoft.com/mb/2005/09/ClaimType/SamlAuthorizationDecision`.</xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ClaimType%2A> </xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly%2A>"
  syntax:
    content: public SamlAuthorizationDecisionStatement (System.IdentityModel.Tokens.SamlSubject samlSubject, string resource, System.IdentityModel.Tokens.SamlAccessDecision accessDecision, System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SamlAction> samlActions, System.IdentityModel.Tokens.SamlEvidence samlEvidence);
    parameters:
    - id: samlSubject
      type: System.IdentityModel.Tokens.SamlSubject
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSubject&quot;> </xref> 클레임의 주체를 나타내는입니다. 설정 된 <xref:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject*>속성.</xref:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject*>"
    - id: resource
      type: System.String
      description: "Access 검색 된 리소스를 식별 하는 URI 참조입니다. 설정 된 <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource*>속성.</xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource*>"
    - id: accessDecision
      type: System.IdentityModel.Tokens.SamlAccessDecision
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAccessDecision&quot;> </xref> 하 여 지정된 된 리소스에 대 한 주체의 액세스와 관련 SAML 기관이 내린 권한 부여를 지정 하는 합니다. 설정 된 <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision*>속성.</xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision*>"
    - id: samlActions
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction}
      description: "&lt;xref:System.Collections.Generic.IEnumerable%601&gt; 형식의 <xref href=&quot;System.IdentityModel.Tokens.SamlAction&quot;> </xref> 동작의 집합을 지정 하는 주체는 리소스에서 수행 하도록 허용 하는 합니다. 설정 된 <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions*>속성.</xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions*>"
    - id: samlEvidence
      type: System.IdentityModel.Tokens.SamlEvidence
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlEvidence&quot;> </xref> 하는 SAML 기관이 권한 부여 결정을 내리는 데 사용한 SAML 어설션의 집합을 포함 합니다. 설정 된 <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Evidence*>속성.</xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Evidence*>"
  overload: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision
  id: AccessDecision
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  langs:
  - csharp
  name: AccessDecision
  nameWithType: SamlAuthorizationDecisionStatement.AccessDecision
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "에 의해 지정된 된 리소스에 대 한 주체의 액세스와 관련 SAML 기관이 내린 권한 부여를 가져오거나 설정 합니다."
  remarks: "AccessDecision 속성에 해당 하는 `Decision` 특성에는 `<AuthorizationDecisionStatement>` OASIS SAML Security Assertion Markup Language () 사양에 대 한 어설션 및 프로토콜에 정의 된 요소입니다."
  syntax:
    content: public System.IdentityModel.Tokens.SamlAccessDecision AccessDecision { get; set; }
    return:
      type: System.IdentityModel.Tokens.SamlAccessDecision
      description: "중 하나는 <xref href=&quot;System.IdentityModel.Tokens.SamlAccessDecision&quot;> </xref> 주체가 지정된 된 리소스에 액세스할 수와 관련은 SAML 기관이 내린 권한 부여를 지정 하는 값입니다.       <table><thead><tr><th> 예외 형식       </th><th> 조건       </th></tr></thead><tbody><tr><td> <xref:System.InvalidOperationException></xref:System.InvalidOperationException>       </td><td> AccessDecision 속성을 설정 및 <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly*>속성은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly*>       </td></tr></tbody></table>"
  overload: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})
  id: AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  langs:
  - csharp
  name: AddClaimsToList(IList<Claim>)
  nameWithType: SamlAuthorizationDecisionStatement.AddClaimsToList(IList<Claim>)
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AddClaimsToList(IList<Claim>)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "지정된 된 클레임 컬렉션을이 인스턴스의 속성을 기반으로 하는 클레임을 추가 합니다."
  remarks: "에 클레임을 추가 하는 AddClaimsToList 메서드는 `claims` 에 지정 된 각 작업에 대 한 매개 변수는 <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions%2A>속성.</xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions%2A> 작업을 기준으로 컬렉션에 추가 된 각 클레임은 및 <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ClaimType%2A>, <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource%2A>, 및 <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision%2A>속성.</xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision%2A> </xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource%2A> </xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ClaimType%2A> 클레임 리소스 형식이 <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource>입니다.</xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource>"
  syntax:
    content: protected override void AddClaimsToList (System.Collections.Generic.IList<System.IdentityModel.Claims.Claim> claims);
    parameters:
    - id: claims
      type: System.Collections.Generic.IList{System.IdentityModel.Claims.Claim}
      description: "&lt;xref:System.Collections.Generic.IList%601&gt; 형식의 <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> 추가할 클레임 집합이 들어 있는입니다."
  overload: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AddClaimsToList*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claims</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ClaimType
  id: ClaimType
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  langs:
  - csharp
  name: ClaimType
  nameWithType: SamlAuthorizationDecisionStatement.ClaimType
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ClaimType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "보안 클레임의 형식을 가져옵니다."
  syntax:
    content: public static string ClaimType { get; }
    return:
      type: System.String
      description: "보안 클레임의 형식입니다. 항상 `http://schemas.microsoft.com/mb/2005/09/ClaimType/SamlAuthorizationDecision`합니다."
  overload: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ClaimType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Evidence
  id: Evidence
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  langs:
  - csharp
  name: Evidence
  nameWithType: SamlAuthorizationDecisionStatement.Evidence
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Evidence
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "SAML 기관이 권한 부여 결정을 내리는 데 사용한 증거를 가져오거나 설정 합니다."
  remarks: "<xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision%2A>속성에 해당 하는 `<Evidence>` OASIS SAML Security Assertion Markup Language () 사양에 대 한 어설션 및 프로토콜에 정의 된 요소입니다.</xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision%2A>"
  syntax:
    content: public System.IdentityModel.Tokens.SamlEvidence Evidence { get; set; }
    return:
      type: System.IdentityModel.Tokens.SamlEvidence
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlEvidence&quot;> </xref> 하는 SAML 기관이 권한 부여 결정을 내리는 데 사용한 SAML 어설션의 집합을 포함 합니다."
  overload: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Evidence*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly
  id: IsReadOnly
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: SamlAuthorizationDecisionStatement.IsReadOnly
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "이 인스턴스의 속성이 읽기 전용인 지 여부를 나타내는 값을 가져옵니다."
  remarks: "이 인스턴스를는 <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement>클래스 읽기 전용 호출은 <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.MakeReadOnly%2A>메서드.</xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.MakeReadOnly%2A> </xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement>"
  syntax:
    content: public override bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 인스턴스의 속성이 읽기 전용 이면 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.MakeReadOnly
  id: MakeReadOnly
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  langs:
  - csharp
  name: MakeReadOnly()
  nameWithType: SamlAuthorizationDecisionStatement.MakeReadOnly()
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.MakeReadOnly()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "이 인스턴스를 읽기 전용으로 설정 하면 됩니다."
  remarks: "MakeReadOnly 메서드를 호출 하는 경우는 <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly%2A>속성이 `true` 이 인스턴스의 속성을 더 이상 설정할 수 없습니다.</xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly%2A>"
  syntax:
    content: public override void MakeReadOnly ();
    parameters: []
  overload: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.MakeReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  langs:
  - csharp
  name: ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlAuthorizationDecisionStatement.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "지정된 된 XML 판독기에서 SAML 권한 부여 설명을 읽습니다."
  remarks: "다음 속성을 설정 하는 ReadXml 메서드에:- <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision%2A>- <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Evidence%2A>- <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource%2A>- <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions%2A></xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions%2A> </xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource%2A> </xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Evidence%2A> </xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision%2A>"
  syntax:
    content: public override void ReadXml (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "A <xref:System.Xml.XmlDictionaryReader>SAML 권한 부여 설명을 읽을 수 있습니다.</xref:System.Xml.XmlDictionaryReader>"
    - id: samlSerializer
      type: System.IdentityModel.Tokens.SamlSerializer
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSerializer&quot;> </xref> SAML 사양에 정의 된 SAML 권한 부여 설명에서 XML 요소를 읽을 수입니다."
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref> 읽는 <xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;> </xref> 디지털 서명의 절."
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> 결정 하는 디지털 서명을 만든 보안 토큰입니다."
  overload: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ReadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>samlSerializer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "<code>reader</code>포함 하지 않는 XML 요소를 참조 하는 <xref uid=&quot;langword_csharp_Resource&quot; name=&quot;Resource&quot; href=&quot;&quot;> </xref> 및 <xref uid=&quot;langword_csharp_Decision&quot; name=&quot;Decision&quot; href=&quot;&quot;> </xref> 특성입니다.       -또는- <code>reader</code> 하지 않은 XML 요소를 참조 <xref uid=&quot;langword_csharp_&lt;saml:Subject&gt;&quot; name=&quot;&lt;saml:Subject&gt;&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_&lt;saml:Evidence&gt;&quot; name=&quot;&lt;saml:Evidence&gt;&quot; href=&quot;&quot;> </xref>, 및 <xref uid=&quot;langword_csharp_&lt;saml:Action&gt;&quot; name=&quot;&lt;saml:Action&gt;&quot; href=&quot;&quot;> </xref> 자식 요소입니다."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource
  id: Resource
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  langs:
  - csharp
  name: Resource
  nameWithType: SamlAuthorizationDecisionStatement.Resource
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "리소스에 대 한 액세스의 주체가 <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref> 보안 토큰입니다."
  remarks: "<xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision%2A>속성에 해당 하는 `Decision` 특성에는 `<AuthorizationDecisionStatement>` OASIS SAML Security Assertion Markup Language () 사양에 대 한 어설션 및 프로토콜에 정의 된 요소를.</xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision%2A>"
  syntax:
    content: public string Resource { get; set; }
    return:
      type: System.String
      description: "Access 검색 된 리소스를 식별 하는 URI 참조입니다."
  overload: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions
  id: SamlActions
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  langs:
  - csharp
  name: SamlActions
  nameWithType: SamlAuthorizationDecisionStatement.SamlActions
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "주체는 리소스에서 수행 하도록 허용 동작의 집합을 가져옵니다."
  remarks: "SamlActions 속성에 해당 하는 `<Action>` OASIS SAML Security Assertion Markup Language () 사양에 대 한 어설션 및 프로토콜에 정의 된 요소입니다."
  syntax:
    content: public System.Collections.Generic.IList<System.IdentityModel.Tokens.SamlAction> SamlActions { get; }
    return:
      type: System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlAction}
      description: "&lt;xref:System.Collections.Generic.IList%601&gt; 형식의 <xref href=&quot;System.IdentityModel.Tokens.SamlAction&quot;> </xref> 동작의 집합을 지정 하는 주체는 리소스에서 수행 하도록 허용 하는 합니다."
  overload: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  id: WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  langs:
  - csharp
  name: WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  nameWithType: SamlAuthorizationDecisionStatement.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "지정된 된 XML serializer에 SAML 권한 부여 설명을 씁니다."
  remarks: "WriteXml 메서드를 사용 하 여 현재 쓰기 <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement>인스턴스는 `<AuthorizationDecisionStatement>` 요소.</xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement>"
  syntax:
    content: public override void WriteXml (System.Xml.XmlDictionaryWriter writer, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer);
    parameters:
    - id: writer
      type: System.Xml.XmlDictionaryWriter
      description: "A <xref:System.Xml.XmlDictionaryWriter>SAML 권한 부여 설명을 쓸.</xref:System.Xml.XmlDictionaryWriter>"
    - id: samlSerializer
      type: System.IdentityModel.Tokens.SamlSerializer
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSerializer&quot;> </xref> 하는 SAML 어설션에 XML 요소를에서 쓸 수 있습니다."
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref> 을 쓸 수 있는 즉 <xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;> </xref> 절."
  overload: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.WriteXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>samlSerializer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SamlSubjectStatement
  isExternal: false
  name: System.IdentityModel.Tokens.SamlSubjectStatement
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IdentityModel.Tokens.SecurityTokenException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenException
  nameWithType: SecurityTokenException
  fullName: System.IdentityModel.Tokens.SecurityTokenException
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  isExternal: false
  name: SamlAuthorizationDecisionStatement()
  nameWithType: SamlAuthorizationDecisionStatement.SamlAuthorizationDecisionStatement()
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlAuthorizationDecisionStatement()
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction})
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  isExternal: false
  name: SamlAuthorizationDecisionStatement(SamlSubject,String,SamlAccessDecision,IEnumerable<SamlAction>)
  nameWithType: SamlAuthorizationDecisionStatement.SamlAuthorizationDecisionStatement(SamlSubject,String,SamlAccessDecision,IEnumerable<SamlAction>)
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlAuthorizationDecisionStatement(SamlSubject,String,SamlAccessDecision,IEnumerable<SamlAction>)
- uid: System.IdentityModel.Tokens.SamlSubject
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlSubject
  nameWithType: SamlSubject
  fullName: System.IdentityModel.Tokens.SamlSubject
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SamlAccessDecision
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAccessDecision
  nameWithType: SamlAccessDecision
  fullName: System.IdentityModel.Tokens.SamlAccessDecision
- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<SamlAction>
  nameWithType: IEnumerable<SamlAction>
  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SamlAction>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.IdentityModel.Tokens.SamlAction>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SamlAction
    name: SamlAction
    nameWithType: SamlAction
    fullName: SamlAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction},System.IdentityModel.Tokens.SamlEvidence)
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  isExternal: false
  name: SamlAuthorizationDecisionStatement(SamlSubject,String,SamlAccessDecision,IEnumerable<SamlAction>,SamlEvidence)
  nameWithType: SamlAuthorizationDecisionStatement.SamlAuthorizationDecisionStatement(SamlSubject,String,SamlAccessDecision,IEnumerable<SamlAction>,SamlEvidence)
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlAuthorizationDecisionStatement(SamlSubject,String,SamlAccessDecision,IEnumerable<SamlAction>,SamlEvidence)
- uid: System.IdentityModel.Tokens.SamlEvidence
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlEvidence
  nameWithType: SamlEvidence
  fullName: System.IdentityModel.Tokens.SamlEvidence
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  isExternal: false
  name: AccessDecision
  nameWithType: SamlAuthorizationDecisionStatement.AccessDecision
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  isExternal: false
  name: AddClaimsToList(IList<Claim>)
  nameWithType: SamlAuthorizationDecisionStatement.AddClaimsToList(IList<Claim>)
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AddClaimsToList(IList<Claim>)
- uid: System.Collections.Generic.IList{System.IdentityModel.Claims.Claim}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<Claim>
  nameWithType: IList<Claim>
  fullName: System.Collections.Generic.IList<System.IdentityModel.Claims.Claim>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.IdentityModel.Claims.Claim>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ClaimType
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  isExternal: false
  name: ClaimType
  nameWithType: SamlAuthorizationDecisionStatement.ClaimType
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ClaimType
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Evidence
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  isExternal: false
  name: Evidence
  nameWithType: SamlAuthorizationDecisionStatement.Evidence
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Evidence
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  isExternal: false
  name: IsReadOnly
  nameWithType: SamlAuthorizationDecisionStatement.IsReadOnly
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.MakeReadOnly
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  isExternal: false
  name: MakeReadOnly()
  nameWithType: SamlAuthorizationDecisionStatement.MakeReadOnly()
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.MakeReadOnly()
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  isExternal: false
  name: ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlAuthorizationDecisionStatement.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
- uid: System.Xml.XmlDictionaryReader
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryReader
  nameWithType: XmlDictionaryReader
  fullName: System.Xml.XmlDictionaryReader
- uid: System.IdentityModel.Tokens.SamlSerializer
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlSerializer
  nameWithType: SamlSerializer
  fullName: System.IdentityModel.Tokens.SamlSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  isExternal: false
  name: Resource
  nameWithType: SamlAuthorizationDecisionStatement.Resource
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  isExternal: false
  name: SamlActions
  nameWithType: SamlAuthorizationDecisionStatement.SamlActions
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions
- uid: System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlAction}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<SamlAction>
  nameWithType: IList<SamlAction>
  fullName: System.Collections.Generic.IList<System.IdentityModel.Tokens.SamlAction>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.IdentityModel.Tokens.SamlAction>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SamlAction
    name: SamlAction
    nameWithType: SamlAction
    fullName: SamlAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  isExternal: false
  name: WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  nameWithType: SamlAuthorizationDecisionStatement.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
- uid: System.Xml.XmlDictionaryWriter
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryWriter
  nameWithType: XmlDictionaryWriter
  fullName: System.Xml.XmlDictionaryWriter
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor*
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  isExternal: false
  name: SamlAuthorizationDecisionStatement
  nameWithType: SamlAuthorizationDecisionStatement.SamlAuthorizationDecisionStatement
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision*
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  isExternal: false
  name: AccessDecision
  nameWithType: SamlAuthorizationDecisionStatement.AccessDecision
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AddClaimsToList*
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  isExternal: false
  name: AddClaimsToList
  nameWithType: SamlAuthorizationDecisionStatement.AddClaimsToList
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ClaimType*
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  isExternal: false
  name: ClaimType
  nameWithType: SamlAuthorizationDecisionStatement.ClaimType
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Evidence*
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  isExternal: false
  name: Evidence
  nameWithType: SamlAuthorizationDecisionStatement.Evidence
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly*
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  isExternal: false
  name: IsReadOnly
  nameWithType: SamlAuthorizationDecisionStatement.IsReadOnly
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.MakeReadOnly*
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  isExternal: false
  name: MakeReadOnly
  nameWithType: SamlAuthorizationDecisionStatement.MakeReadOnly
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ReadXml*
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  isExternal: false
  name: ReadXml
  nameWithType: SamlAuthorizationDecisionStatement.ReadXml
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource*
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  isExternal: false
  name: Resource
  nameWithType: SamlAuthorizationDecisionStatement.Resource
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions*
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  isExternal: false
  name: SamlActions
  nameWithType: SamlAuthorizationDecisionStatement.SamlActions
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.WriteXml*
  parent: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  isExternal: false
  name: WriteXml
  nameWithType: SamlAuthorizationDecisionStatement.WriteXml
