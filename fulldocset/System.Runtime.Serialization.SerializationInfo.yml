### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.SerializationInfo
  id: SerializationInfo
  children:
  - System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)
  - System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter,System.Boolean)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.DateTime)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,System.Type)
  - System.Runtime.Serialization.SerializationInfo.AssemblyName
  - System.Runtime.Serialization.SerializationInfo.FullTypeName
  - System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetByte(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetChar(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetEnumerator
  - System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetString(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetValue(System.String,System.Type)
  - System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
  - System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
  - System.Runtime.Serialization.SerializationInfo.MemberCount
  - System.Runtime.Serialization.SerializationInfo.ObjectType
  - System.Runtime.Serialization.SerializationInfo.SetType(System.Type)
  langs:
  - csharp
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
  type: Class
  summary: "Serialize 하거나 개체를 역직렬화 하는 데 필요한 모든 데이터를 저장 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "이 클래스는 사용자 지정 serialization 동작을 사용 하 여 개체에서 사용 됩니다. <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>메서드 중 하나를 <xref:System.Runtime.Serialization.ISerializable>또는 <xref:System.Runtime.Serialization.ISerializationSurrogate>이름, 형식 및 값을 serialize 할 정보를 사용 하 여 SerializationInfo 저장소를 채웁니다.</xref:System.Runtime.Serialization.ISerializationSurrogate> </xref:System.Runtime.Serialization.ISerializable> </xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> 역직렬화 하는 동안 적절 한 함수는이 정보를 추출할 수 있습니다.       개체 추가를 사용 하 여 serialization 때 SerializationInfo 저장소는 <xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A>메서드 deserialization에 사용 하 여 SerializationInfo 저장소에서 추출 및는 <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A>메서드.</xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> </xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A>       Serialization을 사용자 지정 하는 방법에 대 한 자세한 내용은 참조 [사용자 지정 Serialization](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the SerializationInfo for custom serialization and deserialization of various values.  \n  \n [!code-cpp[ISerializable Interface Example#1](~/add/codesnippet/cpp/t-system.runtime.seriali_18_1.cpp)]\n [!code-cs[ISerializable Interface Example#1](~/add/codesnippet/csharp/t-system.runtime.seriali_18_1.cs)]\n [!code-vb[ISerializable Interface Example#1](~/add/codesnippet/visualbasic/t-system.runtime.seriali_18_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class SerializationInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)
  id: '#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)'
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: SerializationInfo(Type,IFormatterConverter)
  nameWithType: SerializationInfo.SerializationInfo(Type,IFormatterConverter)
  fullName: System.Runtime.Serialization.SerializationInfo.SerializationInfo(Type,IFormatterConverter)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Runtime.Serialization.IFormatterConverter>변수로 전달 되는 `converter` 매개 변수 데이터의 내부 표현에서 요청 사용자 형식으로 변환 합니다.</xref:System.Runtime.Serialization.IFormatterConverter> <xref:System.Runtime.Serialization.SerializationInfo>생성 합니다. 포맷터에 의존</xref:System.Runtime.Serialization.SerializationInfo> 하는 내부 데이터의 내부 표현"
  syntax:
    content: public SerializationInfo (Type type, System.Runtime.Serialization.IFormatterConverter converter);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>serialize 할 개체입니다.</xref:System.Type>"
    - id: converter
      type: System.Runtime.Serialization.IFormatterConverter
      description: "<xref href=&quot;System.Runtime.Serialization.IFormatterConverter&quot;> </xref> 역직렬화 중에 사용 합니다."
  overload: System.Runtime.Serialization.SerializationInfo.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>converter</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter,System.Boolean)
  id: '#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter,System.Boolean)'
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: SerializationInfo(Type,IFormatterConverter,Boolean)
  nameWithType: SerializationInfo.SerializationInfo(Type,IFormatterConverter,Boolean)
  fullName: System.Runtime.Serialization.SerializationInfo.SerializationInfo(Type,IFormatterConverter,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 클래스입니다."
  syntax:
    content: public SerializationInfo (Type type, System.Runtime.Serialization.IFormatterConverter converter, bool requireSameTokenInPartialTrust);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>serialize 할 개체입니다.</xref:System.Type>"
    - id: converter
      type: System.Runtime.Serialization.IFormatterConverter
      description: "<xref href=&quot;System.Runtime.Serialization.IFormatterConverter&quot;> </xref> 역직렬화 중에 사용 합니다."
    - id: requireSameTokenInPartialTrust
      type: System.Boolean
      description: "개체 부분 신뢰 환경에서 동일한 토큰 하는지 여부를 나타냅니다."
  overload: System.Runtime.Serialization.SerializationInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)
  id: AddValue(System.String,System.Boolean)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Boolean)
  nameWithType: SerializationInfo.AddValue(String,Boolean)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "에 부울 값을 추가 하는 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다. 그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 <xref:System.Runtime.Serialization.SerializationException>throw 됩니다.</xref:System.Runtime.Serialization.SerializationException> 예를 들면 다음과 같습니다.```c#   void ISerializable.GetObject(SerializationInfo info, StreamingContext context)   {      // This will not cause an exception to be thrown.      info.AddValue(&quot;ABC&quot;, true);      info.AddValue(&quot;abc&quot;, false);      // However, this will cause the SerializationException to be thrown.      info.AddValue(&quot;XYZ&quot;, true);      info.AddValue(&quot;XYZ&quot;, false);   }   ```      ```vb#   Private Sub GetObjectData(ByVal info As SerializationInfo, _   ByVal context As StreamingContext)      &quot; This will not cause an exception to be thrown.      info.AddValue(&quot;ABC&quot;, &quot;upper case&quot;)      info.AddValue(&quot;abc&quot;, &quot;lower case&quot;)      &quot; However, this will cause the SerializationException to be thrown.      info.AddValue(&quot;XYZ&quot;, &quot;same case&quot;)      info.AddValue(&quot;XYZ&quot;, &quot;same case&quot;)   End Sub   ```"
  syntax:
    content: public void AddValue (string name, bool value);
    parameters:
    - id: name
      type: System.String
      description: "나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다."
    - id: value
      type: System.Boolean
      description: "Serialize 하는 부울 값입니다."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "값와 이미 연결 되어 <code> name </code>합니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)
  id: AddValue(System.String,System.Byte)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Byte)
  nameWithType: SerializationInfo.AddValue(String,Byte)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Byte)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "에 8 비트 부호 없는 정수 값을 추가 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다. 그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 <xref:System.Runtime.Serialization.SerializationException>throw 됩니다.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, byte value);
    parameters:
    - id: name
      type: System.String
      description: "나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다."
    - id: value
      type: System.Byte
      description: "직렬화 하는 데 바이트 값입니다."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "값와 이미 연결 되어 <code> name </code>합니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)
  id: AddValue(System.String,System.Char)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Char)
  nameWithType: SerializationInfo.AddValue(String,Char)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Char)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "에 유니코드 문자 값을 추가 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다. 그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 <xref:System.Runtime.Serialization.SerializationException>throw 됩니다.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, char value);
    parameters:
    - id: name
      type: System.String
      description: "나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다."
    - id: value
      type: System.Char
      description: "직렬화 하는 데 문자 값입니다."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "값와 이미 연결 되어 <code> name </code>합니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.DateTime)
  id: AddValue(System.String,System.DateTime)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,DateTime)
  nameWithType: SerializationInfo.AddValue(String,DateTime)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "추가 <xref:System.DateTime>값에 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장.</xref:System.DateTime>"
  remarks: "두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다. 그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 <xref:System.Runtime.Serialization.SerializationException>throw 됩니다.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, DateTime value);
    parameters:
    - id: name
      type: System.String
      description: "나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다."
    - id: value
      type: System.DateTime
      description: "<xref:System.DateTime>직렬화 할 값.</xref:System.DateTime>"
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "값와 이미 연결 되어 <code> name </code>합니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)
  id: AddValue(System.String,System.Decimal)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Decimal)
  nameWithType: SerializationInfo.AddValue(String,Decimal)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Decimal)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "에&10; 진수 값을 추가 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다. 그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 <xref:System.Runtime.Serialization.SerializationException>throw 됩니다.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, decimal value);
    parameters:
    - id: name
      type: System.String
      description: "나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다."
    - id: value
      type: System.Decimal
      description: "직렬화 하는 데&10; 진수 값입니다."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "값와 이미 연결 되어 있으면 <code> name </code>합니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)
  id: AddValue(System.String,System.Double)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Double)
  nameWithType: SerializationInfo.AddValue(String,Double)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Double)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "에 배정밀도 부동 소수점 값을 추가 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다. 그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 <xref:System.Runtime.Serialization.SerializationException>throw 됩니다.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, double value);
    parameters:
    - id: name
      type: System.String
      description: "나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다."
    - id: value
      type: System.Double
      description: "Serialize 하는 double 값입니다."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "값와 이미 연결 되어 <code> name </code>합니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)
  id: AddValue(System.String,System.Int16)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Int16)
  nameWithType: SerializationInfo.AddValue(String,Int16)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int16)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "에 16 비트 부호 있는 정수 값을 추가 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다. 그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 <xref:System.Runtime.Serialization.SerializationException>throw 됩니다.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, short value);
    parameters:
    - id: name
      type: System.String
      description: "나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다."
    - id: value
      type: System.Int16
      description: "<xref uid=&quot;langword_csharp_Int16&quot; name=&quot;Int16&quot; href=&quot;&quot;> </xref> 직렬화 할 값입니다."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "값와 이미 연결 되어 <code> name </code>합니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)
  id: AddValue(System.String,System.Int32)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Int32)
  nameWithType: SerializationInfo.AddValue(String,Int32)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "에 32 비트 부호 있는 정수 값을 추가 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다. 그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 <xref:System.Runtime.Serialization.SerializationException>throw 됩니다.</xref:System.Runtime.Serialization.SerializationException>"
  example:
  - >-
    [!code-cpp[ISerializable Interface Example#1](~/add/codesnippet/cpp/b3789dd4-8567-4492-a19c-_1.cpp)]
     [!code-cs[ISerializable Interface Example#1](~/add/codesnippet/csharp/b3789dd4-8567-4492-a19c-_1.cs)]
     [!code-vb[ISerializable Interface Example#1](~/add/codesnippet/visualbasic/b3789dd4-8567-4492-a19c-_1.vb)]
  syntax:
    content: public void AddValue (string name, int value);
    parameters:
    - id: name
      type: System.String
      description: "나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다."
    - id: value
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Int32&quot; name=&quot;Int32&quot; href=&quot;&quot;> </xref> 직렬화 할 값입니다."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "값와 이미 연결 되어 <code> name </code>합니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)
  id: AddValue(System.String,System.Int64)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Int64)
  nameWithType: SerializationInfo.AddValue(String,Int64)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "에 64 비트 부호 있는 정수 값을 추가 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다. 그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 <xref:System.Runtime.Serialization.SerializationException>throw 됩니다.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, long value);
    parameters:
    - id: name
      type: System.String
      description: "나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다."
    - id: value
      type: System.Int64
      description: "직렬화 하는 데 Int64 값입니다."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "값와 이미 연결 되어 <code> name </code>합니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)
  id: AddValue(System.String,System.Object)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Object)
  nameWithType: SerializationInfo.AddValue(String,Object)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "지정된 된 개체에 추가 된 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 지정된 이름과 관련 된 경우 저장소입니다."
  remarks: "에 포함 된 개체는 `value` 매개 변수에서 반환 되는 형식으로 serialize 되 `value`합니다.       두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다. 그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 <xref:System.Runtime.Serialization.SerializationException>throw 됩니다.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다."
    - id: value
      type: System.Object
      description: "Serialize 할 값입니다. 이 개체의 모든 자식 자동으로 직렬화 됩니다."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "값와 이미 연결 되어 <code> name </code>합니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)
  id: AddValue(System.String,System.SByte)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,SByte)
  nameWithType: SerializationInfo.AddValue(String,SByte)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,SByte)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "에 8 비트 부호 있는 정수 값을 추가 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다. 그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 <xref:System.Runtime.Serialization.SerializationException>throw 됩니다.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, sbyte value);
    parameters:
    - id: name
      type: System.String
      description: "나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다."
    - id: value
      type: System.SByte
      description: "<xref uid=&quot;langword_csharp_Sbyte&quot; name=&quot;Sbyte&quot; href=&quot;&quot;> </xref> 직렬화 할 값입니다."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "값와 이미 연결 되어 <code> name </code>합니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)
  id: AddValue(System.String,System.Single)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Single)
  nameWithType: SerializationInfo.AddValue(String,Single)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Single)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "에 단 정밀도 부동 소수점 값을 추가 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다. 그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 <xref:System.Runtime.Serialization.SerializationException>throw 됩니다.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, float value);
    parameters:
    - id: name
      type: System.String
      description: "나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다."
    - id: value
      type: System.Single
      description: "직렬화 하는 데 단일 값입니다."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "값와 이미 연결 되어 <code> name </code>합니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)
  id: AddValue(System.String,System.UInt16)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,UInt16)
  nameWithType: SerializationInfo.AddValue(String,UInt16)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt16)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "에 16 비트 부호 없는 정수 값을 추가 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다. 그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 <xref:System.Runtime.Serialization.SerializationException>throw 됩니다.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, ushort value);
    parameters:
    - id: name
      type: System.String
      description: "나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다."
    - id: value
      type: System.UInt16
      description: "<xref uid=&quot;langword_csharp_UInt16&quot; name=&quot;UInt16&quot; href=&quot;&quot;> </xref> 직렬화 할 값입니다."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "값와 이미 연결 되어 <code> name </code>합니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)
  id: AddValue(System.String,System.UInt32)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,UInt32)
  nameWithType: SerializationInfo.AddValue(String,UInt32)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "에 32 비트 부호 없는 정수 값을 추가 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다. 그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 <xref:System.Runtime.Serialization.SerializationException>throw 됩니다.</xref:System.Runtime.Serialization.SerializationException>"
  example:
  - "The following example uses the <xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A> method to customize the serialization of a type. The code adds a string and an integer to an instance of the <xref:System.Runtime.Serialization.SerializationInfo> class in the <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> method of the <xref:System.Runtime.Serialization.ISerializable> interface. The code also uses the <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> method to retrieve values from the <xref:System.Runtime.Serialization.SerializationInfo>.  \n  \n [!code-cs[ISerializable_GetObjectData#0](~/add/codesnippet/csharp/44ffdfaa-67f2-436c-9c0d-_1.cs)]\n [!code-vb[ISerializable_GetObjectData#0](~/add/codesnippet/visualbasic/44ffdfaa-67f2-436c-9c0d-_1.vb)]"
  syntax:
    content: public void AddValue (string name, uint value);
    parameters:
    - id: name
      type: System.String
      description: "나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다."
    - id: value
      type: System.UInt32
      description: "<xref uid=&quot;langword_csharp_UInt32&quot; name=&quot;UInt32&quot; href=&quot;&quot;> </xref> 직렬화 할 값입니다."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "값와 이미 연결 되어 <code> name </code>합니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)
  id: AddValue(System.String,System.UInt64)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,UInt64)
  nameWithType: SerializationInfo.AddValue(String,UInt64)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "에 64 비트 부호 없는 정수 값을 추가 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다. 그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 <xref:System.Runtime.Serialization.SerializationException>throw 됩니다.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, ulong value);
    parameters:
    - id: name
      type: System.String
      description: "나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다."
    - id: value
      type: System.UInt64
      description: "<xref uid=&quot;langword_csharp_UInt64&quot; name=&quot;UInt64&quot; href=&quot;&quot;> </xref> 직렬화 할 값입니다."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "값와 이미 연결 되어 <code> name </code>합니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,System.Type)
  id: AddValue(System.String,System.Object,System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Object,Type)
  nameWithType: SerializationInfo.AddValue(String,Object,Type)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Object,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "에 값을 추가 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장, 여기서 <code> value </code> 관련 된 <code> name </code> 으로 serialize 되 고 <xref:System.Type> <code> type </code>.</xref:System.Type>"
  remarks: "할당 된 형식이 항상는 개체의 형식 또는 부모 중 하나입니다.       두 값을 추가 하는 경우 대/소문자만 다르고 이름은 동일한, 예외가 throw 됩니다, 권장 되지 않는 합니다. 그러나 정확히 동일한 이름 가진 두 개의 값을 추가 하면는 <xref:System.Runtime.Serialization.SerializationException>throw 됩니다.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, object value, Type type);
    parameters:
    - id: name
      type: System.String
      description: "나중에 역직렬화 할 수 있도록 값을 연결할 이름입니다."
    - id: value
      type: System.Object
      description: "Serialize 할 값입니다. 이 개체의 모든 자식 자동으로 직렬화 됩니다."
    - id: type
      type: System.Type
      description: "<xref:System.Type>현재 개체와 연결할.</xref:System.Type> 이 매개 변수 형식 개체 자체 또는 해당 기본 클래스 중 하나의 형식을 항상 있어야 합니다."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If <code>name</code> or <code>type</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "값와 이미 연결 되어 <code> name </code>합니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AssemblyName
  id: AssemblyName
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AssemblyName
  nameWithType: SerializationInfo.AssemblyName
  fullName: System.Runtime.Serialization.SerializationInfo.AssemblyName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "만 직렬화 하는 동안 직렬화 하는 데 형식의 어셈블리 이름을 가져오거나 설정 합니다."
  remarks: "이름에서 반환 된 값과 같습니다 <xref:System.Reflection.Assembly.FullName%2A>포함 하는 형식의 어셈블리의 속성입니다.</xref:System.Reflection.Assembly.FullName%2A> 포맷터가이 개체에 대 한 형식 정보를 직렬화 할 때 사용 하는 어셈블리 이름입니다.       어셈블리 이름에는 어셈블리, 버전, 문화권 및 개체에 대 한 보안 정보의 이름을 포함합니다.       (예: 특정 유형에 대 한 프록시를 보낼)으로 serialize 되는 형식을 변경 하 고 있는 사용자는이 속성의 값을 설정 합니다.      > [!CAUTION] > 이므로이 속성의 값이 정의 되지 역직렬화 하는 동안이 속성을 사용 하지 않습니다."
  syntax:
    content: public string AssemblyName { get; set; }
    return:
      type: System.String
      description: "Serialize 하는 형식의 어셈블리의 전체 이름입니다."
  overload: System.Runtime.Serialization.SerializationInfo.AssemblyName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "속성이로 설정 된 값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.FullTypeName
  id: FullTypeName
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: FullTypeName
  nameWithType: SerializationInfo.FullTypeName
  fullName: System.Runtime.Serialization.SerializationInfo.FullTypeName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "전체 이름을 가져오거나 설정 합니다.는 <xref:System.Type>serialize 하는 데.</xref:System.Type>"
  remarks: "FullTypeName는 <xref:System.Type.FullName%2A> <xref:System.Type>.</xref:System.Type> </xref:System.Type.FullName%2A> 호출 하 여 반환 되는 것과 같습니다. 포맷터가이 개체에 대 한 형식 정보를 직렬화 할 때 사용 하는 형식 이름입니다.       사용자에 게 (예: 특정 유형에 대 한 프록시를 보낼) 직렬화 할 형식을 변경 하는이 속성의 값을 설정 해야 합니다.      > [!CAUTION] > 이므로이 속성의 값이 정의 되지 역직렬화 하는 동안이 속성을 사용 하지 않습니다."
  syntax:
    content: public string FullTypeName { get; set; }
    return:
      type: System.String
      description: "Serialize 하는 형식의 전체 이름입니다."
  overload: System.Runtime.Serialization.SerializationInfo.FullTypeName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "이 속성 값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)
  id: GetBoolean(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetBoolean(String)
  nameWithType: SerializationInfo.GetBoolean(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetBoolean(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "부울 값을 검색 된 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "값은 부울이며 또는 변환할 수 값이 반환 됩니다; 해당 하는 경우 그렇지 않은 경우는 <xref:System.InvalidCastException>throw 됩니다.</xref:System.InvalidCastException> <xref:System.Runtime.Serialization.IFormatterConverter>이 <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> 연관</xref:System.Runtime.Serialization.IFormatterConverter> 하 여 모든 변환은 수행"
  syntax:
    content: public bool GetBoolean (string name);
    parameters:
    - id: name
      type: System.String
      description: "검색할 값과 연결 된 이름입니다."
    return:
      type: System.Boolean
      description: "와 연결 된 부울 값 <code> name </code>합니다."
  overload: System.Runtime.Serialization.SerializationInfo.GetBoolean*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "연결 된 값 <code> name </code> 부울 값을 변환할 수 없습니다."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetByte(System.String)
  id: GetByte(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetByte(String)
  nameWithType: SerializationInfo.GetByte(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetByte(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "8 비트 부호 없는 정수 값을 검색 된 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "값이 8 비트 부호 없는 정수 이거나 값이 반환 됩니다; 해당로 변환할 수 있으면 그렇지 않은 경우는 <xref:System.InvalidCastException>throw 됩니다.</xref:System.InvalidCastException> <xref:System.Runtime.Serialization.IFormatterConverter>이 <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> 연관</xref:System.Runtime.Serialization.IFormatterConverter> 하 여 모든 변환은 수행"
  syntax:
    content: public byte GetByte (string name);
    parameters:
    - id: name
      type: System.String
      description: "검색할 값과 연결 된 이름입니다."
    return:
      type: System.Byte
      description: "과 관련 된 8 비트 부호 없는 정수 <code> name </code>합니다."
  overload: System.Runtime.Serialization.SerializationInfo.GetByte*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "연결 된 값 <code> name </code> 8 비트 부호 없는 정수로 변환할 수 없습니다."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetChar(System.String)
  id: GetChar(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetChar(String)
  nameWithType: SerializationInfo.GetChar(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetChar(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "유니코드 문자 값을 검색 된 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "값은 유니코드 문자 이거나 값이 반환 됩니다; 해당로 변환할 수 있으면 그렇지 않은 경우는 <xref:System.InvalidCastException>throw 됩니다.</xref:System.InvalidCastException> <xref:System.Runtime.Serialization.IFormatterConverter>이 <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> 연관</xref:System.Runtime.Serialization.IFormatterConverter> 하 여 모든 변환은 수행"
  syntax:
    content: public char GetChar (string name);
    parameters:
    - id: name
      type: System.String
      description: "검색할 값과 연결 된 이름입니다."
    return:
      type: System.Char
      description: "와 연결 된 유니코드 문자 <code> name </code>합니다."
  overload: System.Runtime.Serialization.SerializationInfo.GetChar*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "연결 된 값 <code> name </code> 유니코드 문자로 변환할 수 없습니다."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)
  id: GetDateTime(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetDateTime(String)
  nameWithType: SerializationInfo.GetDateTime(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDateTime(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "검색 한 <xref:System.DateTime>에서 값의 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장.</xref:System.DateTime>"
  remarks: "값이는 <xref:System.DateTime>,으로 변환 될 수는 <xref:System.DateTime>, 해당 값이 고, 그렇지 않으면 반환 된 한 <xref:System.InvalidCastException>throw 됩니다.</xref:System.InvalidCastException> </xref:System.DateTime> </xref:System.DateTime> <xref:System.Runtime.Serialization.IFormatterConverter>이 <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> 연관</xref:System.Runtime.Serialization.IFormatterConverter> 하 여 모든 변환은 수행"
  syntax:
    content: public DateTime GetDateTime (string name);
    parameters:
    - id: name
      type: System.String
      description: "검색할 값과 연결 된 이름입니다."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>연관 된 값 <code> name </code>.</xref:System.DateTime>"
  overload: System.Runtime.Serialization.SerializationInfo.GetDateTime*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "연결 된 값 <code> name </code> 변환할 수 없습니다 한 <xref:System.DateTime>값.</xref:System.DateTime>"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)
  id: GetDecimal(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetDecimal(String)
  nameWithType: SerializationInfo.GetDecimal(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDecimal(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "10 진수 값을 검색 된 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "값이&10; 진수, 또는 값이 반환 됩니다; 해당으로 변환 될 수 있는 경우 그렇지 않은 경우는 <xref:System.InvalidCastException>throw 됩니다.</xref:System.InvalidCastException> <xref:System.Runtime.Serialization.IFormatterConverter>이 <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> 연관</xref:System.Runtime.Serialization.IFormatterConverter> 하 여 모든 변환은 수행"
  syntax:
    content: public decimal GetDecimal (string name);
    parameters:
    - id: name
      type: System.String
      description: "검색할 값과 연결 된 이름입니다."
    return:
      type: System.Decimal
      description: "10 진수 값은 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>합니다."
  overload: System.Runtime.Serialization.SerializationInfo.GetDecimal*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "연결 된 값 <code> name </code> 을&10; 진수로 변환할 수 없습니다."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)
  id: GetDouble(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetDouble(String)
  nameWithType: SerializationInfo.GetDouble(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDouble(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "배정밀도 부동 소수점 값을 검색 된 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "값이 double 또는 값이 반환 됩니다; double로 변환 될 수 있는 경우 그렇지 않은 경우는 <xref:System.InvalidCastException>throw 됩니다.</xref:System.InvalidCastException> <xref:System.Runtime.Serialization.IFormatterConverter>이 <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> 연관</xref:System.Runtime.Serialization.IFormatterConverter> 하 여 모든 변환은 수행"
  syntax:
    content: public double GetDouble (string name);
    parameters:
    - id: name
      type: System.String
      description: "검색할 값과 연결 된 이름입니다."
    return:
      type: System.Double
      description: "와 연결 된 배정밀도 부동 소수점 값 <code> name </code>합니다."
  overload: System.Runtime.Serialization.SerializationInfo.GetDouble*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "연결 된 값 <code> name </code> 배정밀도 부동 소수점 값으로 변환할 수 없습니다."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetEnumerator
  id: GetEnumerator
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: SerializationInfo.GetEnumerator()
  fullName: System.Runtime.Serialization.SerializationInfo.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "반환 된 <xref href=&quot;System.Runtime.Serialization.SerializationInfoEnumerator&quot;> </xref> 이름-값 쌍에서 반복 하는 데는 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "이 함수는 스트림에 쓰기 전에 값을 열거 하는 포맷터에 의해 가장 자주 사용 됩니다."
  syntax:
    content: public System.Runtime.Serialization.SerializationInfoEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Runtime.Serialization.SerializationInfoEnumerator
      description: "A <xref href=&quot;System.Runtime.Serialization.SerializationInfoEnumerator&quot;> </xref> 에 포함 된 이름-값 쌍을 구문 분석에 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  overload: System.Runtime.Serialization.SerializationInfo.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)
  id: GetInt16(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetInt16(String)
  nameWithType: SerializationInfo.GetInt16(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt16(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "16 비트 부호 있는 정수 값을 검색 된 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "값을 16 비트 부호 있는 정수 이거나 값이 반환 됩니다; 해당로 변환할 수 있으면 그렇지 않은 경우는 <xref:System.InvalidCastException>throw 됩니다.</xref:System.InvalidCastException> <xref:System.Runtime.Serialization.IFormatterConverter>이 <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> 연관</xref:System.Runtime.Serialization.IFormatterConverter> 하 여 모든 변환은 수행"
  syntax:
    content: public short GetInt16 (string name);
    parameters:
    - id: name
      type: System.String
      description: "검색할 값과 연결 된 이름입니다."
    return:
      type: System.Int16
      description: "와 연결 된 16 비트 부호 있는 정수 <code> name </code>합니다."
  overload: System.Runtime.Serialization.SerializationInfo.GetInt16*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "연결 된 값 <code> name </code> 16 비트 부호 있는 정수로 변환할 수 없습니다."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)
  id: GetInt32(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetInt32(String)
  nameWithType: SerializationInfo.GetInt32(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt32(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "32 비트 부호 있는 정수 값을 검색 된 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "값이 32 비트 부호 있는 정수 이거나 값이 반환 됩니다; 해당로 변환할 수 있으면 그렇지 않은 경우는 <xref:System.InvalidCastException>throw 됩니다.</xref:System.InvalidCastException> <xref:System.Runtime.Serialization.IFormatterConverter>이 <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> 연관</xref:System.Runtime.Serialization.IFormatterConverter> 하 여 모든 변환은 수행"
  example:
  - >-
    [!code-cpp[ISerializable Interface Example#1](~/add/codesnippet/cpp/m-system.runtime.seriali_2_1.cpp)]
     [!code-cs[ISerializable Interface Example#1](~/add/codesnippet/csharp/m-system.runtime.seriali_2_1.cs)]
     [!code-vb[ISerializable Interface Example#1](~/add/codesnippet/visualbasic/m-system.runtime.seriali_2_1.vb)]
  syntax:
    content: public int GetInt32 (string name);
    parameters:
    - id: name
      type: System.String
      description: "검색할 값의 이름입니다."
    return:
      type: System.Int32
      description: "과 관련 된 32 비트 부호 있는 정수 <code> name </code>합니다."
  overload: System.Runtime.Serialization.SerializationInfo.GetInt32*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "연결 된 값 <code> name </code> 32 비트 부호 있는 정수로 변환할 수 없습니다."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)
  id: GetInt64(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetInt64(String)
  nameWithType: SerializationInfo.GetInt64(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt64(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "64 비트 부호 있는 정수 값을 검색 된 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "값을 64 비트 부호 있는 정수 이거나 값이 반환 됩니다; 해당로 변환할 수 있으면 그렇지 않은 경우는 <xref:System.InvalidCastException>throw 됩니다.</xref:System.InvalidCastException> <xref:System.Runtime.Serialization.IFormatterConverter>이 <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> 연관</xref:System.Runtime.Serialization.IFormatterConverter> 하 여 모든 변환은 수행"
  syntax:
    content: public long GetInt64 (string name);
    parameters:
    - id: name
      type: System.String
      description: "검색할 값과 연결 된 이름입니다."
    return:
      type: System.Int64
      description: "과 관련 된 64 비트 부호 있는 정수 <code> name </code>합니다."
  overload: System.Runtime.Serialization.SerializationInfo.GetInt64*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "연결 된 값 <code> name </code> 64 비트 부호 있는 정수로 변환할 수 없습니다."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)
  id: GetSByte(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetSByte(String)
  nameWithType: SerializationInfo.GetSByte(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetSByte(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "8 비트 부호 있는 정수 값을 검색 된 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "값이는 `Int8`,으로 변환 될 수는 `Int8`, 해당 값이 고, 그렇지 않으면 반환 된 한 <xref:System.InvalidCastException>throw 됩니다.</xref:System.InvalidCastException> <xref:System.Runtime.Serialization.IFormatterConverter>이 <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> 연관</xref:System.Runtime.Serialization.IFormatterConverter> 하 여 모든 변환은 수행"
  syntax:
    content: public sbyte GetSByte (string name);
    parameters:
    - id: name
      type: System.String
      description: "검색할 값과 연결 된 이름입니다."
    return:
      type: System.SByte
      description: "과 관련 된 8 비트 부호 있는 정수 <code> name </code>합니다."
  overload: System.Runtime.Serialization.SerializationInfo.GetSByte*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "연결 된 값 <code> name </code> 8 비트 부호 있는 정수로 변환할 수 없습니다."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)
  id: GetSingle(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetSingle(String)
  nameWithType: SerializationInfo.GetSingle(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetSingle(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "단 정밀도 부동 소수점 값을 검색 된 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "값이 단 정밀도 부동 소수점 숫자 이거나 값이 반환 됩니다; 해당로 변환할 수 있으면 그렇지 않은 경우는 <xref:System.InvalidCastException>throw 됩니다.</xref:System.InvalidCastException> <xref:System.Runtime.Serialization.IFormatterConverter>이 <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> 연관</xref:System.Runtime.Serialization.IFormatterConverter> 하 여 모든 변환은 수행"
  syntax:
    content: public float GetSingle (string name);
    parameters:
    - id: name
      type: System.String
      description: "검색할 값의 이름입니다."
    return:
      type: System.Single
      description: "연결 된 단 정밀도 부동 소수점 값 <code> name </code>합니다."
  overload: System.Runtime.Serialization.SerializationInfo.GetSingle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "연결 된 값 <code> name </code> 단 정밀도 부동 소수점 값으로 변환할 수 없습니다."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetString(System.String)
  id: GetString(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetString(String)
  nameWithType: SerializationInfo.GetString(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetString(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "검색 한 <xref:System.String>에서 값의 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장.</xref:System.String>"
  remarks: "값이는 <xref:System.String>,으로 변환 될 수는 <xref:System.String>, 해당 값이 고, 그렇지 않으면 반환 된 한 <xref:System.InvalidCastException>throw 됩니다.</xref:System.InvalidCastException> </xref:System.String> </xref:System.String> <xref:System.Runtime.Serialization.IFormatterConverter>이 <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> 연관</xref:System.Runtime.Serialization.IFormatterConverter> 하 여 모든 변환은 수행"
  syntax:
    content: public string GetString (string name);
    parameters:
    - id: name
      type: System.String
      description: "검색할 값과 연결 된 이름입니다."
    return:
      type: System.String
      description: "<xref:System.String>연관 <code> name </code>.</xref:System.String>"
  overload: System.Runtime.Serialization.SerializationInfo.GetString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "연결 된 값 <code> name </code> <xref:System.String>.</xref:System.String> 변환할 수 없습니다."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)
  id: GetUInt16(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetUInt16(String)
  nameWithType: SerializationInfo.GetUInt16(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt16(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "16 비트 부호 없는 정수 값을 검색 된 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "값이 16 비트 부호 없는 정수 이거나 값이 반환 됩니다; 해당로 변환할 수 있으면 그렇지 않은 경우는 <xref:System.InvalidCastException>throw 됩니다.</xref:System.InvalidCastException> <xref:System.Runtime.Serialization.IFormatterConverter>이 <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> 연관</xref:System.Runtime.Serialization.IFormatterConverter> 하 여 모든 변환은 수행"
  syntax:
    content: public ushort GetUInt16 (string name);
    parameters:
    - id: name
      type: System.String
      description: "검색할 값과 연결 된 이름입니다."
    return:
      type: System.UInt16
      description: "와 연결 된 16 비트 부호 없는 정수 <code> name </code>합니다."
  overload: System.Runtime.Serialization.SerializationInfo.GetUInt16*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "연결 된 값 <code> name </code> 16 비트 부호 없는 정수로 변환할 수 없습니다."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)
  id: GetUInt32(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetUInt32(String)
  nameWithType: SerializationInfo.GetUInt32(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt32(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "32 비트 부호 없는 정수 값을 검색 된 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "값이 32 비트 부호 있는 정수 이거나 값이 반환 됩니다; 해당로 변환할 수 있으면 그렇지 않은 경우는 <xref:System.InvalidCastException>throw 됩니다.</xref:System.InvalidCastException> <xref:System.Runtime.Serialization.IFormatterConverter>이 <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> 연관</xref:System.Runtime.Serialization.IFormatterConverter> 하 여 모든 변환은 수행"
  syntax:
    content: public uint GetUInt32 (string name);
    parameters:
    - id: name
      type: System.String
      description: "검색할 값과 연결 된 이름입니다."
    return:
      type: System.UInt32
      description: "과 관련 된 32 비트 부호 없는 정수 <code> name </code>합니다."
  overload: System.Runtime.Serialization.SerializationInfo.GetUInt32*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "연결 된 값 <code> name </code> 32 비트 부호 없는 정수로 변환할 수 없습니다."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)
  id: GetUInt64(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetUInt64(String)
  nameWithType: SerializationInfo.GetUInt64(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt64(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "64 비트 부호 없는 정수 값을 검색 된 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "값은 64 비트 부호 없는 정수 이거나 값이 반환 됩니다; 해당로 변환할 수 있으면 그렇지 않은 경우는 <xref:System.InvalidCastException>throw 됩니다.</xref:System.InvalidCastException> <xref:System.Runtime.Serialization.IFormatterConverter>이 <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> 연관</xref:System.Runtime.Serialization.IFormatterConverter> 하 여 모든 변환은 수행"
  syntax:
    content: public ulong GetUInt64 (string name);
    parameters:
    - id: name
      type: System.String
      description: "검색할 값과 연결 된 이름입니다."
    return:
      type: System.UInt64
      description: "과 관련 된 64 비트 부호 없는 정수 <code> name </code>합니다."
  overload: System.Runtime.Serialization.SerializationInfo.GetUInt64*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "연결 된 값 <code> name </code> 64 비트 부호 없는 정수로 변환할 수 없습니다."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetValue(System.String,System.Type)
  id: GetValue(System.String,System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetValue(String,Type)
  nameWithType: SerializationInfo.GetValue(String,Type)
  fullName: System.Runtime.Serialization.SerializationInfo.GetValue(String,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "값을 검색 된 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  remarks: "데이터에 저장 하는 경우는 <xref:System.Runtime.Serialization.SerializationInfo>는 요청 된 형식 (또는 해당 파생된 클래스 중 하나), 해당 값이 반환 직접.</xref:System.Runtime.Serialization.SerializationInfo> 그렇지 않으면 <xref:System.Runtime.Serialization.IFormatterConverter.Convert%2A?displayProperty=fullName>적절 한 형식으로 변환 하기 위해 호출 됩니다.</xref:System.Runtime.Serialization.IFormatterConverter.Convert%2A?displayProperty=fullName>       GetValue 메서드에 의해 반환 된 값 수 항상 안전 하 게 캐스팅할 수에 지정 된 형식에는 `type` 매개 변수입니다."
  example:
  - "The following code example demonstrates the use of the GetValue method:  \n  \n [!code-vb[Classic SerializationInfo.GetValue Example#1](~/add/codesnippet/visualbasic/a88aeee3-6425-4869-aee2-_1.vb)]\n [!code-cs[Classic SerializationInfo.GetValue Example#1](~/add/codesnippet/csharp/a88aeee3-6425-4869-aee2-_1.cs)]\n [!code-cpp[Classic SerializationInfo.GetValue Example#1](~/add/codesnippet/cpp/a88aeee3-6425-4869-aee2-_1.cpp)]"
  syntax:
    content: public object GetValue (string name, Type type);
    parameters:
    - id: name
      type: System.String
      description: "검색할 값과 연결 된 이름입니다."
    - id: type
      type: System.Type
      description: "<xref:System.Type>검색할 값입니다.</xref:System.Type> 저장 된 값이이 형식으로 변환할 수 없습니다, 시스템에 <xref:System.InvalidCastException>.</xref:System.InvalidCastException> 을 throw 합니다."
    return:
      type: System.Object
      description: "지정 된 개체 <xref:System.Type>연관 <code> name </code>.</xref:System.Type>"
  overload: System.Runtime.Serialization.SerializationInfo.GetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>or <code>type</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "연결 된 값 <code> name </code> 변환할 수 없습니다 <code> type </code>합니다."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "지정 된 이름의 요소는 현재 인스턴스에서 찾을 수 없습니다."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
  id: IsAssemblyNameSetExplicit
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: IsAssemblyNameSetExplicit
  nameWithType: SerializationInfo.IsAssemblyNameSetExplicit
  fullName: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "어셈블리 이름이 명시적으로 설정 되어 있는지 여부를 가져옵니다."
  syntax:
    content: public bool IsAssemblyNameSetExplicit { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>어셈블리 이름; 명시적으로 설정 된 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
  id: IsFullTypeNameSetExplicit
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: IsFullTypeNameSetExplicit
  nameWithType: SerializationInfo.IsFullTypeNameSetExplicit
  fullName: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "전체 형식 이름이 명시적으로 설정 되어 있는지 여부를 가져옵니다."
  syntax:
    content: public bool IsFullTypeNameSetExplicit { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>전체 형식 이름이; 명시적으로 설정 된 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.MemberCount
  id: MemberCount
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: MemberCount
  nameWithType: SerializationInfo.MemberCount
  fullName: System.Runtime.Serialization.SerializationInfo.MemberCount
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "에 추가 된 멤버의 수를 가져옵니다는 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 저장 합니다."
  syntax:
    content: public int MemberCount { get; }
    return:
      type: System.Int32
      description: "현재 추가 된 멤버 수가 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>합니다."
  overload: System.Runtime.Serialization.SerializationInfo.MemberCount*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.ObjectType
  id: ObjectType
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: ObjectType
  nameWithType: SerializationInfo.ObjectType
  fullName: System.Runtime.Serialization.SerializationInfo.ObjectType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Serialize 할 개체의 형식을 반환 합니다."
  syntax:
    content: public Type ObjectType { get; }
    return:
      type: System.Type
      description: "Serialize 되는 개체의 형식입니다."
  overload: System.Runtime.Serialization.SerializationInfo.ObjectType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.SetType(System.Type)
  id: SetType(System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: SetType(Type)
  nameWithType: SerializationInfo.SetType(Type)
  fullName: System.Runtime.Serialization.SerializationInfo.SetType(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "설정의 <xref:System.Type>serialize 할 개체입니다.</xref:System.Type>"
  remarks: "<xref:System.Runtime.Serialization.Formatter>에는 <xref:System.Type> <xref:System.Runtime.Serialization.SerializationInfo>인스턴스 <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>.</xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> 전달 하기 전에</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Type> 설정</xref:System.Runtime.Serialization.Formatter> 그러나 사용자에 게 해당 개체에 대 한 프록시를 보낼 됩니다이 표시 유형을 변경 해야 <xref:System.Runtime.Serialization.SerializationInfo>인스턴스.</xref:System.Runtime.Serialization.SerializationInfo> 모두 설정 <xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A>및 <xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A>.</xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A> </xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A> 같습니다 SetType 메서드를 사용 하 여"
  example:
  - >-
    [!code-cs[IObjectReference Interface Example#1](~/add/codesnippet/csharp/m-system.runtime.seriali_6_1.cs)]
     [!code-cpp[IObjectReference Interface Example#1](~/add/codesnippet/cpp/m-system.runtime.seriali_6_1.cpp)]
     [!code-vb[IObjectReference Interface Example#1](~/add/codesnippet/visualbasic/m-system.runtime.seriali_6_1.vb)]
  syntax:
    content: public void SetType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>serialize 할 개체입니다.</xref:System.Type>"
  overload: System.Runtime.Serialization.SerializationInfo.SetType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SerializationInfo(Type,IFormatterConverter)
  nameWithType: SerializationInfo.SerializationInfo(Type,IFormatterConverter)
  fullName: System.Runtime.Serialization.SerializationInfo.SerializationInfo(Type,IFormatterConverter)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Serialization.IFormatterConverter
  parent: System.Runtime.Serialization
  isExternal: false
  name: IFormatterConverter
  nameWithType: IFormatterConverter
  fullName: System.Runtime.Serialization.IFormatterConverter
- uid: System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter,System.Boolean)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SerializationInfo(Type,IFormatterConverter,Boolean)
  nameWithType: SerializationInfo.SerializationInfo(Type,IFormatterConverter,Boolean)
  fullName: System.Runtime.Serialization.SerializationInfo.SerializationInfo(Type,IFormatterConverter,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Boolean)
  nameWithType: SerializationInfo.AddValue(String,Boolean)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Byte)
  nameWithType: SerializationInfo.AddValue(String,Byte)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Char)
  nameWithType: SerializationInfo.AddValue(String,Char)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.DateTime)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,DateTime)
  nameWithType: SerializationInfo.AddValue(String,DateTime)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Decimal)
  nameWithType: SerializationInfo.AddValue(String,Decimal)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Decimal)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Double)
  nameWithType: SerializationInfo.AddValue(String,Double)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Int16)
  nameWithType: SerializationInfo.AddValue(String,Int16)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int16)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Int32)
  nameWithType: SerializationInfo.AddValue(String,Int32)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Int64)
  nameWithType: SerializationInfo.AddValue(String,Int64)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Object)
  nameWithType: SerializationInfo.AddValue(String,Object)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Object)
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,SByte)
  nameWithType: SerializationInfo.AddValue(String,SByte)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,SByte)
- uid: System.SByte
  parent: System
  isExternal: true
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Single)
  nameWithType: SerializationInfo.AddValue(String,Single)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,UInt16)
  nameWithType: SerializationInfo.AddValue(String,UInt16)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt16)
- uid: System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,UInt32)
  nameWithType: SerializationInfo.AddValue(String,UInt32)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt32)
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,UInt64)
  nameWithType: SerializationInfo.AddValue(String,UInt64)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt64)
- uid: System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Object,Type)
  nameWithType: SerializationInfo.AddValue(String,Object,Type)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Object,Type)
- uid: System.Runtime.Serialization.SerializationInfo.AssemblyName
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AssemblyName
  nameWithType: SerializationInfo.AssemblyName
  fullName: System.Runtime.Serialization.SerializationInfo.AssemblyName
- uid: System.Runtime.Serialization.SerializationInfo.FullTypeName
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: FullTypeName
  nameWithType: SerializationInfo.FullTypeName
  fullName: System.Runtime.Serialization.SerializationInfo.FullTypeName
- uid: System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetBoolean(String)
  nameWithType: SerializationInfo.GetBoolean(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetBoolean(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetByte(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetByte(String)
  nameWithType: SerializationInfo.GetByte(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetByte(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetChar(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetChar(String)
  nameWithType: SerializationInfo.GetChar(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetChar(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDateTime(String)
  nameWithType: SerializationInfo.GetDateTime(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDateTime(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDecimal(String)
  nameWithType: SerializationInfo.GetDecimal(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDecimal(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDouble(String)
  nameWithType: SerializationInfo.GetDouble(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDouble(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetEnumerator
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetEnumerator()
  nameWithType: SerializationInfo.GetEnumerator()
  fullName: System.Runtime.Serialization.SerializationInfo.GetEnumerator()
- uid: System.Runtime.Serialization.SerializationInfoEnumerator
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfoEnumerator
  nameWithType: SerializationInfoEnumerator
  fullName: System.Runtime.Serialization.SerializationInfoEnumerator
- uid: System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt16(String)
  nameWithType: SerializationInfo.GetInt16(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt16(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt32(String)
  nameWithType: SerializationInfo.GetInt32(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt32(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt64(String)
  nameWithType: SerializationInfo.GetInt64(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt64(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetSByte(String)
  nameWithType: SerializationInfo.GetSByte(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetSByte(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetSingle(String)
  nameWithType: SerializationInfo.GetSingle(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetSingle(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetString(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetString(String)
  nameWithType: SerializationInfo.GetString(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetString(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt16(String)
  nameWithType: SerializationInfo.GetUInt16(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt16(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt32(String)
  nameWithType: SerializationInfo.GetUInt32(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt32(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt64(String)
  nameWithType: SerializationInfo.GetUInt64(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt64(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetValue(System.String,System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetValue(String,Type)
  nameWithType: SerializationInfo.GetValue(String,Type)
  fullName: System.Runtime.Serialization.SerializationInfo.GetValue(String,Type)
- uid: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: IsAssemblyNameSetExplicit
  nameWithType: SerializationInfo.IsAssemblyNameSetExplicit
  fullName: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
- uid: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: IsFullTypeNameSetExplicit
  nameWithType: SerializationInfo.IsFullTypeNameSetExplicit
  fullName: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
- uid: System.Runtime.Serialization.SerializationInfo.MemberCount
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: MemberCount
  nameWithType: SerializationInfo.MemberCount
  fullName: System.Runtime.Serialization.SerializationInfo.MemberCount
- uid: System.Runtime.Serialization.SerializationInfo.ObjectType
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: ObjectType
  nameWithType: SerializationInfo.ObjectType
  fullName: System.Runtime.Serialization.SerializationInfo.ObjectType
- uid: System.Runtime.Serialization.SerializationInfo.SetType(System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SetType(Type)
  nameWithType: SerializationInfo.SetType(Type)
  fullName: System.Runtime.Serialization.SerializationInfo.SetType(Type)
- uid: System.Runtime.Serialization.SerializationInfo.#ctor*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo.SerializationInfo
- uid: System.Runtime.Serialization.SerializationInfo.AddValue*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue
  nameWithType: SerializationInfo.AddValue
- uid: System.Runtime.Serialization.SerializationInfo.AssemblyName*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AssemblyName
  nameWithType: SerializationInfo.AssemblyName
- uid: System.Runtime.Serialization.SerializationInfo.FullTypeName*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: FullTypeName
  nameWithType: SerializationInfo.FullTypeName
- uid: System.Runtime.Serialization.SerializationInfo.GetBoolean*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetBoolean
  nameWithType: SerializationInfo.GetBoolean
- uid: System.Runtime.Serialization.SerializationInfo.GetByte*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetByte
  nameWithType: SerializationInfo.GetByte
- uid: System.Runtime.Serialization.SerializationInfo.GetChar*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetChar
  nameWithType: SerializationInfo.GetChar
- uid: System.Runtime.Serialization.SerializationInfo.GetDateTime*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDateTime
  nameWithType: SerializationInfo.GetDateTime
- uid: System.Runtime.Serialization.SerializationInfo.GetDecimal*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDecimal
  nameWithType: SerializationInfo.GetDecimal
- uid: System.Runtime.Serialization.SerializationInfo.GetDouble*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDouble
  nameWithType: SerializationInfo.GetDouble
- uid: System.Runtime.Serialization.SerializationInfo.GetEnumerator*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetEnumerator
  nameWithType: SerializationInfo.GetEnumerator
- uid: System.Runtime.Serialization.SerializationInfo.GetInt16*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt16
  nameWithType: SerializationInfo.GetInt16
- uid: System.Runtime.Serialization.SerializationInfo.GetInt32*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt32
  nameWithType: SerializationInfo.GetInt32
- uid: System.Runtime.Serialization.SerializationInfo.GetInt64*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt64
  nameWithType: SerializationInfo.GetInt64
- uid: System.Runtime.Serialization.SerializationInfo.GetSByte*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetSByte
  nameWithType: SerializationInfo.GetSByte
- uid: System.Runtime.Serialization.SerializationInfo.GetSingle*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetSingle
  nameWithType: SerializationInfo.GetSingle
- uid: System.Runtime.Serialization.SerializationInfo.GetString*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetString
  nameWithType: SerializationInfo.GetString
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt16*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt16
  nameWithType: SerializationInfo.GetUInt16
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt32*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt32
  nameWithType: SerializationInfo.GetUInt32
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt64*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt64
  nameWithType: SerializationInfo.GetUInt64
- uid: System.Runtime.Serialization.SerializationInfo.GetValue*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetValue
  nameWithType: SerializationInfo.GetValue
- uid: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: IsAssemblyNameSetExplicit
  nameWithType: SerializationInfo.IsAssemblyNameSetExplicit
- uid: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: IsFullTypeNameSetExplicit
  nameWithType: SerializationInfo.IsFullTypeNameSetExplicit
- uid: System.Runtime.Serialization.SerializationInfo.MemberCount*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: MemberCount
  nameWithType: SerializationInfo.MemberCount
- uid: System.Runtime.Serialization.SerializationInfo.ObjectType*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: ObjectType
  nameWithType: SerializationInfo.ObjectType
- uid: System.Runtime.Serialization.SerializationInfo.SetType*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SetType
  nameWithType: SerializationInfo.SetType
