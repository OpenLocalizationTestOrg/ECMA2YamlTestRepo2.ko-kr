### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.XmlReturnReader
  id: XmlReturnReader
  children:
  - System.Web.Services.Protocols.XmlReturnReader.#ctor
  - System.Web.Services.Protocols.XmlReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.XmlReturnReader.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.XmlReturnReader.Initialize(System.Object)
  - System.Web.Services.Protocols.XmlReturnReader.Read(System.Net.WebResponse,System.IO.Stream)
  langs:
  - csharp
  name: XmlReturnReader
  nameWithType: XmlReturnReader
  fullName: System.Web.Services.Protocols.XmlReturnReader
  type: Class
  summary: "읽기는 SOAP 하지 않고 HTTP를 사용 하 여 구현 하는 웹 서비스 클라이언트에 대 한 들어오는 응답의 본문으로 인코딩된 XML에서 값을 반환 합니다."
  remarks: "XmlReturnReader 및 기타 클래스에는 <xref:System.Web.Services.Protocols>네임 스페이스는 HTTP GET 및 HTTP POST 작업을 통해 웹 서비스의.NET Framework의 구현을 지원 합니다.</xref:System.Web.Services.Protocols> 웹 서비스 작성자 및 독자 serialize 및 deserialize를 각각 매개 변수 또는 웹 메서드의 반환 개체와 HTTP 요청 또는 응답 스트림을 사이입니다. 웹 서비스 작성자 및 독자 전송에 HTTP를 사용 하지만 SOAP 표준을 사용 하 여 메시지를 교환 하지는 않습니다. XmlReturnReader 클래스 웹 메서드 반환 값으로 클라이언트 쪽 읽기 XML 문서를 구현합니다. XML 문서는 HTTP 응답의 본문에서 인코딩됩니다.       일반적으로 않아도 됩니다 XmlReturnReader를 직접 사용 하도록 합니다. 대신 HTTP GET 또는 HTTP POST 구현에 따라 클라이언트 프록시 코드를 생성 하는 Wsdl.exe 도구, 적용는 <xref:System.Web.Services.Protocols.HttpMethodAttribute>각 웹 메서드에 특성을 설정 하 고 <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>속성 XmlReturnReader.</xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> </xref:System.Web.Services.Protocols.HttpMethodAttribute>"
  syntax:
    content: 'public class XmlReturnReader : System.Web.Services.Protocols.MimeReturnReader'
  inheritance:
  - System.Object
  - System.Web.Services.Protocols.MimeFormatter
  - System.Web.Services.Protocols.MimeReturnReader
  implements: []
  inheritedMembers:
  - System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  platform:
  - net462
- uid: System.Web.Services.Protocols.XmlReturnReader.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.XmlReturnReader
  langs:
  - csharp
  name: XmlReturnReader()
  nameWithType: XmlReturnReader.XmlReturnReader()
  fullName: System.Web.Services.Protocols.XmlReturnReader.XmlReturnReader()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.Services.Protocols.XmlReturnReader&quot;> </xref> 클래스입니다."
  syntax:
    content: public XmlReturnReader ();
    parameters: []
  overload: System.Web.Services.Protocols.XmlReturnReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.XmlReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  id: GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.XmlReturnReader
  langs:
  - csharp
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: XmlReturnReader.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.XmlReturnReader.GetInitializer(LogicalMethodInfo)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "에 지정된 된 메서드에 대 한 이니셜라이저를 반환합니다."
  remarks: "이니셜라이저는 Initialize 메서드를 매개 변수로 전달 되는 개체입니다. 에 대 한는 <xref:System.Web.Services.Protocols.XmlReturnReader>클래스에서 이니셜라이저는는 <xref:System.Xml.Serialization.XmlSerializer>웹 메서드의 반환 형식에 대 한 개체입니다.</xref:System.Xml.Serialization.XmlSerializer> </xref:System.Web.Services.Protocols.XmlReturnReader>       GetInitializer 메서드는 서비스 초기화 중 호출 됩니다. 나중 응답 처리 된 시간에는 이니셜라이저는에 전달 된 개체는 <xref:System.Web.Services.Protocols.XmlReturnReader.Initialize%2A>다른 방식의 <xref:System.Web.Services.Protocols.XmlReturnReader>인스턴스.</xref:System.Web.Services.Protocols.XmlReturnReader> </xref:System.Web.Services.Protocols.XmlReturnReader.Initialize%2A> 다른 인스턴스의 실제 읽기를 수행합니다."
  syntax:
    content: public override object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);
    parameters:
    - id: methodInfo
      type: System.Web.Services.Protocols.LogicalMethodInfo
      description: "A <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> 이니셜라이저를 가져올 웹 메서드를 지정 하 합니다."
    return:
      type: System.Object
      description: "지정 된 메서드에 대 한 이니셜라이저입니다."
  overload: System.Web.Services.Protocols.XmlReturnReader.GetInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.XmlReturnReader.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  id: GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.XmlReturnReader
  langs:
  - csharp
  name: GetInitializers(LogicalMethodInfo[])
  nameWithType: XmlReturnReader.GetInitializers(LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.XmlReturnReader.GetInitializers(LogicalMethodInfo[])
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "이니셜라이저의 배열을 해당 메서드 정의의 입력된 배열 하는 개체를 반환 합니다."
  remarks: "이니셜라이저는 Initialize 메서드를 매개 변수로 전달 되는 개체입니다. 에 대 한는 <xref:System.Web.Services.Protocols.XmlReturnReader>클래스에서 이니셜라이저는는 <xref:System.Xml.Serialization.XmlSerializer>웹 메서드의 반환 형식에 대 한 개체입니다.</xref:System.Xml.Serialization.XmlSerializer> </xref:System.Web.Services.Protocols.XmlReturnReader>       GetInitializers 메서드는 서비스 초기화 중 호출 됩니다. 나중에 응답이 처리 될 시간을 각 웹 메서드에 대 한 이니셜라이저 개체 전달 됩니다는 <xref:System.Web.Services.Protocols.XmlReturnReader.Initialize%2A>다른 방식의 <xref:System.Web.Services.Protocols.XmlReturnReader>인스턴스.</xref:System.Web.Services.Protocols.XmlReturnReader> </xref:System.Web.Services.Protocols.XmlReturnReader.Initialize%2A> 다른 인스턴스의 실제 읽기를 수행합니다."
  syntax:
    content: public override object[] GetInitializers (System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);
    parameters:
    - id: methodInfos
      type: System.Web.Services.Protocols.LogicalMethodInfo[]
      description: "형식의 배열 <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> 이니셜라이저를 가져올 웹 메서드를 지정 하는 합니다."
    return:
      type: System.Object[]
      description: "해당 메서드 정의의 입력된 배열에는 이니셜라이저 개체의 배열입니다."
  overload: System.Web.Services.Protocols.XmlReturnReader.GetInitializers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.XmlReturnReader.Initialize(System.Object)
  id: Initialize(System.Object)
  parent: System.Web.Services.Protocols.XmlReturnReader
  langs:
  - csharp
  name: Initialize(Object)
  nameWithType: XmlReturnReader.Initialize(Object)
  fullName: System.Web.Services.Protocols.XmlReturnReader.Initialize(Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "인스턴스를 초기화합니다."
  remarks: "Initialize 메서드를 제공는 <xref:System.Xml.Serialization.XmlSerializer>에서 사용 하는 개체는 <xref:System.Web.Services.Protocols.XmlReturnReader.Read%2A>메서드를 HTTP 응답에 포함 된 XML 문서를 역직렬화 합니다.</xref:System.Web.Services.Protocols.XmlReturnReader.Read%2A> </xref:System.Xml.Serialization.XmlSerializer>       Initialize 메서드는 요청이 처리 될 때 호출 됩니다. 입력된 매개 변수 `o`를 호출 하 여 가져온는 <xref:System.Web.Services.Protocols.XmlReturnReader.GetInitializer%2A>또는 <xref:System.Web.Services.Protocols.XmlReturnReader.GetInitializers%2A>클라이언트 초기화 하는 동안 다른 인스턴스에서 메서드.</xref:System.Web.Services.Protocols.XmlReturnReader.GetInitializers%2A> </xref:System.Web.Services.Protocols.XmlReturnReader.GetInitializer%2A>"
  syntax:
    content: public override void Initialize (object o);
    parameters:
    - id: o
      type: System.Object
      description: "<xref:System.Xml.Serialization.XmlSerializer>호출 되 고 웹 메서드의 반환 형식에 대 한.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Web.Services.Protocols.XmlReturnReader.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.XmlReturnReader.Read(System.Net.WebResponse,System.IO.Stream)
  id: Read(System.Net.WebResponse,System.IO.Stream)
  parent: System.Web.Services.Protocols.XmlReturnReader
  langs:
  - csharp
  name: Read(WebResponse,Stream)
  nameWithType: XmlReturnReader.Read(WebResponse,Stream)
  fullName: System.Web.Services.Protocols.XmlReturnReader.Read(WebResponse,Stream)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "HTTP 응답에 포함 된 XML 문서에서 역직렬화 할 반환 값을 가져옵니다."
  remarks: "HTTP 응답의 XML 콘텐츠를 deserialize 하는 데는 <xref:System.Web.Services.Protocols.XmlReturnReader>읽기 메서드의 클래스의 구현을 사용 하 여는 <xref:System.Xml.Serialization.XmlSerializer>에 인수로 전달 된 개체는 <xref:System.Web.Services.Protocols.XmlReturnReader.Initialize%2A>메서드.</xref:System.Web.Services.Protocols.XmlReturnReader.Initialize%2A> </xref:System.Xml.Serialization.XmlSerializer> </xref:System.Web.Services.Protocols.XmlReturnReader> HTTP 응답의 MIME 콘텐츠 형식이 없으면 예외를 throw `text/xml`합니다. 메서드는 deserialize 된 웹 메서드 반환 값을 반환 하기 전에 응답을 닫습니다."
  syntax:
    content: public override object Read (System.Net.WebResponse response, System.IO.Stream responseStream);
    parameters:
    - id: response
      type: System.Net.WebResponse
      description: "<xref href=&quot;System.Web.HttpRequest&quot;> </xref> 작업에 대 한 출력 메시지를 포함 하는 개체입니다."
    - id: responseStream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>콘텐츠가 HTTP 응답의 본문 나타내는 `response` 매개 변수.</xref:System.IO.Stream>"
    return:
      type: System.Object
      description: "HTTP 응답에 포함 된 XML 문서에서 역직렬화 하는 반환 값입니다."
  overload: System.Web.Services.Protocols.XmlReturnReader.Read*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Services.Protocols.MimeReturnReader
  isExternal: false
  name: System.Web.Services.Protocols.MimeReturnReader
- uid: System.Web.Services.Protocols.XmlReturnReader.#ctor
  parent: System.Web.Services.Protocols.XmlReturnReader
  isExternal: false
  name: XmlReturnReader()
  nameWithType: XmlReturnReader.XmlReturnReader()
  fullName: System.Web.Services.Protocols.XmlReturnReader.XmlReturnReader()
- uid: System.Web.Services.Protocols.XmlReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.XmlReturnReader
  isExternal: false
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: XmlReturnReader.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.XmlReturnReader.GetInitializer(LogicalMethodInfo)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Services.Protocols.LogicalMethodInfo
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo
- uid: System.Web.Services.Protocols.XmlReturnReader.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.XmlReturnReader
  isExternal: false
  name: GetInitializers(LogicalMethodInfo[])
  nameWithType: XmlReturnReader.GetInitializers(LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.XmlReturnReader.GetInitializers(LogicalMethodInfo[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Services.Protocols.LogicalMethodInfo[]
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo[]
  spec.csharp:
  - uid: System.Web.Services.Protocols.LogicalMethodInfo
    name: LogicalMethodInfo
    nameWithType: LogicalMethodInfo
    fullName: LogicalMethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Services.Protocols.XmlReturnReader.Initialize(System.Object)
  parent: System.Web.Services.Protocols.XmlReturnReader
  isExternal: false
  name: Initialize(Object)
  nameWithType: XmlReturnReader.Initialize(Object)
  fullName: System.Web.Services.Protocols.XmlReturnReader.Initialize(Object)
- uid: System.Web.Services.Protocols.XmlReturnReader.Read(System.Net.WebResponse,System.IO.Stream)
  parent: System.Web.Services.Protocols.XmlReturnReader
  isExternal: false
  name: Read(WebResponse,Stream)
  nameWithType: XmlReturnReader.Read(WebResponse,Stream)
  fullName: System.Web.Services.Protocols.XmlReturnReader.Read(WebResponse,Stream)
- uid: System.Net.WebResponse
  parent: System.Net
  isExternal: true
  name: WebResponse
  nameWithType: WebResponse
  fullName: System.Net.WebResponse
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.Services.Protocols.XmlReturnReader.#ctor*
  parent: System.Web.Services.Protocols.XmlReturnReader
  isExternal: false
  name: XmlReturnReader
  nameWithType: XmlReturnReader.XmlReturnReader
- uid: System.Web.Services.Protocols.XmlReturnReader.GetInitializer*
  parent: System.Web.Services.Protocols.XmlReturnReader
  isExternal: false
  name: GetInitializer
  nameWithType: XmlReturnReader.GetInitializer
- uid: System.Web.Services.Protocols.XmlReturnReader.GetInitializers*
  parent: System.Web.Services.Protocols.XmlReturnReader
  isExternal: false
  name: GetInitializers
  nameWithType: XmlReturnReader.GetInitializers
- uid: System.Web.Services.Protocols.XmlReturnReader.Initialize*
  parent: System.Web.Services.Protocols.XmlReturnReader
  isExternal: false
  name: Initialize
  nameWithType: XmlReturnReader.Initialize
- uid: System.Web.Services.Protocols.XmlReturnReader.Read*
  parent: System.Web.Services.Protocols.XmlReturnReader
  isExternal: false
  name: Read
  nameWithType: XmlReturnReader.Read
