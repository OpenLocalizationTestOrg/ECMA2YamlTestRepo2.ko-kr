### YamlMime:ManagedReference
items:
- uid: System.Data.EntityClient.EntityDataReader
  id: EntityDataReader
  children:
  - System.Data.EntityClient.EntityDataReader.Close
  - System.Data.EntityClient.EntityDataReader.DataRecordInfo
  - System.Data.EntityClient.EntityDataReader.Depth
  - System.Data.EntityClient.EntityDataReader.Dispose(System.Boolean)
  - System.Data.EntityClient.EntityDataReader.FieldCount
  - System.Data.EntityClient.EntityDataReader.GetBoolean(System.Int32)
  - System.Data.EntityClient.EntityDataReader.GetByte(System.Int32)
  - System.Data.EntityClient.EntityDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.EntityClient.EntityDataReader.GetChar(System.Int32)
  - System.Data.EntityClient.EntityDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.EntityClient.EntityDataReader.GetDataReader(System.Int32)
  - System.Data.EntityClient.EntityDataReader.GetDataRecord(System.Int32)
  - System.Data.EntityClient.EntityDataReader.GetDataTypeName(System.Int32)
  - System.Data.EntityClient.EntityDataReader.GetDateTime(System.Int32)
  - System.Data.EntityClient.EntityDataReader.GetDbDataReader(System.Int32)
  - System.Data.EntityClient.EntityDataReader.GetDecimal(System.Int32)
  - System.Data.EntityClient.EntityDataReader.GetDouble(System.Int32)
  - System.Data.EntityClient.EntityDataReader.GetEnumerator
  - System.Data.EntityClient.EntityDataReader.GetFieldType(System.Int32)
  - System.Data.EntityClient.EntityDataReader.GetFloat(System.Int32)
  - System.Data.EntityClient.EntityDataReader.GetGuid(System.Int32)
  - System.Data.EntityClient.EntityDataReader.GetInt16(System.Int32)
  - System.Data.EntityClient.EntityDataReader.GetInt32(System.Int32)
  - System.Data.EntityClient.EntityDataReader.GetInt64(System.Int32)
  - System.Data.EntityClient.EntityDataReader.GetName(System.Int32)
  - System.Data.EntityClient.EntityDataReader.GetOrdinal(System.String)
  - System.Data.EntityClient.EntityDataReader.GetProviderSpecificFieldType(System.Int32)
  - System.Data.EntityClient.EntityDataReader.GetProviderSpecificValue(System.Int32)
  - System.Data.EntityClient.EntityDataReader.GetProviderSpecificValues(System.Object[])
  - System.Data.EntityClient.EntityDataReader.GetSchemaTable
  - System.Data.EntityClient.EntityDataReader.GetString(System.Int32)
  - System.Data.EntityClient.EntityDataReader.GetValue(System.Int32)
  - System.Data.EntityClient.EntityDataReader.GetValues(System.Object[])
  - System.Data.EntityClient.EntityDataReader.HasRows
  - System.Data.EntityClient.EntityDataReader.IsClosed
  - System.Data.EntityClient.EntityDataReader.IsDBNull(System.Int32)
  - System.Data.EntityClient.EntityDataReader.Item(System.Int32)
  - System.Data.EntityClient.EntityDataReader.Item(System.String)
  - System.Data.EntityClient.EntityDataReader.NextResult
  - System.Data.EntityClient.EntityDataReader.Read
  - System.Data.EntityClient.EntityDataReader.RecordsAffected
  - System.Data.EntityClient.EntityDataReader.VisibleFieldCount
  langs:
  - csharp
  name: EntityDataReader
  nameWithType: EntityDataReader
  fullName: System.Data.EntityClient.EntityDataReader
  type: Class
  summary: "데이터 소스에서 앞 으로만 이동 가능한 행 스트림을 읽습니다."
  remarks: "기능을 결합 된 <xref:System.Data.Common.DbDataReader>클래스 및 <xref:System.Data.IExtendedDataRecord>인터페이스.</xref:System.Data.IExtendedDataRecord> </xref:System.Data.Common.DbDataReader>       EntityDataReader public 생성자를 없습니다. 중 하나를 통해 에서만 가져올 수는 `EntityCommand.ExecuteReader` 메서드 오버 로드 합니다.       [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]모든 결과 집합 후 출력 결과 스트림의 끝에서 저장된 프로시저에서 매개 변수를 넣습니다. 따라서 출력 매개 변수 값을 가져오려면 응용 프로그램에 모든 결과 집합에서 레코드를 모두 이용해 야 합니다. 응용 프로그램은 EntityDataReader을 종료 하는 경우 (도 닫힘는 <xref:System.Data.Common.DbDataReader>), 출력 매개 변수를 채울 수 있습니다.</xref:System.Data.Common.DbDataReader>       EntityDataReader는 암시적으로 출력 매개 변수를 사용할 수 있도록 결과 집합을 사용 하지 않습니다. 따라서 다음에 유의:-EntityDataReader 호출는 <xref:System.Data.Common.DbDataReader.NextResult%2A?displayProperty=fullName>경우에만 <xref:System.Data.EntityClient.EntityDataReader.NextResult%2A?displayProperty=fullName>가 명시적으로 호출 합니다.</xref:System.Data.EntityClient.EntityDataReader.NextResult%2A?displayProperty=fullName> </xref:System.Data.Common.DbDataReader.NextResult%2A?displayProperty=fullName> 경우 <xref:System.Data.Common.DbDataReader.NextResult%2A?displayProperty=fullName>, 예외를 throw 하 [EntityDataReader](~/add/includes/ajax-current-ext-md.md) 에 줄 바꿈이 <xref:System.Data.EntityException>(또는 파생된 예외).</xref:System.Data.EntityException> </xref:System.Data.Common.DbDataReader.NextResult%2A?displayProperty=fullName>      - <xref:System.Data.EntityClient.EntityDataReader.Close%2A>닫기만 <xref:System.Data.Common.DbDataReader>, 하지 않고 대기 중인 레코드나 사용 또는 결과 집합을.</xref:System.Data.Common.DbDataReader> </xref:System.Data.EntityClient.EntityDataReader.Close%2A>      - <xref:System.Data.EntityClient.EntityDataReader.Dispose%2A>삭제 하기만 <xref:System.Data.Common.DbDataReader>, 하지 않고 대기 중인 레코드나 사용 또는 결과 집합을.</xref:System.Data.Common.DbDataReader> </xref:System.Data.EntityClient.EntityDataReader.Dispose%2A>       코드 예제를 보려면 참조 [EntityClient 작업](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)합니다."
  syntax:
    content: 'public class EntityDataReader : System.Data.Common.DbDataReader, System.Data.IExtendedDataRecord'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbDataReader
  implements:
  - System.Data.IExtendedDataRecord
  inheritedMembers:
  - System.Data.Common.DbDataReader.Dispose
  - System.Data.Common.DbDataReader.GetData(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  - System.Data.Common.DbDataReader.GetStream(System.Int32)
  - System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.NextResultAsync
  - System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.ReadAsync
  - System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.Close
  id: Close
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: Close()
  nameWithType: EntityDataReader.Close()
  fullName: System.Data.EntityClient.EntityDataReader.Close()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "닫습니다는 <xref href=&quot;System.Data.EntityClient.EntityDataReader&quot;> </xref> 개체입니다."
  remarks: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]모든 결과 집합 후 출력 결과 스트림의 끝에서 저장된 프로시저에서 매개 변수를 넣습니다. 따라서 출력 매개 변수 값을 가져오려면 응용 프로그램에 모든 결과 집합에서 레코드를 모두 이용해 야 합니다. 응용 프로그램을 종료 하는 경우는 <xref:System.Data.EntityClient.EntityDataReader>(도 닫힘는 <xref:System.Data.Common.DbDataReader>), 출력 매개 변수를 채울 수 있습니다.</xref:System.Data.Common.DbDataReader> </xref:System.Data.EntityClient.EntityDataReader>       <xref:System.Data.EntityClient.EntityDataReader>출력 매개 변수를 사용할 수 있도록 결과 집합을 암시적으로 사용 하지 않습니다.</xref:System.Data.EntityClient.EntityDataReader> 따라서 다음에 유의:- <xref:System.Data.EntityClient.EntityDataReader>호출은 <xref:System.Data.Common.DbDataReader.NextResult%2A?displayProperty=fullName>경우에만 <xref:System.Data.EntityClient.EntityDataReader.NextResult%2A?displayProperty=fullName>가 명시적으로 호출 합니다.</xref:System.Data.EntityClient.EntityDataReader.NextResult%2A?displayProperty=fullName> </xref:System.Data.Common.DbDataReader.NextResult%2A?displayProperty=fullName> </xref:System.Data.EntityClient.EntityDataReader> 경우 <xref:System.Data.Common.DbDataReader.NextResult%2A?displayProperty=fullName>예외를 throw <xref:System.Data.EntityClient.EntityDataReader>에 줄 바꿈이 <xref:System.Data.EntityException>(또는 파생된 예외).</xref:System.Data.EntityException> </xref:System.Data.EntityClient.EntityDataReader> </xref:System.Data.Common.DbDataReader.NextResult%2A?displayProperty=fullName>      -닫기만 닫기는 <xref:System.Data.Common.DbDataReader>, 하지 않고 대기 중인 레코드나 사용 또는 결과 집합을.</xref:System.Data.Common.DbDataReader>      - <xref:System.Data.EntityClient.EntityDataReader.Dispose%2A>삭제 하기만 <xref:System.Data.Common.DbDataReader>, 하지 않고 대기 중인 레코드나 사용 또는 결과 집합을.</xref:System.Data.Common.DbDataReader> </xref:System.Data.EntityClient.EntityDataReader.Dispose%2A>"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.EntityClient.EntityDataReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.DataRecordInfo
  id: DataRecordInfo
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: DataRecordInfo
  nameWithType: EntityDataReader.DataRecordInfo
  fullName: System.Data.EntityClient.EntityDataReader.DataRecordInfo
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Gets <xref href=&quot;System.Data.Common.DataRecordInfo&quot;></xref> for this <xref href=&quot;System.Data.IExtendedDataRecord&quot;></xref>."
  syntax:
    content: public System.Data.Common.DataRecordInfo DataRecordInfo { get; }
    return:
      type: System.Data.Common.DataRecordInfo
      description: "데이터 레코드의 정보입니다."
  overload: System.Data.EntityClient.EntityDataReader.DataRecordInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.Depth
  id: Depth
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: Depth
  nameWithType: EntityDataReader.Depth
  fullName: System.Data.EntityClient.EntityDataReader.Depth
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "현재 행의 중첩 수준을 나타내는 값을 가져옵니다."
  remarks: "가장 바깥쪽 테이블의 중첩 수준은&0;입니다."
  syntax:
    content: public override int Depth { get; }
    return:
      type: System.Int32
      description: "현재 행의 중첩 깊이입니다."
  overload: System.Data.EntityClient.EntityDataReader.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: EntityDataReader.Dispose(Boolean)
  fullName: System.Data.EntityClient.EntityDataReader.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "이 사용 되는 리소스를 해제 <xref href=&quot;System.Data.EntityClient.EntityDataReader&quot;> </xref> 및 <xref:System.Data.EntityClient.EntityDataReader.Close*>.</xref:System.Data.EntityClient.EntityDataReader.Close*> 호출"
  remarks: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]모든 결과 집합 후 출력 결과 스트림의 끝에서 저장된 프로시저에서 매개 변수를 넣습니다. 따라서 출력 매개 변수 값을 가져오려면 응용 프로그램에 모든 결과 집합에서 레코드를 모두 이용해 야 합니다. 응용 프로그램을 종료 하는 경우는 <xref:System.Data.EntityClient.EntityDataReader>(도 닫힘는 <xref:System.Data.Common.DbDataReader>), 출력 매개 변수를 채울 수 있습니다.</xref:System.Data.Common.DbDataReader> </xref:System.Data.EntityClient.EntityDataReader>       [EntityDataReader](~/add/includes/ajax-current-ext-md.md) 암시적으로 출력 매개 변수를 사용할 수 있도록 결과 집합을 사용 하지는 않습니다. 따라서 다음에 유의:- <xref:System.Data.Odbc.OdbcError>호출은 <xref:System.Data.Common.DbDataReader.NextResult%2A?displayProperty=fullName>경우에만 <xref:System.Data.EntityClient.EntityDataReader.NextResult%2A?displayProperty=fullName>가 명시적으로 호출 합니다.</xref:System.Data.EntityClient.EntityDataReader.NextResult%2A?displayProperty=fullName> </xref:System.Data.Common.DbDataReader.NextResult%2A?displayProperty=fullName> </xref:System.Data.Odbc.OdbcError> 경우 <xref:System.Data.Common.DbDataReader.NextResult%2A?displayProperty=fullName>예외를 throw <xref:System.Data.Odbc.OdbcError>에 줄 바꿈이 <xref:System.Data.EntityException>(또는 파생된 예외).</xref:System.Data.EntityException> </xref:System.Data.Odbc.OdbcError> </xref:System.Data.Common.DbDataReader.NextResult%2A?displayProperty=fullName>      - <xref:System.Data.EntityClient.EntityDataReader.Close%2A>닫기만 <xref:System.Data.Common.DbDataReader>, 하지 않고 대기 중인 레코드나 사용 또는 결과 집합을.</xref:System.Data.Common.DbDataReader> </xref:System.Data.EntityClient.EntityDataReader.Close%2A>      - <xref:System.Data.EntityClient.EntityDataReader.Dispose%2A>삭제 하기만 <xref:System.Data.Common.DbDataReader>, 하지 않고 대기 중인 레코드나 사용 또는 결과 집합을.</xref:System.Data.Common.DbDataReader> </xref:System.Data.EntityClient.EntityDataReader.Dispose%2A>"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.Data.EntityClient.EntityDataReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.FieldCount
  id: FieldCount
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: FieldCount
  nameWithType: EntityDataReader.FieldCount
  fullName: System.Data.EntityClient.EntityDataReader.FieldCount
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "현재 행에서 열 수를 가져옵니다."
  remarks: "숨김된 필드도 포함 됩니다. 사용 하 여 <xref:System.Data.EntityClient.EntityDataReaderr.VisibleFieldCount%2A>숨겨진된 필드를 제외 하려면.</xref:System.Data.EntityClient.EntityDataReaderr.VisibleFieldCount%2A>"
  syntax:
    content: public override int FieldCount { get; }
    return:
      type: System.Int32
      description: "현재 행에서 열 수를 지정 합니다."
  overload: System.Data.EntityClient.EntityDataReader.FieldCount*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: EntityDataReader.GetBoolean(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "부울으로 지정 된 열의 값을 가져옵니다."
  syntax:
    content: public override bool GetBoolean (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Boolean
      description: "지정 된 열의 값입니다."
  overload: System.Data.EntityClient.EntityDataReader.GetBoolean*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: EntityDataReader.GetByte(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "지정 된 열의 값을 바이트로 가져옵니다."
  syntax:
    content: public override byte GetByte (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Byte
      description: "지정 된 열의 값입니다."
  overload: System.Data.EntityClient.EntityDataReader.GetByte*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: EntityDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "가 나타내는 위치부터 시작 하는 지정 된 열에서 바이트 스트림을 읽습니다 <code> dataIndex </code>를 가리키는 위치에서 시작 버퍼로 <code> bufferIndex </code>합니다."
  syntax:
    content: public override long GetBytes (int ordinal, long dataOffset, byte[] buffer, int bufferOffset, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    - id: dataOffset
      type: System.Int64
      description: "읽기 작업을 시작할 행 내의 인덱스입니다."
    - id: buffer
      type: System.Byte[]
      description: "데이터를 복사할 대상 버퍼입니다."
    - id: bufferOffset
      type: System.Int32
      description: "데이터를 복사할 버퍼와 인덱스입니다."
    - id: length
      type: System.Int32
      description: "읽을 문자 최대 수입니다."
    return:
      type: System.Int64
      description: "실제 읽은 바이트 수입니다."
  overload: System.Data.EntityClient.EntityDataReader.GetBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: EntityDataReader.GetChar(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "단일 문자로 지정 된 열의 값을 가져옵니다."
  syntax:
    content: public override char GetChar (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Char
      description: "지정 된 열의 값입니다."
  overload: System.Data.EntityClient.EntityDataReader.GetChar*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: EntityDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "가 나타내는 위치부터 시작 하는 지정 된 열에서 문자 스트림을 읽습니다 <code> dataIndex </code>를 가리키는 위치에서 시작 버퍼로 <code> bufferIndex </code>합니다."
  syntax:
    content: public override long GetChars (int ordinal, long dataOffset, char[] buffer, int bufferOffset, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    - id: dataOffset
      type: System.Int64
      description: "읽기 작업을 시작할 행 내의 인덱스입니다."
    - id: buffer
      type: System.Char[]
      description: "데이터를 복사할 대상 버퍼입니다."
    - id: bufferOffset
      type: System.Int32
      description: "데이터를 복사할 버퍼와 인덱스입니다."
    - id: length
      type: System.Int32
      description: "읽을 문자 최대 수입니다."
    return:
      type: System.Int64
      description: "실제 읽은 문자 수입니다."
  overload: System.Data.EntityClient.EntityDataReader.GetChars*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetDataReader(System.Int32)
  id: GetDataReader(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetDataReader(Int32)
  nameWithType: EntityDataReader.GetDataReader(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetDataReader(Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "중첩 된 판독기를 반환 <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> 개체입니다."
  syntax:
    content: public System.Data.Common.DbDataReader GetDataReader (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "열의 서 수입니다."
    return:
      type: System.Data.Common.DbDataReader
      description: "중첩 된 판독기를 <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> 개체입니다."
  overload: System.Data.EntityClient.EntityDataReader.GetDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetDataRecord(System.Int32)
  id: GetDataRecord(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetDataRecord(Int32)
  nameWithType: EntityDataReader.GetDataRecord(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetDataRecord(Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "중첩 된 반환 <xref href=&quot;System.Data.Common.DbDataRecord&quot;> </xref>합니다."
  syntax:
    content: public System.Data.Common.DbDataRecord GetDataRecord (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "개수는 <xref uid=&quot;langword_csharp_DbDataRecord&quot; name=&quot;DbDataRecord&quot; href=&quot;&quot;> </xref> 돌아갑니다."
    return:
      type: System.Data.Common.DbDataRecord
      description: "중첩 된 데이터 레코드입니다."
  overload: System.Data.EntityClient.EntityDataReader.GetDataRecord*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: EntityDataReader.GetDataTypeName(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "지정 된 열 데이터 형식의 이름을 가져옵니다."
  syntax:
    content: public override string GetDataTypeName (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.String
      description: "데이터 형식의 이름입니다."
  overload: System.Data.EntityClient.EntityDataReader.GetDataTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: EntityDataReader.GetDateTime(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "지정 된 열의 값을 가져옵니다는 <xref:System.DateTime>개체입니다.</xref:System.DateTime>"
  syntax:
    content: public override DateTime GetDateTime (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.DateTime
      description: "지정 된 열의 값입니다."
  overload: System.Data.EntityClient.EntityDataReader.GetDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetDbDataReader(System.Int32)
  id: GetDbDataReader(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetDbDataReader(Int32)
  nameWithType: EntityDataReader.GetDbDataReader(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetDbDataReader(Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "반환 된 <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> 에 대 한 요청된 된 열 서 수는 공급자별 구현으로 재정의할 수 있는 개체입니다."
  syntax:
    content: protected override System.Data.Common.DbDataReader GetDbDataReader (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Data.Common.DbDataReader
      description: "데이터 판독기입니다."
  overload: System.Data.EntityClient.EntityDataReader.GetDbDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: EntityDataReader.GetDecimal(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "지정 된 열의 값을 가져옵니다는 <xref:System.Decimal>개체입니다.</xref:System.Decimal>"
  syntax:
    content: public override decimal GetDecimal (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Decimal
      description: "지정 된 열의 값입니다."
  overload: System.Data.EntityClient.EntityDataReader.GetDecimal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: EntityDataReader.GetDouble(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "배정밀도 부동 소수점 숫자로 지정 된 열의 값을 가져옵니다."
  syntax:
    content: public override double GetDouble (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Double
      description: "지정 된 열의 값입니다."
  overload: System.Data.EntityClient.EntityDataReader.GetDouble*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetEnumerator
  id: GetEnumerator
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: EntityDataReader.GetEnumerator()
  fullName: System.Data.EntityClient.EntityDataReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "반환 된 <xref:System.Collections.IEnumerator>데이터 판독기의 행을 반복에 사용할 수 있는.</xref:System.Collections.IEnumerator>"
  syntax:
    content: public override System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>데이터 판독기의 행을 반복에 사용할 수 있는.</xref:System.Collections.IEnumerator>"
  overload: System.Data.EntityClient.EntityDataReader.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: EntityDataReader.GetFieldType(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "지정 된 열의 데이터 형식을 가져옵니다."
  syntax:
    content: public override Type GetFieldType (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Type
      description: "지정 된 열의 데이터 형식입니다."
  overload: System.Data.EntityClient.EntityDataReader.GetFieldType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: EntityDataReader.GetFloat(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "단 정밀도 부동 소수점 숫자의 지정된 된 열의 값을 가져옵니다."
  syntax:
    content: public override float GetFloat (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Single
      description: "지정 된 열의 값입니다."
  overload: System.Data.EntityClient.EntityDataReader.GetFloat*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: EntityDataReader.GetGuid(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "전역적으로 고유 식별자 (GUID)로 지정 된 열의 값을 가져옵니다."
  syntax:
    content: public override Guid GetGuid (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Guid
      description: "지정 된 열의 값입니다."
  overload: System.Data.EntityClient.EntityDataReader.GetGuid*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: EntityDataReader.GetInt16(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "16 비트 부호 있는 정수로 지정 된 열의 값을 가져옵니다."
  syntax:
    content: public override short GetInt16 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Int16
      description: "지정 된 열의 값입니다."
  overload: System.Data.EntityClient.EntityDataReader.GetInt16*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: EntityDataReader.GetInt32(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "부호 있는 32 비트 정수로 지정 된 열의 값을 가져옵니다."
  syntax:
    content: public override int GetInt32 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Int32
      description: "지정 된 열의 값입니다."
  overload: System.Data.EntityClient.EntityDataReader.GetInt32*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: EntityDataReader.GetInt64(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "64 비트 부호 있는 정수로 지정 된 열의 값을 가져옵니다."
  syntax:
    content: public override long GetInt64 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Int64
      description: "지정 된 열의 값입니다."
  overload: System.Data.EntityClient.EntityDataReader.GetInt64*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: EntityDataReader.GetName(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetName(Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "열의 이름을&0;부터 시작 하는 열 서 수 가져옵니다."
  syntax:
    content: public override string GetName (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.String
      description: "지정 된 열의 이름입니다."
  overload: System.Data.EntityClient.EntityDataReader.GetName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: EntityDataReader.GetOrdinal(String)
  fullName: System.Data.EntityClient.EntityDataReader.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "열을 가져옵니다 서 수 열 이름을 지정 합니다."
  syntax:
    content: public override int GetOrdinal (string name);
    parameters:
    - id: name
      type: System.String
      description: "열의 이름입니다."
    return:
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
  overload: System.Data.EntityClient.EntityDataReader.GetOrdinal*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "지정 된 이름이 올바른 열 이름이 아닙니다."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetProviderSpecificFieldType(System.Int32)
  id: GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: EntityDataReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetProviderSpecificFieldType(Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "지정 된 열의 공급자별 필드 형식을 반환합니다."
  syntax:
    content: public override Type GetProviderSpecificFieldType (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Type
      description: "<xref:System.Type>지정 된 열의 데이터 형식을 설명 하는 개체입니다.</xref:System.Type>"
  overload: System.Data.EntityClient.EntityDataReader.GetProviderSpecificFieldType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetProviderSpecificValue(System.Int32)
  id: GetProviderSpecificValue(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetProviderSpecificValue(Int32)
  nameWithType: EntityDataReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetProviderSpecificValue(Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "<xref:System.Object>.</xref:System.Object> 의 인스턴스로 지정 된 열의 값을 가져옵니다."
  syntax:
    content: public override object GetProviderSpecificValue (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Object
      description: "지정 된 열의 값입니다."
  overload: System.Data.EntityClient.EntityDataReader.GetProviderSpecificValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetProviderSpecificValues(System.Object[])
  id: GetProviderSpecificValues(System.Object[])
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetProviderSpecificValues(Object[])
  nameWithType: EntityDataReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.EntityClient.EntityDataReader.GetProviderSpecificValues(Object[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "현재 행에 대 한 컬렉션의 모든 공급자별 특성 열을 가져옵니다."
  syntax:
    content: public override int GetProviderSpecificValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "배열을 <xref:System.Object>특성 열을 복사할 대상.</xref:System.Object>"
    return:
      type: System.Int32
      description: "인스턴스 수가 <xref:System.Object>배열의.</xref:System.Object>"
  overload: System.Data.EntityClient.EntityDataReader.GetProviderSpecificValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetSchemaTable()
  nameWithType: EntityDataReader.GetSchemaTable()
  fullName: System.Data.EntityClient.EntityDataReader.GetSchemaTable()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "반환 된 <xref href=&quot;System.Data.DataTable&quot;> </xref> 의 열 메타 데이터를 설명 하는 <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref>합니다."
  syntax:
    content: public override System.Data.DataTable GetSchemaTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> 열 메타 데이터를 설명 하는 합니다."
  overload: System.Data.EntityClient.EntityDataReader.GetSchemaTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: EntityDataReader.GetString(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetString(Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "<xref:System.String>.</xref:System.String> 의 인스턴스로 지정 된 열의 값을 가져옵니다."
  syntax:
    content: public override string GetString (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.String
      description: "지정 된 열의 값입니다."
  overload: System.Data.EntityClient.EntityDataReader.GetString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: EntityDataReader.GetValue(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "<xref:System.Object>.</xref:System.Object> 의 인스턴스로 지정 된 열의 값을 가져옵니다."
  syntax:
    content: public override object GetValue (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Object
      description: "지정 된 열의 값입니다."
  overload: System.Data.EntityClient.EntityDataReader.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: EntityDataReader.GetValues(Object[])
  fullName: System.Data.EntityClient.EntityDataReader.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "현재 행의 열 값이 있는 개체의 배열을 채웁니다."
  syntax:
    content: public override int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "배열을 <xref:System.Object>특성 열을 복사할 대상.</xref:System.Object>"
    return:
      type: System.Int32
      description: "인스턴스 수가 <xref:System.Object>배열의.</xref:System.Object>"
  overload: System.Data.EntityClient.EntityDataReader.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.HasRows
  id: HasRows
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: HasRows
  nameWithType: EntityDataReader.HasRows
  fullName: System.Data.EntityClient.EntityDataReader.HasRows
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "나타내는 값을 가져옵니다 여부이 <xref href=&quot;System.Data.EntityClient.EntityDataReader&quot;> </xref> 하나 이상의 행을 포함 합니다."
  syntax:
    content: public override bool HasRows { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Data.EntityClient.EntityDataReader&quot;> </xref> 하나 이상의 행이 포함 되어, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.EntityClient.EntityDataReader.HasRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.IsClosed
  id: IsClosed
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: IsClosed
  nameWithType: EntityDataReader.IsClosed
  fullName: System.Data.EntityClient.EntityDataReader.IsClosed
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Data.EntityClient.EntityDataReader&quot;> </xref> 닫혀 있습니다."
  syntax:
    content: public override bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Data.EntityClient.EntityDataReader&quot;> </xref> 을 닫지 않습니다 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.EntityClient.EntityDataReader.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: EntityDataReader.IsDBNull(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "열에 존재 하지 않거나 누락 된 값이 들어 있는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public override bool IsDBNull (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정 된 열은에 해당 하는 경우 <xref href=&quot;System.DBNull&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.EntityClient.EntityDataReader.IsDBNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: EntityDataReader.Item(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.Item(Int32)
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "<xref:System.Object>.</xref:System.Object> 의 인스턴스로 지정 된 열의 값을 가져옵니다."
  syntax:
    content: public override object this[int ordinal] { get; }
    parameters:
    - id: ordinal
      type: System.Int32
      description: "0부터 시작 하는 열 서 수"
    return:
      type: System.Object
      description: "지정 된 열의 값입니다."
  overload: System.Data.EntityClient.EntityDataReader.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.Item(System.String)
  id: Item(System.String)
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: Item(String)
  nameWithType: EntityDataReader.Item(String)
  fullName: System.Data.EntityClient.EntityDataReader.Item(String)
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "<xref:System.Object>.</xref:System.Object> 의 인스턴스로 지정 된 열의 값을 가져옵니다."
  syntax:
    content: public override object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "열의 이름입니다."
    return:
      type: System.Object
      description: "지정 된 열의 값입니다."
  overload: System.Data.EntityClient.EntityDataReader.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.NextResult
  id: NextResult
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: NextResult()
  nameWithType: EntityDataReader.NextResult()
  fullName: System.Data.EntityClient.EntityDataReader.NextResult()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "일괄 처리 문의 결과 읽을 때 판독기를 다음 결과로 이동 합니다."
  remarks: "이 메서드를 사용 하면 일괄 처리는 데이터 공급자에 제출 될 때 반환 되는 여러 결과 집합을 처리할 수 있습니다."
  syntax:
    content: public override bool NextResult ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>결과 집합이 더 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.EntityClient.EntityDataReader.NextResult*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.Read
  id: Read
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: Read()
  nameWithType: EntityDataReader.Read()
  fullName: System.Data.EntityClient.EntityDataReader.Read()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "판독기는 결과 집합의 다음 레코드로 이동합니다."
  remarks: "데이터 판독기의 기본 위치는 첫 번째 레코드 바로 앞 이므로 따라서 호출 해야 `Read` 데이터 액세스를 시작 합니다."
  syntax:
    content: public override bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>행이 더 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.EntityClient.EntityDataReader.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: RecordsAffected
  nameWithType: EntityDataReader.RecordsAffected
  fullName: System.Data.EntityClient.EntityDataReader.RecordsAffected
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "변경, 삽입 또는 SQL 문 실행 하 여 삭제 된 행의 수를 가져옵니다."
  remarks: "`RecordsAffected` 모든 행을 닫을 때까지 속성이 설정 되지 않은 `DataReader`합니다."
  syntax:
    content: public override int RecordsAffected { get; }
    return:
      type: System.Int32
      description: "변경, 삽입 또는 삭제 된 행의 수입니다. SELECT 문의;에 대 한-1 반환 행이 없는 영향을 받은 경우에 0 또는 문이 실패 했습니다."
  overload: System.Data.EntityClient.EntityDataReader.RecordsAffected*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityDataReader.VisibleFieldCount
  id: VisibleFieldCount
  parent: System.Data.EntityClient.EntityDataReader
  langs:
  - csharp
  name: VisibleFieldCount
  nameWithType: EntityDataReader.VisibleFieldCount
  fullName: System.Data.EntityClient.EntityDataReader.VisibleFieldCount
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "필드 수를 가져옵니다는 <xref href=&quot;System.Data.EntityClient.EntityDataReader&quot;> </xref> 있는 숨겨지지 않습니다."
  remarks: "필드 수를 확인 하려면이 값은 사용 된 <xref:System.Data.EntityClient.EntityDataReader>표시 됩니다.</xref:System.Data.EntityClient.EntityDataReader> 예를 들어 부분 기본 키에 대해 SELECT 숨김 필드로 키의 나머지 부분을 반환합니다. 숨겨진된 필드는 항상 표시 되는 필드에 추가 됩니다."
  syntax:
    content: public override int VisibleFieldCount { get; }
    return:
      type: System.Int32
      description: "표시 되는 필드의 수입니다."
  overload: System.Data.EntityClient.EntityDataReader.VisibleFieldCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.Common.DbDataReader
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.EntityClient.EntityDataReader.Close
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: Close()
  nameWithType: EntityDataReader.Close()
  fullName: System.Data.EntityClient.EntityDataReader.Close()
- uid: System.Data.EntityClient.EntityDataReader.DataRecordInfo
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: DataRecordInfo
  nameWithType: EntityDataReader.DataRecordInfo
  fullName: System.Data.EntityClient.EntityDataReader.DataRecordInfo
- uid: System.Data.Common.DataRecordInfo
  parent: System.Data.Common
  isExternal: false
  name: DataRecordInfo
  nameWithType: DataRecordInfo
  fullName: System.Data.Common.DataRecordInfo
- uid: System.Data.EntityClient.EntityDataReader.Depth
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: Depth
  nameWithType: EntityDataReader.Depth
  fullName: System.Data.EntityClient.EntityDataReader.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.EntityClient.EntityDataReader.Dispose(System.Boolean)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: EntityDataReader.Dispose(Boolean)
  fullName: System.Data.EntityClient.EntityDataReader.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.EntityClient.EntityDataReader.FieldCount
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: FieldCount
  nameWithType: EntityDataReader.FieldCount
  fullName: System.Data.EntityClient.EntityDataReader.FieldCount
- uid: System.Data.EntityClient.EntityDataReader.GetBoolean(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: EntityDataReader.GetBoolean(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetBoolean(Int32)
- uid: System.Data.EntityClient.EntityDataReader.GetByte(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetByte(Int32)
  nameWithType: EntityDataReader.GetByte(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.EntityClient.EntityDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: EntityDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.EntityClient.EntityDataReader.GetChar(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetChar(Int32)
  nameWithType: EntityDataReader.GetChar(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.EntityClient.EntityDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: EntityDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.EntityClient.EntityDataReader.GetDataReader(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetDataReader(Int32)
  nameWithType: EntityDataReader.GetDataReader(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetDataReader(Int32)
- uid: System.Data.EntityClient.EntityDataReader.GetDataRecord(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetDataRecord(Int32)
  nameWithType: EntityDataReader.GetDataRecord(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetDataRecord(Int32)
- uid: System.Data.Common.DbDataRecord
  parent: System.Data.Common
  isExternal: false
  name: DbDataRecord
  nameWithType: DbDataRecord
  fullName: System.Data.Common.DbDataRecord
- uid: System.Data.EntityClient.EntityDataReader.GetDataTypeName(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: EntityDataReader.GetDataTypeName(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.EntityClient.EntityDataReader.GetDateTime(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: EntityDataReader.GetDateTime(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetDateTime(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.EntityClient.EntityDataReader.GetDbDataReader(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetDbDataReader(Int32)
  nameWithType: EntityDataReader.GetDbDataReader(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetDbDataReader(Int32)
- uid: System.Data.EntityClient.EntityDataReader.GetDecimal(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: EntityDataReader.GetDecimal(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.EntityClient.EntityDataReader.GetDouble(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: EntityDataReader.GetDouble(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.EntityClient.EntityDataReader.GetEnumerator
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: EntityDataReader.GetEnumerator()
  fullName: System.Data.EntityClient.EntityDataReader.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.EntityClient.EntityDataReader.GetFieldType(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: EntityDataReader.GetFieldType(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.EntityClient.EntityDataReader.GetFloat(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: EntityDataReader.GetFloat(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.EntityClient.EntityDataReader.GetGuid(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: EntityDataReader.GetGuid(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.EntityClient.EntityDataReader.GetInt16(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: EntityDataReader.GetInt16(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.EntityClient.EntityDataReader.GetInt32(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: EntityDataReader.GetInt32(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetInt32(Int32)
- uid: System.Data.EntityClient.EntityDataReader.GetInt64(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: EntityDataReader.GetInt64(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetInt64(Int32)
- uid: System.Data.EntityClient.EntityDataReader.GetName(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetName(Int32)
  nameWithType: EntityDataReader.GetName(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetName(Int32)
- uid: System.Data.EntityClient.EntityDataReader.GetOrdinal(System.String)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: EntityDataReader.GetOrdinal(String)
  fullName: System.Data.EntityClient.EntityDataReader.GetOrdinal(String)
- uid: System.Data.EntityClient.EntityDataReader.GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: EntityDataReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetProviderSpecificFieldType(Int32)
- uid: System.Data.EntityClient.EntityDataReader.GetProviderSpecificValue(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetProviderSpecificValue(Int32)
  nameWithType: EntityDataReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetProviderSpecificValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.EntityClient.EntityDataReader.GetProviderSpecificValues(System.Object[])
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetProviderSpecificValues(Object[])
  nameWithType: EntityDataReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.EntityClient.EntityDataReader.GetProviderSpecificValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.EntityClient.EntityDataReader.GetSchemaTable
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetSchemaTable()
  nameWithType: EntityDataReader.GetSchemaTable()
  fullName: System.Data.EntityClient.EntityDataReader.GetSchemaTable()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.EntityClient.EntityDataReader.GetString(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetString(Int32)
  nameWithType: EntityDataReader.GetString(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetString(Int32)
- uid: System.Data.EntityClient.EntityDataReader.GetValue(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetValue(Int32)
  nameWithType: EntityDataReader.GetValue(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.GetValue(Int32)
- uid: System.Data.EntityClient.EntityDataReader.GetValues(System.Object[])
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetValues(Object[])
  nameWithType: EntityDataReader.GetValues(Object[])
  fullName: System.Data.EntityClient.EntityDataReader.GetValues(Object[])
- uid: System.Data.EntityClient.EntityDataReader.HasRows
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: HasRows
  nameWithType: EntityDataReader.HasRows
  fullName: System.Data.EntityClient.EntityDataReader.HasRows
- uid: System.Data.EntityClient.EntityDataReader.IsClosed
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: IsClosed
  nameWithType: EntityDataReader.IsClosed
  fullName: System.Data.EntityClient.EntityDataReader.IsClosed
- uid: System.Data.EntityClient.EntityDataReader.IsDBNull(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: EntityDataReader.IsDBNull(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.IsDBNull(Int32)
- uid: System.Data.EntityClient.EntityDataReader.Item(System.Int32)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: Item(Int32)
  nameWithType: EntityDataReader.Item(Int32)
  fullName: System.Data.EntityClient.EntityDataReader.Item(Int32)
- uid: System.Data.EntityClient.EntityDataReader.Item(System.String)
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: Item(String)
  nameWithType: EntityDataReader.Item(String)
  fullName: System.Data.EntityClient.EntityDataReader.Item(String)
- uid: System.Data.EntityClient.EntityDataReader.NextResult
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: NextResult()
  nameWithType: EntityDataReader.NextResult()
  fullName: System.Data.EntityClient.EntityDataReader.NextResult()
- uid: System.Data.EntityClient.EntityDataReader.Read
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: Read()
  nameWithType: EntityDataReader.Read()
  fullName: System.Data.EntityClient.EntityDataReader.Read()
- uid: System.Data.EntityClient.EntityDataReader.RecordsAffected
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: EntityDataReader.RecordsAffected
  fullName: System.Data.EntityClient.EntityDataReader.RecordsAffected
- uid: System.Data.EntityClient.EntityDataReader.VisibleFieldCount
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: VisibleFieldCount
  nameWithType: EntityDataReader.VisibleFieldCount
  fullName: System.Data.EntityClient.EntityDataReader.VisibleFieldCount
- uid: System.Data.EntityClient.EntityDataReader.Close*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: Close
  nameWithType: EntityDataReader.Close
- uid: System.Data.EntityClient.EntityDataReader.DataRecordInfo*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: DataRecordInfo
  nameWithType: EntityDataReader.DataRecordInfo
- uid: System.Data.EntityClient.EntityDataReader.Depth*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: Depth
  nameWithType: EntityDataReader.Depth
- uid: System.Data.EntityClient.EntityDataReader.Dispose*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: Dispose
  nameWithType: EntityDataReader.Dispose
- uid: System.Data.EntityClient.EntityDataReader.FieldCount*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: FieldCount
  nameWithType: EntityDataReader.FieldCount
- uid: System.Data.EntityClient.EntityDataReader.GetBoolean*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetBoolean
  nameWithType: EntityDataReader.GetBoolean
- uid: System.Data.EntityClient.EntityDataReader.GetByte*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetByte
  nameWithType: EntityDataReader.GetByte
- uid: System.Data.EntityClient.EntityDataReader.GetBytes*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetBytes
  nameWithType: EntityDataReader.GetBytes
- uid: System.Data.EntityClient.EntityDataReader.GetChar*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetChar
  nameWithType: EntityDataReader.GetChar
- uid: System.Data.EntityClient.EntityDataReader.GetChars*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetChars
  nameWithType: EntityDataReader.GetChars
- uid: System.Data.EntityClient.EntityDataReader.GetDataReader*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetDataReader
  nameWithType: EntityDataReader.GetDataReader
- uid: System.Data.EntityClient.EntityDataReader.GetDataRecord*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetDataRecord
  nameWithType: EntityDataReader.GetDataRecord
- uid: System.Data.EntityClient.EntityDataReader.GetDataTypeName*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetDataTypeName
  nameWithType: EntityDataReader.GetDataTypeName
- uid: System.Data.EntityClient.EntityDataReader.GetDateTime*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetDateTime
  nameWithType: EntityDataReader.GetDateTime
- uid: System.Data.EntityClient.EntityDataReader.GetDbDataReader*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetDbDataReader
  nameWithType: EntityDataReader.GetDbDataReader
- uid: System.Data.EntityClient.EntityDataReader.GetDecimal*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetDecimal
  nameWithType: EntityDataReader.GetDecimal
- uid: System.Data.EntityClient.EntityDataReader.GetDouble*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetDouble
  nameWithType: EntityDataReader.GetDouble
- uid: System.Data.EntityClient.EntityDataReader.GetEnumerator*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetEnumerator
  nameWithType: EntityDataReader.GetEnumerator
- uid: System.Data.EntityClient.EntityDataReader.GetFieldType*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetFieldType
  nameWithType: EntityDataReader.GetFieldType
- uid: System.Data.EntityClient.EntityDataReader.GetFloat*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetFloat
  nameWithType: EntityDataReader.GetFloat
- uid: System.Data.EntityClient.EntityDataReader.GetGuid*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetGuid
  nameWithType: EntityDataReader.GetGuid
- uid: System.Data.EntityClient.EntityDataReader.GetInt16*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetInt16
  nameWithType: EntityDataReader.GetInt16
- uid: System.Data.EntityClient.EntityDataReader.GetInt32*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetInt32
  nameWithType: EntityDataReader.GetInt32
- uid: System.Data.EntityClient.EntityDataReader.GetInt64*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetInt64
  nameWithType: EntityDataReader.GetInt64
- uid: System.Data.EntityClient.EntityDataReader.GetName*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetName
  nameWithType: EntityDataReader.GetName
- uid: System.Data.EntityClient.EntityDataReader.GetOrdinal*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetOrdinal
  nameWithType: EntityDataReader.GetOrdinal
- uid: System.Data.EntityClient.EntityDataReader.GetProviderSpecificFieldType*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetProviderSpecificFieldType
  nameWithType: EntityDataReader.GetProviderSpecificFieldType
- uid: System.Data.EntityClient.EntityDataReader.GetProviderSpecificValue*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetProviderSpecificValue
  nameWithType: EntityDataReader.GetProviderSpecificValue
- uid: System.Data.EntityClient.EntityDataReader.GetProviderSpecificValues*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetProviderSpecificValues
  nameWithType: EntityDataReader.GetProviderSpecificValues
- uid: System.Data.EntityClient.EntityDataReader.GetSchemaTable*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetSchemaTable
  nameWithType: EntityDataReader.GetSchemaTable
- uid: System.Data.EntityClient.EntityDataReader.GetString*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetString
  nameWithType: EntityDataReader.GetString
- uid: System.Data.EntityClient.EntityDataReader.GetValue*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetValue
  nameWithType: EntityDataReader.GetValue
- uid: System.Data.EntityClient.EntityDataReader.GetValues*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: GetValues
  nameWithType: EntityDataReader.GetValues
- uid: System.Data.EntityClient.EntityDataReader.HasRows*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: HasRows
  nameWithType: EntityDataReader.HasRows
- uid: System.Data.EntityClient.EntityDataReader.IsClosed*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: IsClosed
  nameWithType: EntityDataReader.IsClosed
- uid: System.Data.EntityClient.EntityDataReader.IsDBNull*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: IsDBNull
  nameWithType: EntityDataReader.IsDBNull
- uid: System.Data.EntityClient.EntityDataReader.Item*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: Item
  nameWithType: EntityDataReader.Item
- uid: System.Data.EntityClient.EntityDataReader.NextResult*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: NextResult
  nameWithType: EntityDataReader.NextResult
- uid: System.Data.EntityClient.EntityDataReader.Read*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: Read
  nameWithType: EntityDataReader.Read
- uid: System.Data.EntityClient.EntityDataReader.RecordsAffected*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: EntityDataReader.RecordsAffected
- uid: System.Data.EntityClient.EntityDataReader.VisibleFieldCount*
  parent: System.Data.EntityClient.EntityDataReader
  isExternal: false
  name: VisibleFieldCount
  nameWithType: EntityDataReader.VisibleFieldCount
