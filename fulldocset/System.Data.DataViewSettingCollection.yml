### YamlMime:ManagedReference
items:
- uid: System.Data.DataViewSettingCollection
  id: DataViewSettingCollection
  children:
  - System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)
  - System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)
  - System.Data.DataViewSettingCollection.Count
  - System.Data.DataViewSettingCollection.GetEnumerator
  - System.Data.DataViewSettingCollection.IsReadOnly
  - System.Data.DataViewSettingCollection.IsSynchronized
  - System.Data.DataViewSettingCollection.Item(System.Data.DataTable)
  - System.Data.DataViewSettingCollection.Item(System.Int32)
  - System.Data.DataViewSettingCollection.Item(System.String)
  - System.Data.DataViewSettingCollection.SyncRoot
  langs:
  - csharp
  name: DataViewSettingCollection
  nameWithType: DataViewSettingCollection
  fullName: System.Data.DataViewSettingCollection
  type: Class
  summary: "읽기 전용 컬렉션을 포함 <xref href=&quot;System.Data.DataViewSetting&quot;> </xref> 각각에 대 한 개체 <xref href=&quot;System.Data.DataTable&quot;> </xref> 에 <xref href=&quot;System.Data.DataSet&quot;> </xref>합니다."
  remarks: "사용자 추가 하거나 제거할 수는 <xref:System.Data.DataViewSetting>컬렉션에서는 <xref:System.Data.DataViewSetting>해당 특정 <xref:System.Data.DataTable>.</xref:System.Data.DataTable> 하</xref:System.Data.DataViewSetting> 의 속성을 변경할 수 있지만</xref:System.Data.DataViewSetting> 추가 또는 제거는 <xref:System.Data.DataTable>데이터 집합에서 추가 하거나 해당 제거 <xref:System.Data.DataViewSetting>컬렉션에서.</xref:System.Data.DataViewSetting> </xref:System.Data.DataTable>"
  syntax:
    content: >-
      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataViewSettingsCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public class DataViewSettingCollection : System.Collections.ICollection
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Data.DataViewSettingCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: DataViewSettingCollection.CopyTo(Array,Int32)
  fullName: System.Data.DataViewSettingCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "컬렉션 개체를&1; 차원 복사 <xref:System.Array>인스턴스에 지정된 된 인덱스에서 시작 합니다.</xref:System.Array>"
  syntax:
    content: public void CopyTo (Array ar, int index);
    parameters:
    - id: ar
      type: System.Array
      description: "1 차원 <xref:System.Array>컬렉션에서 복사한 값의 대상인.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "삽입을 시작할 배열의 인덱스입니다."
  overload: System.Data.DataViewSettingCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)
  id: CopyTo(System.Data.DataViewSetting[],System.Int32)
  parent: System.Data.DataViewSettingCollection
  langs:
  - csharp
  name: CopyTo(DataViewSetting[],Int32)
  nameWithType: DataViewSettingCollection.CopyTo(DataViewSetting[],Int32)
  fullName: System.Data.DataViewSettingCollection.CopyTo(DataViewSetting[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "컬렉션 개체를&1; 차원 복사 <xref:System.Array>인스턴스에 지정된 된 인덱스에서 시작 합니다.</xref:System.Array>"
  syntax:
    content: public void CopyTo (System.Data.DataViewSetting[] ar, int index);
    parameters:
    - id: ar
      type: System.Data.DataViewSetting[]
      description: "1 차원 <xref:System.Array>컬렉션에서 복사한 값의 대상인.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "삽입을 시작할 배열의 인덱스입니다."
  overload: System.Data.DataViewSettingCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataViewSettingCollection.Count
  id: Count
  parent: System.Data.DataViewSettingCollection
  langs:
  - csharp
  name: Count
  nameWithType: DataViewSettingCollection.Count
  fullName: System.Data.DataViewSettingCollection.Count
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "개수를 가져옵니다 <xref href=&quot;System.Data.DataViewSetting&quot;> </xref> 개체에 <xref href=&quot;System.Data.DataViewSettingCollection&quot;> </xref>합니다."
  remarks: "<xref:System.Data.DataViewSetting>개체에 <xref:System.Data.DataTable> <xref:System.Data.DataSet>.</xref:System.Data.DataSet> 의 개체</xref:System.Data.DataTable> 수와 같습니다</xref:System.Data.DataViewSetting> 수"
  syntax:
    content: public virtual int Count { get; }
    return:
      type: System.Int32
      description: "수가 <xref href=&quot;System.Data.DataViewSetting&quot;> </xref> 컬렉션의 개체입니다."
  overload: System.Data.DataViewSettingCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataViewSettingCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Data.DataViewSettingCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DataViewSettingCollection.GetEnumerator()
  fullName: System.Data.DataViewSettingCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "가져옵니다는 <xref:System.Collections.IEnumerator>컬렉션에 대 한.</xref:System.Collections.IEnumerator>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>개체입니다.</xref:System.Collections.IEnumerator>"
  overload: System.Data.DataViewSettingCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataViewSettingCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Data.DataViewSettingCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: DataViewSettingCollection.IsReadOnly
  fullName: System.Data.DataViewSettingCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Data.DataViewSettingCollection&quot;> </xref> 읽기 전용입니다."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Data.DataViewSettingCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataViewSettingCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Data.DataViewSettingCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: DataViewSettingCollection.IsSynchronized
  fullName: System.Data.DataViewSettingCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "나타내는 값을 가져옵니다에 액세스할 수 있는지 여부는 <xref href=&quot;System.Data.DataViewSettingCollection&quot;> </xref> 동기화 되었는지 (스레드로부터 안전한 지)."
  remarks: "이 속성을 구현 하는 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection>       파생된 클래스의 동기화 된 버전을 제공할 수 있습니다는 <xref:System.Data.DataViewSettingCollection>를 사용 하 여 <xref:System.Data.DataViewSettingCollection.SyncRoot%2A>속성.</xref:System.Data.DataViewSettingCollection.SyncRoot%2A> </xref:System.Data.DataViewSettingCollection>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "이 속성은 항상 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>파생된 클래스에서 재정의 하지 않으면 합니다."
  overload: System.Data.DataViewSettingCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataViewSettingCollection.Item(System.Data.DataTable)
  id: Item(System.Data.DataTable)
  parent: System.Data.DataViewSettingCollection
  langs:
  - csharp
  name: Item(DataTable)
  nameWithType: DataViewSettingCollection.Item(DataTable)
  fullName: System.Data.DataViewSettingCollection.Item(DataTable)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "가져옵니다는 <xref href=&quot;System.Data.DataViewSetting&quot;> </xref> 개체는 지정 된 <xref href=&quot;System.Data.DataTable&quot;> </xref> 컬렉션에서 합니다."
  syntax:
    content: public virtual System.Data.DataViewSetting this[System.Data.DataTable table] { get; set; }
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "<xref href=&quot;System.Data.DataTable&quot;> </xref> 찾으려고 합니다."
    return:
      type: System.Data.DataViewSetting
      description: "컬렉션 <xref href=&quot;System.Data.DataViewSetting&quot;> </xref> 개체입니다."
  overload: System.Data.DataViewSettingCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataViewSettingCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataViewSettingCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataViewSettingCollection.Item(Int32)
  fullName: System.Data.DataViewSettingCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "가져옵니다는 <xref href=&quot;System.Data.DataViewSetting&quot;> </xref> 의 개체는 <xref href=&quot;System.Data.DataTable&quot;> </xref> 인덱스로 지정 합니다."
  syntax:
    content: public virtual System.Data.DataViewSetting this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "0부터 시작 인덱스는 <xref href=&quot;System.Data.DataTable&quot;> </xref> 찾으려고 합니다."
    return:
      type: System.Data.DataViewSetting
      description: "컬렉션 <xref href=&quot;System.Data.DataViewSetting&quot;> </xref> 개체입니다."
  overload: System.Data.DataViewSettingCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataViewSettingCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataViewSettingCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataViewSettingCollection.Item(String)
  fullName: System.Data.DataViewSettingCollection.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "가져옵니다는 <xref href=&quot;System.Data.DataViewSetting&quot;> </xref> 의 <xref href=&quot;System.Data.DataTable&quot;> </xref> 해당 이름으로 지정 합니다."
  syntax:
    content: public virtual System.Data.DataViewSetting this[string tableName] { get; }
    parameters:
    - id: tableName
      type: System.String
      description: "이름에서 <xref href=&quot;System.Data.DataTable&quot;> </xref> 찾으려고 합니다."
    return:
      type: System.Data.DataViewSetting
      description: "컬렉션 <xref href=&quot;System.Data.DataViewSetting&quot;> </xref> 개체입니다."
  overload: System.Data.DataViewSettingCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataViewSettingCollection.SyncRoot
  id: SyncRoot
  parent: System.Data.DataViewSettingCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: DataViewSettingCollection.SyncRoot
  fullName: System.Data.DataViewSettingCollection.SyncRoot
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다는 <xref href=&quot;System.Data.DataViewSettingCollection&quot;> </xref>합니다."
  remarks: "파생된 클래스의 동기화 된 버전을 제공할 수 있습니다는 <xref:System.Data.DataViewSettingCollection>SyncRoot 속성을 사용 하 여.</xref:System.Data.DataViewSettingCollection>       프로그램 코드에서 항상의 SyncRoot에 대 한 동기화 된 작업을 수행 해야는 <xref:System.Data.DataViewSettingCollection>, <xref:System.Data.DataViewSettingCollection>.</xref:System.Data.DataViewSettingCollection> 으로 만들어지므로</xref:System.Data.DataViewSettingCollection> 이렇게 하면 다른 개체에서 파생 된 컬렉션에 제대로 작동 합니다. 특히, <xref:System.Data.DataViewSettingCollection>.</xref:System.Data.DataViewSettingCollection> 를 동시에 수정할 수 있는 다른 스레드와 적절 한 동기화 유지"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체는 <xref href=&quot;System.Data.DataViewSettingCollection&quot;> </xref>합니다."
  overload: System.Data.DataViewSettingCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: DataViewSettingCollection.CopyTo(Array,Int32)
  fullName: System.Data.DataViewSettingCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: CopyTo(DataViewSetting[],Int32)
  nameWithType: DataViewSettingCollection.CopyTo(DataViewSetting[],Int32)
  fullName: System.Data.DataViewSettingCollection.CopyTo(DataViewSetting[],Int32)
- uid: System.Data.DataViewSetting[]
  parent: System.Data
  isExternal: false
  name: DataViewSetting
  nameWithType: DataViewSetting
  fullName: System.Data.DataViewSetting[]
  spec.csharp:
  - uid: System.Data.DataViewSetting
    name: DataViewSetting
    nameWithType: DataViewSetting
    fullName: DataViewSetting[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataViewSettingCollection.Count
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: Count
  nameWithType: DataViewSettingCollection.Count
  fullName: System.Data.DataViewSettingCollection.Count
- uid: System.Data.DataViewSettingCollection.GetEnumerator
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: DataViewSettingCollection.GetEnumerator()
  fullName: System.Data.DataViewSettingCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.DataViewSettingCollection.IsReadOnly
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: DataViewSettingCollection.IsReadOnly
  fullName: System.Data.DataViewSettingCollection.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataViewSettingCollection.IsSynchronized
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: DataViewSettingCollection.IsSynchronized
  fullName: System.Data.DataViewSettingCollection.IsSynchronized
- uid: System.Data.DataViewSettingCollection.Item(System.Data.DataTable)
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: Item(DataTable)
  nameWithType: DataViewSettingCollection.Item(DataTable)
  fullName: System.Data.DataViewSettingCollection.Item(DataTable)
- uid: System.Data.DataViewSetting
  parent: System.Data
  isExternal: false
  name: DataViewSetting
  nameWithType: DataViewSetting
  fullName: System.Data.DataViewSetting
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataViewSettingCollection.Item(System.Int32)
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataViewSettingCollection.Item(Int32)
  fullName: System.Data.DataViewSettingCollection.Item(Int32)
- uid: System.Data.DataViewSettingCollection.Item(System.String)
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: Item(String)
  nameWithType: DataViewSettingCollection.Item(String)
  fullName: System.Data.DataViewSettingCollection.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataViewSettingCollection.SyncRoot
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: SyncRoot
  nameWithType: DataViewSettingCollection.SyncRoot
  fullName: System.Data.DataViewSettingCollection.SyncRoot
- uid: System.Data.DataViewSettingCollection.CopyTo*
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataViewSettingCollection.CopyTo
- uid: System.Data.DataViewSettingCollection.Count*
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: Count
  nameWithType: DataViewSettingCollection.Count
- uid: System.Data.DataViewSettingCollection.GetEnumerator*
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: DataViewSettingCollection.GetEnumerator
- uid: System.Data.DataViewSettingCollection.IsReadOnly*
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: DataViewSettingCollection.IsReadOnly
- uid: System.Data.DataViewSettingCollection.IsSynchronized*
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: DataViewSettingCollection.IsSynchronized
- uid: System.Data.DataViewSettingCollection.Item*
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: Item
  nameWithType: DataViewSettingCollection.Item
- uid: System.Data.DataViewSettingCollection.SyncRoot*
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: SyncRoot
  nameWithType: DataViewSettingCollection.SyncRoot
