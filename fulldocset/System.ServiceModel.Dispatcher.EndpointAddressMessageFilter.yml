### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  id: EndpointAddressMessageFilter
  children:
  - System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)
  - System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address
  - System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable``1
  - System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison
  - System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  langs:
  - csharp
  name: EndpointAddressMessageFilter
  nameWithType: EndpointAddressMessageFilter
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  type: Class
  summary: "메시지가 지정 된 끝점 주소의 요구 사항을 충족 하는지 여부를 테스트 하는 쿼리를 나타냅니다."
  remarks: "이 필터는 메시지가 특정 끝점 주소를 충족 하는지 여부를 테스트 합니다. <xref:System.ServiceModel.EndpointAddress>개체는 URI와 주소 지정 헤더의 선택적 컬렉션을 포함 합니다.</xref:System.ServiceModel.EndpointAddress> 주소 지정 및 메시지 헤더는 같음 여부를 비교 하기 위해 정식화 됩니다. 매개 변수가 한 번에 비해 더 많은 나오는 경우는 <xref:System.ServiceModel.EndpointAddress>, 해당 헤더가 적어도 그 횟수는 메시지에 나타나야 합니다.</xref:System.ServiceModel.EndpointAddress>       IIS 및 내부 파일 시스템 (NTFS 또는 FAT)은 대/소문자 구분입니다. 이 클래스에서 수행 하는 URI 비교도 대/소문자 구분 있습니다. 따라서 예를 들어, http://www.microsoft.com은 동일한 것으로 확인 http://WWW.microsoft.com 합니다."
  syntax:
    content: 'public class EndpointAddressMessageFilter : System.ServiceModel.Dispatcher.MessageFilter'
  inheritance:
  - System.Object
  - System.ServiceModel.Dispatcher.MessageFilter
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)
  id: '#ctor(System.ServiceModel.EndpointAddress)'
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  langs:
  - csharp
  name: EndpointAddressMessageFilter(EndpointAddress)
  nameWithType: EndpointAddressMessageFilter.EndpointAddressMessageFilter(EndpointAddress)
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.EndpointAddressMessageFilter(EndpointAddress)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.Dispatcher.EndpointAddressMessageFilter&quot;> </xref> 를 메시지를 테스트할 지정된 된 주소를 사용 하 여 클래스입니다."
  syntax:
    content: public EndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "<xref:System.ServiceModel.EndpointAddress>되는 메시지에 대해 테스트 됩니다.</xref:System.ServiceModel.EndpointAddress>"
  overload: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)
  id: '#ctor(System.ServiceModel.EndpointAddress,System.Boolean)'
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  langs:
  - csharp
  name: EndpointAddressMessageFilter(EndpointAddress,Boolean)
  nameWithType: EndpointAddressMessageFilter.EndpointAddressMessageFilter(EndpointAddress,Boolean)
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.EndpointAddressMessageFilter(EndpointAddress,Boolean)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.Dispatcher.EndpointAddressMessageFilter&quot;> </xref> 클래스입니다."
  remarks: "로컬 컴퓨터에 설치 된 웹 서비스를 사용 하도록 설정한 경우 여러 가지 동등한으로 참조할 수는 다음을 비롯 한:-http://localhost/foo.svc--http://[my-machine-name]/foo.svc-http://192.168.1.100/foo.svc http://[my-machine-name]. [my-company].com/foo.svc 합니다.       하는 경우의 값은 `includeHostNameInComparison` 매개 변수는 `false`, 위의 Uri는 모두 동일한 끝점으로 해석 합니다."
  syntax:
    content: public EndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "<xref:System.ServiceModel.EndpointAddress>되는 메시지에 대해 테스트 됩니다.</xref:System.ServiceModel.EndpointAddress>"
    - id: includeHostNameInComparison
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>호스트 이름이 끝점 주소 비교;에 포함 된 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address
  id: Address
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  langs:
  - csharp
  name: Address
  nameWithType: EndpointAddressMessageFilter.Address
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "주소를 가져옵니다는 <xref href=&quot;System.ServiceModel.Dispatcher.EndpointAddressMessageFilter&quot;> </xref> 에 대 한 메시지를 테스트 합니다."
  syntax:
    content: public System.ServiceModel.EndpointAddress Address { get; }
    return:
      type: System.ServiceModel.EndpointAddress
      description: "<xref:System.ServiceModel.EndpointAddress>하는 <xref href=&quot;System.ServiceModel.Dispatcher.EndpointAddressMessageFilter&quot;> </xref> 에 대 한 메시지를 테스트 합니다.</xref:System.ServiceModel.EndpointAddress>"
  overload: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable``1
  id: CreateFilterTable``1
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  langs:
  - csharp
  name: CreateFilterTable()
  nameWithType: EndpointAddressMessageFilter.CreateFilterTable()
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  syntax:
    content: protected override System.ServiceModel.Dispatcher.IMessageFilterTable<FilterData> CreateFilterTable<FilterData> ();
    parameters: []
    return:
      type: System.ServiceModel.Dispatcher.IMessageFilterTable{FilterData}
      description: "추가할 수 있습니다."
  overload: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable<FilterData>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison
  id: IncludeHostNameInComparison
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  langs:
  - csharp
  name: IncludeHostNameInComparison
  nameWithType: EndpointAddressMessageFilter.IncludeHostNameInComparison
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "호스트 이름이 끝점 주소 비교에 포함 되는지 여부를 나타내는 값을 가져옵니다."
  remarks: "로컬 컴퓨터에 설치 된 웹 서비스를 사용 하도록 설정한 경우 여러 가지 동등한으로 참조할 수는 다음을 비롯 한:-http://localhost/foo.svc--http://[my-machine-name]/foo.svc-http://192.168.1.100/foo.svc http://[my-machine-name]. [my-company].com/foo.svc 합니다.       이 속성의 기본값은 `false`이므로이 속성을 변경 하지 않는 한 위의 Uri는 모두 동일한 끝점을 확인 합니다."
  syntax:
    content: public bool IncludeHostNameInComparison { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>호스트 이름이 끝점 주소 비교;에 포함 된 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)
  id: Match(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  langs:
  - csharp
  name: Match(Message)
  nameWithType: EndpointAddressMessageFilter.Match(Message)
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "메시지가 지정 된 끝점 주소를 충족 하는지 여부를 테스트 합니다."
  remarks: "이 메서드의 두 오버 로드는 모두 메시지 헤더만 검사 하므로 동일 합니다."
  syntax:
    content: public override bool Match (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>테스트할 개체</xref:System.ServiceModel.Channels.Message>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.ServiceModel.Channels.Message>; 필터에 지정 된 끝점 주소를 충족 하는 개체, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.Channels.Message>"
  overload: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>message</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  id: Match(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  langs:
  - csharp
  name: Match(MessageBuffer)
  nameWithType: EndpointAddressMessageFilter.Match(MessageBuffer)
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(MessageBuffer)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "버퍼링 된 메시지가 지정된 된 끝점 주소를 충족 하는지 여부를 테스트 합니다."
  remarks: "이 메서드의 두 오버 로드는 모두 메시지 헤더만 검사 하므로 동일 합니다. 이 오버 로드를 사용 하는 유일한 이유는 이미 존재 하는 경우는 `messageBuffer` 사용 가능한 메시지가 아니라이 메서드는 변환 하기 때문에 `messageBuffer` 메시지로 합니다."
  syntax:
    content: public override bool Match (System.ServiceModel.Channels.MessageBuffer messageBuffer);
    parameters:
    - id: messageBuffer
      type: System.ServiceModel.Channels.MessageBuffer
      description: "<xref:System.ServiceModel.Channels.MessageBuffer>테스트할 개체</xref:System.ServiceModel.Channels.MessageBuffer>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.ServiceModel.Channels.MessageBuffer>끝점 주소를 충족 하는 개체, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.Channels.MessageBuffer>"
  overload: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>messageBuffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: System.ServiceModel.Dispatcher.MessageFilter
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  isExternal: false
  name: EndpointAddressMessageFilter(EndpointAddress)
  nameWithType: EndpointAddressMessageFilter.EndpointAddressMessageFilter(EndpointAddress)
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.EndpointAddressMessageFilter(EndpointAddress)
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  isExternal: false
  name: EndpointAddressMessageFilter(EndpointAddress,Boolean)
  nameWithType: EndpointAddressMessageFilter.EndpointAddressMessageFilter(EndpointAddress,Boolean)
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.EndpointAddressMessageFilter(EndpointAddress,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  isExternal: false
  name: Address
  nameWithType: EndpointAddressMessageFilter.Address
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable``1
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  isExternal: false
  name: CreateFilterTable()
  nameWithType: EndpointAddressMessageFilter.CreateFilterTable()
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable()
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable{FilterData}
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: IMessageFilterTable<FilterData>
  nameWithType: IMessageFilterTable<FilterData>
  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<FilterData>
  spec.csharp:
  - uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1
    name: IMessageFilterTable
    nameWithType: IMessageFilterTable
    fullName: IMessageFilterTable<FilterData>
  - name: <
    nameWithType: <
    fullName: <
  - uid: FilterData
    name: FilterData
    nameWithType: FilterData
    fullName: FilterData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  isExternal: false
  name: IncludeHostNameInComparison
  nameWithType: EndpointAddressMessageFilter.IncludeHostNameInComparison
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  isExternal: false
  name: Match(Message)
  nameWithType: EndpointAddressMessageFilter.Match(Message)
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(Message)
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  isExternal: false
  name: Match(MessageBuffer)
  nameWithType: EndpointAddressMessageFilter.Match(MessageBuffer)
  fullName: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(MessageBuffer)
- uid: System.ServiceModel.Channels.MessageBuffer
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageBuffer
  nameWithType: MessageBuffer
  fullName: System.ServiceModel.Channels.MessageBuffer
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor*
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  isExternal: false
  name: EndpointAddressMessageFilter
  nameWithType: EndpointAddressMessageFilter.EndpointAddressMessageFilter
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address*
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  isExternal: false
  name: Address
  nameWithType: EndpointAddressMessageFilter.Address
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable<FilterData>*
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  isExternal: false
  name: CreateFilterTable<FilterData>
  nameWithType: EndpointAddressMessageFilter.CreateFilterTable<FilterData>
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison*
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  isExternal: false
  name: IncludeHostNameInComparison
  nameWithType: EndpointAddressMessageFilter.IncludeHostNameInComparison
- uid: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match*
  parent: System.ServiceModel.Dispatcher.EndpointAddressMessageFilter
  isExternal: false
  name: Match
  nameWithType: EndpointAddressMessageFilter.Match
