### YamlMime:ManagedReference
items:
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator
  id: EntityModelSchemaGenerator
  children:
  - System.Data.Entity.Design.EntityModelSchemaGenerator.#ctor(System.Data.Metadata.Edm.EntityContainer)
  - System.Data.Entity.Design.EntityModelSchemaGenerator.#ctor(System.Data.Metadata.Edm.EntityContainer,System.String,System.String)
  - System.Data.Entity.Design.EntityModelSchemaGenerator.#ctor(System.Data.Metadata.Edm.StoreItemCollection,System.String,System.String)
  - System.Data.Entity.Design.EntityModelSchemaGenerator.EdmItemCollection
  - System.Data.Entity.Design.EntityModelSchemaGenerator.EntityContainer
  - System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateForeignKeyProperties
  - System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateMetadata
  - System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateMetadata(System.Version)
  - System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService
  - System.Data.Entity.Design.EntityModelSchemaGenerator.WriteModelSchema(System.String)
  - System.Data.Entity.Design.EntityModelSchemaGenerator.WriteModelSchema(System.Xml.XmlWriter)
  - System.Data.Entity.Design.EntityModelSchemaGenerator.WriteStorageMapping(System.String)
  - System.Data.Entity.Design.EntityModelSchemaGenerator.WriteStorageMapping(System.Xml.XmlWriter)
  langs:
  - csharp
  name: EntityModelSchemaGenerator
  nameWithType: EntityModelSchemaGenerator
  fullName: System.Data.Entity.Design.EntityModelSchemaGenerator
  type: Class
  summary: "클래스는 C 공간에서 기본 CCMapping S 공간에서 EntityContainer 사이의 EntityContainer를 만듭니다. 매핑을 만들어질 수 기반 익스텐트 선언 된 형식에 있습니다. 따라서 상속 작동 하지 않습니다."
  remarks: "이 콘텐츠 없음 업데이트 됩니다. 여기에 자료를 추가 하지 마십시오."
  syntax:
    content: public sealed class EntityModelSchemaGenerator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.#ctor(System.Data.Metadata.Edm.EntityContainer)
  id: '#ctor(System.Data.Metadata.Edm.EntityContainer)'
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  langs:
  - csharp
  name: EntityModelSchemaGenerator(EntityContainer)
  nameWithType: EntityModelSchemaGenerator.EntityModelSchemaGenerator(EntityContainer)
  fullName: System.Data.Entity.Design.EntityModelSchemaGenerator.EntityModelSchemaGenerator(EntityContainer)
  type: Constructor
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Entity.Design.EntityModelSchemaGenerator&quot;> </xref> 클래스입니다."
  syntax:
    content: public EntityModelSchemaGenerator (System.Data.Metadata.Edm.EntityContainer storeEntityContainer);
    parameters:
    - id: storeEntityContainer
      type: System.Data.Metadata.Edm.EntityContainer
      description: "저장소 모델 EntityContainer 개념 및 매핑 메타 데이터 생성 됩니다."
  overload: System.Data.Entity.Design.EntityModelSchemaGenerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.#ctor(System.Data.Metadata.Edm.EntityContainer,System.String,System.String)
  id: '#ctor(System.Data.Metadata.Edm.EntityContainer,System.String,System.String)'
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  langs:
  - csharp
  name: EntityModelSchemaGenerator(EntityContainer,String,String)
  nameWithType: EntityModelSchemaGenerator.EntityModelSchemaGenerator(EntityContainer,String,String)
  fullName: System.Data.Entity.Design.EntityModelSchemaGenerator.EntityModelSchemaGenerator(EntityContainer,String,String)
  type: Constructor
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Entity.Design.EntityModelSchemaGenerator&quot;> </xref> 클래스입니다."
  syntax:
    content: public EntityModelSchemaGenerator (System.Data.Metadata.Edm.EntityContainer storeEntityContainer, string namespaceName, string modelEntityContainerName);
    parameters:
    - id: storeEntityContainer
      type: System.Data.Metadata.Edm.EntityContainer
      description: "저장소 모델 EntityContainer 개념 및 매핑 메타 데이터 생성 됩니다."
    - id: namespaceName
      type: System.String
      description: "개념적 모델 네임 스페이스에 대 한 이름입니다. 이 값이 null 이면 네임 스페이스 이름에 대 한 storeEntityContainer 이름이 사용 됩니다."
    - id: modelEntityContainerName
      type: System.String
      description: "개념적 모델에 EntityContainer 이름을 선언 합니다."
  overload: System.Data.Entity.Design.EntityModelSchemaGenerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.#ctor(System.Data.Metadata.Edm.StoreItemCollection,System.String,System.String)
  id: '#ctor(System.Data.Metadata.Edm.StoreItemCollection,System.String,System.String)'
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  langs:
  - csharp
  name: EntityModelSchemaGenerator(StoreItemCollection,String,String)
  nameWithType: EntityModelSchemaGenerator.EntityModelSchemaGenerator(StoreItemCollection,String,String)
  fullName: System.Data.Entity.Design.EntityModelSchemaGenerator.EntityModelSchemaGenerator(StoreItemCollection,String,String)
  type: Constructor
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "EntityModelGenerator 생성"
  syntax:
    content: public EntityModelSchemaGenerator (System.Data.Metadata.Edm.StoreItemCollection storeItemCollection, string namespaceName, string modelEntityContainerName);
    parameters:
    - id: storeItemCollection
      type: System.Data.Metadata.Edm.StoreItemCollection
      description: "StoreItemCollection 들어 EntityContainer 및 기타 항목에서 모델 메타 데이터를 만듭니다."
    - id: namespaceName
      type: System.String
      description: "네임 스페이스에 부여할 이름입니다. Null 인 경우는 storeEntityContainer 이름이 사용 됩니다."
    - id: modelEntityContainerName
      type: System.String
      description: "모델 EntityContainer에 부여할 이름입니다. Null 인 경우, 수정된 된 버전의 네임 스페이스는 storeEntityContainer에서 참조 되는 형식 사용 됩니다."
  overload: System.Data.Entity.Design.EntityModelSchemaGenerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.EdmItemCollection
  id: EdmItemCollection
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  langs:
  - csharp
  name: EdmItemCollection
  nameWithType: EntityModelSchemaGenerator.EdmItemCollection
  fullName: System.Data.Entity.Design.EntityModelSchemaGenerator.EdmItemCollection
  type: Property
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "GenerateMetadata 메서드에 의해 생성 된 EdmItemCollection을 가져옵니다."
  syntax:
    content: public System.Data.Metadata.Edm.EdmItemCollection EdmItemCollection { get; }
    return:
      type: System.Data.Metadata.Edm.EdmItemCollection
      description: "<xref href=&quot;System.Data.Metadata.Edm.EdmItemCollection&quot;> </xref> 개념 스키마 정의 언어 (CSDL)을 포함 하는 개체입니다."
  overload: System.Data.Entity.Design.EntityModelSchemaGenerator.EdmItemCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.EntityContainer
  id: EntityContainer
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  langs:
  - csharp
  name: EntityContainer
  nameWithType: EntityModelSchemaGenerator.EntityContainer
  fullName: System.Data.Entity.Design.EntityModelSchemaGenerator.EntityContainer
  type: Property
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "EntityContainer GenerateMetadata 메서드에 의해 생성 된 개념적 모델을 가져옵니다."
  syntax:
    content: public System.Data.Metadata.Edm.EntityContainer EntityContainer { get; }
    return:
      type: System.Data.Metadata.Edm.EntityContainer
      description: "<xref href=&quot;System.Data.Metadata.Edm.EntityContainer&quot;> </xref> EntityContainer 개념적 모델을 포함 하는 개체입니다."
  overload: System.Data.Entity.Design.EntityModelSchemaGenerator.EntityContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateForeignKeyProperties
  id: GenerateForeignKeyProperties
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  langs:
  - csharp
  name: GenerateForeignKeyProperties
  nameWithType: EntityModelSchemaGenerator.GenerateForeignKeyProperties
  fullName: System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateForeignKeyProperties
  type: Property
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "개념적 모델에서 외래 키 속성을 생성 하기 위한 플래그를 가져오거나 설정 합니다."
  syntax:
    content: public bool GenerateForeignKeyProperties { get; set; }
    return:
      type: System.Boolean
      description: "이 속성의 값으로 설정 되 면 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 다음 개념적 모델에 외래 키 속성 생성 되므로 그렇지 않은 경우 개념적 모델에는 외래 키 속성 생성 되지 않습니다."
  overload: System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateForeignKeyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateMetadata
  id: GenerateMetadata
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  langs:
  - csharp
  name: GenerateMetadata()
  nameWithType: EntityModelSchemaGenerator.GenerateMetadata()
  fullName: System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateMetadata()
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "개념적 모델 메타 데이터 정보를 생성 하 고 스키마 오류를 반환 합니다."
  syntax:
    content: public System.Collections.Generic.IList<System.Data.Metadata.Edm.EdmSchemaError> GenerateMetadata ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError}
      description: "스키마 오류 개체의 컬렉션입니다."
  overload: System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateMetadata(System.Version)
  id: GenerateMetadata(System.Version)
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  langs:
  - csharp
  name: GenerateMetadata(Version)
  nameWithType: EntityModelSchemaGenerator.GenerateMetadata(Version)
  fullName: System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateMetadata(Version)
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "개념적 모델 메타 데이터 정보를 생성 하 고 스키마 오류를 반환 합니다."
  syntax:
    content: public System.Collections.Generic.IList<System.Data.Metadata.Edm.EdmSchemaError> GenerateMetadata (Version targetEntityFrameworkVersion);
    parameters:
    - id: targetEntityFrameworkVersion
      type: System.Version
      description: "Entity Framework의 대상된 버전에 해당 하는 EntityFrameworkVersions의 속성입니다."
    return:
      type: System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError}
      description: "스키마 오류 개체의 컬렉션입니다."
  overload: System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService
  id: PluralizationService
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  langs:
  - csharp
  name: PluralizationService
  nameWithType: EntityModelSchemaGenerator.PluralizationService
  fullName: System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService
  type: Property
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "모델을 생성할 때 사용 되는 서비스를 나타내는 PluralizationService 값을 가져오거나 설정 합니다."
  syntax:
    content: public System.Data.Entity.Design.PluralizationServices.PluralizationService PluralizationService { get; set; }
    return:
      type: System.Data.Entity.Design.PluralizationServices.PluralizationService
      description: "<xref href=&quot;System.Data.Entity.Design.PluralizationServices.PluralizationService&quot;> </xref> 모델을 생성할 때 사용 되는 서비스를 나타내는 값입니다."
  overload: System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.WriteModelSchema(System.String)
  id: WriteModelSchema(System.String)
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  langs:
  - csharp
  name: WriteModelSchema(String)
  nameWithType: EntityModelSchemaGenerator.WriteModelSchema(String)
  fullName: System.Data.Entity.Design.EntityModelSchemaGenerator.WriteModelSchema(String)
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "지정된 된 파일에 생성 된 개념 스키마 정의 언어 (CSDL)을 씁니다."
  syntax:
    content: public void WriteModelSchema (string outputFileName);
    parameters:
    - id: outputFileName
      type: System.String
      description: "출력 파일의 이름입니다."
  overload: System.Data.Entity.Design.EntityModelSchemaGenerator.WriteModelSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.WriteModelSchema(System.Xml.XmlWriter)
  id: WriteModelSchema(System.Xml.XmlWriter)
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  langs:
  - csharp
  name: WriteModelSchema(XmlWriter)
  nameWithType: EntityModelSchemaGenerator.WriteModelSchema(XmlWriter)
  fullName: System.Data.Entity.Design.EntityModelSchemaGenerator.WriteModelSchema(XmlWriter)
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "XmlWriter 개체를 생성 된 개념 스키마 정의 언어 (CSDL)을 씁니다."
  syntax:
    content: public void WriteModelSchema (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "CSDL을 쓸 XmlWriter입니다."
  overload: System.Data.Entity.Design.EntityModelSchemaGenerator.WriteModelSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.WriteStorageMapping(System.String)
  id: WriteStorageMapping(System.String)
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  langs:
  - csharp
  name: WriteStorageMapping(String)
  nameWithType: EntityModelSchemaGenerator.WriteStorageMapping(String)
  fullName: System.Data.Entity.Design.EntityModelSchemaGenerator.WriteStorageMapping(String)
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "지정된 된 파일에 생성된 된 매핑 사양 언어 (MSL)을 씁니다."
  syntax:
    content: public void WriteStorageMapping (string outputFileName);
    parameters:
    - id: outputFileName
      type: System.String
      description: "출력 파일의 이름입니다."
  overload: System.Data.Entity.Design.EntityModelSchemaGenerator.WriteStorageMapping*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.WriteStorageMapping(System.Xml.XmlWriter)
  id: WriteStorageMapping(System.Xml.XmlWriter)
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  langs:
  - csharp
  name: WriteStorageMapping(XmlWriter)
  nameWithType: EntityModelSchemaGenerator.WriteStorageMapping(XmlWriter)
  fullName: System.Data.Entity.Design.EntityModelSchemaGenerator.WriteStorageMapping(XmlWriter)
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "XmlWriter 개체를 생성된 된 매핑 사양 언어 (MSL)을 씁니다."
  syntax:
    content: public void WriteStorageMapping (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "MSL 기록 되는 XmlWriter입니다."
  overload: System.Data.Entity.Design.EntityModelSchemaGenerator.WriteStorageMapping*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.#ctor(System.Data.Metadata.Edm.EntityContainer)
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  isExternal: false
  name: EntityModelSchemaGenerator(EntityContainer)
  nameWithType: EntityModelSchemaGenerator.EntityModelSchemaGenerator(EntityContainer)
  fullName: System.Data.Entity.Design.EntityModelSchemaGenerator.EntityModelSchemaGenerator(EntityContainer)
- uid: System.Data.Metadata.Edm.EntityContainer
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntityContainer
  nameWithType: EntityContainer
  fullName: System.Data.Metadata.Edm.EntityContainer
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.#ctor(System.Data.Metadata.Edm.EntityContainer,System.String,System.String)
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  isExternal: false
  name: EntityModelSchemaGenerator(EntityContainer,String,String)
  nameWithType: EntityModelSchemaGenerator.EntityModelSchemaGenerator(EntityContainer,String,String)
  fullName: System.Data.Entity.Design.EntityModelSchemaGenerator.EntityModelSchemaGenerator(EntityContainer,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.#ctor(System.Data.Metadata.Edm.StoreItemCollection,System.String,System.String)
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  isExternal: false
  name: EntityModelSchemaGenerator(StoreItemCollection,String,String)
  nameWithType: EntityModelSchemaGenerator.EntityModelSchemaGenerator(StoreItemCollection,String,String)
  fullName: System.Data.Entity.Design.EntityModelSchemaGenerator.EntityModelSchemaGenerator(StoreItemCollection,String,String)
- uid: System.Data.Metadata.Edm.StoreItemCollection
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: StoreItemCollection
  nameWithType: StoreItemCollection
  fullName: System.Data.Metadata.Edm.StoreItemCollection
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.EdmItemCollection
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  isExternal: false
  name: EdmItemCollection
  nameWithType: EntityModelSchemaGenerator.EdmItemCollection
  fullName: System.Data.Entity.Design.EntityModelSchemaGenerator.EdmItemCollection
- uid: System.Data.Metadata.Edm.EdmItemCollection
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EdmItemCollection
  nameWithType: EdmItemCollection
  fullName: System.Data.Metadata.Edm.EdmItemCollection
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.EntityContainer
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  isExternal: false
  name: EntityContainer
  nameWithType: EntityModelSchemaGenerator.EntityContainer
  fullName: System.Data.Entity.Design.EntityModelSchemaGenerator.EntityContainer
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateForeignKeyProperties
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  isExternal: false
  name: GenerateForeignKeyProperties
  nameWithType: EntityModelSchemaGenerator.GenerateForeignKeyProperties
  fullName: System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateForeignKeyProperties
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateMetadata
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  isExternal: false
  name: GenerateMetadata()
  nameWithType: EntityModelSchemaGenerator.GenerateMetadata()
  fullName: System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateMetadata()
- uid: System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<EdmSchemaError>
  nameWithType: IList<EdmSchemaError>
  fullName: System.Collections.Generic.IList<System.Data.Metadata.Edm.EdmSchemaError>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Data.Metadata.Edm.EdmSchemaError>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.EdmSchemaError
    name: EdmSchemaError
    nameWithType: EdmSchemaError
    fullName: EdmSchemaError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateMetadata(System.Version)
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  isExternal: false
  name: GenerateMetadata(Version)
  nameWithType: EntityModelSchemaGenerator.GenerateMetadata(Version)
  fullName: System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateMetadata(Version)
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  isExternal: false
  name: PluralizationService
  nameWithType: EntityModelSchemaGenerator.PluralizationService
  fullName: System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService
  parent: System.Data.Entity.Design.PluralizationServices
  isExternal: false
  name: PluralizationService
  nameWithType: PluralizationService
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.WriteModelSchema(System.String)
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  isExternal: false
  name: WriteModelSchema(String)
  nameWithType: EntityModelSchemaGenerator.WriteModelSchema(String)
  fullName: System.Data.Entity.Design.EntityModelSchemaGenerator.WriteModelSchema(String)
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.WriteModelSchema(System.Xml.XmlWriter)
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  isExternal: false
  name: WriteModelSchema(XmlWriter)
  nameWithType: EntityModelSchemaGenerator.WriteModelSchema(XmlWriter)
  fullName: System.Data.Entity.Design.EntityModelSchemaGenerator.WriteModelSchema(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.WriteStorageMapping(System.String)
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  isExternal: false
  name: WriteStorageMapping(String)
  nameWithType: EntityModelSchemaGenerator.WriteStorageMapping(String)
  fullName: System.Data.Entity.Design.EntityModelSchemaGenerator.WriteStorageMapping(String)
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.WriteStorageMapping(System.Xml.XmlWriter)
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  isExternal: false
  name: WriteStorageMapping(XmlWriter)
  nameWithType: EntityModelSchemaGenerator.WriteStorageMapping(XmlWriter)
  fullName: System.Data.Entity.Design.EntityModelSchemaGenerator.WriteStorageMapping(XmlWriter)
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.#ctor*
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  isExternal: false
  name: EntityModelSchemaGenerator
  nameWithType: EntityModelSchemaGenerator.EntityModelSchemaGenerator
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.EdmItemCollection*
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  isExternal: false
  name: EdmItemCollection
  nameWithType: EntityModelSchemaGenerator.EdmItemCollection
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.EntityContainer*
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  isExternal: false
  name: EntityContainer
  nameWithType: EntityModelSchemaGenerator.EntityContainer
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateForeignKeyProperties*
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  isExternal: false
  name: GenerateForeignKeyProperties
  nameWithType: EntityModelSchemaGenerator.GenerateForeignKeyProperties
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateMetadata*
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  isExternal: false
  name: GenerateMetadata
  nameWithType: EntityModelSchemaGenerator.GenerateMetadata
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService*
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  isExternal: false
  name: PluralizationService
  nameWithType: EntityModelSchemaGenerator.PluralizationService
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.WriteModelSchema*
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  isExternal: false
  name: WriteModelSchema
  nameWithType: EntityModelSchemaGenerator.WriteModelSchema
- uid: System.Data.Entity.Design.EntityModelSchemaGenerator.WriteStorageMapping*
  parent: System.Data.Entity.Design.EntityModelSchemaGenerator
  isExternal: false
  name: WriteStorageMapping
  nameWithType: EntityModelSchemaGenerator.WriteStorageMapping
