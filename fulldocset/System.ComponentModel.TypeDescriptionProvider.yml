### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.TypeDescriptionProvider
  id: TypeDescriptionProvider
  children:
  - System.ComponentModel.TypeDescriptionProvider.#ctor
  - System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)
  - System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  - System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)
  - System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)
  - System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)
  - System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)
  - System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)
  langs:
  - csharp
  name: TypeDescriptionProvider
  nameWithType: TypeDescriptionProvider
  fullName: System.ComponentModel.TypeDescriptionProvider
  type: Class
  summary: "추가 메타 데이터를 제공 된 <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>합니다."
  remarks: "TypeDescriptionProvider 클래스는 동적으로 추가, 수정 또는 숨기기 특성, 속성 및 이벤트 등의 특성 형식이 나 개체와 연결 된 형식 정보를 확장 합니다. 단일 <xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor> 메타 데이터를 제공 하는 여러 형식 설명 공급자 클래스가 있을 수 있습니다.       와 TypeDescriptionProvider 연결 하는 방법은 두 가지가 <xref:System.ComponentModel.TypeDescriptor>:-경우 대상 클래스 지정할 수 있는 적절 한 디자인 타임에 <xref:System.ComponentModel.TypeDescriptionProviderAttribute>태그.</xref:System.ComponentModel.TypeDescriptionProviderAttribute> </xref:System.ComponentModel.TypeDescriptor>      에 런타임에 한 경우의 <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>의 메서드는 <xref:System.ComponentModel.TypeDescriptor>클래스를 호출할 수 있습니다.</xref:System.ComponentModel.TypeDescriptor> </xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> 이러한 오버 로드 된 메서드는 대상 개체 또는 클래스 형식이 필요합니다.       TypeDescriptionProvider 클래스는 부모 개체를 생성 하는 동안 제공 된 동일한 형식의 사용 합니다. 파생 된 클래스를 사용 하면이 <xref:System.ComponentModel.CustomTypeDescriptor>를 선택적으로 메서드를 재정의 합니다.</xref:System.ComponentModel.CustomTypeDescriptor>       TypeDescriptionProvider 인스턴스의 성능에 대 한 사용자 지정 형식 정보의 영향 최소화 필요한 경우에 빌드됩니다.       이 클래스는 상속 될 수 없습니다."
  syntax:
    content: public abstract class TypeDescriptionProvider
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.#ctor
  id: '#ctor'
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: TypeDescriptionProvider()
  nameWithType: TypeDescriptionProvider.TypeDescriptionProvider()
  fullName: System.ComponentModel.TypeDescriptionProvider.TypeDescriptionProvider()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> 클래스입니다."
  remarks: "이 생성자는 다른 호출 <xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29>생성자는 매개 변수 값으로 `null`.</xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29>"
  syntax:
    content: protected TypeDescriptionProvider ();
    parameters: []
  overload: System.ComponentModel.TypeDescriptionProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)
  id: '#ctor(System.ComponentModel.TypeDescriptionProvider)'
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: TypeDescriptionProvider(TypeDescriptionProvider)
  nameWithType: TypeDescriptionProvider.TypeDescriptionProvider(TypeDescriptionProvider)
  fullName: System.ComponentModel.TypeDescriptionProvider.TypeDescriptionProvider(TypeDescriptionProvider)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> 클래스는 부모 형식 설명 공급자를 사용 합니다."
  remarks: "경우는 `parent` 매개 변수는 `null`모든 <xref:System.ComponentModel.TypeDescriptionProvider>메서드는 기본 값을 반환 합니다.</xref:System.ComponentModel.TypeDescriptionProvider> 그렇지 않으면 모든 <xref:System.ComponentModel.TypeDescriptionProvider>메서드의 메서드에 위임 합니다 `parent`.</xref:System.ComponentModel.TypeDescriptionProvider>       다음 표에서에 대 한 기본 반환 값이 나와 <xref:System.ComponentModel.TypeDescriptionProvider>메서드.</xref:System.ComponentModel.TypeDescriptionProvider>      | 메서드 | 반환 값을 기본 |   |------------|--------------------------|   | <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A>| `null`|   | <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A>| 새로 만든된 개체를 통해 <xref:System.Activator.CreateInstance%2A>메서드를 호출 합니다. |   | <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A>| <xref:System.ComponentModel.CustomTypeDescriptor>클래스의 기본 인스턴스. |   | <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>| <xref:System.ComponentModel.CustomTypeDescriptor>클래스의 기본 인스턴스. |   | <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>| `objectType` 첫 번째 매개 변수입니다. |</xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> </xref:System.ComponentModel.CustomTypeDescriptor> </xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> </xref:System.ComponentModel.CustomTypeDescriptor> </xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> </xref:System.Activator.CreateInstance%2A> </xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> </xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A>"
  syntax:
    content: protected TypeDescriptionProvider (System.ComponentModel.TypeDescriptionProvider parent);
    parameters:
    - id: parent
      type: System.ComponentModel.TypeDescriptionProvider
      description: "부모 형식 설명 공급자입니다."
  overload: System.ComponentModel.TypeDescriptionProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  id: CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: CreateInstance(IServiceProvider,Type,Type[],Object[])
  nameWithType: TypeDescriptionProvider.CreateInstance(IServiceProvider,Type,Type[],Object[])
  fullName: System.ComponentModel.TypeDescriptionProvider.CreateInstance(IServiceProvider,Type,Type[],Object[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "다른 데이터 형식 대신 사용할 수 있는 개체를 만듭니다."
  remarks: "<xref:System.IServiceProvider>에 지정 된는 `provider` <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=fullName> <xref:System.ComponentModel.TypeDescriptor>클래스</xref:System.ComponentModel.TypeDescriptor> 의 메서드</xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=fullName> 에 매개 변수를 전달</xref:System.IServiceProvider> 경우 `provider` 않습니다 `null`, 서비스 공급자 만들기 호출에 대 한 추가 컨텍스트를 가져올 형식 설명 공급자에서 사용 될 수 있습니다.       CreateInstance 메서드는 `virtual` 기본적으로 결과를 반환 하는 고는 <xref:System.Activator.CreateInstance%2A?displayProperty=fullName>메서드 경우 `provider` 은 `null`.</xref:System.Activator.CreateInstance%2A?displayProperty=fullName> 경우 `provider` 은 `null`,이 메서드는 부모 공급자의 CreateInstance 메서드를 호출 합니다."
  syntax:
    content: public virtual object CreateInstance (IServiceProvider provider, Type objectType, Type[] argTypes, object[] args);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "선택적 서비스 공급자입니다."
    - id: objectType
      type: System.Type
      description: "만들 개체의 형식입니다. 이 매개 변수는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: argTypes
      type: System.Type[]
      description: "개체의 생성자에 전달 될 매개 변수 형식을 나타내는 형식의 선택적 배열입니다. 이 배열은 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이거나 길이가&0;입니다."
    - id: args
      type: System.Object[]
      description: "개체의 생성자에 전달할 매개 변수 값의 선택적 배열입니다."
    return:
      type: System.Object
      description: "<xref:System.Object>입니다.</xref:System.Object> 대체"
  overload: System.ComponentModel.TypeDescriptionProvider.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)
  id: GetCache(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: GetCache(Object)
  nameWithType: TypeDescriptionProvider.GetCache(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetCache(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "으로 액세스 하는 개체당 캐시를 가져옵니다는 <xref:System.Collections.IDictionary>키/값 쌍의.</xref:System.Collections.IDictionary>"
  remarks: "A <xref:System.ComponentModel.TypeDescriptor>메타 데이터의 컬렉션에 대 한 복잡 한 작업을 수행 해야 할 수 있습니다.</xref:System.ComponentModel.TypeDescriptor> 형식이 도메인의 수명에 대 한 언로드되지 않으므로 <xref:System.ComponentModel.TypeDescriptor>클래스 형식에 따라 이러한 작업의 결과 자동으로 캐시 됩니다.</xref:System.ComponentModel.TypeDescriptor> 하지만 일부 작업은 라이브 개체 인스턴스를 사용 합니다. 내에서 이러한 작업을 캐시할 수 없습니다는 <xref:System.ComponentModel.TypeDescriptor>클래스를 캐시 하지 않게 개체가 가비지 수집 되지 않도록 하므로.</xref:System.ComponentModel.TypeDescriptor> 대신,는 <xref:System.ComponentModel.TypeDescriptor>으로 액세스 하는 개체당 캐시에 대 한 클래스를 사용 하는 <xref:System.Collections.IDictionary>개체에 있는 키/값 쌍의.</xref:System.Collections.IDictionary> </xref:System.ComponentModel.TypeDescriptor> GetCache 메서드는이 캐시의 인스턴스를 반환합니다. GetCache 메서드는 반환 `null` 경우 개체에 대 한 지원 되는 캐시가 없습니다.       기본 <xref:System.ComponentModel.TypeDescriptionProvider>에서 사용 하는 <xref:System.ComponentModel.TypeDescriptor>개체를 구현 하는 설치 되는 구성 인지를 검사 하는 <xref:System.ComponentModel.Design.IDictionaryService>인터페이스.</xref:System.ComponentModel.Design.IDictionaryService> </xref:System.ComponentModel.TypeDescriptor> </xref:System.ComponentModel.TypeDescriptionProvider> 개체가 있으면 개체의 캐시를 저장 하는 사전 서비스를 사용 합니다. 개체는 변수가 `null`합니다. 다른 형식 설명 공급자 여기 자체 구현을 제공할 수 있습니다. 예를 들어 종속성 개체 수 속성을 연결할 <xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary> 형식의"
  syntax:
    content: public virtual System.Collections.IDictionary GetCache (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "캐시를 가져올 개체입니다."
    return:
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>제공된 된 개체가; 캐싱을 지 원하는 경우 이렇게 하지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IDictionary>"
  overload: System.ComponentModel.TypeDescriptionProvider.GetCache*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)
  id: GetExtendedTypeDescriptor(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: GetExtendedTypeDescriptor(Object)
  nameWithType: TypeDescriptionProvider.GetExtendedTypeDescriptor(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "지정된 된 개체에 대 한 확장된 사용자 지정 형식 설명자를 가져옵니다."
  remarks: "확장된 형식 설명자는 개체에 실제로 정의 된 다른 개체에는 있지만이 개체에 추가 속성이 제공 하는 사용자 지정 형식 설명자입니다. 예를 들어는 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] 구성 요소 모델을 구현 하는 개체는 <xref:System.ComponentModel.IExtenderProvider>인터페이스에는 같은 논리 컨테이너에 있는 다른 개체에 속성을 연결할 수 있습니다.</xref:System.ComponentModel.IExtenderProvider> 오버 로드 된 <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>메서드에서 이러한 추가 확장된 속성을 제공 하는 형식 설명자를 반환 하지 않음.</xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> GetExtendedTypeDescriptor 메서드는 이러한 확장된 속성의 집합을 반환 합니다. <xref:System.ComponentModel.TypeDescriptor>두 속성 컬렉션의 결과 자동으로 병합 됩니다.</xref:System.ComponentModel.TypeDescriptor> 반면는 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] 구성 요소 모델에만 확장된 속성은 지원, 형식 설명 공급자가 지 원하는 경우 이벤트 뿐만 아니라 확장된 특성에 대 한 GetExtendedTypeDescriptor을 사용할 수 있습니다.       GetExtendedTypeDescriptor은 `virtual` 및 기본적으로 없는 부모 공급자가 전달 하는 경우 빈 결과 반환 하는 사용자 지정 형식 설명자를 반환 합니다. 부모 공급자가 전달 하 고,이 메서드는 부모 공급자 GetExtendedTypeDescriptor 메서드를 호출 합니다."
  syntax:
    content: public virtual System.ComponentModel.ICustomTypeDescriptor GetExtendedTypeDescriptor (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "개체를 가져올 확장된 형식 설명자입니다."
    return:
      type: System.ComponentModel.ICustomTypeDescriptor
      description: "<xref href=&quot;System.ComponentModel.ICustomTypeDescriptor&quot;> </xref> 개체에 대 한 확장 된 메타 데이터를 제공할 수 있는 합니다."
  overload: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)
  id: GetExtenderProviders(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: GetExtenderProviders(Object)
  nameWithType: TypeDescriptionProvider.GetExtenderProviders(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "지정된 된 개체에 대 한 extender 공급자를 가져옵니다."
  syntax:
    content: protected virtual System.ComponentModel.IExtenderProvider[] GetExtenderProviders (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "에 대 한 extender 공급자를 가져올 개체입니다."
    return:
      type: System.ComponentModel.IExtenderProvider[]
      description: "에 대 한 extender 공급자 배열을 <code> instance </code>합니다."
  overload: System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)
  id: GetFullComponentName(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: GetFullComponentName(Object)
  nameWithType: TypeDescriptionProvider.GetFullComponentName(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "지정된 된 구성의 이름을 가져옵니다 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 구성 요소에 이름이 없는 경우."
  syntax:
    content: public virtual string GetFullComponentName (object component);
    parameters:
    - id: component
      type: System.Object
      description: "지정 된 구성 요소입니다."
    return:
      type: System.String
      description: "지정된 된 구성 요소의 이름입니다."
  overload: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)
  id: GetReflectionType(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: GetReflectionType(Object)
  nameWithType: TypeDescriptionProvider.GetReflectionType(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "지정된 된 개체에 대해 일반 리플렉션을 수행합니다."
  remarks: "<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>메서드는 하위 버전의는 <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>메서드.</xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> </xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> 사용자 지정 형식 설명자가 없습니다 개체를 찾을 수 없으면 <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>개체에 대해 일반 리플렉션을 수행 하기 위해 호출 됩니다.</xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>       이 메서드 오버 로드를 사용 하 여 형식이 아닌 인스턴스를 사용 하는 형식 설명자 멤버 호출한 경우."
  syntax:
    content: public Type GetReflectionType (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "형식의 인스턴스 (되어서는 안 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>)."
    return:
      type: System.Type
      description: "이 대 한 리플렉션의 유형의 <code> instance </code>합니다."
  overload: System.ComponentModel.TypeDescriptionProvider.GetReflectionType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)
  id: GetReflectionType(System.Type)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: GetReflectionType(Type)
  nameWithType: TypeDescriptionProvider.GetReflectionType(Type)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "형식에 대해 일반 리플렉션을 수행합니다."
  remarks: "<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>메서드는 하위 버전의는 <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>메서드.</xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> </xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> 사용자 지정 형식 설명자가 없습니다 개체를 찾을 수 없으면 <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>개체에 대해 일반 리플렉션을 수행 하기 위해 호출 됩니다.</xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>       이 메서드 오버 로드를 사용 하 여 인스턴스 대신 형식을 사용 하는 형식 설명자 멤버 호출한 경우."
  syntax:
    content: public Type GetReflectionType (Type objectType);
    parameters:
    - id: objectType
      type: System.Type
      description: "검색할 개체의 형식에서 <xref href=&quot;System.Reflection.IReflect&quot;> </xref>합니다."
    return:
      type: System.Type
      description: "이 대 한 리플렉션의 유형의 <code> objectType </code>합니다."
  overload: System.ComponentModel.TypeDescriptionProvider.GetReflectionType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>objectType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)
  id: GetReflectionType(System.Type,System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: GetReflectionType(Type,Object)
  nameWithType: TypeDescriptionProvider.GetReflectionType(Type,Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(Type,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "지정 된 형식의 지정된 된 개체에 대해 일반 리플렉션을 수행합니다."
  remarks: "<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>메서드는 하위 버전의는 <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>메서드.</xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> </xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> 사용자 지정 형식 설명자가 없습니다 개체를 찾을 수 없으면 <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>개체에 대해 일반 리플렉션을 수행 하기 위해 호출 됩니다.</xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>"
  syntax:
    content: public virtual Type GetReflectionType (Type objectType, object instance);
    parameters:
    - id: objectType
      type: System.Type
      description: "검색할 개체의 형식에서 <xref href=&quot;System.Reflection.IReflect&quot;> </xref>합니다."
    - id: instance
      type: System.Object
      description: "형식의 인스턴스입니다. Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Type
      description: "이 대 한 리플렉션의 유형의 <code> objectType </code>합니다."
  overload: System.ComponentModel.TypeDescriptionProvider.GetReflectionType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)
  id: GetRuntimeType(System.Type)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: GetRuntimeType(Type)
  nameWithType: TypeDescriptionProvider.GetRuntimeType(Type)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "리플렉션 형식을 런타임 형식으로 변환합니다."
  remarks: "GetRuntimeType 메서드 되돌립니다는<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> 리플렉션 형식을 변환 하는 메서드는 런타임 형식이 스풀링됩니다.</xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> 사용 하 여 보다 선호 됩니다 GetRuntimeType 메서드를 사용 하는 <xref:System.Type.UnderlyingSystemType%2A>이전 버전에서 런타임 형식을 반환 하는 데 사용 된 속성입니다.</xref:System.Type.UnderlyingSystemType%2A>"
  syntax:
    content: public virtual Type GetRuntimeType (Type reflectionType);
    parameters:
    - id: reflectionType
      type: System.Type
      description: "해당 되는 런타임 변환할 대상 형식입니다."
    return:
      type: System.Type
      description: "A <xref:System.Type>의 런타임 형식을 나타내는 <code> reflectionType </code>.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptionProvider.GetRuntimeType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reflectionType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)
  id: GetTypeDescriptor(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: GetTypeDescriptor(Object)
  nameWithType: TypeDescriptionProvider.GetTypeDescriptor(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "지정된 된 개체에 대 한 사용자 지정 형식 설명자를 가져옵니다."
  syntax:
    content: public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "형식의 인스턴스입니다. 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 인스턴스가에 전달 된 경우는 <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>합니다."
    return:
      type: System.ComponentModel.ICustomTypeDescriptor
      description: "<xref href=&quot;System.ComponentModel.ICustomTypeDescriptor&quot;> </xref> 유형에 대 한 메타 데이터를 제공할 수 있는 합니다."
  overload: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)
  id: GetTypeDescriptor(System.Type)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: GetTypeDescriptor(Type)
  nameWithType: TypeDescriptionProvider.GetTypeDescriptor(Type)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "지정된 된 형식에 대 한 사용자 지정 형식 설명자를 가져옵니다."
  syntax:
    content: public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType);
    parameters:
    - id: objectType
      type: System.Type
      description: "형식 설명자를 검색할 개체의 형식입니다."
    return:
      type: System.ComponentModel.ICustomTypeDescriptor
      description: "<xref href=&quot;System.ComponentModel.ICustomTypeDescriptor&quot;> </xref> 유형에 대 한 메타 데이터를 제공할 수 있는 합니다."
  overload: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)
  id: GetTypeDescriptor(System.Type,System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: GetTypeDescriptor(Type,Object)
  nameWithType: TypeDescriptionProvider.GetTypeDescriptor(Type,Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(Type,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "지정 된 형식 및 개체에 대 한 사용자 지정 형식 설명자를 가져옵니다."
  remarks: "이 메서드는로 프로토타입화 `virtual` 및 없는 부모 공급자가 전달 하는 경우 기본적으로 빈 설명자를 반환 합니다. 부모 공급자가 전달 하 고,이 메서드는 부모 공급자 GetTypeDescriptor 메서드를 호출 합니다."
  syntax:
    content: public virtual System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType, object instance);
    parameters:
    - id: objectType
      type: System.Type
      description: "형식 설명자를 검색할 개체의 형식입니다."
    - id: instance
      type: System.Object
      description: "형식의 인스턴스입니다. 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 인스턴스가에 전달 된 경우는 <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>합니다."
    return:
      type: System.ComponentModel.ICustomTypeDescriptor
      description: "<xref href=&quot;System.ComponentModel.ICustomTypeDescriptor&quot;> </xref> 유형에 대 한 메타 데이터를 제공할 수 있는 합니다."
  overload: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)
  id: IsSupportedType(System.Type)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: IsSupportedType(Type)
  nameWithType: TypeDescriptionProvider.IsSupportedType(Type)
  fullName: System.ComponentModel.TypeDescriptionProvider.IsSupportedType(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "지정된 된 형식의 형식 설명 및 형식 설명 공급자의 체인과 호환 되는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public virtual bool IsSupportedType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "호환성을 테스트할 형식입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <code> type </code> 형식 설명 및 형식 설명 공급자의 체인과와 호환 되 고, 그러지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.TypeDescriptionProvider.IsSupportedType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.TypeDescriptionProvider.#ctor
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: TypeDescriptionProvider()
  nameWithType: TypeDescriptionProvider.TypeDescriptionProvider()
  fullName: System.ComponentModel.TypeDescriptionProvider.TypeDescriptionProvider()
- uid: System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: TypeDescriptionProvider(TypeDescriptionProvider)
  nameWithType: TypeDescriptionProvider.TypeDescriptionProvider(TypeDescriptionProvider)
  fullName: System.ComponentModel.TypeDescriptionProvider.TypeDescriptionProvider(TypeDescriptionProvider)
- uid: System.ComponentModel.TypeDescriptionProvider
  parent: System.ComponentModel
  isExternal: false
  name: TypeDescriptionProvider
  nameWithType: TypeDescriptionProvider
  fullName: System.ComponentModel.TypeDescriptionProvider
- uid: System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: CreateInstance(IServiceProvider,Type,Type[],Object[])
  nameWithType: TypeDescriptionProvider.CreateInstance(IServiceProvider,Type,Type[],Object[])
  fullName: System.ComponentModel.TypeDescriptionProvider.CreateInstance(IServiceProvider,Type,Type[],Object[])
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetCache(Object)
  nameWithType: TypeDescriptionProvider.GetCache(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetCache(Object)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetExtendedTypeDescriptor(Object)
  nameWithType: TypeDescriptionProvider.GetExtendedTypeDescriptor(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(Object)
- uid: System.ComponentModel.ICustomTypeDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: ICustomTypeDescriptor
  nameWithType: ICustomTypeDescriptor
  fullName: System.ComponentModel.ICustomTypeDescriptor
- uid: System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetExtenderProviders(Object)
  nameWithType: TypeDescriptionProvider.GetExtenderProviders(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(Object)
- uid: System.ComponentModel.IExtenderProvider[]
  parent: System.ComponentModel
  isExternal: false
  name: IExtenderProvider
  nameWithType: IExtenderProvider
  fullName: System.ComponentModel.IExtenderProvider[]
  spec.csharp:
  - uid: System.ComponentModel.IExtenderProvider
    name: IExtenderProvider
    nameWithType: IExtenderProvider
    fullName: IExtenderProvider[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetFullComponentName(Object)
  nameWithType: TypeDescriptionProvider.GetFullComponentName(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetReflectionType(Object)
  nameWithType: TypeDescriptionProvider.GetReflectionType(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(Object)
- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetReflectionType(Type)
  nameWithType: TypeDescriptionProvider.GetReflectionType(Type)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(Type)
- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetReflectionType(Type,Object)
  nameWithType: TypeDescriptionProvider.GetReflectionType(Type,Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(Type,Object)
- uid: System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetRuntimeType(Type)
  nameWithType: TypeDescriptionProvider.GetRuntimeType(Type)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(Type)
- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetTypeDescriptor(Object)
  nameWithType: TypeDescriptionProvider.GetTypeDescriptor(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(Object)
- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetTypeDescriptor(Type)
  nameWithType: TypeDescriptionProvider.GetTypeDescriptor(Type)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(Type)
- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetTypeDescriptor(Type,Object)
  nameWithType: TypeDescriptionProvider.GetTypeDescriptor(Type,Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(Type,Object)
- uid: System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: IsSupportedType(Type)
  nameWithType: TypeDescriptionProvider.IsSupportedType(Type)
  fullName: System.ComponentModel.TypeDescriptionProvider.IsSupportedType(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.TypeDescriptionProvider.#ctor*
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: TypeDescriptionProvider
  nameWithType: TypeDescriptionProvider.TypeDescriptionProvider
- uid: System.ComponentModel.TypeDescriptionProvider.CreateInstance*
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: CreateInstance
  nameWithType: TypeDescriptionProvider.CreateInstance
- uid: System.ComponentModel.TypeDescriptionProvider.GetCache*
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetCache
  nameWithType: TypeDescriptionProvider.GetCache
- uid: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor*
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetExtendedTypeDescriptor
  nameWithType: TypeDescriptionProvider.GetExtendedTypeDescriptor
- uid: System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders*
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetExtenderProviders
  nameWithType: TypeDescriptionProvider.GetExtenderProviders
- uid: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName*
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetFullComponentName
  nameWithType: TypeDescriptionProvider.GetFullComponentName
- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType*
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetReflectionType
  nameWithType: TypeDescriptionProvider.GetReflectionType
- uid: System.ComponentModel.TypeDescriptionProvider.GetRuntimeType*
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetRuntimeType
  nameWithType: TypeDescriptionProvider.GetRuntimeType
- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor*
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetTypeDescriptor
  nameWithType: TypeDescriptionProvider.GetTypeDescriptor
- uid: System.ComponentModel.TypeDescriptionProvider.IsSupportedType*
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: IsSupportedType
  nameWithType: TypeDescriptionProvider.IsSupportedType
