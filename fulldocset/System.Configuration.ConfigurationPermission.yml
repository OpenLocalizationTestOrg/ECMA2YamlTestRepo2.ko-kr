### YamlMime:ManagedReference
items:
- uid: System.Configuration.ConfigurationPermission
  id: ConfigurationPermission
  children:
  - System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Configuration.ConfigurationPermission.Copy
  - System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)
  - System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)
  - System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)
  - System.Configuration.ConfigurationPermission.IsUnrestricted
  - System.Configuration.ConfigurationPermission.ToXml
  - System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: ConfigurationPermission
  nameWithType: ConfigurationPermission
  fullName: System.Configuration.ConfigurationPermission
  type: Class
  summary: "메서드 또는 클래스 구성 파일에 액세스할 수 있는 사용 권한 구조를 제공 합니다."
  remarks: "ConfigurationPermission 클래스 메서드 또는 클래스 구성 파일에 액세스할 수 있는 사용 권한 구조를 제공 합니다. 또한 ConfigurationPermission 제공 <xref:System.Configuration.ConfigurationPermission.Union%2A>및 <xref:System.Configuration.ConfigurationPermission.Intersect%2A>.</xref:System.Configuration.ConfigurationPermission.Intersect%2A> </xref:System.Configuration.ConfigurationPermission.Union%2A> 등의 메서드를 통해 권한 값을 여러 개를 해결 하는 방법"
  syntax:
    content: 'public sealed class ConfigurationPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Configuration.ConfigurationPermission
  langs:
  - csharp
  name: ConfigurationPermission(PermissionState)
  nameWithType: ConfigurationPermission.ConfigurationPermission(PermissionState)
  fullName: System.Configuration.ConfigurationPermission.ConfigurationPermission(PermissionState)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref> 클래스입니다."
  syntax:
    content: public ConfigurationPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "권한을 부여 하려면 권한 수준입니다."
  overload: System.Configuration.ConfigurationPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The value of <code>state</code> is neither <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref> nor <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.ConfigurationPermission.Copy
  id: Copy
  parent: System.Configuration.ConfigurationPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: ConfigurationPermission.Copy()
  fullName: System.Configuration.ConfigurationPermission.Copy()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "새 반환 <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref> 권한 수준이 같은 개체입니다."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "새 <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref> 동일한 사용 권한 수준입니다."
  overload: System.Configuration.ConfigurationPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Configuration.ConfigurationPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: ConfigurationPermission.FromXml(SecurityElement)
  fullName: System.Configuration.ConfigurationPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "XML에서 사용 권한 상태 값을 읽습니다."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "사용 권한 상태를 읽을 구성 요소입니다."
  overload: System.Configuration.ConfigurationPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityElement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref uid=&quot;langword_csharp_unrestricted&quot; name=&quot;unrestricted&quot; href=&quot;&quot;></xref> attribute for the given <code>securityElement</code> is neither <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> nor <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Configuration.ConfigurationPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: ConfigurationPermission.Intersect(IPermission)
  fullName: System.Configuration.ConfigurationPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "사이의 논리적 교집합을 반환는 <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref> 개체와 지정된 된 개체를 구현 하는 <xref href=&quot;System.Security.IPermission&quot;> </xref> 인터페이스입니다."
  remarks: "메서드 시그니처를 구현 하는 모든 개체를 허용 하지만 <xref:System.Security.IPermission>인터페이스는 <xref:System.ArgumentException>를 호출 하는 경우 예외가 throw 됩니다는 <xref:System.Object.GetType%2A>메서드를 참조 하는 개체는 `target` 매개 변수 <xref:System.Configuration.ConfigurationPermission?displayProperty=fullName>.</xref:System.Configuration.ConfigurationPermission?displayProperty=fullName> 반환 하지 않는</xref:System.Object.GetType%2A> </xref:System.ArgumentException> </xref:System.Security.IPermission>"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "와 교차 부분을 수행 하는 권한을 포함 하는 개체입니다."
    return:
      type: System.Security.IPermission
      description: "사이의 논리적 교집합은 <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref> 및 구현 하는 지정 된 개체 <xref href=&quot;System.Security.IPermission&quot;> </xref>합니다."
  overload: System.Configuration.ConfigurationPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>인수로 형식화 되지 않습니다 <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Configuration.ConfigurationPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: ConfigurationPermission.IsSubsetOf(IPermission)
  fullName: System.Configuration.ConfigurationPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "비교는 <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref> 구현 하는 개체와 개체는 <xref href=&quot;System.Security.IPermission&quot;> </xref> 인터페이스입니다."
  remarks: "메서드 시그니처를 구현 하는 모든 개체를 허용 하지만 <xref:System.Security.IPermission>인터페이스는 <xref:System.ArgumentException>를 호출 하는 경우 예외가 throw 됩니다는 <xref:System.Object.GetType%2A>메서드를 참조 하는 개체는 `target` 매개 변수 <xref:System.Configuration.ConfigurationPermission?displayProperty=fullName>.</xref:System.Configuration.ConfigurationPermission?displayProperty=fullName> 반환 하지 않는</xref:System.Object.GetType%2A> </xref:System.ArgumentException> </xref:System.Security.IPermission>       개체에서 참조 하는 경우는 `target` 매개 변수는 `null`의 사용 권한 상태 간의 비교를 수행 하는 <xref:System.Configuration.ConfigurationPermission>개체 및 <xref:System.Security.Permissions.PermissionState>의 값은 <xref:System.Security.Permissions.PermissionState>열거형.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> </xref:System.Configuration.ConfigurationPermission>"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "비교할 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사용 권한 상태 같으면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Configuration.ConfigurationPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>인수로 형식화 되지 않습니다 <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Configuration.ConfigurationPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Configuration.ConfigurationPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: ConfigurationPermission.IsUnrestricted()
  fullName: System.Configuration.ConfigurationPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "나타냅니다 여부에 대 한 사용 권한 상태는 <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref> 개체는는 <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> 값은 <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> 열거형입니다."
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우에 대 한 사용 권한 상태는 <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref> 는 <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> 값 <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Configuration.ConfigurationPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPermission.ToXml
  id: ToXml
  parent: System.Configuration.ConfigurationPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: ConfigurationPermission.ToXml()
  fullName: System.Configuration.ConfigurationPermission.ToXml()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "반환 된 <xref href=&quot;System.Security.SecurityElement&quot;> </xref> 현재를 기준으로 한 특성 값을 가진 개체 <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref> 개체입니다."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;> </xref> 현재에 따라 특성 값을 가진 <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref>합니다."
  overload: System.Configuration.ConfigurationPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Configuration.ConfigurationPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: ConfigurationPermission.Union(IPermission)
  fullName: System.Configuration.ConfigurationPermission.Union(IPermission)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "이루어진 논리적 조합 반환는 <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref> 개체 및 구현 하는 개체는 <xref href=&quot;System.Security.IPermission&quot;> </xref> 인터페이스입니다."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "합집합을 하는 개체입니다."
    return:
      type: System.Security.IPermission
      description: "이루어진 논리적 조합 된 <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref> 및 구현 하는 개체 <xref href=&quot;System.Security.IPermission&quot;> </xref>합니다."
  overload: System.Configuration.ConfigurationPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>인수로 형식화 되지 않습니다 <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref>합니다."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: ConfigurationPermission(PermissionState)
  nameWithType: ConfigurationPermission.ConfigurationPermission(PermissionState)
  fullName: System.Configuration.ConfigurationPermission.ConfigurationPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Configuration.ConfigurationPermission.Copy
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: Copy()
  nameWithType: ConfigurationPermission.Copy()
  fullName: System.Configuration.ConfigurationPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: ConfigurationPermission.FromXml(SecurityElement)
  fullName: System.Configuration.ConfigurationPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: ConfigurationPermission.Intersect(IPermission)
  fullName: System.Configuration.ConfigurationPermission.Intersect(IPermission)
- uid: System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: ConfigurationPermission.IsSubsetOf(IPermission)
  fullName: System.Configuration.ConfigurationPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.ConfigurationPermission.IsUnrestricted
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: ConfigurationPermission.IsUnrestricted()
  fullName: System.Configuration.ConfigurationPermission.IsUnrestricted()
- uid: System.Configuration.ConfigurationPermission.ToXml
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: ToXml()
  nameWithType: ConfigurationPermission.ToXml()
  fullName: System.Configuration.ConfigurationPermission.ToXml()
- uid: System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: ConfigurationPermission.Union(IPermission)
  fullName: System.Configuration.ConfigurationPermission.Union(IPermission)
- uid: System.Configuration.ConfigurationPermission.#ctor*
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: ConfigurationPermission
  nameWithType: ConfigurationPermission.ConfigurationPermission
- uid: System.Configuration.ConfigurationPermission.Copy*
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: Copy
  nameWithType: ConfigurationPermission.Copy
- uid: System.Configuration.ConfigurationPermission.FromXml*
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: FromXml
  nameWithType: ConfigurationPermission.FromXml
- uid: System.Configuration.ConfigurationPermission.Intersect*
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: Intersect
  nameWithType: ConfigurationPermission.Intersect
- uid: System.Configuration.ConfigurationPermission.IsSubsetOf*
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: ConfigurationPermission.IsSubsetOf
- uid: System.Configuration.ConfigurationPermission.IsUnrestricted*
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: ConfigurationPermission.IsUnrestricted
- uid: System.Configuration.ConfigurationPermission.ToXml*
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: ToXml
  nameWithType: ConfigurationPermission.ToXml
- uid: System.Configuration.ConfigurationPermission.Union*
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: Union
  nameWithType: ConfigurationPermission.Union
