### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.SendMailErrorEventHandler
  id: SendMailErrorEventHandler
  langs:
  - csharp
  name: SendMailErrorEventHandler
  nameWithType: SendMailErrorEventHandler
  fullName: System.Web.UI.WebControls.SendMailErrorEventHandler
  type: Delegate
  summary: "처리 하는 메서드를 나타냅니다는 <xref uid=&quot;langword_csharp_SendMailError&quot; name=&quot;SendMailError&quot; href=&quot;&quot;> </xref> 와 같은 컨트롤의 이벤트는 <xref href=&quot;System.Web.UI.WebControls.ChangePassword&quot;> </xref> 컨트롤은 <xref href=&quot;System.Web.UI.WebControls.CreateUserWizard&quot;> </xref> 컨트롤 및 <xref href=&quot;System.Web.UI.WebControls.PasswordRecovery&quot;> </xref> 제어 합니다."
  remarks: "SendMailErrorEventHandler 대리자를 만들 때 이벤트를 처리 하는 메서드를 식별 합니다. 이벤트를 이벤트 처리기를 연결 하려면 대리자의 인스턴스 이벤트에 추가 합니다. 이벤트의 대리자를 제거 하지 않으면 이벤트가 발생할 때마다 이벤트 처리기가 호출 됩니다. 이벤트 처리기 대리자에 대 한 자세한 내용은 참조 [ASP.NET Web Forms 페이지에서 서버 이벤트 처리](~/add/includes/ajax-current-ext-md.md)합니다.       처리는 `SendMailError` 이벤트에는 전자 메일 메시지를 보내려고 할 때 예외가 발생 하는 경우에 실행을 계속 하려면 웹 응용 프로그램 수입니다. 예를 들어,이 여러 단계로 구성 마법사를 통해 사용자가 작업 하는 동안 예외가 발생 하는 경우에 유용 합니다. 오류를 기록 하 고, 사용자에 게 정보 메시지가 표시, 사용자가 응용 프로그램을 종료 하지 않고 마법사를 완료 하도록 허용 하는 것이 좋습니다.       에 대 한 이벤트 처리기를 만들지 않으면는 <xref:System.Web.UI.WebControls.ChangePassword.SendMailError>이벤트를 저장 하지만 이벤트 처리기를 만드는 경우 또는 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>속성이로 설정 `false`, 웹 응용 프로그램의 전자 메일 메시지를 보낼 때 오류가 발생 하면 실행이 중지 됩니다 및 ASP.NET에는 오류 메시지가 표시 됩니다.</xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> </xref:System.Web.UI.WebControls.ChangePassword.SendMailError>       <xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A>메서드는 SendMailErrorEventHandler 대신 이벤트를 처리 하려면 파생된 클래스를 수도 있습니다.</xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A> 이 <xref:System.Web.UI.WebControls.ChangePassword>나 <xref:System.Web.UI.WebControls.CreateUserWizard>.</xref:System.Web.UI.WebControls.CreateUserWizard> </xref:System.Web.UI.WebControls.ChangePassword> 에서 파생 된 클래스에서 이벤트를 처리 하기 위한 기본 방법       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [ASP.NET Web Forms 페이지에서 서버 이벤트 처리](../Topic/Server%20Event%20Handling%20in%20ASP.NET%20Web%20Forms%20Pages.md)합니다."
  example:
  - "The following code example demonstrates an ASP.NET page that uses a <xref:System.Web.UI.WebControls.ChangePassword> Web control, and includes an event handler for the <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> event named `SendMailError`. The code example assumes that the ASP.NET Web site has been configured to use ASP.NET membership and Forms authentication, and that a user has been created whose name and password are known to you. For more information, see [How to: Implement Simple Forms Authentication](~/add/includes/ajax-current-ext-md.md).  \n  \n If the password change succeeds, the code attempts to use SMTP to send an e-mail message to the user to confirm the change. This is done in the `SendingMail` event handler. For information about how to configure an SMTP server, see [NIB: How to: Install and Configure SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8). For the purposes of this example, it is not necessary to configure an SMTP server; the example is constructed to test for a failure to send an e-mail message.  \n  \n If a mail server is not configured correctly or some other error occurs and the e-mail message cannot be sent, the `SendMailError` function is called. A message is displayed to the user. In addition, an event is logged to the Windows Application event log with the assumption that an event source named MySamplesSite already exists. See the code example below to create the specified event source. For more information about creating an event source, see [Server Event Handling in ASP.NET Web Forms Pages](../Topic/Server%20Event%20Handling%20in%20ASP.NET%20Web%20Forms%20Pages.md). The <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object is set to `true` to indicate that the error has been handled.  \n  \n [!code-cs[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_389_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_389_1.aspx)]  \n  \n Use the following code example if you need to programmatically add the event source named MySamplesSite to your Application log. This event source must exist in order for the first code example to work correctly. The following code example requires Administrator privileges.  \n  \n [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_389_2.vb)]\n [!code-cs[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_389_2.cs)]"
  syntax:
    content: public delegate void SendMailErrorEventHandler(object sender, SendMailErrorEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
