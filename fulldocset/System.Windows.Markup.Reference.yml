### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.Reference
  id: Reference
  children:
  - System.Windows.Markup.Reference.#ctor
  - System.Windows.Markup.Reference.#ctor(System.String)
  - System.Windows.Markup.Reference.Name
  - System.Windows.Markup.Reference.ProvideValue(System.IServiceProvider)
  langs:
  - csharp
  name: Reference
  nameWithType: Reference
  fullName: System.Windows.Markup.Reference
  type: Class
  summary: "구현 된 `{x:Reference}` 태그 확장 합니다."
  remarks: "`{x:Reference}` 태그 확장 지원 (에 하나의 매개 변수만) 위치 사용 및 명명 된 인수 사용 (명명 된 인수와 함께 `name`).       `{x:Reference}` 태그 확장은 개체 그래프에 다른 명명 된 개체를 참조 하는 데 사용 됩니다. 이 시나리오에서는 개체 by 이름 처음 특정 구현에 다른 <xref:System.Windows.Markup.RuntimeNamePropertyAttribute>.</xref:System.Windows.Markup.RuntimeNamePropertyAttribute> 정의 하는 경우가 있지만 자세한 내용은 참조 [X:reference 태그 확장](~/add/includes/ajax-current-ext-md.md)합니다.       태그 확장에 대 한 자세한 내용은 참조 [형식 변환기 및 XAML 태그 확장명](~/add/includes/ajax-current-ext-md.md)합니다.       System.Xaml 어셈블리 사용 하 여 <xref:System.Windows.Markup.XmlnsDefinitionAttribute>XAML 언어 XAML 네임 스페이스에는 어셈블리의 모든 형식에 매핑할 ([!INCLUDE[TLA#tla_xamlxmlnsv1](~/add/includes/tlasharptla-xamlxmlnsv1-md.md)]).</xref:System.Windows.Markup.XmlnsDefinitionAttribute> 에 대 한 접두사를 선언 하는 일반적으로 [!INCLUDE[TLA#tla_xamlxmlnsv1](~/add/includes/tlasharptla-xamlxmlnsv1-md.md)] 루트 요소 매핑을 사용 하 여 접두사 `x`합니다.      <a name=&quot;xamlTextUsage_Reference&quot;></a># # XAML 텍스트 사용"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Name")]

      public class Reference : System.Windows.Markup.MarkupExtension
  inheritance:
  - System.Windows.Markup.MarkupExtension
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Markup.Reference.#ctor
  id: '#ctor'
  parent: System.Windows.Markup.Reference
  langs:
  - csharp
  name: Reference()
  nameWithType: Reference.Reference()
  fullName: System.Windows.Markup.Reference.Reference()
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Markup.Reference&quot;> </xref> 클래스입니다."
  syntax:
    content: public Reference ();
    parameters: []
  overload: System.Windows.Markup.Reference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.Reference.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Windows.Markup.Reference
  langs:
  - csharp
  name: Reference(String)
  nameWithType: Reference.Reference(String)
  fullName: System.Windows.Markup.Reference.Reference(String)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Markup.Reference&quot;> </xref> 클래스와 <code> name </code> 인수입니다."
  syntax:
    content: public Reference (string name);
    parameters:
    - id: name
      type: System.String
      description: "참조할 요소의의 XAML 이름입니다."
  overload: System.Windows.Markup.Reference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.Reference.Name
  id: Name
  parent: System.Windows.Markup.Reference
  langs:
  - csharp
  name: Name
  nameWithType: Reference.Name
  fullName: System.Windows.Markup.Reference.Name
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: "XAML 이름에 대 한 참조를 가져올 수를 가져오거나 설정 합니다."
  remarks: "<a name=&quot;xamlTextUsage_Name&quot;></a># # XAML 텍스트 사용"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "XAML 이름에 대 한 참조를 얻으려고 요소입니다."
  overload: System.Windows.Markup.Reference.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.Reference.ProvideValue(System.IServiceProvider)
  id: ProvideValue(System.IServiceProvider)
  parent: System.Windows.Markup.Reference
  langs:
  - csharp
  name: ProvideValue(IServiceProvider)
  nameWithType: Reference.ProvideValue(IServiceProvider)
  fullName: System.Windows.Markup.Reference.ProvideValue(IServiceProvider)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: "대상 속성의 값이 있는 개체를 반환 합니다. 에 대 한는 <xref href=&quot;System.Windows.Markup.Reference&quot;> </xref> 형식 하는 개체는 제공 된 <xref:System.Windows.Markup.Reference.Name*>참조.</xref:System.Windows.Markup.Reference.Name*>"
  remarks: "이 메서드에서 예상는 `serviceProvider` 구현 하는 값은 <xref:System.Xaml.IXamlNameResolver>서비스.</xref:System.Xaml.IXamlNameResolver>"
  syntax:
    content: public override object ProvideValue (IServiceProvider serviceProvider);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "구현 하는 클래스는 <xref href=&quot;System.Xaml.IXamlNameResolver&quot;> </xref> 서비스입니다."
    return:
      type: System.Object
      description: "대상 속성의 값입니다. 이 관련 백업 어셈블리에서 형식 매핑된 있는 모든 개체 일 수 있습니다."
  overload: System.Windows.Markup.Reference.ProvideValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>serviceProvider</code>값은 구현 하지 않습니다는 <xref href=&quot;System.Xaml.IXamlNameResolver&quot;> </xref> 서비스입니다.       -또는- <xref:System.Windows.Markup.Reference.Name*> 값 생성 또는 위치 사용을 통해 설정 되지 않았습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceProvider</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Windows.Markup.MarkupExtension
  isExternal: false
  name: System.Windows.Markup.MarkupExtension
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Markup.Reference.#ctor
  parent: System.Windows.Markup.Reference
  isExternal: false
  name: Reference()
  nameWithType: Reference.Reference()
  fullName: System.Windows.Markup.Reference.Reference()
- uid: System.Windows.Markup.Reference.#ctor(System.String)
  parent: System.Windows.Markup.Reference
  isExternal: false
  name: Reference(String)
  nameWithType: Reference.Reference(String)
  fullName: System.Windows.Markup.Reference.Reference(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Markup.Reference.Name
  parent: System.Windows.Markup.Reference
  isExternal: false
  name: Name
  nameWithType: Reference.Name
  fullName: System.Windows.Markup.Reference.Name
- uid: System.Windows.Markup.Reference.ProvideValue(System.IServiceProvider)
  parent: System.Windows.Markup.Reference
  isExternal: false
  name: ProvideValue(IServiceProvider)
  nameWithType: Reference.ProvideValue(IServiceProvider)
  fullName: System.Windows.Markup.Reference.ProvideValue(IServiceProvider)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Windows.Markup.Reference.#ctor*
  parent: System.Windows.Markup.Reference
  isExternal: false
  name: Reference
  nameWithType: Reference.Reference
- uid: System.Windows.Markup.Reference.Name*
  parent: System.Windows.Markup.Reference
  isExternal: false
  name: Name
  nameWithType: Reference.Name
- uid: System.Windows.Markup.Reference.ProvideValue*
  parent: System.Windows.Markup.Reference
  isExternal: false
  name: ProvideValue
  nameWithType: Reference.ProvideValue
