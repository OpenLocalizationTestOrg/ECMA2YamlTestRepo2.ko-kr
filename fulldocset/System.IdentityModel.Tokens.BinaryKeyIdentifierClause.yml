### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  id: BinaryKeyIdentifierClause
  children:
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  langs:
  - csharp
  name: BinaryKeyIdentifierClause
  nameWithType: BinaryKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  type: Class
  summary: "이진 데이터를 기반으로 하는 키 식별자 절에 대 한 기본 클래스를 나타냅니다."
  remarks: "일반적으로 BinaryKeyIdentifierClause 이외로 사용, 사용자 지정 보안 토큰 서비스를 만들 때 필요가 없습니다. 보안 토큰 서비스에서 보안 토큰을 반환할 때 발급 된 보안 토큰 연결 되 고 연결 되지 않은 보안 토큰에 대 한 참조를 포함 합니다. 연결 된 참조는 SOAP 메시지의 보안 헤더에 포함 된 보안 토큰을 연결 되지 않은 참조는 SOAP 메시지의 보안 헤더에 포함 되지 않은 보안 토큰입니다. 일반적으로 이러한 참조는 발급 된 보안 토큰의 신뢰성을 확인 합니다."
  syntax:
    content: 'public abstract class BinaryKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)
  id: '#ctor(System.String,System.Byte[],System.Boolean)'
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: BinaryKeyIdentifierClause(String,Byte[],Boolean)
  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.BinaryKeyIdentifierClause&quot;> </xref> 클래스 지정 된 키 식별자 절 형식, 이진 데이터 및 이진 데이터가 복제 되어야 하는지 여부를 나타내는 값을 사용 합니다."
  syntax:
    content: protected BinaryKeyIdentifierClause (string clauseType, byte[] identificationData, bool cloneBuffer);
    parameters:
    - id: clauseType
      type: System.String
      description: "키 식별자 절 형식입니다. 값을 설정 하는 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*>속성.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*>"
    - id: identificationData
      type: System.Byte[]
      description: "배열을 <xref:System.Byte>키 식별자를 나타내는 이진 데이터가 들어 있는.</xref:System.Byte>"
    - id: cloneBuffer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>로 전달 된 배열을 복제 하려면는 `identificationData` 매개 변수, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identificationData</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>identificationData</code>길이가&0;입니다."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)
  id: '#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)'
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.BinaryKeyIdentifierClause&quot;> </xref> 클래스 지정 된 키 식별자 절 형식, 이진 데이터, 이진 데이터가 복제 되어야 하는지 여부, nonce 및 키 길이 나타내는 값을 사용 합니다."
  remarks: "경우는 `derivationNonce` 및 `derivationLength` 토큰의 직접 보안 키 대신 유추 된 파생된 키가 사용, 매개 변수를 지정 합니다.       로 전달 된 값에 관계 없이 `cloneBuffer` 매개 변수는 <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A>메서드는 항상에 전달 된 배열의 복제본을 반환는 `identificationData` 매개 변수.</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A>"
  syntax:
    content: protected BinaryKeyIdentifierClause (string clauseType, byte[] identificationData, bool cloneBuffer, byte[] derivationNonce, int derivationLength);
    parameters:
    - id: clauseType
      type: System.String
      description: "키 식별자 절 형식입니다. 값을 설정 하는 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*>속성.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*>"
    - id: identificationData
      type: System.Byte[]
      description: "배열을 <xref:System.Byte>키 식별자를 나타내는 이진 데이터가 들어 있는.</xref:System.Byte> 반환 되는 이진 데이터는 <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>메서드.</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>"
    - id: cloneBuffer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>로 전달 된 배열을 복제 하려면는 `identificationData` 매개 변수, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: derivationNonce
      type: System.Byte[]
      description: "배열을 <xref:System.Byte>파생된 키를 만드는 데 사용 된 nonce를 포함 하는.</xref:System.Byte> 반환 되는 값을 설정 하는 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*>메서드.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*>"
    - id: derivationLength
      type: System.Int32
      description: "파생된 키의 크기입니다. 값을 설정 하는 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*>속성.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identificationData</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>identificationData</code>길이가&0;입니다."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  id: GetBuffer
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: GetBuffer()
  nameWithType: BinaryKeyIdentifierClause.GetBuffer()
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "키 식별자를 나타내는 이진 데이터를 가져옵니다."
  remarks: "생성자에 전달 된 값에 관계 없이 `cloneBuffer` 매개 변수를 GetBuffer 메서드를 생성자에 전달 된 배열의 복제본을 항상 반환 `identificationData` 매개 변수입니다."
  syntax:
    content: public byte[] GetBuffer ();
    parameters: []
    return:
      type: System.Byte[]
      description: "배열을 <xref:System.Byte>키 식별자를 나타내는 이진 데이터가 들어 있는.</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  id: GetRawBuffer
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: GetRawBuffer()
  nameWithType: BinaryKeyIdentifierClause.GetRawBuffer()
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "키 식별자를 나타내는 이진 데이터를 가져옵니다."
  remarks: "GetRawBuffer 메서드에 의해 반환 된 배열에는 생성자의 복제본 `identificationData` 에 전달 되는 값 매개 변수는 `cloneBuffer` 은 `true`; 그렇지 않으면 동일한 배열입니다.       <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A>메서드를 생성자에 전달 된 배열의 복제본을 항상 반환 `identificationData` 매개 변수.</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A>"
  syntax:
    content: protected byte[] GetRawBuffer ();
    parameters: []
    return:
      type: System.Byte[]
      description: "배열을 <xref:System.Byte>키 식별자를 나타내는 이진 데이터가 들어 있는.</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  id: Matches(System.Byte[])
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: Matches(Byte[])
  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[])
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(Byte[])
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "현재 인스턴스에 대 한 이진 데이터에 지정된 된 이진 데이터와 일치 하는지 여부를 나타내는 값을 반환 합니다."
  syntax:
    content: public bool Matches (byte[] data);
    parameters:
    - id: data
      type: System.Byte[]
      description: "배열을 <xref:System.Byte>비교할.</xref:System.Byte>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <code> data  </code>에서 반환 된 이진 데이터와 동일는 <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>메서드, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "이 인스턴스에 대 한 키 식별자가 지정 된 키 식별자 절과 동일한 지 여부를 나타내는 값을 반환 합니다."
  syntax:
    content: public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> 와 비교할 수 있습니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <code> keyIdentifierClause </code> 유형의 <xref href=&quot;System.IdentityModel.Tokens.BinaryKeyIdentifierClause&quot;> </xref> 및에서 반환 된 이진 데이터는 <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>에 대 한 동일는 <code> keyIdentifierClause </code> 매개 변수와 현재 인스턴스에; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  id: Matches(System.Byte[],System.Int32)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: Matches(Byte[],Int32)
  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[],Int32)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(Byte[],Int32)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "현재 인스턴스에 대 한 이진 데이터와 같은지 여부 지정된 된 오프셋에 지정된 된 이진 데이터를 나타내는 값을 반환 합니다."
  syntax:
    content: public bool Matches (byte[] data, int offset);
    parameters:
    - id: data
      type: System.Byte[]
      description: "배열을 <xref:System.Byte>비교할.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "비교가 시작 되는 배열의 인덱스입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우에 있는 이진 데이터는 <code> data  </code>에 지정 된 인덱스에서 시작 하는 매개 변수는 <code> offset </code> 매개 변수에서 반환 된 이진 데이터는는 <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>메서드 (인덱스&0;부터 시작)입니다; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: BinaryKeyIdentifierClause(String,Byte[],Boolean)
  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: GetBuffer()
  nameWithType: BinaryKeyIdentifierClause.GetBuffer()
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer()
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: GetRawBuffer()
  nameWithType: BinaryKeyIdentifierClause.GetRawBuffer()
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer()
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: Matches(Byte[])
  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[])
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(Byte[])
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: Matches(Byte[],Int32)
  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[],Int32)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(Byte[],Int32)
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor*
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: BinaryKeyIdentifierClause
  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: GetBuffer
  nameWithType: BinaryKeyIdentifierClause.GetBuffer
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer*
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: GetRawBuffer
  nameWithType: BinaryKeyIdentifierClause.GetRawBuffer
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: Matches
  nameWithType: BinaryKeyIdentifierClause.Matches
