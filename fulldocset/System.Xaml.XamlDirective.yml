### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlDirective
  id: XamlDirective
  children:
  - System.Xaml.XamlDirective.#ctor(System.String,System.String)
  - System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)
  - System.Xaml.XamlDirective.AllowedLocation
  - System.Xaml.XamlDirective.GetHashCode
  - System.Xaml.XamlDirective.GetXamlNamespaces
  - System.Xaml.XamlDirective.LookupCustomAttributeProvider
  - System.Xaml.XamlDirective.LookupDeferringLoader
  - System.Xaml.XamlDirective.LookupDependsOn
  - System.Xaml.XamlDirective.LookupInvoker
  - System.Xaml.XamlDirective.LookupIsAmbient
  - System.Xaml.XamlDirective.LookupIsEvent
  - System.Xaml.XamlDirective.LookupIsReadOnly
  - System.Xaml.XamlDirective.LookupIsReadPublic
  - System.Xaml.XamlDirective.LookupIsUnknown
  - System.Xaml.XamlDirective.LookupIsWriteOnly
  - System.Xaml.XamlDirective.LookupIsWritePublic
  - System.Xaml.XamlDirective.LookupTargetType
  - System.Xaml.XamlDirective.LookupType
  - System.Xaml.XamlDirective.LookupTypeConverter
  - System.Xaml.XamlDirective.LookupUnderlyingGetter
  - System.Xaml.XamlDirective.LookupUnderlyingMember
  - System.Xaml.XamlDirective.LookupUnderlyingSetter
  - System.Xaml.XamlDirective.ToString
  langs:
  - csharp
  name: XamlDirective
  nameWithType: XamlDirective
  fullName: System.Xaml.XamlDirective
  type: Class
  summary: "XAML 지시문의 멤버 이기도 한 경우에 멤버에 대 한 XAML 형식 시스템 식별자를 제공 합니다. XAML 판독기 및 XAML 작성기 멤버 노드를 처리 하는 동안 XamlDirective 식별자를 사용합니다. XAML 판독기가 때 식별자를 사용는 <xref href=&quot;System.Xaml.XamlNodeType&quot;> </xref> 및 <xref:System.Xaml.XamlMember.IsDirective*>은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Xaml.XamlMember.IsDirective*>"
  remarks: "XamlDirective 멤버인 XAML 지시문 때 XAML 형식 시스템에 대 한 예상 값을 제공 합니다. 정의 XAML 지시문의 하위 집합에 대 한 동일한 결과 반환 하는 특성에는 <xref:System.Xaml.XamlMember>모든 가능한 XAML 지시문에 대 한 속성과 동일한 XAML 형식 시스템 정보가 보고 됩니다.</xref:System.Xaml.XamlMember> 내부 동작을 통해 또는의 재정의 통해 수행 됩니다 지시문에만 적용 되는 XAML 형식 시스템 특성의 보고 <xref:System.Xaml.XamlMember> `Lookup*` XamlDirective 클래스의 가상 멤버</xref:System.Xaml.XamlMember>       다음 목록에 대 한 XAML 지시문의 반환 된 결과 보여 줍니다. <xref:System.Xaml.XamlMember>멤버 XamlDirective 실제로가 하는 경우:- <xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A>항상 `null`.</xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A> </xref:System.Xaml.XamlMember>      - <xref:System.Xaml.XamlMember.DeferringLoader%2A>항상 `null`.</xref:System.Xaml.XamlMember.DeferringLoader%2A>      - <xref:System.Xaml.XamlMember.DependsOn%2A>항상 `null`.</xref:System.Xaml.XamlMember.DependsOn%2A>      - <xref:System.Xaml.XamlMember.IsAmbient%2A>항상 `false`.</xref:System.Xaml.XamlMember.IsAmbient%2A>      - <xref:System.Xaml.XamlMember.IsAttachable%2A>항상 `false`.</xref:System.Xaml.XamlMember.IsAttachable%2A>      - <xref:System.Xaml.XamlMember.IsDirective%2A>항상 `true`.</xref:System.Xaml.XamlMember.IsDirective%2A>      - <xref:System.Xaml.XamlMember.IsEvent%2A>항상 `false`.</xref:System.Xaml.XamlMember.IsEvent%2A>      - <xref:System.Xaml.XamlMember.IsReadOnly%2A>항상 `false`.</xref:System.Xaml.XamlMember.IsReadOnly%2A>      - <xref:System.Xaml.XamlMember.IsReadPublic%2A>항상 `true`.</xref:System.Xaml.XamlMember.IsReadPublic%2A>      - <xref:System.Xaml.XamlMember.IsWritePublic%2A>항상 `true`.</xref:System.Xaml.XamlMember.IsWritePublic%2A>       에 대 한 내부 지원은 또한 <xref:System.Xaml.XamlMember.DeclaringType%2A>설정 되지 않은 상태를 유지 하 고 반환 `null`.</xref:System.Xaml.XamlMember.DeclaringType%2A>      > [!IMPORTANT] > XamlDirective은는 <xref:System.Xaml.XamlMember>하위 클래스입니다.</xref:System.Xaml.XamlMember> 와 마찬가지로 <xref:System.Xaml.XamlMember>, XamlDirective가 XAML 형식 시스템 액세스를 보고 하는 방법에 대 한 보안 고려 사항.</xref:System.Xaml.XamlMember> <xref:System.Xaml.XamlMember>.</xref:System.Xaml.XamlMember> 설명 부분을 참조 하십시오."
  syntax:
    content: 'public class XamlDirective : System.Xaml.XamlMember'
  inheritance:
  - System.Object
  - System.Xaml.XamlMember
  implements: []
  inheritedMembers:
  - System.Xaml.XamlMember.DeclaringType
  - System.Xaml.XamlMember.DeferringLoader
  - System.Xaml.XamlMember.DependsOn
  - System.Xaml.XamlMember.Equals(System.Object)
  - System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)
  - System.Xaml.XamlMember.Invoker
  - System.Xaml.XamlMember.IsAmbient
  - System.Xaml.XamlMember.IsAttachable
  - System.Xaml.XamlMember.IsDirective
  - System.Xaml.XamlMember.IsEvent
  - System.Xaml.XamlMember.IsNameValid
  - System.Xaml.XamlMember.IsReadOnly
  - System.Xaml.XamlMember.IsReadPublic
  - System.Xaml.XamlMember.IsUnknown
  - System.Xaml.XamlMember.IsWriteOnly
  - System.Xaml.XamlMember.IsWritePublic
  - System.Xaml.XamlMember.LookupValueSerializer
  - System.Xaml.XamlMember.Name
  - System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  - System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  - System.Xaml.XamlMember.PreferredXamlNamespace
  - System.Xaml.XamlMember.SerializationVisibility
  - System.Xaml.XamlMember.TargetType
  - System.Xaml.XamlMember.Type
  - System.Xaml.XamlMember.TypeConverter
  - System.Xaml.XamlMember.UnderlyingMember
  - System.Xaml.XamlMember.ValueSerializer
  platform:
  - net462
- uid: System.Xaml.XamlDirective.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: XamlDirective(String,String)
  nameWithType: XamlDirective.XamlDirective(String,String)
  fullName: System.Xaml.XamlDirective.XamlDirective(String,String)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 이름과 하나의 XAML 네임 스페이스에 대 한 값을 지정 하는 클래스입니다. 이 서명을 하려는 경우에 사용 하 여 <xref:System.Xaml.XamlMember.IsUnknown*>보고할 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 지시문에 대 한.</xref:System.Xaml.XamlMember.IsUnknown*>"
  remarks: "> [!IMPORTANT]> 생성자의이 시그니처에이 지시문에 대 한 식별자는 항상 생성 여기서 <xref:System.Xaml.XamlMember.IsUnknown%2A>보고서 `true` XAML에 대 한 형식 시스템.</xref:System.Xaml.XamlMember.IsUnknown%2A> 필요한 정보를 사용할 수 있는 경우 (지원 형식 및 변환에 대 한 텍스트 구문 정보 항목) 지시문을 사용 하 여 적용할 수 있는 식별자 중이 고는 <xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=fullName>생성자 서명을 대신.</xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=fullName>       이 서명을 사용 하는 경우는 <xref:System.Xaml.XamlDirective.AllowedLocation%2A>값은 인스턴스가 <xref:System.Xaml.Schema.AllowedMemberLocations>; 및 <xref:System.Xaml.XamlMember.Type%2A>값 및 <xref:System.Xaml.XamlMember.TypeConverter%2A>값은 모두 `null`.</xref:System.Xaml.XamlMember.TypeConverter%2A> </xref:System.Xaml.XamlMember.Type%2A> </xref:System.Xaml.Schema.AllowedMemberLocations> </xref:System.Xaml.XamlDirective.AllowedLocation%2A>"
  syntax:
    content: public XamlDirective (string xamlNamespace, string name);
    parameters:
    - id: xamlNamespace
      type: System.String
      description: "기본 XAML 네임 스페이스를이 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 존재할 수 있습니다."
    - id: name
      type: System.String
      description: "식별 하는 이름을 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>합니다."
  overload: System.Xaml.XamlDirective.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)'
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: XamlDirective(IEnumerable<String>,String,XamlType,XamlValueConverter<TypeConverter>,AllowedMemberLocations)
  nameWithType: XamlDirective.XamlDirective(IEnumerable<String>,String,XamlType,XamlValueConverter<TypeConverter>,AllowedMemberLocations)
  fullName: System.Xaml.XamlDirective.XamlDirective(IEnumerable<String>,String,XamlType,XamlValueConverter<TypeConverter>,AllowedMemberLocations)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 클래스의 각 사례 값에 대 한 값을 지정 하는 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>합니다."
  remarks: "생성 하려면이 생성자를 사용 해야 합니다는 <xref:System.Xaml.XamlDirective>보고 하지 않는 <xref:System.Xaml.XamlMember.IsUnknown%2A>으로 `true`.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlDirective>"
  syntax:
    content: public XamlDirective (System.Collections.Generic.IEnumerable<string> xamlNamespaces, string name, System.Xaml.XamlType xamlType, System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> typeConverter, System.Xaml.Schema.AllowedMemberLocations allowedLocation);
    parameters:
    - id: xamlNamespaces
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "XAML 네임 스페이스 집합을 여기서이 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 식별자 문자열의 열거 가능한 집합 변수로 전달 된 존재할 수 있습니다."
    - id: name
      type: System.String
      description: "식별 하는 이름을 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>합니다."
    - id: xamlType
      type: System.Xaml.XamlType
      description: "백업 하는 XAML 형식은 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>합니다."
    - id: typeConverter
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "형식 변환기가 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 텍스트 구문 변환에 사용 합니다."
    - id: allowedLocation
      type: System.Xaml.Schema.AllowedMemberLocations
      description: "값은 <xref href=&quot;System.Xaml.Schema.AllowedMemberLocations&quot;> </xref> 열거 합니다."
  overload: System.Xaml.XamlDirective.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>xamlType</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlDirective.AllowedLocation
  id: AllowedLocation
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: AllowedLocation
  nameWithType: XamlDirective.AllowedLocation
  fullName: System.Xaml.XamlDirective.AllowedLocation
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "지시문을 지정할 수 있습니다 XAML 노드 형식을 지정 하는 값을 가져옵니다."
  remarks: "이 값을 설정할 수는 <xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29>있는 생성자 시그니처의.</xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29> <xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29>생성자 시그니처를 인스턴스에 대 한 AllowedLocation 값은 <xref:System.Xaml.Schema.AllowedMemberLocations>.</xref:System.Xaml.Schema.AllowedMemberLocations> </xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29> 사용 하 여 생성 하는 경우 하지만 인스턴스가 보고 항상 <xref:System.Xaml.XamlMember.IsUnknown%2A>으로 `true`.</xref:System.Xaml.XamlMember.IsUnknown%2A> 이 동작은 일반적으로 영향을 주며 개체 그래프를 다른 실제적의 영향을 미칩니다를 작성 하는 <xref:System.Xaml.XamlMember>값.</xref:System.Xaml.XamlMember>       일반적으로 하지 구성 합니다. XAML 지시문 AllowedLocation <xref:System.Xaml.Schema.AllowedMemberLocations?displayProperty=fullName>.</xref:System.Xaml.Schema.AllowedMemberLocations?displayProperty=fullName> 인 경우"
  syntax:
    content: public System.Xaml.Schema.AllowedMemberLocations AllowedLocation { get; }
    return:
      type: System.Xaml.Schema.AllowedMemberLocations
      description: "열거형의 값입니다. 기본값은 열거형 기본값 즉 <xref href=&quot;System.Xaml.Schema.AllowedMemberLocations&quot;> </xref>합니다."
  overload: System.Xaml.XamlDirective.AllowedLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.GetHashCode
  id: GetHashCode
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: XamlDirective.GetHashCode()
  fullName: System.Xaml.XamlDirective.GetHashCode()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "이 개체에 대 한 해시 코드를 반환합니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "정수 해시 코드입니다."
  overload: System.Xaml.XamlDirective.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.GetXamlNamespaces
  id: GetXamlNamespaces
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: GetXamlNamespaces()
  nameWithType: XamlDirective.GetXamlNamespaces()
  fullName: System.Xaml.XamlDirective.GetXamlNamespaces()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "이 XAML 멤버가 있을 수 있는 XAML 네임 스페이스 목록을 반환 합니다."
  remarks: "XAML 네임 스페이스 식별자는 일반적으로 XAML 및 XML 네임 스페이스에 대 한 일반적인 규칙에 따라 식별자 URI (Uniform Resource) 문자열 형태로 표시 되는 문자열입니다. 목록에 둘 이상의 항목이 있으면 첫 번째 항목 집합에는 일반적으로 처리를 위해 관련 기본 XAML 네임 스페이스 및 다른 항목은 대체 합니다. <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=fullName>이 순서에 의존합니다.</xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=fullName>"
  syntax:
    content: public override System.Collections.Generic.IList<string> GetXamlNamespaces ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "목록 문자열로 XAML 네임 스페이스 식별자입니다."
  overload: System.Xaml.XamlDirective.GetXamlNamespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupCustomAttributeProvider
  id: LookupCustomAttributeProvider
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupCustomAttributeProvider()
  nameWithType: XamlDirective.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlDirective.LookupCustomAttributeProvider()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "반환 된 <xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref> 구현 합니다. 이 구현은 항상 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "XAML 지시문에서 사용자 지정 특성을 가질 수 있으므로이 구현은 항상 `null`합니다. <xref:System.Xaml.XamlDirective>이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective>형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();
    parameters: []
    return:
      type: System.Reflection.ICustomAttributeProvider
      description: "항상 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xaml.XamlDirective.LookupCustomAttributeProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupDeferringLoader
  id: LookupDeferringLoader
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupDeferringLoader()
  nameWithType: XamlDirective.LookupDeferringLoader()
  fullName: System.Xaml.XamlDirective.LookupDeferringLoader()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "반환 된 &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; XAML 선언 된 개체의 지연 된 로드 시 사용 되는 개체입니다. 이 구현은 항상 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "지시문은 지연 된 로드를 가질 수 없는이 구현은 항상 `null`합니다. <xref:System.Xaml.XamlDirective>이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective>형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> LookupDeferringLoader ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
      description: "항상 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xaml.XamlDirective.LookupDeferringLoader*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupDependsOn
  id: LookupDependsOn
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupDependsOn()
  nameWithType: XamlDirective.LookupDependsOn()
  fullName: System.Xaml.XamlDirective.LookupDependsOn()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "목록을 반환 <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> 개체입니다. 목록 초기화 순서에 대 한 종속성 관계가를 기준으로 존재 하는 위치 하는 멤버를 보고 <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>합니다. 이 구현은 항상 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "XAML 지시문 초기화 순서를 가질 수 있으므로이 구현은 항상 `null`합니다. <xref:System.Xaml.XamlDirective>이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective>형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed System.Collections.Generic.IList<System.Xaml.XamlMember> LookupDependsOn ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlMember}
      description: "항상 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xaml.XamlDirective.LookupDependsOn*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupInvoker
  id: LookupInvoker
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupInvoker()
  nameWithType: XamlDirective.LookupInvoker()
  fullName: System.Xaml.XamlDirective.LookupInvoker()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "반환 된 <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> 와 연결 된 한 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>합니다."
  remarks: "<xref:System.Xaml.XamlMember.Invoker%2A>.</xref:System.Xaml.XamlMember.Invoker%2A> 를 호출 하 여이 메서드를 호출할 수 있습니다.       이 구현은 내부 정적 <xref:System.Xaml.Schema.XamlMemberInvoker>XAML 형식 시스템에서 지시문에만 적용 되는 값입니다.</xref:System.Xaml.Schema.XamlMemberInvoker> <xref:System.Xaml.XamlDirective>이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective>형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> 이 대 한 정보 <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>합니다."
  overload: System.Xaml.XamlDirective.LookupInvoker*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupIsAmbient
  id: LookupIsAmbient
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupIsAmbient()
  nameWithType: XamlDirective.LookupIsAmbient()
  fullName: System.Xaml.XamlDirective.LookupIsAmbient()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "반환 여부이 <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> 앰비언트 속성으로 보고 됩니다."
  remarks: "이 구현은 항상 반환 XAML 지시문은 앰비언트 형식이 될 수 없으므로 `false`합니다. <xref:System.Xaml.XamlDirective>이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective>형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed bool LookupIsAmbient ();
    parameters: []
    return:
      type: System.Boolean
      description: "항상 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xaml.XamlDirective.LookupIsAmbient*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupIsEvent
  id: LookupIsEvent
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupIsEvent()
  nameWithType: XamlDirective.LookupIsEvent()
  fullName: System.Xaml.XamlDirective.LookupIsEvent()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "반환 여부이 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 이벤트를 나타냅니다."
  remarks: "<xref:System.Xaml.XamlDirective>이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective>형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed bool LookupIsEvent ();
    parameters: []
    return:
      type: System.Boolean
      description: "항상 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xaml.XamlDirective.LookupIsEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupIsReadOnly
  id: LookupIsReadOnly
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupIsReadOnly()
  nameWithType: XamlDirective.LookupIsReadOnly()
  fullName: System.Xaml.XamlDirective.LookupIsReadOnly()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "반환 여부이 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 의도 한 읽기 전용 속성을 나타냅니다."
  remarks: "정의상 지시문을 설정할 수 있습니다. <xref:System.Xaml.XamlDirective>이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective>형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed bool LookupIsReadOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: "항상 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xaml.XamlDirective.LookupIsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupIsReadPublic
  id: LookupIsReadPublic
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupIsReadPublic()
  nameWithType: XamlDirective.LookupIsReadPublic()
  fullName: System.Xaml.XamlDirective.LookupIsReadPublic()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "반환 여부이 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 가진 공용 속성을 나타내는 <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> 접근자입니다."
  remarks: "<xref:System.Xaml.XamlDirective>이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective>형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed bool LookupIsReadPublic ();
    parameters: []
    return:
      type: System.Boolean
      description: "항상 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xaml.XamlDirective.LookupIsReadPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupIsUnknown
  id: LookupIsUnknown
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupIsUnknown()
  nameWithType: XamlDirective.LookupIsUnknown()
  fullName: System.Xaml.XamlDirective.LookupIsUnknown()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "반환 여부이 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 형식 및 멤버 확인에 사용 되는 지원 시스템에서 확인 될 수 없는 멤버를 나타냅니다."
  remarks: '<xref:System.Xaml.XamlDirective>구현만 기본를 호출 하 고 더는 아무 작업도 수행 합니다.</xref:System.Xaml.XamlDirective> 이 순서 대로 결과 반환 하는 기본 구현을: 결과; 내부 리플렉션 기반 또는 결과 <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</xref:System.Xaml.XamlMember.UnderlyingMember%2A> null 값을 확인 하는 기준으로 <xref:System.Xaml.XamlDirective>구현 하므로이 가상 멤버; 따라서 모든 <xref:System.Xaml.XamlDirective>형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</xref:System.Xaml.XamlDirective> </xref:System.Xaml.XamlDirective>'
  syntax:
    content: protected override sealed bool LookupIsUnknown ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 경우 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 가 확인할 수 없는 멤버를 나타내는, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xaml.XamlDirective.LookupIsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupIsWriteOnly
  id: LookupIsWriteOnly
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupIsWriteOnly()
  nameWithType: XamlDirective.LookupIsWriteOnly()
  fullName: System.Xaml.XamlDirective.LookupIsWriteOnly()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "반환 여부이 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 의도 한 쓰기 전용 속성을 나타냅니다."
  remarks: "<xref:System.Xaml.XamlDirective>이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective>형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed bool LookupIsWriteOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: "항상 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xaml.XamlDirective.LookupIsWriteOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupIsWritePublic
  id: LookupIsWritePublic
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupIsWritePublic()
  nameWithType: XamlDirective.LookupIsWritePublic()
  fullName: System.Xaml.XamlDirective.LookupIsWritePublic()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "반환 여부이 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 가진 공용 속성을 나타내는 <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> 접근자입니다."
  remarks: "<xref:System.Xaml.XamlDirective>이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective>형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed bool LookupIsWritePublic ();
    parameters: []
    return:
      type: System.Boolean
      description: "항상 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xaml.XamlDirective.LookupIsWritePublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupTargetType
  id: LookupTargetType
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupTargetType()
  nameWithType: XamlDirective.LookupTargetType()
  fullName: System.Xaml.XamlDirective.LookupTargetType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "반환 된 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 형식의 위치는 <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> 존재할 수 있습니다. 이 구현은 항상 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "지시문에 대 한 대상 형식이 관련이 없으므로 따라서이 구현은 항상 `null`합니다. <xref:System.Xaml.XamlDirective>이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective>형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed System.Xaml.XamlType LookupTargetType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "항상 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xaml.XamlDirective.LookupTargetType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupType
  id: LookupType
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupType()
  nameWithType: XamlDirective.LookupType()
  fullName: System.Xaml.XamlDirective.LookupType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "반환 된 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 멤버에서 사용 되는 형식입니다."
  remarks: "<xref:System.Xaml.XamlDirective>구현만 기본를 호출 하 고 더는 아무 작업도 수행 합니다.</xref:System.Xaml.XamlDirective> 내부 리플렉션 또는 null 값을 확인 하는 중 하나에 결과 반환 하는 기본 구현을 <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, 그 순서 대로 처리 합니다.</xref:System.Xaml.XamlMember.UnderlyingMember%2A> <xref:System.Xaml.XamlDirective>이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective>형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>       설명을 참조 <xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=fullName>정보에 대 한 자세한 내용은 <xref:System.Xaml.XamlMember.Type%2A>전달 합니다.</xref:System.Xaml.XamlMember.Type%2A> </xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=fullName>"
  syntax:
    content: protected override sealed System.Xaml.XamlType LookupType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "<xref href=&quot;System.Xaml.XamlType&quot;> </xref> 멤버에서 사용 되는 형식입니다."
  overload: System.Xaml.XamlDirective.LookupType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupTypeConverter
  id: LookupTypeConverter
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupTypeConverter()
  nameWithType: XamlDirective.LookupTypeConverter()
  fullName: System.Xaml.XamlDirective.LookupTypeConverter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "이 연결 되는 형식 변환기 구현이 반환 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>합니다."
  remarks: "<xref:System.Xaml.XamlDirective>구현만 기본를 호출 하 고 더는 아무 작업도 수행 합니다.</xref:System.Xaml.XamlDirective> <xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=fullName>.</xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=fullName> 를 참조 하십시오. <xref:System.Xaml.XamlDirective>이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective>형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> LookupTypeConverter ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; 있는 인스턴스에 <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> ; 제약 조건 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xaml.XamlDirective.LookupTypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupUnderlyingGetter
  id: LookupUnderlyingGetter
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupUnderlyingGetter()
  nameWithType: XamlDirective.LookupUnderlyingGetter()
  fullName: System.Xaml.XamlDirective.LookupUnderlyingGetter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "반환 된 <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> 과 관련 접근자 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>합니다. 이 구현은 항상 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "<xref:System.Xaml.XamlDirective>이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective>형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed System.Reflection.MethodInfo LookupUnderlyingGetter ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "항상 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xaml.XamlDirective.LookupUnderlyingGetter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupUnderlyingMember
  id: LookupUnderlyingMember
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupUnderlyingMember()
  nameWithType: XamlDirective.LookupUnderlyingMember()
  fullName: System.Xaml.XamlDirective.LookupUnderlyingMember()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "CLR 반사를 반환 <xref:System.Reflection.MemberInfo>이와 연결 된 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>.</xref:System.Reflection.MemberInfo> 이 구현은 항상 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "<xref:System.Xaml.XamlDirective>이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective>형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed System.Reflection.MemberInfo LookupUnderlyingMember ();
    parameters: []
    return:
      type: System.Reflection.MemberInfo
      description: "항상 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xaml.XamlDirective.LookupUnderlyingMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupUnderlyingSetter
  id: LookupUnderlyingSetter
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupUnderlyingSetter()
  nameWithType: XamlDirective.LookupUnderlyingSetter()
  fullName: System.Xaml.XamlDirective.LookupUnderlyingSetter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "반환 된 <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> 과 관련 접근자 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>합니다. 이 구현은 항상 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "<xref:System.Xaml.XamlDirective>이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective>형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed System.Reflection.MethodInfo LookupUnderlyingSetter ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "항상 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xaml.XamlDirective.LookupUnderlyingSetter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.ToString
  id: ToString
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: ToString()
  nameWithType: XamlDirective.ToString()
  fullName: System.Xaml.XamlDirective.ToString()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "이 문자열 표현을 반환 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>합니다."
  remarks: "이 구현은 <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A>및 <xref:System.Xaml.XamlMember.Name%2A>.</xref:System.Xaml.XamlMember.Name%2A> </xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> 문자열 조합을 XAML 네임 스페이스 정보를 사용할 수 있는 경우 이 구현은 <xref:System.Xaml.XamlMember.Name%2A>.</xref:System.Xaml.XamlMember.Name%2A> XAML 네임 스페이스 정보를 사용할 수 없는 경우"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "이 항목의 문자열 표현을 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>합니다."
  overload: System.Xaml.XamlDirective.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xaml.XamlMember
  isExternal: false
  name: System.Xaml.XamlMember
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xaml.XamlDirective.#ctor(System.String,System.String)
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: XamlDirective(String,String)
  nameWithType: XamlDirective.XamlDirective(String,String)
  fullName: System.Xaml.XamlDirective.XamlDirective(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: XamlDirective(IEnumerable<String>,String,XamlType,XamlValueConverter<TypeConverter>,AllowedMemberLocations)
  nameWithType: XamlDirective.XamlDirective(IEnumerable<String>,String,XamlType,XamlValueConverter<TypeConverter>,AllowedMemberLocations)
  fullName: System.Xaml.XamlDirective.XamlDirective(IEnumerable<String>,String,XamlType,XamlValueConverter<TypeConverter>,AllowedMemberLocations)
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<TypeConverter>
  nameWithType: XamlValueConverter<TypeConverter>
  fullName: System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.ComponentModel.TypeConverter>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.TypeConverter
    name: TypeConverter
    nameWithType: TypeConverter
    fullName: TypeConverter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.Schema.AllowedMemberLocations
  parent: System.Xaml.Schema
  isExternal: false
  name: AllowedMemberLocations
  nameWithType: AllowedMemberLocations
  fullName: System.Xaml.Schema.AllowedMemberLocations
- uid: System.Xaml.XamlDirective.AllowedLocation
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: AllowedLocation
  nameWithType: XamlDirective.AllowedLocation
  fullName: System.Xaml.XamlDirective.AllowedLocation
- uid: System.Xaml.XamlDirective.GetHashCode
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: GetHashCode()
  nameWithType: XamlDirective.GetHashCode()
  fullName: System.Xaml.XamlDirective.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xaml.XamlDirective.GetXamlNamespaces
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: GetXamlNamespaces()
  nameWithType: XamlDirective.GetXamlNamespaces()
  fullName: System.Xaml.XamlDirective.GetXamlNamespaces()
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlDirective.LookupCustomAttributeProvider
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupCustomAttributeProvider()
  nameWithType: XamlDirective.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlDirective.LookupCustomAttributeProvider()
- uid: System.Reflection.ICustomAttributeProvider
  parent: System.Reflection
  isExternal: false
  name: ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  fullName: System.Reflection.ICustomAttributeProvider
- uid: System.Xaml.XamlDirective.LookupDeferringLoader
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupDeferringLoader()
  nameWithType: XamlDirective.LookupDeferringLoader()
  fullName: System.Xaml.XamlDirective.LookupDeferringLoader()
- uid: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<XamlDeferringLoader>
  nameWithType: XamlValueConverter<XamlDeferringLoader>
  fullName: System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.Xaml.XamlDeferringLoader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlDeferringLoader
    name: XamlDeferringLoader
    nameWithType: XamlDeferringLoader
    fullName: XamlDeferringLoader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlDirective.LookupDependsOn
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupDependsOn()
  nameWithType: XamlDirective.LookupDependsOn()
  fullName: System.Xaml.XamlDirective.LookupDependsOn()
- uid: System.Collections.Generic.IList{System.Xaml.XamlMember}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<XamlMember>
  nameWithType: IList<XamlMember>
  fullName: System.Collections.Generic.IList<System.Xaml.XamlMember>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Xaml.XamlMember>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlMember
    name: XamlMember
    nameWithType: XamlMember
    fullName: XamlMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlDirective.LookupInvoker
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupInvoker()
  nameWithType: XamlDirective.LookupInvoker()
  fullName: System.Xaml.XamlDirective.LookupInvoker()
- uid: System.Xaml.Schema.XamlMemberInvoker
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlMemberInvoker
  nameWithType: XamlMemberInvoker
  fullName: System.Xaml.Schema.XamlMemberInvoker
- uid: System.Xaml.XamlDirective.LookupIsAmbient
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsAmbient()
  nameWithType: XamlDirective.LookupIsAmbient()
  fullName: System.Xaml.XamlDirective.LookupIsAmbient()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.XamlDirective.LookupIsEvent
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsEvent()
  nameWithType: XamlDirective.LookupIsEvent()
  fullName: System.Xaml.XamlDirective.LookupIsEvent()
- uid: System.Xaml.XamlDirective.LookupIsReadOnly
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsReadOnly()
  nameWithType: XamlDirective.LookupIsReadOnly()
  fullName: System.Xaml.XamlDirective.LookupIsReadOnly()
- uid: System.Xaml.XamlDirective.LookupIsReadPublic
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsReadPublic()
  nameWithType: XamlDirective.LookupIsReadPublic()
  fullName: System.Xaml.XamlDirective.LookupIsReadPublic()
- uid: System.Xaml.XamlDirective.LookupIsUnknown
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsUnknown()
  nameWithType: XamlDirective.LookupIsUnknown()
  fullName: System.Xaml.XamlDirective.LookupIsUnknown()
- uid: System.Xaml.XamlDirective.LookupIsWriteOnly
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsWriteOnly()
  nameWithType: XamlDirective.LookupIsWriteOnly()
  fullName: System.Xaml.XamlDirective.LookupIsWriteOnly()
- uid: System.Xaml.XamlDirective.LookupIsWritePublic
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsWritePublic()
  nameWithType: XamlDirective.LookupIsWritePublic()
  fullName: System.Xaml.XamlDirective.LookupIsWritePublic()
- uid: System.Xaml.XamlDirective.LookupTargetType
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupTargetType()
  nameWithType: XamlDirective.LookupTargetType()
  fullName: System.Xaml.XamlDirective.LookupTargetType()
- uid: System.Xaml.XamlDirective.LookupType
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupType()
  nameWithType: XamlDirective.LookupType()
  fullName: System.Xaml.XamlDirective.LookupType()
- uid: System.Xaml.XamlDirective.LookupTypeConverter
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupTypeConverter()
  nameWithType: XamlDirective.LookupTypeConverter()
  fullName: System.Xaml.XamlDirective.LookupTypeConverter()
- uid: System.Xaml.XamlDirective.LookupUnderlyingGetter
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupUnderlyingGetter()
  nameWithType: XamlDirective.LookupUnderlyingGetter()
  fullName: System.Xaml.XamlDirective.LookupUnderlyingGetter()
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Xaml.XamlDirective.LookupUnderlyingMember
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupUnderlyingMember()
  nameWithType: XamlDirective.LookupUnderlyingMember()
  fullName: System.Xaml.XamlDirective.LookupUnderlyingMember()
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Xaml.XamlDirective.LookupUnderlyingSetter
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupUnderlyingSetter()
  nameWithType: XamlDirective.LookupUnderlyingSetter()
  fullName: System.Xaml.XamlDirective.LookupUnderlyingSetter()
- uid: System.Xaml.XamlDirective.ToString
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: ToString()
  nameWithType: XamlDirective.ToString()
  fullName: System.Xaml.XamlDirective.ToString()
- uid: System.Xaml.XamlDirective.#ctor*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: XamlDirective
  nameWithType: XamlDirective.XamlDirective
- uid: System.Xaml.XamlDirective.AllowedLocation*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: AllowedLocation
  nameWithType: XamlDirective.AllowedLocation
- uid: System.Xaml.XamlDirective.GetHashCode*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: GetHashCode
  nameWithType: XamlDirective.GetHashCode
- uid: System.Xaml.XamlDirective.GetXamlNamespaces*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: GetXamlNamespaces
  nameWithType: XamlDirective.GetXamlNamespaces
- uid: System.Xaml.XamlDirective.LookupCustomAttributeProvider*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupCustomAttributeProvider
  nameWithType: XamlDirective.LookupCustomAttributeProvider
- uid: System.Xaml.XamlDirective.LookupDeferringLoader*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupDeferringLoader
  nameWithType: XamlDirective.LookupDeferringLoader
- uid: System.Xaml.XamlDirective.LookupDependsOn*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupDependsOn
  nameWithType: XamlDirective.LookupDependsOn
- uid: System.Xaml.XamlDirective.LookupInvoker*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupInvoker
  nameWithType: XamlDirective.LookupInvoker
- uid: System.Xaml.XamlDirective.LookupIsAmbient*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsAmbient
  nameWithType: XamlDirective.LookupIsAmbient
- uid: System.Xaml.XamlDirective.LookupIsEvent*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsEvent
  nameWithType: XamlDirective.LookupIsEvent
- uid: System.Xaml.XamlDirective.LookupIsReadOnly*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsReadOnly
  nameWithType: XamlDirective.LookupIsReadOnly
- uid: System.Xaml.XamlDirective.LookupIsReadPublic*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsReadPublic
  nameWithType: XamlDirective.LookupIsReadPublic
- uid: System.Xaml.XamlDirective.LookupIsUnknown*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsUnknown
  nameWithType: XamlDirective.LookupIsUnknown
- uid: System.Xaml.XamlDirective.LookupIsWriteOnly*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsWriteOnly
  nameWithType: XamlDirective.LookupIsWriteOnly
- uid: System.Xaml.XamlDirective.LookupIsWritePublic*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsWritePublic
  nameWithType: XamlDirective.LookupIsWritePublic
- uid: System.Xaml.XamlDirective.LookupTargetType*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupTargetType
  nameWithType: XamlDirective.LookupTargetType
- uid: System.Xaml.XamlDirective.LookupType*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupType
  nameWithType: XamlDirective.LookupType
- uid: System.Xaml.XamlDirective.LookupTypeConverter*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupTypeConverter
  nameWithType: XamlDirective.LookupTypeConverter
- uid: System.Xaml.XamlDirective.LookupUnderlyingGetter*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupUnderlyingGetter
  nameWithType: XamlDirective.LookupUnderlyingGetter
- uid: System.Xaml.XamlDirective.LookupUnderlyingMember*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupUnderlyingMember
  nameWithType: XamlDirective.LookupUnderlyingMember
- uid: System.Xaml.XamlDirective.LookupUnderlyingSetter*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupUnderlyingSetter
  nameWithType: XamlDirective.LookupUnderlyingSetter
- uid: System.Xaml.XamlDirective.ToString*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: ToString
  nameWithType: XamlDirective.ToString
