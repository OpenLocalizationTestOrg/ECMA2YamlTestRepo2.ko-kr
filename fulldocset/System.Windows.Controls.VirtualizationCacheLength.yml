### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.VirtualizationCacheLength
  id: VirtualizationCacheLength
  children:
  - System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double)
  - System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double,System.Double)
  - System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport
  - System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport
  - System.Windows.Controls.VirtualizationCacheLength.Equals(System.Object)
  - System.Windows.Controls.VirtualizationCacheLength.Equals(System.Windows.Controls.VirtualizationCacheLength)
  - System.Windows.Controls.VirtualizationCacheLength.GetHashCode
  - System.Windows.Controls.VirtualizationCacheLength.op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)
  - System.Windows.Controls.VirtualizationCacheLength.op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)
  - System.Windows.Controls.VirtualizationCacheLength.ToString
  langs:
  - csharp
  name: VirtualizationCacheLength
  nameWithType: VirtualizationCacheLength
  fullName: System.Windows.Controls.VirtualizationCacheLength
  type: Struct
  summary: "에 대 한 측정값 나타냅니다는 &lt;xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=fullName&gt; 연결 된 속성입니다."
  remarks: "<xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=fullName>있는 공간의 크기를 지정 하는 연결 된 속성을 <xref:System.Windows.Controls.VirtualizingPanel>전이나 후 보기 포트 (항목은 표시 영역) 항목을 가상화.</xref:System.Windows.Controls.VirtualizingPanel> </xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=fullName>  단일 매개 변수를 사용 하는 생성자를 사용 하 여 내 만들기는 단위의 VirtualizationCacheLength uniform 캐시 길이 지정할 수 있습니다.  다른 값을 지정 하는 두 개의 매개 변수를 사용 하는 생성자를 사용할 수는 <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>및 <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A>속성.</xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> </xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.Controls.VirtualizationCacheLengthConverter))]

      public struct VirtualizationCacheLength : IEquatable<System.Windows.Controls.VirtualizationCacheLength>
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Windows.Controls.VirtualizationCacheLength>
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: VirtualizationCacheLength(Double)
  nameWithType: VirtualizationCacheLength.VirtualizationCacheLength(Double)
  fullName: System.Windows.Controls.VirtualizationCacheLength.VirtualizationCacheLength(Double)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref> 뷰포트의의 각 측면에 대 한 균일 한 캐시 길이 사용 하 여 클래스입니다."
  syntax:
    content: public VirtualizationCacheLength (double cacheBeforeAndAfterViewport);
    parameters:
    - id: cacheBeforeAndAfterViewport
      type: System.Double
      description: "뷰포트의 전후 캐시의 크기입니다."
  overload: System.Windows.Controls.VirtualizationCacheLength.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: VirtualizationCacheLength(Double,Double)
  nameWithType: VirtualizationCacheLength.VirtualizationCacheLength(Double,Double)
  fullName: System.Windows.Controls.VirtualizationCacheLength.VirtualizationCacheLength(Double,Double)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref> 뷰포트의 각 측에 대 한 지정 된 캐시 길이 사용 하 여 클래스입니다."
  syntax:
    content: public VirtualizationCacheLength (double cacheBeforeViewport, double cacheAfterViewport);
    parameters:
    - id: cacheBeforeViewport
      type: System.Double
      description: "뷰포트의 하기 전에 캐시의 크기입니다."
    - id: cacheAfterViewport
      type: System.Double
      description: "뷰포트의 후 캐시의 크기입니다."
  overload: System.Windows.Controls.VirtualizationCacheLength.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport
  id: CacheAfterViewport
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: CacheAfterViewport
  nameWithType: VirtualizationCacheLength.CacheAfterViewport
  fullName: System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "뷰포트 하기 전에 캐시의 크기를 가져옵니다 때는 <xref href=&quot;System.Windows.Controls.VirtualizingPanel&quot;> </xref> 에서 가상화 합니다."
  remarks: "&quot;이러한 맥락에서 가상화&quot; 나타냅니다는 기술 기준인의 하위 집합 [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] 요소가 화면에 표시 되는 항목에 따라 데이터 항목의 많은 수에서 생성 됩니다. 캐시를 사용 하 여 생성 되지 않도록 하려면 [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] 요소 뷰로 스크롤할 하는 대로 합니다."
  syntax:
    content: public double CacheAfterViewport { get; }
    return:
      type: System.Double
      description: "뷰포트 후 캐시의 크기는 경우는 <xref href=&quot;System.Windows.Controls.VirtualizingPanel&quot;> </xref> 에서 가상화 합니다."
  overload: System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport
  id: CacheBeforeViewport
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: CacheBeforeViewport
  nameWithType: VirtualizationCacheLength.CacheBeforeViewport
  fullName: System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "뷰포트 후 캐시의 크기를 가져옵니다 때는 <xref href=&quot;System.Windows.Controls.VirtualizingPanel&quot;> </xref> 에서 가상화 합니다."
  remarks: "&quot;이러한 맥락에서 가상화&quot; 나타냅니다는 기술 기준인의 하위 집합 [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] 요소가 화면에 표시 되는 항목에 따라 데이터 항목의 많은 수에서 생성 됩니다. 캐시를 사용 하 여 생성 되지 않도록 하려면 [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] 요소 뷰로 스크롤할 하는 대로 합니다."
  syntax:
    content: public double CacheBeforeViewport { get; }
    return:
      type: System.Double
      description: "뷰포트 후 캐시의 크기는 경우는 <xref href=&quot;System.Windows.Controls.VirtualizingPanel&quot;> </xref> 에서 가상화 합니다."
  overload: System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: VirtualizationCacheLength.Equals(Object)
  fullName: System.Windows.Controls.VirtualizationCacheLength.Equals(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "현재 지정된 된 개체가 같은지 여부를 결정 <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref>합니다."
  remarks: "<xref:System.Windows.Controls.VirtualizationCacheLength>값이 같은지를 확인 합니다.</xref:System.Windows.Controls.VirtualizationCacheLength>  두 개체가 서로 같은지, 즉 경우 해당 <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>속성 값이 같은지 및 해당 <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A>속성 값이 동일 합니다.</xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> </xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>"
  syntax:
    content: public override bool Equals (object oCompare);
    parameters:
    - id: oCompare
      type: System.Object
      description: "현재와 비교할 개체 <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정 된 개체가 현재 같으면 <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Controls.VirtualizationCacheLength.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.Equals(System.Windows.Controls.VirtualizationCacheLength)
  id: Equals(System.Windows.Controls.VirtualizationCacheLength)
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: Equals(VirtualizationCacheLength)
  nameWithType: VirtualizationCacheLength.Equals(VirtualizationCacheLength)
  fullName: System.Windows.Controls.VirtualizationCacheLength.Equals(VirtualizationCacheLength)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "확인 여부를 지정 된 <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref> 현재 같은지 <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref>합니다."
  remarks: "<xref:System.Windows.Controls.VirtualizationCacheLength>값이 같은지를 확인 합니다.</xref:System.Windows.Controls.VirtualizationCacheLength>  두 개체가 서로 같은지, 즉 경우 해당 <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>속성 값이 같은지 및 해당 <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A>속성 값이 동일 합니다.</xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> </xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>"
  syntax:
    content: public bool Equals (System.Windows.Controls.VirtualizationCacheLength cacheLength);
    parameters:
    - id: cacheLength
      type: System.Windows.Controls.VirtualizationCacheLength
      description: "현재와 비교할 개체 <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정 된 개체가 현재 같으면 <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Controls.VirtualizationCacheLength.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.GetHashCode
  id: GetHashCode
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: VirtualizationCacheLength.GetHashCode()
  fullName: System.Windows.Controls.VirtualizationCacheLength.GetHashCode()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "현재에 대 한 해시 코드를 가져옵니다 <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref>합니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "현재에 대 한 해시 코드 <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref>합니다."
  overload: System.Windows.Controls.VirtualizationCacheLength.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)
  id: op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: op_Equality(VirtualizationCacheLength,VirtualizationCacheLength)
  nameWithType: VirtualizationCacheLength.op_Equality(VirtualizationCacheLength,VirtualizationCacheLength)
  fullName: System.Windows.Controls.VirtualizationCacheLength.op_Equality(VirtualizationCacheLength,VirtualizationCacheLength)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "지정 된 두 결정 <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref> 개체는 동일 합니다."
  remarks: "<xref:System.Windows.Controls.VirtualizationCacheLength>값이 같은지를 확인 합니다.</xref:System.Windows.Controls.VirtualizationCacheLength>  두 개체가 서로 같은지, 즉 경우 해당 <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>속성 값이 같은지 및 해당 <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A>속성 값이 동일 합니다.</xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> </xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>"
  syntax:
    content: public static bool op_Equality (System.Windows.Controls.VirtualizationCacheLength cl1, System.Windows.Controls.VirtualizationCacheLength cl2);
    parameters:
    - id: cl1
      type: System.Windows.Controls.VirtualizationCacheLength
      description: "비교할 첫 번째 개체입니다."
    - id: cl2
      type: System.Windows.Controls.VirtualizationCacheLength
      description: "비교할 두 번째 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우 지정 된 <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref> 같고, 그렇지 않으면, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Controls.VirtualizationCacheLength.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)
  id: op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: op_Inequality(VirtualizationCacheLength,VirtualizationCacheLength)
  nameWithType: VirtualizationCacheLength.op_Inequality(VirtualizationCacheLength,VirtualizationCacheLength)
  fullName: System.Windows.Controls.VirtualizationCacheLength.op_Inequality(VirtualizationCacheLength,VirtualizationCacheLength)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "지정 된 두 결정 <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref> 개체는 동일 합니다."
  remarks: "<xref:System.Windows.Controls.VirtualizationCacheLength>값이 같은지를 확인 합니다.</xref:System.Windows.Controls.VirtualizationCacheLength>  두 개체가 서로 같은지, 즉 경우 해당 <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>속성 값이 같은지 및 해당 <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A>속성 값이 동일 합니다.</xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> </xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>"
  syntax:
    content: public static bool op_Inequality (System.Windows.Controls.VirtualizationCacheLength cl1, System.Windows.Controls.VirtualizationCacheLength cl2);
    parameters:
    - id: cl1
      type: System.Windows.Controls.VirtualizationCacheLength
      description: "비교할 첫 번째 개체입니다."
    - id: cl2
      type: System.Windows.Controls.VirtualizationCacheLength
      description: "비교할 두 번째 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우 지정 된 <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref> 같고, 그렇지 않으면, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Controls.VirtualizationCacheLength.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.ToString
  id: ToString
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: ToString()
  nameWithType: VirtualizationCacheLength.ToString()
  fullName: System.Windows.Controls.VirtualizationCacheLength.ToString()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "현재를 나타내는 문자열을 반환 <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref>합니다."
  remarks: "ToString 메서드 반환 값을 표시 하는 문자열은 <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>및 <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A>속성.</xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> </xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "현재 나타내는 string <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref>합니다."
  overload: System.Windows.Controls.VirtualizationCacheLength.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double)
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: VirtualizationCacheLength(Double)
  nameWithType: VirtualizationCacheLength.VirtualizationCacheLength(Double)
  fullName: System.Windows.Controls.VirtualizationCacheLength.VirtualizationCacheLength(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double,System.Double)
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: VirtualizationCacheLength(Double,Double)
  nameWithType: VirtualizationCacheLength.VirtualizationCacheLength(Double,Double)
  fullName: System.Windows.Controls.VirtualizationCacheLength.VirtualizationCacheLength(Double,Double)
- uid: System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: CacheAfterViewport
  nameWithType: VirtualizationCacheLength.CacheAfterViewport
  fullName: System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport
- uid: System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: CacheBeforeViewport
  nameWithType: VirtualizationCacheLength.CacheBeforeViewport
  fullName: System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport
- uid: System.Windows.Controls.VirtualizationCacheLength.Equals(System.Object)
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: Equals(Object)
  nameWithType: VirtualizationCacheLength.Equals(Object)
  fullName: System.Windows.Controls.VirtualizationCacheLength.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Controls.VirtualizationCacheLength.Equals(System.Windows.Controls.VirtualizationCacheLength)
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: Equals(VirtualizationCacheLength)
  nameWithType: VirtualizationCacheLength.Equals(VirtualizationCacheLength)
  fullName: System.Windows.Controls.VirtualizationCacheLength.Equals(VirtualizationCacheLength)
- uid: System.Windows.Controls.VirtualizationCacheLength
  parent: System.Windows.Controls
  isExternal: false
  name: VirtualizationCacheLength
  nameWithType: VirtualizationCacheLength
  fullName: System.Windows.Controls.VirtualizationCacheLength
- uid: System.Windows.Controls.VirtualizationCacheLength.GetHashCode
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: GetHashCode()
  nameWithType: VirtualizationCacheLength.GetHashCode()
  fullName: System.Windows.Controls.VirtualizationCacheLength.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Controls.VirtualizationCacheLength.op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: op_Equality(VirtualizationCacheLength,VirtualizationCacheLength)
  nameWithType: VirtualizationCacheLength.op_Equality(VirtualizationCacheLength,VirtualizationCacheLength)
  fullName: System.Windows.Controls.VirtualizationCacheLength.op_Equality(VirtualizationCacheLength,VirtualizationCacheLength)
- uid: System.Windows.Controls.VirtualizationCacheLength.op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: op_Inequality(VirtualizationCacheLength,VirtualizationCacheLength)
  nameWithType: VirtualizationCacheLength.op_Inequality(VirtualizationCacheLength,VirtualizationCacheLength)
  fullName: System.Windows.Controls.VirtualizationCacheLength.op_Inequality(VirtualizationCacheLength,VirtualizationCacheLength)
- uid: System.Windows.Controls.VirtualizationCacheLength.ToString
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: ToString()
  nameWithType: VirtualizationCacheLength.ToString()
  fullName: System.Windows.Controls.VirtualizationCacheLength.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Controls.VirtualizationCacheLength.#ctor*
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: VirtualizationCacheLength
  nameWithType: VirtualizationCacheLength.VirtualizationCacheLength
- uid: System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport*
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: CacheAfterViewport
  nameWithType: VirtualizationCacheLength.CacheAfterViewport
- uid: System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport*
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: CacheBeforeViewport
  nameWithType: VirtualizationCacheLength.CacheBeforeViewport
- uid: System.Windows.Controls.VirtualizationCacheLength.Equals*
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: Equals
  nameWithType: VirtualizationCacheLength.Equals
- uid: System.Windows.Controls.VirtualizationCacheLength.GetHashCode*
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: GetHashCode
  nameWithType: VirtualizationCacheLength.GetHashCode
- uid: System.Windows.Controls.VirtualizationCacheLength.op_Equality*
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: op_Equality
  nameWithType: VirtualizationCacheLength.op_Equality
- uid: System.Windows.Controls.VirtualizationCacheLength.op_Inequality*
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: op_Inequality
  nameWithType: VirtualizationCacheLength.op_Inequality
- uid: System.Windows.Controls.VirtualizationCacheLength.ToString*
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: ToString
  nameWithType: VirtualizationCacheLength.ToString
