### YamlMime:ManagedReference
items:
- uid: System.Data.Services.DataServiceHost
  id: DataServiceHost
  children:
  - System.Data.Services.DataServiceHost.#ctor(System.Type,System.Uri[])
  langs:
  - csharp
  name: DataServiceHost
  nameWithType: DataServiceHost
  fullName: System.Data.Services.DataServiceHost
  type: Class
  summary: "[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] 에서 파생 된 클래스 <xref href=&quot;System.ServiceModel.Web.WebServiceHost&quot;> </xref> 데이터 서비스를 인스턴스화하는 데 사용 합니다."
  remarks: "[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]독립 된 서버 엔터티가 아닙니다. 대신, 서비스 등은 WCF Windows Communication Foundation () 핵심적인 서버 네트워킹 기능을 제공 하는 환경에서 호스팅되는 구성 요소입니다. 특히, 서비스 되지 바인딩할 않으며 REPRESENTATIONAL State Transfer () 진입점에 들어오는 요청에 대 한 네트워크 소켓에서 수신 대기 합니다. 호스트 처리 직접 네트워크와의 상호 작용 하 고 캐싱, 확장성 및 인증 모듈을 지원 합니다.       [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]일반적인 호스팅 인터페이스 정의 <xref:System.Data.Services.IDataServiceHost>을 특정 호스트에서 해당 구현을 추상화.</xref:System.Data.Services.IDataServiceHost> 이 통해 [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] 다양 한 호스팅 환경에서에서 실행 되도록 합니다. 자세한 내용은 참조 [데이터 서비스 호스팅](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public class DataServiceHost : System.ServiceModel.Web.WebServiceHost
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.ServiceHostBase
  - System.ServiceModel.ServiceHost
  - System.ServiceModel.Web.WebServiceHost
  implements: []
  inheritedMembers:
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.ServiceHost.ApplyConfiguration
  - System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  - System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHost.OnClosed
  - System.ServiceModel.ServiceHost.SingletonInstance
  - System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  - System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.ServiceHostBase.Authentication
  - System.ServiceModel.ServiceHostBase.Authorization
  - System.ServiceModel.ServiceHostBase.BaseAddresses
  - System.ServiceModel.ServiceHostBase.ChannelDispatchers
  - System.ServiceModel.ServiceHostBase.CloseTimeout
  - System.ServiceModel.ServiceHostBase.Credentials
  - System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  - System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  - System.ServiceModel.ServiceHostBase.Description
  - System.ServiceModel.ServiceHostBase.Extensions
  - System.ServiceModel.ServiceHostBase.ImplementedContracts
  - System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  - System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHostBase.InitializeRuntime
  - System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  - System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  - System.ServiceModel.ServiceHostBase.OnAbort
  - System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnOpened
  - System.ServiceModel.ServiceHostBase.OpenTimeout
  - System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  - System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  - System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  - System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  - System.ServiceModel.Web.WebServiceHost.OnOpening
  platform:
  - net462
- uid: System.Data.Services.DataServiceHost.#ctor(System.Type,System.Uri[])
  id: '#ctor(System.Type,System.Uri[])'
  parent: System.Data.Services.DataServiceHost
  langs:
  - csharp
  name: DataServiceHost(Type,Uri[])
  nameWithType: DataServiceHost.DataServiceHost(Type,Uri[])
  fullName: System.Data.Services.DataServiceHost.DataServiceHost(Type,Uri[])
  type: Constructor
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "인스턴스화합니다 <xref href=&quot;System.Data.Services.DataServiceHost&quot;> </xref> 에 대 한 [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]합니다."
  remarks: '[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]일반적인 호스팅 인터페이스 정의 <xref:System.Data.Services.IDataServiceHost>을 특정 호스트에서 해당 구현을 추상화.</xref:System.Data.Services.IDataServiceHost> 이 통해 [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] 다양 한 호스팅 환경에서에서 실행 되도록 합니다. 이 인터페이스와 혼동 해서는 안 <xref:System.Data.Services.DataServiceHost>, 등록 및 정품 인증 서비스에 대 한 처리 대신.</xref:System.Data.Services.DataServiceHost> 기본 <xref:System.Data.Services.IDataServiceHost>이 경우에 사용 됩니다.</xref:System.Data.Services.IDataServiceHost>'
  syntax:
    content: public DataServiceHost (Type serviceType, Uri[] baseAddresses);
    parameters:
    - id: serviceType
      type: System.Type
      description: "식별 된 [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] 를 호스트 합니다."
    - id: baseAddresses
      type: System.Uri[]
      description: "호스트의 URI입니다."
  overload: System.Data.Services.DataServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Web.WebServiceHost
  isExternal: false
  name: System.ServiceModel.Web.WebServiceHost
- uid: System.Data.Services.DataServiceHost.#ctor(System.Type,System.Uri[])
  parent: System.Data.Services.DataServiceHost
  isExternal: false
  name: DataServiceHost(Type,Uri[])
  nameWithType: DataServiceHost.DataServiceHost(Type,Uri[])
  fullName: System.Data.Services.DataServiceHost.DataServiceHost(Type,Uri[])
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Uri[]
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri[]
  spec.csharp:
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Services.DataServiceHost.#ctor*
  parent: System.Data.Services.DataServiceHost
  isExternal: false
  name: DataServiceHost
  nameWithType: DataServiceHost.DataServiceHost
