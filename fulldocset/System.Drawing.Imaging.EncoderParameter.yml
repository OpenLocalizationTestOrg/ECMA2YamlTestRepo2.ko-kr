### YamlMime:ManagedReference
items:
- uid: System.Drawing.Imaging.EncoderParameter
  id: EncoderParameter
  children:
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[])
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16[])
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[])
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.String)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  - System.Drawing.Imaging.EncoderParameter.Dispose
  - System.Drawing.Imaging.EncoderParameter.Encoder
  - System.Drawing.Imaging.EncoderParameter.Finalize
  - System.Drawing.Imaging.EncoderParameter.NumberOfValues
  - System.Drawing.Imaging.EncoderParameter.Type
  - System.Drawing.Imaging.EncoderParameter.ValueType
  langs:
  - csharp
  name: EncoderParameter
  nameWithType: EncoderParameter
  fullName: System.Drawing.Imaging.EncoderParameter
  type: Class
  summary: "이미지 인코더에는 값 또는 값의 배열을 전달 하는 데 사용 합니다."
  remarks: "특정 이미지 인코더의 특정 매개 변수를 통해 지원 되는 값의 목록을 EncoderParameter 개체를 사용할 수 있습니다."
  example:
  - "The following code example demonstrates how to create a EncoderParameter using the <xref:System.Drawing.Imaging.EncoderParameter.%23ctor%2A> constructor. To run this example, paste the code into a Windows Form and call the `VaryQualityLevel` method from the form's constructor. This example requires an image file named `TestPhoto.jpg` located at **c:\\\\**.  \n  \n [!code-vb[UsingImageEncodersDecoders#8](~/add/codesnippet/visualbasic/t-system.drawing.imaging_0_1.vb)]\n [!code-cs[UsingImageEncodersDecoders#8](~/add/codesnippet/csharp/t-system.drawing.imaging_0_1.cs)]  \n[!code-vb[UsingImageEncodersDecoders#6](~/add/codesnippet/visualbasic/t-system.drawing.imaging_0_2.vb)]\n[!code-cs[UsingImageEncodersDecoders#6](~/add/codesnippet/csharp/t-system.drawing.imaging_0_2.cs)]"
  syntax:
    content: 'public sealed class EncoderParameter : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Byte)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Byte)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 지정된 된 <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 개체 및 하나의 부호 없는 8 비트 정수입니다. 설정의 <> </> *> 속성을 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>, 설정 및는 <> </> *> 속성을 1로 합니다."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 매개 변수 범주의 전역 고유 식별자를 캡슐화 하는 개체입니다."
    - id: value
      type: System.Byte
      description: "에 저장 된 값을 지정 하는 8 비트 부호 없는 정수는 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Byte[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Byte[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 지정된 된 <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 개체 및 부호 없는 8 비트 정수 배열입니다. 설정의 <> </> *> 속성을 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>, 설정 및는 <> </> *> 배열의 요소 수에 대 한 속성."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte[] value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 매개 변수 범주의 전역 고유 식별자를 캡슐화 하는 개체입니다."
    - id: value
      type: System.Byte[]
      description: "에 저장 된 값을 지정 하는 8 비트 부호 없는 정수의 배열을 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int16)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int16)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int16)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int16)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 지정된 된 <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 개체와, 16 비트 정수입니다. 설정의 <> </> *> 속성을 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>, 설정 및는 <> </> *> 속성을 1로 합니다."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, short value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 매개 변수 범주의 전역 고유 식별자를 캡슐화 하는 개체입니다."
    - id: value
      type: System.Int16
      description: "에 저장 된 값을 지정 하는 16 비트 정수는 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다. 음수가 아니어야 합니다."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int16[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int16[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int16[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int16[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 지정된 된 <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 개체와 16 비트 정수 배열입니다. 설정의 <> </> *> 속성을 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>, 설정 및는 <> </> *> 배열의 요소 수에 대 한 속성."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, short[] value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 매개 변수 범주의 전역 고유 식별자를 캡슐화 하는 개체입니다."
    - id: value
      type: System.Int16[]
      description: "에 저장 된 값을 지정 하는 16 비트 정수의 배열은 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다. 정수 배열에는 음수가 아니어야 합니다."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int64)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int64)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 지정된 된 <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 개체 및 하나의 64 비트 정수입니다. 설정의 <> </> *> 속성을 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref> (32 비트)을 설정 하 고는 <> </> *> 속성을 1로 합니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to create a <xref:System.Drawing.Imaging.EncoderParameter> using the EncoderParameter constructor. To run this example, paste the code into a Windows Form and call the `VaryQualityLevel` method from the form's constructor. This example requires an image file named `TestPhoto.jpg` located at **c:\\\\**.  \n  \n [!code-vb[UsingImageEncodersDecoders#8](~/add/codesnippet/visualbasic/f30a3dab-0a65-43e4-a0d4-_1.vb)]\n [!code-cs[UsingImageEncodersDecoders#8](~/add/codesnippet/csharp/f30a3dab-0a65-43e4-a0d4-_1.cs)]  \n[!code-vb[UsingImageEncodersDecoders#6](~/add/codesnippet/visualbasic/f30a3dab-0a65-43e4-a0d4-_2.vb)]\n[!code-cs[UsingImageEncodersDecoders#6](~/add/codesnippet/csharp/f30a3dab-0a65-43e4-a0d4-_2.cs)]"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 매개 변수 범주의 전역 고유 식별자를 캡슐화 하는 개체입니다."
    - id: value
      type: System.Int64
      description: "에 저장 된 값을 지정 하는 64 비트 정수는 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다. 음수가 아니어야 합니다. 이 매개 변수는 32 비트 정수 변환에 저장 되기 전에 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int64[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int64[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 지정된 된 <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 개체와 64 비트 정수의 배열입니다. 설정는 <> </> *> 속성을 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref> (32 비트)을 설정 하 고는 <> </> *> 배열의 요소 수에 대 한 속성입니다."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long[] value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 매개 변수 범주의 전역 고유 식별자를 캡슐화 하는 개체입니다."
    - id: value
      type: System.Int64[]
      description: "에 저장 된 값을 지정 하는 64 비트 정수의 배열은 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다. 정수 배열에는 음수가 아니어야 합니다. 64 비트 정수는 32 비트 정수에 저장 되기 전에 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.String)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.String)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,String)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,String)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,String)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 지정된 된 <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 개체와 문자열입니다. 문자열은 null로 끝나는 ASCII 문자열로 변환에 저장 되기 전에 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다. 설정는 <> </> *> 속성을 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>, 설정 및는 <> </> *> 속성은 NULL 종결자를 포함 하 여 ASCII 문자열의 길이입니다."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, string value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 매개 변수 범주의 전역 고유 식별자를 캡슐화 하는 개체입니다."
    - id: value
      type: System.String
      description: "A <xref:System.String>에 저장 된 값을 지정 하는 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다.</xref:System.String>"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Byte,Boolean)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte,Boolean)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte,Boolean)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 지정된 된 <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 개체 및 8 비트 값이 두 개 있습니다. 설정의 <> </> *> 속성을 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref> 또는 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>, 설정 및는 <> </> *> 속성을 1로 합니다."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte value, bool undefined);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 매개 변수 범주의 전역 고유 식별자를 캡슐화 하는 개체입니다."
    - id: value
      type: System.Byte
      description: "에 저장 된 값을 지정 하는 바이트는 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다."
    - id: undefined
      type: System.Boolean
      description: "경우 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, <> </> *> 속성이로 설정 되어 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>, 그렇지 않으면는 <> </> *> 속성이 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>합니다."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Byte[],Boolean)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte[],Boolean)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte[],Boolean)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 지정된 된 <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 개체와 바이트 배열입니다. 설정의 <> </> *> 속성을 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref> 또는 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>, 설정 및는 <> </> *> 배열의 요소 수에 대 한 속성."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte[] value, bool undefined);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 매개 변수 범주의 전역 고유 식별자를 캡슐화 하는 개체입니다."
    - id: value
      type: System.Byte[]
      description: "에 저장 된 값을 지정 하는 바이트 배열을 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다."
    - id: undefined
      type: System.Boolean
      description: "경우 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, <> </> *> 속성이로 설정 되어 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>, 그렇지 않으면는 <> </> *> 속성이 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>합니다."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 지정된 된 <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 개체 및 32 비트 정수 쌍입니다. 정수 쌍은 분수, 첫 번째 정수가 분자 및 두 번째 정수가 분모를 나타냅니다. 설정의 <> </> *> 속성을 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>, 설정 및는 <> </> *> 속성을 1로 합니다."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int numerator, int denominator);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 매개 변수 범주의 전역 고유 식별자를 캡슐화 하는 개체입니다."
    - id: numerator
      type: System.Int32
      description: "분수의 분자를 나타내는 32 비트 정수입니다. 음수가 아니어야 합니다."
    - id: denominator
      type: System.Int32
      description: "분수의 분모를 나타내는 32 비트 정수입니다. 음수가 아니어야 합니다."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32[],Int32[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 지정된 된 <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 개체과 두 개의 32 비트 정수입니다. 두 배열이 분수의 배열을 나타냅니다. 설정는 <> </> *> 속성을 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>, 설정 및는 <> </> *> 속성에 있는 요소의 수를는 <code> numerator </code> 배열 요소 수와 동일 해야 하에 <code> denominator </code> 배열입니다."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int[] numerator, int[] denominator);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 매개 변수 범주의 전역 고유 식별자를 캡슐화 하는 개체입니다."
    - id: numerator
      type: System.Int32[]
      description: "분수의 분자를 지정 하는 32 비트 정수의 배열입니다. 정수 배열에는 음수가 아니어야 합니다."
    - id: denominator
      type: System.Int32[]
      description: "분수의 분모를 지정 하는 32 비트 정수의 배열입니다. 정수 배열에는 음수가 아니어야 합니다. 지정된 된 인덱스의 분모가 같은 인덱스의 분자와 연결 됩니다."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int64,Int64)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64,Int64)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64,Int64)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 지정된 된 <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 개체 및 64 비트 정수 쌍입니다. 정수 쌍 정수, 첫 번째 정수가 범위에서 가장 작은 수 및 번째 정수가 범위에서 가장 큰 수의 범위를 나타냅니다. 설정의 <> </> *> 속성을 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>, 설정 및는 <> </> *> 속성을 1로 합니다."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long rangebegin, long rangeend);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 매개 변수 범주의 전역 고유 식별자를 캡슐화 하는 개체입니다."
    - id: rangebegin
      type: System.Int64
      description: "정수 범위에서 가장 작은 수를 나타내는 64 비트 정수입니다. 음수가 아니어야 합니다. 이 매개 변수는 32 비트 정수 변환에 저장 되기 전에 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다."
    - id: rangeend
      type: System.Int64
      description: "정수 범위에서 가장 큰 수를 나타내는 64 비트 정수입니다. 음수가 아니어야 합니다. 이 매개 변수는 32 비트 정수 변환에 저장 되기 전에 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int64[],Int64[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64[],Int64[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64[],Int64[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 지정된 된 <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 개체과 두 개의 64 비트 정수입니다. 두 배열의 배열 정수 범위를 나타냅니다. 설정는 <> </> *> 속성을 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>, 설정 및는 <> </> *> 속성에 있는 요소의 수를는 <code> rangebegin </code> 배열 요소 수와 동일 해야 하에 <code> rangeend </code> 배열입니다."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long[] rangebegin, long[] rangeend);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 매개 변수 범주의 전역 고유 식별자를 캡슐화 하는 개체입니다."
    - id: rangebegin
      type: System.Int64[]
      description: "정수 범위에 대 한 최소 값을 지정 하는 64 비트 정수의 배열입니다. 정수 배열에는 음수가 아니어야 합니다. 64 비트 정수는 32 비트 정수에 저장 되기 전에 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다."
    - id: rangeend
      type: System.Int64[]
      description: "정수 범위에 대 한 최대값을 지정 하는 64 비트 정수의 배열입니다. 정수 배열에는 음수가 아니어야 합니다. 64 비트 정수는 32 비트 정수에 저장 되기 전에 <xref href=&quot;System.Drawing.Imaging.EncoderParameters&quot;> </xref> 개체입니다. 지정된 된 인덱스의 최대 값은 같은 인덱스의 최소 값과 연결 됩니다."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 지정된 된 <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 개체, 값의 수, 값에 저장 된 값에 대 한 포인터의 데이터 형식과 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int numberValues, System.Drawing.Imaging.EncoderParameterValueType type, IntPtr value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 매개 변수 범주의 전역 고유 식별자를 캡슐화 하는 개체입니다."
    - id: numberValues
      type: System.Int32
      description: "에 저장 된 값의 수를 지정 하는 정수는 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다. <xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*>속성은이 값으로 설정 됩니다.</xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*>"
    - id: type
      type: System.Drawing.Imaging.EncoderParameterValueType
      description: "멤버는 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref> 에 저장 된 값의 데이터 형식을 지정 하는 열거형은 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다. <xref:System.Type>및 <xref:System.Drawing.Imaging.EncoderParameter.ValueType*>속성은이 값으로 설정 됩니다.</xref:System.Drawing.Imaging.EncoderParameter.ValueType*> </xref:System.Type>"
    - id: value
      type: System.IntPtr
      description: "지정한 형식의 값 배열에 대 한 포인터는 `Type` 매개 변수입니다."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 지정된 된 <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 개체 및 수의 값을 값, 및에 저장 된 값에 대 한 포인터의 데이터 형식 지정 하는 세 개의 정수는 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int NumberOfValues, int Type, int Value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 매개 변수 범주의 전역 고유 식별자를 캡슐화 하는 개체입니다."
    - id: NumberOfValues
      type: System.Int32
      description: "에 저장 된 값의 수를 지정 하는 정수는 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다. <xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*>속성은이 값으로 설정 됩니다.</xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*>"
    - id: Type
      type: System.Int32
      description: "멤버는 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref> 에 저장 된 값의 데이터 형식을 지정 하는 열거형은 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다. <xref:System.Type>및 <xref:System.Drawing.Imaging.EncoderParameter.ValueType*>속성은이 값으로 설정 됩니다.</xref:System.Drawing.Imaging.EncoderParameter.ValueType*> </xref:System.Type>"
    - id: Value
      type: System.Int32
      description: "지정한 형식의 값 배열에 대 한 포인터는 `Type` 매개 변수입니다."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "형식이 유효한 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 지정된 된 <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 개체와 4 개의 32 비트 정수입니다. 4 개의 정수 분수의 범위를 나타냅니다. 처음 두 정수 범위에서 가장 작은 비율을 나타내고 나머지 두 정수 범위에서 가장 큰 부분을 나타냅니다. 설정의 <> </> *> 속성을 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>, 설정 및는 <> </> *> 속성을 1로 합니다."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int numerator1, int demoninator1, int numerator2, int demoninator2);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 매개 변수 범주의 전역 고유 식별자를 캡슐화 하는 개체입니다."
    - id: numerator1
      type: System.Int32
      description: "범위에서 가장 작은 분수의 분자를 나타내는 32 비트 정수입니다. 음수가 아니어야 합니다."
    - id: demoninator1
      type: System.Int32
      description: "범위에서 가장 작은 분수의 분모를 나타내는 32 비트 정수입니다. 음수가 아니어야 합니다."
    - id: numerator2
      type: System.Int32
      description: "범위에서 가장 작은 분수의 분모를 나타내는 32 비트 정수입니다. 음수가 아니어야 합니다."
    - id: demoninator2
      type: System.Int32
      description: "범위에서 가장 큰 분수의 분자를 나타내는 32 비트 정수입니다. 음수가 아니어야 합니다."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 지정된 된 <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 개체 및 32 비트 정수 4 개의 배열입니다. 4 개의 배열은 배열 합리적인 범위를 나타냅니다. 유리수 범위는 집합에서 최대 소수 자릿수 값을 통해 최소 소수 자릿수 값은 모든 분수입니다. 설정는 <> </> *> 속성을 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>, 설정 및는 <> </> *> 속성에 있는 요소의 수를는 <code> numerator1 </code> 배열에는 다른 세 가지 배열에 있는 요소의 수와 동일 해야 합니다."
  remarks: "I 번째 범위에서 numerator1 모든 소수 자릿수 구성 됩니다. [i] / denominator1 [i] numerator2 통해 [i] / denominator2 [i]."
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int[] numerator1, int[] denominator1, int[] numerator2, int[] denominator2);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 매개 변수 범주의 전역 고유 식별자를 캡슐화 하는 개체입니다."
    - id: numerator1
      type: System.Int32[]
      description: "분자의 범위에 대 한 최소 값을 지정 하는 32 비트 정수의 배열입니다. 정수 배열에는 음수가 아니어야 합니다."
    - id: denominator1
      type: System.Int32[]
      description: "범위에 대 한 최소 값의 분모를 지정 하는 32 비트 정수의 배열입니다. 정수 배열에는 음수가 아니어야 합니다."
    - id: numerator2
      type: System.Int32[]
      description: "범위에 대 한 최대값의 분자를 지정 하는 32 비트 정수의 배열입니다. 정수 배열에는 음수가 아니어야 합니다."
    - id: denominator2
      type: System.Int32[]
      description: "범위에 대 한 최대값의 분모를 지정 하는 32 비트 정수의 배열입니다. 정수 배열에는 음수가 아니어야 합니다."
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.Dispose
  id: Dispose
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: Dispose()
  nameWithType: EncoderParameter.Dispose()
  fullName: System.Drawing.Imaging.EncoderParameter.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "사용 하는 모든 리소스를 해제 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다."
  remarks: "이 사용 하는 리소스를 사용 하면 Dispose를 호출 <xref:System.Drawing.Imaging.EncoderParameter>개체 다른 용도에 다시 할당 됩니다.</xref:System.Drawing.Imaging.EncoderParameter>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Imaging.EncoderParameter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.Encoder
  id: Encoder
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: Encoder
  nameWithType: EncoderParameter.Encoder
  fullName: System.Drawing.Imaging.EncoderParameter.Encoder
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "가져오거나는 <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 이 연관 된 개체 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다. <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 범주를 지정 하는 전역 고유 식별자 (GUID)를 캡슐화 하는 개체 (예를 들어 <xref href=&quot;System.Drawing.Imaging.Encoder.Quality&quot;> </xref>, <xref href=&quot;System.Drawing.Imaging.Encoder.ColorDepth&quot;> </xref>, 또는 <xref href=&quot;System.Drawing.Imaging.Encoder.Compression&quot;> </xref>)이 저장 된 매개 변수의 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다."
  syntax:
    content: public System.Drawing.Imaging.Encoder Encoder { get; set; }
    return:
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref> 이 저장 된 매개 변수의 범주를 지정 하는 GUID를 캡슐화 하는 개체 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다."
  overload: System.Drawing.Imaging.EncoderParameter.Encoder*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.Finalize
  id: Finalize
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: Finalize()
  nameWithType: EncoderParameter.Finalize()
  fullName: System.Drawing.Imaging.EncoderParameter.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "허용 된 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 리소스를 해제 하 고 다른 정리 작업 하기 전에 수행할 하려고 하는 개체는 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 가비지 수집에서 개체를 회수 합니다."
  syntax:
    content: ~EncoderParameter ();
    parameters: []
  overload: System.Drawing.Imaging.EncoderParameter.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.NumberOfValues
  id: NumberOfValues
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: NumberOfValues
  nameWithType: EncoderParameter.NumberOfValues
  fullName: System.Drawing.Imaging.EncoderParameter.NumberOfValues
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "이 저장 된 값의 배열에 있는 요소 수를 가져옵니다 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다."
  syntax:
    content: public int NumberOfValues { get; }
    return:
      type: System.Int32
      description: "이 저장 된 값의 배열에 있는 요소의 수를 나타내는 정수 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다."
  overload: System.Drawing.Imaging.EncoderParameter.NumberOfValues*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.Type
  id: Type
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: Type
  nameWithType: EncoderParameter.Type
  fullName: System.Drawing.Imaging.EncoderParameter.Type
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "이 저장 된 값의 데이터 형식을 가져옵니다 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다."
  syntax:
    content: public System.Drawing.Imaging.EncoderParameterValueType Type { get; }
    return:
      type: System.Drawing.Imaging.EncoderParameterValueType
      description: "멤버는 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref> 이 저장 된 값의 데이터 형식을 나타내는 열거형 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다."
  overload: System.Drawing.Imaging.EncoderParameter.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.ValueType
  id: ValueType
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: ValueType
  nameWithType: EncoderParameter.ValueType
  fullName: System.Drawing.Imaging.EncoderParameter.ValueType
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "이 저장 된 값의 데이터 형식을 가져옵니다 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다."
  syntax:
    content: public System.Drawing.Imaging.EncoderParameterValueType ValueType { get; }
    return:
      type: System.Drawing.Imaging.EncoderParameterValueType
      description: "멤버는 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref> 이 저장 된 값의 데이터 형식을 나타내는 열거형 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다."
  overload: System.Drawing.Imaging.EncoderParameter.ValueType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Byte)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte)
- uid: System.Drawing.Imaging.Encoder
  parent: System.Drawing.Imaging
  isExternal: false
  name: Encoder
  nameWithType: Encoder
  fullName: System.Drawing.Imaging.Encoder
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Byte[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int16)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int16)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int16)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int16[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int16[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int16[])
- uid: System.Int16[]
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16[]
  spec.csharp:
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: Int16[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int64)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int64[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64[])
- uid: System.Int64[]
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64[]
  spec.csharp:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: Int64[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.String)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,String)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,String)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Byte,Boolean)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte,Boolean)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Byte[],Boolean)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte[],Boolean)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte[],Boolean)
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32[],Int32[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[])
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int64,Int64)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64,Int64)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64,Int64)
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int64[],Int64[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64[],Int64[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64[],Int64[])
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
- uid: System.Drawing.Imaging.EncoderParameterValueType
  parent: System.Drawing.Imaging
  isExternal: false
  name: EncoderParameterValueType
  nameWithType: EncoderParameterValueType
  fullName: System.Drawing.Imaging.EncoderParameterValueType
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32)
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
- uid: System.Drawing.Imaging.EncoderParameter.Dispose
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Dispose()
  nameWithType: EncoderParameter.Dispose()
  fullName: System.Drawing.Imaging.EncoderParameter.Dispose()
- uid: System.Drawing.Imaging.EncoderParameter.Encoder
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Encoder
  nameWithType: EncoderParameter.Encoder
  fullName: System.Drawing.Imaging.EncoderParameter.Encoder
- uid: System.Drawing.Imaging.EncoderParameter.Finalize
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Finalize()
  nameWithType: EncoderParameter.Finalize()
  fullName: System.Drawing.Imaging.EncoderParameter.Finalize()
- uid: System.Drawing.Imaging.EncoderParameter.NumberOfValues
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: NumberOfValues
  nameWithType: EncoderParameter.NumberOfValues
  fullName: System.Drawing.Imaging.EncoderParameter.NumberOfValues
- uid: System.Drawing.Imaging.EncoderParameter.Type
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Type
  nameWithType: EncoderParameter.Type
  fullName: System.Drawing.Imaging.EncoderParameter.Type
- uid: System.Drawing.Imaging.EncoderParameter.ValueType
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: ValueType
  nameWithType: EncoderParameter.ValueType
  fullName: System.Drawing.Imaging.EncoderParameter.ValueType
- uid: System.Drawing.Imaging.EncoderParameter.#ctor*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter
  nameWithType: EncoderParameter.EncoderParameter
- uid: System.Drawing.Imaging.EncoderParameter.Dispose*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Dispose
  nameWithType: EncoderParameter.Dispose
- uid: System.Drawing.Imaging.EncoderParameter.Encoder*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Encoder
  nameWithType: EncoderParameter.Encoder
- uid: System.Drawing.Imaging.EncoderParameter.Finalize*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Finalize
  nameWithType: EncoderParameter.Finalize
- uid: System.Drawing.Imaging.EncoderParameter.NumberOfValues*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: NumberOfValues
  nameWithType: EncoderParameter.NumberOfValues
- uid: System.Drawing.Imaging.EncoderParameter.Type*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Type
  nameWithType: EncoderParameter.Type
- uid: System.Drawing.Imaging.EncoderParameter.ValueType*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: ValueType
  nameWithType: EncoderParameter.ValueType
