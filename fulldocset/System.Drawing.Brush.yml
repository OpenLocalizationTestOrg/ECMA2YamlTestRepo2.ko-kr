### YamlMime:ManagedReference
items:
- uid: System.Drawing.Brush
  id: Brush
  children:
  - System.Drawing.Brush.#ctor
  - System.Drawing.Brush.Clone
  - System.Drawing.Brush.Dispose
  - System.Drawing.Brush.Dispose(System.Boolean)
  - System.Drawing.Brush.Finalize
  - System.Drawing.Brush.SetNativeBrush(System.IntPtr)
  langs:
  - csharp
  name: Brush
  nameWithType: Brush
  fullName: System.Drawing.Brush
  type: Class
  summary: "사각형, 타원, 파이, 다각형 및 경로 같은 그래픽 도형의 내부를 채우는 데 사용 되는 개체를 정의 합니다."
  remarks: "이 클래스는 추상 기본 클래스 및 인스턴스화할 수 없습니다. 와 같은 브러시에서 파생 된 클래스를 사용 하 여 브러시 개체를 만들려면 <xref:System.Drawing.SolidBrush>, <xref:System.Drawing.TextureBrush>, 및 <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</xref:System.Drawing.Drawing2D.LinearGradientBrush> </xref:System.Drawing.TextureBrush> </xref:System.Drawing.SolidBrush>"
  syntax:
    content: 'public abstract class Brush : MarshalByRefObject, ICloneable, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ICloneable
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Brush.#ctor
  id: '#ctor'
  parent: System.Drawing.Brush
  langs:
  - csharp
  name: Brush()
  nameWithType: Brush.Brush()
  fullName: System.Drawing.Brush.Brush()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Brush&quot;> </xref> 클래스입니다."
  syntax:
    content: protected Brush ();
    parameters: []
  overload: System.Drawing.Brush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Brush.Clone
  id: Clone
  parent: System.Drawing.Brush
  langs:
  - csharp
  name: Clone()
  nameWithType: Brush.Clone()
  fullName: System.Drawing.Brush.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "파생된 클래스에서 재정의 되 면이의 정확한 복사본을 만듭니다 <xref href=&quot;System.Drawing.Brush&quot;> </xref>합니다."
  syntax:
    content: public abstract object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "새 <xref href=&quot;System.Drawing.Brush&quot;> </xref> 이 메서드가 만드는 합니다."
  overload: System.Drawing.Brush.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Brush.Dispose
  id: Dispose
  parent: System.Drawing.Brush
  langs:
  - csharp
  name: Dispose()
  nameWithType: Brush.Dispose()
  fullName: System.Drawing.Brush.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "사용 하는 모든 리소스를 해제 <xref href=&quot;System.Drawing.Brush&quot;> </xref> 개체입니다."
  remarks: "이 사용 하는 리소스를 사용 하면 Dispose를 호출 <xref:System.Drawing.Brush>개체 다른 용도에 다시 할당 됩니다.</xref:System.Drawing.Brush>       <xref:System.Drawing.Brush>.</xref:System.Drawing.Brush> 를 사용 하 여 작업을 마쳤으면 Dispose를 호출 합니다. Dispose 메서드는 <xref:System.Drawing.Brush>불안정 한 상태가.</xref:System.Drawing.Brush> Dispose를 호출한 후에 대 한 모든 참조를 해제 해야는 <xref:System.Drawing.Brush>가비지 수집기는 메모리를 회수할 수 있도록 하는 <xref:System.Drawing.Brush>차지한.</xref:System.Drawing.Brush> </xref:System.Drawing.Brush> 자세한 내용은 참조 [관리 되지 않는 리소스 정리](~/add/includes/ajax-current-ext-md.md) 및 [Dispose 메서드를 구현](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > <xref:System.Drawing.Brush>.</xref:System.Drawing.Brush> 에 대 한 마지막 참조를 해제 하기 전에 항상 호출 삭제 사용 중인 리소스가 가비지 수집기 호출할 때까지 해제 되지 것입니다 그렇지 않은 경우는 <xref:System.Drawing.Brush>개체의 `Finalize` 메서드.</xref:System.Drawing.Brush>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Brush.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Brush.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Drawing.Brush
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Brush.Dispose(Boolean)
  fullName: System.Drawing.Brush.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "사용 하는 관리 되지 않는 리소스를 해제는 <xref href=&quot;System.Drawing.Brush&quot;> </xref> 관리 되는 리소스를 선택적으로 해제 합니다."
  remarks: "이 메서드는 public `Dispose()`메서드 및 <xref:System.Object.Finalize%2A>메서드.</xref:System.Object.Finalize%2A> `Dispose()`보호 된 호출 `Dispose(Boolean)` 메서드는 `disposing` 매개 변수 설정 `true`합니다. <xref:System.Object.Finalize%2A>호출 `Dispose` 와 `disposing` 로 설정 `false`합니다.</xref:System.Object.Finalize%2A>       경우는 `disposing` 매개 변수가 true 이면이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <xref:System.Drawing.Brush>참조.</xref:System.Drawing.Brush> 이 메서드 호출에서 `Dispose()` 각 참조 된 개체의 메서드."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.Drawing.Brush.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Brush.Finalize
  id: Finalize
  parent: System.Drawing.Brush
  langs:
  - csharp
  name: Finalize()
  nameWithType: Brush.Finalize()
  fullName: System.Drawing.Brush.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "개체가를 리소스를 해제 하 고 가비지 수집에서 회수 하기 전에 다른 정리 작업을 수행할 수 있습니다."
  syntax:
    content: ~Brush ();
    parameters: []
  overload: System.Drawing.Brush.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Brush.SetNativeBrush(System.IntPtr)
  id: SetNativeBrush(System.IntPtr)
  parent: System.Drawing.Brush
  langs:
  - csharp
  name: SetNativeBrush(IntPtr)
  nameWithType: Brush.SetNativeBrush(IntPtr)
  fullName: System.Drawing.Brush.SetNativeBrush(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "파생된 클래스에서 대 한 참조 설정 하는 [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] 브러시 개체입니다."
  syntax:
    content: protected void SetNativeBrush (IntPtr brush);
    parameters:
    - id: brush
      type: System.IntPtr
      description: "에 대 한 포인터는 [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] 브러시 개체입니다."
  overload: System.Drawing.Brush.SetNativeBrush*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.Drawing.Brush.#ctor
  parent: System.Drawing.Brush
  isExternal: false
  name: Brush()
  nameWithType: Brush.Brush()
  fullName: System.Drawing.Brush.Brush()
- uid: System.Drawing.Brush.Clone
  parent: System.Drawing.Brush
  isExternal: false
  name: Clone()
  nameWithType: Brush.Clone()
  fullName: System.Drawing.Brush.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Brush.Dispose
  parent: System.Drawing.Brush
  isExternal: false
  name: Dispose()
  nameWithType: Brush.Dispose()
  fullName: System.Drawing.Brush.Dispose()
- uid: System.Drawing.Brush.Dispose(System.Boolean)
  parent: System.Drawing.Brush
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Brush.Dispose(Boolean)
  fullName: System.Drawing.Brush.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Brush.Finalize
  parent: System.Drawing.Brush
  isExternal: false
  name: Finalize()
  nameWithType: Brush.Finalize()
  fullName: System.Drawing.Brush.Finalize()
- uid: System.Drawing.Brush.SetNativeBrush(System.IntPtr)
  parent: System.Drawing.Brush
  isExternal: false
  name: SetNativeBrush(IntPtr)
  nameWithType: Brush.SetNativeBrush(IntPtr)
  fullName: System.Drawing.Brush.SetNativeBrush(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Brush.#ctor*
  parent: System.Drawing.Brush
  isExternal: false
  name: Brush
  nameWithType: Brush.Brush
- uid: System.Drawing.Brush.Clone*
  parent: System.Drawing.Brush
  isExternal: false
  name: Clone
  nameWithType: Brush.Clone
- uid: System.Drawing.Brush.Dispose*
  parent: System.Drawing.Brush
  isExternal: false
  name: Dispose
  nameWithType: Brush.Dispose
- uid: System.Drawing.Brush.Finalize*
  parent: System.Drawing.Brush
  isExternal: false
  name: Finalize
  nameWithType: Brush.Finalize
- uid: System.Drawing.Brush.SetNativeBrush*
  parent: System.Drawing.Brush
  isExternal: false
  name: SetNativeBrush
  nameWithType: Brush.SetNativeBrush
