### YamlMime:ManagedReference
items:
- uid: System.Data.CommandBehavior
  id: CommandBehavior
  children:
  - System.Data.CommandBehavior.CloseConnection
  - System.Data.CommandBehavior.Default
  - System.Data.CommandBehavior.KeyInfo
  - System.Data.CommandBehavior.SchemaOnly
  - System.Data.CommandBehavior.SequentialAccess
  - System.Data.CommandBehavior.SingleResult
  - System.Data.CommandBehavior.SingleRow
  langs:
  - csharp
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
  type: Enum
  summary: "결과 쿼리 및 데이터베이스에 미치는 영향에 대 한 설명을 제공합니다."
  remarks: "CommandBehavior 값 <xref:System.Data.IDbCommand.ExecuteReader%2A> <xref:System.Data.IDbCommand>합니다.에서 파생 된 클래스</xref:System.Data.IDbCommand> 의 메서드에</xref:System.Data.IDbCommand.ExecuteReader%2A> 의해 사용 됩니다.       이러한 값의 비트 조합으로 사용할 수 있습니다.       CommandBehavior 정의 하는 데 사용 하는 경우 무시 됩니다는 <xref:System.Data.Sql.SqlNotificationRequest>또는 <xref:System.Data.SqlClient.SqlDependency>따라서 사용할 수 없습니다.</xref:System.Data.SqlClient.SqlDependency> </xref:System.Data.Sql.SqlNotificationRequest> 필요 없는 생성자를 사용 하는 `CommandBehavior` 이 두 가지 경우에서 매개 변수입니다.      > [!NOTE] > 사용 SequentialAccess 큰 값 및 이진 데이터를 검색 합니다. 그렇지 않은 경우는 <xref:System.OutOfMemoryException>발생할 수 있습니다 및 연결이 닫힙니다.</xref:System.OutOfMemoryException>"
  syntax:
    content: >-
      [System.Flags]

      public enum CommandBehavior
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Data.CommandBehavior.CloseConnection
  id: CloseConnection
  parent: System.Data.CommandBehavior
  langs:
  - csharp
  name: CloseConnection
  nameWithType: CommandBehavior.CloseConnection
  fullName: System.Data.CommandBehavior.CloseConnection
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "명령이 실행 되 면, 연결 된 <xref uid=&quot;langword_csharp_Connection&quot; name=&quot;Connection&quot; href=&quot;&quot;> </xref> 개체를 닫을 때 연결 된 <xref uid=&quot;langword_csharp_DataReader&quot; name=&quot;DataReader&quot; href=&quot;&quot;> </xref> 개체가 닫혀 있습니다."
  syntax:
    content: CloseConnection
    return:
      type: System.Data.CommandBehavior
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.CommandBehavior.Default
  id: Default
  parent: System.Data.CommandBehavior
  langs:
  - csharp
  name: Default
  nameWithType: CommandBehavior.Default
  fullName: System.Data.CommandBehavior.Default
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "쿼리가 여러 결과 집합을 반환할 수 있습니다. 쿼리 실행 데이터베이스 상태에 영향을 줄 수 있습니다. <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>호출 없는 CommandBehavior 플래그를 설정 <xref uid=&quot;langword_csharp_ExecuteReader(CommandBehavior.Default)&quot; name=&quot;ExecuteReader(CommandBehavior.Default)&quot; href=&quot;&quot;> </xref> 호출 하는 기능적 <xref uid=&quot;langword_csharp_ExecuteReader()&quot; name=&quot;ExecuteReader()&quot; href=&quot;&quot;> </xref>합니다."
  syntax:
    content: Default
    return:
      type: System.Data.CommandBehavior
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.CommandBehavior.KeyInfo
  id: KeyInfo
  parent: System.Data.CommandBehavior
  langs:
  - csharp
  name: KeyInfo
  nameWithType: CommandBehavior.KeyInfo
  fullName: System.Data.CommandBehavior.KeyInfo
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "쿼리에서 열 및 기본 키 정보를 반환합니다."
  remarks: "명령 실행을 위해 KeyInfo를 사용 하면 공급자는 별도 결과 집합에 기존 기본 키 열 및 타임 스탬프 열 추가 됩니다.       KeyInfo를 사용할 때.NET Framework Data Provider for SQL Server SET FMTONLY OFF 및 SET NO_BROWSETABLE ON을 사용 하 여 실행 중인 문 앞에 옵니다. 사용자는 사용 하는 SET FMTONLY ON 문 같은 잠재적인 파생 작업이 알고 있어야 합니다. 자세한 내용은 SQL Server 온라인 설명서를 참조 하십시오."
  syntax:
    content: KeyInfo
    return:
      type: System.Data.CommandBehavior
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.CommandBehavior.SchemaOnly
  id: SchemaOnly
  parent: System.Data.CommandBehavior
  langs:
  - csharp
  name: SchemaOnly
  nameWithType: CommandBehavior.SchemaOnly
  fullName: System.Data.CommandBehavior.SchemaOnly
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "쿼리는 열 정보만을 반환합니다. SchemaOnly를 사용할 때.NET Framework Data Provider for SQL Server SET FMTONLY ON을 사용 하 여 실행 중인 문 앞에 옵니다."
  syntax:
    content: SchemaOnly
    return:
      type: System.Data.CommandBehavior
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.CommandBehavior.SequentialAccess
  id: SequentialAccess
  parent: System.Data.CommandBehavior
  langs:
  - csharp
  name: SequentialAccess
  nameWithType: CommandBehavior.SequentialAccess
  fullName: System.Data.CommandBehavior.SequentialAccess
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "에 대 한 방법을 제공는 <xref uid=&quot;langword_csharp_DataReader&quot; name=&quot;DataReader&quot; href=&quot;&quot;> </xref> 큰 이진 값을 갖는 열이 포함 된 행을 처리 하 합니다. 전체 행을 로드 하는 대신 <xref uid=&quot;langword_csharp_SequentialAccess&quot; name=&quot;SequentialAccess&quot; href=&quot;&quot;> </xref> 수 있도록는 <xref uid=&quot;langword_csharp_DataReader&quot; name=&quot;DataReader&quot; href=&quot;&quot;> </xref> 스트림으로 데이터를 로드 합니다. 사용할 수 있습니다는 <xref uid=&quot;langword_csharp_GetBytes&quot; name=&quot;GetBytes&quot; href=&quot;&quot;> </xref> 또는 <xref uid=&quot;langword_csharp_GetChars&quot; name=&quot;GetChars&quot; href=&quot;&quot;> </xref> 메서드가 반환 될 데이터에 대 한 제한 된 버퍼 크기 및 읽기 작업을 시작 하는 바이트 위치를 지정 합니다."
  remarks: "지정 하는 경우 `SequentialAccess`, 각 열을 읽이 필요 하지 않지만 반환 되는 열에서 읽을 해야 합니다. 더 이상 또는 해당 위치 앞에서 데이터를 읽을 수에서 반환 되는 데이터 스트림의 위치 이전 내용을 모두 읽은 `DataReader`합니다. 사용 하는 경우는 <xref:System.Data.OleDb.OleDbDataReader>를 읽을 때까지 현재 열 값을 다시 읽을 수 합니다. 지난</xref:System.Data.OleDb.OleDbDataReader> 사용 하는 경우는 <xref:System.Data.SqlClient.SqlDataReader>, 열 값을 한 번만 읽을 수 있습니다.</xref:System.Data.SqlClient.SqlDataReader>"
  syntax:
    content: SequentialAccess
    return:
      type: System.Data.CommandBehavior
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.CommandBehavior.SingleResult
  id: SingleResult
  parent: System.Data.CommandBehavior
  langs:
  - csharp
  name: SingleResult
  nameWithType: CommandBehavior.SingleResult
  fullName: System.Data.CommandBehavior.SingleResult
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "쿼리는 단일 결과 집합을 반환합니다."
  syntax:
    content: SingleResult
    return:
      type: System.Data.CommandBehavior
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.CommandBehavior.SingleRow
  id: SingleRow
  parent: System.Data.CommandBehavior
  langs:
  - csharp
  name: SingleRow
  nameWithType: CommandBehavior.SingleRow
  fullName: System.Data.CommandBehavior.SingleRow
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "쿼리는 첫 번째 결과 집합의 단일 행을 반환 해야 합니다. 쿼리 실행 데이터베이스 상태에 영향을 줄 수 있습니다. 일부.NET Framework 데이터 공급자, 수는 있지만 명령의 성능을 최적화 하기 위해이 정보를 사용 하지 않아도 됩니다. 와 SingleRow를 지정 하는 경우는 <xref:System.Data.OleDb.OleDbCommand.ExecuteReader*>의 메서드는 <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> 개체,.NET Framework Data Provider for OLE DB는 OLE DB를 사용 하 여 바인딩을 수행 <xref uid=&quot;langword_csharp_IRow&quot; name=&quot;IRow&quot; href=&quot;&quot;> </xref> 가능 하다 면 인터페이스.</xref:System.Data.OleDb.OleDbCommand.ExecuteReader*> 그렇지 않으면 사용 된 <xref uid=&quot;langword_csharp_IRowset&quot; name=&quot;IRowset&quot; href=&quot;&quot;> </xref> 인터페이스입니다. SQL 문에 단일 행만 반환 해야 하는 경우 SingleRow 지정도 성능을 향상 시킬 수 응용 프로그램입니다. 지정 하는 것이 불가능 <xref uid=&quot;langword_csharp_SingleRow&quot; name=&quot;SingleRow&quot; href=&quot;&quot;> </xref> 여러 결과 집합을 반환 하는 쿼리를 실행할 때.  이 경우 여기서 여러 결과 집합 SQL 쿼리와 단일 행 지정 된 경우 반환 되는 결과 첫 번째 결과 집합의 첫 번째 행만 포함 됩니다. 쿼리의 다른 결과 집합 반환 되지 않습니다."
  syntax:
    content: SingleRow
    return:
      type: System.Data.CommandBehavior
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Data.CommandBehavior.CloseConnection
  parent: System.Data.CommandBehavior
  isExternal: false
  name: CloseConnection
  nameWithType: CommandBehavior.CloseConnection
  fullName: System.Data.CommandBehavior.CloseConnection
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.CommandBehavior.Default
  parent: System.Data.CommandBehavior
  isExternal: false
  name: Default
  nameWithType: CommandBehavior.Default
  fullName: System.Data.CommandBehavior.Default
- uid: System.Data.CommandBehavior.KeyInfo
  parent: System.Data.CommandBehavior
  isExternal: false
  name: KeyInfo
  nameWithType: CommandBehavior.KeyInfo
  fullName: System.Data.CommandBehavior.KeyInfo
- uid: System.Data.CommandBehavior.SchemaOnly
  parent: System.Data.CommandBehavior
  isExternal: false
  name: SchemaOnly
  nameWithType: CommandBehavior.SchemaOnly
  fullName: System.Data.CommandBehavior.SchemaOnly
- uid: System.Data.CommandBehavior.SequentialAccess
  parent: System.Data.CommandBehavior
  isExternal: false
  name: SequentialAccess
  nameWithType: CommandBehavior.SequentialAccess
  fullName: System.Data.CommandBehavior.SequentialAccess
- uid: System.Data.CommandBehavior.SingleResult
  parent: System.Data.CommandBehavior
  isExternal: false
  name: SingleResult
  nameWithType: CommandBehavior.SingleResult
  fullName: System.Data.CommandBehavior.SingleResult
- uid: System.Data.CommandBehavior.SingleRow
  parent: System.Data.CommandBehavior
  isExternal: false
  name: SingleRow
  nameWithType: CommandBehavior.SingleRow
  fullName: System.Data.CommandBehavior.SingleRow
