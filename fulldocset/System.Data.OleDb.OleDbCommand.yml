### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbCommand
  id: OleDbCommand
  children:
  - System.Data.OleDb.OleDbCommand.#ctor
  - System.Data.OleDb.OleDbCommand.#ctor(System.String)
  - System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection)
  - System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)
  - System.Data.OleDb.OleDbCommand.Cancel
  - System.Data.OleDb.OleDbCommand.Clone
  - System.Data.OleDb.OleDbCommand.CommandText
  - System.Data.OleDb.OleDbCommand.CommandTimeout
  - System.Data.OleDb.OleDbCommand.CommandType
  - System.Data.OleDb.OleDbCommand.Connection
  - System.Data.OleDb.OleDbCommand.CreateDbParameter
  - System.Data.OleDb.OleDbCommand.CreateParameter
  - System.Data.OleDb.OleDbCommand.DbConnection
  - System.Data.OleDb.OleDbCommand.DbParameterCollection
  - System.Data.OleDb.OleDbCommand.DbTransaction
  - System.Data.OleDb.OleDbCommand.DesignTimeVisible
  - System.Data.OleDb.OleDbCommand.Dispose(System.Boolean)
  - System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  - System.Data.OleDb.OleDbCommand.ExecuteNonQuery
  - System.Data.OleDb.OleDbCommand.ExecuteReader
  - System.Data.OleDb.OleDbCommand.ExecuteReader(System.Data.CommandBehavior)
  - System.Data.OleDb.OleDbCommand.ExecuteScalar
  - System.Data.OleDb.OleDbCommand.Parameters
  - System.Data.OleDb.OleDbCommand.Prepare
  - System.Data.OleDb.OleDbCommand.ResetCommandTimeout
  - System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader
  - System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  - System.Data.OleDb.OleDbCommand.System#ICloneable#Clone
  - System.Data.OleDb.OleDbCommand.Transaction
  - System.Data.OleDb.OleDbCommand.UpdatedRowSource
  langs:
  - csharp
  name: OleDbCommand
  nameWithType: OleDbCommand
  fullName: System.Data.OleDb.OleDbCommand
  type: Class
  summary: "SQL 문 또는 데이터 원본에 대해 실행할 저장된 프로시저를 나타냅니다."
  remarks: "OleDbCommand의 인스턴스를 만들 때 읽기/쓰기 속성은 초기 값으로 설정 됩니다. 이러한 값의 목록이 OleDbCommand 생성자를 참조 하십시오.       OleDbCommand 기능 데이터 원본에서 명령을 실행 하는 다음 메서드: | 항목 | 설명 |   |----------|-----------------|   | <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>| 행을 반환 하는 명령을 실행 합니다.</xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>원하는 효과 사용 하는 경우에 없을 수 SQL SET 문과 같은 명령을 실행 합니다. |   | <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A>| SQL INSERT, DELETE, UPDATE 및 SET 문과 같은 명령을 실행 합니다. |   | <xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A>| 데이터베이스의 집계 값 등 단일 값을 검색 합니다. |       다시 설정할 수 있습니다는 <xref:System.Data.OleDb.OleDbCommand.CommandText%2A>속성 및 OleDbCommand 개체 다시 사용 합니다.</xref:System.Data.OleDb.OleDbCommand.CommandText%2A> </xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A> </xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A></xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> 그러나를 닫아야는 <xref:System.Data.OleDb.OleDbDataReader>전에 이전 또는 새 명령을 실행할 수 있습니다.</xref:System.Data.OleDb.OleDbDataReader>       심각한 <xref:System.Data.OleDb.OleDbException>(예: SQL Server 심각도 수준이 20 이상인 경우)는 OleDbCommand를 실행 하는 메서드에 의해 생성 되는 <xref:System.Data.OleDb.OleDbConnection>, 닫힐 수 있습니다.</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbException> 그러나 사용자는 다시 연결 하 고 계속할 수 있습니다."
  example:
  - "The following example uses the OleDbCommand, along <xref:System.Data.OleDb.OleDbDataAdapter> and <xref:System.Data.OleDb.OleDbConnection>, to select rows from an Access database. The filled <xref:System.Data.DataSet> is then returned. The example is passed an initialized <xref:System.Data.DataSet>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the source database table.  \n  \n [!code-cs[Classic WebData OleDbCommand Example#1](~/add/codesnippet/csharp/t-system.data.oledb.oled_9_1.cs)]\n [!code-vb[Classic WebData OleDbCommand Example#1](~/add/codesnippet/visualbasic/t-system.data.oledb.oled_9_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RecordsAffected")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem(true)]

      public sealed class OleDbCommand : System.Data.Common.DbCommand, ICloneable, IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommand
  implements:
  - System.ICloneable
  - System.IDisposable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteScalarAsync
  - System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  - System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: OleDbCommand()
  nameWithType: OleDbCommand.OleDbCommand()
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> 클래스입니다."
  remarks: "기본 생성자는 모든 필드를를 기본값으로 초기화합니다. 다음 표에서 <xref:System.Data.OleDb.OleDbCommand>안내 하십시오.</xref:System.Data.OleDb.OleDbCommand> 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 초기 값 |   |----------------|-------------------|   | <xref:System.Data.OleDb.OleDbCommand.CommandText%2A>| 빈 문자열 (&quot;&quot;) |   | <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|&30; |   | <xref:System.Data.OleDb.OleDbCommand.CommandType%2A>| `Text`|   | <xref:System.Data.OleDb.OleDbCommand.Connection%2A>|null|</xref:System.Data.OleDb.OleDbCommand.Connection%2A></xref:System.Data.OleDb.OleDbCommand.CommandType%2A></xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A></xref:System.Data.OleDb.OleDbCommand.CommandText%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OleDbCommand.OleDbCommand Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_21_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.OleDbCommand Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_21_1.vb)]"
  syntax:
    content: public OleDbCommand ();
    parameters: []
  overload: System.Data.OleDb.OleDbCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: OleDbCommand(String)
  nameWithType: OleDbCommand.OleDbCommand(String)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> 쿼리 텍스트와 함께 클래스입니다."
  remarks: "다음 표에서 <xref:System.Data.OleDb.OleDbCommand>안내 하십시오.</xref:System.Data.OleDb.OleDbCommand> 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 초기 값 |   |----------------|-------------------|   | <xref:System.Data.OleDb.OleDbCommand.CommandText%2A>| `cmdText`|   | <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|&30; |   | <xref:System.Data.IDbCommand.CommandType%2A>| `Text`|   | <xref:System.Data.OleDb.OleDbCommand.Connection%2A>|null|</xref:System.Data.OleDb.OleDbCommand.Connection%2A></xref:System.Data.IDbCommand.CommandType%2A></xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A></xref:System.Data.OleDb.OleDbCommand.CommandText%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OleDbCommand.OleDbCommand1 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_19_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.OleDbCommand1 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_19_1.vb)]"
  syntax:
    content: public OleDbCommand (string cmdText);
    parameters:
    - id: cmdText
      type: System.String
      description: "쿼리 텍스트입니다."
  overload: System.Data.OleDb.OleDbCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection)
  id: '#ctor(System.String,System.Data.OleDb.OleDbConnection)'
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: OleDbCommand(String,OleDbConnection)
  nameWithType: OleDbCommand.OleDbCommand(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String,OleDbConnection)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> 쿼리 텍스트와 함께 클래스 및 <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref>합니다."
  remarks: "다음 표에서 <xref:System.Data.OleDb.OleDbCommand>안내 하십시오.</xref:System.Data.OleDb.OleDbCommand> 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 초기 값 |   |----------------|-------------------|   | <xref:System.Data.OleDb.OleDbCommand.CommandText%2A>| `cmdText`|   | <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|&30; |   | <xref:System.Data.IDbCommand.CommandType%2A>| `Text`|   | <xref:System.Data.OleDb.OleDbCommand.Connection%2A>| 새 <xref:System.Data.OleDb.OleDbConnection>하는 값에 대 한는 `connection` 매개 변수입니다. |       관련된 속성을 설정 하 여 이러한 매개 변수 중 하나에 대 한 값을 변경할 수 있습니다.</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbCommand.Connection%2A> </xref:System.Data.IDbCommand.CommandType%2A> </xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> </xref:System.Data.OleDb.OleDbCommand.CommandText%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbCommand.OleDbCommand2 Example#1](~/add/codesnippet/visualbasic/26f0a1c0-3abd-4fd3-81fd-_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.OleDbCommand2 Example#1](~/add/codesnippet/csharp/26f0a1c0-3abd-4fd3-81fd-_1.cs)]"
  syntax:
    content: public OleDbCommand (string cmdText, System.Data.OleDb.OleDbConnection connection);
    parameters:
    - id: cmdText
      type: System.String
      description: "쿼리 텍스트입니다."
    - id: connection
      type: System.Data.OleDb.OleDbConnection
      description: "<xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> 데이터 원본에 대 한 연결을 나타내는입니다."
  overload: System.Data.OleDb.OleDbCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)
  id: '#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)'
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: OleDbCommand(String,OleDbConnection,OleDbTransaction)
  nameWithType: OleDbCommand.OleDbCommand(String,OleDbConnection,OleDbTransaction)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String,OleDbConnection,OleDbTransaction)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> 쿼리 텍스트와 함께 클래스는 <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref>, 및 <xref:System.Data.OleDb.OleDbCommand.Transaction*>.</xref:System.Data.OleDb.OleDbCommand.Transaction*>"
  remarks: "다음 표에서 <xref:System.Data.OleDb.OleDbCommand>안내 하십시오.</xref:System.Data.OleDb.OleDbCommand> 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 초기 값 |   |----------------|-------------------|   | <xref:System.Data.OleDb.OleDbCommand.CommandText%2A>| `cmdText`|   | <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|&30; |   | <xref:System.Data.IDbCommand.CommandType%2A>| `Text`|   | <xref:System.Data.OleDb.OleDbCommand.Connection%2A>| 새 <xref:System.Data.OleDb.OleDbConnection>하는 값에 대 한는 `connection` 매개 변수입니다. |       관련된 속성을 설정 하 여 이러한 매개 변수 중 하나에 대 한 값을 변경할 수 있습니다.</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbCommand.Connection%2A> </xref:System.Data.IDbCommand.CommandType%2A> </xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> </xref:System.Data.OleDb.OleDbCommand.CommandText%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OleDbCommand.OleDbCommand3#1](~/add/codesnippet/csharp/e97c7061-6e79-4e9b-b76e-_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.OleDbCommand3#1](~/add/codesnippet/visualbasic/e97c7061-6e79-4e9b-b76e-_1.vb)]"
  syntax:
    content: public OleDbCommand (string cmdText, System.Data.OleDb.OleDbConnection connection, System.Data.OleDb.OleDbTransaction transaction);
    parameters:
    - id: cmdText
      type: System.String
      description: "쿼리 텍스트입니다."
    - id: connection
      type: System.Data.OleDb.OleDbConnection
      description: "<xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> 데이터 원본에 대 한 연결을 나타내는입니다."
    - id: transaction
      type: System.Data.OleDb.OleDbTransaction
      description: "트랜잭션은 <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> 실행 합니다."
  overload: System.Data.OleDb.OleDbCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Cancel
  id: Cancel
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Cancel()
  nameWithType: OleDbCommand.Cancel()
  fullName: System.Data.OleDb.OleDbCommand.Cancel()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "실행을 취소 하려고 한 <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref>합니다."
  remarks: "가 취소할 경우 아무 동작도 발생 합니다. 그러나 처리 중인 명령을 취소 동작이 실패 하는 경우 예외가 생성 되지 않습니다."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand>, executes it, and then cancels the execution. To accomplish this, the method is passed a string that is an SQL SELECT statement and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData OleDbCommand.Cancel Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_0_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.Cancel Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_0_1.vb)]"
  syntax:
    content: public override void Cancel ();
    parameters: []
  overload: System.Data.OleDb.OleDbCommand.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Clone
  id: Clone
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Clone()
  nameWithType: OleDbCommand.Clone()
  fullName: System.Data.OleDb.OleDbCommand.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "새 <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> 현재 인스턴스의 복사본 인 개체입니다."
  syntax:
    content: public System.Data.OleDb.OleDbCommand Clone ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "새 <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> 이 인스턴스의 복사본 인 개체입니다."
  overload: System.Data.OleDb.OleDbCommand.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.CommandText
  id: CommandText
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: CommandText
  nameWithType: OleDbCommand.CommandText
  fullName: System.Data.OleDb.OleDbCommand.CommandText
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "SQL 문 또는 저장된 프로시저는 데이터 소스에서 실행 값을 가져오거나 설정 합니다."
  remarks: "경우는 <xref:System.Data.OleDb.OleDbCommand.CommandType%2A>속성이 `StoredProcedure`, <xref:System.Data.OleDb.OleDbCommand.CommandType%2A>저장된 프로시저의 이름으로 속성을 설정 해야 합니다.</xref:System.Data.OleDb.OleDbCommand.CommandType%2A> </xref:System.Data.OleDb.OleDbCommand.CommandType%2A> 사용자는 저장된 프로시저 이름에 특수 문자가 포함 되어 있는 경우 이스케이프 문자 구문을 사용 하는 데 필요한 수 있습니다. 명령 중 하나를 호출 하는 경우이 저장된 프로시저가 실행 된 `Execute` 메서드.       때 <xref:System.Data.OleDb.OleDbCommand.CommandType%2A>로 설정 된 `TableDirect`, <xref:System.Data.OleDb.OleDbCommand.CommandType%2A>속성에 설정할 테이블 또는 테이블의 이름에 액세스할 수 있습니다.</xref:System.Data.OleDb.OleDbCommand.CommandType%2A> </xref:System.Data.OleDb.OleDbCommand.CommandType%2A> 사용자는 명명된 된 테이블에 특수 문자가 포함 되어 있으면 이스케이프 문자 구문을 사용 하는 데 필요한 수 있습니다. 모든 행과 명명 된 테이블 또는 테이블의 열 중 하나를 호출 하는 경우 반환 될 됩니다는 `Execute` 메서드.       설정할 수 없습니다.는 <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, <xref:System.Data.OleDb.OleDbCommand.CommandType%2A>, 및 CommandText 속성은 현재 연결 execute 또는 인출 작업을 수행 하는 경우.</xref:System.Data.OleDb.OleDbCommand.CommandType%2A> </xref:System.Data.OleDb.OleDbCommand.Connection%2A>       OLE DB.NET 공급자가 SQL 문 또는 저장된 프로시저에 의해 호출에 매개 변수 전달에 대 한 명명 된 매개 변수를 지원 하지는 <xref:System.Data.OleDb.OleDbCommand>때 <xref:System.Data.OleDb.OleDbCommand.CommandType%2A>로 설정 된 `Text`.</xref:System.Data.OleDb.OleDbCommand.CommandType%2A> </xref:System.Data.OleDb.OleDbCommand> 이 경우 물음표 (?) 자리 표시자를 사용 해야 합니다. 예를 들어: `SELECT * FROM Customers WHERE CustomerID = ?` 순서를 따라서 <xref:System.Data.OleDb.OleDbParameter>개체에 추가 됩니다는 <xref:System.Data.OleDb.OleDbParameterCollection>매개 변수에 물음표 자리 표시자의 위치와 직접 일치 해야 합니다.</xref:System.Data.OleDb.OleDbParameterCollection> </xref:System.Data.OleDb.OleDbParameter>       자세한 내용은 참조 [구성 매개 변수 및 매개 변수 데이터 형식](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbCommand.CommandText Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_11_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.CommandText Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_11_1.cs)]"
  syntax:
    content: public override string CommandText { get; set; }
    return:
      type: System.String
      description: "SQL 문 또는 저장된 프로시저를 실행 합니다. 기본값은 빈 문자열입니다."
  overload: System.Data.OleDb.OleDbCommand.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.CommandTimeout
  id: CommandTimeout
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: CommandTimeout
  nameWithType: OleDbCommand.CommandTimeout
  fullName: System.Data.OleDb.OleDbCommand.CommandTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "명령을 실행 하는 시도 종료 하 고 오류를 생성 하기 전 대기 시간을 가져오거나 설정 합니다."
  remarks: "값이 0은 제한 없음을 나타냄 있으며 명령을 실행 하려고는 무기한 대기 하기 때문에 CommandTimeout의 피해 야 합니다."
  syntax:
    content: public override int CommandTimeout { get; set; }
    return:
      type: System.Int32
      description: "시간 (초) 명령이 실행 될 때까지 기다려야 합니다. 기본값은 30초입니다."
  overload: System.Data.OleDb.OleDbCommand.CommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.CommandType
  id: CommandType
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: CommandType
  nameWithType: OleDbCommand.CommandType
  fullName: System.Data.OleDb.OleDbCommand.CommandType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "표시 하는 값을 가져오거나 설정 합니다. 방법을 <xref:System.Data.OleDb.OleDbCommand.CommandText*>속성을 해석 합니다.</xref:System.Data.OleDb.OleDbCommand.CommandText*>"
  remarks: "CommandType 속성을 설정 하면 `StoredProcedure`를 설정 해야는 <xref:System.Data.OleDb.OleDbCommand.CommandText%2A>속성을 저장된 프로시저의 이름입니다.</xref:System.Data.OleDb.OleDbCommand.CommandText%2A> Execute 메서드 중 하나를 호출 하면이 저장된 프로시저를 실행 하는 명령입니다.       <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, CommandType 및 <xref:System.Data.OleDb.OleDbCommand.CommandText%2A>현재 연결 execute 또는 인출 작업을 수행 하는 경우 속성을 설정할 수 없습니다.</xref:System.Data.OleDb.OleDbCommand.CommandText%2A> </xref:System.Data.OleDb.OleDbCommand.Connection%2A>       OLE DB.NET 공급자는 SQL 문 또는 저장된 프로시저에 의해 호출에 매개 변수 전달에 대 한 명명 된 매개 변수를 지원 하지는 <xref:System.Data.OleDb.OleDbCommand>CommandType 텍스트로 설정 된 경우.</xref:System.Data.OleDb.OleDbCommand> 이 경우 물음표 (?) 자리 표시자를 사용 해야 합니다. 예를 들어: `SELECT * FROM Customers WHERE CustomerID = ?` 순서를 따라서 <xref:System.Data.OleDb.OleDbParameter>개체에 추가 됩니다는 <xref:System.Data.OleDb.OleDbParameterCollection>매개 변수에 물음표 자리 표시자의 위치와 직접 일치 해야 합니다.</xref:System.Data.OleDb.OleDbParameterCollection> </xref:System.Data.OleDb.OleDbParameter> 자세한 내용은 참조 [구성 매개 변수 및 매개 변수 데이터 형식](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public override System.Data.CommandType CommandType { get; set; }
    return:
      type: System.Data.CommandType
      description: "CommandType 값 중 하나입니다. 기본값은 Text입니다."
  overload: System.Data.OleDb.OleDbCommand.CommandType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "값이 유효한 CommandType 아닙니다."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Connection
  id: Connection
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Connection
  nameWithType: OleDbCommand.Connection
  fullName: System.Data.OleDb.OleDbCommand.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "가져오거나는 <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> 의이 인스턴스에서 사용 되는 <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref>합니다."
  remarks: "연결을 설정할 수 없습니다 <xref:System.Data.OleDb.OleDbCommand.CommandType%2A>및 <xref:System.Data.OleDb.OleDbCommand.CommandText%2A>속성은 현재 연결 execute 또는 인출 작업을 수행 하는 경우.</xref:System.Data.OleDb.OleDbCommand.CommandText%2A> </xref:System.Data.OleDb.OleDbCommand.CommandType%2A>       트랜잭션을 진행 중인 동안 연결을 설정 하는 경우와 <xref:System.Data.OleDb.OleDbCommand.Transaction%2A>속성이 null이 아니면는 <xref:System.InvalidOperationException>생성 됩니다.</xref:System.InvalidOperationException> </xref:System.Data.OleDb.OleDbCommand.Transaction%2A> 경우는 <xref:System.Data.OleDb.OleDbCommand.Transaction%2A>속성이 null이 아니고 트랜잭션이 이미 커밋 또는 롤백된 경우 <xref:System.Data.OleDb.OleDbCommand.Transaction%2A>설정 되어 null로.</xref:System.Data.OleDb.OleDbCommand.Transaction%2A> </xref:System.Data.OleDb.OleDbCommand.Transaction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbCommand.Connection Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_0_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.Connection Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_0_1.cs)]"
  syntax:
    content: public System.Data.OleDb.OleDbConnection Connection { get; set; }
    return:
      type: System.Data.OleDb.OleDbConnection
      description: "데이터 원본에 연결 합니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.OleDb.OleDbCommand.Connection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "트랜잭션을 진행 중인 동안 연결 속성이 변경 되었습니다."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.CreateDbParameter
  id: CreateDbParameter
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: CreateDbParameter()
  nameWithType: OleDbCommand.CreateDbParameter()
  fullName: System.Data.OleDb.OleDbCommand.CreateDbParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbParameter CreateDbParameter ();
    parameters: []
    return:
      type: System.Data.Common.DbParameter
      description: "추가할 수 있습니다."
  overload: System.Data.OleDb.OleDbCommand.CreateDbParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.CreateParameter
  id: CreateParameter
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: CreateParameter()
  nameWithType: OleDbCommand.CreateParameter()
  fullName: System.Data.OleDb.OleDbCommand.CreateParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.Data.OleDb.OleDbParameter&quot;> </xref> 개체입니다."
  remarks: "CreateParameter 방법은 <xref:System.Data.IDbCommand.CreateParameter%2A>.</xref:System.Data.IDbCommand.CreateParameter%2A> 의 강력한 형식의 버전입니다."
  syntax:
    content: public System.Data.OleDb.OleDbParameter CreateParameter ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbParameter
      description: "<xref href=&quot;System.Data.OleDb.OleDbParameter&quot;> </xref> 개체입니다."
  overload: System.Data.OleDb.OleDbCommand.CreateParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.DbConnection
  id: DbConnection
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: DbConnection
  nameWithType: OleDbCommand.DbConnection
  fullName: System.Data.OleDb.OleDbCommand.DbConnection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbConnection DbConnection { get; set; }
    return:
      type: System.Data.Common.DbConnection
      description: "추가할 수 있습니다."
  overload: System.Data.OleDb.OleDbCommand.DbConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.DbParameterCollection
  id: DbParameterCollection
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: DbParameterCollection
  nameWithType: OleDbCommand.DbParameterCollection
  fullName: System.Data.OleDb.OleDbCommand.DbParameterCollection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }
    return:
      type: System.Data.Common.DbParameterCollection
      description: "추가할 수 있습니다."
  overload: System.Data.OleDb.OleDbCommand.DbParameterCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.DbTransaction
  id: DbTransaction
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: DbTransaction
  nameWithType: OleDbCommand.DbTransaction
  fullName: System.Data.OleDb.OleDbCommand.DbTransaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbTransaction DbTransaction { get; set; }
    return:
      type: System.Data.Common.DbTransaction
      description: "추가할 수 있습니다."
  overload: System.Data.OleDb.OleDbCommand.DbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.DesignTimeVisible
  id: DesignTimeVisible
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: DesignTimeVisible
  nameWithType: OleDbCommand.DesignTimeVisible
  fullName: System.Data.OleDb.OleDbCommand.DesignTimeVisible
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "명령 개체를 사용자 지정된 Windows Forms 디자이너 컨트롤에 표시 되어야 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public override bool DesignTimeVisible { get; set; }
    return:
      type: System.Boolean
      description: "명령 개체를 컨트롤에 표시 되어야 하는지 여부를 나타내는 값입니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.OleDb.OleDbCommand.DesignTimeVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OleDbCommand.Dispose(Boolean)
  fullName: System.Data.OleDb.OleDbCommand.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "추가할 수 있습니다."
  overload: System.Data.OleDb.OleDbCommand.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  id: ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: OleDbCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "추가할 수 있습니다."
    return:
      type: System.Data.Common.DbDataReader
      description: "추가할 수 있습니다."
  overload: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ExecuteNonQuery
  id: ExecuteNonQuery
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ExecuteNonQuery()
  nameWithType: OleDbCommand.ExecuteNonQuery()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "에 대해 SQL 문을 실행은 <xref:System.Data.OleDb.OleDbCommand.Connection*>영향을 받는 행 수를 반환 합니다.</xref:System.Data.OleDb.OleDbCommand.Connection*>"
  remarks: "예를 들어 카탈로그 작업을 수행 하려면, 데이터베이스의 구조를 쿼리할 수 또는 테이블과 같은 데이터베이스 개체를 만들 수 또는 사용 하지 않고 데이터베이스의 데이터를 변경 하려면는 ExecuteNonQuery를 사용할 수는 <xref:System.Data.DataSet>UPDATE, INSERT 또는 DELETE 문을 실행 하 여.</xref:System.Data.DataSet>       ExecuteNonQuery 행을 반환 하지만 모든 출력 매개 변수 또는 반환 값 매개 변수에 매핑된 데이터로 채워집니다.       UPDATE, INSERT 및 DELETE 문에 대 한 반환 값은 명령에 의해 영향을 받는 행 수입니다. 문의 다른 모든 형식에 대 한 반환 값은-1입니다. 롤백이 발생 하는 경우 반환 값-1 이기도 합니다."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and then executes it using ExecuteNonQuery. The example is passed a string that is an SQL statement such as UPDATE, INSERT, or DELETE, and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_5_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_5_1.vb)]"
  syntax:
    content: public override int ExecuteNonQuery ();
    parameters: []
    return:
      type: System.Int32
      description: "영향을 받는 행 수입니다."
  overload: System.Data.OleDb.OleDbCommand.ExecuteNonQuery*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "연결이 존재 하지 않습니다.       -또는-는 연결이 열려 있지 않습니다.       -또는-는 연결 원래 참여 컨텍스트를 다른 트랜잭션 컨텍스트 내에서 명령을 실행할 수 없습니다."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ExecuteReader
  id: ExecuteReader
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ExecuteReader()
  nameWithType: OleDbCommand.ExecuteReader()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "보냅니다는 <> </> *>에 <> </> *>와 빌드는 <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref>합니다."
  remarks: "경우는 <xref:System.Data.OleDb.OleDbCommand.CommandType%2A>속성이 `StoredProcedure`, <xref:System.Data.OleDb.OleDbCommand.CommandText%2A>저장된 프로시저의 이름으로 속성을 설정 해야 합니다.</xref:System.Data.OleDb.OleDbCommand.CommandText%2A> </xref:System.Data.OleDb.OleDbCommand.CommandType%2A> ExecuteReader를 호출 하는 경우이 저장된 프로시저를 실행 하는 명령입니다.       닫기 전에 <xref:System.Data.OleDb.OleDbConnection>, 먼저 닫습니다는 <xref:System.Data.OleDb.OleDbDataReader>개체입니다.</xref:System.Data.OleDb.OleDbDataReader> </xref:System.Data.OleDb.OleDbConnection> 또한 닫아야는 <xref:System.Data.OleDb.OleDbDataReader>다시 사용 하려는 경우 개체는 <xref:System.Data.OleDb.OleDbCommand>개체입니다.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbDataReader>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData OleDbCommand.ExecuteReader1 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_11_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.ExecuteReader1 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_11_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbDataReader ExecuteReader ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "<xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> 개체입니다."
  overload: System.Data.OleDb.OleDbCommand.ExecuteReader*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "연결 원래 참여 컨텍스트를 다른 트랜잭션 컨텍스트 내에서 명령을 실행할 수 없습니다."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ExecuteReader(System.Data.CommandBehavior)
  id: ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ExecuteReader(CommandBehavior)
  nameWithType: OleDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "보냅니다는 <> </> *>에 <> </> *>, 및 빌드는 <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> 중 하나를 사용 하는 <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> 값입니다."
  remarks: "지정 하는 경우 <xref:System.Data.CommandBehavior>와 <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>의 메서드는 <xref:System.Data.OleDb.OleDbCommand>개체,.NET Framework Data Provider for OLE DB는 OLE DB를 사용 하 여 바인딩을 수행 **IRow** 가능 하다 면 인터페이스.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> </xref:System.Data.CommandBehavior> 그렇지 않으면 사용 된 **IRowset** 인터페이스입니다. SQL 문에 단일 행만 반환 해야 하는 경우 지정 <xref:System.Data.CommandBehavior>또한 응용 프로그램 성능을 향상 시킬 수 있습니다.</xref:System.Data.CommandBehavior>       경우는 <xref:System.Data.OleDb.OleDbCommand.CommandType%2A>속성이 `StoredProcedure`, <xref:System.Data.OleDb.OleDbCommand.CommandText%2A>저장된 프로시저의 이름으로 속성을 설정 해야 합니다.</xref:System.Data.OleDb.OleDbCommand.CommandText%2A> </xref:System.Data.OleDb.OleDbCommand.CommandType%2A> 명령이 <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>.</xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> 를 호출 하는 경우이 저장된 프로시저 실행       <xref:System.Data.OleDb.OleDbDataReader>크기가 큰 이진 값를 효율적으로 읽을 수 있는 특별 한 모드를 지원 합니다.</xref:System.Data.OleDb.OleDbDataReader> 자세한 내용은 참조는 `SequentialAccess` <xref:System.Data.CommandBehavior>.</xref:System.Data.CommandBehavior> 에 대 한 설정       닫기 전에 <xref:System.Data.OleDb.OleDbConnection>, 먼저 닫습니다는 <xref:System.Data.OleDb.OleDbDataReader>개체입니다.</xref:System.Data.OleDb.OleDbDataReader> </xref:System.Data.OleDb.OleDbConnection> 또한 닫아야는 <xref:System.Data.OleDb.OleDbDataReader>다시 사용 하려는 경우 개체는 <xref:System.Data.OleDb.OleDbCommand>개체입니다.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbDataReader> 경우는 <xref:System.Data.OleDb.OleDbDataReader>사용 하 여 만든 <xref:System.Data.CommandBehavior>로 설정 `CloseConnection`닫는는 <xref:System.Data.OleDb.OleDbDataReader>연결을 자동으로 닫힙니다.</xref:System.Data.OleDb.OleDbDataReader> </xref:System.Data.CommandBehavior> </xref:System.Data.OleDb.OleDbDataReader>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source. <xref:System.Data.CommandBehavior> is set to <xref:System.Data.CommandBehavior>.  \n  \n [!code-vb[Classic WebData OleDbCommand.ExecuteReader2#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_2_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.ExecuteReader2#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_2_1.cs)]"
  syntax:
    content: public System.Data.OleDb.OleDbDataReader ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "중 하나는 <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> 값입니다."
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "<xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> 개체입니다."
  overload: System.Data.OleDb.OleDbCommand.ExecuteReader*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "연결 원래 참여 컨텍스트를 다른 트랜잭션 컨텍스트 내에서 명령을 실행할 수 없습니다."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ExecuteScalar
  id: ExecuteScalar
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ExecuteScalar()
  nameWithType: OleDbCommand.ExecuteScalar()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteScalar()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "쿼리를 실행 하 고 쿼리에서 반환 된 결과 집합의 첫 번째 행의 첫 번째 열을 반환 합니다. 다른 열 이나 행은 무시 됩니다."
  remarks: "데이터 원본에서 집계 값을 단일 값을 검색 하려면 ExecuteScalar 메서드를 사용 합니다. 이렇게 하려면 <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> <xref:System.Data.OleDb.OleDbDataReader>.</xref:System.Data.OleDb.OleDbDataReader> 반환 되는 데이터를 사용 하 여 다음 하는 단일 값을 생성 하는 데 필요한 작업을 수행 하 고 메서드를</xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> 사용 하 여 보다 적은 코드가 필요       다음 C# 예제와 같이 일반적인 ExecuteScalar 쿼리 서식을 지정할 수 있습니다.```   CommandText = &quot;SELECT COUNT(*) FROM region&quot;;   Int32 count = (int32) ExecuteScalar();   ```"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and then executes it using ExecuteScalar. The example is passed a string that is an SQL statement that returns an aggregate result, and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData OleDbCommand.ExecuteScalar#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_8_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.ExecuteScalar#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_8_1.vb)]"
  syntax:
    content: public override object ExecuteScalar ();
    parameters: []
    return:
      type: System.Object
      description: "결과의 첫 번째 행의 첫 번째 열이 설정 되었거나 null 참조 결과 집합이 비어 있습니다."
  overload: System.Data.OleDb.OleDbCommand.ExecuteScalar*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "연결 원래 참여 컨텍스트를 다른 트랜잭션 컨텍스트 내에서 명령을 실행할 수 없습니다."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Parameters
  id: Parameters
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Parameters
  nameWithType: OleDbCommand.Parameters
  fullName: System.Data.OleDb.OleDbCommand.Parameters
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Gets the <xref href=&quot;System.Data.OleDb.OleDbParameterCollection&quot;></xref>."
  remarks: "OLE DB.NET 공급자는 SQL 문 또는 저장된 프로시저에 의해 호출에 매개 변수 전달에 대 한 명명 된 매개 변수를 지원 하지는 <xref:System.Data.OleDb.OleDbCommand>때 <xref:System.Data.OleDb.OleDbCommand.CommandType%2A>로 설정 된 `Text`.</xref:System.Data.OleDb.OleDbCommand.CommandType%2A> </xref:System.Data.OleDb.OleDbCommand> 이 경우 물음표 (?) 자리 표시자를 사용 해야 합니다. 예를 들어: `SELECT * FROM Customers WHERE CustomerID = ?` 순서를 따라서 <xref:System.Data.OleDb.OleDbParameter>개체에 추가 됩니다는 <xref:System.Data.OleDb.OleDbParameterCollection>명령 텍스트에서 매개 변수에 물음표 자리 표시자의 위치와 직접 일치 해야 합니다.</xref:System.Data.OleDb.OleDbParameterCollection> </xref:System.Data.OleDb.OleDbParameter>      > [!NOTE] > 컬렉션의 매개 변수를 실행 하면 쿼리의 요구 사항을 일치 하지 않으면 오류가 발생할 수 있습니다.       자세한 내용은 참조 [구성 매개 변수 및 매개 변수 데이터 형식](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and displays its parameters. To accomplish this, the method is passed an <xref:System.Data.OleDb.OleDbConnection>, a query string that is an SQL SELECT statement, and an array of <xref:System.Data.OleDb.OleDbParameter> objects.  \n  \n [!code-vb[Classic WebData OleDbCommand.Parameters Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_18_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.Parameters Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_18_1.cs)]"
  syntax:
    content: public System.Data.OleDb.OleDbParameterCollection Parameters { get; }
    return:
      type: System.Data.OleDb.OleDbParameterCollection
      description: "SQL 문 또는 저장된 프로시저의 매개 변수입니다. 기본값은 빈 컬렉션입니다."
  overload: System.Data.OleDb.OleDbCommand.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Prepare
  id: Prepare
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Prepare()
  nameWithType: OleDbCommand.Prepare()
  fullName: System.Data.OleDb.OleDbCommand.Prepare()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "데이터 원본에 명령의 준비 된 (또는 컴파일된) 버전을 만듭니다."
  remarks: "경우는 <xref:System.Data.OleDb.OleDbCommand.CommandType%2A>속성이 `TableDirect`, 준비는 아무 작업도 수행 합니다.</xref:System.Data.OleDb.OleDbCommand.CommandType%2A> 경우 <xref:System.Data.OleDb.OleDbCommand.CommandType%2A>로 설정 된 `StoredProcedure`, 아니요-운영 나타날 수 있지만 준비에 대 한 호출 성공 해야</xref:System.Data.OleDb.OleDbCommand.CommandType%2A>       준비를 호출 하기 전에 준비 해야 할 문의 각 매개 변수의 데이터 형식을 지정 합니다. 가변 길이 데이터 형식의 각 매개 변수에 대해 설정 해야 합니다는 **크기** 속성을 최대 크기로 필요 합니다. 준비 이러한 조건이 충족 되지 않는 오류를 반환 합니다.       호출 하는 경우는 `Execute` 메서드 모든 매개 변수 값을 준비 하는 호출한 후에 지정 된 값 보다 크면는 **크기** 속성 자동으로 매개 변수의 원래 지정 된 크기로 잘리고 잘림 오류가 반환 되지 않습니다.       출력 매개 변수 (준비) 여부는 사용자 지정 데이터 형식이 있어야 합니다. 최대 가변 길이 데이터 형식 지정도 지정 해야 **크기**합니다."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and opens the connection. The example then prepares a stored procedure on the data source by passing a string that is an SQL SELECT statement and a string to use to connect to the data source.  \n  \n [!code-vb[Classic WebData OleDbCommand.Prepare Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_26_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.Prepare Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_26_1.cs)]"
  syntax:
    content: public override void Prepare ();
    parameters: []
  overload: System.Data.OleDb.OleDbCommand.Prepare*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> 설정 되지 않았습니다.       -또는- <> </> *> 열려 있지 않습니다."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ResetCommandTimeout
  id: ResetCommandTimeout
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ResetCommandTimeout()
  nameWithType: OleDbCommand.ResetCommandTimeout()
  fullName: System.Data.OleDb.OleDbCommand.ResetCommandTimeout()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "다시 설정 된 <xref:System.Data.OleDb.OleDbCommand.CommandTimeout*>속성의 기본값을.</xref:System.Data.OleDb.OleDbCommand.CommandTimeout*>"
  remarks: "기본값은 <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>30 초입니다.</xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>"
  syntax:
    content: public void ResetCommandTimeout ();
    parameters: []
  overload: System.Data.OleDb.OleDbCommand.ResetCommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader
  id: System#Data#IDbCommand#ExecuteReader
  isEii: true
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: System.Data.IDbCommand.ExecuteReader()
  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader()
  fullName: System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Data.IDbCommand.ExecuteReader%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.OleDb.OleDbCommand>인스턴스로 캐스팅 되는 <xref:System.Data.IDbCommand>인터페이스.</xref:System.Data.IDbCommand> </xref:System.Data.OleDb.OleDbCommand>"
  syntax:
    content: System.Data.IDataReader IDbCommand.ExecuteReader ();
    parameters: []
    return:
      type: System.Data.IDataReader
      description: "<xref href=&quot;System.Data.IDataReader&quot;> </xref> 개체입니다."
  overload: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  id: System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  isEii: true
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "실행의 <> </> *>에 대해는 <> </> *>, 및 빌드는 <xref href=&quot;System.Data.IDataReader&quot;> </xref> 중 하나를 사용 하 여는 <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> 값입니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.OleDb.OleDbCommand>인스턴스로 캐스팅 되는 <xref:System.Data.IDbCommand>인터페이스.</xref:System.Data.IDbCommand> </xref:System.Data.OleDb.OleDbCommand>       이 멤버에 대 한 참조 <xref:System.Data.IDbCommand.ExecuteReader%2A>.</xref:System.Data.IDbCommand.ExecuteReader%2A>"
  syntax:
    content: System.Data.IDataReader IDbCommand.ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "중 하나는 <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> 값입니다."
    return:
      type: System.Data.IDataReader
      description: "<xref href=&quot;System.Data.IDataReader&quot;> </xref> 중 하나를 사용 하 여 작성 된 <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> 값입니다."
  overload: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OleDbCommand.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbCommand.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "이 멤버에 대 한 참조 &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.OleDb.OleDbCommand>인스턴스로 캐스팅 되는 <xref:System.ICloneable>인터페이스.</xref:System.ICloneable> </xref:System.Data.OleDb.OleDbCommand>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "새 <xref:System.Object>이 인스턴스의 복사본입니다.</xref:System.Object>"
  overload: System.Data.OleDb.OleDbCommand.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Transaction
  id: Transaction
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Transaction
  nameWithType: OleDbCommand.Transaction
  fullName: System.Data.OleDb.OleDbCommand.Transaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "가져오거나는 <xref href=&quot;System.Data.OleDb.OleDbTransaction&quot;> </xref> 는 <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> 실행 합니다."
  remarks: "특정 값으로 이미 설정 되어 있으며 명령을 실행 중 경우 트랜잭션 속성을 설정할 수 없습니다. 트랜잭션 속성을 설정 하는 경우는 <xref:System.Data.OleDb.OleDbTransaction>동일 하 게 연결 되어 있지 않은 개체 <xref:System.Data.OleDb.OleDbConnection>로 <xref:System.Data.OleDb.OleDbCommand>개체, 문을 실행 하려고 하면 다음에 예외가 발생 합니다.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbTransaction>"
  syntax:
    content: public System.Data.OleDb.OleDbTransaction Transaction { get; set; }
    return:
      type: System.Data.OleDb.OleDbTransaction
      description: "The <xref href=&quot;System.Data.OleDb.OleDbTransaction&quot;></xref>. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.OleDb.OleDbCommand.Transaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.UpdatedRowSource
  id: UpdatedRowSource
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: UpdatedRowSource
  nameWithType: OleDbCommand.UpdatedRowSource
  fullName: System.Data.OleDb.OleDbCommand.UpdatedRowSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "명령 결과가 적용 되는 방식을 가져오거나는 <xref href=&quot;System.Data.DataRow&quot;> </xref> 에서 사용 하는 경우는 <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref> 의 메서드는 <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref>합니다."
  remarks: "명령이 자동으로 생성 하지 않는 한 UpdatedRowSource 기본값은 Both (과 마찬가지로 <xref:System.Data.OleDb.OleDbCommandBuilder>),이 경우 기본값은 None입니다.</xref:System.Data.OleDb.OleDbCommandBuilder>       UpdatedRowSource 속성을 사용 하는 방법에 대 한 자세한 내용은 참조 [DataAdapter 매개 변수](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }
    return:
      type: System.Data.UpdateRowSource
      description: "중 하나는 <xref href=&quot;System.Data.UpdateRowSource&quot;> </xref> 값입니다."
  overload: System.Data.OleDb.OleDbCommand.UpdatedRowSource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "입력 한 값 중 하나 였습니다는 <xref href=&quot;System.Data.UpdateRowSource&quot;> </xref> 값입니다."
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.Common.DbCommand
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.OleDb.OleDbCommand.#ctor
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: OleDbCommand()
  nameWithType: OleDbCommand.OleDbCommand()
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand()
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: OleDbCommand(String)
  nameWithType: OleDbCommand.OleDbCommand(String)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: OleDbCommand(String,OleDbConnection)
  nameWithType: OleDbCommand.OleDbCommand(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String,OleDbConnection)
- uid: System.Data.OleDb.OleDbConnection
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbConnection
  nameWithType: OleDbConnection
  fullName: System.Data.OleDb.OleDbConnection
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: OleDbCommand(String,OleDbConnection,OleDbTransaction)
  nameWithType: OleDbCommand.OleDbCommand(String,OleDbConnection,OleDbTransaction)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String,OleDbConnection,OleDbTransaction)
- uid: System.Data.OleDb.OleDbTransaction
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbTransaction
  nameWithType: OleDbTransaction
  fullName: System.Data.OleDb.OleDbTransaction
- uid: System.Data.OleDb.OleDbCommand.Cancel
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Cancel()
  nameWithType: OleDbCommand.Cancel()
  fullName: System.Data.OleDb.OleDbCommand.Cancel()
- uid: System.Data.OleDb.OleDbCommand.Clone
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Clone()
  nameWithType: OleDbCommand.Clone()
  fullName: System.Data.OleDb.OleDbCommand.Clone()
- uid: System.Data.OleDb.OleDbCommand
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbCommand
  nameWithType: OleDbCommand
  fullName: System.Data.OleDb.OleDbCommand
- uid: System.Data.OleDb.OleDbCommand.CommandText
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandText
  nameWithType: OleDbCommand.CommandText
  fullName: System.Data.OleDb.OleDbCommand.CommandText
- uid: System.Data.OleDb.OleDbCommand.CommandTimeout
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: OleDbCommand.CommandTimeout
  fullName: System.Data.OleDb.OleDbCommand.CommandTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OleDb.OleDbCommand.CommandType
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandType
  nameWithType: OleDbCommand.CommandType
  fullName: System.Data.OleDb.OleDbCommand.CommandType
- uid: System.Data.CommandType
  parent: System.Data
  isExternal: false
  name: CommandType
  nameWithType: CommandType
  fullName: System.Data.CommandType
- uid: System.Data.OleDb.OleDbCommand.Connection
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Connection
  nameWithType: OleDbCommand.Connection
  fullName: System.Data.OleDb.OleDbCommand.Connection
- uid: System.Data.OleDb.OleDbCommand.CreateDbParameter
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CreateDbParameter()
  nameWithType: OleDbCommand.CreateDbParameter()
  fullName: System.Data.OleDb.OleDbCommand.CreateDbParameter()
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.OleDb.OleDbCommand.CreateParameter
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CreateParameter()
  nameWithType: OleDbCommand.CreateParameter()
  fullName: System.Data.OleDb.OleDbCommand.CreateParameter()
- uid: System.Data.OleDb.OleDbParameter
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbParameter
  nameWithType: OleDbParameter
  fullName: System.Data.OleDb.OleDbParameter
- uid: System.Data.OleDb.OleDbCommand.DbConnection
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbConnection
  nameWithType: OleDbCommand.DbConnection
  fullName: System.Data.OleDb.OleDbCommand.DbConnection
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.OleDb.OleDbCommand.DbParameterCollection
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: OleDbCommand.DbParameterCollection
  fullName: System.Data.OleDb.OleDbCommand.DbParameterCollection
- uid: System.Data.Common.DbParameterCollection
  parent: System.Data.Common
  isExternal: false
  name: DbParameterCollection
  nameWithType: DbParameterCollection
  fullName: System.Data.Common.DbParameterCollection
- uid: System.Data.OleDb.OleDbCommand.DbTransaction
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbTransaction
  nameWithType: OleDbCommand.DbTransaction
  fullName: System.Data.OleDb.OleDbCommand.DbTransaction
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.OleDb.OleDbCommand.DesignTimeVisible
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: OleDbCommand.DesignTimeVisible
  fullName: System.Data.OleDb.OleDbCommand.DesignTimeVisible
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OleDb.OleDbCommand.Dispose(System.Boolean)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OleDbCommand.Dispose(Boolean)
  fullName: System.Data.OleDb.OleDbCommand.Dispose(Boolean)
- uid: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: OleDbCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(CommandBehavior)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.OleDb.OleDbCommand.ExecuteNonQuery
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteNonQuery()
  nameWithType: OleDbCommand.ExecuteNonQuery()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteNonQuery()
- uid: System.Data.OleDb.OleDbCommand.ExecuteReader
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteReader()
  nameWithType: OleDbCommand.ExecuteReader()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteReader()
- uid: System.Data.OleDb.OleDbDataReader
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbDataReader
  nameWithType: OleDbDataReader
  fullName: System.Data.OleDb.OleDbDataReader
- uid: System.Data.OleDb.OleDbCommand.ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteReader(CommandBehavior)
  nameWithType: OleDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.OleDb.OleDbCommand.ExecuteScalar
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteScalar()
  nameWithType: OleDbCommand.ExecuteScalar()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteScalar()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OleDb.OleDbCommand.Parameters
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Parameters
  nameWithType: OleDbCommand.Parameters
  fullName: System.Data.OleDb.OleDbCommand.Parameters
- uid: System.Data.OleDb.OleDbParameterCollection
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbParameterCollection
  nameWithType: OleDbParameterCollection
  fullName: System.Data.OleDb.OleDbParameterCollection
- uid: System.Data.OleDb.OleDbCommand.Prepare
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Prepare()
  nameWithType: OleDbCommand.Prepare()
  fullName: System.Data.OleDb.OleDbCommand.Prepare()
- uid: System.Data.OleDb.OleDbCommand.ResetCommandTimeout
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ResetCommandTimeout()
  nameWithType: OleDbCommand.ResetCommandTimeout()
  fullName: System.Data.OleDb.OleDbCommand.ResetCommandTimeout()
- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: System.Data.IDbCommand.ExecuteReader()
  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader()
  fullName: System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader()
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.OleDb.OleDbCommand.System#ICloneable#Clone
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OleDbCommand.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbCommand.System.ICloneable.Clone()
- uid: System.Data.OleDb.OleDbCommand.Transaction
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Transaction
  nameWithType: OleDbCommand.Transaction
  fullName: System.Data.OleDb.OleDbCommand.Transaction
- uid: System.Data.OleDb.OleDbCommand.UpdatedRowSource
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: OleDbCommand.UpdatedRowSource
  fullName: System.Data.OleDb.OleDbCommand.UpdatedRowSource
- uid: System.Data.UpdateRowSource
  parent: System.Data
  isExternal: false
  name: UpdateRowSource
  nameWithType: UpdateRowSource
  fullName: System.Data.UpdateRowSource
- uid: System.Data.OleDb.OleDbCommand.#ctor*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: OleDbCommand
  nameWithType: OleDbCommand.OleDbCommand
- uid: System.Data.OleDb.OleDbCommand.Cancel*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Cancel
  nameWithType: OleDbCommand.Cancel
- uid: System.Data.OleDb.OleDbCommand.Clone*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Clone
  nameWithType: OleDbCommand.Clone
- uid: System.Data.OleDb.OleDbCommand.CommandText*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandText
  nameWithType: OleDbCommand.CommandText
- uid: System.Data.OleDb.OleDbCommand.CommandTimeout*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: OleDbCommand.CommandTimeout
- uid: System.Data.OleDb.OleDbCommand.CommandType*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandType
  nameWithType: OleDbCommand.CommandType
- uid: System.Data.OleDb.OleDbCommand.Connection*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Connection
  nameWithType: OleDbCommand.Connection
- uid: System.Data.OleDb.OleDbCommand.CreateDbParameter*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CreateDbParameter
  nameWithType: OleDbCommand.CreateDbParameter
- uid: System.Data.OleDb.OleDbCommand.CreateParameter*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CreateParameter
  nameWithType: OleDbCommand.CreateParameter
- uid: System.Data.OleDb.OleDbCommand.DbConnection*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbConnection
  nameWithType: OleDbCommand.DbConnection
- uid: System.Data.OleDb.OleDbCommand.DbParameterCollection*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: OleDbCommand.DbParameterCollection
- uid: System.Data.OleDb.OleDbCommand.DbTransaction*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbTransaction
  nameWithType: OleDbCommand.DbTransaction
- uid: System.Data.OleDb.OleDbCommand.DesignTimeVisible*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: OleDbCommand.DesignTimeVisible
- uid: System.Data.OleDb.OleDbCommand.Dispose*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Dispose
  nameWithType: OleDbCommand.Dispose
- uid: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteDbDataReader
  nameWithType: OleDbCommand.ExecuteDbDataReader
- uid: System.Data.OleDb.OleDbCommand.ExecuteNonQuery*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteNonQuery
  nameWithType: OleDbCommand.ExecuteNonQuery
- uid: System.Data.OleDb.OleDbCommand.ExecuteReader*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteReader
  nameWithType: OleDbCommand.ExecuteReader
- uid: System.Data.OleDb.OleDbCommand.ExecuteScalar*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteScalar
  nameWithType: OleDbCommand.ExecuteScalar
- uid: System.Data.OleDb.OleDbCommand.Parameters*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Parameters
  nameWithType: OleDbCommand.Parameters
- uid: System.Data.OleDb.OleDbCommand.Prepare*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Prepare
  nameWithType: OleDbCommand.Prepare
- uid: System.Data.OleDb.OleDbCommand.ResetCommandTimeout*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ResetCommandTimeout
  nameWithType: OleDbCommand.ResetCommandTimeout
- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: System.Data.IDbCommand.ExecuteReader
  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader
- uid: System.Data.OleDb.OleDbCommand.System#ICloneable#Clone*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OleDbCommand.System.ICloneable.Clone
- uid: System.Data.OleDb.OleDbCommand.Transaction*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Transaction
  nameWithType: OleDbCommand.Transaction
- uid: System.Data.OleDb.OleDbCommand.UpdatedRowSource*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: OleDbCommand.UpdatedRowSource
