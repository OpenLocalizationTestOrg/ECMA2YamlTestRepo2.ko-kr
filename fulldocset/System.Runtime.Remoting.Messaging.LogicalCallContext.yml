### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext
  id: LogicalCallContext
  children:
  - System.Runtime.Remoting.Messaging.LogicalCallContext.Clone
  - System.Runtime.Remoting.Messaging.LogicalCallContext.FreeNamedDataSlot(System.String)
  - System.Runtime.Remoting.Messaging.LogicalCallContext.GetData(System.String)
  - System.Runtime.Remoting.Messaging.LogicalCallContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Runtime.Remoting.Messaging.LogicalCallContext.HasInfo
  - System.Runtime.Remoting.Messaging.LogicalCallContext.SetData(System.String,System.Object)
  langs:
  - csharp
  name: LogicalCallContext
  nameWithType: LogicalCallContext
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext
  type: Class
  summary: "원격 메서드 호출 중 코드 실행 경로로 수행 되는 속성 집합을 제공 합니다."
  remarks: "LogicalCallContext 클래스는 버전의는 <xref:System.Runtime.Remoting.Messaging.CallContext>원격 응용 프로그램 도메인에 메서드 중 사용 되는 클래스를 호출 합니다.</xref:System.Runtime.Remoting.Messaging.CallContext> <xref:System.Runtime.Remoting.Messaging.CallContext>은 특수 한 컬렉션 개체 메서드 호출에 스레드 로컬 저장소와 각 논리 스레드가 실행 중에 고유한 데이터 슬롯을 제공 합니다.</xref:System.Runtime.Remoting.Messaging.CallContext> 슬롯 호출 컨텍스트 논리 다른 스레드 간에 공유 되지 않습니다. 개체는 <xref:System.Runtime.Remoting.Messaging.CallContext>실행 코드 경로 위 아래로 이동 하 여 경로 따라 다양 한 개체에 의해 검사</xref:System.Runtime.Remoting.Messaging.CallContext> 에 추가할 수 있습니다.       다른 개체에 원격 메서드 호출이 수행 때 <xref:System.AppDomain>, <xref:System.Runtime.Remoting.Messaging.CallContext>클래스에 대 한 원격 호출이 함께 전송 되는 LogicalCallContext 생성 합니다.</xref:System.Runtime.Remoting.Messaging.CallContext> </xref:System.AppDomain> 해당 노출 개체는 <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative>인터페이스 및에 저장 됩니다는 <xref:System.Runtime.Remoting.Messaging.CallContext>전파 됩니다는 <xref:System.AppDomain>는 LogicalCallContext에.</xref:System.AppDomain> </xref:System.Runtime.Remoting.Messaging.CallContext> </xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> 이 인터페이스를 지원 하지 않는 개체 LogicalCallContext 인스턴스와 원격 메서드 호출에에서 전송 되지 않습니다.      > [!NOTE] >이 클래스는 링크 요청을 만듭니다. SecurityException 직접 실행 호출자 인프라 권한이 없는 경우 throw 됩니다. 참조 [링크 요청](~/add/includes/ajax-current-ext-md.md) 자세한 정보에 대 한 합니다."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public sealed class LogicalCallContext : ICloneable, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.Clone
  id: Clone
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  langs:
  - csharp
  name: Clone()
  nameWithType: LogicalCallContext.Clone()
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "현재 인스턴스의 복사본 인 새 개체를 만듭니다."
  remarks: "Clone 메서드 현재 <xref:System.Runtime.Remoting.Messaging.LogicalCallContext>.</xref:System.Runtime.Remoting.Messaging.LogicalCallContext> 의 전체 복사본을 생성합니다."
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "이 인스턴스의 복사본 인 새 개체입니다."
  overload: System.Runtime.Remoting.Messaging.LogicalCallContext.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.FreeNamedDataSlot(System.String)
  id: FreeNamedDataSlot(System.String)
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  langs:
  - csharp
  name: FreeNamedDataSlot(String)
  nameWithType: LogicalCallContext.FreeNamedDataSlot(String)
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.FreeNamedDataSlot(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "지정한 이름 가진 데이터 슬롯을 비웁니다."
  syntax:
    content: public void FreeNamedDataSlot (string name);
    parameters:
    - id: name
      type: System.String
      description: "빈 데이터 슬롯의 이름입니다."
  overload: System.Runtime.Remoting.Messaging.LogicalCallContext.FreeNamedDataSlot*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.GetData(System.String)
  id: GetData(System.String)
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  langs:
  - csharp
  name: GetData(String)
  nameWithType: LogicalCallContext.GetData(String)
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.GetData(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "현재 인스턴스에서 지정한 이름과 연결 된 개체를 검색 합니다."
  syntax:
    content: public object GetData (string name);
    parameters:
    - id: name
      type: System.String
      description: "호출 컨텍스트에 있는 항목의 이름입니다."
    return:
      type: System.Object
      description: "지정한 이름과 연결 된 논리 호출 컨텍스트의 개체입니다."
  overload: System.Runtime.Remoting.Messaging.LogicalCallContext.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: LogicalCallContext.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "지정 된 채웁니다 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 현재 직렬화 하는 데 필요한 데이터로 <xref href=&quot;System.Runtime.Remoting.Messaging.LogicalCallContext&quot;> </xref>합니다."
  remarks: "현재는 제공 된 채워지는 <xref:System.Runtime.Serialization.SerializationInfo> <xref:System.Runtime.Remoting.Messaging.LogicalCallContext>.</xref:System.Runtime.Remoting.Messaging.LogicalCallContext> 다시 만드는 데 필요한 모든 데이터가</xref:System.Runtime.Serialization.SerializationInfo>       현재 메서드는 <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>안내 하십시오.</xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> 구현"
  syntax:
    content: public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 데이터로 채울 합니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "소스 또는 serialization의 대상에 대 한 컨텍스트 정보입니다."
  overload: System.Runtime.Remoting.Messaging.LogicalCallContext.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>info</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "직접 실행 호출자에 SerializationFormatter 권한이 없습니다."
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.HasInfo
  id: HasInfo
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  langs:
  - csharp
  name: HasInfo
  nameWithType: LogicalCallContext.HasInfo
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.HasInfo
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "나타내는 값을 가져옵니다 여부 현재 <xref href=&quot;System.Runtime.Remoting.Messaging.LogicalCallContext&quot;> </xref> 정보를 포함 합니다."
  syntax:
    content: public bool HasInfo { get; }
    return:
      type: System.Boolean
      description: "나타내는 부울 값 여부 현재 <xref href=&quot;System.Runtime.Remoting.Messaging.LogicalCallContext&quot;> </xref> 정보를 포함 합니다."
  overload: System.Runtime.Remoting.Messaging.LogicalCallContext.HasInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.SetData(System.String,System.Object)
  id: SetData(System.String,System.Object)
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  langs:
  - csharp
  name: SetData(String,Object)
  nameWithType: LogicalCallContext.SetData(String,Object)
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.SetData(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "현재 인스턴스의 지정된 된 개체를 저장 하 고 지정 된 이름에 연결 합니다."
  syntax:
    content: public void SetData (string name, object data);
    parameters:
    - id: name
      type: System.String
      description: "호출 컨텍스트에 새 항목을 연결 하는 이름입니다."
    - id: data
      type: System.Object
      description: "호출 컨텍스트에 저장 하는 개체입니다."
  overload: System.Runtime.Remoting.Messaging.LogicalCallContext.SetData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.Clone
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: Clone()
  nameWithType: LogicalCallContext.Clone()
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.Clone()
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.FreeNamedDataSlot(System.String)
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: FreeNamedDataSlot(String)
  nameWithType: LogicalCallContext.FreeNamedDataSlot(String)
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.FreeNamedDataSlot(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.GetData(System.String)
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: GetData(String)
  nameWithType: LogicalCallContext.GetData(String)
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.GetData(String)
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: LogicalCallContext.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.HasInfo
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: HasInfo
  nameWithType: LogicalCallContext.HasInfo
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.HasInfo
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.SetData(System.String,System.Object)
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: SetData(String,Object)
  nameWithType: LogicalCallContext.SetData(String,Object)
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.SetData(String,Object)
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.Clone*
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: Clone
  nameWithType: LogicalCallContext.Clone
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.FreeNamedDataSlot*
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: FreeNamedDataSlot
  nameWithType: LogicalCallContext.FreeNamedDataSlot
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.GetData*
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: GetData
  nameWithType: LogicalCallContext.GetData
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.GetObjectData*
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: GetObjectData
  nameWithType: LogicalCallContext.GetObjectData
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.HasInfo*
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: HasInfo
  nameWithType: LogicalCallContext.HasInfo
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.SetData*
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: SetData
  nameWithType: LogicalCallContext.SetData
