### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection
  id: EditorPartCollection
  children:
  - System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor
  - System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Collections.ICollection)
  - System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Web.UI.WebControls.WebParts.EditorPartCollection,System.Collections.ICollection)
  - System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains(System.Web.UI.WebControls.WebParts.EditorPart)
  - System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.EditorPart[],System.Int32)
  - System.Web.UI.WebControls.WebParts.EditorPartCollection.Empty
  - System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.EditorPart)
  - System.Web.UI.WebControls.WebParts.EditorPartCollection.Item(System.Int32)
  langs:
  - csharp
  name: EditorPartCollection
  nameWithType: EditorPartCollection
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection
  type: Class
  summary: "컬렉션을 포함 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> 속성, 레이아웃, 모양 및 동작을 편집 하기 위해 사용 되는 컨트롤 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 컨트롤입니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "EditorPartCollection 클래스는 읽기 전용 컬렉션의 <xref:System.Web.UI.WebControls.WebParts.EditorPart>일반적으로 사용 되는 컨트롤은 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>의 집합을 추적 하는 영역 <xref:System.Web.UI.WebControls.WebParts.EditorPart>영역에 포함 된 컨트롤.</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> </xref:System.Web.UI.WebControls.WebParts.EditorPart>       웹 파트 페이지도 편집 모드로 전환 하 고 사용자가 편집 컨트롤을 선택, 편집 하는 프로세스가 시작 됩니다. 영역으로 구성 된 새 EditorPartCollection 개체를 만듭니다.는 <xref:System.Web.UI.WebControls.WebParts.EditorPart>영역에 포함 된 컨트롤.</xref:System.Web.UI.WebControls.WebParts.EditorPart> 영역 편집 프로세스에서 여러 단계 사이의 속성 값을 저장 하거나 검색할 EditorPartCollection 개체에 액세스는 <xref:System.Web.UI.WebControls.WebParts.EditorPart>컬렉션에 있는 컨트롤 및 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤과 현재 편집 중인.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.EditorPart>       예를 들어 집합에 대규모 작업을 수행 해야 하는 경우 사용자는 프로그래밍 방식으로 용도 대 한 컨트롤의 EditorPartCollection 컬렉션을 만들 수 <xref:System.Web.UI.WebControls.WebParts.EditorPart>컨트롤.</xref:System.Web.UI.WebControls.WebParts.EditorPart> EditorPartCollection 개체는 읽기 전용, 경우에 컬렉션에서 참조 하는 내부 컨트롤의 속성을 프로그래밍 방식으로 변경 가능 합니다."
  example:
  - "The following code example demonstrates several uses of the EditorPartCollection class. There are four parts to this code example:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A class for a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control named `TextDisplayWebPart`, which is referenced in the Web page and is edited by the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls.  \n  \n-   A Web page that references the `TextDisplayWebPart` control, contains an <xref:System.Web.UI.WebControls.WebParts.EditorZone> control with several of the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls from the Web Parts control set declared in the zone, and contains some event-driven code to create and manipulate an EditorPartCollection object.  \n  \n-   An explanation of how the code example works when you load it in a browser.  \n  \n The first part of this code example is the user control that enables users to change display modes on a Web page. For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_EditorPartCollection_Overview#4](~/add/codesnippet/csharp/t-system.web.ui.webcontr_211_1.ascx)]\n [!code-vb[WebParts_EditorPartCollection_Overview#4](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_211_1.ascx)]  \n  \n The second part of the code example is the `TextDisplayWebPart` control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n Note that the control has a property named `ContentText`; this property holds the value that the user enters in the text box. This custom property can be edited when the control is in edit mode, along with the standard <xref:System.Web.UI.WebControls.WebParts.WebPart> control properties.  \n  \n [!code-cs[WebParts_EditorPartCollection_Overview#3](~/add/codesnippet/csharp/t-system.web.ui.webcontr_211_2.cs)]\n [!code-vb[WebParts_EditorPartCollection_Overview#3](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_211_2.vb)]  \n  \n The third part of the code example is the Web page. Notice that the `<asp:editorzone>` element for the page contains declarations for three <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. Two of these controls become part of a custom EditorPartCollection object that is created when the `Button1_Click` method executes.  \n  \n [!code-cs[WebParts_EditorPartCollection_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_211_3.aspx)]\n [!code-vb[WebParts_EditorPartCollection_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_211_3.aspx)]  \n  \n When you load the page in a browser, you can switch the page into edit mode by selecting **Edit** in the **Display Mode** drop-down list control. You can click the verbs menu (the downward arrow) in the title bar of the `TextDisplayWebPart` control, and click **Edit** to edit the control. When the editing user interface (UI) is visible, you can see all the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. You click the **Create EditorPartCollection** button to see the effects on the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls that are created by the code that is manipulating the EditorPartCollection object. Also, notice that the <xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart> control allows you to edit the custom `TextDisplayWebPart.ContentText` property. This is possible because the property is marked with a `WebBrowsable` attribute in the source code for the control. If you update the property value in the editing UI, you must return the page to normal browse mode to see the effect of updating the `TextDisplayWebPart.ContentText` property."
  syntax:
    content: 'public sealed class EditorPartCollection : System.Collections.ReadOnlyCollectionBase'
  inheritance:
  - System.Object
  - System.Collections.ReadOnlyCollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.ReadOnlyCollectionBase.Count
  - System.Collections.ReadOnlyCollectionBase.GetEnumerator
  - System.Collections.ReadOnlyCollectionBase.InnerList
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  langs:
  - csharp
  name: EditorPartCollection()
  nameWithType: EditorPartCollection.EditorPartCollection()
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.EditorPartCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "비어 있는 새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPartCollection&quot;> </xref> 클래스입니다."
  remarks: "EditorPartCollection 생성자 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>클래스</xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 의 빈 인스턴스를 초기화합니다. 이 생성자의 오버이 로드에서 내부적으로 사용 되는 <xref:System.Web.UI.WebControls.WebParts.EditorZone>클래스에 해당 <xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A>빈 컬렉션 개체를 만드는 메서드를.</xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A> </xref:System.Web.UI.WebControls.WebParts.EditorZone> 영역에는 다음의 모든 인스턴스 만듭니다는 <xref:System.Web.UI.WebControls.WebParts.EditorPart>컨트롤에 자식 영역 템플릿 선언 및 내부 메서드를 사용 하 여 컬렉션에 추가할.</xref:System.Web.UI.WebControls.WebParts.EditorPart>       <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> <xref:System.Web.UI.WebControls.WebParts.EditorPart>가 컨트롤</xref:System.Web.UI.WebControls.WebParts.EditorPart> 을 추가 하 고</xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 의 새 인스턴스를 만드는 EditorPartCollection 생성자가 오버이 로드를 사용할 수 없습니다. 하나를 사용 해야 다른 오버 로드 중 EditorPartCollection 생성자에 대 한 대신 합니다."
  syntax:
    content: public EditorPartCollection ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Collections.ICollection)
  id: '#ctor(System.Collections.ICollection)'
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  langs:
  - csharp
  name: EditorPartCollection(ICollection)
  nameWithType: EditorPartCollection.EditorPartCollection(ICollection)
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.EditorPartCollection(ICollection)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPartCollection&quot;> </xref> 전달 하 여 클래스는 <xref:System.Collections.ICollection>컬렉션 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> 컨트롤.</xref:System.Collections.ICollection>"
  remarks: "EditorPartCollection 생성자의 인스턴스를 초기화 합니다.는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>클래스 및 컬렉션을 전달 <xref:System.Web.UI.WebControls.WebParts.EditorPart>컨트롤.</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 이 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A>새 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>개체 및 <xref:System.Web.UI.WebControls.WebParts.EditorPart>컨트롤 후</xref:System.Web.UI.WebControls.WebParts.EditorPart> 추가</xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 만드는 데 사용할 수 있는 생성자</xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> 의 한 오버 로드       경우에는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>생성자가 만든 인스턴스는 읽기 전용, 개별에 액세스할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.EditorPart>컬렉션에 프로그래밍 방식으로 제어 하 고 해당 속성 및 메서드를 호출 합니다.</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>       EditorPartCollection 생성자를 사용 하기 위한 한 가지 일반적인 시나리오의 전체 집합에 일괄 작업을 수행 하려면 것 <xref:System.Web.UI.WebControls.WebParts.EditorPart>콘텐츠, 모양 또는 그중에서 관련된 그룹의 위치를 변경 하는 등의 컨트롤.</xref:System.Web.UI.WebControls.WebParts.EditorPart>       EditorPartCollection 생성자를 사용 하기 위한 또 다른 일반적인 시나리오는 사용자 지정 개발 하 고 <xref:System.Web.UI.WebControls.WebParts.EditorPart>연결할 서버 컨트롤과 함께 사용자가 컨트롤에 대해 사용자 지정 속성을 편집할 수 있도록 하는 컨트롤입니다.</xref:System.Web.UI.WebControls.WebParts.EditorPart> 이 시나리오에서는 서버 컨트롤이 구현 해야는 <xref:System.Web.UI.WebControls.WebParts.IWebEditable>인터페이스를 해당 작업의 일부로 구현 해야 합니다는 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A>메서드.</xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> </xref:System.Web.UI.WebControls.WebParts.IWebEditable> 사용자 지정을 사용 하도록 설정 하려면 해당 메서드의 <xref:System.Web.UI.WebControls.WebParts.EditorPart>편집 서버 컨트롤을 추가 해야 하는 컨트롤의 <xref:System.Web.UI.WebControls.WebParts.EditorPart>컨트롤을 <xref:System.Collections.ICollection>인스턴스를 같은 <xref:System.Collections.ArrayList>개체입니다.</xref:System.Collections.ArrayList> </xref:System.Collections.ICollection> </xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.EditorPart> 컬렉션을 전달할 수 <xref:System.Web.UI.WebControls.WebParts.EditorPart>컨트롤을 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A>생성자를 만들려면 새 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>개체를 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>모든 컨트롤을 설정 하 고 편집 프로세스 시작 영역을 사용 합니다.</xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> </xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> </xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> </xref:System.Web.UI.WebControls.WebParts.EditorPart>"
  example:
  - "The following code example demonstrates how to create a custom <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> and, even though the collection is read-only, still perform a batch operation to change the individual <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls in the collection. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> class overview.  \n  \n The code in the `Button1_Click` event creates an <xref:System.Collections.ArrayList> object, adds two of the three <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls in the page to the object, and then creates a new <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object using the EditorPartCollection constructor. It also demonstrates how you can make changes to the underlying <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls, even though the collection is read-only.  \n  \n [!code-cs[WebParts_EditorPartCollection_Overview#2](~/add/codesnippet/csharp/e5070951-5a25-4f76-bb91-_1.aspx)]\n [!code-vb[WebParts_EditorPartCollection_Overview#2](~/add/codesnippet/visualbasic/e5070951-5a25-4f76-bb91-_1.aspx)]  \n  \n You can load the page in a browser and switch the page into edit mode by selecting **Edit** in the **Display Mode** drop-down list control. You can click the verbs menu (the downward arrow) in the title bar of the `TextDisplayWebPart` control, and click **Edit** to edit the control. When the editing user interface (UI) is visible, you can see all the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. You click the **Create EditorPartCollection** button to see the effects on the two <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls that are added to the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object."
  syntax:
    content: public EditorPartCollection (System.Collections.ICollection editorParts);
    parameters:
    - id: editorParts
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>의 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> 컨트롤.</xref:System.Collections.ICollection>"
  overload: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Web.UI.WebControls.WebParts.EditorPartCollection,System.Collections.ICollection)
  id: '#ctor(System.Web.UI.WebControls.WebParts.EditorPartCollection,System.Collections.ICollection)'
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  langs:
  - csharp
  name: EditorPartCollection(EditorPartCollection,ICollection)
  nameWithType: EditorPartCollection.EditorPartCollection(EditorPartCollection,ICollection)
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.EditorPartCollection(EditorPartCollection,ICollection)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPartCollection&quot;> </xref> 전달 하 여 클래스는 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPartCollection&quot;> </xref> 의 컬렉션 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> 컨트롤 및 <xref:System.Collections.ICollection>컬렉션 추가 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> 컨트롤.</xref:System.Collections.ICollection>"
  syntax:
    content: public EditorPartCollection (System.Web.UI.WebControls.WebParts.EditorPartCollection existingEditorParts, System.Collections.ICollection editorParts);
    parameters:
    - id: existingEditorParts
      type: System.Web.UI.WebControls.WebParts.EditorPartCollection
      description: "<xref:System.Collections.ICollection>기존 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> 영역의 컨트롤.</xref:System.Collections.ICollection>"
    - id: editorParts
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>의 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> 영역에 없는 컨트롤은 하지만 프로그래밍 방식으로 생성 합니다.</xref:System.Collections.ICollection>"
  overload: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains(System.Web.UI.WebControls.WebParts.EditorPart)
  id: Contains(System.Web.UI.WebControls.WebParts.EditorPart)
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  langs:
  - csharp
  name: Contains(EditorPart)
  nameWithType: EditorPartCollection.Contains(EditorPart)
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains(EditorPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "컬렉션에 특정 컨트롤 인지 여부를 나타내는 값을 반환 합니다."
  remarks: "Contains 메서드 여부, 특정 <xref:System.Web.UI.WebControls.WebParts.EditorPart>제어가 이미는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>개체입니다.</xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> </xref:System.Web.UI.WebControls.WebParts.EditorPart>"
  example:
  - "The following code example demonstrates how to determine whether a particular <xref:System.Web.UI.WebControls.WebParts.EditorPart> control is in an <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> class overview.  \n  \n The code in the `Button1_Click` event does not add the `LayoutEditorPart1` control to the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object when it adds the other controls. To confirm that the `LayoutEditorPart1` control is not in the collection, the code uses the Contains method.  \n  \n [!code-cs[WebParts_EditorPartCollection_Overview#2](~/add/codesnippet/csharp/969094d1-8b47-4d8c-86ee-_1.aspx)]\n [!code-vb[WebParts_EditorPartCollection_Overview#2](~/add/codesnippet/visualbasic/969094d1-8b47-4d8c-86ee-_1.aspx)]  \n  \n When you load the page in a browser, you can switch the page into edit mode by selecting **Edit** in the **Display Mode** drop-down list control. You can click the verbs menu (the downward arrow) in the title bar of the `TextDisplayWebPart` control, and click **Edit** to edit the control. When the editing user interface (UI) is visible, you can see the all the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. If you click the **Create EditorPartCollection** button, you will notice that the background color of the `LayoutEditorPart1` control is different from the other controls, because it is not part of the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object."
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.WebParts.EditorPart editorPart);
    parameters:
    - id: editorPart
      type: System.Web.UI.WebControls.WebParts.EditorPart
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> 컬렉션의 구성원으로 상태에 대 한 테스트 중인 합니다."
    return:
      type: System.Boolean
      description: "나타내는 부울 값 여부는 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> 컬렉션에 있습니다."
  overload: System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.EditorPart[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.WebParts.EditorPart[],System.Int32)
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  langs:
  - csharp
  name: CopyTo(EditorPart[],Int32)
  nameWithType: EditorPartCollection.CopyTo(EditorPart[],Int32)
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo(EditorPart[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "컬렉션의 배열에 복사 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> 컨트롤입니다."
  remarks: "CopyTo 메서드는 포함 될 수 있는 사용자 지정 배열을 만들 때 유용는 <xref:System.Web.UI.WebControls.WebParts.EditorPart>컨트롤에 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>개체, 해당 컨트롤의 하위 집합 또는 해당 컨트롤의 상위 집합입니다.</xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> </xref:System.Web.UI.WebControls.WebParts.EditorPart>"
  example:
  - "The following code example demonstrates how to use the CopyTo method to create a custom array of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> class overview.  \n  \n The code in the `Button1_Click` event creates an array of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls, adds the `LayoutEditorPart1` control to the array, and then uses the CopyTo method to copy the controls from the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object to the array.  \n  \n [!code-cs[WebParts_EditorPartCollection_Overview#2](~/add/codesnippet/csharp/3d4bbcff-7b5d-49cc-93ed-_1.aspx)]\n [!code-vb[WebParts_EditorPartCollection_Overview#2](~/add/codesnippet/visualbasic/3d4bbcff-7b5d-49cc-93ed-_1.aspx)]  \n  \n When you load the page in a browser, you can switch the page into edit mode by selecting **Edit** in the **Display Mode** drop-down list control. You can click the verbs menu (the downward arrow) in the title bar of the `TextDisplayWebPart` control, and click **Edit** to edit the control. When the editing user interface (UI) is visible, you can see all the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. If you click the **Create EditorPartCollection** button, you will notice that the titles of all the controls in the custom array are listed near the bottom of the page."
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.WebParts.EditorPart[] array, int index);
    parameters:
    - id: array
      type: System.Web.UI.WebControls.WebParts.EditorPart[]
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> 복사한 컨트롤의 컬렉션을 포함 하도록 합니다."
    - id: index
      type: System.Int32
      description: "배열에서 컬렉션의 내용을 배치할 수 있는 시작 지점입니다."
  overload: System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.Empty
  id: Empty
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  langs:
  - csharp
  name: Empty
  nameWithType: EditorPartCollection.Empty
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.Empty
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "컬렉션의 정적, 읽기 전용, 빈 인스턴스를 참조합니다."
  remarks: "정적, 읽기 전용, 빈 인스턴스 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>다른 개체를 사용 하 여 인스턴스를 비교 하거나 메서드에서 올바른 개체 유형을 반환 하려면 빈 컬렉션 인스턴스를 원하는 있지만 인스턴스에 구성원을 추가할 필요가 없습니다에서 메모리 사용량을 줄입니다.</xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>"
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.EditorPartCollection Empty;
    return:
      type: System.Web.UI.WebControls.WebParts.EditorPartCollection
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.EditorPart)
  id: IndexOf(System.Web.UI.WebControls.WebParts.EditorPart)
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  langs:
  - csharp
  name: IndexOf(EditorPart)
  nameWithType: EditorPartCollection.IndexOf(EditorPart)
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf(EditorPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "컬렉션의 특정 멤버의 위치를 반환 합니다."
  remarks: "IndexOf 메서드는 여러 개 있을 경우 유용 <xref:System.Web.UI.WebControls.WebParts.EditorPart>웹 파트 페이지에서 컨트롤 컬렉션에서 특정 컨트롤을 찾이 필요가.</xref:System.Web.UI.WebControls.WebParts.EditorPart>"
  example:
  - "The following code example demonstrates how to use the IndexOf method to locate an <xref:System.Web.UI.WebControls.WebParts.EditorPart> control in an <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> class overview.  \n  \n The code in the `Button1_Click` event creates an <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object, and then uses the IndexOf method to locate the `PropertyGridEditorPart1` control in the collection, and set its <xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A> property.  \n  \n [!code-cs[WebParts_EditorPartCollection_Overview#2](~/add/codesnippet/csharp/77edafbe-2b10-4862-af07-_1.aspx)]\n [!code-vb[WebParts_EditorPartCollection_Overview#2](~/add/codesnippet/visualbasic/77edafbe-2b10-4862-af07-_1.aspx)]  \n  \n When you load the page in a browser, you can switch the page into edit mode by selecting **Edit** in the **Display Mode** drop-down list control. You can click the verbs menu (the downward arrow) in the title bar of the `TextDisplayWebPart` control, and click **Edit** to edit the control. When the editing user interface (UI) is visible, you can see all the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. If you click the **Create EditorPartCollection** button, you will notice that the `PropertyGridEditorPart1` control, which is near the bottom of the page, has a title but no border."
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.WebParts.EditorPart editorPart);
    parameters:
    - id: editorPart
      type: System.Web.UI.WebControls.WebParts.EditorPart
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> 컬렉션의 멤버입니다."
    return:
      type: System.Int32
      description: "인덱스에 해당 하는 정수는 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> 컨트롤 컬렉션에 있습니다."
  overload: System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: EditorPartCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "고유 식별자에 따라 컬렉션의 특정 멤버를 반환합니다."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.EditorPart this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "특정 인덱스 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> 컬렉션에 있습니다."
    return:
      type: System.Web.UI.WebControls.WebParts.EditorPart
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> 컬렉션에서 지정 된 인덱스입니다."
  overload: System.Web.UI.WebControls.WebParts.EditorPartCollection.Item*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ReadOnlyCollectionBase
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  isExternal: false
  name: EditorPartCollection()
  nameWithType: EditorPartCollection.EditorPartCollection()
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.EditorPartCollection()
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Collections.ICollection)
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  isExternal: false
  name: EditorPartCollection(ICollection)
  nameWithType: EditorPartCollection.EditorPartCollection(ICollection)
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.EditorPartCollection(ICollection)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Web.UI.WebControls.WebParts.EditorPartCollection,System.Collections.ICollection)
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  isExternal: false
  name: EditorPartCollection(EditorPartCollection,ICollection)
  nameWithType: EditorPartCollection.EditorPartCollection(EditorPartCollection,ICollection)
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.EditorPartCollection(EditorPartCollection,ICollection)
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: EditorPartCollection
  nameWithType: EditorPartCollection
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains(System.Web.UI.WebControls.WebParts.EditorPart)
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  isExternal: false
  name: Contains(EditorPart)
  nameWithType: EditorPartCollection.Contains(EditorPart)
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains(EditorPart)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.EditorPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: EditorPart
  nameWithType: EditorPart
  fullName: System.Web.UI.WebControls.WebParts.EditorPart
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.EditorPart[],System.Int32)
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  isExternal: false
  name: CopyTo(EditorPart[],Int32)
  nameWithType: EditorPartCollection.CopyTo(EditorPart[],Int32)
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo(EditorPart[],Int32)
- uid: System.Web.UI.WebControls.WebParts.EditorPart[]
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: EditorPart
  nameWithType: EditorPart
  fullName: System.Web.UI.WebControls.WebParts.EditorPart[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.WebParts.EditorPart
    name: EditorPart
    nameWithType: EditorPart
    fullName: EditorPart[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.Empty
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  isExternal: false
  name: Empty
  nameWithType: EditorPartCollection.Empty
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.Empty
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.EditorPart)
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  isExternal: false
  name: IndexOf(EditorPart)
  nameWithType: EditorPartCollection.IndexOf(EditorPart)
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf(EditorPart)
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: EditorPartCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection.Item(Int32)
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor*
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  isExternal: false
  name: EditorPartCollection
  nameWithType: EditorPartCollection.EditorPartCollection
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains*
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  isExternal: false
  name: Contains
  nameWithType: EditorPartCollection.Contains
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo*
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  isExternal: false
  name: CopyTo
  nameWithType: EditorPartCollection.CopyTo
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf*
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  isExternal: false
  name: IndexOf
  nameWithType: EditorPartCollection.IndexOf
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection.Item*
  parent: System.Web.UI.WebControls.WebParts.EditorPartCollection
  isExternal: false
  name: Item
  nameWithType: EditorPartCollection.Item
