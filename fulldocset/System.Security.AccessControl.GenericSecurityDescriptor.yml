### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.GenericSecurityDescriptor
  id: GenericSecurityDescriptor
  children:
  - System.Security.AccessControl.GenericSecurityDescriptor.#ctor
  - System.Security.AccessControl.GenericSecurityDescriptor.BinaryLength
  - System.Security.AccessControl.GenericSecurityDescriptor.ControlFlags
  - System.Security.AccessControl.GenericSecurityDescriptor.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.GenericSecurityDescriptor.GetSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.GenericSecurityDescriptor.Group
  - System.Security.AccessControl.GenericSecurityDescriptor.IsSddlConversionSupported
  - System.Security.AccessControl.GenericSecurityDescriptor.Owner
  - System.Security.AccessControl.GenericSecurityDescriptor.Revision
  langs:
  - csharp
  name: GenericSecurityDescriptor
  nameWithType: GenericSecurityDescriptor
  fullName: System.Security.AccessControl.GenericSecurityDescriptor
  type: Class
  summary: "보안 설명자를 나타냅니다. 보안 설명자에 소유자, 주 그룹, 임의 액세스 제어 목록 (DACL) 및는 액세스 제어 목록 SACL (시스템)에 포함 됩니다."
  syntax:
    content: public abstract class GenericSecurityDescriptor
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.AccessControl.GenericSecurityDescriptor.#ctor
  id: '#ctor'
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  langs:
  - csharp
  name: GenericSecurityDescriptor()
  nameWithType: GenericSecurityDescriptor.GenericSecurityDescriptor()
  fullName: System.Security.AccessControl.GenericSecurityDescriptor.GenericSecurityDescriptor()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.AccessControl.GenericSecurityDescriptor&quot;> </xref> 클래스입니다."
  syntax:
    content: protected GenericSecurityDescriptor ();
    parameters: []
  overload: System.Security.AccessControl.GenericSecurityDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.GenericSecurityDescriptor.BinaryLength
  id: BinaryLength
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  langs:
  - csharp
  name: BinaryLength
  nameWithType: GenericSecurityDescriptor.BinaryLength
  fullName: System.Security.AccessControl.GenericSecurityDescriptor.BinaryLength
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "바이트의 이진 표현 길이 가져옵니다 <xref href=&quot;System.Security.AccessControl.GenericSecurityDescriptor&quot;> </xref> 개체입니다. 이 길이 ACL 사용을 이진 배열로 마샬링하기 전에 사용 해야는 <xref:System.Security.AccessControl.GenericSecurityDescriptor.GetBinaryForm*>메서드.</xref:System.Security.AccessControl.GenericSecurityDescriptor.GetBinaryForm*>"
  syntax:
    content: public int BinaryLength { get; }
    return:
      type: System.Int32
      description: "현재의 이진 표현 길이 (바이트)를 <xref href=&quot;System.Security.AccessControl.GenericSecurityDescriptor&quot;> </xref> 개체입니다."
  overload: System.Security.AccessControl.GenericSecurityDescriptor.BinaryLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.GenericSecurityDescriptor.ControlFlags
  id: ControlFlags
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  langs:
  - csharp
  name: ControlFlags
  nameWithType: GenericSecurityDescriptor.ControlFlags
  fullName: System.Security.AccessControl.GenericSecurityDescriptor.ControlFlags
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "동작을 지정 하는 값을 가져옵니다는 <xref href=&quot;System.Security.AccessControl.GenericSecurityDescriptor&quot;> </xref> 개체입니다."
  syntax:
    content: public abstract System.Security.AccessControl.ControlFlags ControlFlags { get; }
    return:
      type: System.Security.AccessControl.ControlFlags
      description: "하나 이상의 값은 <xref href=&quot;System.Security.AccessControl.ControlFlags&quot;> </xref> 열거형 논리적 OR 연산으로 결합 합니다."
  overload: System.Security.AccessControl.GenericSecurityDescriptor.ControlFlags*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.GenericSecurityDescriptor.GetBinaryForm(System.Byte[],System.Int32)
  id: GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  langs:
  - csharp
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: GenericSecurityDescriptor.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.GenericSecurityDescriptor.GetBinaryForm(Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "이에 포함 된 정보를 나타내는 바이트 값의 배열을 반환 <xref href=&quot;System.Security.AccessControl.GenericSecurityDescriptor&quot;> </xref> 개체입니다."
  syntax:
    content: public void GetBinaryForm (byte[] binaryForm, int offset);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: "바이트 배열 내용의 <xref href=&quot;System.Security.AccessControl.GenericSecurityDescriptor&quot;> </xref> 마샬링됩니다."
    - id: offset
      type: System.Int32
      description: "마샬링을 시작할 오프셋입니다."
  overload: System.Security.AccessControl.GenericSecurityDescriptor.GetBinaryForm*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>가 음수 이거나 너무 높아서 전체 <xref href=&quot;System.Security.AccessControl.GenericSecurityDescriptor&quot;> </xref> 복사할 <code>array</code>합니다."
  platform:
  - net462
- uid: System.Security.AccessControl.GenericSecurityDescriptor.GetSddlForm(System.Security.AccessControl.AccessControlSections)
  id: GetSddlForm(System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  langs:
  - csharp
  name: GetSddlForm(AccessControlSections)
  nameWithType: GenericSecurityDescriptor.GetSddlForm(AccessControlSections)
  fullName: System.Security.AccessControl.GenericSecurityDescriptor.GetSddlForm(AccessControlSections)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "보안 설명자의 지정된 된 섹션의 SDDL Security Descriptor Definition Language () 표현을 반환이 <xref href=&quot;System.Security.AccessControl.GenericSecurityDescriptor&quot;> </xref> 개체가 나타내는입니다."
  syntax:
    content: public string GetSddlForm (System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "가져올 보안 설명자의 섹션 (액세스 규칙, 감사 규칙, 주 그룹, 소유자)를 지정 합니다."
    return:
      type: System.String
      description: "이 연결 된 보안 설명자의 지정된 된 섹션의 SDDL 표시 <xref href=&quot;System.Security.AccessControl.GenericSecurityDescriptor&quot;> </xref> 개체입니다."
  overload: System.Security.AccessControl.GenericSecurityDescriptor.GetSddlForm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.GenericSecurityDescriptor.Group
  id: Group
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  langs:
  - csharp
  name: Group
  nameWithType: GenericSecurityDescriptor.Group
  fullName: System.Security.AccessControl.GenericSecurityDescriptor.Group
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "이 대 한 주 그룹을 가져오거나 <xref href=&quot;System.Security.AccessControl.GenericSecurityDescriptor&quot;> </xref> 개체입니다."
  syntax:
    content: public abstract System.Security.Principal.SecurityIdentifier Group { get; set; }
    return:
      type: System.Security.Principal.SecurityIdentifier
      description: "이 대 한 주 그룹 <xref href=&quot;System.Security.AccessControl.GenericSecurityDescriptor&quot;> </xref> 개체입니다."
  overload: System.Security.AccessControl.GenericSecurityDescriptor.Group*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.GenericSecurityDescriptor.IsSddlConversionSupported
  id: IsSddlConversionSupported
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  langs:
  - csharp
  name: IsSddlConversionSupported()
  nameWithType: GenericSecurityDescriptor.IsSddlConversionSupported()
  fullName: System.Security.AccessControl.GenericSecurityDescriptor.IsSddlConversionSupported()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "이 연결 된 보안 설명자 있는지 여부를 지정 하는 부울 값을 반환 <xref href=&quot;System.Security.AccessControl.GenericSecurityDescriptor&quot;> </xref> 개체 정의 언어 SDDL (Security Descriptor) 형식으로 변환할 수 있습니다."
  syntax:
    content: public static bool IsSddlConversionSupported ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>보안 설명자와 연결 된 경우 <xref href=&quot;System.Security.AccessControl.GenericSecurityDescriptor&quot;> </xref> 개체 수를 정의 언어 SDDL (Security Descriptor) 형식으로 변환 된 없으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.AccessControl.GenericSecurityDescriptor.IsSddlConversionSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.GenericSecurityDescriptor.Owner
  id: Owner
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  langs:
  - csharp
  name: Owner
  nameWithType: GenericSecurityDescriptor.Owner
  fullName: System.Security.AccessControl.GenericSecurityDescriptor.Owner
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "이 연결 되는 개체의 소유자를 가져오거나 설정 합니다. <xref href=&quot;System.Security.AccessControl.GenericSecurityDescriptor&quot;> </xref> 개체입니다."
  syntax:
    content: public abstract System.Security.Principal.SecurityIdentifier Owner { get; set; }
    return:
      type: System.Security.Principal.SecurityIdentifier
      description: "이 연결 되는 개체의 소유자 <xref href=&quot;System.Security.AccessControl.GenericSecurityDescriptor&quot;> </xref> 개체입니다."
  overload: System.Security.AccessControl.GenericSecurityDescriptor.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.GenericSecurityDescriptor.Revision
  id: Revision
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  langs:
  - csharp
  name: Revision
  nameWithType: GenericSecurityDescriptor.Revision
  fullName: System.Security.AccessControl.GenericSecurityDescriptor.Revision
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "수정 수준을 가져옵니다는 <xref href=&quot;System.Security.AccessControl.GenericSecurityDescriptor&quot;> </xref> 개체입니다."
  syntax:
    content: public static byte Revision { get; }
    return:
      type: System.Byte
      description: "수정 수준을 지정 하는 바이트 값은 <xref href=&quot;System.Security.AccessControl.GenericSecurityDescriptor&quot;> </xref>합니다."
  overload: System.Security.AccessControl.GenericSecurityDescriptor.Revision*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.AccessControl.GenericSecurityDescriptor.#ctor
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  isExternal: false
  name: GenericSecurityDescriptor()
  nameWithType: GenericSecurityDescriptor.GenericSecurityDescriptor()
  fullName: System.Security.AccessControl.GenericSecurityDescriptor.GenericSecurityDescriptor()
- uid: System.Security.AccessControl.GenericSecurityDescriptor.BinaryLength
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  isExternal: false
  name: BinaryLength
  nameWithType: GenericSecurityDescriptor.BinaryLength
  fullName: System.Security.AccessControl.GenericSecurityDescriptor.BinaryLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.AccessControl.GenericSecurityDescriptor.ControlFlags
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  isExternal: false
  name: ControlFlags
  nameWithType: GenericSecurityDescriptor.ControlFlags
  fullName: System.Security.AccessControl.GenericSecurityDescriptor.ControlFlags
- uid: System.Security.AccessControl.ControlFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: ControlFlags
  nameWithType: ControlFlags
  fullName: System.Security.AccessControl.ControlFlags
- uid: System.Security.AccessControl.GenericSecurityDescriptor.GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  isExternal: false
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: GenericSecurityDescriptor.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.GenericSecurityDescriptor.GetBinaryForm(Byte[],Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.AccessControl.GenericSecurityDescriptor.GetSddlForm(System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  isExternal: false
  name: GetSddlForm(AccessControlSections)
  nameWithType: GenericSecurityDescriptor.GetSddlForm(AccessControlSections)
  fullName: System.Security.AccessControl.GenericSecurityDescriptor.GetSddlForm(AccessControlSections)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.AccessControlSections
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlSections
  nameWithType: AccessControlSections
  fullName: System.Security.AccessControl.AccessControlSections
- uid: System.Security.AccessControl.GenericSecurityDescriptor.Group
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  isExternal: false
  name: Group
  nameWithType: GenericSecurityDescriptor.Group
  fullName: System.Security.AccessControl.GenericSecurityDescriptor.Group
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.Security.AccessControl.GenericSecurityDescriptor.IsSddlConversionSupported
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  isExternal: false
  name: IsSddlConversionSupported()
  nameWithType: GenericSecurityDescriptor.IsSddlConversionSupported()
  fullName: System.Security.AccessControl.GenericSecurityDescriptor.IsSddlConversionSupported()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.GenericSecurityDescriptor.Owner
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  isExternal: false
  name: Owner
  nameWithType: GenericSecurityDescriptor.Owner
  fullName: System.Security.AccessControl.GenericSecurityDescriptor.Owner
- uid: System.Security.AccessControl.GenericSecurityDescriptor.Revision
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  isExternal: false
  name: Revision
  nameWithType: GenericSecurityDescriptor.Revision
  fullName: System.Security.AccessControl.GenericSecurityDescriptor.Revision
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Security.AccessControl.GenericSecurityDescriptor.#ctor*
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  isExternal: false
  name: GenericSecurityDescriptor
  nameWithType: GenericSecurityDescriptor.GenericSecurityDescriptor
- uid: System.Security.AccessControl.GenericSecurityDescriptor.BinaryLength*
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  isExternal: false
  name: BinaryLength
  nameWithType: GenericSecurityDescriptor.BinaryLength
- uid: System.Security.AccessControl.GenericSecurityDescriptor.ControlFlags*
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  isExternal: false
  name: ControlFlags
  nameWithType: GenericSecurityDescriptor.ControlFlags
- uid: System.Security.AccessControl.GenericSecurityDescriptor.GetBinaryForm*
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  isExternal: false
  name: GetBinaryForm
  nameWithType: GenericSecurityDescriptor.GetBinaryForm
- uid: System.Security.AccessControl.GenericSecurityDescriptor.GetSddlForm*
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  isExternal: false
  name: GetSddlForm
  nameWithType: GenericSecurityDescriptor.GetSddlForm
- uid: System.Security.AccessControl.GenericSecurityDescriptor.Group*
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  isExternal: false
  name: Group
  nameWithType: GenericSecurityDescriptor.Group
- uid: System.Security.AccessControl.GenericSecurityDescriptor.IsSddlConversionSupported*
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  isExternal: false
  name: IsSddlConversionSupported
  nameWithType: GenericSecurityDescriptor.IsSddlConversionSupported
- uid: System.Security.AccessControl.GenericSecurityDescriptor.Owner*
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  isExternal: false
  name: Owner
  nameWithType: GenericSecurityDescriptor.Owner
- uid: System.Security.AccessControl.GenericSecurityDescriptor.Revision*
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  isExternal: false
  name: Revision
  nameWithType: GenericSecurityDescriptor.Revision
