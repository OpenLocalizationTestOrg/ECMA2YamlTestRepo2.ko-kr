### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.RSA
  id: RSA
  children:
  - System.Security.Cryptography.RSA.#ctor
  - System.Security.Cryptography.RSA.Create
  - System.Security.Cryptography.RSA.Create(System.String)
  - System.Security.Cryptography.RSA.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSA.DecryptValue(System.Byte[])
  - System.Security.Cryptography.RSA.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSA.EncryptValue(System.Byte[])
  - System.Security.Cryptography.RSA.ExportParameters(System.Boolean)
  - System.Security.Cryptography.RSA.FromXmlString(System.String)
  - System.Security.Cryptography.RSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.RSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.RSA.ImportParameters(System.Security.Cryptography.RSAParameters)
  - System.Security.Cryptography.RSA.KeyExchangeAlgorithm
  - System.Security.Cryptography.RSA.SignatureAlgorithm
  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.ToXmlString(System.Boolean)
  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  langs:
  - csharp
  name: RSA
  nameWithType: RSA
  fullName: System.Security.Cryptography.RSA
  type: Class
  summary: "RSA 알고리즘의 모든 구현이 상속 되는 기본 클래스를 나타냅니다."
  remarks: "구현 하는 증명이 클래스를 확장 한 `RSA` 키입니다. 이 새를 제공 하는 개발자에 게 필요 `RSA` 중요 한 구현 합니다.       id에 대 한 계층 멤버는이 클래스의 전용 모드는 `RSA` 알고리즘입니다.       <xref:System.Security.Cryptography.RSACryptoServiceProvider>는 Microsoft Enhanced Cryptographic Provider가 설치 되어 있는 경우 8 비트씩 증가-16384 384 비트 까지의 키 길이 지원 합니다.</xref:System.Security.Cryptography.RSACryptoServiceProvider>  Microsoft Base Cryptographic Provider가 설치 되어 있는 경우 8 비트씩 증가의 키 길이가 384 비트 까지의 512를 지원 합니다."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class RSA : System.Security.Cryptography.AsymmetricAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.AsymmetricAlgorithm
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.AsymmetricAlgorithm.Clear
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: RSA()
  nameWithType: RSA.RSA()
  fullName: System.Security.Cryptography.RSA.RSA()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> 클래스입니다."
  remarks: "이 <xref:System.Security.Cryptography.RSA>.</xref:System.Security.Cryptography.RSA> 에서 파생 된 클래스에서 호출 될 수 있는 보호 된 메서드 추상 클래스의 인스턴스를 만들 수 없습니다."
  syntax:
    content: protected RSA ();
    parameters: []
  overload: System.Security.Cryptography.RSA.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.Create
  id: Create
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: Create()
  nameWithType: RSA.Create()
  fullName: System.Security.Cryptography.RSA.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "기본 구현 인스턴스를 만듭니다는 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> 알고리즘입니다."
  syntax:
    content: public static System.Security.Cryptography.RSA Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.RSA
      description: "기본 구현은의 새 인스턴스 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>합니다."
  overload: System.Security.Cryptography.RSA.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: Create(String)
  nameWithType: RSA.Create(String)
  fullName: System.Security.Cryptography.RSA.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "지정 된 구현 인스턴스를 만듭니다 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>합니다."
  syntax:
    content: public static System.Security.Cryptography.RSA Create (string algName);
    parameters:
    - id: algName
      type: System.String
      description: "구현 이름 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> 사용 하도록 합니다."
    return:
      type: System.Security.Cryptography.RSA
      description: "지정 된 구현의 새 인스턴스 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>합니다."
  overload: System.Security.Cryptography.RSA.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  id: Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: Decrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSA.Decrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSA.Decrypt(Byte[],RSAEncryptionPadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "파생된 클래스에서 재정의 되 면 지정된 된 패딩 모드를 사용 하 여 입력된 데이터를 해독 합니다."
  syntax:
    content: public virtual byte[] Decrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: "해독할 데이터입니다."
    - id: padding
      type: System.Security.Cryptography.RSAEncryptionPadding
      description: "패딩 모드입니다."
    return:
      type: System.Byte[]
      description: "암호 해독 된 데이터입니다."
  overload: System.Security.Cryptography.RSA.Decrypt*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "파생된 클래스는이 메서드를 재정의 해야 합니다."
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.DecryptValue(System.Byte[])
  id: DecryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: DecryptValue(Byte[])
  nameWithType: RSA.DecryptValue(Byte[])
  fullName: System.Security.Cryptography.RSA.DecryptValue(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "파생된 클래스에서 재정의 되 면 개인 키를 사용 하 여 입력된 데이터를 해독 합니다."
  remarks: "에 [!INCLUDE[net_v452](~/add/includes/net-v452-md.md)] 되었으며.NET Framework의 이전 버전에서는이 메서드가 `abstract`합니다. 그러나 파생된 클래스에서 유일한 구현 <xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName>, 또한 했습니다는 <xref:System.NotSupportedException>예외.</xref:System.NotSupportedException> </xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName>"
  syntax:
    content: public virtual byte[] DecryptValue (byte[] rgb);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "암호 해독할 암호화 텍스트입니다."
    return:
      type: System.Byte[]
      description: "변수의 해독 결과 <code> rgb </code> 일반 텍스트로 매개 변수입니다."
  overload: System.Security.Cryptography.RSA.DecryptValue*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "이 메서드 호출은 지원 되지 않습니다. 부터이 예외가 throw 되는 [!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]합니다."
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  id: Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: Encrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSA.Encrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSA.Encrypt(Byte[],RSAEncryptionPadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "파생된 클래스에서 재정의 되 면 지정된 된 패딩 모드를 사용 하 여 입력된 데이터를 암호화 합니다."
  syntax:
    content: public virtual byte[] Encrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: "암호화할 데이터입니다."
    - id: padding
      type: System.Security.Cryptography.RSAEncryptionPadding
      description: "패딩 모드입니다."
    return:
      type: System.Byte[]
      description: "암호화 된 데이터입니다."
  overload: System.Security.Cryptography.RSA.Encrypt*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "파생된 클래스는이 메서드를 재정의 해야 합니다."
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.EncryptValue(System.Byte[])
  id: EncryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: EncryptValue(Byte[])
  nameWithType: RSA.EncryptValue(Byte[])
  fullName: System.Security.Cryptography.RSA.EncryptValue(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "파생된 클래스에서 재정의 하는 경우 공개 키를 사용 하 여 입력된 데이터를 암호화 합니다."
  remarks: "에 [!INCLUDE[net_v452](~/add/includes/net-v452-md.md)] 되었으며.NET Framework의 이전 버전에서는이 메서드가 `abstract`합니다. 그러나 파생된 클래스에서 유일한 구현 <xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName>, 또한 했습니다는 <xref:System.NotSupportedException>예외.</xref:System.NotSupportedException> </xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName>"
  syntax:
    content: public virtual byte[] EncryptValue (byte[] rgb);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "암호화할 일반 텍스트입니다."
    return:
      type: System.Byte[]
      description: "변수의 암호화 결과 <code> rgb </code> 암호화 텍스트로 매개 변수입니다."
  overload: System.Security.Cryptography.RSA.EncryptValue*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "이 메서드 호출은 지원 되지 않습니다. 부터이 예외가 throw 되는 [!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]합니다."
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.ExportParameters(System.Boolean)
  id: ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: ExportParameters(Boolean)
  nameWithType: RSA.ExportParameters(Boolean)
  fullName: System.Security.Cryptography.RSA.ExportParameters(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "파생된 클래스에서 재정의 되 면 내보냅니다는 <xref href=&quot;System.Security.Cryptography.RSAParameters&quot;> </xref>합니다."
  syntax:
    content: public abstract System.Security.Cryptography.RSAParameters ExportParameters (bool includePrivateParameters);
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>개인 매개 변수를 포함 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Security.Cryptography.RSAParameters
      description: "에 대 한 매개 변수 <xref href=&quot;System.Security.Cryptography.DSA&quot;> </xref>합니다."
  overload: System.Security.Cryptography.RSA.ExportParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.FromXmlString(System.String)
  id: FromXmlString(System.String)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: FromXmlString(String)
  nameWithType: RSA.FromXmlString(String)
  fullName: System.Security.Cryptography.RSA.FromXmlString(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "초기화는 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> 의 키 정보는 XML 문자열에서 개체입니다."
  remarks: "FromXmlString RSA를 사용 하 여 생성 된 XML 문자열에 중요 한 정보를 사용 하 여 개체를 초기화는 <xref:System.Security.Cryptography.RSA.ToXmlString%2A>메서드.</xref:System.Security.Cryptography.RSA.ToXmlString%2A>  FromXmlString 메서드는 공개 키를 포함 하는 XML 문자열 또는 공용 및 개인 키를 포함 하는 XML 문자열을 허용 합니다.       FromXmlString 메서드를 사용 하 여 간편 하 게 초기화할 <xref:System.Security.Cryptography.RSA>키 정보가.</xref:System.Security.Cryptography.RSA>      > [!CAUTION] > 보안 위협이 안전 하지 않은 위치에 개인 키가 포함 된 XML 문자열입니다.  악의적인 제&3; 자가 사용자의 개인 키에 액세스할 수 있는 경우 응용 프로그램의 보안을 손상 될 수 있습니다.  개인 키를 안전 하 게 유지 하기 위해 보안 키 컨테이너를 사용 합니다.  키 컨테이너에 개인 키를 저장 하는 방법에 대 한 자세한 내용은 참조 [하는 방법: 키 컨테이너에 비대칭 키 저장소](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public override void FromXmlString (string xmlString);
    parameters:
    - id: xmlString
      type: System.String
      description: "포함 하는 XML 문자열 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> 키 정보가 있습니다."
  overload: System.Security.Cryptography.RSA.FromXmlString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>xmlString</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "형식은 <code> xmlString </code> 매개 변수가 올바르지 않습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: HashData(Stream,HashAlgorithmName)
  nameWithType: RSA.HashData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSA.HashData(Stream,HashAlgorithmName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "파생된 클래스에서 재정의 되 면 지정된 된 해싱 알고리즘을 사용 하 여 지정 된 이진 스트림의 해시 값을 계산 합니다."
  syntax:
    content: protected virtual byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.IO.Stream
      description: "해시할 이진 스트림입니다."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "해시 알고리즘입니다."
    return:
      type: System.Byte[]
      description: "해시 된 데이터입니다."
  overload: System.Security.Cryptography.RSA.HashData*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "파생된 클래스는이 메서드를 재정의 해야 합니다."
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: RSA.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSA.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "파생된 클래스에서 재정의 되 면 지정된 된 해싱 알고리즘을 사용 하 여 지정 된 바이트 배열 부분의 해시 값을 계산 합니다."
  syntax:
    content: protected virtual byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.Byte[]
      description: "해시할 데이터입니다."
    - id: offset
      type: System.Int32
      description: "첫 번째 바이트의 인덱스 `data` 해시할입니다."
    - id: count
      type: System.Int32
      description: "해시할 바이트 수입니다."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "해시에 데이터를 사용 하는 알고리즘입니다."
    return:
      type: System.Byte[]
      description: "해시 된 데이터입니다."
  overload: System.Security.Cryptography.RSA.HashData*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "파생된 클래스는이 메서드를 재정의 해야 합니다."
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.ImportParameters(System.Security.Cryptography.RSAParameters)
  id: ImportParameters(System.Security.Cryptography.RSAParameters)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: ImportParameters(RSAParameters)
  nameWithType: RSA.ImportParameters(RSAParameters)
  fullName: System.Security.Cryptography.RSA.ImportParameters(RSAParameters)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "파생된 클래스에서 재정의 되 면 지정 된 가져옵니다 <xref href=&quot;System.Security.Cryptography.RSAParameters&quot;> </xref>합니다."
  syntax:
    content: public abstract void ImportParameters (System.Security.Cryptography.RSAParameters parameters);
    parameters:
    - id: parameters
      type: System.Security.Cryptography.RSAParameters
      description: "에 대 한 매개 변수 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>합니다."
  overload: System.Security.Cryptography.RSA.ImportParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.KeyExchangeAlgorithm
  id: KeyExchangeAlgorithm
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: KeyExchangeAlgorithm
  nameWithType: RSA.KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.RSA.KeyExchangeAlgorithm
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "이 구현에 사용 가능한 키 교환 알고리즘의 이름을 가져옵니다 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>합니다."
  syntax:
    content: public override string KeyExchangeAlgorithm { get; }
    return:
      type: System.String
      description: "&quot;RSA&quot;를 반환."
  overload: System.Security.Cryptography.RSA.KeyExchangeAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: SignatureAlgorithm
  nameWithType: RSA.SignatureAlgorithm
  fullName: System.Security.Cryptography.RSA.SignatureAlgorithm
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "해당이 구현에 사용 가능한 서명 알고리즘의 이름을 가져옵니다 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>합니다."
  syntax:
    content: public override string SignatureAlgorithm { get; }
    return:
      type: System.String
      description: "&quot;RSA&quot;를 반환."
  overload: System.Security.Cryptography.RSA.SignatureAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: SignData(Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.SignData(Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.SignData(Byte[],HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "지정 된 해시 알고리즘 및 패딩 모드를 사용 하 여 지정 된 바이트 배열의 해시 값을 계산 하 고 결과 해시 값을 서명 합니다."
  syntax:
    content: public byte[] SignData (byte[] data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: "해시를 계산 하는 입력된 데이터입니다."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "해시 값을 만드는 데 사용할 해시 알고리즘입니다."
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: "패딩 모드입니다."
    return:
      type: System.Byte[]
      description: "지정된 된 데이터에 대 한 RSA 서명입니다."
  overload: System.Security.Cryptography.RSA.SignData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hashAlgorithm</code>.<xref:System.Security.Cryptography.HashAlgorithmName.Name*> <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 &lt;xref:System.String.Empty?displayProperty=fullName&gt;합니다."
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: SignData(Stream,HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.SignData(Stream,HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.SignData(Stream,HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "지정 된 해시 알고리즘 및 패딩 모드를 사용 하 여 지정 된 스트림의 해시 값을 계산 하 고 결과 해시 값을 서명 합니다."
  syntax:
    content: public virtual byte[] SignData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: data
      type: System.IO.Stream
      description: "해시를 계산 하는 입력된 스트림."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "해시 값을 만드는 데 사용할 해시 알고리즘입니다."
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: "패딩 모드입니다."
    return:
      type: System.Byte[]
      description: "지정된 된 데이터에 대 한 RSA 서명입니다."
  overload: System.Security.Cryptography.RSA.SignData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hashAlgorithm</code>.<xref:System.Security.Cryptography.HashAlgorithmName.Name*> <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 &lt;xref:System.String.Empty?displayProperty=fullName&gt;합니다."
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: SignData(Byte[],Int32,Int32,HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.SignData(Byte[],Int32,Int32,HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.SignData(Byte[],Int32,Int32,HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "지정 된 해시 알고리즘 및 패딩 모드를 사용 하 여 지정 된 바이트 배열 일부의 해시 값을 계산 하 고 결과 해시 값을 서명 합니다."
  syntax:
    content: public virtual byte[] SignData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: "해시를 계산 하는 입력된 데이터입니다."
    - id: offset
      type: System.Int32
      description: "데이터를 사용 하 여 시작 하는 배열에 대 한 오프셋입니다."
    - id: count
      type: System.Int32
      description: "데이터로 사용할 배열의 바이트 수입니다."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "해시 값을 만드는 데 사용할 해시 알고리즘입니다."
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: "패딩 모드입니다."
    return:
      type: System.Byte[]
      description: "지정된 된 데이터에 대 한 RSA 서명입니다."
  overload: System.Security.Cryptography.RSA.SignData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hashAlgorithm</code>.<xref:System.Security.Cryptography.HashAlgorithmName.Name*> <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 &lt;xref:System.String.Empty?displayProperty=fullName&gt;합니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>가&0; 보다 작습니다.       -또는- <code>count</code> 가&0; 보다 작습니다.       -또는- <code>offset</code>  + <code>count</code> – 1의 상한을 초과 하는 인덱스에 <code>data</code>합니다."
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "파생된 클래스에서 재정의 되 면 지정 된 패딩을 사용 하 여 개인 키로 암호화 하 여 지정된 된 해시 값의 서명을 계산 합니다."
  syntax:
    content: public virtual byte[] SignHash (byte[] hash, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: hash
      type: System.Byte[]
      description: "서명할 데이터의 해시 값입니다."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "데이터의 해시 값을 만드는 데 사용 되는 해시 알고리즘입니다."
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: "안쪽 여백입니다."
    return:
      type: System.Byte[]
      description: "지정된 된 해시 값에 대 한 RSA 서명입니다."
  overload: System.Security.Cryptography.RSA.SignHash*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "파생된 클래스는이 메서드를 재정의 해야 합니다."
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.ToXmlString(System.Boolean)
  id: ToXmlString(System.Boolean)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: ToXmlString(Boolean)
  nameWithType: RSA.ToXmlString(Boolean)
  fullName: System.Security.Cryptography.RSA.ToXmlString(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "만들고 현재 키가 들어 있는 XML 문자열을 반환 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> 개체입니다."
  remarks: "ToXmlString 메서드 중 하나를 포함 하는 XML 문자열의 현재 공용 및 개인 키를 만듭니다 <xref:System.Security.Cryptography.RSA>개체 또는 현재 공개 키만 들어 <xref:System.Security.Cryptography.RSA>개체입니다.</xref:System.Security.Cryptography.RSA> </xref:System.Security.Cryptography.RSA>       RSA 키 정보를 편리 하 게 유지 해야 할 경우 ToXmlString 메서드를 사용 합니다.  초기화 하는 <xref:System.Security.Cryptography.RSA>XML 문자열을 사용 하 여 키를 갖는 개체는 <xref:System.Security.Cryptography.RSA.FromXmlString%2A>메서드.</xref:System.Security.Cryptography.RSA.FromXmlString%2A> </xref:System.Security.Cryptography.RSA>      > [!CAUTION] > 보안 위협이 안전 하지 않은 위치에 개인 키가 포함 된 XML 문자열입니다.  악의적인 제&3; 자가 사용자의 개인 키에 액세스할 수 있는 경우 응용 프로그램의 보안을 손상 될 수 있습니다.  개인 키를 안전 하 게 유지 하기 위해 보안 키 컨테이너를 사용 합니다.  키 컨테이너에 개인 키를 저장 하는 방법에 대 한 자세한 내용은 참조 [하는 방법: 키 컨테이너에 비대칭 키 저장소](~/add/includes/ajax-current-ext-md.md)합니다.       전달 하는 경우 `true` 결과 XML 문자열은 다음 형식으로 ToXmlString 메서드에: ```   <RSAKeyValue>      <Modulus>…</Modulus>      <Exponent>…</Exponent>      <P>…</P>      <Q>…</Q>      <DP>…</DP>      <DQ>…</DQ>      <InverseQ>…</InverseQ>      <D>…</D>   </RSAKeyValue>   ``` 전달 하는 경우 `false` 결과 XML 문자열은 다음 형식으로 ToXmlString 메서드:```   <RSAKeyValue>      <Modulus>…</Modulus>      <Exponent>…</Exponent>   </RSAKeyValue>   ```"
  syntax:
    content: public override string ToXmlString (bool includePrivateParameters);
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>공용 및 개인 RSA 키;를 포함 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 공개 키만 포함 하도록 합니다."
    return:
      type: System.String
      description: "현재 키를 포함 하는 XML 문자열 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.RSA.ToXmlString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: VerifyData(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.VerifyData(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.VerifyData(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "지정 된를 사용 하 여 지정된 된 데이터의 해시 값을 계산 하 여 디지털 서명이 유효한 지 확인 해시 알고리즘 및 패딩, 제공 된 서명과 비교 합니다."
  syntax:
    content: public bool VerifyData (byte[] data, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: "서명 된 데이터입니다."
    - id: signature
      type: System.Byte[]
      description: "확인할 서명 데이터입니다."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "데이터의 해시 값을 만드는 데 사용 되는 해시 알고리즘입니다."
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: "패딩 모드입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>서명이 잘못 되었습니다; 확인 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Cryptography.RSA.VerifyData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>signature</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hashAlgorithm</code>.<xref:System.Security.Cryptography.HashAlgorithmName.Name*> <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 &lt;xref:System.String.Empty?displayProperty=fullName&gt;합니다."
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: VerifyData(Stream,Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.VerifyData(Stream,Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.VerifyData(Stream,Byte[],HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "지정 된를 사용 하 여 지정 된 스트림의 해시 값을 계산 하 여 디지털 서명이 유효한 지 확인 해시 알고리즘 및 패딩, 제공 된 서명과 비교 합니다."
  syntax:
    content: public bool VerifyData (System.IO.Stream data, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: data
      type: System.IO.Stream
      description: "서명 된 데이터입니다."
    - id: signature
      type: System.Byte[]
      description: "확인할 서명 데이터입니다."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "데이터의 해시 값을 만드는 데 사용 되는 해시 알고리즘입니다."
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: "패딩 모드입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>서명이 잘못 되었습니다; 확인 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Cryptography.RSA.VerifyData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>signature</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hashAlgorithm</code>.<xref:System.Security.Cryptography.HashAlgorithmName.Name*> <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 &lt;xref:System.String.Empty?displayProperty=fullName&gt;합니다."
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: VerifyData(Byte[],Int32,Int32,Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.VerifyData(Byte[],Int32,Int32,Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.VerifyData(Byte[],Int32,Int32,Byte[],HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "데이터를 사용 하 여 지정 된 바이트 배열 부분의 해시 값을 계산 하 여 디지털 서명이 유효한 지 확인 해시 알고리즘 및 패딩, 제공 된 서명과 비교 합니다."
  syntax:
    content: public virtual bool VerifyData (byte[] data, int offset, int count, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: "서명 된 데이터입니다."
    - id: offset
      type: System.Int32
      description: "해시를 계산 하기 시작 하는 인덱스입니다."
    - id: count
      type: System.Int32
      description: "해시할 바이트 수입니다."
    - id: signature
      type: System.Byte[]
      description: "확인할 서명 데이터입니다."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "데이터의 해시 값을 만드는 데 사용 되는 해시 알고리즘입니다."
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: "패딩 모드입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>서명이 잘못 되었습니다; 확인 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Cryptography.RSA.VerifyData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>signature</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hashAlgorithm</code>.<xref:System.Security.Cryptography.HashAlgorithmName.Name*> <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 &lt;xref:System.String.Empty?displayProperty=fullName&gt;합니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>가&0; 보다 작습니다.       -또는- <code>count</code> 가&0; 보다 작습니다.       -또는- <code>offset</code>  + <code>count</code> – 1의 상한을 초과 하는 인덱스에 <code>data</code>합니다."
  platform:
  - net462
- uid: System.Security.Cryptography.RSA.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "지정 된를 사용 하 여 서명의 해시 값을 확인 하 여 디지털 서명이 유효한 지 확인 해시 알고리즘 및 패딩, 제공 된 해시 값을 비교 합니다."
  syntax:
    content: public virtual bool VerifyHash (byte[] hash, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: hash
      type: System.Byte[]
      description: "서명된 된 데이터의 해시 값입니다."
    - id: signature
      type: System.Byte[]
      description: "확인할 서명 데이터입니다."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "해시 값을 만드는 데 사용 되는 해시 알고리즘입니다."
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: "패딩 모드입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>서명이 잘못 되었습니다; 확인 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Cryptography.RSA.VerifyHash*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "파생된 클래스는이 메서드를 재정의 해야 합니다."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.NotImplementedException
  isExternal: true
  name: System.NotImplementedException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.RSA.#ctor
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: RSA()
  nameWithType: RSA.RSA()
  fullName: System.Security.Cryptography.RSA.RSA()
- uid: System.Security.Cryptography.RSA.Create
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: Create()
  nameWithType: RSA.Create()
  fullName: System.Security.Cryptography.RSA.Create()
- uid: System.Security.Cryptography.RSA
  parent: System.Security.Cryptography
  isExternal: false
  name: RSA
  nameWithType: RSA
  fullName: System.Security.Cryptography.RSA
- uid: System.Security.Cryptography.RSA.Create(System.String)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: Create(String)
  nameWithType: RSA.Create(String)
  fullName: System.Security.Cryptography.RSA.Create(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.RSA.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: Decrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSA.Decrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSA.Decrypt(Byte[],RSAEncryptionPadding)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.RSAEncryptionPadding
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAEncryptionPadding
  nameWithType: RSAEncryptionPadding
  fullName: System.Security.Cryptography.RSAEncryptionPadding
- uid: System.Security.Cryptography.RSA.DecryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: DecryptValue(Byte[])
  nameWithType: RSA.DecryptValue(Byte[])
  fullName: System.Security.Cryptography.RSA.DecryptValue(Byte[])
- uid: System.Security.Cryptography.RSA.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: Encrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSA.Encrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSA.Encrypt(Byte[],RSAEncryptionPadding)
- uid: System.Security.Cryptography.RSA.EncryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: EncryptValue(Byte[])
  nameWithType: RSA.EncryptValue(Byte[])
  fullName: System.Security.Cryptography.RSA.EncryptValue(Byte[])
- uid: System.Security.Cryptography.RSA.ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: ExportParameters(Boolean)
  nameWithType: RSA.ExportParameters(Boolean)
  fullName: System.Security.Cryptography.RSA.ExportParameters(Boolean)
- uid: System.Security.Cryptography.RSAParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAParameters
  nameWithType: RSAParameters
  fullName: System.Security.Cryptography.RSAParameters
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.RSA.FromXmlString(System.String)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: FromXmlString(String)
  nameWithType: RSA.FromXmlString(String)
  fullName: System.Security.Cryptography.RSA.FromXmlString(String)
- uid: System.Security.Cryptography.RSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: HashData(Stream,HashAlgorithmName)
  nameWithType: RSA.HashData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSA.HashData(Stream,HashAlgorithmName)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithmName
  nameWithType: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
- uid: System.Security.Cryptography.RSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: RSA.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSA.HashData(Byte[],Int32,Int32,HashAlgorithmName)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.RSA.ImportParameters(System.Security.Cryptography.RSAParameters)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: ImportParameters(RSAParameters)
  nameWithType: RSA.ImportParameters(RSAParameters)
  fullName: System.Security.Cryptography.RSA.ImportParameters(RSAParameters)
- uid: System.Security.Cryptography.RSA.KeyExchangeAlgorithm
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: RSA.KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.RSA.KeyExchangeAlgorithm
- uid: System.Security.Cryptography.RSA.SignatureAlgorithm
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: RSA.SignatureAlgorithm
  fullName: System.Security.Cryptography.RSA.SignatureAlgorithm
- uid: System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: SignData(Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.SignData(Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.SignData(Byte[],HashAlgorithmName,RSASignaturePadding)
- uid: System.Security.Cryptography.RSASignaturePadding
  parent: System.Security.Cryptography
  isExternal: false
  name: RSASignaturePadding
  nameWithType: RSASignaturePadding
  fullName: System.Security.Cryptography.RSASignaturePadding
- uid: System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: SignData(Stream,HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.SignData(Stream,HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.SignData(Stream,HashAlgorithmName,RSASignaturePadding)
- uid: System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: SignData(Byte[],Int32,Int32,HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.SignData(Byte[],Int32,Int32,HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.SignData(Byte[],Int32,Int32,HashAlgorithmName,RSASignaturePadding)
- uid: System.Security.Cryptography.RSA.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
- uid: System.Security.Cryptography.RSA.ToXmlString(System.Boolean)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: ToXmlString(Boolean)
  nameWithType: RSA.ToXmlString(Boolean)
  fullName: System.Security.Cryptography.RSA.ToXmlString(Boolean)
- uid: System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: VerifyData(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.VerifyData(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.VerifyData(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
- uid: System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: VerifyData(Stream,Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.VerifyData(Stream,Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.VerifyData(Stream,Byte[],HashAlgorithmName,RSASignaturePadding)
- uid: System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: VerifyData(Byte[],Int32,Int32,Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.VerifyData(Byte[],Int32,Int32,Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.VerifyData(Byte[],Int32,Int32,Byte[],HashAlgorithmName,RSASignaturePadding)
- uid: System.Security.Cryptography.RSA.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSA.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSA.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
- uid: System.Security.Cryptography.RSA.#ctor*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: RSA
  nameWithType: RSA.RSA
- uid: System.Security.Cryptography.RSA.Create*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: Create
  nameWithType: RSA.Create
- uid: System.Security.Cryptography.RSA.Decrypt*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: Decrypt
  nameWithType: RSA.Decrypt
- uid: System.Security.Cryptography.RSA.DecryptValue*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: DecryptValue
  nameWithType: RSA.DecryptValue
- uid: System.Security.Cryptography.RSA.Encrypt*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: Encrypt
  nameWithType: RSA.Encrypt
- uid: System.Security.Cryptography.RSA.EncryptValue*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: EncryptValue
  nameWithType: RSA.EncryptValue
- uid: System.Security.Cryptography.RSA.ExportParameters*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: ExportParameters
  nameWithType: RSA.ExportParameters
- uid: System.Security.Cryptography.RSA.FromXmlString*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: FromXmlString
  nameWithType: RSA.FromXmlString
- uid: System.Security.Cryptography.RSA.HashData*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: HashData
  nameWithType: RSA.HashData
- uid: System.Security.Cryptography.RSA.ImportParameters*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: ImportParameters
  nameWithType: RSA.ImportParameters
- uid: System.Security.Cryptography.RSA.KeyExchangeAlgorithm*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: RSA.KeyExchangeAlgorithm
- uid: System.Security.Cryptography.RSA.SignatureAlgorithm*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: RSA.SignatureAlgorithm
- uid: System.Security.Cryptography.RSA.SignData*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: SignData
  nameWithType: RSA.SignData
- uid: System.Security.Cryptography.RSA.SignHash*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: SignHash
  nameWithType: RSA.SignHash
- uid: System.Security.Cryptography.RSA.ToXmlString*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: ToXmlString
  nameWithType: RSA.ToXmlString
- uid: System.Security.Cryptography.RSA.VerifyData*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: VerifyData
  nameWithType: RSA.VerifyData
- uid: System.Security.Cryptography.RSA.VerifyHash*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: VerifyHash
  nameWithType: RSA.VerifyHash
