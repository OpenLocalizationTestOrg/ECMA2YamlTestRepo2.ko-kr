### YamlMime:ManagedReference
items:
- uid: System.Data.Objects.DataClasses.RelationshipManager
  id: RelationshipManager
  children:
  - System.Data.Objects.DataClasses.RelationshipManager.Create(System.Data.Objects.DataClasses.IEntityWithRelationships)
  - System.Data.Objects.DataClasses.RelationshipManager.GetAllRelatedEnds
  - System.Data.Objects.DataClasses.RelationshipManager.GetRelatedCollection``1(System.String,System.String)
  - System.Data.Objects.DataClasses.RelationshipManager.GetRelatedEnd(System.String,System.String)
  - System.Data.Objects.DataClasses.RelationshipManager.GetRelatedReference``1(System.String,System.String)
  - System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedCollection``1(System.String,System.String,System.Data.Objects.DataClasses.EntityCollection{``0})
  - System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedReference``1(System.String,System.String,System.Data.Objects.DataClasses.EntityReference{``0})
  - System.Data.Objects.DataClasses.RelationshipManager.OnDeserialized(System.Runtime.Serialization.StreamingContext)
  - System.Data.Objects.DataClasses.RelationshipManager.OnSerializing(System.Runtime.Serialization.StreamingContext)
  langs:
  - csharp
  name: RelationshipManager
  nameWithType: RelationshipManager
  fullName: System.Data.Objects.DataClasses.RelationshipManager
  type: Class
  summary: "개체 컨텍스트에서 개체 간의 관계를 추적 하는 데 사용 합니다."
  remarks: "Relationshipmanager를 반환할 개체 컨텍스트에서 개체 간의 관계를 추적에 사용 됩니다. 개체 컨텍스트에서 추적 하는 각 관계에 대해 relationshipmanager를 반환할 클래스의 인스턴스가 하나씩 있습니다. 관계는 개념적 모델에서 연결에 의해 정의 됩니다. 자세한 내용은 참조 [Association 요소 (CSDL)](http://msdn.microsoft.com/en-us/c305169a-8af7-432f-9ba7-800a163aed41)합니다."
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example adds new `SalesOrderHeader` entities to the `Contact` entity. Then it gets all related ends from the `Contact` entity and displays the relationship name, source role name, and target role name for each related end.  \n  \n [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#irelatedend)]\n [!code-cs[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#irelatedend)]"
  syntax:
    content: public class RelationshipManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelationshipManager.Create(System.Data.Objects.DataClasses.IEntityWithRelationships)
  id: Create(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.RelationshipManager
  langs:
  - csharp
  name: Create(IEntityWithRelationships)
  nameWithType: RelationshipManager.Create(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.RelationshipManager.Create(IEntityWithRelationships)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "새 <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref> 개체입니다."
  remarks: "Create 메서드는 <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>.</xref:System.Data.Objects.DataClasses.IEntityWithRelationships> 를 구현 하는 개체에서 사용 개체 서비스 요청 하는 경우는 <xref:System.Data.Objects.DataClasses.RelationshipManager>구현 하는 개체의 속성 <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>, 개체에 대 한 관계 관리자가 아직 없는 경우 Create 메서드가 호출 됩니다.</xref:System.Data.Objects.DataClasses.IEntityWithRelationships> </xref:System.Data.Objects.DataClasses.RelationshipManager>"
  syntax:
    content: public static System.Data.Objects.DataClasses.RelationshipManager Create (System.Data.Objects.DataClasses.IEntityWithRelationships owner);
    parameters:
    - id: owner
      type: System.Data.Objects.DataClasses.IEntityWithRelationships
      description: "이 메서드를 호출 하는 엔터티에 대 한 참조입니다."
    return:
      type: System.Data.Objects.DataClasses.RelationshipManager
      description: "요청 된 <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref>합니다."
  overload: System.Data.Objects.DataClasses.RelationshipManager.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelationshipManager.GetAllRelatedEnds
  id: GetAllRelatedEnds
  parent: System.Data.Objects.DataClasses.RelationshipManager
  langs:
  - csharp
  name: GetAllRelatedEnds()
  nameWithType: RelationshipManager.GetAllRelatedEnds()
  fullName: System.Data.Objects.DataClasses.RelationshipManager.GetAllRelatedEnds()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "관계 관리자가 관리 되는 모든 관련된 end의 열거형을 반환 합니다."
  remarks: "열거형을 반환 하는 GetAllRelatedEnds 메서드 <xref:System.Data.Objects.DataClasses.EntityCollection%601>및 <xref:System.Data.Objects.DataClasses.EntityReference%601>개체.</xref:System.Data.Objects.DataClasses.EntityReference%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601> <xref:System.Data.Objects.DataClasses.EntityCollection%601>및 <xref:System.Data.Objects.DataClasses.EntityReference%601> <xref:System.Data.Objects.DataClasses.RelatedEnd>.</xref:System.Data.Objects.DataClasses.RelatedEnd> 에서 파생 되는 구체적인 형식</xref:System.Data.Objects.DataClasses.EntityReference%601></xref:System.Data.Objects.DataClasses.EntityCollection%601> <xref:System.Data.Objects.DataClasses.RelatedEnd>추상 클래스 구현 하는 <xref:System.Data.Objects.DataClasses.IRelatedEnd>인터페이스.</xref:System.Data.Objects.DataClasses.IRelatedEnd> </xref:System.Data.Objects.DataClasses.RelatedEnd>"
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example adds new `SalesOrderHeader` entities to the `Contact` entity. Then it gets all related ends from the `Contact` entity and displays relationship name, source role name, and target role name for each related end,  \n  \n [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#irelatedend)]\n [!code-cs[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#irelatedend)]"
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Data.Objects.DataClasses.IRelatedEnd> GetAllRelatedEnds ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Data.Objects.DataClasses.IRelatedEnd}
      description: "&lt;xref:System.Collections.Generic.IEnumerable%601&gt; 구현 하는 개체의 <xref href=&quot;System.Data.Objects.DataClasses.IRelatedEnd&quot;> </xref>합니다. 관계가 아직 채워지지 않은 빈 열거형이 반환 됩니다."
  overload: System.Data.Objects.DataClasses.RelationshipManager.GetAllRelatedEnds*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelationshipManager.GetRelatedCollection``1(System.String,System.String)
  id: GetRelatedCollection``1(System.String,System.String)
  parent: System.Data.Objects.DataClasses.RelationshipManager
  langs:
  - csharp
  name: GetRelatedCollection(String,String)
  nameWithType: RelationshipManager.GetRelatedCollection(String,String)
  fullName: System.Data.Objects.DataClasses.RelationshipManager.GetRelatedCollection(String,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  syntax:
    content: 'public System.Data.Objects.DataClasses.EntityCollection<TTargetEntity> GetRelatedCollection<TTargetEntity> (string relationshipName, string targetRoleName) where TTargetEntity : class;'
    parameters:
    - id: relationshipName
      type: System.String
      description: "추가할 수 있습니다."
    - id: targetRoleName
      type: System.String
      description: "추가할 수 있습니다."
    return:
      type: System.Data.Objects.DataClasses.EntityCollection{TTargetEntity}
      description: "추가할 수 있습니다."
  overload: System.Data.Objects.DataClasses.RelationshipManager.GetRelatedCollection<TTargetEntity>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelationshipManager.GetRelatedEnd(System.String,System.String)
  id: GetRelatedEnd(System.String,System.String)
  parent: System.Data.Objects.DataClasses.RelationshipManager
  langs:
  - csharp
  name: GetRelatedEnd(String,String)
  nameWithType: RelationshipManager.GetRelatedEnd(String,String)
  fullName: System.Data.Objects.DataClasses.RelationshipManager.GetRelatedEnd(String,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "반환 된 &lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt; 또는 &lt;xref:System.Data.Objects.DataClasses.EntityReference%601&gt; 관계에 지정 된 대상 역할에 대 한 올바른 형식의 합니다."
  remarks: "이 메서드는 사용자가 관계의 양쪽 끝에 대 한 정적 형식 정보를 포함 한 전체 메타 데이터 없는 시나리오에서 사용할 수 있습니다. 이 메타 데이터에 지정 된는 <xref:System.Data.Objects.DataClasses.EdmRelationshipAttribute>개체 메타 데이터 시스템에서 검색할 수 있도록 관계의 각 엔터티 형식에 제공 된 관계 이름 및 대상 역할 이름에 따라.</xref:System.Data.Objects.DataClasses.EdmRelationshipAttribute>       관계 이름은 정규화 된 네임 스페이스 되지 않아야 합니다. 관계 이름에 네임 스페이스를 추가할 때 오류가 발생 합니다."
  syntax:
    content: public System.Data.Objects.DataClasses.IRelatedEnd GetRelatedEnd (string relationshipName, string targetRoleName);
    parameters:
    - id: relationshipName
      type: System.String
      description: "관계의 이름을 `targetRoleName` 정의 됩니다. 관계 이름이 정규화 된 네임 스페이스 않습니다."
    - id: targetRoleName
      type: System.String
      description: "대상 역할의 다른 쪽 end를 검색 하는 데 `relationshipName`합니다."
    return:
      type: System.Data.Objects.DataClasses.IRelatedEnd
      description: "<xref href=&quot;System.Data.Objects.DataClasses.IRelatedEnd&quot;></xref>나타내는 &lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt; 또는 &lt;xref:System.Data.Objects.DataClasses.EntityReference%601&gt; 검색 된입니다."
  overload: System.Data.Objects.DataClasses.RelationshipManager.GetRelatedEnd*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>relationshipName</code>or <code>targetRoleName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "소스 형식이 소유자의 형식과 일치 하지 않습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetRoleName</code>잘못 되었습니다.       -또는-메타 데이터에서 관계 유형을 찾을 수 없습니다."
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelationshipManager.GetRelatedReference``1(System.String,System.String)
  id: GetRelatedReference``1(System.String,System.String)
  parent: System.Data.Objects.DataClasses.RelationshipManager
  langs:
  - csharp
  name: GetRelatedReference(String,String)
  nameWithType: RelationshipManager.GetRelatedReference(String,String)
  fullName: System.Data.Objects.DataClasses.RelationshipManager.GetRelatedReference(String,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  syntax:
    content: 'public System.Data.Objects.DataClasses.EntityReference<TTargetEntity> GetRelatedReference<TTargetEntity> (string relationshipName, string targetRoleName) where TTargetEntity : class;'
    parameters:
    - id: relationshipName
      type: System.String
      description: "추가할 수 있습니다."
    - id: targetRoleName
      type: System.String
      description: "추가할 수 있습니다."
    return:
      type: System.Data.Objects.DataClasses.EntityReference{TTargetEntity}
      description: "추가할 수 있습니다."
  overload: System.Data.Objects.DataClasses.RelationshipManager.GetRelatedReference<TTargetEntity>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedCollection``1(System.String,System.String,System.Data.Objects.DataClasses.EntityCollection{``0})
  id: InitializeRelatedCollection``1(System.String,System.String,System.Data.Objects.DataClasses.EntityCollection{``0})
  parent: System.Data.Objects.DataClasses.RelationshipManager
  langs:
  - csharp
  name: InitializeRelatedCollection(String,String,EntityCollection<TTargetEntity>)
  nameWithType: RelationshipManager.InitializeRelatedCollection(String,String,EntityCollection<TTargetEntity>)
  fullName: System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedCollection(String,String,EntityCollection<TTargetEntity>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  syntax:
    content: 'public void InitializeRelatedCollection<TTargetEntity> (string relationshipName, string targetRoleName, System.Data.Objects.DataClasses.EntityCollection<TTargetEntity> entityCollection) where TTargetEntity : class;'
    parameters:
    - id: relationshipName
      type: System.String
      description: "추가할 수 있습니다."
    - id: targetRoleName
      type: System.String
      description: "추가할 수 있습니다."
    - id: entityCollection
      type: System.Data.Objects.DataClasses.EntityCollection{TTargetEntity}
      description: "추가할 수 있습니다."
  overload: System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedCollection<TTargetEntity>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedReference``1(System.String,System.String,System.Data.Objects.DataClasses.EntityReference{``0})
  id: InitializeRelatedReference``1(System.String,System.String,System.Data.Objects.DataClasses.EntityReference{``0})
  parent: System.Data.Objects.DataClasses.RelationshipManager
  langs:
  - csharp
  name: InitializeRelatedReference(String,String,EntityReference<TTargetEntity>)
  nameWithType: RelationshipManager.InitializeRelatedReference(String,String,EntityReference<TTargetEntity>)
  fullName: System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedReference(String,String,EntityReference<TTargetEntity>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  syntax:
    content: 'public void InitializeRelatedReference<TTargetEntity> (string relationshipName, string targetRoleName, System.Data.Objects.DataClasses.EntityReference<TTargetEntity> entityReference) where TTargetEntity : class;'
    parameters:
    - id: relationshipName
      type: System.String
      description: "추가할 수 있습니다."
    - id: targetRoleName
      type: System.String
      description: "추가할 수 있습니다."
    - id: entityReference
      type: System.Data.Objects.DataClasses.EntityReference{TTargetEntity}
      description: "추가할 수 있습니다."
  overload: System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedReference<TTargetEntity>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelationshipManager.OnDeserialized(System.Runtime.Serialization.StreamingContext)
  id: OnDeserialized(System.Runtime.Serialization.StreamingContext)
  parent: System.Data.Objects.DataClasses.RelationshipManager
  langs:
  - csharp
  name: OnDeserialized(StreamingContext)
  nameWithType: RelationshipManager.OnDeserialized(StreamingContext)
  fullName: System.Data.Objects.DataClasses.RelationshipManager.OnDeserialized(StreamingContext)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "와 함께 엔터티 개체를 deserialize 하기 위해 내부적으로 사용 된 <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref> 인스턴스."
  syntax:
    content: public void OnDeserialized (System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Serialize 된 스트림입니다."
  overload: System.Data.Objects.DataClasses.RelationshipManager.OnDeserialized*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelationshipManager.OnSerializing(System.Runtime.Serialization.StreamingContext)
  id: OnSerializing(System.Runtime.Serialization.StreamingContext)
  parent: System.Data.Objects.DataClasses.RelationshipManager
  langs:
  - csharp
  name: OnSerializing(StreamingContext)
  nameWithType: RelationshipManager.OnSerializing(StreamingContext)
  fullName: System.Data.Objects.DataClasses.RelationshipManager.OnSerializing(StreamingContext)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "개체를 준비 하는 서비스에서 호출 된 <xref href=&quot;System.Data.EntityKey&quot;> </xref> serialize 된 관계를 사용 하는 이진 serialization에 대 한 합니다."
  remarks: "관계 serialization 이진 serialization 에서만 지원 됩니다. Windows Communication Foundation 및 XML serialization에 대 한 관계를 포함 하 여 전체 개체 그래프에 지원 되지 않습니다. 자세한 내용은 참조 [개체 직렬화](http://msdn.microsoft.com/en-us/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99)합니다."
  syntax:
    content: public void OnSerializing (System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "원본 및 대상 지정 된 직렬화 된 스트림의 설명 하 고 추가 호출자 정의 컨텍스트를 제공 합니다."
  overload: System.Data.Objects.DataClasses.RelationshipManager.OnSerializing*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.Objects.DataClasses.RelationshipManager.Create(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.RelationshipManager
  isExternal: false
  name: Create(IEntityWithRelationships)
  nameWithType: RelationshipManager.Create(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.RelationshipManager.Create(IEntityWithRelationships)
- uid: System.Data.Objects.DataClasses.RelationshipManager
  parent: System.Data.Objects.DataClasses
  isExternal: false
  name: RelationshipManager
  nameWithType: RelationshipManager
  fullName: System.Data.Objects.DataClasses.RelationshipManager
- uid: System.Data.Objects.DataClasses.IEntityWithRelationships
  parent: System.Data.Objects.DataClasses
  isExternal: false
  name: IEntityWithRelationships
  nameWithType: IEntityWithRelationships
  fullName: System.Data.Objects.DataClasses.IEntityWithRelationships
- uid: System.Data.Objects.DataClasses.RelationshipManager.GetAllRelatedEnds
  parent: System.Data.Objects.DataClasses.RelationshipManager
  isExternal: false
  name: GetAllRelatedEnds()
  nameWithType: RelationshipManager.GetAllRelatedEnds()
  fullName: System.Data.Objects.DataClasses.RelationshipManager.GetAllRelatedEnds()
- uid: System.Collections.Generic.IEnumerable{System.Data.Objects.DataClasses.IRelatedEnd}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<IRelatedEnd>
  nameWithType: IEnumerable<IRelatedEnd>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Objects.DataClasses.IRelatedEnd>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Data.Objects.DataClasses.IRelatedEnd>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Objects.DataClasses.IRelatedEnd
    name: IRelatedEnd
    nameWithType: IRelatedEnd
    fullName: IRelatedEnd
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.DataClasses.RelationshipManager.GetRelatedCollection``1(System.String,System.String)
  parent: System.Data.Objects.DataClasses.RelationshipManager
  isExternal: false
  name: GetRelatedCollection(String,String)
  nameWithType: RelationshipManager.GetRelatedCollection(String,String)
  fullName: System.Data.Objects.DataClasses.RelationshipManager.GetRelatedCollection(String,String)
- uid: System.Data.Objects.DataClasses.EntityCollection{TTargetEntity}
  parent: System.Data.Objects.DataClasses
  isExternal: false
  name: EntityCollection<TTargetEntity>
  nameWithType: EntityCollection<TTargetEntity>
  fullName: System.Data.Objects.DataClasses.EntityCollection<TTargetEntity>
  spec.csharp:
  - uid: System.Data.Objects.DataClasses.EntityCollection`1
    name: EntityCollection
    nameWithType: EntityCollection
    fullName: EntityCollection<TTargetEntity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TTargetEntity
    name: TTargetEntity
    nameWithType: TTargetEntity
    fullName: TTargetEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.DataClasses.RelationshipManager.GetRelatedEnd(System.String,System.String)
  parent: System.Data.Objects.DataClasses.RelationshipManager
  isExternal: false
  name: GetRelatedEnd(String,String)
  nameWithType: RelationshipManager.GetRelatedEnd(String,String)
  fullName: System.Data.Objects.DataClasses.RelationshipManager.GetRelatedEnd(String,String)
- uid: System.Data.Objects.DataClasses.IRelatedEnd
  parent: System.Data.Objects.DataClasses
  isExternal: false
  name: IRelatedEnd
  nameWithType: IRelatedEnd
  fullName: System.Data.Objects.DataClasses.IRelatedEnd
- uid: System.Data.Objects.DataClasses.RelationshipManager.GetRelatedReference``1(System.String,System.String)
  parent: System.Data.Objects.DataClasses.RelationshipManager
  isExternal: false
  name: GetRelatedReference(String,String)
  nameWithType: RelationshipManager.GetRelatedReference(String,String)
  fullName: System.Data.Objects.DataClasses.RelationshipManager.GetRelatedReference(String,String)
- uid: System.Data.Objects.DataClasses.EntityReference{TTargetEntity}
  parent: System.Data.Objects.DataClasses
  isExternal: false
  name: EntityReference<TTargetEntity>
  nameWithType: EntityReference<TTargetEntity>
  fullName: System.Data.Objects.DataClasses.EntityReference<TTargetEntity>
  spec.csharp:
  - uid: System.Data.Objects.DataClasses.EntityReference`1
    name: EntityReference
    nameWithType: EntityReference
    fullName: EntityReference<TTargetEntity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TTargetEntity
    name: TTargetEntity
    nameWithType: TTargetEntity
    fullName: TTargetEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedCollection``1(System.String,System.String,System.Data.Objects.DataClasses.EntityCollection{``0})
  parent: System.Data.Objects.DataClasses.RelationshipManager
  isExternal: false
  name: InitializeRelatedCollection(String,String,EntityCollection<TTargetEntity>)
  nameWithType: RelationshipManager.InitializeRelatedCollection(String,String,EntityCollection<TTargetEntity>)
  fullName: System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedCollection(String,String,EntityCollection<TTargetEntity>)
- uid: System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedReference``1(System.String,System.String,System.Data.Objects.DataClasses.EntityReference{``0})
  parent: System.Data.Objects.DataClasses.RelationshipManager
  isExternal: false
  name: InitializeRelatedReference(String,String,EntityReference<TTargetEntity>)
  nameWithType: RelationshipManager.InitializeRelatedReference(String,String,EntityReference<TTargetEntity>)
  fullName: System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedReference(String,String,EntityReference<TTargetEntity>)
- uid: System.Data.Objects.DataClasses.RelationshipManager.OnDeserialized(System.Runtime.Serialization.StreamingContext)
  parent: System.Data.Objects.DataClasses.RelationshipManager
  isExternal: false
  name: OnDeserialized(StreamingContext)
  nameWithType: RelationshipManager.OnDeserialized(StreamingContext)
  fullName: System.Data.Objects.DataClasses.RelationshipManager.OnDeserialized(StreamingContext)
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Data.Objects.DataClasses.RelationshipManager.OnSerializing(System.Runtime.Serialization.StreamingContext)
  parent: System.Data.Objects.DataClasses.RelationshipManager
  isExternal: false
  name: OnSerializing(StreamingContext)
  nameWithType: RelationshipManager.OnSerializing(StreamingContext)
  fullName: System.Data.Objects.DataClasses.RelationshipManager.OnSerializing(StreamingContext)
- uid: System.Data.Objects.DataClasses.RelationshipManager.Create*
  parent: System.Data.Objects.DataClasses.RelationshipManager
  isExternal: false
  name: Create
  nameWithType: RelationshipManager.Create
- uid: System.Data.Objects.DataClasses.RelationshipManager.GetAllRelatedEnds*
  parent: System.Data.Objects.DataClasses.RelationshipManager
  isExternal: false
  name: GetAllRelatedEnds
  nameWithType: RelationshipManager.GetAllRelatedEnds
- uid: System.Data.Objects.DataClasses.RelationshipManager.GetRelatedCollection<TTargetEntity>*
  parent: System.Data.Objects.DataClasses.RelationshipManager
  isExternal: false
  name: GetRelatedCollection<TTargetEntity>
  nameWithType: RelationshipManager.GetRelatedCollection<TTargetEntity>
- uid: System.Data.Objects.DataClasses.RelationshipManager.GetRelatedEnd*
  parent: System.Data.Objects.DataClasses.RelationshipManager
  isExternal: false
  name: GetRelatedEnd
  nameWithType: RelationshipManager.GetRelatedEnd
- uid: System.Data.Objects.DataClasses.RelationshipManager.GetRelatedReference<TTargetEntity>*
  parent: System.Data.Objects.DataClasses.RelationshipManager
  isExternal: false
  name: GetRelatedReference<TTargetEntity>
  nameWithType: RelationshipManager.GetRelatedReference<TTargetEntity>
- uid: System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedCollection<TTargetEntity>*
  parent: System.Data.Objects.DataClasses.RelationshipManager
  isExternal: false
  name: InitializeRelatedCollection<TTargetEntity>
  nameWithType: RelationshipManager.InitializeRelatedCollection<TTargetEntity>
- uid: System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedReference<TTargetEntity>*
  parent: System.Data.Objects.DataClasses.RelationshipManager
  isExternal: false
  name: InitializeRelatedReference<TTargetEntity>
  nameWithType: RelationshipManager.InitializeRelatedReference<TTargetEntity>
- uid: System.Data.Objects.DataClasses.RelationshipManager.OnDeserialized*
  parent: System.Data.Objects.DataClasses.RelationshipManager
  isExternal: false
  name: OnDeserialized
  nameWithType: RelationshipManager.OnDeserialized
- uid: System.Data.Objects.DataClasses.RelationshipManager.OnSerializing*
  parent: System.Data.Objects.DataClasses.RelationshipManager
  isExternal: false
  name: OnSerializing
  nameWithType: RelationshipManager.OnSerializing
