### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.MethodRental
  id: MethodRental
  children:
  - System.Reflection.Emit.MethodRental.JitImmediate
  - System.Reflection.Emit.MethodRental.JitOnDemand
  - System.Reflection.Emit.MethodRental.SwapMethodBody(System.Type,System.Int32,System.IntPtr,System.Int32,System.Int32)
  - System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  langs:
  - csharp
  name: MethodRental
  nameWithType: MethodRental
  fullName: System.Reflection.Emit.MethodRental
  type: Class
  summary: "클래스의 메서드를 제공 하는 메서드 본문 구현 바꿔 빠른 방법을 제공 합니다."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._MethodRental))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class MethodRental : System.Runtime.InteropServices._MethodRental
  inheritance:
  - System.Object
  implements:
  - System.Runtime.InteropServices._MethodRental
  inheritedMembers: []
  platform:
  - net462
- uid: System.Reflection.Emit.MethodRental.JitImmediate
  id: JitImmediate
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: JitImmediate
  nameWithType: MethodRental.JitImmediate
  fullName: System.Reflection.Emit.MethodRental.JitImmediate
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "메서드-just-in-time (JIT) 즉시 컴파일된 되어야 함을 지정 합니다."
  syntax:
    content: public const int JitImmediate = 1;
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.MethodRental.JitOnDemand
  id: JitOnDemand
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: JitOnDemand
  nameWithType: MethodRental.JitOnDemand
  fullName: System.Reflection.Emit.MethodRental.JitOnDemand
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "메서드-just-in-time (JIT) 필요할 때 컴파일된 되어야 함을 지정 합니다."
  syntax:
    content: public const int JitOnDemand = 0;
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.MethodRental.SwapMethodBody(System.Type,System.Int32,System.IntPtr,System.Int32,System.Int32)
  id: SwapMethodBody(System.Type,System.Int32,System.IntPtr,System.Int32,System.Int32)
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: SwapMethodBody(Type,Int32,IntPtr,Int32,Int32)
  nameWithType: MethodRental.SwapMethodBody(Type,Int32,IntPtr,Int32,Int32)
  fullName: System.Reflection.Emit.MethodRental.SwapMethodBody(Type,Int32,IntPtr,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "메서드의 본문을 바꿉니다."
  remarks: "전역 메서드의 본문을 바꿀이 메서드를 사용할 수 없습니다.       메서드는 해당 메서드의 본문을 바꿀 형식을 포함 하는 동적 모듈을 만든 클라이언트에 의해만 호출할 수 있습니다."
  example:
  - "The following example illustrates how to swap a method body for a new body. It also illustrates how to obtain a method token for an existing method and how to construct a blob of bytes representing the Microsoft Intermediate Language (MSIL) code to be passed to `SwapMethodBody`.  \n  \n [!code-cpp[Classic MethodRental.SwapMethodBody Example#1](~/add/codesnippet/cpp/cc436dde-ab12-4c7e-9169-_1.cpp)]\n [!code-cs[Classic MethodRental.SwapMethodBody Example#1](~/add/codesnippet/csharp/cc436dde-ab12-4c7e-9169-_1.cs)]\n [!code-vb[Classic MethodRental.SwapMethodBody Example#1](~/add/codesnippet/visualbasic/cc436dde-ab12-4c7e-9169-_1.vb)]"
  syntax:
    content: public static void SwapMethodBody (Type cls, int methodtoken, IntPtr rgIL, int methodSize, int flags);
    parameters:
    - id: cls
      type: System.Type
      description: "메서드를 포함 하는 클래스입니다."
    - id: methodtoken
      type: System.Int32
      description: "메서드에 대 한 토큰입니다."
    - id: rgIL
      type: System.IntPtr
      description: "메서드에 대 한 포인터입니다. 이 메서드 헤더가 포함 되어야 합니다."
    - id: methodSize
      type: System.Int32
      description: "크기 (바이트)는 새 메서드 본문입니다."
    - id: flags
      type: System.Int32
      description: "교환 제어 플래그입니다. 상수 정의 참조 하십시오."
  overload: System.Reflection.Emit.MethodRental.SwapMethodBody*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>cls</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "형식 <code> cls </code> 완전 하지 않습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>methodSize</code>가 1 보다 작거나 4128767 (3effff 16 진수) 보다 큰 경우"
  platform:
  - net462
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_MethodRental#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: System.Runtime.InteropServices._MethodRental.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "이름 집합을 해당 디스패치 식별자 집합에 매핑합니다."
  remarks: "이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다. 에 대 한 자세한 내용은 `IDispatch::GetIDsOfNames`, MSDN Library를 참조 합니다."
  syntax:
    content: void _MethodRental.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: "나중에 사용하도록 예약되어 있습니다. IID_NULL 이어야 합니다."
    - id: rgszNames
      type: System.IntPtr
      description: "전달 된 이름의 배열을 매핑할 수 있습니다."
    - id: cNames
      type: System.UInt32
      description: "매핑할 이름의 수입니다."
    - id: lcid
      type: System.UInt32
      description: "이름을 해석할 로캘 컨텍스트."
    - id: rgDispId
      type: System.IntPtr
      description: "이름에 해당 하는 Id를 받는 호출자가 할당 된 배열입니다."
  overload: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetIDsOfNames*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "런타임에 바인딩된 COM을 사용 하 여 메서드는 `IDispatch` 인터페이스입니다."
  platform:
  - net462
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_MethodRental#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: System.Runtime.InteropServices._MethodRental.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "인터페이스에 대 한 형식 정보를 얻으려면 다음 사용할 수 있는 개체에 대 한 형식 정보를 검색 합니다."
  remarks: "이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다. 에 대 한 자세한 내용은 `IDispatch::GetTypeInfo`, MSDN Library를 참조 합니다."
  syntax:
    content: void _MethodRental.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: "반환할 형식 정보입니다."
    - id: lcid
      type: System.UInt32
      description: "형식 정보에 대 한 로캘 식별자입니다."
    - id: ppTInfo
      type: System.IntPtr
      description: "요청 된 형식 정보 개체에 대 한 포인터를 받습니다."
  overload: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfo*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "런타임에 바인딩된 COM을 사용 하 여 메서드는 `IDispatch` 인터페이스입니다."
  platform:
  - net462
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfoCount(System.UInt32@)
  id: System#Runtime#InteropServices#_MethodRental#GetTypeInfoCount(System.UInt32@)
  isEii: true
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: System.Runtime.InteropServices._MethodRental.GetTypeInfoCount(UInt32)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfoCount(UInt32)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "개체 (0 또는 1)를 제공 하는 형식 정보 인터페이스의 수를 검색 합니다."
  remarks: "이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다. 에 대 한 자세한 내용은 `IDispatch::GetTypeInfoCount`, MSDN Library를 참조 합니다."
  syntax:
    content: void _MethodRental.GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: "개체에서 제공 하는 형식 정보 인터페이스의 수를 받는 위치를 가리킵니다."
  overload: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfoCount*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "런타임에 바인딩된 COM을 사용 하 여 메서드는 `IDispatch` 인터페이스입니다."
  platform:
  - net462
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: System#Runtime#InteropServices#_MethodRental#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: System.Runtime.InteropServices._MethodRental.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "개체에서 노출 하는 메서드와 속성에 대 한 액세스를 제공 합니다."
  remarks: "이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다. 에 대 한 자세한 내용은 `IDispatch::Invoke`, MSDN Library를 참조 합니다."
  syntax:
    content: void _MethodRental.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: "멤버를 식별 합니다."
    - id: riid
      type: System.Guid
      description: "나중에 사용하도록 예약되어 있습니다. IID_NULL 이어야 합니다."
    - id: lcid
      type: System.UInt32
      description: "인수를 해석할 로캘 컨텍스트입니다."
    - id: wFlags
      type: System.Int16
      description: "호출의 컨텍스트를 설명 하는 플래그입니다."
    - id: pDispParams
      type: System.IntPtr
      description: "인수의 배열, 명명 된 인수 및 배열에 있는 요소 수에 대 한 수에 대 한 인수 Dispid의 배열에 포함 된 구조체에 대 한 포인터입니다."
    - id: pVarResult
      type: System.IntPtr
      description: "결과 저장 될 위치에 대 한 포인터입니다."
    - id: pExcepInfo
      type: System.IntPtr
      description: "예외 정보가 포함 된 구조에 대 한 포인터입니다."
    - id: puArgErr
      type: System.IntPtr
      description: "오류가 있는 첫 번째 인수의 인덱스입니다."
  overload: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#Invoke*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "런타임에 바인딩된 COM을 사용 하 여 메서드는 `IDispatch` 인터페이스입니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotImplementedException
  isExternal: true
  name: System.NotImplementedException
- uid: System.Reflection.Emit.MethodRental.JitImmediate
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: JitImmediate
  nameWithType: MethodRental.JitImmediate
  fullName: System.Reflection.Emit.MethodRental.JitImmediate
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.MethodRental.JitOnDemand
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: JitOnDemand
  nameWithType: MethodRental.JitOnDemand
  fullName: System.Reflection.Emit.MethodRental.JitOnDemand
- uid: System.Reflection.Emit.MethodRental.SwapMethodBody(System.Type,System.Int32,System.IntPtr,System.Int32,System.Int32)
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: SwapMethodBody(Type,Int32,IntPtr,Int32,Int32)
  nameWithType: MethodRental.SwapMethodBody(Type,Int32,IntPtr,Int32,Int32)
  fullName: System.Reflection.Emit.MethodRental.SwapMethodBody(Type,Int32,IntPtr,Int32,Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.GetTypeInfoCount(UInt32)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfoCount(UInt32)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfoCount(UInt32)
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Reflection.Emit.MethodRental.SwapMethodBody*
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: SwapMethodBody
  nameWithType: MethodRental.SwapMethodBody
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetIDsOfNames*
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.GetIDsOfNames
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetIDsOfNames
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfo*
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.GetTypeInfo
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfo
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfoCount*
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.GetTypeInfoCount
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfoCount
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#Invoke*
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.Invoke
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.Invoke
