### YamlMime:ManagedReference
items:
- uid: System.Web.HttpContext
  id: HttpContext
  children:
  - System.Web.HttpContext.#ctor(System.Web.HttpWorkerRequest)
  - System.Web.HttpContext.#ctor(System.Web.HttpRequest,System.Web.HttpResponse)
  - System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})
  - System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)
  - System.Web.HttpContext.AddError(System.Exception)
  - System.Web.HttpContext.AddOnRequestCompleted(System.Action{System.Web.HttpContext})
  - System.Web.HttpContext.AllErrors
  - System.Web.HttpContext.AllowAsyncDuringSyncStages
  - System.Web.HttpContext.Application
  - System.Web.HttpContext.ApplicationInstance
  - System.Web.HttpContext.AsyncPreloadMode
  - System.Web.HttpContext.Cache
  - System.Web.HttpContext.ClearError
  - System.Web.HttpContext.Current
  - System.Web.HttpContext.CurrentHandler
  - System.Web.HttpContext.CurrentNotification
  - System.Web.HttpContext.DisposeOnPipelineCompleted(System.IDisposable)
  - System.Web.HttpContext.Error
  - System.Web.HttpContext.GetAppConfig(System.String)
  - System.Web.HttpContext.GetConfig(System.String)
  - System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String)
  - System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  - System.Web.HttpContext.GetLocalResourceObject(System.String,System.String)
  - System.Web.HttpContext.GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  - System.Web.HttpContext.GetSection(System.String)
  - System.Web.HttpContext.Handler
  - System.Web.HttpContext.IsCustomErrorEnabled
  - System.Web.HttpContext.IsDebuggingEnabled
  - System.Web.HttpContext.IsPostNotification
  - System.Web.HttpContext.IsWebSocketRequest
  - System.Web.HttpContext.IsWebSocketRequestUpgrading
  - System.Web.HttpContext.Items
  - System.Web.HttpContext.PageInstrumentation
  - System.Web.HttpContext.PreviousHandler
  - System.Web.HttpContext.Profile
  - System.Web.HttpContext.RemapHandler(System.Web.IHttpHandler)
  - System.Web.HttpContext.Request
  - System.Web.HttpContext.Response
  - System.Web.HttpContext.RewritePath(System.String)
  - System.Web.HttpContext.RewritePath(System.String,System.Boolean)
  - System.Web.HttpContext.RewritePath(System.String,System.String,System.String)
  - System.Web.HttpContext.RewritePath(System.String,System.String,System.String,System.Boolean)
  - System.Web.HttpContext.Server
  - System.Web.HttpContext.Session
  - System.Web.HttpContext.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)
  - System.Web.HttpContext.SkipAuthorization
  - System.Web.HttpContext.System#IServiceProvider#GetService(System.Type)
  - System.Web.HttpContext.ThreadAbortOnTimeout
  - System.Web.HttpContext.Timestamp
  - System.Web.HttpContext.Trace
  - System.Web.HttpContext.User
  - System.Web.HttpContext.WebSocketNegotiatedProtocol
  - System.Web.HttpContext.WebSocketRequestedProtocols
  langs:
  - csharp
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
  type: Class
  summary: "개별 HTTP 요청에 대 한 모든 HTTP 관련 정보를 캡슐화합니다."
  remarks: "상속 된 클래스는 <xref:System.Web.IHttpModule>및 <xref:System.Web.IHttpHandler>인터페이스가 현재 HTTP 요청에 대 한 HttpContext 개체에 대 한 참조를 제공 됩니다.</xref:System.Web.IHttpHandler> </xref:System.Web.IHttpModule> 내장 함수에 대 한 액세스를 제공 하는 개체 <xref:System.Web.HttpContext.Request%2A>, <xref:System.Web.HttpContext.Response%2A>, 및 <xref:System.Web.HttpContext.Server%2A>요청에 대 한 속성.</xref:System.Web.HttpContext.Server%2A> </xref:System.Web.HttpContext.Response%2A> </xref:System.Web.HttpContext.Request%2A>"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192422).  \n  \n The following example demonstrates how to access and display properties of the HttpContext object. The context of the current HTTP request is accessed by using the <xref:System.Web.UI.Page.Context%2A> property of the <xref:System.Web.UI.Page> object.  \n  \n [!code-vb[System.Web.HttpContext#1](~/add/codesnippet/visualbasic/t-system.web.httpcontext_1.aspx)]\n [!code-cs[System.Web.HttpContext#1](~/add/codesnippet/csharp/t-system.web.httpcontext_1.aspx)]"
  syntax:
    content: 'public sealed class HttpContext : IServiceProvider'
  inheritance:
  - System.Object
  implements:
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.HttpContext.#ctor(System.Web.HttpWorkerRequest)
  id: '#ctor(System.Web.HttpWorkerRequest)'
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: HttpContext(HttpWorkerRequest)
  nameWithType: HttpContext.HttpContext(HttpWorkerRequest)
  fullName: System.Web.HttpContext.HttpContext(HttpWorkerRequest)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.HttpContext&quot;> </xref> 지정 된 작업자 요청 개체를 사용 하는 클래스입니다."
  syntax:
    content: public HttpContext (System.Web.HttpWorkerRequest wr);
    parameters:
    - id: wr
      type: System.Web.HttpWorkerRequest
      description: "<xref href=&quot;System.Web.HttpWorkerRequest&quot;> </xref> 현재 HTTP 요청에 대 한 개체입니다."
  overload: System.Web.HttpContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.#ctor(System.Web.HttpRequest,System.Web.HttpResponse)
  id: '#ctor(System.Web.HttpRequest,System.Web.HttpResponse)'
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: HttpContext(HttpRequest,HttpResponse)
  nameWithType: HttpContext.HttpContext(HttpRequest,HttpResponse)
  fullName: System.Web.HttpContext.HttpContext(HttpRequest,HttpResponse)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.HttpContext&quot;> </xref> 지정된 된 요청 및 응답 개체를 사용 하 여 클래스입니다."
  syntax:
    content: public HttpContext (System.Web.HttpRequest request, System.Web.HttpResponse response);
    parameters:
    - id: request
      type: System.Web.HttpRequest
      description: "<xref href=&quot;System.Web.HttpRequest&quot;> </xref> 현재 HTTP 요청에 대 한 개체입니다."
    - id: response
      type: System.Web.HttpResponse
      description: "<xref href=&quot;System.Web.HttpResponse&quot;> </xref> 현재 HTTP 요청에 대 한 개체입니다."
  overload: System.Web.HttpContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})
  id: AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
  nameWithType: HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
  fullName: System.Web.HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "허용 된 <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> 지정된 된 사용자 함수를 사용 하 여 요청 합니다."
  remarks: "이 메서드를 호출 하는 것은 <xref:System.Web.HttpContext.AcceptWebSocketRequest%2A>메서드 오버 로드와 전달 `null` 에 대 한는 `options` 매개 변수.</xref:System.Web.HttpContext.AcceptWebSocketRequest%2A>"
  syntax:
    content: public void AcceptWebSocketRequest (Func<System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task> userFunc);
    parameters:
    - id: userFunc
      type: System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task}
      description: "사용자 함수입니다."
  overload: System.Web.HttpContext.AcceptWebSocketRequest*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>userFunc</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "요청이 않습니다는 <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> 요청 합니다."
  platform:
  - net462
- uid: System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)
  id: AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
  nameWithType: HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
  fullName: System.Web.HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "허용 된 <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> 지정된 된 사용자 함수 및 옵션 개체를 사용 하 여 요청 합니다."
  syntax:
    content: public void AcceptWebSocketRequest (Func<System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task> userFunc, System.Web.WebSockets.AspNetWebSocketOptions options);
    parameters:
    - id: userFunc
      type: System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task}
      description: "사용자 함수입니다."
    - id: options
      type: System.Web.WebSockets.AspNetWebSocketOptions
      description: "옵션 개체입니다."
  overload: System.Web.HttpContext.AcceptWebSocketRequest*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>userFunc</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "요청이 않습니다는 <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> 요청 합니다."
  platform:
  - net462
- uid: System.Web.HttpContext.AddError(System.Exception)
  id: AddError(System.Exception)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AddError(Exception)
  nameWithType: HttpContext.AddError(Exception)
  fullName: System.Web.HttpContext.AddError(Exception)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "현재 HTTP 요청에 대 한 예외 컬렉션에 예외를 추가 합니다."
  syntax:
    content: public void AddError (Exception errorInfo);
    parameters:
    - id: errorInfo
      type: System.Exception
      description: "<xref:System.Exception>예외 컬렉션에 추가 합니다.</xref:System.Exception>"
  overload: System.Web.HttpContext.AddError*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.AddOnRequestCompleted(System.Action{System.Web.HttpContext})
  id: AddOnRequestCompleted(System.Action{System.Web.HttpContext})
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AddOnRequestCompleted(Action<HttpContext>)
  nameWithType: HttpContext.AddOnRequestCompleted(Action<HttpContext>)
  fullName: System.Web.HttpContext.AddOnRequestCompleted(Action<HttpContext>)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "요청의 HTTP 부분이 종료 될 때 발생 하는 가상 이벤트를 발생 시킵니다."
  remarks: "이 이벤트가 발생 하기 전에 <xref:System.Web.WebSockets.AspNetWebSocket>연결을 시작 합니다.</xref:System.Web.WebSockets.AspNetWebSocket>"
  syntax:
    content: public System.Web.ISubscriptionToken AddOnRequestCompleted (Action<System.Web.HttpContext> callback);
    parameters:
    - id: callback
      type: System.Action{System.Web.HttpContext}
      description: "HTTP 컨텍스트 개체입니다."
    return:
      type: System.Web.ISubscriptionToken
      description: "구독 토큰입니다."
  overload: System.Web.HttpContext.AddOnRequestCompleted*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>callback</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpContext.AllErrors
  id: AllErrors
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AllErrors
  nameWithType: HttpContext.AllErrors
  fullName: System.Web.HttpContext.AllErrors
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "HTTP 요청을 처리 하는 동안 누적 된 오류의 배열을 가져옵니다."
  syntax:
    content: public Exception[] AllErrors { get; }
    return:
      type: System.Exception[]
      description: "배열을 <xref:System.Exception>현재 HTTP 요청에 대 한 개체입니다.</xref:System.Exception>"
  overload: System.Web.HttpContext.AllErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.AllowAsyncDuringSyncStages
  id: AllowAsyncDuringSyncStages
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AllowAsyncDuringSyncStages
  nameWithType: HttpContext.AllowAsyncDuringSyncStages
  fullName: System.Web.HttpContext.AllowAsyncDuringSyncStages
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "일부를 예상 하지 못한 경우 ASP.NET 요청 처리 하는 동안 비동기 작업이 허용 되는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "이 플래그 설정 하지 않으면 `true`, ASP.NET 비동기 API를 오용 하 고 응용 프로그램 감지 되 면 예외가 throw 됩니다. 이 비동기 작업이 필요 하지 않습니다, 파이프라인 처리 요청에 포함 하는 동안 비동기 메서드를 호출 하려는 경우 또는 비동기 모듈 또는 처리기 완료 신호를 때 아직 처리 중인 비동기 작업 하는 경우 발생할 수 있습니다. 이 동작은 안전망을 맞지 않는 비동기 코드 패턴을 예상 하 고 부정적인 영향이 있을 수 있습니다를 작성 하는 경우 초기에 알려 주는 의미 합니다."
  syntax:
    content: public bool AllowAsyncDuringSyncStages { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>ASP.NET 때 필요 하지 않습니다; 한 번에 비동기 API를 사용 하는 경우 예외가 throw 됩니다 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.HttpContext.AllowAsyncDuringSyncStages*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Application
  id: Application
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Application
  nameWithType: HttpContext.Application
  fullName: System.Web.HttpContext.Application
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "가져옵니다는 <xref href=&quot;System.Web.HttpApplicationState&quot;> </xref> 현재 HTTP 요청에 대 한 개체입니다."
  syntax:
    content: public System.Web.HttpApplicationState Application { get; }
    return:
      type: System.Web.HttpApplicationState
      description: "<xref href=&quot;System.Web.HttpApplicationState&quot;> </xref> 현재 HTTP 요청에 대 한 합니다.       가져오려는 <xref href=&quot;System.Web.HttpApplication&quot;> </xref> 현재 HTTP 요청에 대 한 개체를 <xref:System.Web.HttpContext.ApplicationInstance*>.</xref:System.Web.HttpContext.ApplicationInstance*> 를 가져오려면 (ASP.NET에서 사용 하 여 <xref uid=&quot;langword_csharp_ApplicationInstance&quot; name=&quot;ApplicationInstance&quot; href=&quot;&quot;> </xref> 대신 <xref uid=&quot;langword_csharp_Application&quot; name=&quot;Application&quot; href=&quot;&quot;> </xref> 현재 참조 하는 속성 이름을으로 <xref href=&quot;System.Web.HttpApplication&quot;> </xref> ASP.NET과 기본 ASP 사이의 혼동을 피하기 위해 인스턴스. 기본 ASP에서 <xref uid=&quot;langword_csharp_Application&quot; name=&quot;Application&quot; href=&quot;&quot;> </xref> 은 전역 응용 프로그램 상태 사전을 참조 합니다.)"
  overload: System.Web.HttpContext.Application*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.ApplicationInstance
  id: ApplicationInstance
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: ApplicationInstance
  nameWithType: HttpContext.ApplicationInstance
  fullName: System.Web.HttpContext.ApplicationInstance
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "가져오거나는 <xref href=&quot;System.Web.HttpApplication&quot;> </xref> 현재 HTTP 요청에 대 한 개체입니다."
  syntax:
    content: public System.Web.HttpApplication ApplicationInstance { get; set; }
    return:
      type: System.Web.HttpApplication
      description: "<xref href=&quot;System.Web.HttpApplication&quot;> </xref> 현재 HTTP 요청에 대 한 합니다.       ASP.NET에서 사용 하 여 <xref uid=&quot;langword_csharp_ApplicationInstance&quot; name=&quot;ApplicationInstance&quot; href=&quot;&quot;> </xref> 대신 <xref uid=&quot;langword_csharp_Application&quot; name=&quot;Application&quot; href=&quot;&quot;> </xref> 현재 참조 하는 속성 이름을으로 <xref href=&quot;System.Web.HttpApplication&quot;> </xref> ASP.NET과 기본 ASP 사이의 혼동을 피하기 위해 인스턴스. 기본 ASP에서 <xref uid=&quot;langword_csharp_Application&quot; name=&quot;Application&quot; href=&quot;&quot;> </xref> 은 전역 응용 프로그램 상태 사전을 참조 합니다."
  overload: System.Web.HttpContext.ApplicationInstance*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "통합된 모드의 IIS 7.0 웹 응용 프로그램이 실행 중인지 그리고 속성 값에서 null이 아닌 값을 변경 하려고 했습니다 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Web.HttpContext.AsyncPreloadMode
  id: AsyncPreloadMode
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AsyncPreloadMode
  nameWithType: HttpContext.AsyncPreloadMode
  fullName: System.Web.HttpContext.AsyncPreloadMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "비동기 미리 로드 모드와 관련 된 플래그를 포함 하는 개체를 가져오거나 설정 합니다."
  remarks: "이 속성은 액세스 처음으로 비동기 미리 로드 모드에 대 한 플래그를 포함 하는 개체에서 로드 되는 <xref:System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode%2A>구성 파일에서 설정 합니다.</xref:System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode%2A>       하지만이 속성을 프로그래밍 방식으로 설정할 수 있습니다, 속성 값을 변경만 효과가 속성 보다 빠르게 설정 된 경우는 `ExecuteRequestHandler` ASP.NET 요청 파이프라인의 단계입니다."
  syntax:
    content: public System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode { get; set; }
    return:
      type: System.Web.Configuration.AsyncPreloadModeFlags
      description: "비동기 미리 로드 모드와 관련 된 플래그를 포함 하는 개체입니다."
  overload: System.Web.HttpContext.AsyncPreloadMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Cache
  id: Cache
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Cache
  nameWithType: HttpContext.Cache
  fullName: System.Web.HttpContext.Cache
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "가져옵니다는 <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> 은 현재 어플리케이션 도메인에 대 한 개체입니다."
  remarks: "인스턴스가 두 개는 <xref:System.Web.Caching.Cache>각 응용 프로그램 도메인.</xref:System.Web.Caching.Cache> 결과적으로 <xref:System.Web.Caching.Cache>캐시 속성에서 반환 되는 개체는 <xref:System.Web.Caching.Cache>응용 프로그램 도메인의 모든 요청에 대 한 개체입니다.</xref:System.Web.Caching.Cache> </xref:System.Web.Caching.Cache>"
  syntax:
    content: public System.Web.Caching.Cache Cache { get; }
    return:
      type: System.Web.Caching.Cache
      description: "<xref href=&quot;System.Web.Caching.Cache&quot;> </xref> 은 현재 어플리케이션 도메인에 대 한 합니다."
  overload: System.Web.HttpContext.Cache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.ClearError
  id: ClearError
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: ClearError()
  nameWithType: HttpContext.ClearError()
  fullName: System.Web.HttpContext.ClearError()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "현재 HTTP 요청에 대 한 오류를 모두 지웁니다."
  syntax:
    content: public void ClearError ();
    parameters: []
  overload: System.Web.HttpContext.ClearError*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Current
  id: Current
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Current
  nameWithType: HttpContext.Current
  fullName: System.Web.HttpContext.Current
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "가져오거나는 <xref href=&quot;System.Web.HttpContext&quot;> </xref> 현재 HTTP 요청에 대 한 개체입니다."
  remarks: "이 속성은 <xref:System.Web.HttpContext>클래스</xref:System.Web.HttpContext> 의 정적 속성 속성 저장소에서 <xref:System.Web.HttpContext>현재 요청에 적용 되는 인스턴스.</xref:System.Web.HttpContext> 이 인스턴스의 속성은 <xref:System.Web.HttpContext>클래스</xref:System.Web.HttpContext> 의 비정적 속성       사용할 수도 있습니다는 <xref:System.Web.UI.Page.Context%2A?displayProperty=fullName>속성에 액세스는 <xref:System.Web.HttpContext>현재 HTTP 요청에 대 한 개체입니다.</xref:System.Web.HttpContext> </xref:System.Web.UI.Page.Context%2A?displayProperty=fullName>"
  example:
  - "The following code example uses the Current property to access the <xref:System.Web.HttpContext.AddError%2A?displayProperty=fullName> and <xref:System.Web.HttpContext.ClearError%2A?displayProperty=fullName> methods and the <xref:System.Web.HttpContext.AllErrors%2A?displayProperty=fullName> property. The example creates three custom exceptions using the <xref:System.Web.HttpContext.AddError%2A> method and uses the <xref:System.Web.HttpContext.AllErrors%2A> property to load these exceptions to an array. It then writes the array to the containing page and uses the <xref:System.Web.HttpContext.ClearError%2A> method to clear all the errors from the <xref:System.Web.UI.Page.Context%2A> property.  \n  \n```c#  \nprotected void Page_Load(object sender, EventArgs e)  \n{  \n    HttpContext context = HttpContext.Current;  \n    Response.Write(\"<p>HttpContext.Current Example:</p>\");  \n  \n    // Add three custom exceptions.  \n    context.AddError(new Exception(\"New Exception #1\"));  \n    context.AddError(new Exception(\"New Exception #2\"));  \n    context.AddError(new Exception(\"New Exception #3\"));  \n  \n    // Capture all the new Exceptions in an array.  \n    Exception[] errs = context.AllErrors;  \n  \n    foreach (Exception ex in errs)  \n    {  \n        Response.Write(\"<p>\" + Server.HtmlEncode(ex.ToString()) + \"</p>\");  \n    }  \n  \n    // Clear the exceptions so ASP.NET won't handle them.  \n    context.ClearError();  \n}  \n```  \n  \n```vb  \nProtected Sub Page_Load(sender As Object, e As EventArgs)  \nDim context As HttpContext = HttpContext.Current  \nResponse.Write(\"<p>HttpContext.Current Example:</p>\")  \n  \n' Add three custom exceptions.  \ncontext.AddError(New Exception(\"New Exception #1\"))  \ncontext.AddError(New Exception(\"New Exception #2\"))  \ncontext.AddError(New Exception(\"New Exception #3\"))  \n  \n' Capture all the new Exceptions in an array.  \nDim errs As Exception() = context.AllErrors  \n  \nFor Each ex As Exception In errs  \nResponse.Write(\"<p>\" & Server.HtmlEncode(ex.ToString()) & \"</p>\")  \nNext  \n  \n' Clear the exceptions so ASP.NET won't handle them.  \ncontext.ClearError()  \nEnd Sub  \n  \n```"
  syntax:
    content: public static System.Web.HttpContext Current { get; set; }
    return:
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> 현재 HTTP 요청에 대 한 인스턴스."
  overload: System.Web.HttpContext.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.CurrentHandler
  id: CurrentHandler
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: CurrentHandler
  nameWithType: HttpContext.CurrentHandler
  fullName: System.Web.HttpContext.CurrentHandler
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "가져옵니다는 <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> 현재 실행 중인 처리기를 나타내는 개체입니다."
  remarks: "CurrentHandler 속성에 의해 참조 되는 현재 실행 중인 처리기에서 참조 하는 처리기 보다 다를 수 있습니다는 <xref:System.Web.HttpContext.Handler%2A>속성.</xref:System.Web.HttpContext.Handler%2A> 이 다른 처리기를 사용 하 여 요청 될 때 발생할 수 있습니다는 <xref:System.Web.HttpServerUtility.Execute%2A>메서드 또는 <xref:System.Web.HttpServerUtility.Transfer%2A>메서드.</xref:System.Web.HttpServerUtility.Transfer%2A> </xref:System.Web.HttpServerUtility.Execute%2A> 현재 실행 중인 처리기 처리가 완료 되 면 이전에 확인된 처리기 복원 됩니다."
  syntax:
    content: public System.Web.IHttpHandler CurrentHandler { get; }
    return:
      type: System.Web.IHttpHandler
      description: "<xref href=&quot;System.Web.IHttpHandler&quot;> </xref> 현재 실행 중인 처리기를 나타내는입니다."
  overload: System.Web.HttpContext.CurrentHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.CurrentNotification
  id: CurrentNotification
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: CurrentNotification
  nameWithType: HttpContext.CurrentNotification
  fullName: System.Web.HttpContext.CurrentNotification
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "가져옵니다는 <xref href=&quot;System.Web.RequestNotification&quot;> </xref> 현재를 나타내는 값 <xref href=&quot;System.Web.HttpApplication&quot;> </xref> 처리 합니다."
  remarks: "CurrentNotification 속성에 통합된 파이프라인 모드가 필요 [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] 이상 및.NET Framework 버전 3.0. 속성이 반환 하는 사용 가능한 경우 한 <xref:System.Web.RequestNotification>값.</xref:System.Web.RequestNotification> CurrentNotification 속성 값의 이벤트 (event)는 <xref:System.Web.HttpApplication>인스턴스 현재 요청을 처리 합니다.</xref:System.Web.HttpApplication>       CurrentNotification 속성을 설정할 수 없습니다. 에 의해 설정 된 대신 [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] ASP.NET 파이프라인에서 요청을 처리 하는 동안 합니다. CurrentNotification 속성을 설정 하면 컴파일 오류가 발생 합니다.       CurrentNotification는.NET Framework 버전 3.5에서에서 도입 되었습니다.  자세한 내용은 참조 [버전 및 종속성](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example demonstrates how to use the CurrentNotification property to determine what event of the <xref:System.Web.HttpApplication> object that is handling the current request is being processed. In the example, the event handler handles several events of the <xref:System.Web.HttpApplication> object, and the CurrentNotification property determines what code is invoked for each event being handled.  \n  \n [!code-cs[System.Web.HttpResponse.IsPostNotification#1](~/add/codesnippet/csharp/p-system.web.httpcontext_0_1.cs)]\n [!code-vb[System.Web.HttpResponse.IsPostNotification#1](~/add/codesnippet/visualbasic/p-system.web.httpcontext_0_1.vb)]"
  syntax:
    content: public System.Web.RequestNotification CurrentNotification { get; }
    return:
      type: System.Web.RequestNotification
      description: "중 하나는 <xref href=&quot;System.Web.RequestNotification&quot;> </xref> 값입니다."
  overload: System.Web.HttpContext.CurrentNotification*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "작업을 수행 하려면 통합된 파이프라인 모드의 [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] 이상 및.NET Framework 버전 3.0."
  platform:
  - net462
- uid: System.Web.HttpContext.DisposeOnPipelineCompleted(System.IDisposable)
  id: DisposeOnPipelineCompleted(System.IDisposable)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: DisposeOnPipelineCompleted(IDisposable)
  nameWithType: HttpContext.DisposeOnPipelineCompleted(IDisposable)
  fullName: System.Web.HttpContext.DisposeOnPipelineCompleted(IDisposable)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "개체의 수 있도록 <xref:System.IDisposable.Dispose*>때 호출 될 메서드는 <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> 이 요청의 연결 부분이 완료 될.</xref:System.IDisposable.Dispose*>"
  remarks: "<xref:System.IDisposable.Dispose%2A>대상 개체의 메서드는 요청의 HTTP 부분이 후 및 <xref:System.Web.WebSockets.AspNetWebSocket>연결 종료.</xref:System.Web.WebSockets.AspNetWebSocket> </xref:System.IDisposable.Dispose%2A> <xref:System.Web.HttpContext>개체를 검사 하기 위해 사용할 수 없습니다.</xref:System.Web.HttpContext>"
  syntax:
    content: public System.Web.ISubscriptionToken DisposeOnPipelineCompleted (IDisposable target);
    parameters:
    - id: target
      type: System.IDisposable
      description: "개체가 해당 <xref:System.IDisposable.Dispose*>메서드를 호출 해야 때는 <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> 요청의 연결 부분이 완료 될.</xref:System.IDisposable.Dispose*>"
    return:
      type: System.Web.ISubscriptionToken
      description: "구독 토큰입니다."
  overload: System.Web.HttpContext.DisposeOnPipelineCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Error
  id: Error
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Error
  nameWithType: HttpContext.Error
  fullName: System.Web.HttpContext.Error
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "요청 처리를 HTTP 동안 누적 된 첫 번째 오류 (있는 경우)을 가져옵니다."
  syntax:
    content: public Exception Error { get; }
    return:
      type: System.Exception
      description: "첫 번째 <xref:System.Exception>현재 HTTP 요청/응답에 대 한 고, 그렇지 않으면 프로세스 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> HTTP 요청을 처리 하는 동안 오류가 발생 하는 경우.</xref:System.Exception> 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.HttpContext.Error*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.GetAppConfig(System.String)
  id: GetAppConfig(System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetAppConfig(String)
  nameWithType: HttpContext.GetAppConfig(String)
  fullName: System.Web.HttpContext.GetAppConfig(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "요청 된 현재 응용 프로그램에 대 한 구성 정보를 반환 합니다."
  remarks: "GetAppConfig 메서드는 더 이상 사용 되지 않습니다. 사용 하 여는 <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A>의 메서드는 <xref:System.Web.Configuration.WebConfigurationManager>클래스를 현재 응용 프로그램에 대 한 구성 정보를 가져옵니다.</xref:System.Web.Configuration.WebConfigurationManager> </xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A>"
  syntax:
    content: public static object GetAppConfig (string name);
    parameters:
    - id: name
      type: System.String
      description: "정보가 요청 된 응용 프로그램 구성 태그입니다."
    return:
      type: System.Object
      description: "구성 정보를 포함 하는 개체입니다. (반환 되는 구성 섹션에 사용 하기 전에 적절 한 구성 형식 캐스팅 합니다.)"
  overload: System.Web.HttpContext.GetAppConfig*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.GetConfig(System.String)
  id: GetConfig(System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetConfig(String)
  nameWithType: HttpContext.GetConfig(String)
  fullName: System.Web.HttpContext.GetConfig(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "요청 된 현재 HTTP 요청에 대 한 구성 정보를 반환 합니다."
  remarks: "GetConfig 메서드는 더 이상 사용 되지 않습니다. 사용 하 여는 <xref:System.Web.HttpContext.GetSection%2A>메서드를 현재 HTTP 요청에 대 한 구성 정보를 가져옵니다.</xref:System.Web.HttpContext.GetSection%2A>"
  syntax:
    content: public object GetConfig (string name);
    parameters:
    - id: name
      type: System.String
      description: "정보가 요청 된 구성 태그입니다."
    return:
      type: System.Object
      description: "지정 된 <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref>, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 섹션이 없는 경우 런타임 시 섹션을 액세스할 수 없는 경우 내부 개체입니다. (사용 하기 전에 적절 한 구성 형식에 반환된 된 개체를 캐스팅 합니다.)"
  overload: System.Web.HttpContext.GetConfig*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String)
  id: GetGlobalResourceObject(System.String,System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetGlobalResourceObject(String,String)
  nameWithType: HttpContext.GetGlobalResourceObject(String,String)
  fullName: System.Web.HttpContext.GetGlobalResourceObject(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "지정 된에 따라 응용 프로그램 수준의 리소스 개체를 가져옵니다 <> </> *> 및 <> </> *> 속성."
  remarks: "에 지정 된 문화권을 사용 하 여 전역 리소스를 반환 하는 GetGlobalResourceObject 메서드는 <xref:System.Globalization.CultureInfo.CurrentUICulture%2A>속성.</xref:System.Globalization.CultureInfo.CurrentUICulture%2A>      > [!NOTE] > 일부 편집 환경에서는, 예: [!INCLUDE[vwprvw](~/add/includes/vwprvw-md.md)], 편집기에서 디자인 타임에 throw 될 수 있습니다 <xref:System.Resources.MissingManifestResourceException>전역 리소스 키 이름에 마침표 (.)를 사용 하는 경우는 예외입니다.</xref:System.Resources.MissingManifestResourceException> 그러나이 편집 하거나 파일을 저장 하는 기능에는 영향을 주지 않는 하 고 오류를 무시할 수 있습니다."
  syntax:
    content: public static object GetGlobalResourceObject (string classKey, string resourceKey);
    parameters:
    - id: classKey
      type: System.String
      description: "나타내는 string는 <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey*>요청된 된 리소스 개체의 속성입니다.</xref:System.Web.Compilation.ResourceExpressionFields.ClassKey*>"
    - id: resourceKey
      type: System.String
      description: "나타내는 string는 <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>요청된 된 리소스 개체의 속성입니다.</xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>"
    return:
      type: System.Object
      description: "<xref:System.Object>요청 된 응용 프로그램 수준 리소스 개체를 나타내는; 그렇지 않으면 null 리소스 개체가 없는 경우 또는 리소스 개체를 찾았지만 요청된 된 속성이 없는.</xref:System.Object>"
  overload: System.Web.HttpContext.GetGlobalResourceObject*
  exceptions:
  - type: System.Resources.MissingManifestResourceException
    commentId: T:System.Resources.MissingManifestResourceException
    description: "A resource object with the specified <code>classKey</code> parameter was not found.  \n  \n \\- or -  \n  \n The main assembly does not contain the resources for the neutral culture, and these resources are required because the appropriate satellite assembly is missing."
  platform:
  - net462
- uid: System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  id: GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetGlobalResourceObject(String,String,CultureInfo)
  nameWithType: HttpContext.GetGlobalResourceObject(String,String,CultureInfo)
  fullName: System.Web.HttpContext.GetGlobalResourceObject(String,String,CultureInfo)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "지정 된에 따라 응용 프로그램 수준의 리소스 개체를 가져옵니다 <> </> *> 및 <> </> *> 속성에는 <xref:System.Globalization.CultureInfo>개체.</xref:System.Globalization.CultureInfo>"
  remarks: "<xref:System.Globalization.CultureInfo>개체는 리소스가 지역화 된 문화권을 나타냅니다.</xref:System.Globalization.CultureInfo> 리소스가이 문화권에 대 한 지역화 되지 않으면, 조회 적절 한 리소스를 찾기 위한 대체 프로세스가 실행 됩니다. 자세한 내용은 참조 [리소스 패키징 및 배포](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > 편집기 Visual Web Developer와 같은 일부 편집 환경에서는 디자인 타임 throw 될 수 있습니다 <xref:System.Resources.MissingManifestResourceException>전역 리소스 키 이름에 마침표 (.)를 사용 하는 경우는 예외입니다.</xref:System.Resources.MissingManifestResourceException> 그러나이 편집 하거나 파일을 저장 하는 기능에는 영향을 주지 않는 하 고 오류를 무시할 수 있습니다."
  syntax:
    content: public static object GetGlobalResourceObject (string classKey, string resourceKey, System.Globalization.CultureInfo culture);
    parameters:
    - id: classKey
      type: System.String
      description: "나타내는 string는 <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey*>요청된 된 리소스 개체의 속성입니다.</xref:System.Web.Compilation.ResourceExpressionFields.ClassKey*>"
    - id: resourceKey
      type: System.String
      description: "나타내는 string는 <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>요청된 된 리소스 개체의 속성입니다.</xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "나타내는 string는 <xref:System.Globalization.CultureInfo>요청된 된 리소스의 개체입니다.</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Object
      description: "<xref:System.Object>와 지정된 된 문화권에 맞게 지역화 된 요청 된 응용 프로그램 수준 리소스 개체를 나타내며 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 는 리소스 개체가 없거나 리소스 개체를 찾았지만 요청된 된 속성이 없는 경우.</xref:System.Object>"
  overload: System.Web.HttpContext.GetGlobalResourceObject*
  exceptions:
  - type: System.Resources.MissingManifestResourceException
    commentId: T:System.Resources.MissingManifestResourceException
    description: "A resource object for which the specified <code>classKey</code> parameter was not found.  \n  \n \\- or -  \n  \n The main assembly does not contain the resources for the neutral culture, and these resources are required because the appropriate satellite assembly is missing."
  platform:
  - net462
- uid: System.Web.HttpContext.GetLocalResourceObject(System.String,System.String)
  id: GetLocalResourceObject(System.String,System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetLocalResourceObject(String,String)
  nameWithType: HttpContext.GetLocalResourceObject(String,String)
  fullName: System.Web.HttpContext.GetLocalResourceObject(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "지정 된에 따라 페이지 수준의 리소스 개체를 가져옵니다 <> </> *> 및 <> </> *> 속성."
  remarks: "에 지정 된 문화권을 사용 하 여 로컬 리소스를 반환 하는 GetLocalResourceObject 메서드는 <xref:System.Globalization.CultureInfo.CurrentUICulture%2A>속성.</xref:System.Globalization.CultureInfo.CurrentUICulture%2A>"
  syntax:
    content: public static object GetLocalResourceObject (string virtualPath, string resourceKey);
    parameters:
    - id: virtualPath
      type: System.String
      description: "<xref:System.Web.Compilation.ExpressionBuilderContext.VirtualPath*>로컬 리소스 개체에 대 한 속성.</xref:System.Web.Compilation.ExpressionBuilderContext.VirtualPath*>"
    - id: resourceKey
      type: System.String
      description: "<xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>요청된 된 리소스 개체의 속성</xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*> 을 나타내는 문자열"
    return:
      type: System.Object
      description: "<xref:System.Object>요청 된 페이지 수준 리소스 개체를 나타내는, 그렇지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 있으면 일치 하는 리소스 개체가 아니라는 <code> resourceKey </code> 매개 변수.</xref:System.Object>"
  overload: System.Web.HttpContext.GetLocalResourceObject*
  exceptions:
  - type: System.Resources.MissingManifestResourceException
    commentId: T:System.Resources.MissingManifestResourceException
    description: "리소스 개체를 찾을 수 없습니다 지정 된 <code> virtualPath </code> 매개 변수입니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "지정 된 <code> virtualPath </code> 매개 변수는 현재 응용 프로그램의 루트 디렉터리에 있지 않습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "페이지에 대 한 리소스 클래스를 찾을 수 없습니다."
  platform:
  - net462
- uid: System.Web.HttpContext.GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  id: GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetLocalResourceObject(String,String,CultureInfo)
  nameWithType: HttpContext.GetLocalResourceObject(String,String,CultureInfo)
  fullName: System.Web.HttpContext.GetLocalResourceObject(String,String,CultureInfo)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "지정 된에 따라 페이지 수준의 리소스 개체를 가져옵니다 <> </> *> 및 <> </> *> 속성에는 <xref:System.Globalization.CultureInfo>개체입니다.</xref:System.Globalization.CultureInfo>"
  remarks: "리소스가이 문화권에 대 한 지역화 되지 않으면, 조회 적절 한 리소스를 찾기 위한 대체 프로세스가 실행 됩니다. 자세한 내용은 참조 [리소스 패키징 및 배포](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public static object GetLocalResourceObject (string virtualPath, string resourceKey, System.Globalization.CultureInfo culture);
    parameters:
    - id: virtualPath
      type: System.String
      description: "<xref:System.Web.Compilation.ExpressionBuilderContext.VirtualPath*>로컬 리소스 개체에 대 한 속성.</xref:System.Web.Compilation.ExpressionBuilderContext.VirtualPath*>"
    - id: resourceKey
      type: System.String
      description: "나타내는 string는 <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>요청된 된 리소스 개체의 속성입니다.</xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "나타내는 string는 <xref:System.Globalization.CultureInfo>요청된 된 리소스 개체의 개체입니다.</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Object
      description: "<xref:System.Object>지정된 된 문화권에 맞게 지역화 된 요청 된 로컬 리소스 개체를 나타내며 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 있으면 일치 하는 리소스 개체가 아니라는 <code> resourceKey </code> 매개 변수.</xref:System.Object>"
  overload: System.Web.HttpContext.GetLocalResourceObject*
  exceptions:
  - type: System.Resources.MissingManifestResourceException
    commentId: T:System.Resources.MissingManifestResourceException
    description: "리소스 개체를 찾을 수 없습니다 지정 된 <code> virtualPath </code> 매개 변수입니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "지정 된 <code> virtualPath </code> 매개 변수는 현재 응용 프로그램의 루트 디렉터리에 있지 않습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "페이지에 대 한 리소스 클래스를 찾을 수 없습니다."
  platform:
  - net462
- uid: System.Web.HttpContext.GetSection(System.String)
  id: GetSection(System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetSection(String)
  nameWithType: HttpContext.GetSection(String)
  fullName: System.Web.HttpContext.GetSection(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "현재 응용 프로그램의 기본 구성에 지정 된 구성 섹션을 가져옵니다."
  syntax:
    content: public object GetSection (string sectionName);
    parameters:
    - id: sectionName
      type: System.String
      description: "구성 섹션 경로 (XPath 형식)와 구성 요소 이름입니다."
    return:
      type: System.Object
      description: "지정 된 <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref>, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 섹션이 없는 경우 런타임 시 섹션을 액세스할 수 없는 경우 내부 개체입니다."
  overload: System.Web.HttpContext.GetSection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Handler
  id: Handler
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Handler
  nameWithType: HttpContext.Handler
  fullName: System.Web.HttpContext.Handler
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "가져오거나는 <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> HTTP 요청을 처리 하는 개체입니다."
  remarks: "처리기 속성 HTTP 요청을 처리 하는 처리기에 대 한 참조를 포함 합니다. 처리기 요소를 사용 하 여 또는 사용자 코드에 정의 된 사용자 지정 처리기를 사용 하 여 지정할 수 있습니다. 처리기에 대 한 자세한 내용은 참조 [HTTP 처리기 및 HTTP 모듈 개요](~/add/includes/ajax-current-ext-md.md)합니다.       처리기 속성에 대 한 참조와 같은 서버 쪽 메서드에 의해 변경 된 현재 페이지 후에 그대로 유지 되는 <xref:System.Web.HttpServerUtility.Execute%2A>메서드 또는 <xref:System.Web.HttpServerUtility.Transfer%2A>메서드.</xref:System.Web.HttpServerUtility.Transfer%2A> </xref:System.Web.HttpServerUtility.Execute%2A>"
  syntax:
    content: public System.Web.IHttpHandler Handler { get; set; }
    return:
      type: System.Web.IHttpHandler
      description: "<xref href=&quot;System.Web.IHttpHandler&quot;> </xref> HTTP 요청을 처리 합니다."
  overload: System.Web.HttpContext.Handler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.IsCustomErrorEnabled
  id: IsCustomErrorEnabled
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: IsCustomErrorEnabled
  nameWithType: HttpContext.IsCustomErrorEnabled
  fullName: System.Web.HttpContext.IsCustomErrorEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "현재 HTTP 요청에 대 한 사용자 지정 오류를 사용할 수 있는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public bool IsCustomErrorEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사용자 지정 오류를 사용 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.HttpContext.IsCustomErrorEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.IsDebuggingEnabled
  id: IsDebuggingEnabled
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: IsDebuggingEnabled
  nameWithType: HttpContext.IsDebuggingEnabled
  fullName: System.Web.HttpContext.IsDebuggingEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "현재 HTTP 요청이 디버그 모드에서 인지를 나타내는 값을 가져옵니다."
  syntax:
    content: public bool IsDebuggingEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>요청이는 디버그 모드 이면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.HttpContext.IsDebuggingEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.IsPostNotification
  id: IsPostNotification
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: IsPostNotification
  nameWithType: HttpContext.IsPostNotification
  fullName: System.Web.HttpContext.IsPostNotification
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "가져옵니다 값을 현재 처리 지점인 asp.net에서 파이프라인 바로 뒤는 <xref href=&quot;System.Web.HttpApplication&quot;> </xref> 이벤트 처리가 완료 합니다."
  remarks: "IsPostNotification 속성에 통합된 모드 에서만 지원 됩니다 [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] 이상 및.NET Framework 3.0. 속성이 나타내는 부울 값을 반환 사용 가능한 경우 여부의 이벤트는 <xref:System.Web.HttpApplication>개체가 처리를 완료 했습니다.</xref:System.Web.HttpApplication>       IsPostNotification 속성을 설정할 수 없습니다. 제공 하는 대신, [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] 각 알림에 대 한 ASP.NET 런타임에 합니다. IsPostNotification 속성을 설정 하면 컴파일 오류가 발생 합니다.       시나리오에 있는 여러 이벤트 <xref:System.Web.HttpApplication>개체는 하나의 이벤트 처리기에 의해 처리 되 고, <xref:System.Web.RequestNotification>응용 프로그램 수명 주기에서 현재 요청할 수 있는 있는 그대로 확인할 열거형</xref:System.Web.RequestNotification> 함께에서 IsPostNotification 속성을 사용할 수 있습니다</xref:System.Web.HttpApplication>       IsPostNotification는.NET Framework 버전 3.5에서에서 도입 되었습니다.  자세한 내용은 참조 [버전 및 종속성](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example demonstrates how to use the IsPostNotification property to determine when an event of the <xref:System.Web.HttpApplication> object has finished processing all the associated event handlers. The custom event handler in this example handles several events of the <xref:System.Web.HttpApplication> object, and the IsPostNotification property is used to determine what code is invoked after a specific event is handled.  \n  \n [!code-cs[System.Web.HttpResponse.IsPostNotification#1](~/add/codesnippet/csharp/p-system.web.httpcontext_2_1.cs)]\n [!code-vb[System.Web.HttpResponse.IsPostNotification#1](~/add/codesnippet/visualbasic/p-system.web.httpcontext_2_1.vb)]"
  syntax:
    content: public bool IsPostNotification { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사용자 지정 오류를 사용 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.HttpContext.IsPostNotification*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "작업을 수행 하려면 통합된 파이프라인 모드의 [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] 이상 및.NET Framework 3.0."
  platform:
  - net462
- uid: System.Web.HttpContext.IsWebSocketRequest
  id: IsWebSocketRequest
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: IsWebSocketRequest
  nameWithType: HttpContext.IsWebSocketRequest
  fullName: System.Web.HttpContext.IsWebSocketRequest
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "요청 인지 여부를 나타내는 값을 가져옵니다는 <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> 요청 합니다."
  remarks: "이 메서드가 반환 `true` 초기 요청에 포함 되어 있으면 <xref:System.Web.WebSockets.AspNetWebSocket>핸드셰이크 및 `WebSocket` iis는 활성 상태입니다.</xref:System.Web.WebSockets.AspNetWebSocket>"
  syntax:
    content: public bool IsWebSocketRequest { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>요청이 시작 된 경우는 <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> 요청; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.HttpContext.IsWebSocketRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.IsWebSocketRequestUpgrading
  id: IsWebSocketRequestUpgrading
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: IsWebSocketRequestUpgrading
  nameWithType: HttpContext.IsWebSocketRequestUpgrading
  fullName: System.Web.HttpContext.IsWebSocketRequestUpgrading
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "연결에 대 한 HTTP 연결에서 업그레이드 하는 여부를 나타내는 값을 가져옵니다는 <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> 연결 합니다."
  syntax:
    content: public bool IsWebSocketRequestUpgrading { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>연결이; 업그레이드 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.HttpContext.IsWebSocketRequestUpgrading*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Items
  id: Items
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Items
  nameWithType: HttpContext.Items
  fullName: System.Web.HttpContext.Items
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "구성 하 고 간에 데이터를 공유 하는 데 사용할 수 있는 키/값 컬렉션을 가져옵니다는 <xref href=&quot;System.Web.IHttpModule&quot;> </xref> 인터페이스 및 <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> 인터페이스는 HTTP 요청 중입니다."
  syntax:
    content: public System.Collections.IDictionary Items { get; }
    return:
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>지정된 된 키에서 컬렉션의 개별 값에 대 한 액세스를 제공 하는 컬렉션에 대 한 키/값.</xref:System.Collections.IDictionary>"
  overload: System.Web.HttpContext.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.PageInstrumentation
  id: PageInstrumentation
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: PageInstrumentation
  nameWithType: HttpContext.PageInstrumentation
  fullName: System.Web.HttpContext.PageInstrumentation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "이 요청에 대 한 페이지 계측 서비스 인스턴스에 대 한 참조를 가져옵니다."
  syntax:
    content: public System.Web.Instrumentation.PageInstrumentationService PageInstrumentation { get; }
    return:
      type: System.Web.Instrumentation.PageInstrumentationService
      description: "이 요청에 대 한 페이지 계측 서비스 인스턴스."
  overload: System.Web.HttpContext.PageInstrumentation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.PreviousHandler
  id: PreviousHandler
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: PreviousHandler
  nameWithType: HttpContext.PreviousHandler
  fullName: System.Web.HttpContext.PreviousHandler
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "가져옵니다는 <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> 부모 처리기에 대 한 개체입니다."
  remarks: "현재 요청을 실행 하기 전에 PreviousHandler 속성 해당 마지막 처리기."
  syntax:
    content: public System.Web.IHttpHandler PreviousHandler { get; }
    return:
      type: System.Web.IHttpHandler
      description: "<xref href=&quot;System.Web.IHttpHandler&quot;> </xref> 인스턴스, 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이전 처리기를 찾을 수 없으면입니다."
  overload: System.Web.HttpContext.PreviousHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Profile
  id: Profile
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Profile
  nameWithType: HttpContext.Profile
  fullName: System.Web.HttpContext.Profile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "가져옵니다는 <xref href=&quot;System.Web.Profile.ProfileBase&quot;> </xref> 현재 사용자 프로필에 대 한 개체입니다."
  remarks: "프로필 속성 형식이 안전한 API를 사용 하는 구조화 된 데이터의 영구 저장소에 사용 됩니다. 때 프로필 속성에 액세스 하지만 값이 없으면, 빈 인스턴스 반환 됩니다. `null` 반환 되지 않습니다."
  syntax:
    content: public System.Web.Profile.ProfileBase Profile { get; }
    return:
      type: System.Web.Profile.ProfileBase
      description: "A <xref href=&quot;System.Web.Profile.ProfileBase&quot;> </xref> 응용 프로그램 구성 파일에 프로필 속성;에 대 한 정의 포함 하는 경우 이렇게 하지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.HttpContext.Profile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.RemapHandler(System.Web.IHttpHandler)
  id: RemapHandler(System.Web.IHttpHandler)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: RemapHandler(IHttpHandler)
  nameWithType: HttpContext.RemapHandler(IHttpHandler)
  fullName: System.Web.HttpContext.RemapHandler(IHttpHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "요청에 대 한 처리기를 지정할 수 있습니다."
  remarks: "설정한 경우 `handler` 를 `null`, 기본 처리기는 요청을 처리 하는 데 사용 됩니다. 설정할 수 있습니다 `handler` 비동기 처리기 또는 동기 처리기입니다. 처리기를 구현 해야 합니다는 <xref:System.Web.IHttpHandler>인터페이스.</xref:System.Web.IHttpHandler>"
  syntax:
    content: public void RemapHandler (System.Web.IHttpHandler handler);
    parameters:
    - id: handler
      type: System.Web.IHttpHandler
      description: "요청을 처리 해야 하는 개체입니다."
  overload: System.Web.HttpContext.RemapHandler*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이후 RemapHandler 메서드가 호출 된는 <xref href=&quot;System.Web.HttpApplication.MapRequestHandler&quot;> </xref> 이벤트가 발생 합니다."
  platform:
  - net462
- uid: System.Web.HttpContext.Request
  id: Request
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Request
  nameWithType: HttpContext.Request
  fullName: System.Web.HttpContext.Request
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "가져옵니다는 <xref href=&quot;System.Web.HttpRequest&quot;> </xref> 현재 HTTP 요청에 대 한 개체입니다."
  remarks: "Request 속성은 <xref:System.Web.HttpRequest>클래스</xref:System.Web.HttpRequest> 의 메서드와 속성에 대 한 프로그래밍 방식의 액세스를 제공합니다. ASP.NET 페이지에 대 한 기본 참조를 포함 하기 때문에 <xref:System.Web>네임 스페이스 (포함 하는 <xref:System.Web.HttpContext>클래스)을 <xref:System.Web.HttpRequest> <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> 에 대 한 정규화 된 클래스 참조를 사용 하지 않고.aspx 페이지에서</xref:System.Web.HttpRequest> 멤버를 참조할 수</xref:System.Web.HttpContext> </xref:System.Web> 사용할 수는 예를 들어 `Request.Browser` 클라이언트 브라우저의 기능을 얻으려고 합니다. 그러나의 멤버를 사용 하려는 경우 <xref:System.Web.HttpRequest>에서 ASP.NET 코드 숨김 모듈에 대 한 참조를 포함 해야는 <xref:System.Web>네임 스페이스 모듈 및 현재 활성 요청/응답 컨텍스트와에서 클래스를 모두에 대 한 정규화 된 참조에 <xref:System.Web>사용 하려는.</xref:System.Web> </xref:System.Web> </xref:System.Web.HttpRequest> 예를 들어, 코드 숨김 페이지에서 지정 해야 정규화 된 이름 `HttpContext.Current.Request.Browser`합니다.      > [!NOTE] > ASP.NET이이 속성을 사용 하려고 하면 예외가 throw 됩니다 때는 <xref:System.Web.HttpRequest>개체는 사용할 수 없습니다.</xref:System.Web.HttpRequest> 예를 들어이에서 Global.asax 파일의 Application_Start 메서드 또는 Application_Start 메서드를 호출한 메서드에 true 것입니다. 당시에 없는 HTTP 요청을 아직 만들지 않았습니다 했습니다."
  syntax:
    content: public System.Web.HttpRequest Request { get; }
    return:
      type: System.Web.HttpRequest
      description: "<xref href=&quot;System.Web.HttpRequest&quot;> </xref> 현재 HTTP 요청에 대 한 합니다."
  overload: System.Web.HttpContext.Request*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "웹 응용 프로그램은 IIS 7에서 통합 모드로 실행 중입니다."
  platform:
  - net462
- uid: System.Web.HttpContext.Response
  id: Response
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Response
  nameWithType: HttpContext.Response
  fullName: System.Web.HttpContext.Response
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "가져옵니다는 <xref href=&quot;System.Web.HttpResponse&quot;> </xref> 현재 HTTP 응답에 대 한 개체입니다."
  remarks: "<xref:System.Web.HttpResponse>클래스</xref:System.Web.HttpResponse> 의 메서드와 속성에 대 한 프로그래밍 방식의 액세스를 제공 하는 응답 속성 ASP.NET 페이지에 대 한 기본 참조를 포함 하기 때문에 <xref:System.Web>네임 스페이스 (포함 하는 <xref:System.Web.HttpContext>클래스)을 <xref:System.Web.HttpContext> <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> 에 대 한 정규화 된 클래스 참조를 사용 하지 않고.aspx 페이지에서</xref:System.Web.HttpContext> 멤버를 참조할 수</xref:System.Web.HttpContext> </xref:System.Web> 사용할 수는 예를 들어 `Response.Write(&quot;some output&quot;)` 출력을 HTTP 출력 스트림에 쓸 수 있습니다. 그러나의 멤버를 사용 하려는 경우 <xref:System.Web.HttpResponse>에서 ASP.NET 코드 숨김 모듈에 대 한 참조를 포함 해야는 <xref:System.Web>네임 스페이스 모듈 및 현재 활성 요청/응답 컨텍스트 및에서 클래스에 대 한 정규화 된 참조에 <xref:System.Web>사용 하려는.</xref:System.Web> </xref:System.Web> </xref:System.Web.HttpResponse> 예를 들어, 코드 숨김 페이지에서 지정 해야 정규화 된 이름 `HttpContext.Current.Response.Write(&quot;some output&quot;)`합니다."
  syntax:
    content: public System.Web.HttpResponse Response { get; }
    return:
      type: System.Web.HttpResponse
      description: "<xref href=&quot;System.Web.HttpResponse&quot;> </xref> 현재 HTTP 응답에 대 한 합니다."
  overload: System.Web.HttpContext.Response*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "웹 응용 프로그램은 IIS 7에서 통합 모드로 실행 중입니다."
  platform:
  - net462
- uid: System.Web.HttpContext.RewritePath(System.String)
  id: RewritePath(System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: RewritePath(String)
  nameWithType: HttpContext.RewritePath(String)
  fullName: System.Web.HttpContext.RewritePath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "지정된 된 경로 사용 하 여 URL을 다시 작성 합니다."
  remarks: "RewritePath 메서드는 요청된 된 URL로 표시 하는 것을 다른 경로로 리소스에 대 한 요청을 리디렉션합니다. 사용이 메서드의 오버 로드를 사용 하 여 서버 리소스에 대 한 클라이언트의에서 요청을 올바르게 해결 되도록 가상 경로 다시 설정 해야 할 경우는 `rebaseClientPath` 매개 변수는 매개 변수를 설정 하 고 `false`합니다.       URL 다시 쓰기 웹 응용 프로그램의 페이지를 재구성 하 고는 이전 Url 책갈피에 추가한 사람을 계속 사용할 수 페이지를 이동한 후 있는지 확인 하려는 경우 유용 합니다. URL 다시 쓰기를 사용 하면 투명 하 게 새 페이지 위치에 대 한 요청을 전달할 수 있습니다.       검색 엔진에 대 한 보다 사용자 친화적인 되 고 최적화 된 Url을 사용 하도록 사이트를 사용 하도록 설정 하려는 경우 ASP.NET 라우팅에서 사용 하는 보다 강력한 대체 방법을입니다. 자세한 내용은 참조 [ASP.NET 라우팅에서](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example shows how to use the RewritePath method to enable a Web site to respond to URLs that do not reflect the file structure in the Web site. The first block of code is an ASP.NET Web page that is named RewritePath.aspx. It requires a query string. If the name of your site is WebSite1, the URL `http://localhost/WebSite1/RewritePath.aspx?page=1` displays \"Page 1\" in the browser. The block of code that follows the Web page is the `Application_BeginRequest` event handler in the Global.asax file. This code intercepts requests for URLs such as `http://localhost/WebSite1/page1` and converts them to the form that is required for RewritePath.aspx before they are processed. Therefore, the URL `http://localhost/WebSite1/page1` invokes RewritePath.aspx with the query-string parameter that displays \"Page 1\" in the browser. If a URL such as `http://localhost/WebSite1/page1` is received, an overload of RewritePath is invoked that enables you to provide a value for the <xref:System.Web.HttpRequest.PathInfo%2A> property as well as a query string parameter.  \n  \n [!code-cs[HttpContext_RewritePath#2](~/add/codesnippet/csharp/m-system.web.httpcontext_1.aspx)]\n [!code-vb[HttpContext_RewritePath#2](~/add/codesnippet/visualbasic/m-system.web.httpcontext_1.aspx)]  \n  \n [!code-vb[HttpContext_RewritePath#1](~/add/codesnippet/visualbasic/m-system.web.httpcontext_2.asax)]\n [!code-cs[HttpContext_RewritePath#1](~/add/codesnippet/csharp/m-system.web.httpcontext_2.asax)]"
  syntax:
    content: public void RewritePath (string path);
    parameters:
    - id: path
      type: System.String
      description: "내부 재작성 경로입니다."
  overload: System.Web.HttpContext.RewritePath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code> path </code> 매개 변수는 현재 응용 프로그램의 루트 디렉터리에 있지 않습니다."
  platform:
  - net462
- uid: System.Web.HttpContext.RewritePath(System.String,System.Boolean)
  id: RewritePath(System.String,System.Boolean)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: RewritePath(String,Boolean)
  nameWithType: HttpContext.RewritePath(String,Boolean)
  fullName: System.Web.HttpContext.RewritePath(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "지정된 된 경로 서버 리소스에 대 한 가상 경로가 수정 되었는지 여부를 지정 하는 부울 값을 사용 하 여 URL을 다시 작성 합니다."
  remarks: "RewritePath 메서드에 의해 호출 됩니다는 <xref:System.Web.HttpContext.RewritePath%28System.String%29?displayProperty=fullName>사용 하 여 메서드는 `rebaseClientPath` 매개 변수 설정 `true`.</xref:System.Web.HttpContext.RewritePath%28System.String%29?displayProperty=fullName> 리소스에 대 한 경로 구성 하는 데 사용 되는 가상 경로 수정 되지 되도록 설정 된 `rebaseClientPath` 매개 변수를 `false`합니다. 일반적인 시나리오를 설정 하려는 `rebaseClientPath` 를 `false` 는 URL을 다시 작성 해야 하 고 테마를 사용 하 고 요청된 된 리소스와 다른 폴더에 있는 리소스에 URL을 리디렉션하기 때.       URL 다시 쓰기 웹 응용 프로그램의 페이지를 재구성 하 고는 이전 Url 책갈피에 추가한 사람을 계속 사용할 수 페이지를 이동한 후 있는지 확인 하려는 경우 유용 합니다. URL 다시 쓰기를 사용 하면 투명 하 게 새 페이지 위치에 대 한 요청을 전달할 수 있습니다.       검색 엔진에 대 한 보다 사용자 친화적인 되 고 최적화 된 Url을 사용 하도록 사이트를 사용 하도록 설정 하려는 경우 ASP.NET 라우팅에서 사용 하는 보다 강력한 대체 방법을입니다. 자세한 내용은 참조 [ASP.NET 라우팅에서](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - For a code example, see the <xref:System.Web.HttpContext.RewritePath%28System.String%29> method overload.
  syntax:
    content: public void RewritePath (string path, bool rebaseClientPath);
    parameters:
    - id: path
      type: System.String
      description: "내부 재작성 경로입니다."
    - id: rebaseClientPath
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>가상 경로 다시 설정 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 가상 경로 변경 하지 않고 유지 하려면."
  overload: System.Web.HttpContext.RewritePath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code> path </code> 매개 변수는 현재 응용 프로그램의 루트 디렉터리에 있지 않습니다."
  platform:
  - net462
- uid: System.Web.HttpContext.RewritePath(System.String,System.String,System.String)
  id: RewritePath(System.String,System.String,System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: RewritePath(String,String,String)
  nameWithType: HttpContext.RewritePath(String,String,String)
  fullName: System.Web.HttpContext.RewritePath(String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "지정 된 경로, 경로 정보 및 쿼리 문자열 정보를 사용 하 여 URL을 다시 작성 합니다."
  remarks: "RewritePath 메서드 URL을 변경 하지 않고 다른 리소스에는 리소스에 대 한 요청을 리디렉션합니다.       `filePath` 매개 변수가 포함 되지 않습니다는 `pathInfo` 매개 변수 콘텐츠입니다. URL http://www.microsoft.com/virdir/page.html/tail에 대 한는 `filePath` 매개 변수는 http://www.microsoft.com/virdir/page.html, 및 `pathInfo` 매개 변수는 마무리 합니다.       URL 다시 쓰기 웹 응용 프로그램의 페이지를 재구성 하 고는 이전 Url 책갈피에 추가한 사람을 계속 사용할 수 페이지를 이동한 후 있는지 확인 하려는 경우 유용 합니다. URL 다시 쓰기를 사용 하면 투명 하 게 새 페이지 위치에 대 한 요청을 전달할 수 있습니다.       검색 엔진에 대 한 보다 사용자 친화적인 되 고 최적화 된 Url을 사용 하도록 사이트를 사용 하도록 설정 하려는 경우 ASP.NET 라우팅에서 사용 하는 보다 강력한 대체 방법을입니다. 자세한 내용은 참조 [ASP.NET 라우팅에서](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - For a code example, including an example of this method overload, see the <xref:System.Web.HttpContext.RewritePath%28System.String%29> method overload.
  syntax:
    content: public void RewritePath (string filePath, string pathInfo, string queryString);
    parameters:
    - id: filePath
      type: System.String
      description: "내부 재작성 경로입니다."
    - id: pathInfo
      type: System.String
      description: "리소스에 대 한 추가 경로 정보입니다. 자세한 내용은 <xref:System.Web.HttpRequest.PathInfo*>.</xref:System.Web.HttpRequest.PathInfo*> 을 참조 하십시오."
    - id: queryString
      type: System.String
      description: "요청 쿼리 문자열입니다."
  overload: System.Web.HttpContext.RewritePath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> path </code> 매개 변수는 현재 응용 프로그램의 루트 디렉터리에 있지 않습니다."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code> filePath </code> 매개 변수는 현재 응용 프로그램의 루트 디렉터리에 있지 않습니다."
  platform:
  - net462
- uid: System.Web.HttpContext.RewritePath(System.String,System.String,System.String,System.Boolean)
  id: RewritePath(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: RewritePath(String,String,String,Boolean)
  nameWithType: HttpContext.RewritePath(String,String,String,Boolean)
  fullName: System.Web.HttpContext.RewritePath(String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "지정된 된 가상 경로, 경로 정보, 쿼리 문자열 정보 및 클라이언트 파일 경로가 다시 작성 경로로 설정 되었는지 여부를 지정 하는 부울 값을 사용 하 여 URL을 다시 작성 합니다."
  remarks: "`filePath` 매개 변수는의 콘텐츠를 포함 하지 않습니다는 `pathInfo` 매개 변수입니다. URL http://www.microsoft.com/virdir/page.html/tail에 대 한는 `filePath` 매개 변수는 http://www.microsoft.com/virdir/page.html, 및 `pathInfo` 매개 변수는 마무리 합니다.       리소스에 대 한 경로 구성 하는 데 사용 되는 가상 경로 수정 되지 되도록 설정 된 `setClientFilePath` 매개 변수를 `false`합니다. 일반적인 시나리오를 설정 하려는 `setClientFilePath` 를 `false` 는 URL을 다시 작성 해야 하 고 테마를 사용 하 고 요청된 된 리소스와 다른 폴더에 있는 리소스에 URL을 리디렉션하기 때.       URL 다시 쓰기 웹 응용 프로그램의 페이지를 재구성 하 고는 이전 Url 책갈피에 추가한 사람을 계속 사용할 수 페이지를 이동한 후 있는지 확인 하려는 경우 유용 합니다. URL 다시 쓰기를 사용 하면 투명 하 게 새 페이지 위치에 대 한 요청을 전달할 수 있습니다.       검색 엔진에 대 한 보다 사용자 친화적인 되 고 최적화 된 Url을 사용 하도록 사이트를 사용 하도록 설정 하려는 경우 ASP.NET 라우팅에서 사용 하는 보다 강력한 대체 방법을입니다. 자세한 내용은 참조 [ASP.NET 라우팅에서](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - For a code example, see the <xref:System.Web.HttpContext.RewritePath%28System.String%29> method overload.
  syntax:
    content: public void RewritePath (string filePath, string pathInfo, string queryString, bool setClientFilePath);
    parameters:
    - id: filePath
      type: System.String
      description: "요청을 처리 하는 리소스에 대 한 가상 경로입니다."
    - id: pathInfo
      type: System.String
      description: "URL 리디렉션에 사용할 추가 경로 정보입니다. 자세한 내용은 <xref:System.Web.HttpRequest.PathInfo*>.</xref:System.Web.HttpRequest.PathInfo*> 을 참조 하십시오."
    - id: queryString
      type: System.String
      description: "URL 리디렉션에 사용할 요청 쿼리 문자열입니다."
    - id: setClientFilePath
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>값에 클라이언트 리소스에 사용 되는 파일 경로 설정 하는 `filePath` 매개 변수, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.HttpContext.RewritePath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> path </code> 매개 변수는 현재 응용 프로그램의 루트 디렉터리에 있지 않습니다."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code> filePath </code> 매개 변수는 현재 응용 프로그램의 루트 디렉터리에 있지 않습니다."
  platform:
  - net462
- uid: System.Web.HttpContext.Server
  id: Server
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Server
  nameWithType: HttpContext.Server
  fullName: System.Web.HttpContext.Server
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "가져옵니다는 <xref href=&quot;System.Web.HttpServerUtility&quot;> </xref> 웹 요청 처리에 사용 되는 메서드를 제공 하는 개체입니다."
  remarks: "<xref:System.Web.HttpServerUtility>클래스</xref:System.Web.HttpServerUtility> 의 메서드와 속성에 대 한 프로그래밍 방식의 액세스를 제공 하는 서버 속성 ASP.NET 페이지에 대 한 기본 참조를 포함 하기 때문에 <xref:System.Web>네임 스페이스 (포함 하는 <xref:System.Web.HttpContext>클래스)을 <xref:System.Web.HttpContext> <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> 에 대 한 정규화 된 클래스 참조를 사용 하지 않고.aspx 페이지에서</xref:System.Web.HttpContext> 멤버를 참조할 수</xref:System.Web.HttpContext> </xref:System.Web> 사용할 수는 예를 들어 `Server.CreateObject(&quot;MyCOMComponent&quot;)` 서버에서 COM 개체의 인스턴스를 만들려고 합니다. 그러나의 멤버를 사용 하려는 경우 <xref:System.Web.HttpServerUtility>에서 ASP.NET 코드 숨김 모듈에 대 한 참조를 포함 해야는 <xref:System.Web>네임 스페이스 모듈 및 현재 활성 요청/응답 컨텍스트와에서 클래스를 모두에 대 한 정규화 된 참조에 <xref:System.Web>사용 하려는.</xref:System.Web> </xref:System.Web> </xref:System.Web.HttpServerUtility> 예를 들어, 코드 숨김 페이지에서 지정 해야 정규화 된 이름 `HttpContext.Current.Server.CreateObject(&quot;MyCOMComponent&quot;)`합니다."
  syntax:
    content: public System.Web.HttpServerUtility Server { get; }
    return:
      type: System.Web.HttpServerUtility
      description: "<xref href=&quot;System.Web.HttpServerUtility&quot;> </xref> 현재 HTTP 요청에 대 한 합니다."
  overload: System.Web.HttpContext.Server*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Session
  id: Session
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Session
  nameWithType: HttpContext.Session
  fullName: System.Web.HttpContext.Session
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "가져옵니다는 <xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref> 현재 HTTP 요청에 대 한 개체입니다."
  remarks: "<xref:System.Web.SessionState.HttpSessionState>클래스</xref:System.Web.SessionState.HttpSessionState> 의 메서드와 속성에 대 한 프로그래밍 방식의 액세스를 제공 하는 세션 속성       세션 상태를 사용 하기 위해 사용 하도록 설정 해야 합니다. 세션 상태를 사용 하는 방법에 대 한 정보를 참조 하십시오. **구성 세션 상태** 에 [ASP.NET 세션 상태 개요](~/add/includes/ajax-current-ext-md.md)합니다.       세션 상태에서 값을 저장 하는 방법에 대 한 정보를 참조 하십시오. [하는 방법: 세션 상태에 대 한 값을 저장](~/add/includes/ajax-current-ext-md.md)합니다. 세션 상태에서 값을 읽는 방법에 대 한 정보를 참조 하십시오. [하는 방법: 세션 상태에서 읽기 값](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following examples show how to save values in session state and how to read values from session state.  \n  \n These examples require:  \n  \n-   An ASP.NET application that has session state enabled.  \n  \n-   A Web Forms page class that has access to the <xref:System.Web.UI.Page.Session%2A?displayProperty=fullName> property, or any class that has access to the <xref:System.Web.HttpContext.Current%2A?displayProperty=fullName> property.  \n  \n```c#  \nstring firstName = \"Jeff\";  \nstring lastName = \"Smith\";  \nstring city = \"Seattle\";  \n  \n// Save to session state in a Web Forms page class.  \nSession[\"FirstName\"] = firstName;  \nSession[\"LastName\"] = lastName;  \nSession[\"City\"] = city;  \n  \n// Read from session state in a Web Forms page class.  \nfirstName = (string)(Session[\"FirstName\"]);  \nlastName = (string)(Session[\"LastName\"]);  \ncity = (string)(Session[\"City\"]);  \n  \n// Outside of Web Forms page class, use HttpContext.Current.  \nHttpContext context = HttpContext.Current;  \ncontext.Session[\"FirstName\"] = firstName;  \nfirstName = (string)(context.Session[\"FirstName\"]);  \n  \n```  \n  \n```vb#  \nDim firstName As String = \"Jeff\"  \nDim lastName As String = \"Smith\"  \nDim city As String = \"Seattle\"  \n  \n' Save to session state in a Web Forms page class.  \nSession(\"FirstName\") = firstName  \nSession(\"LastName\") = lastName  \nSession(\"City\") = city  \n  \n' Read from session state in a Web Forms page class.  \nfirstName = DirectCast(Session(\"FirstName\"), String)  \nlastName = DirectCast(Session(\"LastName\"), String)  \ncity = DirectCast(Session(\"City\"), String)  \n  \n' Outside of Web Forms page class, use HttpContext.Current.  \nDim context As HttpContext = HttpContext.Current  \ncontext.Session(\"FirstName\") = firstName  \nfirstName = DirectCast(context.Session(\"FirstName\"), String)  \n  \n```"
  syntax:
    content: public System.Web.SessionState.HttpSessionState Session { get; }
    return:
      type: System.Web.SessionState.HttpSessionState
      description: "<xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref> 현재 HTTP 요청에 대 한 개체입니다."
  overload: System.Web.HttpContext.Session*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)
  id: SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: SetSessionStateBehavior(SessionStateBehavior)
  nameWithType: HttpContext.SetSessionStateBehavior(SessionStateBehavior)
  fullName: System.Web.HttpContext.SetSessionStateBehavior(SessionStateBehavior)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "HTTP 요청을 지원 하기 위해 필요한 세션 상태 동작의 유형을 설정 합니다."
  remarks: "ASP.NET 기본 구현에서 HTTP 요청 처리기를 구현 하 여 세션 상태 필요한 지 여부를 나타냅니다는 <xref:System.Web.SessionState.IRequiresSessionState>인터페이스 또는 <xref:System.Web.SessionState.IReadOnlySessionState>인터페이스.</xref:System.Web.SessionState.IReadOnlySessionState> </xref:System.Web.SessionState.IRequiresSessionState> SetSessionStateBehavior 메서드 및 <xref:System.Web.SessionState.SessionStateBehavior>열거를 사용 하면 유형에 대 한 세션 상태 지원 요청을 처리 하는 데 필요한 세부 정보를 제공 합니다.</xref:System.Web.SessionState.SessionStateBehavior> 자세한 내용은 참조는 <xref:System.Web.SessionState.SessionStateBehavior>열거형.</xref:System.Web.SessionState.SessionStateBehavior>       하기 전에 SetSessionStateBehavior 메서드를 호출 해야는 <xref:System.Web.HttpApplication.AcquireRequestState>파이프라인 이벤트.</xref:System.Web.HttpApplication.AcquireRequestState> 또는이 이벤트가 발생 한 후 발생 하는 호출 하면 프로그램 <xref:System.InvalidOperationException>예외.</xref:System.InvalidOperationException>"
  syntax:
    content: public void SetSessionStateBehavior (System.Web.SessionState.SessionStateBehavior sessionStateBehavior);
    parameters:
    - id: sessionStateBehavior
      type: System.Web.SessionState.SessionStateBehavior
      description: "세션 상태 동작의 유형을 지정 하는 열거형 값 중 하나가 필요 합니다."
  overload: System.Web.HttpContext.SetSessionStateBehavior*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "후 호출 되는 <xref href=&quot;System.Web.HttpApplication.AcquireRequestState&quot;> </xref> 이벤트가 발생 합니다."
  platform:
  - net462
- uid: System.Web.HttpContext.SkipAuthorization
  id: SkipAuthorization
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: SkipAuthorization
  nameWithType: HttpContext.SkipAuthorization
  fullName: System.Web.HttpContext.SkipAuthorization
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "지정 하는 값을 가져오거나 설정 합니다. 여부는 <xref href=&quot;System.Web.Security.UrlAuthorizationModule&quot;> </xref> 개체가 현재 요청에 대 한 인증 확인을 건너뛰어야 합니다."
  remarks: "익명 연결을 허용 하는 페이지로 리디렉션하는 인증 모듈 SkipAuthorization 속성은 고급 사용을 위한 것입니다. 폼 인증 모듈이 Passport 인증 모듈 모두 구성 된 로그온 페이지로 리디렉션 시 SkipAuthorization 설정 합니다. SkipAuthorization를 설정 하려면 필요는 `ControlPrincipal` 플래그가 설정 됩니다. 에 대 한 내용은 `ControlPrincipal` 플래그를 참조 하십시오 <xref:System.Security.Permissions.SecurityPermissionFlag>.</xref:System.Security.Permissions.SecurityPermissionFlag>"
  syntax:
    content: public bool SkipAuthorization { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <xref href=&quot;System.Web.Security.UrlAuthorizationModule&quot;> </xref> 권한 부여 확인을 건너뛰어야, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.HttpContext.SkipAuthorization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.System#IServiceProvider#GetService(System.Type)
  id: System#IServiceProvider#GetService(System.Type)
  isEii: true
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: System.IServiceProvider.GetService(Type)
  nameWithType: HttpContext.System.IServiceProvider.GetService(Type)
  fullName: System.Web.HttpContext.System.IServiceProvider.GetService(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "현재 서비스 형식에 대 한 개체를 반환합니다."
  remarks: "이 메서드는 내부에 대 한 액세스 권한을 얻으려고 <xref:System.Web.HttpWorkerRequest>개체입니다.</xref:System.Web.HttpWorkerRequest>"
  syntax:
    content: object IServiceProvider.GetService (Type service);
    parameters:
    - id: service
      type: System.Type
      description: "유형의 <xref href=&quot;System.Web.HttpContext&quot;> </xref> 서비스 공급자 설정 하는 서비스입니다."
    return:
      type: System.Object
      description: "A <xref href=&quot;System.Web.HttpContext&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 경우 서비스가 없습니다."
  overload: System.Web.HttpContext.System#IServiceProvider#GetService*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.ThreadAbortOnTimeout
  id: ThreadAbortOnTimeout
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: ThreadAbortOnTimeout
  nameWithType: HttpContext.ThreadAbortOnTimeout
  fullName: System.Web.HttpContext.ThreadAbortOnTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "ASP.NET 런타임 호출 해야 하는지 여부를 지정 하는 값을 가져오거나 설정 합니다. &lt;xref:System.Threading.Thread.Abort%2A?displayProperty=fullName&gt; 요청 시간이 초과 될 때이 요청을 서비스 중인 스레드에서 합니다."
  remarks: "처리기 및을 사용 하는 모듈에는 <xref:System.Web.HttpRequest.TimedOutToken%2A?displayProperty=fullName>협조적 취소를 구현 하는 속성 사용 하지 않도록 할 수 있습니다는 <xref:System.Threading.Thread.Abort%2A?displayProperty=fullName>요청이 시간 초과 하는 경우 기본적으로 ASP.NET에서 수행 하는 동작입니다.</xref:System.Threading.Thread.Abort%2A?displayProperty=fullName> </xref:System.Web.HttpRequest.TimedOutToken%2A?displayProperty=fullName> 이 속성을 설정 `false` 를 취소 및 정리 루틴이 ASP.NET에서 중단 되지 않고 실행 되도록 할 수 있습니다.       이 속성을 설정 하는 경우 `false`, ASP.NET 자동으로 나타나지 것입니다 &quot;요청 시간이 초과 되었습니다&quot; 오류 페이지에서 제한 시간이 발생 합니다. 응용 프로그램은 응답 콘텐츠를 적절 하 게 설정 해야 합니다."
  syntax:
    content: public bool ThreadAbortOnTimeout { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 &lt;xref:System.Threading.Thread.Abort%2A?displayProperty=fullName&gt; 스레드가 시간 초과, 그렇지 않으면 때 호출 될 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.HttpContext.ThreadAbortOnTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Timestamp
  id: Timestamp
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Timestamp
  nameWithType: HttpContext.Timestamp
  fullName: System.Web.HttpContext.Timestamp
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "현재 HTTP 요청의 초기 타임 스탬프를 가져옵니다."
  remarks: "타임 스탬프 속성에서 반환 된 타임 스탬프 서버의 현지 시간 이며 인스턴스화하는 동안 설정 된 <xref:System.Web.HttpContext>개체입니다.</xref:System.Web.HttpContext> 현지 시간은 UTC 시간에 UTC 오프셋을 더한과 같습니다."
  syntax:
    content: public DateTime Timestamp { get; }
    return:
      type: System.DateTime
      description: "현재 HTTP 요청의 타임 스탬프입니다."
  overload: System.Web.HttpContext.Timestamp*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Trace
  id: Trace
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Trace
  nameWithType: HttpContext.Trace
  fullName: System.Web.HttpContext.Trace
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "가져옵니다는 <xref href=&quot;System.Web.TraceContext&quot;> </xref> 현재 HTTP 응답에 대 한 개체입니다."
  syntax:
    content: public System.Web.TraceContext Trace { get; }
    return:
      type: System.Web.TraceContext
      description: "<xref href=&quot;System.Web.TraceContext&quot;> </xref> 현재 HTTP 응답에 대 한 합니다."
  overload: System.Web.HttpContext.Trace*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.User
  id: User
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: User
  nameWithType: HttpContext.User
  fullName: System.Web.HttpContext.User
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "현재 HTTP 요청에 대 한 보안 정보를 가져오거나 설정 합니다."
  remarks: "사용자 속성의 메서드와 속성에 대 한 프로그래밍 방식의 액세스를 제공는 <xref:System.Security.Principal.IPrincipal>인터페이스.</xref:System.Security.Principal.IPrincipal>       ASP.NET 페이지에 대 한 기본 참조를 포함 하기 때문에 <xref:System.Web>네임 스페이스 (포함 하는 <xref:System.Web.HttpContext>클래스)을 <xref:System.Web.HttpContext> <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> 에 대 한 정규화 된 클래스 참조를 사용 하지 않고.aspx 페이지에서</xref:System.Web.HttpContext> 멤버를 참조할 수</xref:System.Web.HttpContext> </xref:System.Web> 사용할 수는 예를 들어 `User.Identity.Name` 실행 중인 현재 프로세스 대신 사용자의 이름을 가져올 수 있습니다. 그러나의 멤버를 사용 하려는 경우 <xref:System.Security.Principal.IPrincipal>에서 ASP.NET 코드 숨김 모듈에 대 한 참조를 포함 해야는 <xref:System.Web>네임 스페이스 모듈 및 현재 활성 요청/응답 컨텍스트와에서 클래스를 모두에 대 한 정규화 된 참조에 <xref:System.Web>사용 하려는.</xref:System.Web> </xref:System.Web> </xref:System.Security.Principal.IPrincipal> 예를 들어, 코드 숨김 페이지에서 지정 해야 정규화 된 이름 `HttpContext.Current.User.Identity.Name`합니다."
  example:
  - "The following example shows how to access properties of the current user through the User property. Those properties are used to set the title of the Web page.  \n  \n If the application uses Windows authentication, the user name includes the domain. For example, the page title would be “Home page for DOMAIN\\username”.  \n  \n [!code-cs[System.Web.HttpContext.User#1](~/add/codesnippet/csharp/p-system.web.httpcontext_1_1.cs)]\n [!code-vb[System.Web.HttpContext.User#1](~/add/codesnippet/visualbasic/p-system.web.httpcontext_1_1.vb)]"
  syntax:
    content: public System.Security.Principal.IPrincipal User { get; set; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "현재 HTTP 요청에 대 한 보안 정보입니다."
  overload: System.Web.HttpContext.User*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.WebSocketNegotiatedProtocol
  id: WebSocketNegotiatedProtocol
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: WebSocketNegotiatedProtocol
  nameWithType: HttpContext.WebSocketNegotiatedProtocol
  fullName: System.Web.HttpContext.WebSocketNegotiatedProtocol
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "협상된 된 프로토콜에 대 한 클라이언트에 서버에서 보낸 가져옵니다는 <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> 연결 합니다."
  syntax:
    content: public string WebSocketNegotiatedProtocol { get; }
    return:
      type: System.String
      description: "협상 된 프로토콜입니다."
  overload: System.Web.HttpContext.WebSocketNegotiatedProtocol*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.WebSocketRequestedProtocols
  id: WebSocketRequestedProtocols
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: WebSocketRequestedProtocols
  nameWithType: HttpContext.WebSocketRequestedProtocols
  fullName: System.Web.HttpContext.WebSocketRequestedProtocols
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "클라이언트에서 요청한 프로토콜의 순서 있는 목록을 가져옵니다."
  syntax:
    content: public System.Collections.Generic.IList<string> WebSocketRequestedProtocols { get; }
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "요청한 프로토콜 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이 없는 경우는 <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> 요청이 아니거나 목록이 없는 경우."
  overload: System.Web.HttpContext.WebSocketRequestedProtocols*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Resources.MissingManifestResourceException
  isExternal: true
  name: System.Resources.MissingManifestResourceException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.HttpContext.#ctor(System.Web.HttpWorkerRequest)
  parent: System.Web.HttpContext
  isExternal: false
  name: HttpContext(HttpWorkerRequest)
  nameWithType: HttpContext.HttpContext(HttpWorkerRequest)
  fullName: System.Web.HttpContext.HttpContext(HttpWorkerRequest)
- uid: System.Web.HttpWorkerRequest
  parent: System.Web
  isExternal: false
  name: HttpWorkerRequest
  nameWithType: HttpWorkerRequest
  fullName: System.Web.HttpWorkerRequest
- uid: System.Web.HttpContext.#ctor(System.Web.HttpRequest,System.Web.HttpResponse)
  parent: System.Web.HttpContext
  isExternal: false
  name: HttpContext(HttpRequest,HttpResponse)
  nameWithType: HttpContext.HttpContext(HttpRequest,HttpResponse)
  fullName: System.Web.HttpContext.HttpContext(HttpRequest,HttpResponse)
- uid: System.Web.HttpRequest
  parent: System.Web
  isExternal: false
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: System.Web.HttpRequest
- uid: System.Web.HttpResponse
  parent: System.Web
  isExternal: false
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: System.Web.HttpResponse
- uid: System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})
  parent: System.Web.HttpContext
  isExternal: false
  name: AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
  nameWithType: HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
  fullName: System.Web.HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
- uid: System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task}
  parent: System
  isExternal: true
  name: Func<AspNetWebSocketContext,Task>
  nameWithType: Func<AspNetWebSocketContext,Task>
  fullName: System.Func<System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.WebSockets.AspNetWebSocketContext
    name: AspNetWebSocketContext
    nameWithType: AspNetWebSocketContext
    fullName: AspNetWebSocketContext
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: Task
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)
  parent: System.Web.HttpContext
  isExternal: false
  name: AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
  nameWithType: HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
  fullName: System.Web.HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
- uid: System.Web.WebSockets.AspNetWebSocketOptions
  parent: System.Web.WebSockets
  isExternal: false
  name: AspNetWebSocketOptions
  nameWithType: AspNetWebSocketOptions
  fullName: System.Web.WebSockets.AspNetWebSocketOptions
- uid: System.Web.HttpContext.AddError(System.Exception)
  parent: System.Web.HttpContext
  isExternal: false
  name: AddError(Exception)
  nameWithType: HttpContext.AddError(Exception)
  fullName: System.Web.HttpContext.AddError(Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.HttpContext.AddOnRequestCompleted(System.Action{System.Web.HttpContext})
  parent: System.Web.HttpContext
  isExternal: false
  name: AddOnRequestCompleted(Action<HttpContext>)
  nameWithType: HttpContext.AddOnRequestCompleted(Action<HttpContext>)
  fullName: System.Web.HttpContext.AddOnRequestCompleted(Action<HttpContext>)
- uid: System.Web.ISubscriptionToken
  parent: System.Web
  isExternal: false
  name: ISubscriptionToken
  nameWithType: ISubscriptionToken
  fullName: System.Web.ISubscriptionToken
- uid: System.Action{System.Web.HttpContext}
  parent: System
  isExternal: true
  name: Action<HttpContext>
  nameWithType: Action<HttpContext>
  fullName: System.Action<System.Web.HttpContext>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<System.Web.HttpContext>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: HttpContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.HttpContext.AllErrors
  parent: System.Web.HttpContext
  isExternal: false
  name: AllErrors
  nameWithType: HttpContext.AllErrors
  fullName: System.Web.HttpContext.AllErrors
- uid: System.Exception[]
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception[]
  spec.csharp:
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpContext.AllowAsyncDuringSyncStages
  parent: System.Web.HttpContext
  isExternal: false
  name: AllowAsyncDuringSyncStages
  nameWithType: HttpContext.AllowAsyncDuringSyncStages
  fullName: System.Web.HttpContext.AllowAsyncDuringSyncStages
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpContext.Application
  parent: System.Web.HttpContext
  isExternal: false
  name: Application
  nameWithType: HttpContext.Application
  fullName: System.Web.HttpContext.Application
- uid: System.Web.HttpApplicationState
  parent: System.Web
  isExternal: false
  name: HttpApplicationState
  nameWithType: HttpApplicationState
  fullName: System.Web.HttpApplicationState
- uid: System.Web.HttpContext.ApplicationInstance
  parent: System.Web.HttpContext
  isExternal: false
  name: ApplicationInstance
  nameWithType: HttpContext.ApplicationInstance
  fullName: System.Web.HttpContext.ApplicationInstance
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.HttpContext.AsyncPreloadMode
  parent: System.Web.HttpContext
  isExternal: false
  name: AsyncPreloadMode
  nameWithType: HttpContext.AsyncPreloadMode
  fullName: System.Web.HttpContext.AsyncPreloadMode
- uid: System.Web.Configuration.AsyncPreloadModeFlags
  parent: System.Web.Configuration
  isExternal: false
  name: AsyncPreloadModeFlags
  nameWithType: AsyncPreloadModeFlags
  fullName: System.Web.Configuration.AsyncPreloadModeFlags
- uid: System.Web.HttpContext.Cache
  parent: System.Web.HttpContext
  isExternal: false
  name: Cache
  nameWithType: HttpContext.Cache
  fullName: System.Web.HttpContext.Cache
- uid: System.Web.Caching.Cache
  parent: System.Web.Caching
  isExternal: false
  name: Cache
  nameWithType: Cache
  fullName: System.Web.Caching.Cache
- uid: System.Web.HttpContext.ClearError
  parent: System.Web.HttpContext
  isExternal: false
  name: ClearError()
  nameWithType: HttpContext.ClearError()
  fullName: System.Web.HttpContext.ClearError()
- uid: System.Web.HttpContext.Current
  parent: System.Web.HttpContext
  isExternal: false
  name: Current
  nameWithType: HttpContext.Current
  fullName: System.Web.HttpContext.Current
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.HttpContext.CurrentHandler
  parent: System.Web.HttpContext
  isExternal: false
  name: CurrentHandler
  nameWithType: HttpContext.CurrentHandler
  fullName: System.Web.HttpContext.CurrentHandler
- uid: System.Web.IHttpHandler
  parent: System.Web
  isExternal: false
  name: IHttpHandler
  nameWithType: IHttpHandler
  fullName: System.Web.IHttpHandler
- uid: System.Web.HttpContext.CurrentNotification
  parent: System.Web.HttpContext
  isExternal: false
  name: CurrentNotification
  nameWithType: HttpContext.CurrentNotification
  fullName: System.Web.HttpContext.CurrentNotification
- uid: System.Web.RequestNotification
  parent: System.Web
  isExternal: false
  name: RequestNotification
  nameWithType: RequestNotification
  fullName: System.Web.RequestNotification
- uid: System.Web.HttpContext.DisposeOnPipelineCompleted(System.IDisposable)
  parent: System.Web.HttpContext
  isExternal: false
  name: DisposeOnPipelineCompleted(IDisposable)
  nameWithType: HttpContext.DisposeOnPipelineCompleted(IDisposable)
  fullName: System.Web.HttpContext.DisposeOnPipelineCompleted(IDisposable)
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Web.HttpContext.Error
  parent: System.Web.HttpContext
  isExternal: false
  name: Error
  nameWithType: HttpContext.Error
  fullName: System.Web.HttpContext.Error
- uid: System.Web.HttpContext.GetAppConfig(System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetAppConfig(String)
  nameWithType: HttpContext.GetAppConfig(String)
  fullName: System.Web.HttpContext.GetAppConfig(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext.GetConfig(System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetConfig(String)
  nameWithType: HttpContext.GetConfig(String)
  fullName: System.Web.HttpContext.GetConfig(String)
- uid: System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetGlobalResourceObject(String,String)
  nameWithType: HttpContext.GetGlobalResourceObject(String,String)
  fullName: System.Web.HttpContext.GetGlobalResourceObject(String,String)
- uid: System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetGlobalResourceObject(String,String,CultureInfo)
  nameWithType: HttpContext.GetGlobalResourceObject(String,String,CultureInfo)
  fullName: System.Web.HttpContext.GetGlobalResourceObject(String,String,CultureInfo)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Web.HttpContext.GetLocalResourceObject(System.String,System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetLocalResourceObject(String,String)
  nameWithType: HttpContext.GetLocalResourceObject(String,String)
  fullName: System.Web.HttpContext.GetLocalResourceObject(String,String)
- uid: System.Web.HttpContext.GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetLocalResourceObject(String,String,CultureInfo)
  nameWithType: HttpContext.GetLocalResourceObject(String,String,CultureInfo)
  fullName: System.Web.HttpContext.GetLocalResourceObject(String,String,CultureInfo)
- uid: System.Web.HttpContext.GetSection(System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetSection(String)
  nameWithType: HttpContext.GetSection(String)
  fullName: System.Web.HttpContext.GetSection(String)
- uid: System.Web.HttpContext.Handler
  parent: System.Web.HttpContext
  isExternal: false
  name: Handler
  nameWithType: HttpContext.Handler
  fullName: System.Web.HttpContext.Handler
- uid: System.Web.HttpContext.IsCustomErrorEnabled
  parent: System.Web.HttpContext
  isExternal: false
  name: IsCustomErrorEnabled
  nameWithType: HttpContext.IsCustomErrorEnabled
  fullName: System.Web.HttpContext.IsCustomErrorEnabled
- uid: System.Web.HttpContext.IsDebuggingEnabled
  parent: System.Web.HttpContext
  isExternal: false
  name: IsDebuggingEnabled
  nameWithType: HttpContext.IsDebuggingEnabled
  fullName: System.Web.HttpContext.IsDebuggingEnabled
- uid: System.Web.HttpContext.IsPostNotification
  parent: System.Web.HttpContext
  isExternal: false
  name: IsPostNotification
  nameWithType: HttpContext.IsPostNotification
  fullName: System.Web.HttpContext.IsPostNotification
- uid: System.Web.HttpContext.IsWebSocketRequest
  parent: System.Web.HttpContext
  isExternal: false
  name: IsWebSocketRequest
  nameWithType: HttpContext.IsWebSocketRequest
  fullName: System.Web.HttpContext.IsWebSocketRequest
- uid: System.Web.HttpContext.IsWebSocketRequestUpgrading
  parent: System.Web.HttpContext
  isExternal: false
  name: IsWebSocketRequestUpgrading
  nameWithType: HttpContext.IsWebSocketRequestUpgrading
  fullName: System.Web.HttpContext.IsWebSocketRequestUpgrading
- uid: System.Web.HttpContext.Items
  parent: System.Web.HttpContext
  isExternal: false
  name: Items
  nameWithType: HttpContext.Items
  fullName: System.Web.HttpContext.Items
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.HttpContext.PageInstrumentation
  parent: System.Web.HttpContext
  isExternal: false
  name: PageInstrumentation
  nameWithType: HttpContext.PageInstrumentation
  fullName: System.Web.HttpContext.PageInstrumentation
- uid: System.Web.Instrumentation.PageInstrumentationService
  parent: System.Web.Instrumentation
  isExternal: false
  name: PageInstrumentationService
  nameWithType: PageInstrumentationService
  fullName: System.Web.Instrumentation.PageInstrumentationService
- uid: System.Web.HttpContext.PreviousHandler
  parent: System.Web.HttpContext
  isExternal: false
  name: PreviousHandler
  nameWithType: HttpContext.PreviousHandler
  fullName: System.Web.HttpContext.PreviousHandler
- uid: System.Web.HttpContext.Profile
  parent: System.Web.HttpContext
  isExternal: false
  name: Profile
  nameWithType: HttpContext.Profile
  fullName: System.Web.HttpContext.Profile
- uid: System.Web.Profile.ProfileBase
  parent: System.Web.Profile
  isExternal: false
  name: ProfileBase
  nameWithType: ProfileBase
  fullName: System.Web.Profile.ProfileBase
- uid: System.Web.HttpContext.RemapHandler(System.Web.IHttpHandler)
  parent: System.Web.HttpContext
  isExternal: false
  name: RemapHandler(IHttpHandler)
  nameWithType: HttpContext.RemapHandler(IHttpHandler)
  fullName: System.Web.HttpContext.RemapHandler(IHttpHandler)
- uid: System.Web.HttpContext.Request
  parent: System.Web.HttpContext
  isExternal: false
  name: Request
  nameWithType: HttpContext.Request
  fullName: System.Web.HttpContext.Request
- uid: System.Web.HttpContext.Response
  parent: System.Web.HttpContext
  isExternal: false
  name: Response
  nameWithType: HttpContext.Response
  fullName: System.Web.HttpContext.Response
- uid: System.Web.HttpContext.RewritePath(System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: RewritePath(String)
  nameWithType: HttpContext.RewritePath(String)
  fullName: System.Web.HttpContext.RewritePath(String)
- uid: System.Web.HttpContext.RewritePath(System.String,System.Boolean)
  parent: System.Web.HttpContext
  isExternal: false
  name: RewritePath(String,Boolean)
  nameWithType: HttpContext.RewritePath(String,Boolean)
  fullName: System.Web.HttpContext.RewritePath(String,Boolean)
- uid: System.Web.HttpContext.RewritePath(System.String,System.String,System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: RewritePath(String,String,String)
  nameWithType: HttpContext.RewritePath(String,String,String)
  fullName: System.Web.HttpContext.RewritePath(String,String,String)
- uid: System.Web.HttpContext.RewritePath(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.HttpContext
  isExternal: false
  name: RewritePath(String,String,String,Boolean)
  nameWithType: HttpContext.RewritePath(String,String,String,Boolean)
  fullName: System.Web.HttpContext.RewritePath(String,String,String,Boolean)
- uid: System.Web.HttpContext.Server
  parent: System.Web.HttpContext
  isExternal: false
  name: Server
  nameWithType: HttpContext.Server
  fullName: System.Web.HttpContext.Server
- uid: System.Web.HttpServerUtility
  parent: System.Web
  isExternal: false
  name: HttpServerUtility
  nameWithType: HttpServerUtility
  fullName: System.Web.HttpServerUtility
- uid: System.Web.HttpContext.Session
  parent: System.Web.HttpContext
  isExternal: false
  name: Session
  nameWithType: HttpContext.Session
  fullName: System.Web.HttpContext.Session
- uid: System.Web.SessionState.HttpSessionState
  parent: System.Web.SessionState
  isExternal: false
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
- uid: System.Web.HttpContext.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)
  parent: System.Web.HttpContext
  isExternal: false
  name: SetSessionStateBehavior(SessionStateBehavior)
  nameWithType: HttpContext.SetSessionStateBehavior(SessionStateBehavior)
  fullName: System.Web.HttpContext.SetSessionStateBehavior(SessionStateBehavior)
- uid: System.Web.SessionState.SessionStateBehavior
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateBehavior
  nameWithType: SessionStateBehavior
  fullName: System.Web.SessionState.SessionStateBehavior
- uid: System.Web.HttpContext.SkipAuthorization
  parent: System.Web.HttpContext
  isExternal: false
  name: SkipAuthorization
  nameWithType: HttpContext.SkipAuthorization
  fullName: System.Web.HttpContext.SkipAuthorization
- uid: System.Web.HttpContext.System#IServiceProvider#GetService(System.Type)
  parent: System.Web.HttpContext
  isExternal: false
  name: System.IServiceProvider.GetService(Type)
  nameWithType: HttpContext.System.IServiceProvider.GetService(Type)
  fullName: System.Web.HttpContext.System.IServiceProvider.GetService(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.HttpContext.ThreadAbortOnTimeout
  parent: System.Web.HttpContext
  isExternal: false
  name: ThreadAbortOnTimeout
  nameWithType: HttpContext.ThreadAbortOnTimeout
  fullName: System.Web.HttpContext.ThreadAbortOnTimeout
- uid: System.Web.HttpContext.Timestamp
  parent: System.Web.HttpContext
  isExternal: false
  name: Timestamp
  nameWithType: HttpContext.Timestamp
  fullName: System.Web.HttpContext.Timestamp
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.HttpContext.Trace
  parent: System.Web.HttpContext
  isExternal: false
  name: Trace
  nameWithType: HttpContext.Trace
  fullName: System.Web.HttpContext.Trace
- uid: System.Web.TraceContext
  parent: System.Web
  isExternal: false
  name: TraceContext
  nameWithType: TraceContext
  fullName: System.Web.TraceContext
- uid: System.Web.HttpContext.User
  parent: System.Web.HttpContext
  isExternal: false
  name: User
  nameWithType: HttpContext.User
  fullName: System.Web.HttpContext.User
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Web.HttpContext.WebSocketNegotiatedProtocol
  parent: System.Web.HttpContext
  isExternal: false
  name: WebSocketNegotiatedProtocol
  nameWithType: HttpContext.WebSocketNegotiatedProtocol
  fullName: System.Web.HttpContext.WebSocketNegotiatedProtocol
- uid: System.Web.HttpContext.WebSocketRequestedProtocols
  parent: System.Web.HttpContext
  isExternal: false
  name: WebSocketRequestedProtocols
  nameWithType: HttpContext.WebSocketRequestedProtocols
  fullName: System.Web.HttpContext.WebSocketRequestedProtocols
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.HttpContext.#ctor*
  parent: System.Web.HttpContext
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext.HttpContext
- uid: System.Web.HttpContext.AcceptWebSocketRequest*
  parent: System.Web.HttpContext
  isExternal: false
  name: AcceptWebSocketRequest
  nameWithType: HttpContext.AcceptWebSocketRequest
- uid: System.Web.HttpContext.AddError*
  parent: System.Web.HttpContext
  isExternal: false
  name: AddError
  nameWithType: HttpContext.AddError
- uid: System.Web.HttpContext.AddOnRequestCompleted*
  parent: System.Web.HttpContext
  isExternal: false
  name: AddOnRequestCompleted
  nameWithType: HttpContext.AddOnRequestCompleted
- uid: System.Web.HttpContext.AllErrors*
  parent: System.Web.HttpContext
  isExternal: false
  name: AllErrors
  nameWithType: HttpContext.AllErrors
- uid: System.Web.HttpContext.AllowAsyncDuringSyncStages*
  parent: System.Web.HttpContext
  isExternal: false
  name: AllowAsyncDuringSyncStages
  nameWithType: HttpContext.AllowAsyncDuringSyncStages
- uid: System.Web.HttpContext.Application*
  parent: System.Web.HttpContext
  isExternal: false
  name: Application
  nameWithType: HttpContext.Application
- uid: System.Web.HttpContext.ApplicationInstance*
  parent: System.Web.HttpContext
  isExternal: false
  name: ApplicationInstance
  nameWithType: HttpContext.ApplicationInstance
- uid: System.Web.HttpContext.AsyncPreloadMode*
  parent: System.Web.HttpContext
  isExternal: false
  name: AsyncPreloadMode
  nameWithType: HttpContext.AsyncPreloadMode
- uid: System.Web.HttpContext.Cache*
  parent: System.Web.HttpContext
  isExternal: false
  name: Cache
  nameWithType: HttpContext.Cache
- uid: System.Web.HttpContext.ClearError*
  parent: System.Web.HttpContext
  isExternal: false
  name: ClearError
  nameWithType: HttpContext.ClearError
- uid: System.Web.HttpContext.Current*
  parent: System.Web.HttpContext
  isExternal: false
  name: Current
  nameWithType: HttpContext.Current
- uid: System.Web.HttpContext.CurrentHandler*
  parent: System.Web.HttpContext
  isExternal: false
  name: CurrentHandler
  nameWithType: HttpContext.CurrentHandler
- uid: System.Web.HttpContext.CurrentNotification*
  parent: System.Web.HttpContext
  isExternal: false
  name: CurrentNotification
  nameWithType: HttpContext.CurrentNotification
- uid: System.Web.HttpContext.DisposeOnPipelineCompleted*
  parent: System.Web.HttpContext
  isExternal: false
  name: DisposeOnPipelineCompleted
  nameWithType: HttpContext.DisposeOnPipelineCompleted
- uid: System.Web.HttpContext.Error*
  parent: System.Web.HttpContext
  isExternal: false
  name: Error
  nameWithType: HttpContext.Error
- uid: System.Web.HttpContext.GetAppConfig*
  parent: System.Web.HttpContext
  isExternal: false
  name: GetAppConfig
  nameWithType: HttpContext.GetAppConfig
- uid: System.Web.HttpContext.GetConfig*
  parent: System.Web.HttpContext
  isExternal: false
  name: GetConfig
  nameWithType: HttpContext.GetConfig
- uid: System.Web.HttpContext.GetGlobalResourceObject*
  parent: System.Web.HttpContext
  isExternal: false
  name: GetGlobalResourceObject
  nameWithType: HttpContext.GetGlobalResourceObject
- uid: System.Web.HttpContext.GetLocalResourceObject*
  parent: System.Web.HttpContext
  isExternal: false
  name: GetLocalResourceObject
  nameWithType: HttpContext.GetLocalResourceObject
- uid: System.Web.HttpContext.GetSection*
  parent: System.Web.HttpContext
  isExternal: false
  name: GetSection
  nameWithType: HttpContext.GetSection
- uid: System.Web.HttpContext.Handler*
  parent: System.Web.HttpContext
  isExternal: false
  name: Handler
  nameWithType: HttpContext.Handler
- uid: System.Web.HttpContext.IsCustomErrorEnabled*
  parent: System.Web.HttpContext
  isExternal: false
  name: IsCustomErrorEnabled
  nameWithType: HttpContext.IsCustomErrorEnabled
- uid: System.Web.HttpContext.IsDebuggingEnabled*
  parent: System.Web.HttpContext
  isExternal: false
  name: IsDebuggingEnabled
  nameWithType: HttpContext.IsDebuggingEnabled
- uid: System.Web.HttpContext.IsPostNotification*
  parent: System.Web.HttpContext
  isExternal: false
  name: IsPostNotification
  nameWithType: HttpContext.IsPostNotification
- uid: System.Web.HttpContext.IsWebSocketRequest*
  parent: System.Web.HttpContext
  isExternal: false
  name: IsWebSocketRequest
  nameWithType: HttpContext.IsWebSocketRequest
- uid: System.Web.HttpContext.IsWebSocketRequestUpgrading*
  parent: System.Web.HttpContext
  isExternal: false
  name: IsWebSocketRequestUpgrading
  nameWithType: HttpContext.IsWebSocketRequestUpgrading
- uid: System.Web.HttpContext.Items*
  parent: System.Web.HttpContext
  isExternal: false
  name: Items
  nameWithType: HttpContext.Items
- uid: System.Web.HttpContext.PageInstrumentation*
  parent: System.Web.HttpContext
  isExternal: false
  name: PageInstrumentation
  nameWithType: HttpContext.PageInstrumentation
- uid: System.Web.HttpContext.PreviousHandler*
  parent: System.Web.HttpContext
  isExternal: false
  name: PreviousHandler
  nameWithType: HttpContext.PreviousHandler
- uid: System.Web.HttpContext.Profile*
  parent: System.Web.HttpContext
  isExternal: false
  name: Profile
  nameWithType: HttpContext.Profile
- uid: System.Web.HttpContext.RemapHandler*
  parent: System.Web.HttpContext
  isExternal: false
  name: RemapHandler
  nameWithType: HttpContext.RemapHandler
- uid: System.Web.HttpContext.Request*
  parent: System.Web.HttpContext
  isExternal: false
  name: Request
  nameWithType: HttpContext.Request
- uid: System.Web.HttpContext.Response*
  parent: System.Web.HttpContext
  isExternal: false
  name: Response
  nameWithType: HttpContext.Response
- uid: System.Web.HttpContext.RewritePath*
  parent: System.Web.HttpContext
  isExternal: false
  name: RewritePath
  nameWithType: HttpContext.RewritePath
- uid: System.Web.HttpContext.Server*
  parent: System.Web.HttpContext
  isExternal: false
  name: Server
  nameWithType: HttpContext.Server
- uid: System.Web.HttpContext.Session*
  parent: System.Web.HttpContext
  isExternal: false
  name: Session
  nameWithType: HttpContext.Session
- uid: System.Web.HttpContext.SetSessionStateBehavior*
  parent: System.Web.HttpContext
  isExternal: false
  name: SetSessionStateBehavior
  nameWithType: HttpContext.SetSessionStateBehavior
- uid: System.Web.HttpContext.SkipAuthorization*
  parent: System.Web.HttpContext
  isExternal: false
  name: SkipAuthorization
  nameWithType: HttpContext.SkipAuthorization
- uid: System.Web.HttpContext.System#IServiceProvider#GetService*
  parent: System.Web.HttpContext
  isExternal: false
  name: System.IServiceProvider.GetService
  nameWithType: HttpContext.System.IServiceProvider.GetService
- uid: System.Web.HttpContext.ThreadAbortOnTimeout*
  parent: System.Web.HttpContext
  isExternal: false
  name: ThreadAbortOnTimeout
  nameWithType: HttpContext.ThreadAbortOnTimeout
- uid: System.Web.HttpContext.Timestamp*
  parent: System.Web.HttpContext
  isExternal: false
  name: Timestamp
  nameWithType: HttpContext.Timestamp
- uid: System.Web.HttpContext.Trace*
  parent: System.Web.HttpContext
  isExternal: false
  name: Trace
  nameWithType: HttpContext.Trace
- uid: System.Web.HttpContext.User*
  parent: System.Web.HttpContext
  isExternal: false
  name: User
  nameWithType: HttpContext.User
- uid: System.Web.HttpContext.WebSocketNegotiatedProtocol*
  parent: System.Web.HttpContext
  isExternal: false
  name: WebSocketNegotiatedProtocol
  nameWithType: HttpContext.WebSocketNegotiatedProtocol
- uid: System.Web.HttpContext.WebSocketRequestedProtocols*
  parent: System.Web.HttpContext
  isExternal: false
  name: WebSocketRequestedProtocols
  nameWithType: HttpContext.WebSocketRequestedProtocols
