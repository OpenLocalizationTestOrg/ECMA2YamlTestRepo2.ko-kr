### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Logging.AspLog
  id: AspLog
  children:
  - Microsoft.VisualBasic.Logging.AspLog.#ctor
  - Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)
  - Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists
  langs:
  - csharp
  name: AspLog
  nameWithType: AspLog
  fullName: Microsoft.VisualBasic.Logging.AspLog
  type: Class
  summary: "속성 및 응용 프로그램의 로그 수신기에 이벤트 및 예외 정보를 쓰기 위한 메서드를 제공 합니다."
  remarks: "`My.Application.Log` 에서 액세스할 수 있는 간단한 진입점을 제공 하는 개체는 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]의 로깅 서비스입니다. `WriteEntry` 및 `WriteException` 메서드는 응용 프로그램의 로그 수신기에 메시지를 씁니다. 응용 프로그램의 구성 파일에서 수신기를 구성할 수 있습니다. 자세한 내용은 참조 [연습: 변경 위치 My.Application.Log 기록 정보](~/add/includes/ajax-current-ext-md.md) 및 [응용 프로그램 로그 작업](~/add/includes/ajax-current-ext-md.md)합니다.       `My.Application.Log` 개체는 클라이언트 응용 프로그램에 대해서만 사용할 수 있습니다. 웹 응용 프로그램 사용 `My.Log`합니다. 자세한 내용은 <xref:Microsoft.VisualBasic.Logging.Log?displayProperty=fullName>.</xref:Microsoft.VisualBasic.Logging.Log?displayProperty=fullName> 을 참조 하십시오.       다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `My.Application.Log` 개체입니다.      | | 참조 |   |--------|---------|   | 응용 프로그램의 로그 수신기에 이벤트 정보 쓰기 | [하는 방법: 로그 메시지 쓰기](~/add/includes/ajax-current-ext-md.md)|   | 응용 프로그램의 로그 수신기에 예외 정보를 작성 합니다. | [하는 방법: 예외 기록](~/add/includes/ajax-current-ext-md.md)|   | 위치를 확인 `My.Application.Log` 정보를 기록 |[ 연습: my.application.log가 정보를 기록 하는 위치 확인](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information. For more information, see [How to: Write Log Messages](../Topic/How%20to:%20Write%20Log%20Messages%20\\(Visual%20Basic\\).md).  \n  \n [!code-vb[VbVbalrMyApplicationLog#11](~/add/codesnippet/visualbasic/VbVbalrMyApplicationLog/Form1.vb#11)]"
  syntax:
    content: 'public class AspLog : Microsoft.VisualBasic.Logging.Log'
  inheritance:
  - System.Object
  - Microsoft.VisualBasic.Logging.Log
  implements: []
  inheritedMembers:
  - Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter
  - Microsoft.VisualBasic.Logging.Log.TraceSource
  - Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)
  - Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)
  - Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)
  - Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)
  - Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)
  - Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Logging.AspLog
  langs:
  - csharp
  name: AspLog()
  nameWithType: AspLog.AspLog()
  fullName: Microsoft.VisualBasic.Logging.AspLog.AspLog()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "새 인스턴스를 초기화는 <xref href=&quot;Microsoft.VisualBasic.Logging.AspLog&quot;> </xref> 클래스입니다."
  remarks: 'The `My.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]''s logging services. The `WriteEntry` and `WriteException` methods write messages to the application''s log listeners. The listeners can be configured by the application''s configuration file. For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/add/includes/ajax-current-ext-md.md) and [Working with Application Logs](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public AspLog ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.AspLog.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.VisualBasic.Logging.AspLog
  langs:
  - csharp
  name: AspLog(String)
  nameWithType: AspLog.AspLog(String)
  fullName: Microsoft.VisualBasic.Logging.AspLog.AspLog(String)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "새 인스턴스를 초기화는 <xref href=&quot;Microsoft.VisualBasic.Logging.AspLog&quot;> </xref> 클래스입니다."
  remarks: 'The `My.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]''s logging services. The `WriteEntry` and `WriteException` methods write messages to the application''s log listeners. The listeners can be configured by the application''s configuration file. For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/add/includes/ajax-current-ext-md.md) and [Working with Application Logs](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public AspLog (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>.</xref:System.String> 에 지정할 이름을 <xref:Microsoft.VisualBasic.Logging.Log.TraceSource*>속성 개체입니다.</xref:Microsoft.VisualBasic.Logging.Log.TraceSource*>"
  overload: Microsoft.VisualBasic.Logging.AspLog.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists
  id: InitializeWithDefaultsSinceNoConfigExists
  parent: Microsoft.VisualBasic.Logging.AspLog
  langs:
  - csharp
  name: InitializeWithDefaultsSinceNoConfigExists()
  nameWithType: AspLog.InitializeWithDefaultsSinceNoConfigExists()
  fullName: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "새 <xref href=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener&quot;> </xref> 에 추가 된 <xref:System.Diagnostics.TraceSource.Listeners*>컬렉션.</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "이 메서드가 만드는 새 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>,으로 해당 이름을 설정 `FileLog`, 심각도 수준으로 메시지를 기록 하도록 구성 <xref:System.Diagnostics.SourceLevels>큽니다.</xref:System.Diagnostics.SourceLevels> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 새 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>개체 다음에 추가 된 <xref:System.Diagnostics.TraceSource.Listeners%2A>컬렉션.</xref:System.Diagnostics.TraceSource.Listeners%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>       <xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A>메서드를 호출 하는 경우는 <xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A>속성이 구성 되지 않았습니다.</xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A> </xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A> 응용 프로그램의 구성 파일에 추적 소스를 구성할 수 있습니다."
  syntax:
    content: protected override void InitializeWithDefaultsSinceNoConfigExists ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.VisualBasic.Logging.Log
  isExternal: false
  name: Microsoft.VisualBasic.Logging.Log
- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor
  parent: Microsoft.VisualBasic.Logging.AspLog
  isExternal: false
  name: AspLog()
  nameWithType: AspLog.AspLog()
  fullName: Microsoft.VisualBasic.Logging.AspLog.AspLog()
- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)
  parent: Microsoft.VisualBasic.Logging.AspLog
  isExternal: false
  name: AspLog(String)
  nameWithType: AspLog.AspLog(String)
  fullName: Microsoft.VisualBasic.Logging.AspLog.AspLog(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists
  parent: Microsoft.VisualBasic.Logging.AspLog
  isExternal: false
  name: InitializeWithDefaultsSinceNoConfigExists()
  nameWithType: AspLog.InitializeWithDefaultsSinceNoConfigExists()
  fullName: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists()
- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor*
  parent: Microsoft.VisualBasic.Logging.AspLog
  isExternal: false
  name: AspLog
  nameWithType: AspLog.AspLog
- uid: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists*
  parent: Microsoft.VisualBasic.Logging.AspLog
  isExternal: false
  name: InitializeWithDefaultsSinceNoConfigExists
  nameWithType: AspLog.InitializeWithDefaultsSinceNoConfigExists
