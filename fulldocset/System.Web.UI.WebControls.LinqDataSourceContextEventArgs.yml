### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  id: LinqDataSourceContextEventArgs
  children:
  - System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor
  - System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor(System.Web.UI.DataSourceOperation)
  - System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance
  - System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation
  langs:
  - csharp
  name: LinqDataSourceContextEventArgs
  nameWithType: LinqDataSourceContextEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  type: Class
  summary: "에 대 한 데이터를 제공는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSource.ContextCreating&quot;> </xref> 이벤트입니다."
  remarks: "기본적으로는 <xref:System.Web.UI.WebControls.LinqDataSource>컨트롤에 지정 된 형식의 인스턴스를 만듭니다는 <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>속성.</xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> </xref:System.Web.UI.WebControls.LinqDataSource> <xref:System.Web.UI.WebControls.LinqDataSource>컨트롤 개체의 인스턴스를 만드는 데이터 컨텍스트 개체의 기본 생성자를 호출 합니다.</xref:System.Web.UI.WebControls.LinqDataSource>       처리 하 여 데이터 컨텍스트 개체를 수동으로 만들 수 있습니다는 <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> 기본이 아닌 생성자를 사용 하려는 경우이 작업을 수행 합니다.       처리할 수도 있습니다는 <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>에 지정 된 것과에서 다른 데이터 컨텍스트 개체를 만들려는 경우 이벤트는 <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>속성.</xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> </xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> 설정 하는 경우에 <xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A>속성을 사용자가 만든 개체입니다.</xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A> <xref:System.Web.UI.WebControls.LinqDataSource>컨트롤 사용자가 만든 개체를 사용 하 여 데이터를 선택 합니다.</xref:System.Web.UI.WebControls.LinqDataSource> <xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A> <xref:System.Data.Linq.DataContext>클래스</xref:System.Data.Linq.DataContext> 에서 파생 되는 개체에 속성</xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A> 을 설정 해야 업데이트, 삽입를 하거나 하는 데이터를 삭제 하는 경우"
  example:
  - "The following example shows how to create the data context object by calling a non-default constructor in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> event. The code assigns the custom object to the <xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A> property.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_133_1.cs)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_133_1.vb)]"
  syntax:
    content: 'public class LinqDataSourceContextEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  langs:
  - csharp
  name: LinqDataSourceContextEventArgs()
  nameWithType: LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs()
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&quot;> </xref> 클래스입니다."
  syntax:
    content: public LinqDataSourceContextEventArgs ();
    parameters: []
  overload: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor(System.Web.UI.DataSourceOperation)
  id: '#ctor(System.Web.UI.DataSourceOperation)'
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  langs:
  - csharp
  name: LinqDataSourceContextEventArgs(DataSourceOperation)
  nameWithType: LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs(DataSourceOperation)
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs(DataSourceOperation)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&quot;> </xref> 지정된 된 데이터 작업에 대 한 클래스입니다."
  syntax:
    content: public LinqDataSourceContextEventArgs (System.Web.UI.DataSourceOperation operation);
    parameters:
    - id: operation
      type: System.Web.UI.DataSourceOperation
      description: "수행 중인 데이터 작업입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance
  id: ObjectInstance
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  langs:
  - csharp
  name: ObjectInstance
  nameWithType: LinqDataSourceContextEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "만들 데이터 컨텍스트 개체를 가져오거나 설정 합니다."
  remarks: "기본적으로는 <xref:System.Web.UI.WebControls.LinqDataSource>컨트롤에 지정 된 클래스의 인스턴스를 만듭니다는 <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>속성.</xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> </xref:System.Web.UI.WebControls.LinqDataSource> 해당 클래스의 기본 생성자를 호출 하 여 수행 합니다.       처리 하 여 데이터 작업에 대 한 개체를 수동으로 만들 수 있습니다는 <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>이벤트 및 만든 개체에 한 ObjectInstance 속성을 설정 합니다.</xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>       개체를 만들 수동으로와 다른 개체를 만들려고 할 경우 지정 된 것에 또는 기본이 아닌 생성자를 사용 하려면 하는 경우는 <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>속성.</xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>       ObjectInstance 속성에 지정 된 형식의 인스턴스는는 <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>속성을 한 후 해당 인스턴스는 만들어지므로 <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> </xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> ObjectInstance 속성 중 데이터 컨텍스트 개체를 수동으로 만들어야 하는 때에 사용 되는 <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> <xref:System.Data.Linq.DataContext>클래스</xref:System.Data.Linq.DataContext> 에서 파생 되는 개체를 한 ObjectInstance 속성을 설정 해야 업데이트, 삽입를 하거나 하는 데이터를 삭제 하는 경우"
  example:
  - "The following example shows how to create the data context object by calling a non-default constructor in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> event. The code assigns the custom object to the ObjectInstance property.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_590_1.cs)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_590_1.vb)]"
  syntax:
    content: public object ObjectInstance { get; set; }
    return:
      type: System.Object
      description: "ObjectInstance 속성;로 설정 된 데이터 컨텍스트 개체 그렇지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation
  id: Operation
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  langs:
  - csharp
  name: Operation
  nameWithType: LinqDataSourceContextEventArgs.Operation
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "수행 중인 데이터 작업을 가져옵니다."
  syntax:
    content: public System.Web.UI.DataSourceOperation Operation { get; }
    return:
      type: System.Web.UI.DataSourceOperation
      description: "수행 중인 데이터 작업의 유형을 나타내는 값입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: LinqDataSourceContextEventArgs()
  nameWithType: LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs()
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs()
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor(System.Web.UI.DataSourceOperation)
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: LinqDataSourceContextEventArgs(DataSourceOperation)
  nameWithType: LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs(DataSourceOperation)
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs(DataSourceOperation)
- uid: System.Web.UI.DataSourceOperation
  parent: System.Web.UI
  isExternal: false
  name: DataSourceOperation
  nameWithType: DataSourceOperation
  fullName: System.Web.UI.DataSourceOperation
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: LinqDataSourceContextEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: Operation
  nameWithType: LinqDataSourceContextEventArgs.Operation
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor*
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: LinqDataSourceContextEventArgs
  nameWithType: LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance*
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: LinqDataSourceContextEventArgs.ObjectInstance
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation*
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: Operation
  nameWithType: LinqDataSourceContextEventArgs.Operation
