### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.InkCanvas
  id: InkCanvas
  children:
  - System.Windows.Controls.InkCanvas.#ctor
  - System.Windows.Controls.InkCanvas.ActiveEditingMode
  - System.Windows.Controls.InkCanvas.ActiveEditingModeChanged
  - System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent
  - System.Windows.Controls.InkCanvas.ActiveEditingModeProperty
  - System.Windows.Controls.InkCanvas.ArrangeOverride(System.Windows.Size)
  - System.Windows.Controls.InkCanvas.Background
  - System.Windows.Controls.InkCanvas.BackgroundProperty
  - System.Windows.Controls.InkCanvas.BottomProperty
  - System.Windows.Controls.InkCanvas.CanPaste
  - System.Windows.Controls.InkCanvas.Children
  - System.Windows.Controls.InkCanvas.CopySelection
  - System.Windows.Controls.InkCanvas.CutSelection
  - System.Windows.Controls.InkCanvas.DefaultDrawingAttributes
  - System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty
  - System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced
  - System.Windows.Controls.InkCanvas.DefaultStylusPointDescription
  - System.Windows.Controls.InkCanvas.DynamicRenderer
  - System.Windows.Controls.InkCanvas.EditingMode
  - System.Windows.Controls.InkCanvas.EditingModeChanged
  - System.Windows.Controls.InkCanvas.EditingModeChangedEvent
  - System.Windows.Controls.InkCanvas.EditingModeInverted
  - System.Windows.Controls.InkCanvas.EditingModeInvertedChanged
  - System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent
  - System.Windows.Controls.InkCanvas.EditingModeInvertedProperty
  - System.Windows.Controls.InkCanvas.EditingModeProperty
  - System.Windows.Controls.InkCanvas.EraserShape
  - System.Windows.Controls.InkCanvas.Gesture
  - System.Windows.Controls.InkCanvas.GestureEvent
  - System.Windows.Controls.InkCanvas.GetBottom(System.Windows.UIElement)
  - System.Windows.Controls.InkCanvas.GetEnabledGestures
  - System.Windows.Controls.InkCanvas.GetLeft(System.Windows.UIElement)
  - System.Windows.Controls.InkCanvas.GetRight(System.Windows.UIElement)
  - System.Windows.Controls.InkCanvas.GetSelectedElements
  - System.Windows.Controls.InkCanvas.GetSelectedStrokes
  - System.Windows.Controls.InkCanvas.GetSelectionBounds
  - System.Windows.Controls.InkCanvas.GetTop(System.Windows.UIElement)
  - System.Windows.Controls.InkCanvas.GetVisualChild(System.Int32)
  - System.Windows.Controls.InkCanvas.HitTestCore(System.Windows.Media.PointHitTestParameters)
  - System.Windows.Controls.InkCanvas.HitTestSelection(System.Windows.Point)
  - System.Windows.Controls.InkCanvas.InkPresenter
  - System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable
  - System.Windows.Controls.InkCanvas.LeftProperty
  - System.Windows.Controls.InkCanvas.LogicalChildren
  - System.Windows.Controls.InkCanvas.MeasureOverride(System.Windows.Size)
  - System.Windows.Controls.InkCanvas.MoveEnabled
  - System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(System.Windows.RoutedEventArgs)
  - System.Windows.Controls.InkCanvas.OnCreateAutomationPeer
  - System.Windows.Controls.InkCanvas.OnDefaultDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)
  - System.Windows.Controls.InkCanvas.OnEditingModeChanged(System.Windows.RoutedEventArgs)
  - System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged(System.Windows.RoutedEventArgs)
  - System.Windows.Controls.InkCanvas.OnGesture(System.Windows.Controls.InkCanvasGestureEventArgs)
  - System.Windows.Controls.InkCanvas.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Controls.InkCanvas.OnSelectionChanged(System.EventArgs)
  - System.Windows.Controls.InkCanvas.OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)
  - System.Windows.Controls.InkCanvas.OnSelectionMoved(System.EventArgs)
  - System.Windows.Controls.InkCanvas.OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)
  - System.Windows.Controls.InkCanvas.OnSelectionResized(System.EventArgs)
  - System.Windows.Controls.InkCanvas.OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)
  - System.Windows.Controls.InkCanvas.OnStrokeCollected(System.Windows.Controls.InkCanvasStrokeCollectedEventArgs)
  - System.Windows.Controls.InkCanvas.OnStrokeErased(System.Windows.RoutedEventArgs)
  - System.Windows.Controls.InkCanvas.OnStrokeErasing(System.Windows.Controls.InkCanvasStrokeErasingEventArgs)
  - System.Windows.Controls.InkCanvas.OnStrokesReplaced(System.Windows.Controls.InkCanvasStrokesReplacedEventArgs)
  - System.Windows.Controls.InkCanvas.Paste
  - System.Windows.Controls.InkCanvas.Paste(System.Windows.Point)
  - System.Windows.Controls.InkCanvas.PreferredPasteFormats
  - System.Windows.Controls.InkCanvas.ResizeEnabled
  - System.Windows.Controls.InkCanvas.RightProperty
  - System.Windows.Controls.InkCanvas.Select(System.Collections.Generic.IEnumerable{System.Windows.UIElement})
  - System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection)
  - System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})
  - System.Windows.Controls.InkCanvas.SelectionChanged
  - System.Windows.Controls.InkCanvas.SelectionChanging
  - System.Windows.Controls.InkCanvas.SelectionMoved
  - System.Windows.Controls.InkCanvas.SelectionMoving
  - System.Windows.Controls.InkCanvas.SelectionResized
  - System.Windows.Controls.InkCanvas.SelectionResizing
  - System.Windows.Controls.InkCanvas.SetBottom(System.Windows.UIElement,System.Double)
  - System.Windows.Controls.InkCanvas.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})
  - System.Windows.Controls.InkCanvas.SetLeft(System.Windows.UIElement,System.Double)
  - System.Windows.Controls.InkCanvas.SetRight(System.Windows.UIElement,System.Double)
  - System.Windows.Controls.InkCanvas.SetTop(System.Windows.UIElement,System.Double)
  - System.Windows.Controls.InkCanvas.StrokeCollected
  - System.Windows.Controls.InkCanvas.StrokeCollectedEvent
  - System.Windows.Controls.InkCanvas.StrokeErased
  - System.Windows.Controls.InkCanvas.StrokeErasedEvent
  - System.Windows.Controls.InkCanvas.StrokeErasing
  - System.Windows.Controls.InkCanvas.Strokes
  - System.Windows.Controls.InkCanvas.StrokesProperty
  - System.Windows.Controls.InkCanvas.StrokesReplaced
  - System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddChild(System.Object)
  - System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddText(System.String)
  - System.Windows.Controls.InkCanvas.TopProperty
  - System.Windows.Controls.InkCanvas.UseCustomCursor
  - System.Windows.Controls.InkCanvas.VisualChildrenCount
  langs:
  - csharp
  name: InkCanvas
  nameWithType: InkCanvas
  fullName: System.Windows.Controls.InkCanvas
  type: Class
  summary: "수신 및 잉크 스트로크를 표시 하는 영역을 정의 합니다."
  remarks: "InkCanvas 받고 잉크 입력을 표시 하는 데 사용할 수 있는 요소는를입니다. 일반적으로 작용 스타일러스나 마우스를 사용 하 여 잉크 스트로크를 생성 하는 디지타이저와 스타일러스를 사용 하 여 수행 됩니다. 생성된 된 스트로크도 표현 됩니다 <xref:System.Windows.Ink.Stroke>개체, 수 및 중 하나를 프로그래밍 방식으로 조작 또는 사용자 입력에 따라.</xref:System.Windows.Ink.Stroke> InkCanvas 수정 하거나 기존 <xref:System.Windows.Ink.Stroke>.</xref:System.Windows.Ink.Stroke> 삭제할 수 있습니다.       InkCanvas는 데이터 소스에 바인딩할 수 있습니다. 예를 들어 바인딩할 수 있습니다는 <xref:System.Windows.Controls.InkCanvas.Strokes%2A>속성을: serialize 된 잉크의 데이터 형식인 (ISF) 또는 심지어 잉크를 포함 하는 base&64;로 인코딩된 문자열은 <xref:System.Windows.Controls.InkCanvas.Strokes%2A>다른 InkCanvas의 속성입니다.</xref:System.Windows.Controls.InkCanvas.Strokes%2A> </xref:System.Windows.Controls.InkCanvas.Strokes%2A> 속성을 같은 바인딩할 수도 <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A>및 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, 다른 데이터 소스에.</xref:System.Windows.Controls.InkCanvas.EditingMode%2A> </xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A>"
  example:
  - "The following example demonstrates how to simulate the use of both a pen and a highlighter on the same InkCanvas. The example assumes that the root element in the markup language (XAML) file is a <xref:System.Windows.Controls.DockPanel> called `root`. It also assumes that there is a <xref:System.Windows.Controls.Button> called `switchHighlighter` and that both the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> and <xref:System.Windows.FrameworkElement.Loaded> events are connected to the example's event handler.  \n  \n [!code-cs[DrawingAttributes#3](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#3)]\n [!code-vb[DrawingAttributes#3](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#3)]  \n  \n The following example declares two InkCanvas objects in XAML and establishes data binding between them and other data sources. The first InkCanvas, called `ic`, is bound to two data sources. The <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> and <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> properties on `ic` are bound to <xref:System.Windows.Controls.ListBox> objects, which are, in turn, bound to arrays defined in the XAML. The <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A>, and <xref:System.Windows.Controls.InkCanvas.Strokes%2A> properties of the second InkCanvas are bound to the first InkCanvas in the following code.  \n  \n [!code-xml[InkCanvasBinding#1](~/add/codesnippet/xaml/t-system.windows.control_114_2.xaml)]\n [!code-xml[InkCanvasBinding#1](~/add/codesnippet/xaml/t-system.windows.control_114_2.xaml)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Children")]

      public class InkCanvas : System.Windows.FrameworkElement, System.Windows.Markup.IAddChild
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Media.Visual
  - System.Windows.UIElement
  - System.Windows.FrameworkElement
  implements:
  - System.Windows.Markup.IAddChild
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.FrameworkElement.ActualHeight
  - System.Windows.FrameworkElement.ActualHeightProperty
  - System.Windows.FrameworkElement.ActualWidth
  - System.Windows.FrameworkElement.ActualWidthProperty
  - System.Windows.FrameworkElement.AddLogicalChild(System.Object)
  - System.Windows.FrameworkElement.ApplyTemplate
  - System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)
  - System.Windows.FrameworkElement.BeginInit
  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)
  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)
  - System.Windows.FrameworkElement.BindingGroup
  - System.Windows.FrameworkElement.BindingGroupProperty
  - System.Windows.FrameworkElement.BringIntoView
  - System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)
  - System.Windows.FrameworkElement.ContextMenu
  - System.Windows.FrameworkElement.ContextMenuClosing
  - System.Windows.FrameworkElement.ContextMenuClosingEvent
  - System.Windows.FrameworkElement.ContextMenuOpening
  - System.Windows.FrameworkElement.ContextMenuOpeningEvent
  - System.Windows.FrameworkElement.ContextMenuProperty
  - System.Windows.FrameworkElement.Cursor
  - System.Windows.FrameworkElement.CursorProperty
  - System.Windows.FrameworkElement.DataContext
  - System.Windows.FrameworkElement.DataContextChanged
  - System.Windows.FrameworkElement.DataContextProperty
  - System.Windows.FrameworkElement.DefaultStyleKey
  - System.Windows.FrameworkElement.DefaultStyleKeyProperty
  - System.Windows.FrameworkElement.EndInit
  - System.Windows.FrameworkElement.FindName(System.String)
  - System.Windows.FrameworkElement.FindResource(System.Object)
  - System.Windows.FrameworkElement.FlowDirection
  - System.Windows.FrameworkElement.FlowDirectionProperty
  - System.Windows.FrameworkElement.FocusVisualStyle
  - System.Windows.FrameworkElement.FocusVisualStyleProperty
  - System.Windows.FrameworkElement.ForceCursor
  - System.Windows.FrameworkElement.ForceCursorProperty
  - System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)
  - System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)
  - System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)
  - System.Windows.FrameworkElement.GetTemplateChild(System.String)
  - System.Windows.FrameworkElement.GetUIParentCore
  - System.Windows.FrameworkElement.Height
  - System.Windows.FrameworkElement.HeightProperty
  - System.Windows.FrameworkElement.HorizontalAlignment
  - System.Windows.FrameworkElement.HorizontalAlignmentProperty
  - System.Windows.FrameworkElement.InheritanceBehavior
  - System.Windows.FrameworkElement.Initialized
  - System.Windows.FrameworkElement.InputScope
  - System.Windows.FrameworkElement.InputScopeProperty
  - System.Windows.FrameworkElement.IsInitialized
  - System.Windows.FrameworkElement.IsLoaded
  - System.Windows.FrameworkElement.Language
  - System.Windows.FrameworkElement.LanguageProperty
  - System.Windows.FrameworkElement.LayoutTransform
  - System.Windows.FrameworkElement.LayoutTransformProperty
  - System.Windows.FrameworkElement.Loaded
  - System.Windows.FrameworkElement.LoadedEvent
  - System.Windows.FrameworkElement.Margin
  - System.Windows.FrameworkElement.MarginProperty
  - System.Windows.FrameworkElement.MaxHeight
  - System.Windows.FrameworkElement.MaxHeightProperty
  - System.Windows.FrameworkElement.MaxWidth
  - System.Windows.FrameworkElement.MaxWidthProperty
  - System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)
  - System.Windows.FrameworkElement.MinHeight
  - System.Windows.FrameworkElement.MinHeightProperty
  - System.Windows.FrameworkElement.MinWidth
  - System.Windows.FrameworkElement.MinWidthProperty
  - System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)
  - System.Windows.FrameworkElement.Name
  - System.Windows.FrameworkElement.NameProperty
  - System.Windows.FrameworkElement.OnApplyTemplate
  - System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)
  - System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)
  - System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)
  - System.Windows.FrameworkElement.OnInitialized(System.EventArgs)
  - System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)
  - System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)
  - System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)
  - System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)
  - System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)
  - System.Windows.FrameworkElement.OverridesDefaultStyle
  - System.Windows.FrameworkElement.OverridesDefaultStyleProperty
  - System.Windows.FrameworkElement.Parent
  - System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)
  - System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)
  - System.Windows.FrameworkElement.RegisterName(System.String,System.Object)
  - System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)
  - System.Windows.FrameworkElement.RequestBringIntoView
  - System.Windows.FrameworkElement.RequestBringIntoViewEvent
  - System.Windows.FrameworkElement.Resources
  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)
  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)
  - System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)
  - System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)
  - System.Windows.FrameworkElement.ShouldSerializeResources
  - System.Windows.FrameworkElement.ShouldSerializeStyle
  - System.Windows.FrameworkElement.ShouldSerializeTriggers
  - System.Windows.FrameworkElement.SizeChanged
  - System.Windows.FrameworkElement.SizeChangedEvent
  - System.Windows.FrameworkElement.SourceUpdated
  - System.Windows.FrameworkElement.Style
  - System.Windows.FrameworkElement.StyleProperty
  - System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  - System.Windows.FrameworkElement.Tag
  - System.Windows.FrameworkElement.TagProperty
  - System.Windows.FrameworkElement.TargetUpdated
  - System.Windows.FrameworkElement.TemplatedParent
  - System.Windows.FrameworkElement.ToolTip
  - System.Windows.FrameworkElement.ToolTipClosing
  - System.Windows.FrameworkElement.ToolTipClosingEvent
  - System.Windows.FrameworkElement.ToolTipOpening
  - System.Windows.FrameworkElement.ToolTipOpeningEvent
  - System.Windows.FrameworkElement.ToolTipProperty
  - System.Windows.FrameworkElement.Triggers
  - System.Windows.FrameworkElement.TryFindResource(System.Object)
  - System.Windows.FrameworkElement.Unloaded
  - System.Windows.FrameworkElement.UnloadedEvent
  - System.Windows.FrameworkElement.UnregisterName(System.String)
  - System.Windows.FrameworkElement.UpdateDefaultStyle
  - System.Windows.FrameworkElement.UseLayoutRounding
  - System.Windows.FrameworkElement.UseLayoutRoundingProperty
  - System.Windows.FrameworkElement.VerticalAlignment
  - System.Windows.FrameworkElement.VerticalAlignmentProperty
  - System.Windows.FrameworkElement.Width
  - System.Windows.FrameworkElement.WidthProperty
  - System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)
  - System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)
  - System.Windows.Media.Visual.PointToScreen(System.Windows.Point)
  - System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)
  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.VisualBitmapEffect
  - System.Windows.Media.Visual.VisualBitmapEffectInput
  - System.Windows.Media.Visual.VisualBitmapScalingMode
  - System.Windows.Media.Visual.VisualCacheMode
  - System.Windows.Media.Visual.VisualClearTypeHint
  - System.Windows.Media.Visual.VisualClip
  - System.Windows.Media.Visual.VisualEdgeMode
  - System.Windows.Media.Visual.VisualEffect
  - System.Windows.Media.Visual.VisualOffset
  - System.Windows.Media.Visual.VisualOpacity
  - System.Windows.Media.Visual.VisualOpacityMask
  - System.Windows.Media.Visual.VisualParent
  - System.Windows.Media.Visual.VisualScrollableAreaClip
  - System.Windows.Media.Visual.VisualTextHintingMode
  - System.Windows.Media.Visual.VisualTextRenderingMode
  - System.Windows.Media.Visual.VisualTransform
  - System.Windows.Media.Visual.VisualXSnappingGuidelines
  - System.Windows.Media.Visual.VisualYSnappingGuidelines
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  - System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)
  - System.Windows.UIElement.AllowDrop
  - System.Windows.UIElement.AllowDropProperty
  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.UIElement.AreAnyTouchesCaptured
  - System.Windows.UIElement.AreAnyTouchesCapturedProperty
  - System.Windows.UIElement.AreAnyTouchesCapturedWithin
  - System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty
  - System.Windows.UIElement.AreAnyTouchesDirectlyOver
  - System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty
  - System.Windows.UIElement.AreAnyTouchesOver
  - System.Windows.UIElement.AreAnyTouchesOverProperty
  - System.Windows.UIElement.Arrange(System.Windows.Rect)
  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.UIElement.BitmapEffect
  - System.Windows.UIElement.BitmapEffectInput
  - System.Windows.UIElement.BitmapEffectInputProperty
  - System.Windows.UIElement.BitmapEffectProperty
  - System.Windows.UIElement.CacheMode
  - System.Windows.UIElement.CacheModeProperty
  - System.Windows.UIElement.CaptureMouse
  - System.Windows.UIElement.CaptureStylus
  - System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)
  - System.Windows.UIElement.Clip
  - System.Windows.UIElement.ClipProperty
  - System.Windows.UIElement.ClipToBounds
  - System.Windows.UIElement.ClipToBoundsProperty
  - System.Windows.UIElement.CommandBindings
  - System.Windows.UIElement.DesiredSize
  - System.Windows.UIElement.DragEnter
  - System.Windows.UIElement.DragEnterEvent
  - System.Windows.UIElement.DragLeave
  - System.Windows.UIElement.DragLeaveEvent
  - System.Windows.UIElement.DragOver
  - System.Windows.UIElement.DragOverEvent
  - System.Windows.UIElement.Drop
  - System.Windows.UIElement.DropEvent
  - System.Windows.UIElement.Effect
  - System.Windows.UIElement.EffectProperty
  - System.Windows.UIElement.Focus
  - System.Windows.UIElement.Focusable
  - System.Windows.UIElement.FocusableChanged
  - System.Windows.UIElement.FocusableProperty
  - System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.UIElement.GiveFeedback
  - System.Windows.UIElement.GiveFeedbackEvent
  - System.Windows.UIElement.GotFocus
  - System.Windows.UIElement.GotFocusEvent
  - System.Windows.UIElement.GotKeyboardFocus
  - System.Windows.UIElement.GotKeyboardFocusEvent
  - System.Windows.UIElement.GotMouseCapture
  - System.Windows.UIElement.GotMouseCaptureEvent
  - System.Windows.UIElement.GotStylusCapture
  - System.Windows.UIElement.GotStylusCaptureEvent
  - System.Windows.UIElement.GotTouchCapture
  - System.Windows.UIElement.GotTouchCaptureEvent
  - System.Windows.UIElement.HasAnimatedProperties
  - System.Windows.UIElement.HasEffectiveKeyboardFocus
  - System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)
  - System.Windows.UIElement.InputBindings
  - System.Windows.UIElement.InputHitTest(System.Windows.Point)
  - System.Windows.UIElement.InvalidateArrange
  - System.Windows.UIElement.InvalidateMeasure
  - System.Windows.UIElement.InvalidateVisual
  - System.Windows.UIElement.IsArrangeValid
  - System.Windows.UIElement.IsEnabled
  - System.Windows.UIElement.IsEnabledChanged
  - System.Windows.UIElement.IsEnabledCore
  - System.Windows.UIElement.IsEnabledProperty
  - System.Windows.UIElement.IsFocused
  - System.Windows.UIElement.IsFocusedProperty
  - System.Windows.UIElement.IsHitTestVisible
  - System.Windows.UIElement.IsHitTestVisibleChanged
  - System.Windows.UIElement.IsHitTestVisibleProperty
  - System.Windows.UIElement.IsInputMethodEnabled
  - System.Windows.UIElement.IsKeyboardFocused
  - System.Windows.UIElement.IsKeyboardFocusedChanged
  - System.Windows.UIElement.IsKeyboardFocusedProperty
  - System.Windows.UIElement.IsKeyboardFocusWithin
  - System.Windows.UIElement.IsKeyboardFocusWithinChanged
  - System.Windows.UIElement.IsKeyboardFocusWithinProperty
  - System.Windows.UIElement.IsManipulationEnabled
  - System.Windows.UIElement.IsManipulationEnabledProperty
  - System.Windows.UIElement.IsMeasureValid
  - System.Windows.UIElement.IsMouseCaptured
  - System.Windows.UIElement.IsMouseCapturedChanged
  - System.Windows.UIElement.IsMouseCapturedProperty
  - System.Windows.UIElement.IsMouseCaptureWithin
  - System.Windows.UIElement.IsMouseCaptureWithinChanged
  - System.Windows.UIElement.IsMouseCaptureWithinProperty
  - System.Windows.UIElement.IsMouseDirectlyOver
  - System.Windows.UIElement.IsMouseDirectlyOverChanged
  - System.Windows.UIElement.IsMouseDirectlyOverProperty
  - System.Windows.UIElement.IsMouseOver
  - System.Windows.UIElement.IsMouseOverProperty
  - System.Windows.UIElement.IsStylusCaptured
  - System.Windows.UIElement.IsStylusCapturedChanged
  - System.Windows.UIElement.IsStylusCapturedProperty
  - System.Windows.UIElement.IsStylusCaptureWithin
  - System.Windows.UIElement.IsStylusCaptureWithinChanged
  - System.Windows.UIElement.IsStylusCaptureWithinProperty
  - System.Windows.UIElement.IsStylusDirectlyOver
  - System.Windows.UIElement.IsStylusDirectlyOverChanged
  - System.Windows.UIElement.IsStylusDirectlyOverProperty
  - System.Windows.UIElement.IsStylusOver
  - System.Windows.UIElement.IsStylusOverProperty
  - System.Windows.UIElement.IsVisible
  - System.Windows.UIElement.IsVisibleChanged
  - System.Windows.UIElement.IsVisibleProperty
  - System.Windows.UIElement.KeyDown
  - System.Windows.UIElement.KeyDownEvent
  - System.Windows.UIElement.KeyUp
  - System.Windows.UIElement.KeyUpEvent
  - System.Windows.UIElement.LayoutUpdated
  - System.Windows.UIElement.LostFocus
  - System.Windows.UIElement.LostFocusEvent
  - System.Windows.UIElement.LostKeyboardFocus
  - System.Windows.UIElement.LostKeyboardFocusEvent
  - System.Windows.UIElement.LostMouseCapture
  - System.Windows.UIElement.LostMouseCaptureEvent
  - System.Windows.UIElement.LostStylusCapture
  - System.Windows.UIElement.LostStylusCaptureEvent
  - System.Windows.UIElement.LostTouchCapture
  - System.Windows.UIElement.LostTouchCaptureEvent
  - System.Windows.UIElement.ManipulationBoundaryFeedback
  - System.Windows.UIElement.ManipulationBoundaryFeedbackEvent
  - System.Windows.UIElement.ManipulationCompleted
  - System.Windows.UIElement.ManipulationCompletedEvent
  - System.Windows.UIElement.ManipulationDelta
  - System.Windows.UIElement.ManipulationDeltaEvent
  - System.Windows.UIElement.ManipulationInertiaStarting
  - System.Windows.UIElement.ManipulationInertiaStartingEvent
  - System.Windows.UIElement.ManipulationStarted
  - System.Windows.UIElement.ManipulationStartedEvent
  - System.Windows.UIElement.ManipulationStarting
  - System.Windows.UIElement.ManipulationStartingEvent
  - System.Windows.UIElement.Measure(System.Windows.Size)
  - System.Windows.UIElement.MouseDown
  - System.Windows.UIElement.MouseDownEvent
  - System.Windows.UIElement.MouseEnter
  - System.Windows.UIElement.MouseEnterEvent
  - System.Windows.UIElement.MouseLeave
  - System.Windows.UIElement.MouseLeaveEvent
  - System.Windows.UIElement.MouseLeftButtonDown
  - System.Windows.UIElement.MouseLeftButtonDownEvent
  - System.Windows.UIElement.MouseLeftButtonUp
  - System.Windows.UIElement.MouseLeftButtonUpEvent
  - System.Windows.UIElement.MouseMove
  - System.Windows.UIElement.MouseMoveEvent
  - System.Windows.UIElement.MouseRightButtonDown
  - System.Windows.UIElement.MouseRightButtonDownEvent
  - System.Windows.UIElement.MouseRightButtonUp
  - System.Windows.UIElement.MouseRightButtonUpEvent
  - System.Windows.UIElement.MouseUp
  - System.Windows.UIElement.MouseUpEvent
  - System.Windows.UIElement.MouseWheel
  - System.Windows.UIElement.MouseWheelEvent
  - System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)
  - System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)
  - System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)
  - System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)
  - System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)
  - System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)
  - System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)
  - System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)
  - System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)
  - System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)
  - System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)
  - System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.Opacity
  - System.Windows.UIElement.OpacityMask
  - System.Windows.UIElement.OpacityMaskProperty
  - System.Windows.UIElement.OpacityProperty
  - System.Windows.UIElement.PersistId
  - System.Windows.UIElement.PreviewDragEnter
  - System.Windows.UIElement.PreviewDragEnterEvent
  - System.Windows.UIElement.PreviewDragLeave
  - System.Windows.UIElement.PreviewDragLeaveEvent
  - System.Windows.UIElement.PreviewDragOver
  - System.Windows.UIElement.PreviewDragOverEvent
  - System.Windows.UIElement.PreviewDrop
  - System.Windows.UIElement.PreviewDropEvent
  - System.Windows.UIElement.PreviewGiveFeedback
  - System.Windows.UIElement.PreviewGiveFeedbackEvent
  - System.Windows.UIElement.PreviewGotKeyboardFocus
  - System.Windows.UIElement.PreviewGotKeyboardFocusEvent
  - System.Windows.UIElement.PreviewKeyDown
  - System.Windows.UIElement.PreviewKeyDownEvent
  - System.Windows.UIElement.PreviewKeyUp
  - System.Windows.UIElement.PreviewKeyUpEvent
  - System.Windows.UIElement.PreviewLostKeyboardFocus
  - System.Windows.UIElement.PreviewLostKeyboardFocusEvent
  - System.Windows.UIElement.PreviewMouseDown
  - System.Windows.UIElement.PreviewMouseDownEvent
  - System.Windows.UIElement.PreviewMouseLeftButtonDown
  - System.Windows.UIElement.PreviewMouseLeftButtonDownEvent
  - System.Windows.UIElement.PreviewMouseLeftButtonUp
  - System.Windows.UIElement.PreviewMouseLeftButtonUpEvent
  - System.Windows.UIElement.PreviewMouseMove
  - System.Windows.UIElement.PreviewMouseMoveEvent
  - System.Windows.UIElement.PreviewMouseRightButtonDown
  - System.Windows.UIElement.PreviewMouseRightButtonDownEvent
  - System.Windows.UIElement.PreviewMouseRightButtonUp
  - System.Windows.UIElement.PreviewMouseRightButtonUpEvent
  - System.Windows.UIElement.PreviewMouseUp
  - System.Windows.UIElement.PreviewMouseUpEvent
  - System.Windows.UIElement.PreviewMouseWheel
  - System.Windows.UIElement.PreviewMouseWheelEvent
  - System.Windows.UIElement.PreviewQueryContinueDrag
  - System.Windows.UIElement.PreviewQueryContinueDragEvent
  - System.Windows.UIElement.PreviewStylusButtonDown
  - System.Windows.UIElement.PreviewStylusButtonDownEvent
  - System.Windows.UIElement.PreviewStylusButtonUp
  - System.Windows.UIElement.PreviewStylusButtonUpEvent
  - System.Windows.UIElement.PreviewStylusDown
  - System.Windows.UIElement.PreviewStylusDownEvent
  - System.Windows.UIElement.PreviewStylusInAirMove
  - System.Windows.UIElement.PreviewStylusInAirMoveEvent
  - System.Windows.UIElement.PreviewStylusInRange
  - System.Windows.UIElement.PreviewStylusInRangeEvent
  - System.Windows.UIElement.PreviewStylusMove
  - System.Windows.UIElement.PreviewStylusMoveEvent
  - System.Windows.UIElement.PreviewStylusOutOfRange
  - System.Windows.UIElement.PreviewStylusOutOfRangeEvent
  - System.Windows.UIElement.PreviewStylusSystemGesture
  - System.Windows.UIElement.PreviewStylusSystemGestureEvent
  - System.Windows.UIElement.PreviewStylusUp
  - System.Windows.UIElement.PreviewStylusUpEvent
  - System.Windows.UIElement.PreviewTextInput
  - System.Windows.UIElement.PreviewTextInputEvent
  - System.Windows.UIElement.PreviewTouchDown
  - System.Windows.UIElement.PreviewTouchDownEvent
  - System.Windows.UIElement.PreviewTouchMove
  - System.Windows.UIElement.PreviewTouchMoveEvent
  - System.Windows.UIElement.PreviewTouchUp
  - System.Windows.UIElement.PreviewTouchUpEvent
  - System.Windows.UIElement.QueryContinueDrag
  - System.Windows.UIElement.QueryContinueDragEvent
  - System.Windows.UIElement.QueryCursor
  - System.Windows.UIElement.QueryCursorEvent
  - System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)
  - System.Windows.UIElement.ReleaseAllTouchCaptures
  - System.Windows.UIElement.ReleaseMouseCapture
  - System.Windows.UIElement.ReleaseStylusCapture
  - System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)
  - System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.UIElement.RenderSize
  - System.Windows.UIElement.RenderTransform
  - System.Windows.UIElement.RenderTransformOrigin
  - System.Windows.UIElement.RenderTransformOriginProperty
  - System.Windows.UIElement.RenderTransformProperty
  - System.Windows.UIElement.ShouldSerializeCommandBindings
  - System.Windows.UIElement.ShouldSerializeInputBindings
  - System.Windows.UIElement.SnapsToDevicePixels
  - System.Windows.UIElement.SnapsToDevicePixelsProperty
  - System.Windows.UIElement.StylusButtonDown
  - System.Windows.UIElement.StylusButtonDownEvent
  - System.Windows.UIElement.StylusButtonUp
  - System.Windows.UIElement.StylusButtonUpEvent
  - System.Windows.UIElement.StylusDown
  - System.Windows.UIElement.StylusDownEvent
  - System.Windows.UIElement.StylusEnter
  - System.Windows.UIElement.StylusEnterEvent
  - System.Windows.UIElement.StylusInAirMove
  - System.Windows.UIElement.StylusInAirMoveEvent
  - System.Windows.UIElement.StylusInRange
  - System.Windows.UIElement.StylusInRangeEvent
  - System.Windows.UIElement.StylusLeave
  - System.Windows.UIElement.StylusLeaveEvent
  - System.Windows.UIElement.StylusMove
  - System.Windows.UIElement.StylusMoveEvent
  - System.Windows.UIElement.StylusOutOfRange
  - System.Windows.UIElement.StylusOutOfRangeEvent
  - System.Windows.UIElement.StylusPlugIns
  - System.Windows.UIElement.StylusSystemGesture
  - System.Windows.UIElement.StylusSystemGestureEvent
  - System.Windows.UIElement.StylusUp
  - System.Windows.UIElement.StylusUpEvent
  - System.Windows.UIElement.TextInput
  - System.Windows.UIElement.TextInputEvent
  - System.Windows.UIElement.TouchDown
  - System.Windows.UIElement.TouchDownEvent
  - System.Windows.UIElement.TouchEnter
  - System.Windows.UIElement.TouchEnterEvent
  - System.Windows.UIElement.TouchesCaptured
  - System.Windows.UIElement.TouchesCapturedWithin
  - System.Windows.UIElement.TouchesDirectlyOver
  - System.Windows.UIElement.TouchesOver
  - System.Windows.UIElement.TouchLeave
  - System.Windows.UIElement.TouchLeaveEvent
  - System.Windows.UIElement.TouchMove
  - System.Windows.UIElement.TouchMoveEvent
  - System.Windows.UIElement.TouchUp
  - System.Windows.UIElement.TouchUpEvent
  - System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)
  - System.Windows.UIElement.Uid
  - System.Windows.UIElement.UidProperty
  - System.Windows.UIElement.UpdateLayout
  - System.Windows.UIElement.Visibility
  - System.Windows.UIElement.VisibilityProperty
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.#ctor
  id: '#ctor'
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: InkCanvas()
  nameWithType: InkCanvas.InkCanvas()
  fullName: System.Windows.Controls.InkCanvas.InkCanvas()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "InkCanvas 클래스의 새 인스턴스를 초기화합니다."
  syntax:
    content: public InkCanvas ();
    parameters: []
  overload: System.Windows.Controls.InkCanvas.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.ActiveEditingMode
  id: ActiveEditingMode
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: ActiveEditingMode
  nameWithType: InkCanvas.ActiveEditingMode
  fullName: System.Windows.Controls.InkCanvas.ActiveEditingMode
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "현재 편집 모드를 가져옵니다는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  remarks: "현재 <xref:System.Windows.Controls.InkCanvasEditingMode> <xref:System.Windows.Controls.InkCanvas>.</xref:System.Windows.Controls.InkCanvas> </xref:System.Windows.Controls.InkCanvasEditingMode> ActiveEditingMode 속성 표시  되었다고 가정 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> <xref:System.Windows.Controls.InkCanvasEditingMode>하 고 <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A>를 <xref:System.Windows.Controls.InkCanvasEditingMode>.</xref:System.Windows.Controls.InkCanvasEditingMode> </xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> </xref:System.Windows.Controls.InkCanvasEditingMode> 로 설정 되어</xref:System.Windows.Controls.InkCanvas.EditingMode%2A>  ActiveEditingMode <xref:System.Windows.Controls.InkCanvasEditingMode>.</xref:System.Windows.Controls.InkCanvasEditingMode> 값이 태블릿 펜 뒤집어 사용 되는 경우 그렇지 않으면 해당 값은 <xref:System.Windows.Controls.InkCanvasEditingMode>.</xref:System.Windows.Controls.InkCanvasEditingMode>      <a name=&quot;dependencyPropertyInfo_ActiveEditingMode&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.InkCanvas.ActiveEditingModeProperty>|   | 메타 데이터 속성이 `true`| None |</xref:System.Windows.Controls.InkCanvas.ActiveEditingModeProperty>"
  example:
  - "The following example reports the value of ActiveEditingMode whenever it changes.  \n  \n [!code-cs[InkCanvasSamples#36](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#36)]\n [!code-vb[InkCanvasSamples#36](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#36)]"
  syntax:
    content: public System.Windows.Controls.InkCanvasEditingMode ActiveEditingMode { get; }
    return:
      type: System.Windows.Controls.InkCanvasEditingMode
      description: "현재 편집 모드는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  overload: System.Windows.Controls.InkCanvas.ActiveEditingMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.ActiveEditingModeChanged
  id: ActiveEditingModeChanged
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: ActiveEditingModeChanged
  nameWithType: InkCanvas.ActiveEditingModeChanged
  fullName: System.Windows.Controls.InkCanvas.ActiveEditingModeChanged
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "현재 편집 모드가 변경 될 때 발생 합니다."
  remarks: "<xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A>속성이 변경 될 때마다는 <xref:System.Windows.Controls.InkCanvas>새 편집 모드로 전환 합니다.</xref:System.Windows.Controls.InkCanvas> </xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> 예를 들어 되었다고 가정 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> <xref:System.Windows.Controls.InkCanvasEditingMode>하 고 <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A>를 <xref:System.Windows.Controls.InkCanvasEditingMode>.</xref:System.Windows.Controls.InkCanvasEditingMode> </xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> </xref:System.Windows.Controls.InkCanvasEditingMode> 로 설정 되어</xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 태블릿 펜의 팁을 변경할 때 ActiveEditingModeChanged 이벤트 발생 합니다.      <a name=&quot;routedEventInfo_ActiveEditingModeChanged&quot;></a># # 이벤트 정보 라우트된 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent>|   | 라우팅 전략 | 버블링 |   | 대리자 | <xref:System.Windows.RoutedEventHandler>|</xref:System.Windows.RoutedEventHandler></xref:System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent>"
  example:
  - "The following example reports the value of <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> whenever it changes.  \n  \n [!code-cs[InkCanvasSamples#36](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#36)]\n [!code-vb[InkCanvasSamples#36](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#36)]"
  syntax:
    content: public event System.Windows.RoutedEventHandler ActiveEditingModeChanged;
    return:
      type: System.Windows.RoutedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent
  id: ActiveEditingModeChangedEvent
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: ActiveEditingModeChangedEvent
  nameWithType: InkCanvas.ActiveEditingModeChangedEvent
  fullName: System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref href=&quot;System.Windows.Controls.InkCanvas.ActiveEditingModeChanged&quot;> </xref> 라우트된 이벤트입니다."
  syntax:
    content: public static readonly System.Windows.RoutedEvent ActiveEditingModeChangedEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.ActiveEditingModeProperty
  id: ActiveEditingModeProperty
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: ActiveEditingModeProperty
  nameWithType: InkCanvas.ActiveEditingModeProperty
  fullName: System.Windows.Controls.InkCanvas.ActiveEditingModeProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode*>종속성 속성입니다.</xref:System.Windows.Controls.InkCanvas.ActiveEditingMode*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ActiveEditingModeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.ArrangeOverride(System.Windows.Size)
  id: ArrangeOverride(System.Windows.Size)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: ArrangeOverride(Size)
  nameWithType: InkCanvas.ArrangeOverride(Size)
  fullName: System.Windows.Controls.InkCanvas.ArrangeOverride(Size)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "자식 요소를 배치 하 고 크기를 결정은 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref> 개체입니다."
  syntax:
    content: protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeSize);
    parameters:
    - id: arrangeSize
      type: System.Windows.Size
      description: "이 요소는 자신과 자식을 정렬 하는 데 사용 해야 하는 부모 내의 마지막 영역입니다."
    return:
      type: System.Windows.Size
      description: "사용 되는 실제 크기입니다."
  overload: System.Windows.Controls.InkCanvas.ArrangeOverride*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.Background
  id: Background
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: Background
  nameWithType: InkCanvas.Background
  fullName: System.Windows.Controls.InkCanvas.Background
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "가져오거나는 <xref href=&quot;System.Windows.Media.Brush&quot;> </xref>합니다. 브러시 주위의 테두리 영역을 채우는 데 사용 되는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  remarks: "<a name=&quot;dependencyPropertyInfo_Background&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.InkCanvas.BackgroundProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A>|</xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A> </xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> </xref:System.Windows.Controls.InkCanvas.BackgroundProperty>"
  example:
  - "The following example demonstrates how to set the Background property on an <xref:System.Windows.Controls.InkCanvas>.  \n  \n [!code-cs[InkCanvasSamples#37](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#37)]\n [!code-vb[InkCanvasSamples#37](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#37)]"
  syntax:
    content: public System.Windows.Media.Brush Background { get; set; }
    return:
      type: System.Windows.Media.Brush
      description: "A <xref href=&quot;System.Windows.Media.Brush&quot;> </xref> 주위의 테두리 영역을 채우는 데 사용 되는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  overload: System.Windows.Controls.InkCanvas.Background*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.BackgroundProperty
  id: BackgroundProperty
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: BackgroundProperty
  nameWithType: InkCanvas.BackgroundProperty
  fullName: System.Windows.Controls.InkCanvas.BackgroundProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref:System.Windows.Controls.InkCanvas.Background*>종속성 속성입니다.</xref:System.Windows.Controls.InkCanvas.Background*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty BackgroundProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.BottomProperty
  id: BottomProperty
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: BottomProperty
  nameWithType: InkCanvas.BottomProperty
  fullName: System.Windows.Controls.InkCanvas.BottomProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 &lt;xref:System.Windows.Controls.InkCanvas.Bottom%2A?displayProperty=fullName&gt; 연결 된 속성입니다."
  syntax:
    content: public static readonly System.Windows.DependencyProperty BottomProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.CanPaste
  id: CanPaste
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: CanPaste()
  nameWithType: InkCanvas.CanPaste()
  fullName: System.Windows.Controls.InkCanvas.CanPaste()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "클립보드의 내용을에 붙여 넣을 수 있는지 여부를 나타내는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  remarks: "<xref:System.Windows.Controls.InkCanvas>클립보드 데이터를 지원할 수 [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] 형식으로 [!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)], 및 텍스트 형식입니다.</xref:System.Windows.Controls.InkCanvas>"
  example:
  - "The following example copies an element to the Clipboard and pastes it to the <xref:System.Windows.Controls.InkCanvas>. This example assumes that there is an element called `rect1`, and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> events have been connected to the event handlers in the example.  \n  \n [!code-cs[InkCanvasSamples#1](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#1)]\n [!code-vb[InkCanvasSamples#1](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#1)]"
  syntax:
    content: public bool CanPaste ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>클립보드의 내용을 붙여 넣을 수; 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Controls.InkCanvas.CanPaste*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.Children
  id: Children
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: Children
  nameWithType: InkCanvas.Children
  fullName: System.Windows.Controls.InkCanvas.Children
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "자식 요소를 검색 된 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  remarks: "<a name=&quot;xamlPropertyElementUsage_Children&quot;></a># # XAML 속성 요소 사용 ```   <object>     OneOrMoreUIElements   </object>   ``` <a name=&quot;xamlValues_Children&quot;> </a> # # XAML 값 *OneOrMoreUIElements* 하나 이상의 <xref:System.Windows.UIElement>개체입니다.</xref:System.Windows.UIElement>      "
  example:
  - "The following example adds a <xref:System.Windows.Controls.TextBlock> to an <xref:System.Windows.Controls.InkCanvas>.  \n  \n [!code-cs[InkCanvasSamples#8](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#8)]\n [!code-vb[InkCanvasSamples#8](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#8)]"
  syntax:
    content: public System.Windows.Controls.UIElementCollection Children { get; }
    return:
      type: System.Windows.Controls.UIElementCollection
      description: "자식 요소의 컬렉션에 있는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  overload: System.Windows.Controls.InkCanvas.Children*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.CopySelection
  id: CopySelection
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: CopySelection()
  nameWithType: InkCanvas.CopySelection()
  fullName: System.Windows.Controls.InkCanvas.CopySelection()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "선택한 스트로크 및/또는 요소를 사용 하 여 클립보드에 복사 합니다."
  remarks: "<xref:System.Windows.Controls.InkCanvas>클립보드 데이터를 지원할 수 [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] 형식으로 [!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)], 및 텍스트 형식입니다.</xref:System.Windows.Controls.InkCanvas> 클립보드가 둘 다 [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] 형식으로 [!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)]합니다."
  example:
  - "The following example selects two elements on an <xref:System.Windows.Controls.InkCanvas> and copies them to the Clipboard. This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1 -` and thatboth controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.  \n  \n [!code-cs[InkCanvasSamples#3](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#3)]\n [!code-vb[InkCanvasSamples#3](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#3)]"
  syntax:
    content: public void CopySelection ();
    parameters: []
  overload: System.Windows.Controls.InkCanvas.CopySelection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.CutSelection
  id: CutSelection
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: CutSelection()
  nameWithType: InkCanvas.CutSelection()
  fullName: System.Windows.Controls.InkCanvas.CutSelection()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "선택한 스트로크 및 요소를 삭제 하 고 클립보드에 복사 합니다."
  remarks: "<xref:System.Windows.Controls.InkCanvas>클립보드 데이터를 지원할 수 [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] 형식으로 [!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)], 및 텍스트 형식입니다.</xref:System.Windows.Controls.InkCanvas> 클립보드가 둘 다 [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] 형식으로 [!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)]합니다."
  example:
  - "The following example selects and cuts two elements on an <xref:System.Windows.Controls.InkCanvas>. This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.  \n  \n [!code-cs[InkCanvasSamples#4](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#4)]\n [!code-vb[InkCanvasSamples#4](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#4)]"
  syntax:
    content: public void CutSelection ();
    parameters: []
  overload: System.Windows.Controls.InkCanvas.CutSelection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.DefaultDrawingAttributes
  id: DefaultDrawingAttributes
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: DefaultDrawingAttributes
  nameWithType: InkCanvas.DefaultDrawingAttributes
  fullName: System.Windows.Controls.InkCanvas.DefaultDrawingAttributes
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "만든 새 잉크 스트로크에 적용 되는 그리기 특성을 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  remarks: "이 속성을 설정 하면 새로 스트로크가이 속성을 설정 후에 영향을 줍니다. 이미 만든 새 그리기 특성을 적용 하려면 <xref:System.Windows.Ink.Stroke>개별적으로 사용 하 여 개체, 액세스는 <xref:System.Windows.Controls.InkCanvas.Strokes%2A>속성.</xref:System.Windows.Controls.InkCanvas.Strokes%2A> </xref:System.Windows.Ink.Stroke>      <a name=&quot;dependencyPropertyInfo_DefaultDrawingAttributes&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty>|   | 메타 데이터 속성이 `true`| None |</xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty>"
  example:
  - "The following example demonstrates how to use two <xref:System.Windows.Ink.DrawingAttributes> objects to simulate the experience of using a pen and a highlighter on the same <xref:System.Windows.Controls.InkCanvas>. The example assumes that the root element in the markup language (XAML) file is a <xref:System.Windows.Controls.DockPanel> called `root`. It also assumes that there is a <xref:System.Windows.Controls.Button> called `switchHilighter` and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event is connected to the event handler.  \n  \n [!code-cs[DrawingAttributes#3](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#3)]\n [!code-vb[DrawingAttributes#3](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#3)]  \n  \n The following example demonstrates how to bind the DefaultDrawingAttributes property to a data source.  \n  \n [!code-xml[InkCanvasBinding#3](~/add/codesnippet/xaml/p-system.windows.control_51_2.xaml)]\n [!code-xml[InkCanvasBinding#3](~/add/codesnippet/xaml/p-system.windows.control_51_2.xaml)]  \n[!code-xml[InkCanvasBinding#4](~/add/codesnippet/xaml/p-system.windows.control_51_3.xaml)]\n[!code-xml[InkCanvasBinding#4](~/add/codesnippet/xaml/p-system.windows.control_51_3.xaml)]"
  syntax:
    content: public System.Windows.Ink.DrawingAttributes DefaultDrawingAttributes { get; set; }
    return:
      type: System.Windows.Ink.DrawingAttributes
      description: "기본 특성에 대 한 그리기는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  overload: System.Windows.Controls.InkCanvas.DefaultDrawingAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty
  id: DefaultDrawingAttributesProperty
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: DefaultDrawingAttributesProperty
  nameWithType: InkCanvas.DefaultDrawingAttributesProperty
  fullName: System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes*>종속성 속성입니다.</xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty DefaultDrawingAttributesProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced
  id: DefaultDrawingAttributesReplaced
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: DefaultDrawingAttributesReplaced
  nameWithType: InkCanvas.DefaultDrawingAttributesReplaced
  fullName: System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "발생 경우는 <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes*>속성 바뀝니다.</xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes*>"
  remarks: ''
  example:
  - "The following example checks the value of the <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A> property of the new <xref:System.Windows.Ink.DrawingAttributes> object.  \n  \n [!code-cs[DrawingAttributes#17](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#17)]\n [!code-vb[DrawingAttributes#17](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#17)]"
  syntax:
    content: public event System.Windows.Ink.DrawingAttributesReplacedEventHandler DefaultDrawingAttributesReplaced;
    return:
      type: System.Windows.Ink.DrawingAttributesReplacedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.DefaultStylusPointDescription
  id: DefaultStylusPointDescription
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: DefaultStylusPointDescription
  nameWithType: InkCanvas.DefaultStylusPointDescription
  fullName: System.Windows.Controls.InkCanvas.DefaultStylusPointDescription
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "에 대 한 스타일러스 포인트를 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  remarks: "기본적으로는 <xref:System.Windows.Controls.InkCanvas>만 저장 된 <xref:System.Windows.Input.StylusPointProperties.X>, <xref:System.Windows.Input.StylusPointProperties.Y>, 및 <xref:System.Windows.Input.StylusPointProperties.NormalPressure>각각에 대 한 속성 <xref:System.Windows.Input.StylusPoint>스트로크에 속하는.</xref:System.Windows.Input.StylusPoint> </xref:System.Windows.Input.StylusPointProperties.NormalPressure> </xref:System.Windows.Input.StylusPointProperties.Y> </xref:System.Windows.Input.StylusPointProperties.X> </xref:System.Windows.Controls.InkCanvas> <xref:System.Windows.Controls.InkCanvas>.</xref:System.Windows.Controls.InkCanvas> 스트로크를 구성 하는 지점에 대 한 추가 정보를 저장할 DefaultStylusPointDescription 속성을 사용할 수 있습니다. 이 속성을 설정 하면 새로 스트로크 속성이 설정 된 후에 영향을 줍니다.      <a name=&quot;xamlTextUsage_DefaultStylusPointDescription&quot;></a># #에서이 속성을 사용할 수 없습니다 XAML 텍스트 사용 하면 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]합니다."
  example:
  - "The following example sets the DefaultStylusPointDescription so that the stylus points of the strokes on the <xref:System.Windows.Controls.InkCanvas> contain the <xref:System.Windows.Input.StylusPointProperties.X>, <xref:System.Windows.Input.StylusPointProperties.Y>, <xref:System.Windows.Input.StylusPointProperties.NormalPressure>, and <xref:System.Windows.Input.StylusPointProperties.TipButton> properties.  \n  \n> [!NOTE]\n>  Only the strokes that are added to the <xref:System.Windows.Controls.InkCanvas> after the DefaultStylusPointDescription is set to contain the additional property.  \n  \n [!code-cs[InkCanvasSamples#9](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#9)]\n [!code-vb[InkCanvasSamples#9](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#9)]"
  syntax:
    content: public System.Windows.Input.StylusPointDescription DefaultStylusPointDescription { get; set; }
    return:
      type: System.Windows.Input.StylusPointDescription
      description: "에 대 한 스타일러스 포인트는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  overload: System.Windows.Controls.InkCanvas.DefaultStylusPointDescription*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.DynamicRenderer
  id: DynamicRenderer
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: DynamicRenderer
  nameWithType: InkCanvas.DynamicRenderer
  fullName: System.Windows.Controls.InkCanvas.DynamicRenderer
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "렌더러는 동적으로 그립니다 잉크에 가져오거나는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  remarks: "사용자 지정 DynamicRenderer 속성을 설정할 수 있습니다 <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>잉크를 사용자 지정 하려는 경우.</xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>      > [!NOTE] > The DynamicRenderer 멤버인는 <xref:System.Windows.UIElement.StylusPlugIns%2A>컬렉션.</xref:System.Windows.UIElement.StylusPlugIns%2A> DynamicRenderer를 설정 하는 경우는 <xref:System.Windows.Controls.InkCanvas>이전 제거 <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>에서 <xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection>새 추가 <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>컬렉션의 끝에.</xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> </xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection> </xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> </xref:System.Windows.Controls.InkCanvas> 이 <xref:System.Windows.Controls.InkCanvas>.</xref:System.Windows.Controls.InkCanvas> 의 동작이 변경 될 수 있습니다."
  syntax:
    content: protected System.Windows.Input.StylusPlugIns.DynamicRenderer DynamicRenderer { get; set; }
    return:
      type: System.Windows.Input.StylusPlugIns.DynamicRenderer
      description: "렌더러는 동적으로 잉크를 그리는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  overload: System.Windows.Controls.InkCanvas.DynamicRenderer*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.EditingMode
  id: EditingMode
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: EditingMode
  nameWithType: InkCanvas.EditingMode
  fullName: System.Windows.Controls.InkCanvas.EditingMode
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "편집 모드 활성 포인팅 장치에서 사용 하는 사용자를 가져오거나 설정 합니다."
  remarks: "EditingMode 기본값은 <xref:System.Windows.Controls.InkCanvasEditingMode>.</xref:System.Windows.Controls.InkCanvasEditingMode> 변경의 EditingMode 기존 선택 내용을 지웁니다.       EditingMode <xref:System.Windows.Controls.InkCanvas>.</xref:System.Windows.Controls.InkCanvas> 상호 작용 하는 포인팅 장치가 모드를 지정 합니다. <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A>&quot;지우개 끝날&quot; 스타일러스가 디지타이저를 연결한 경우에 일부 디지타이저에서 사용 됩니다.</xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A>      <a name=&quot;dependencyPropertyInfo_EditingMode&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.InkCanvas.EditingModeProperty>|   | 메타 데이터 속성이 `true`| None |</xref:System.Windows.Controls.InkCanvas.EditingModeProperty>"
  example:
  - "The following example creates an application that uses the various types of editing modes on an <xref:System.Windows.Controls.InkCanvas>.  \n  \n [!code-vb[ICEditingModeSample#1](~/add/codesnippet/visualbasic/InkCanvasEditingModeSample/Window1.xaml.vb#1)]\n [!code-cs[ICEditingModeSample#1](~/add/codesnippet/csharp/InkCanvasEditingModeSample/Window1.xaml.cs#1)]"
  syntax:
    content: public System.Windows.Controls.InkCanvasEditingMode EditingMode { get; set; }
    return:
      type: System.Windows.Controls.InkCanvasEditingMode
      description: "포인팅 장치 (예: 태블릿 펜 또는 마우스) 할 때 사용 되는 편집 모드가 활성화 됩니다."
  overload: System.Windows.Controls.InkCanvas.EditingMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.EditingModeChanged
  id: EditingModeChanged
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: EditingModeChanged
  nameWithType: InkCanvas.EditingModeChanged
  fullName: System.Windows.Controls.InkCanvas.EditingModeChanged
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "발생 경우는 <xref:System.Windows.Controls.InkCanvas.EditingMode*>속성은 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref> 개체가 변경 되었습니다.</xref:System.Windows.Controls.InkCanvas.EditingMode*>"
  remarks: "편집 모드가 변경 된 후에이 이벤트 발생 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> <xref:System.Windows.Controls.InkCanvas>.</xref:System.Windows.Controls.InkCanvas> 속성</xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 에 변경 내용이 반영      <a name=&quot;routedEventInfo_EditingModeChanged&quot;></a># # 이벤트 정보 라우트된 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.InkCanvas.EditingModeChangedEvent>|   | 라우팅 전략 | 버블링 |   | 대리자 | <xref:System.Windows.RoutedEventHandler>|</xref:System.Windows.RoutedEventHandler></xref:System.Windows.Controls.InkCanvas.EditingModeChangedEvent>"
  example:
  - "The following example checks whether the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode> or <xref:System.Windows.Controls.InkCanvasEditingMode>.  \n  \n [!code-cs[InkCanvasSamples#21](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#21)]\n [!code-vb[InkCanvasSamples#21](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#21)]"
  syntax:
    content: public event System.Windows.RoutedEventHandler EditingModeChanged;
    return:
      type: System.Windows.RoutedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.EditingModeChangedEvent
  id: EditingModeChangedEvent
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: EditingModeChangedEvent
  nameWithType: InkCanvas.EditingModeChangedEvent
  fullName: System.Windows.Controls.InkCanvas.EditingModeChangedEvent
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref href=&quot;System.Windows.Controls.InkCanvas.EditingModeChanged&quot;> </xref> 라우트된 이벤트입니다."
  syntax:
    content: public static readonly System.Windows.RoutedEvent EditingModeChangedEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.EditingModeInverted
  id: EditingModeInverted
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: EditingModeInverted
  nameWithType: InkCanvas.EditingModeInverted
  fullName: System.Windows.Controls.InkCanvas.EditingModeInverted
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "사용자와 상호 작용할 때 스타일러스가 반전 하는 경우 편집 모드를 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  remarks: "이 속성 스타일러스가 반전 때 수행 하는 동작을 제어 합니다.       <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>속성 스타일러스가 디지타이저에 대 한 표준, 끝 위치에 있는 때 수행 하는 동작을 제어 하는 마찬가지로, <a name=&quot;dependencyPropertyInfo_EditingModeInverted&quot;> </a> # # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.InkCanvas.EditingModeInvertedProperty>|   | 메타 데이터 속성이 `true`| None |</xref:System.Windows.Controls.InkCanvas.EditingModeInvertedProperty> </xref:System.Windows.Controls.InkCanvas.EditingMode%2A>"
  example:
  - "The following example demonstrates how to allow a user to partially erase strokes with the inverted tip of a stylus. An elliptical cursor appears on the <xref:System.Windows.Controls.InkCanvas> when the user erases ink.  \n  \n [!code-cs[InkCanvasSamples#6](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#6)]\n [!code-vb[InkCanvasSamples#6](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#6)]"
  syntax:
    content: public System.Windows.Controls.InkCanvasEditingMode EditingModeInverted { get; set; }
    return:
      type: System.Windows.Controls.InkCanvasEditingMode
      description: "반전 된 편집 모드는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  overload: System.Windows.Controls.InkCanvas.EditingModeInverted*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.EditingModeInvertedChanged
  id: EditingModeInvertedChanged
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: EditingModeInvertedChanged
  nameWithType: InkCanvas.EditingModeInvertedChanged
  fullName: System.Windows.Controls.InkCanvas.EditingModeInvertedChanged
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "발생 경우는 <xref:System.Windows.Controls.InkCanvas.EditingModeInverted*>속성은 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref> 개체가 변경 되었습니다.</xref:System.Windows.Controls.InkCanvas.EditingModeInverted*>"
  remarks: "이 이벤트는 반전된 편집 모드가 변경 된 후 발생 합니다. 이러한 변경 내용은 <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> <xref:System.Windows.Controls.InkCanvas>.</xref:System.Windows.Controls.InkCanvas> 속성</xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> 에 반영 됩니다.      <a name=&quot;routedEventInfo_EditingModeInvertedChanged&quot;></a># # 이벤트 정보 라우트된 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent>|   | 라우팅 전략 | 버블링 |   | 대리자 | <xref:System.Windows.RoutedEventHandler>|</xref:System.Windows.RoutedEventHandler></xref:System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent>"
  example:
  - "The following example checks whether the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode> or <xref:System.Windows.Controls.InkCanvasEditingMode>.  \n  \n [!code-cs[InkCanvasSamples#20](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#20)]\n [!code-vb[InkCanvasSamples#20](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#20)]"
  syntax:
    content: public event System.Windows.RoutedEventHandler EditingModeInvertedChanged;
    return:
      type: System.Windows.RoutedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent
  id: EditingModeInvertedChangedEvent
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: EditingModeInvertedChangedEvent
  nameWithType: InkCanvas.EditingModeInvertedChangedEvent
  fullName: System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref href=&quot;System.Windows.Controls.InkCanvas.EditingModeInvertedChanged&quot;> </xref> 라우트된 이벤트입니다."
  syntax:
    content: public static readonly System.Windows.RoutedEvent EditingModeInvertedChangedEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.EditingModeInvertedProperty
  id: EditingModeInvertedProperty
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: EditingModeInvertedProperty
  nameWithType: InkCanvas.EditingModeInvertedProperty
  fullName: System.Windows.Controls.InkCanvas.EditingModeInvertedProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref:System.Windows.Controls.InkCanvas.EditingModeInverted*>종속성 속성입니다.</xref:System.Windows.Controls.InkCanvas.EditingModeInverted*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty EditingModeInvertedProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.EditingModeProperty
  id: EditingModeProperty
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: EditingModeProperty
  nameWithType: InkCanvas.EditingModeProperty
  fullName: System.Windows.Controls.InkCanvas.EditingModeProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref:System.Windows.Controls.InkCanvas.EditingMode*>종속성 속성입니다.</xref:System.Windows.Controls.InkCanvas.EditingMode*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty EditingModeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.EraserShape
  id: EraserShape
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: EraserShape
  nameWithType: InkCanvas.EraserShape
  fullName: System.Windows.Controls.InkCanvas.EraserShape
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "가져오거나는 <xref href=&quot;System.Windows.Ink.StylusShape&quot;> </xref> 를 지우는 잉크에서 사용 되는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  remarks: "이 셰이프가에서 잉크를 지우는 데 사용 되는 <xref:System.Windows.Controls.InkCanvas>때 현재 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>를 <xref:System.Windows.Controls.InkCanvasEditingMode>.</xref:System.Windows.Controls.InkCanvasEditingMode> </xref:System.Windows.Controls.InkCanvas.EditingMode%2A> </xref:System.Windows.Controls.InkCanvas>       개별 속성을 <xref:System.Windows.Ink.StylusShape>셰이프를 만든 후에 수정할 수 없습니다.</xref:System.Windows.Ink.StylusShape>       EraserShape를 변경한 경우 커서에 렌더링 된 <xref:System.Windows.Controls.InkCanvas>다음 될 때까지 업데이트 되지 않습니다 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>변경.</xref:System.Windows.Controls.InkCanvas.EditingMode%2A> </xref:System.Windows.Controls.InkCanvas>      <a name=&quot;xamlTextUsage_EraserShape&quot;></a># #이 속성에 사용 되는 것은 일반적으로 XAML 텍스트 사용 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]합니다."
  example:
  - "The following example demonstrates how to allow a user to partially erase strokes with the inverted tip of a stylus. An elliptical cursor appears on the <xref:System.Windows.Controls.InkCanvas> when the user erases ink.  \n  \n [!code-cs[InkCanvasSamples#6](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#6)]\n [!code-vb[InkCanvasSamples#6](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#6)]"
  syntax:
    content: public System.Windows.Ink.StylusShape EraserShape { get; set; }
    return:
      type: System.Windows.Ink.StylusShape
      description: "와 연결 된 지우개 셰이프는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  overload: System.Windows.Controls.InkCanvas.EraserShape*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.Gesture
  id: Gesture
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: Gesture
  nameWithType: InkCanvas.Gesture
  fullName: System.Windows.Controls.InkCanvas.Gesture
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "발생 경우는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref> 가 제스처를 발견 합니다."
  remarks: "<a name=&quot;routedEventInfo_Gesture&quot;></a># # 이벤트 정보 라우트된 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.InkCanvas.GestureEvent>|   | 라우팅 전략 | 버블링 |   | 대리자 | <xref:System.Windows.Controls.InkCanvasGestureEventHandler>|</xref:System.Windows.Controls.InkCanvasGestureEventHandler></xref:System.Windows.Controls.InkCanvas.GestureEvent>"
  example:
  - "The following example demonstrates how to set up an <xref:System.Windows.Controls.InkCanvas> to recognize application gestures.  \n  \n [!code-cs[GestureSample#3](~/add/codesnippet/csharp/GestureSample/Window1.xaml.cs#3)]\n [!code-vb[GestureSample#3](~/add/codesnippet/visualbasic/GestureSample/Window1.xaml.vb#3)]  \n[!code-cs[GestureSample#1](~/add/codesnippet/csharp/GestureSample/Window1.xaml.cs#1)]\n[!code-vb[GestureSample#1](~/add/codesnippet/visualbasic/GestureSample/Window1.xaml.vb#1)]"
  syntax:
    content: public event System.Windows.Controls.InkCanvasGestureEventHandler Gesture;
    return:
      type: System.Windows.Controls.InkCanvasGestureEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.GestureEvent
  id: GestureEvent
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: GestureEvent
  nameWithType: InkCanvas.GestureEvent
  fullName: System.Windows.Controls.InkCanvas.GestureEvent
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref href=&quot;System.Windows.Controls.InkCanvas.Gesture&quot;> </xref> 라우트된 이벤트입니다."
  syntax:
    content: public static readonly System.Windows.RoutedEvent GestureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.GetBottom(System.Windows.UIElement)
  id: GetBottom(System.Windows.UIElement)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: GetBottom(UIElement)
  nameWithType: InkCanvas.GetBottom(UIElement)
  fullName: System.Windows.Controls.InkCanvas.GetBottom(UIElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "값을 가져옵니다는 &lt;xref:System.Windows.Controls.InkCanvas.Bottom%2A?displayProperty=fullName&gt; 연결 된 지정된 된 종속성 개체에 대 한 속성입니다."
  remarks: ''
  example:
  - "The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.  \n  \n [!code-cs[InkCanvasSamples#34](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#34)]\n [!code-vb[InkCanvasSamples#34](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#34)]"
  syntax:
    content: public static double GetBottom (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "맨 아래 속성을 얻을 수 있는 요소입니다."
    return:
      type: System.Double
      description: "종속성 개체의 아래쪽 좌표입니다."
  overload: System.Windows.Controls.InkCanvas.GetBottom*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.GetEnabledGestures
  id: GetEnabledGestures
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: GetEnabledGestures()
  nameWithType: InkCanvas.GetEnabledGestures()
  fullName: System.Windows.Controls.InkCanvas.GetEnabledGestures()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "가 인식 하는 제스처를 응용 프로그램의 컬렉션을 반환 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following example demonstrates how to get the enabled application gestures from the <xref:System.Windows.Controls.InkCanvas>.  \n  \n [!code-cs[InkCanvasSamples#24](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#24)]\n [!code-vb[InkCanvasSamples#24](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#24)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Ink.ApplicationGesture> GetEnabledGestures ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Ink.ApplicationGesture}
      description: "컬렉션 제스처는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref> 인식 합니다."
  overload: System.Windows.Controls.InkCanvas.GetEnabledGestures*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable*>속성은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable*>"
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.GetLeft(System.Windows.UIElement)
  id: GetLeft(System.Windows.UIElement)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: GetLeft(UIElement)
  nameWithType: InkCanvas.GetLeft(UIElement)
  fullName: System.Windows.Controls.InkCanvas.GetLeft(UIElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "값을 가져옵니다는 &lt;xref:System.Windows.Controls.InkCanvas.Left%2A?displayProperty=fullName&gt; 연결 된 지정된 된 종속성 개체에 대 한 속성입니다."
  remarks: ''
  example:
  - "The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.  \n  \n [!code-cs[InkCanvasSamples#31](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#31)]\n [!code-vb[InkCanvasSamples#31](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#31)]"
  syntax:
    content: public static double GetLeft (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "요소를 가져올 left 속성입니다."
    return:
      type: System.Double
      description: "종속성 개체에 왼쪽된 좌표입니다."
  overload: System.Windows.Controls.InkCanvas.GetLeft*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.GetRight(System.Windows.UIElement)
  id: GetRight(System.Windows.UIElement)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: GetRight(UIElement)
  nameWithType: InkCanvas.GetRight(UIElement)
  fullName: System.Windows.Controls.InkCanvas.GetRight(UIElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "값을 가져옵니다는 &lt;xref:System.Windows.Controls.InkCanvas.Right%2A?displayProperty=fullName&gt; 연결 된 지정된 된 종속성 개체에 대 한 속성입니다."
  remarks: ''
  example:
  - "The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.  \n  \n [!code-cs[InkCanvasSamples#32](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#32)]\n [!code-vb[InkCanvasSamples#32](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#32)]"
  syntax:
    content: public static double GetRight (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "요소를 가져올 right 속성입니다."
    return:
      type: System.Double
      description: "종속성 개체에 오른쪽 좌표입니다."
  overload: System.Windows.Controls.InkCanvas.GetRight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.GetSelectedElements
  id: GetSelectedElements
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: GetSelectedElements()
  nameWithType: InkCanvas.GetSelectedElements()
  fullName: System.Windows.Controls.InkCanvas.GetSelectedElements()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "검색 된 <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> 에서 선택 된 개체는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  remarks: "이 메서드는만 반환 <xref:System.Windows.FrameworkElement>개체가 아닌 <xref:System.Windows.Ink.Stroke>개체.</xref:System.Windows.Ink.Stroke> </xref:System.Windows.FrameworkElement>       검색 하려면 선택 <xref:System.Windows.Ink.Stroke>개체를 호출 하는 <xref:System.Windows.Controls.InkCanvas.GetSelectedStrokes%2A>메서드.</xref:System.Windows.Controls.InkCanvas.GetSelectedStrokes%2A> </xref:System.Windows.Ink.Stroke>       경우는 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>의 <xref:System.Windows.Controls.InkCanvas>로 설정 된 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, 사용자가 선택할 수 <xref:System.Windows.Ink.Stroke>개체 및 <xref:System.Windows.FrameworkElement>개체.</xref:System.Windows.FrameworkElement> </xref:System.Windows.Ink.Stroke> </xref:System.Windows.Controls.InkCanvas.EditingMode%2A> </xref:System.Windows.Controls.InkCanvas> </xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 코드를 사용 하 여 두 가지 유형의 개체 수 선택 또는: 호출 된 <xref:System.Windows.Controls.InkCanvas.Select%2A>메서드.</xref:System.Windows.Controls.InkCanvas.Select%2A>"
  example:
  - "The following example doubles the height and width of each selected element on an <xref:System.Windows.Controls.InkCanvas>.  \n  \n [!code-cs[InkCanvasSamples#12](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#12)]\n [!code-vb[InkCanvasSamples#12](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#12)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.UIElement> GetSelectedElements ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.UIElement}
      description: "배열 <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> 개체입니다."
  overload: System.Windows.Controls.InkCanvas.GetSelectedElements*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.GetSelectedStrokes
  id: GetSelectedStrokes
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: GetSelectedStrokes()
  nameWithType: InkCanvas.GetSelectedStrokes()
  fullName: System.Windows.Controls.InkCanvas.GetSelectedStrokes()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "검색 한 <xref href=&quot;System.Windows.Ink.StrokeCollection&quot;> </xref> 선택한 나타내는 <xref href=&quot;System.Windows.Ink.Stroke&quot;> </xref> 에 있는 개체는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  remarks: "이 메서드가 반환 <xref:System.Windows.Ink.Stroke>개체만.</xref:System.Windows.Ink.Stroke> 검색 하려면 선택 <xref:System.Windows.FrameworkElement>개체를 호출 하는 <xref:System.Windows.Controls.InkCanvas.GetSelectedElements%2A>메서드.</xref:System.Windows.Controls.InkCanvas.GetSelectedElements%2A> </xref:System.Windows.FrameworkElement>       경우는 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>의 <xref:System.Windows.Controls.InkCanvas>로 설정 된 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, 사용자가 선택할 수 <xref:System.Windows.Ink.Stroke>개체 및 <xref:System.Windows.FrameworkElement>개체.</xref:System.Windows.FrameworkElement> </xref:System.Windows.Ink.Stroke> </xref:System.Windows.Controls.InkCanvas.EditingMode%2A> </xref:System.Windows.Controls.InkCanvas> </xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 코드를 사용 하 여 두 가지 유형의 개체 수 선택 또는: 호출 된 <xref:System.Windows.Controls.InkCanvas.Select%2A>메서드.</xref:System.Windows.Controls.InkCanvas.Select%2A>"
  example:
  - "The following example changes the color of each selected stroke on an <xref:System.Windows.Controls.InkCanvas>.  \n  \n [!code-cs[InkCanvasSamples#11](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#11)]\n [!code-vb[InkCanvasSamples#11](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#11)]"
  syntax:
    content: public System.Windows.Ink.StrokeCollection GetSelectedStrokes ();
    parameters: []
    return:
      type: System.Windows.Ink.StrokeCollection
      description: "선택한 스트로크의 컬렉션입니다."
  overload: System.Windows.Controls.InkCanvas.GetSelectedStrokes*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.GetSelectionBounds
  id: GetSelectionBounds
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: GetSelectionBounds()
  nameWithType: InkCanvas.GetSelectionBounds()
  fullName: System.Windows.Controls.InkCanvas.GetSelectionBounds()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "선택한 스트로크 및 요소의 범위를 가져옵니다는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following example prevents the user from making a selection smaller than its original size.  \n  \n [!code-cs[InkCanvasSamples#16](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#16)]\n [!code-vb[InkCanvasSamples#16](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#16)]"
  syntax:
    content: public System.Windows.Rect GetSelectionBounds ();
    parameters: []
    return:
      type: System.Windows.Rect
      description: "선택한 모든 스트로크 및 요소를 포함 하는 가장 작은 사각형입니다."
  overload: System.Windows.Controls.InkCanvas.GetSelectionBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.GetTop(System.Windows.UIElement)
  id: GetTop(System.Windows.UIElement)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: GetTop(UIElement)
  nameWithType: InkCanvas.GetTop(UIElement)
  fullName: System.Windows.Controls.InkCanvas.GetTop(UIElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "값을 가져옵니다는 &lt;xref:System.Windows.Controls.InkCanvas.Top%2A?displayProperty=fullName&gt; 연결 된 지정된 된 종속성 개체에 대 한 속성입니다."
  remarks: ''
  example:
  - "The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.  \n  \n [!code-cs[InkCanvasSamples#33](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#33)]\n [!code-vb[InkCanvasSamples#33](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#33)]"
  syntax:
    content: public static double GetTop (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "요소를 가져올 top 속성입니다."
    return:
      type: System.Double
      description: "종속성 개체의 위쪽 좌표입니다."
  overload: System.Windows.Controls.InkCanvas.GetTop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.GetVisualChild(System.Int32)
  id: GetVisualChild(System.Int32)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: GetVisualChild(Int32)
  nameWithType: InkCanvas.GetVisualChild(Int32)
  fullName: System.Windows.Controls.InkCanvas.GetVisualChild(Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "재정의 <xref:System.Windows.Media.Visual.GetVisualChild*>, 자식 요소 컬렉션에서 지정된 된 인덱스의 자식을 반환 합니다.</xref:System.Windows.Media.Visual.GetVisualChild*>"
  syntax:
    content: protected override System.Windows.Media.Visual GetVisualChild (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "컬렉션에서 요청 된 자식 요소의&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.Windows.Media.Visual
      description: "요청 된 자식 요소입니다. 이렇게 하면 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>부재 중 지정 된 인덱스는 범위, 예외가 throw 됩니다."
  overload: System.Windows.Controls.InkCanvas.GetVisualChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.HitTestCore(System.Windows.Media.PointHitTestParameters)
  id: HitTestCore(System.Windows.Media.PointHitTestParameters)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: HitTestCore(PointHitTestParameters)
  nameWithType: InkCanvas.HitTestCore(PointHitTestParameters)
  fullName: System.Windows.Controls.InkCanvas.HitTestCore(PointHitTestParameters)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "지정된 된 지점의 렌더링 범위에 속하는지 여부를 결정 한 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  syntax:
    content: protected override System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParams);
    parameters:
    - id: hitTestParams
      type: System.Windows.Media.PointHitTestParameters
      description: "지정 하는 개체는 <xref href=&quot;System.Windows.Point&quot;> </xref> 적중 테스트를 수행할 합니다."
    return:
      type: System.Windows.Media.HitTestResult
      description: "나타내는 개체는 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 적중 횟수 테스트에서 반환 되는 합니다."
  overload: System.Windows.Controls.InkCanvas.HitTestCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.HitTestSelection(System.Windows.Point)
  id: HitTestSelection(System.Windows.Point)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: HitTestSelection(Point)
  nameWithType: InkCanvas.HitTestSelection(Point)
  fullName: System.Windows.Controls.InkCanvas.HitTestSelection(Point)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "교차 하거나 지정된 된 점이 주위의 선택 표시기의 부분을 나타내는 값을 반환 합니다."
  remarks: "HitTestSelection 메서드를 사용 하 여 지점 스트로크 선택 항목의 범위 내 또는&8; 개 핸들 중 하나에 적용 되는지 확인 합니다.  끌어서 놓기 작업을 수행 하는 경우에 유용 합니다."
  example:
  - "The following example demonstrates how use HitTestSelection to determine whether to create a <xref:System.Windows.DataObject> to initiate drag and drop.  To implement drag and drop between two <xref:System.Windows.Controls.InkCanvas> objects, see [How to: Drag and Drop Ink](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[InkDragDrop#3](~/add/codesnippet/csharp/InkDragDrop/Window1.xaml.cs#3)]\n [!code-vb[InkDragDrop#3](~/add/codesnippet/visualbasic/InkDragDrop/Window1.xaml.vb#3)]"
  syntax:
    content: public System.Windows.Controls.InkCanvasSelectionHitResult HitTestSelection (System.Windows.Point point);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "적중 횟수 테스트에는 점입니다."
    return:
      type: System.Windows.Controls.InkCanvasSelectionHitResult
      description: "교차 하거나 지정된 된 지점 주위의 선택 표시기의 부분을 나타내는 값입니다."
  overload: System.Windows.Controls.InkCanvas.HitTestSelection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.InkPresenter
  id: InkPresenter
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: InkPresenter
  nameWithType: InkCanvas.InkPresenter
  fullName: System.Windows.Controls.InkCanvas.InkPresenter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "에 잉크를 표시 하는 잉크 프리젠터 가져옵니다는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  syntax:
    content: protected System.Windows.Controls.InkPresenter InkPresenter { get; }
    return:
      type: System.Windows.Controls.InkPresenter
      description: "잉크 발표자에 잉크를 표시 하는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  overload: System.Windows.Controls.InkCanvas.InkPresenter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable
  id: IsGestureRecognizerAvailable
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: IsGestureRecognizerAvailable
  nameWithType: InkCanvas.IsGestureRecognizerAvailable
  fullName: System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "가져옵니다 제스처 인식 구성 요소를 사용자의 시스템에 사용할 수 있는지 (확인)."
  remarks: ''
  example:
  - "The following example demonstrates how to configure an <xref:System.Windows.Controls.InkCanvas> to recognize application gestures.  \n  \n [!code-cs[GestureSample#3](~/add/codesnippet/csharp/GestureSample/Window1.xaml.cs#3)]\n [!code-vb[GestureSample#3](~/add/codesnippet/visualbasic/GestureSample/Window1.xaml.vb#3)]  \n[!code-cs[GestureSample#1](~/add/codesnippet/csharp/GestureSample/Window1.xaml.cs#1)]\n[!code-vb[GestureSample#1](~/add/codesnippet/visualbasic/GestureSample/Window1.xaml.vb#1)]"
  syntax:
    content: public bool IsGestureRecognizerAvailable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>인식 구성 요소를 사용할 수 없는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.LeftProperty
  id: LeftProperty
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: LeftProperty
  nameWithType: InkCanvas.LeftProperty
  fullName: System.Windows.Controls.InkCanvas.LeftProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 &lt;xref:System.Windows.Controls.InkCanvas.Left%2A?displayProperty=fullName&gt; 연결 된 속성입니다."
  syntax:
    content: public static readonly System.Windows.DependencyProperty LeftProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.LogicalChildren
  id: LogicalChildren
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: LogicalChildren
  nameWithType: InkCanvas.LogicalChildren
  fullName: System.Windows.Controls.InkCanvas.LogicalChildren
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "논리 자식으로 열거자를 반환합니다."
  syntax:
    content: protected override System.Collections.IEnumerator LogicalChildren { get; }
    return:
      type: System.Collections.IEnumerator
      description: "추가할 수 있습니다."
  overload: System.Windows.Controls.InkCanvas.LogicalChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.MeasureOverride(System.Windows.Size)
  id: MeasureOverride(System.Windows.Size)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: MeasureOverride(Size)
  nameWithType: InkCanvas.MeasureOverride(Size)
  fullName: System.Windows.Controls.InkCanvas.MeasureOverride(Size)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "자식 요소에 필요한 레이아웃의 크기를 측정 하 고 크기를 결정은 [System.Windows.Controls.InkCanvas](~/add/includes/ajax-current-ext-md.md) 개체입니다."
  syntax:
    content: protected override System.Windows.Size MeasureOverride (System.Windows.Size availableSize);
    parameters:
    - id: availableSize
      type: System.Windows.Size
      description: "이 요소가 자식 요소에 제공할 수 있는 사용 가능한 크기입니다. 요소가 크기는 모든 콘텐츠를 사용할 수 있는지를 나타내는 값으로 무한대를 지정할 수 있습니다."
    return:
      type: System.Windows.Size
      description: "이 요소 것을 결정 하는 크기 자식 요소 크기 계산에 따라 레이아웃 중에 필요 합니다."
  overload: System.Windows.Controls.InkCanvas.MeasureOverride*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.MoveEnabled
  id: MoveEnabled
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: MoveEnabled
  nameWithType: InkCanvas.MoveEnabled
  fullName: System.Windows.Controls.InkCanvas.MoveEnabled
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "선택한 잉크 스트로크 및/또는 요소를 이동 하려면 사용자를 설정할지 여부를 나타내는 부울 값을 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  remarks: "이 속성은로 설정 하는 경우 `true`를 선택할 때 잉크 스트로크 및/또는 요소 주위 표시기 테두리가 그려집니다. 이 테두리 선택한 개체를 이동할 수 있습니다. 경우 <xref:System.Windows.Controls.InkCanvas.ResizeEnabled%2A>은 `true`, 표시기를 스트로크 및/또는 요소 크기를 조정 하려면 사용 합니다.</xref:System.Windows.Controls.InkCanvas.ResizeEnabled%2A>       이 속성은로 설정 하는 경우 `false` 잉크 스트로크 또는 요소의 선택 된 상태에서 표시기 테두리 자동으로 제거 됩니다 선택 된 개체에서 합니다."
  example:
  - "The following example prevents a user from moving and resizing the elements and strokes on a <xref:System.Windows.Controls.InkCanvas>.  \n  \n [!code-cs[InkCanvasSamples#7](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#7)]\n [!code-vb[InkCanvasSamples#7](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#7)]"
  syntax:
    content: public bool MoveEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사용자의 스트로크 및/또는 요소를 이동할 수 있는 경우는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Controls.InkCanvas.MoveEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(System.Windows.RoutedEventArgs)
  id: OnActiveEditingModeChanged(System.Windows.RoutedEventArgs)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: OnActiveEditingModeChanged(RoutedEventArgs)
  nameWithType: InkCanvas.OnActiveEditingModeChanged(RoutedEventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(RoutedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "발생 된 <xref href=&quot;System.Windows.Controls.InkCanvas.ActiveEditingModeChanged&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected virtual void OnActiveEditingModeChanged (System.Windows.RoutedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.RoutedEventArgs
      description: "이벤트 데이터입니다."
  overload: System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.OnCreateAutomationPeer
  id: OnCreateAutomationPeer
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: OnCreateAutomationPeer()
  nameWithType: InkCanvas.OnCreateAutomationPeer()
  fullName: System.Windows.Controls.InkCanvas.OnCreateAutomationPeer()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "적절 한 제공 <xref href=&quot;System.Windows.Automation.Peers.InkCanvasAutomationPeer&quot;> </xref> 의 일부로이 컨트롤에 대 한 구현을 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 인프라입니다."
  syntax:
    content: protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();
    parameters: []
    return:
      type: System.Windows.Automation.Peers.AutomationPeer
      description: "적절 한 제공 <xref href=&quot;System.Windows.Automation.Peers.InkCanvasAutomationPeer&quot;> </xref> 의 일부로이 컨트롤에 대 한 구현을 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 인프라입니다."
  overload: System.Windows.Controls.InkCanvas.OnCreateAutomationPeer*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.OnDefaultDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)
  id: OnDefaultDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: OnDefaultDrawingAttributesReplaced(DrawingAttributesReplacedEventArgs)
  nameWithType: InkCanvas.OnDefaultDrawingAttributesReplaced(DrawingAttributesReplacedEventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnDefaultDrawingAttributesReplaced(DrawingAttributesReplacedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "발생 된 <xref href=&quot;System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected virtual void OnDefaultDrawingAttributesReplaced (System.Windows.Ink.DrawingAttributesReplacedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Ink.DrawingAttributesReplacedEventArgs
      description: "이벤트 데이터입니다."
  overload: System.Windows.Controls.InkCanvas.OnDefaultDrawingAttributesReplaced*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.OnEditingModeChanged(System.Windows.RoutedEventArgs)
  id: OnEditingModeChanged(System.Windows.RoutedEventArgs)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: OnEditingModeChanged(RoutedEventArgs)
  nameWithType: InkCanvas.OnEditingModeChanged(RoutedEventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnEditingModeChanged(RoutedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "발생 된 <xref href=&quot;System.Windows.Controls.InkCanvas.EditingModeChanged&quot;> </xref> 이벤트입니다."
  remarks: "편집 모드가 변경 된 후에이 이벤트 발생 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> <xref:System.Windows.Controls.InkCanvas>.</xref:System.Windows.Controls.InkCanvas> 속성</xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 에 변경 내용이 반영"
  syntax:
    content: protected virtual void OnEditingModeChanged (System.Windows.RoutedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.RoutedEventArgs
      description: "이벤트 데이터입니다."
  overload: System.Windows.Controls.InkCanvas.OnEditingModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged(System.Windows.RoutedEventArgs)
  id: OnEditingModeInvertedChanged(System.Windows.RoutedEventArgs)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: OnEditingModeInvertedChanged(RoutedEventArgs)
  nameWithType: InkCanvas.OnEditingModeInvertedChanged(RoutedEventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged(RoutedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "발생 된 <xref href=&quot;System.Windows.Controls.InkCanvas.EditingModeInvertedChanged&quot;> </xref> 이벤트입니다."
  remarks: "반전 된 편집 모드가 변경 된 후이 이벤트 발생 <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> <xref:System.Windows.Controls.InkCanvas>.</xref:System.Windows.Controls.InkCanvas> 속성</xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> 에 반영 된 변경"
  syntax:
    content: protected virtual void OnEditingModeInvertedChanged (System.Windows.RoutedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.RoutedEventArgs
      description: "이벤트 데이터입니다."
  overload: System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.OnGesture(System.Windows.Controls.InkCanvasGestureEventArgs)
  id: OnGesture(System.Windows.Controls.InkCanvasGestureEventArgs)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: OnGesture(InkCanvasGestureEventArgs)
  nameWithType: InkCanvas.OnGesture(InkCanvasGestureEventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnGesture(InkCanvasGestureEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "발생 된 <xref href=&quot;System.Windows.Controls.InkCanvas.Gesture&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected virtual void OnGesture (System.Windows.Controls.InkCanvasGestureEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Controls.InkCanvasGestureEventArgs
      description: "이벤트 데이터입니다."
  overload: System.Windows.Controls.InkCanvas.OnGesture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)
  nameWithType: InkCanvas.OnPropertyChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnPropertyChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "때마다 호출에서이 종속성 속성의 유효 값 <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> 업데이트 되었습니다. 변경 된 특정 종속성 속성이 인수 매개 변수에서 보고 됩니다. <xref:System.Windows.DependencyObject.OnPropertyChanged*>.</xref:System.Windows.DependencyObject.OnPropertyChanged*> 재정의"
  syntax:
    content: protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "변경 된 속성을 설명 하는 이벤트 데이터 뿐만 아니라 이전 및 새 값입니다."
  overload: System.Windows.Controls.InkCanvas.OnPropertyChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.OnSelectionChanged(System.EventArgs)
  id: OnSelectionChanged(System.EventArgs)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: OnSelectionChanged(EventArgs)
  nameWithType: InkCanvas.OnSelectionChanged(EventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnSelectionChanged(EventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "발생 된 <xref href=&quot;System.Windows.Controls.InkCanvas.SelectionChanged&quot;> </xref> 이벤트입니다."
  remarks: "이 메서드는 사용자가 잉크 스트로크 및/또는 요소 집합을 선택한 후 선택 영역 변경 내용이 적용 된 후 호출 됩니다. 변경 내용이 적용 되기 전에 <xref:System.Windows.Controls.InkCanvas.OnSelectionChanging%2A>메서드를 호출 합니다.</xref:System.Windows.Controls.InkCanvas.OnSelectionChanging%2A>"
  syntax:
    content: protected virtual void OnSelectionChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "이벤트 데이터입니다."
  overload: System.Windows.Controls.InkCanvas.OnSelectionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)
  id: OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: OnSelectionChanging(InkCanvasSelectionChangingEventArgs)
  nameWithType: InkCanvas.OnSelectionChanging(InkCanvasSelectionChangingEventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnSelectionChanging(InkCanvasSelectionChangingEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "발생 된 <xref href=&quot;System.Windows.Controls.InkCanvas.SelectionChanging&quot;> </xref> 이벤트입니다."
  remarks: "이 메서드는 변경 내용이 적용 되기 전에 하지만 사용자가 스트로크 및/또는 요소는 새 선택을 만들어질 때 호출 됩니다. 변경 내용을 적용 된 후의 <xref:System.Windows.Controls.InkCanvas.OnSelectionChanged%2A>메서드를 호출 합니다.</xref:System.Windows.Controls.InkCanvas.OnSelectionChanged%2A>"
  syntax:
    content: protected virtual void OnSelectionChanging (System.Windows.Controls.InkCanvasSelectionChangingEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Controls.InkCanvasSelectionChangingEventArgs
      description: "이벤트 데이터입니다."
  overload: System.Windows.Controls.InkCanvas.OnSelectionChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.OnSelectionMoved(System.EventArgs)
  id: OnSelectionMoved(System.EventArgs)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: OnSelectionMoved(EventArgs)
  nameWithType: InkCanvas.OnSelectionMoved(EventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnSelectionMoved(EventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "발표 사용자 선택한 스트로크 및/또는 요소 선택 영역을 이동 하는 이벤트입니다."
  remarks: "이 메서드는 사용자가 스트로크 및/또는 요소 선택 이동 하 고는 변경 내용이 적용 된 후 호출 됩니다. 변경 내용이 적용 되기 전에 <xref:System.Windows.Controls.InkCanvas.OnSelectionMoving%2A>메서드를 호출 합니다.</xref:System.Windows.Controls.InkCanvas.OnSelectionMoving%2A>"
  syntax:
    content: protected virtual void OnSelectionMoved (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "사용되지 않습니다."
  overload: System.Windows.Controls.InkCanvas.OnSelectionMoved*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)
  id: OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: OnSelectionMoving(InkCanvasSelectionEditingEventArgs)
  nameWithType: InkCanvas.OnSelectionMoving(InkCanvasSelectionEditingEventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnSelectionMoving(InkCanvasSelectionEditingEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "발생 된 <xref href=&quot;System.Windows.Controls.InkCanvas.SelectionMoving&quot;> </xref> 이벤트입니다."
  remarks: "이 메서드는 사용자가 스트로크 및/또는 요소는 선택 항목을 이동할 수 있는 요청 후 하 고 변경 내용이 적용 되기 전에 호출 됩니다. 변경이 적용 되는 <xref:System.Windows.Controls.InkCanvas.OnSelectionMoved%2A>메서드를 호출 합니다.</xref:System.Windows.Controls.InkCanvas.OnSelectionMoved%2A>"
  syntax:
    content: protected virtual void OnSelectionMoving (System.Windows.Controls.InkCanvasSelectionEditingEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Controls.InkCanvasSelectionEditingEventArgs
      description: "이벤트 데이터입니다."
  overload: System.Windows.Controls.InkCanvas.OnSelectionMoving*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.OnSelectionResized(System.EventArgs)
  id: OnSelectionResized(System.EventArgs)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: OnSelectionResized(EventArgs)
  nameWithType: InkCanvas.OnSelectionResized(EventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnSelectionResized(EventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "발생 된 <xref href=&quot;System.Windows.Controls.InkCanvas.SelectionResized&quot;> </xref> 이벤트입니다."
  remarks: "이 메서드는 사용자가 스트로크 및/또는 요소는 선택 항목의 크기가 조정 하 고는 변경 내용이 적용 된 후 호출 됩니다. 변경 내용이 적용 되기 전에 <xref:System.Windows.Controls.InkCanvas.OnSelectionResizing%2A>메서드를 호출 합니다.</xref:System.Windows.Controls.InkCanvas.OnSelectionResizing%2A>"
  syntax:
    content: protected virtual void OnSelectionResized (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "이벤트 데이터입니다."
  overload: System.Windows.Controls.InkCanvas.OnSelectionResized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)
  id: OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: OnSelectionResizing(InkCanvasSelectionEditingEventArgs)
  nameWithType: InkCanvas.OnSelectionResizing(InkCanvasSelectionEditingEventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnSelectionResizing(InkCanvasSelectionEditingEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "발생 된 <xref href=&quot;System.Windows.Controls.InkCanvas.SelectionResizing&quot;> </xref> 이벤트입니다."
  remarks: "이 메서드는 사용자가 선택한 스트로크 및/또는 요소 크기를 조정할 수 요청 후 하 고 변경 내용이 적용 되기 전에 호출 됩니다. 변경이 적용 되는 <xref:System.Windows.Controls.InkCanvas.OnSelectionResized%2A>메서드가 호출 됩니다.</xref:System.Windows.Controls.InkCanvas.OnSelectionResized%2A>"
  syntax:
    content: protected virtual void OnSelectionResizing (System.Windows.Controls.InkCanvasSelectionEditingEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Controls.InkCanvasSelectionEditingEventArgs
      description: "이벤트 데이터입니다."
  overload: System.Windows.Controls.InkCanvas.OnSelectionResizing*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.OnStrokeCollected(System.Windows.Controls.InkCanvasStrokeCollectedEventArgs)
  id: OnStrokeCollected(System.Windows.Controls.InkCanvasStrokeCollectedEventArgs)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: OnStrokeCollected(InkCanvasStrokeCollectedEventArgs)
  nameWithType: InkCanvas.OnStrokeCollected(InkCanvasStrokeCollectedEventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnStrokeCollected(InkCanvasStrokeCollectedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "발생 된 <xref href=&quot;System.Windows.Controls.InkCanvas.StrokeCollected&quot;> </xref> 이벤트입니다."
  remarks: "OnStrokeCollected 완료할 때 호출 되는 사용자 물리적으로 스트로크를 예를 들어 움직인 후 스타일러스를 태블릿에서 발생 합니다.       스트로크를 프로그래밍 방식으로 추가 된 <xref:System.Windows.Controls.InkCanvas.Strokes%2A>컬렉션 OnStrokeCollected 메서드를 호출 하지 것입니다.</xref:System.Windows.Controls.InkCanvas.Strokes%2A>"
  syntax:
    content: protected virtual void OnStrokeCollected (System.Windows.Controls.InkCanvasStrokeCollectedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Controls.InkCanvasStrokeCollectedEventArgs
      description: "이벤트 데이터입니다."
  overload: System.Windows.Controls.InkCanvas.OnStrokeCollected*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.OnStrokeErased(System.Windows.RoutedEventArgs)
  id: OnStrokeErased(System.Windows.RoutedEventArgs)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: OnStrokeErased(RoutedEventArgs)
  nameWithType: InkCanvas.OnStrokeErased(RoutedEventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnStrokeErased(RoutedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "발생 된 <xref href=&quot;System.Windows.Controls.InkCanvas.StrokeErased&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected virtual void OnStrokeErased (System.Windows.RoutedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.RoutedEventArgs
      description: "이벤트 데이터입니다."
  overload: System.Windows.Controls.InkCanvas.OnStrokeErased*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.OnStrokeErasing(System.Windows.Controls.InkCanvasStrokeErasingEventArgs)
  id: OnStrokeErasing(System.Windows.Controls.InkCanvasStrokeErasingEventArgs)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: OnStrokeErasing(InkCanvasStrokeErasingEventArgs)
  nameWithType: InkCanvas.OnStrokeErasing(InkCanvasStrokeErasingEventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnStrokeErasing(InkCanvasStrokeErasingEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "발생 된 <xref href=&quot;System.Windows.Controls.InkCanvas.StrokeErasing&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected virtual void OnStrokeErasing (System.Windows.Controls.InkCanvasStrokeErasingEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Controls.InkCanvasStrokeErasingEventArgs
      description: "이벤트 데이터입니다."
  overload: System.Windows.Controls.InkCanvas.OnStrokeErasing*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.OnStrokesReplaced(System.Windows.Controls.InkCanvasStrokesReplacedEventArgs)
  id: OnStrokesReplaced(System.Windows.Controls.InkCanvasStrokesReplacedEventArgs)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: OnStrokesReplaced(InkCanvasStrokesReplacedEventArgs)
  nameWithType: InkCanvas.OnStrokesReplaced(InkCanvasStrokesReplacedEventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnStrokesReplaced(InkCanvasStrokesReplacedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "발생 된 <xref href=&quot;System.Windows.Controls.InkCanvas.StrokesReplaced&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected virtual void OnStrokesReplaced (System.Windows.Controls.InkCanvasStrokesReplacedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Controls.InkCanvasStrokesReplacedEventArgs
      description: "이벤트 데이터입니다."
  overload: System.Windows.Controls.InkCanvas.OnStrokesReplaced*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.Paste
  id: Paste
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: Paste()
  nameWithType: InkCanvas.Paste()
  fullName: System.Windows.Controls.InkCanvas.Paste()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "왼쪽 위 모퉁이를 클립보드의 내용을 붙여넣습니다는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  remarks: "<xref:System.Windows.Controls.InkCanvas>클립보드 데이터를 지원할 수 [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] 형식으로 [!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)], 및 텍스트 형식입니다.</xref:System.Windows.Controls.InkCanvas>"
  example:
  - "The following example copies an element to the Clipboard and pastes it to the <xref:System.Windows.Controls.InkCanvas>. This example assumes that there is an element called `rect1`, and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> events have been connected to the event handlers in the example.  \n  \n [!code-cs[InkCanvasSamples#1](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#1)]\n [!code-vb[InkCanvasSamples#1](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#1)]"
  syntax:
    content: public void Paste ();
    parameters: []
  overload: System.Windows.Controls.InkCanvas.Paste*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.Paste(System.Windows.Point)
  id: Paste(System.Windows.Point)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: Paste(Point)
  nameWithType: InkCanvas.Paste(Point)
  fullName: System.Windows.Controls.InkCanvas.Paste(Point)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "클립보드의 내용을 붙여넣습니다는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref> 지정 된 시점입니다."
  remarks: "<xref:System.Windows.Controls.InkCanvas>클립보드 데이터를 지원할 수 [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] 형식으로 [!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)], 및 텍스트 형식입니다.</xref:System.Windows.Controls.InkCanvas>"
  example:
  - "The following example copies an element to the Clipboard and pastes it to the <xref:System.Windows.Controls.InkCanvas>. This example assumes that there is an element called `rect1`, and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> events are connected to the event handlers in the example.  \n  \n [!code-cs[InkCanvasSamples#1](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#1)]\n [!code-vb[InkCanvasSamples#1](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#1)]"
  syntax:
    content: public void Paste (System.Windows.Point point);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "스트로크를 붙여넣을에 점입니다."
  overload: System.Windows.Controls.InkCanvas.Paste*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.PreferredPasteFormats
  id: PreferredPasteFormats
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: PreferredPasteFormats
  nameWithType: InkCanvas.PreferredPasteFormats
  fullName: System.Windows.Controls.InkCanvas.PreferredPasteFormats
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "붙여 넣을 수 있는 형식을 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  remarks: "<a name=&quot;xamlPropertyElementUsage_PreferredPasteFormats&quot;></a># # XAML 속성 요소 사용 ```   <object>     <object.PreferredPasteFormats>       InkCanvasClipboardFormats     </object.PreferredPasteFormats>   </object>   ``` <a name=&quot;xamlValues_PreferredPasteFormats&quot;> </a> # # XAML 값 *InkCanvasClipboardFormats* 배열을 <xref:System.Windows.Controls.InkCanvasClipboardFormat>열거형 값입니다.</xref:System.Windows.Controls.InkCanvasClipboardFormat>       XAML의 배열을 지정 하려면 `x:Array` 사용 합니다. 배열 멤버를 선언 하는 요소로 열거형 값을 지정 하려면 `x:Static` 사용 합니다. 자세한 내용은 참조 [X:array 태그 확장](~/add/includes/ajax-current-ext-md.md) 및 [X:static 태그 확장](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example sets the PreferredPasteFormats to make the <xref:System.Windows.Controls.InkCanvas> accept [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)].  \n  \n [!code-cs[InkCanvasSamples#26](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#26)]\n [!code-vb[InkCanvasSamples#26](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#26)]  \n  \n The following example accomplishes the same thing in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)].  \n  \n [!code-xml[InkCanvasSamples#38](~/add/codesnippet/xaml/InkCanvasSamples/Window2.xaml#38)]"
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Windows.Controls.InkCanvasClipboardFormat> PreferredPasteFormats { get; set; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Windows.Controls.InkCanvasClipboardFormat}
      description: "열거형 값의 컬렉션입니다. 기본값은 <xref href=&quot;System.Windows.Controls.InkCanvasClipboardFormat&quot;> </xref>합니다."
  overload: System.Windows.Controls.InkCanvas.PreferredPasteFormats*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.ResizeEnabled
  id: ResizeEnabled
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: ResizeEnabled
  nameWithType: InkCanvas.ResizeEnabled
  fullName: System.Windows.Controls.InkCanvas.ResizeEnabled
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "사용자 선택한 잉크 스트로크 및/또는 요소에 크기 있는지 여부를 나타내는 부울 값을 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  remarks: "이 속성은로 설정 하는 경우 `true`를 선택할 때 잉크 스트로크 및/또는 요소 주위 표시기 테두리가 그려집니다. 이 테두리에 선택 된 개체 크기를 조정할 수 있습니다. 경우 <xref:System.Windows.Controls.InkCanvas.MoveEnabled%2A>은 `true`, 표시기 스트로크 및/또는 요소를 이동할 수 있습니다.</xref:System.Windows.Controls.InkCanvas.MoveEnabled%2A>       이 속성은로 설정 하는 경우 `false` 표시기 테두리가 하나 이상의 잉크 스트로크 및/또는 요소를 선택 하는 동안 선택 된 개체에서 자동으로 제거 됩니다."
  example:
  - "The following example prevents a user from moving and resizing the elements and strokes on a <xref:System.Windows.Controls.InkCanvas>.  \n  \n [!code-cs[InkCanvasSamples#7](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#7)]\n [!code-vb[InkCanvasSamples#7](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#7)]"
  syntax:
    content: public bool ResizeEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사용자 크기 조정할 수 있으면 스트로크 및/또는 요소에는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Controls.InkCanvas.ResizeEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.RightProperty
  id: RightProperty
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: RightProperty
  nameWithType: InkCanvas.RightProperty
  fullName: System.Windows.Controls.InkCanvas.RightProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 &lt;xref:System.Windows.Controls.InkCanvas.Right%2A?displayProperty=fullName&gt; 연결 된 속성을 식별 합니다."
  syntax:
    content: public static readonly System.Windows.DependencyProperty RightProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.Select(System.Collections.Generic.IEnumerable{System.Windows.UIElement})
  id: Select(System.Collections.Generic.IEnumerable{System.Windows.UIElement})
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: Select(IEnumerable<UIElement>)
  nameWithType: InkCanvas.Select(IEnumerable<UIElement>)
  fullName: System.Windows.Controls.InkCanvas.Select(IEnumerable<UIElement>)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "집합이 선택 <xref href=&quot;System.Windows.UIElement&quot;> </xref> 개체입니다."
  remarks: "<xref:System.Windows.Controls.InkCanvas>포함 될 수 있습니다 <xref:System.Windows.Ink.Stroke>사용자 스타일러스 입력에 대 한 응답으로 생성 되는 개체 및 <xref:System.Windows.UIElement>와 같은 개체 <xref:System.Windows.Controls.Image>및 <xref:System.Windows.Controls.Button>개체.</xref:System.Windows.Controls.Button> </xref:System.Windows.Controls.Image> </xref:System.Windows.UIElement> </xref:System.Windows.Ink.Stroke> </xref:System.Windows.Controls.InkCanvas>       선택한 스트로크 인식 및 조작 하기 쉽도록 주위 표시기 표시 됩니다. <xref:System.Windows.UIElement>개체 선택 다르게 표시 되지 않습니다.</xref:System.Windows.UIElement> 경우는 <xref:System.Windows.UIElement>에 `selectedElements` 은 하지 Children 컬렉션 선택 무시 <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement> </xref:System.Windows.UIElement>"
  example:
  - "The following example selects all the strokes and two elements on an <xref:System.Windows.Controls.InkCanvas>. This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.  \n  \n [!code-cs[InkCanvasSamples#2](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#2)]\n [!code-vb[InkCanvasSamples#2](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#2)]"
  syntax:
    content: public void Select (System.Collections.Generic.IEnumerable<System.Windows.UIElement> selectedElements);
    parameters:
    - id: selectedElements
      type: System.Collections.Generic.IEnumerable{System.Windows.UIElement}
      description: "컬렉션 <xref href=&quot;System.Windows.UIElement&quot;> </xref> 개체를 선택 합니다."
  overload: System.Windows.Controls.InkCanvas.Select*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection)
  id: Select(System.Windows.Ink.StrokeCollection)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: Select(StrokeCollection)
  nameWithType: InkCanvas.Select(StrokeCollection)
  fullName: System.Windows.Controls.InkCanvas.Select(StrokeCollection)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "잉크 집합이 선택 <xref href=&quot;System.Windows.Ink.Stroke&quot;> </xref> 개체입니다."
  remarks: "<xref:System.Windows.Controls.InkCanvas>포함 될 수 있습니다 <xref:System.Windows.Ink.Stroke>사용자 스타일러스 입력에 대 한 응답으로 생성 되는 개체 및 <xref:System.Windows.FrameworkElement>와 같은 개체 <xref:System.Windows.Controls.Image>및 <xref:System.Windows.Controls.Button>개체.</xref:System.Windows.Controls.Button> </xref:System.Windows.Controls.Image> </xref:System.Windows.FrameworkElement> </xref:System.Windows.Ink.Stroke> </xref:System.Windows.Controls.InkCanvas>       선택한 스트로크 인식 및 조작 하기 쉽도록 주위 표시기 표시 됩니다. <xref:System.Windows.FrameworkElement>개체 선택 다르게 표시 되지 않습니다.</xref:System.Windows.FrameworkElement>"
  example:
  - "The following example selects all the strokes and two elements on an <xref:System.Windows.Controls.InkCanvas>.  This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.  \n  \n [!code-cs[InkCanvasSamples#2](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#2)]\n [!code-vb[InkCanvasSamples#2](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#2)]"
  syntax:
    content: public void Select (System.Windows.Ink.StrokeCollection selectedStrokes);
    parameters:
    - id: selectedStrokes
      type: System.Windows.Ink.StrokeCollection
      description: "컬렉션 <xref href=&quot;System.Windows.Ink.Stroke&quot;> </xref> 개체를 선택 합니다."
  overload: System.Windows.Controls.InkCanvas.Select*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "하나 이상의 스트로크 <code> selectedStrokes </code> 에 속하지 않는 <xref:System.Windows.Controls.InkCanvas.Strokes*>속성.</xref:System.Windows.Controls.InkCanvas.Strokes*>"
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})
  id: Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: Select(StrokeCollection,IEnumerable<UIElement>)
  nameWithType: InkCanvas.Select(StrokeCollection,IEnumerable<UIElement>)
  fullName: System.Windows.Controls.InkCanvas.Select(StrokeCollection,IEnumerable<UIElement>)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "조합을 선택 <xref href=&quot;System.Windows.Ink.Stroke&quot;> </xref> 및 <xref href=&quot;System.Windows.UIElement&quot;> </xref> 개체입니다."
  remarks: "<xref:System.Windows.Controls.InkCanvas>포함 될 수 있습니다 <xref:System.Windows.Ink.Stroke>사용자 스타일러스 입력에 대 한 응답으로 생성 되는 개체 및 <xref:System.Windows.UIElement>와 같은 개체 <xref:System.Windows.Controls.Image>및 <xref:System.Windows.Controls.Button>개체.</xref:System.Windows.Controls.Button> </xref:System.Windows.Controls.Image> </xref:System.Windows.UIElement> </xref:System.Windows.Ink.Stroke> </xref:System.Windows.Controls.InkCanvas>       선택한 스트로크 주위에 알아보기 인식 및 조작 하기 표시기가 표시 됩니다. <xref:System.Windows.UIElement>개체 선택 다르게 표시 되지 않습니다.</xref:System.Windows.UIElement> 경우는 <xref:System.Windows.UIElement>에 `selectedElements` <xref:System.Windows.Controls.InkCanvas.Select%2A> <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement> 무시</xref:System.Windows.Controls.InkCanvas.Select%2A> 자식 컬렉션에 없는</xref:System.Windows.UIElement>"
  example:
  - "The following example selects all the strokes and two elements on an <xref:System.Windows.Controls.InkCanvas>.  This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.  \n  \n [!code-cs[InkCanvasSamples#2](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#2)]\n [!code-vb[InkCanvasSamples#2](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#2)]"
  syntax:
    content: public void Select (System.Windows.Ink.StrokeCollection selectedStrokes, System.Collections.Generic.IEnumerable<System.Windows.UIElement> selectedElements);
    parameters:
    - id: selectedStrokes
      type: System.Windows.Ink.StrokeCollection
      description: "컬렉션 <xref href=&quot;System.Windows.Ink.Stroke&quot;> </xref> 개체를 선택 합니다."
    - id: selectedElements
      type: System.Collections.Generic.IEnumerable{System.Windows.UIElement}
      description: "컬렉션 <xref href=&quot;System.Windows.UIElement&quot;> </xref> 개체를 선택 합니다."
  overload: System.Windows.Controls.InkCanvas.Select*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "하나 이상의 스트로크 <code> selectedStrokes </code> 에 포함 되지 않습니다는 <xref:System.Windows.Controls.InkCanvas.Strokes*>속성.</xref:System.Windows.Controls.InkCanvas.Strokes*>"
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.SelectionChanged
  id: SelectionChanged
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: SelectionChanged
  nameWithType: InkCanvas.SelectionChanged
  fullName: System.Windows.Controls.InkCanvas.SelectionChanged
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "발생 경우 선택 영역에는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref> 변경 합니다."
  remarks: "이 이벤트는 잉크 스트로크 및/또는 요소 집합 선택 되 고 사용자가 적용 된 후에 발생 합니다.       대신, 선택 영역을 적용 하기 전에 잉크 스트로크 및/또는 요소 집합을 선택 하는 요청을 처리 해야, 하는 경우 추가 하는 이벤트 처리기는 <xref:System.Windows.Controls.InkCanvas.SelectionChanging>이벤트.</xref:System.Windows.Controls.InkCanvas.SelectionChanging>"
  example:
  - "The following example prevents the user from making a selection smaller than its original size.  \n  \n [!code-cs[InkCanvasSamples#16](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#16)]\n [!code-vb[InkCanvasSamples#16](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#16)]"
  syntax:
    content: public event EventHandler SelectionChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.SelectionChanging
  id: SelectionChanging
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: SelectionChanging
  nameWithType: InkCanvas.SelectionChanging
  fullName: System.Windows.Controls.InkCanvas.SelectionChanging
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "잉크 스트로크 및/또는 요소가 새 집합을 선택 하는 경우 발생 합니다."
  remarks: "SelectionChanging 이벤트는 변경 내용이 적용 되기 전에 하지만 사용자가 스트로크 및/또는 요소를 선택 하면 발생 합니다.       SelectionChanging 이벤트 처리 될 때는 <xref:System.Windows.Controls.InkCanvasSelectionChangingEventHandler>받는 <xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs>개체.</xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs> </xref:System.Windows.Controls.InkCanvasSelectionChangingEventHandler> <xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs>에 액세스 하기 위한 메서드를 제공 <xref:System.Windows.FrameworkElement>및 <xref:System.Windows.Ink.StrokeCollection>사용자가 선택 된 개체입니다.</xref:System.Windows.Ink.StrokeCollection> </xref:System.Windows.FrameworkElement></xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs>       변경이 적용 되는 <xref:System.Windows.Controls.InkCanvas.SelectionChanged>이벤트가 발생 합니다.</xref:System.Windows.Controls.InkCanvas.SelectionChanged>      > [!NOTE] > 선택한 스트로크 삭제 되거나 때 the SelectionChanging 이벤트가 발생 하지 않습니다는 <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A>속성 변경.</xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A>"
  example:
  - "The following example makes selected strokes royal blue.  \n  \n [!code-cs[InkCanvasSamples#14](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#14)]\n [!code-vb[InkCanvasSamples#14](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#14)]"
  syntax:
    content: public event System.Windows.Controls.InkCanvasSelectionChangingEventHandler SelectionChanging;
    return:
      type: System.Windows.Controls.InkCanvasSelectionChangingEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.SelectionMoved
  id: SelectionMoved
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: SelectionMoved
  nameWithType: InkCanvas.SelectionMoved
  fullName: System.Windows.Controls.InkCanvas.SelectionMoved
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "사용자가 선택한 스트로크 및/또는 요소를 이동한 후에 발생 합니다."
  remarks: "이 이벤트에는 선택한 스트로크 및/또는 요소 이동 하면서 스트로크 또는 요소의 하기 전에 데이터가 업데이트 되어 새 위치가 기록 후 발생 합니다. 추가 하는 이벤트 처리기는 <xref:System.Windows.Controls.InkCanvas.SelectionMoving>이벤트.</xref:System.Windows.Controls.InkCanvas.SelectionMoving>"
  example:
  - "The following example unselects items on an <xref:System.Windows.Controls.InkCanvas> after the user moves them.  \n  \n [!code-cs[InkCanvasSamples#19](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#19)]\n [!code-vb[InkCanvasSamples#19](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#19)]"
  syntax:
    content: public event EventHandler SelectionMoved;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.SelectionMoving
  id: SelectionMoving
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: SelectionMoving
  nameWithType: InkCanvas.SelectionMoving
  fullName: System.Windows.Controls.InkCanvas.SelectionMoving
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "발생 선택한 스트로크 및 요소를 이동 하기 전에."
  remarks: "이 이벤트 스트로크 및/또는 요소 선택 이동할 수 있는 사용자가 요청 후 변경 내용이 적용 되기 전에 발생 합니다.       이벤트 처리기 형식의 인수를 받습니다. <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs>두 개의 속성이 있는: <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A>및 <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>.</xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> </xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> </xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A>이동 하기 전에 선택 항목의 경계를 정의 하 고 <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>이동 후 선택의 경계를 정의 합니다.</xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A></xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A>       변경이 적용 되는 <xref:System.Windows.Controls.InkCanvas.SelectionMoved>이벤트가 발생 합니다.</xref:System.Windows.Controls.InkCanvas.SelectionMoved>"
  example:
  - "The following example prevents the user from moving selected items vertically on an <xref:System.Windows.Controls.InkCanvas>.  \n  \n [!code-cs[InkCanvasSamples#13](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#13)]\n [!code-vb[InkCanvasSamples#13](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#13)]"
  syntax:
    content: public event System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionMoving;
    return:
      type: System.Windows.Controls.InkCanvasSelectionEditingEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.SelectionResized
  id: SelectionResized
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: SelectionResized
  nameWithType: InkCanvas.SelectionResized
  fullName: System.Windows.Controls.InkCanvas.SelectionResized
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "선택한 스트로크 및/또는 요소 크기를 조정할 때 발생 합니다."
  remarks: "이 이벤트는 선택한 스트로크 및/또는 요소 크기 조정 후 발생 합니다.       대신, 스트로크 및/또는 요소 크기가 조정 되기 전에 선택 영역 크기를 조정 하려면 요청을 처리 해야, 경우 추가 하는 이벤트 처리기는 <xref:System.Windows.Controls.InkCanvas.SelectionResizing>이벤트.</xref:System.Windows.Controls.InkCanvas.SelectionResizing>"
  example:
  - "The following example unselects all the items on an <xref:System.Windows.Controls.InkCanvas> after the user re-sizes the selection.  \n  \n [!code-cs[InkCanvasSamples#23](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#23)]\n [!code-vb[InkCanvasSamples#23](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#23)]"
  syntax:
    content: public event EventHandler SelectionResized;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.SelectionResizing
  id: SelectionResizing
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: SelectionResizing
  nameWithType: InkCanvas.SelectionResizing
  fullName: System.Windows.Controls.InkCanvas.SelectionResizing
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "발생 전에 선택한 스트로크 및 요소의 크기가 조정 됩니다."
  remarks: "이 이벤트는 사용자는 선택한 스트로크 및/또는 요소 크기를 조정할 수를 요청한 후 변경 내용이 적용 되기 전에 발생 합니다.       이벤트 처리기 형식의 인수를 받습니다. <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs>두 속성을 포함 하는: <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A>및 <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>.</xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> </xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> </xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A>크기 조정 작업 앞에 선택 항목의 경계를 정의 하 고 <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>크기 조정 작업 후 선택 항목의 경계를 정의 합니다.</xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A></xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A>       스트로크 및/또는 요소를 새 크기로 업데이트 한 후의 <xref:System.Windows.Controls.InkCanvas.SelectionResized>이벤트가 발생 합니다.</xref:System.Windows.Controls.InkCanvas.SelectionResized>"
  example:
  - "The following example prevents the user from making a selection smaller than its original size.  \n  \n [!code-cs[InkCanvasSamples#16](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#16)]\n [!code-vb[InkCanvasSamples#16](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#16)]"
  syntax:
    content: public event System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionResizing;
    return:
      type: System.Windows.Controls.InkCanvasSelectionEditingEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.SetBottom(System.Windows.UIElement,System.Double)
  id: SetBottom(System.Windows.UIElement,System.Double)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: SetBottom(UIElement,Double)
  nameWithType: InkCanvas.SetBottom(UIElement,Double)
  fullName: System.Windows.Controls.InkCanvas.SetBottom(UIElement,Double)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "값을 설정 하는 &lt;xref:System.Windows.Controls.InkCanvas.Bottom%2A?displayProperty=fullName&gt; 연결 된 지정된 된 종속성 개체에 대 한 속성입니다."
  remarks: ''
  example:
  - "The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.  \n  \n [!code-cs[InkCanvasSamples#28](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#28)]\n [!code-vb[InkCanvasSamples#28](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#28)]"
  syntax:
    content: public static void SetBottom (System.Windows.UIElement element, double length);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "아래 속성을 설정 하는 요소입니다."
    - id: length
      type: System.Double
      description: "아래쪽 좌표 `element`합니다."
  overload: System.Windows.Controls.InkCanvas.SetBottom*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})
  id: SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: SetEnabledGestures(IEnumerable<ApplicationGesture>)
  nameWithType: InkCanvas.SetEnabledGestures(IEnumerable<ApplicationGesture>)
  fullName: System.Windows.Controls.InkCanvas.SetEnabledGestures(IEnumerable<ApplicationGesture>)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "응용 프로그램 제스처를 설정의 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref> 인식 하 게 됩니다."
  remarks: "다음 예제에서는 설정 하는 <xref:System.Windows.Controls.InkCanvas>응용 프로그램 제스처를 인식 하도록 합니다.</xref:System.Windows.Controls.InkCanvas>       [!code-cs[#3 GestureSample](~/add/codesnippet/csharp/GestureSample/Window1.xaml.cs#3)][!code-vb[GestureSample&#3;](~/add/codesnippet/visualbasic/GestureSample/Window1.xaml.vb#3)][!code-cs[GestureSample&#1;](~/add/codesnippet/csharp/GestureSample/Window1.xaml.cs#1) ] [!code-vb [GestureSample&#1;     ](~/add/codesnippet/visualbasic/GestureSample/Window1.xaml.vb#1)]"
  syntax:
    content: public void SetEnabledGestures (System.Collections.Generic.IEnumerable<System.Windows.Ink.ApplicationGesture> applicationGestures);
    parameters:
    - id: applicationGestures
      type: System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture}
      description: "응용 프로그램이 수집 되는 제스처는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref> 인식 하 게 됩니다."
  overload: System.Windows.Controls.InkCanvas.SetEnabledGestures*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable*>속성은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable*>"
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.SetLeft(System.Windows.UIElement,System.Double)
  id: SetLeft(System.Windows.UIElement,System.Double)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: SetLeft(UIElement,Double)
  nameWithType: InkCanvas.SetLeft(UIElement,Double)
  fullName: System.Windows.Controls.InkCanvas.SetLeft(UIElement,Double)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "값을 설정 하는 &lt;xref:System.Windows.Controls.InkCanvas.Left%2A?displayProperty=fullName&gt; 연결 된 지정된 된 종속성 개체에 대 한 속성입니다."
  remarks: ''
  example:
  - "The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.  \n  \n [!code-cs[InkCanvasSamples#29](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#29)]\n [!code-vb[InkCanvasSamples#29](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#29)]"
  syntax:
    content: public static void SetLeft (System.Windows.UIElement element, double length);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "왼쪽된 속성을 설정 하는 요소입니다."
    - id: length
      type: System.Double
      description: "왼쪽된 좌표입니다. `element`합니다."
  overload: System.Windows.Controls.InkCanvas.SetLeft*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.SetRight(System.Windows.UIElement,System.Double)
  id: SetRight(System.Windows.UIElement,System.Double)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: SetRight(UIElement,Double)
  nameWithType: InkCanvas.SetRight(UIElement,Double)
  fullName: System.Windows.Controls.InkCanvas.SetRight(UIElement,Double)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "값을 설정 하는 &lt;xref:System.Windows.Controls.InkCanvas.Right%2A?displayProperty=fullName&gt; 연결 된 지정된 된 종속성 개체에 대 한 속성입니다."
  remarks: ''
  example:
  - "The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.  \n  \n [!code-cs[InkCanvasSamples#30](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#30)]\n [!code-vb[InkCanvasSamples#30](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#30)]"
  syntax:
    content: public static void SetRight (System.Windows.UIElement element, double length);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "Right 속성을 설정 하는 요소입니다."
    - id: length
      type: System.Double
      description: "오른쪽 좌표입니다. `element`합니다."
  overload: System.Windows.Controls.InkCanvas.SetRight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.SetTop(System.Windows.UIElement,System.Double)
  id: SetTop(System.Windows.UIElement,System.Double)
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: SetTop(UIElement,Double)
  nameWithType: InkCanvas.SetTop(UIElement,Double)
  fullName: System.Windows.Controls.InkCanvas.SetTop(UIElement,Double)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "값을 설정 하는 &lt;xref:System.Windows.Controls.InkCanvas.Top%2A?displayProperty=fullName&gt; 연결 된 지정된 된 종속성 개체에 대 한 속성입니다."
  remarks: ''
  example:
  - "The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.  \n  \n [!code-cs[InkCanvasSamples#27](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#27)]\n [!code-vb[InkCanvasSamples#27](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#27)]"
  syntax:
    content: public static void SetTop (System.Windows.UIElement element, double length);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "Top 속성을 설정 하는 요소입니다."
    - id: length
      type: System.Double
      description: "위쪽 좌표입니다. `element`합니다."
  overload: System.Windows.Controls.InkCanvas.SetTop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.StrokeCollected
  id: StrokeCollected
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: StrokeCollected
  nameWithType: InkCanvas.StrokeCollected
  fullName: System.Windows.Controls.InkCanvas.StrokeCollected
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "사용자가 그린 스트로크에 추가 될 때 발생 합니다.는 <xref:System.Windows.Controls.InkCanvas.Strokes*>속성.</xref:System.Windows.Controls.InkCanvas.Strokes*>"
  remarks: "이 이벤트는 사용자가 스트로크 포인팅 장치를 사용 하 여 완료 될 때 발생 합니다. 예를 들어 사용자 발생 시킬 수 있습니다 디지타이저에서 스타일러스를 움직인 후 함으로써 스트로크를 완료 합니다.       이벤트 처리기 형식의 인수를 받습니다. <xref:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs>, 완료 된 스트로크를 참조 하는.</xref:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs> Stroke <xref:System.Windows.Controls.InkCanvas.Strokes%2A> <xref:System.Windows.Controls.InkCanvas>.</xref:System.Windows.Controls.InkCanvas> 속성</xref:System.Windows.Controls.InkCanvas.Strokes%2A> 에 추가 됩니다.       프로그래밍 방식으로 추가할은 <xref:System.Windows.Ink.Stroke>개체는 <xref:System.Windows.Controls.InkCanvas.Strokes%2A>컬렉션이이 이벤트가 발생 하지 않습니다.</xref:System.Windows.Controls.InkCanvas.Strokes%2A> </xref:System.Windows.Ink.Stroke>      <a name=&quot;routedEventInfo_StrokeCollected&quot;></a># # 이벤트 정보 라우트된 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.InkCanvas.StrokeCollectedEvent>|   | 라우팅 전략 | 버블링 |   | 대리자 | <xref:System.Windows.Controls.InkCanvasStrokeCollectedEventHandler>|</xref:System.Windows.Controls.InkCanvasStrokeCollectedEventHandler></xref:System.Windows.Controls.InkCanvas.StrokeCollectedEvent>"
  example:
  - "The following example saves the time as a custom property when a user adds a stroke to the <xref:System.Windows.Controls.InkCanvas>.  \n  \n [!code-cs[InkCanvasSamples#22](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#22)]\n [!code-vb[InkCanvasSamples#22](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#22)]"
  syntax:
    content: public event System.Windows.Controls.InkCanvasStrokeCollectedEventHandler StrokeCollected;
    return:
      type: System.Windows.Controls.InkCanvasStrokeCollectedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.StrokeCollectedEvent
  id: StrokeCollectedEvent
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: StrokeCollectedEvent
  nameWithType: InkCanvas.StrokeCollectedEvent
  fullName: System.Windows.Controls.InkCanvas.StrokeCollectedEvent
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref href=&quot;System.Windows.Controls.InkCanvas.StrokeCollected&quot;> </xref> 라우트된 이벤트입니다."
  syntax:
    content: public static readonly System.Windows.RoutedEvent StrokeCollectedEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.StrokeErased
  id: StrokeErased
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: StrokeErased
  nameWithType: InkCanvas.StrokeErased
  fullName: System.Windows.Controls.InkCanvas.StrokeErased
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "사용자가 스트로크 때 발생 합니다."
  remarks: "이 이벤트 발생 여부 잉크 지울 때 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>속성이 <xref:System.Windows.Controls.InkCanvasEditingMode>나 <xref:System.Windows.Controls.InkCanvasEditingMode>.</xref:System.Windows.Controls.InkCanvasEditingMode> </xref:System.Windows.Controls.InkCanvasEditingMode> 로 설정 되어</xref:System.Windows.Controls.InkCanvas.EditingMode%2A>      <a name=&quot;routedEventInfo_StrokeErasing&quot;></a># # 이벤트 정보 라우트된 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.InkCanvas.StrokeErasedEvent>|   | 라우팅 전략 | 버블링 |   | 대리자 | <xref:System.Windows.RoutedEventHandler>|</xref:System.Windows.RoutedEventHandler></xref:System.Windows.Controls.InkCanvas.StrokeErasedEvent>"
  example:
  - "The following example reports the number of strokes that are on an <xref:System.Windows.Controls.InkCanvas> when the StrokeErased event occurs. If <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode> and the user erases the middle of a stroke, the number of strokes on the <xref:System.Windows.Controls.InkCanvas> increases. This is because the old stroke was replaced by two new strokes.  \n  \n [!code-cs[InkCanvasSamples#18](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#18)]\n [!code-vb[InkCanvasSamples#18](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#18)]"
  syntax:
    content: public event System.Windows.RoutedEventHandler StrokeErased;
    return:
      type: System.Windows.RoutedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.StrokeErasedEvent
  id: StrokeErasedEvent
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: StrokeErasedEvent
  nameWithType: InkCanvas.StrokeErasedEvent
  fullName: System.Windows.Controls.InkCanvas.StrokeErasedEvent
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref href=&quot;System.Windows.Controls.InkCanvas.StrokeErased&quot;> </xref> 라우트된 이벤트입니다."
  syntax:
    content: public static readonly System.Windows.RoutedEvent StrokeErasedEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.StrokeErasing
  id: StrokeErasing
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: StrokeErasing
  nameWithType: InkCanvas.StrokeErasing
  fullName: System.Windows.Controls.InkCanvas.StrokeErasing
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "사용자가 스트로크를 지우기 바로 전에 발생 합니다."
  remarks: "Stroke 지워야 하는지 여부를 확인 하려는 경우이 이벤트를 처리 합니다. 설정의 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>속성을 `true` 획 않게 방지 하려는 경우.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 이 방법을 사용할 수 있습니다 때 해당 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A>속성이 <xref:System.Windows.Controls.InkCanvasEditingMode>나 <xref:System.Windows.Controls.InkCanvasEditingMode>.</xref:System.Windows.Controls.InkCanvasEditingMode> </xref:System.Windows.Controls.InkCanvasEditingMode> </xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> 또는</xref:System.Windows.Controls.InkCanvas.EditingMode%2A>"
  example:
  - "The following example prevents any strokes rendered as highlighters from being erased. The example assumes that the <xref:System.Windows.Controls.InkCanvas> is connected to the event handler.  \n  \n [!code-cs[DrawingAttributes#16](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#16)]\n [!code-vb[DrawingAttributes#16](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#16)]"
  syntax:
    content: public event System.Windows.Controls.InkCanvasStrokeErasingEventHandler StrokeErasing;
    return:
      type: System.Windows.Controls.InkCanvasStrokeErasingEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.Strokes
  id: Strokes
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: Strokes
  nameWithType: InkCanvas.Strokes
  fullName: System.Windows.Controls.InkCanvas.Strokes
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "잉크의 컬렉션을 가져오거나 설정 합니다. <xref href=&quot;System.Windows.Ink.Stroke&quot;> </xref> 에 의해 수집 된 개체는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  remarks: "<a name=&quot;dependencyPropertyInfo_Strokes&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.InkCanvas.StrokesProperty>|   | 메타 데이터 속성이 `true`| None |</xref:System.Windows.Controls.InkCanvas.StrokesProperty>"
  example:
  - "The following example demonstrates how to use two <xref:System.Windows.Ink.StrokeCollection> objects for the same <xref:System.Windows.Controls.InkCanvas>. In this example, player one and player two each use an individual \"inking surface\" even though they share the same <xref:System.Windows.Controls.InkCanvas>. This example assumes the click event is connected to the event handler, `switchPlayersButton_Click`.  \n  \n [!code-cs[InkCanvasSamples#15](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#15)]\n [!code-vb[InkCanvasSamples#15](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#15)]  \n  \n The following example demonstrates how to bind the Strokes property of an <xref:System.Windows.Controls.InkCanvas> to another <xref:System.Windows.Controls.InkCanvas>.  \n  \n [!code-xml[InkCanvasBinding#2](~/add/codesnippet/xaml/p-system.windows.control_84_2.xaml)]\n [!code-xml[InkCanvasBinding#2](~/add/codesnippet/xaml/p-system.windows.control_84_2.xaml)]"
  syntax:
    content: public System.Windows.Ink.StrokeCollection Strokes { get; set; }
    return:
      type: System.Windows.Ink.StrokeCollection
      description: "컬렉션 <xref href=&quot;System.Windows.Ink.Stroke&quot;> </xref> 에 포함 된 개체는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  overload: System.Windows.Controls.InkCanvas.Strokes*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.StrokesProperty
  id: StrokesProperty
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: StrokesProperty
  nameWithType: InkCanvas.StrokesProperty
  fullName: System.Windows.Controls.InkCanvas.StrokesProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref:System.Windows.Controls.InkCanvas.Strokes*>종속성 속성입니다.</xref:System.Windows.Controls.InkCanvas.Strokes*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty StrokesProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.StrokesReplaced
  id: StrokesReplaced
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: StrokesReplaced
  nameWithType: InkCanvas.StrokesReplaced
  fullName: System.Windows.Controls.InkCanvas.StrokesReplaced
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "발생 경우는 <xref:System.Windows.Controls.InkCanvas.Strokes*>속성 바뀝니다.</xref:System.Windows.Controls.InkCanvas.Strokes*>"
  remarks: ''
  example:
  - "The following example demonstrates how to use two <xref:System.Windows.Ink.StrokeCollection> objects that are co-located on the same <xref:System.Windows.Controls.InkCanvas>. In this example, player one and player two each use an individual \"inking surface\" even though they share the same <xref:System.Windows.Controls.InkCanvas>. This example assumes that the `switchPlayersButton_Click` event is connected to the event handler.  \n  \n [!code-cs[InkCanvasSamples#15](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#15)]\n [!code-vb[InkCanvasSamples#15](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#15)]"
  syntax:
    content: public event System.Windows.Controls.InkCanvasStrokesReplacedEventHandler StrokesReplaced;
    return:
      type: System.Windows.Controls.InkCanvasStrokesReplacedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddChild(System.Object)
  id: System#Windows#Markup#IAddChild#AddChild(System.Object)
  isEii: true
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: InkCanvas.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Controls.InkCanvas.System.Windows.Markup.IAddChild.AddChild(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "지정된 된 개체를 추가 하는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref>합니다."
  syntax:
    content: void IAddChild.AddChild (object value);
    parameters:
    - id: value
      type: System.Object
      description: "추가할 자식 개체입니다."
  overload: System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddText(System.String)
  id: System#Windows#Markup#IAddChild#AddText(System.String)
  isEii: true
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: InkCanvas.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Controls.InkCanvas.System.Windows.Markup.IAddChild.AddText(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "추가 하는 텍스트 태그에서 태그 안에 있는 합니다. 항상 <xref:System.ArgumentException>.</xref:System.ArgumentException> throw"
  syntax:
    content: void IAddChild.AddText (string textData);
    parameters:
    - id: textData
      type: System.String
      description: "사용되지 않습니다."
  overload: System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.TopProperty
  id: TopProperty
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: TopProperty
  nameWithType: InkCanvas.TopProperty
  fullName: System.Windows.Controls.InkCanvas.TopProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 &lt;xref:System.Windows.Controls.InkCanvas.Top%2A?displayProperty=fullName&gt; 연결 된 속성입니다."
  syntax:
    content: public static readonly System.Windows.DependencyProperty TopProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.UseCustomCursor
  id: UseCustomCursor
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: UseCustomCursor
  nameWithType: InkCanvas.UseCustomCursor
  fullName: System.Windows.Controls.InkCanvas.UseCustomCursor
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "표준 재정의할지 여부를 나타내는 부울 값을 가져오거나 설정 합니다. <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref> 커서 기능 사용자 지정 커서를 지원 하도록 합니다."
  remarks: "<xref:System.Windows.Controls.InkCanvas>현재 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> <xref:System.Windows.Controls.InkCanvas>.</xref:System.Windows.Controls.InkCanvas> 범위 내에서 커서를 상태</xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 를 반영 하기 위해 커서 스타일을 변경 합니다</xref:System.Windows.Controls.InkCanvas> 이 동작은 사용 하지 않으려는 예를 들어 때 경우는 <xref:System.Windows.Controls.InkCanvas>사용자 지정을 사용 하 여이 속성을 설정 하는 커서를 `true`, 커서 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>.</xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 변경 되지 것입니다</xref:System.Windows.Controls.InkCanvas>"
  example:
  - "The following example demonstrates how to use a cursor that is different than the one supplied by the <xref:System.Windows.Controls.InkCanvas>.  \n  \n [!code-cs[InkCanvasSamples#5](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#5)]\n [!code-vb[InkCanvasSamples#5](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#5)]"
  syntax:
    content: public bool UseCustomCursor { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Windows.Controls.InkCanvas&quot;> </xref> 사용자 지정 커서를 사용 하 고, 그렇지 않으면, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Controls.InkCanvas.UseCustomCursor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.InkCanvas.VisualChildrenCount
  id: VisualChildrenCount
  parent: System.Windows.Controls.InkCanvas
  langs:
  - csharp
  name: VisualChildrenCount
  nameWithType: InkCanvas.VisualChildrenCount
  fullName: System.Windows.Controls.InkCanvas.VisualChildrenCount
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "이 요소 내 시각적 자식 요소의 수를 가져옵니다."
  syntax:
    content: protected override int VisualChildrenCount { get; }
    return:
      type: System.Int32
      description: "이 요소에 대 한 시각적 자식 요소의 수입니다."
  overload: System.Windows.Controls.InkCanvas.VisualChildrenCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.FrameworkElement
  isExternal: false
  name: System.Windows.FrameworkElement
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Controls.InkCanvas.#ctor
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: InkCanvas()
  nameWithType: InkCanvas.InkCanvas()
  fullName: System.Windows.Controls.InkCanvas.InkCanvas()
- uid: System.Windows.Controls.InkCanvas.ActiveEditingMode
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: ActiveEditingMode
  nameWithType: InkCanvas.ActiveEditingMode
  fullName: System.Windows.Controls.InkCanvas.ActiveEditingMode
- uid: System.Windows.Controls.InkCanvasEditingMode
  parent: System.Windows.Controls
  isExternal: false
  name: InkCanvasEditingMode
  nameWithType: InkCanvasEditingMode
  fullName: System.Windows.Controls.InkCanvasEditingMode
- uid: System.Windows.Controls.InkCanvas.ActiveEditingModeChanged
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: ActiveEditingModeChanged
  nameWithType: InkCanvas.ActiveEditingModeChanged
  fullName: System.Windows.Controls.InkCanvas.ActiveEditingModeChanged
- uid: System.Windows.RoutedEventHandler
  parent: System.Windows
  isExternal: false
  name: RoutedEventHandler
  nameWithType: RoutedEventHandler
  fullName: System.Windows.RoutedEventHandler
- uid: System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: ActiveEditingModeChangedEvent
  nameWithType: InkCanvas.ActiveEditingModeChangedEvent
  fullName: System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.Controls.InkCanvas.ActiveEditingModeProperty
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: ActiveEditingModeProperty
  nameWithType: InkCanvas.ActiveEditingModeProperty
  fullName: System.Windows.Controls.InkCanvas.ActiveEditingModeProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Controls.InkCanvas.ArrangeOverride(System.Windows.Size)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: ArrangeOverride(Size)
  nameWithType: InkCanvas.ArrangeOverride(Size)
  fullName: System.Windows.Controls.InkCanvas.ArrangeOverride(Size)
- uid: System.Windows.Size
  parent: System.Windows
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Windows.Size
- uid: System.Windows.Controls.InkCanvas.Background
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: Background
  nameWithType: InkCanvas.Background
  fullName: System.Windows.Controls.InkCanvas.Background
- uid: System.Windows.Media.Brush
  parent: System.Windows.Media
  isExternal: false
  name: Brush
  nameWithType: Brush
  fullName: System.Windows.Media.Brush
- uid: System.Windows.Controls.InkCanvas.BackgroundProperty
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: BackgroundProperty
  nameWithType: InkCanvas.BackgroundProperty
  fullName: System.Windows.Controls.InkCanvas.BackgroundProperty
- uid: System.Windows.Controls.InkCanvas.BottomProperty
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: BottomProperty
  nameWithType: InkCanvas.BottomProperty
  fullName: System.Windows.Controls.InkCanvas.BottomProperty
- uid: System.Windows.Controls.InkCanvas.CanPaste
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: CanPaste()
  nameWithType: InkCanvas.CanPaste()
  fullName: System.Windows.Controls.InkCanvas.CanPaste()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.InkCanvas.Children
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: Children
  nameWithType: InkCanvas.Children
  fullName: System.Windows.Controls.InkCanvas.Children
- uid: System.Windows.Controls.UIElementCollection
  parent: System.Windows.Controls
  isExternal: false
  name: UIElementCollection
  nameWithType: UIElementCollection
  fullName: System.Windows.Controls.UIElementCollection
- uid: System.Windows.Controls.InkCanvas.CopySelection
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: CopySelection()
  nameWithType: InkCanvas.CopySelection()
  fullName: System.Windows.Controls.InkCanvas.CopySelection()
- uid: System.Windows.Controls.InkCanvas.CutSelection
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: CutSelection()
  nameWithType: InkCanvas.CutSelection()
  fullName: System.Windows.Controls.InkCanvas.CutSelection()
- uid: System.Windows.Controls.InkCanvas.DefaultDrawingAttributes
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: DefaultDrawingAttributes
  nameWithType: InkCanvas.DefaultDrawingAttributes
  fullName: System.Windows.Controls.InkCanvas.DefaultDrawingAttributes
- uid: System.Windows.Ink.DrawingAttributes
  parent: System.Windows.Ink
  isExternal: false
  name: DrawingAttributes
  nameWithType: DrawingAttributes
  fullName: System.Windows.Ink.DrawingAttributes
- uid: System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: DefaultDrawingAttributesProperty
  nameWithType: InkCanvas.DefaultDrawingAttributesProperty
  fullName: System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty
- uid: System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: DefaultDrawingAttributesReplaced
  nameWithType: InkCanvas.DefaultDrawingAttributesReplaced
  fullName: System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced
- uid: System.Windows.Ink.DrawingAttributesReplacedEventHandler
  parent: System.Windows.Ink
  isExternal: false
  name: DrawingAttributesReplacedEventHandler
  nameWithType: DrawingAttributesReplacedEventHandler
  fullName: System.Windows.Ink.DrawingAttributesReplacedEventHandler
- uid: System.Windows.Controls.InkCanvas.DefaultStylusPointDescription
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: DefaultStylusPointDescription
  nameWithType: InkCanvas.DefaultStylusPointDescription
  fullName: System.Windows.Controls.InkCanvas.DefaultStylusPointDescription
- uid: System.Windows.Input.StylusPointDescription
  parent: System.Windows.Input
  isExternal: false
  name: StylusPointDescription
  nameWithType: StylusPointDescription
  fullName: System.Windows.Input.StylusPointDescription
- uid: System.Windows.Controls.InkCanvas.DynamicRenderer
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: DynamicRenderer
  nameWithType: InkCanvas.DynamicRenderer
  fullName: System.Windows.Controls.InkCanvas.DynamicRenderer
- uid: System.Windows.Input.StylusPlugIns.DynamicRenderer
  parent: System.Windows.Input.StylusPlugIns
  isExternal: false
  name: DynamicRenderer
  nameWithType: DynamicRenderer
  fullName: System.Windows.Input.StylusPlugIns.DynamicRenderer
- uid: System.Windows.Controls.InkCanvas.EditingMode
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: EditingMode
  nameWithType: InkCanvas.EditingMode
  fullName: System.Windows.Controls.InkCanvas.EditingMode
- uid: System.Windows.Controls.InkCanvas.EditingModeChanged
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: EditingModeChanged
  nameWithType: InkCanvas.EditingModeChanged
  fullName: System.Windows.Controls.InkCanvas.EditingModeChanged
- uid: System.Windows.Controls.InkCanvas.EditingModeChangedEvent
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: EditingModeChangedEvent
  nameWithType: InkCanvas.EditingModeChangedEvent
  fullName: System.Windows.Controls.InkCanvas.EditingModeChangedEvent
- uid: System.Windows.Controls.InkCanvas.EditingModeInverted
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: EditingModeInverted
  nameWithType: InkCanvas.EditingModeInverted
  fullName: System.Windows.Controls.InkCanvas.EditingModeInverted
- uid: System.Windows.Controls.InkCanvas.EditingModeInvertedChanged
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: EditingModeInvertedChanged
  nameWithType: InkCanvas.EditingModeInvertedChanged
  fullName: System.Windows.Controls.InkCanvas.EditingModeInvertedChanged
- uid: System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: EditingModeInvertedChangedEvent
  nameWithType: InkCanvas.EditingModeInvertedChangedEvent
  fullName: System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent
- uid: System.Windows.Controls.InkCanvas.EditingModeInvertedProperty
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: EditingModeInvertedProperty
  nameWithType: InkCanvas.EditingModeInvertedProperty
  fullName: System.Windows.Controls.InkCanvas.EditingModeInvertedProperty
- uid: System.Windows.Controls.InkCanvas.EditingModeProperty
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: EditingModeProperty
  nameWithType: InkCanvas.EditingModeProperty
  fullName: System.Windows.Controls.InkCanvas.EditingModeProperty
- uid: System.Windows.Controls.InkCanvas.EraserShape
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: EraserShape
  nameWithType: InkCanvas.EraserShape
  fullName: System.Windows.Controls.InkCanvas.EraserShape
- uid: System.Windows.Ink.StylusShape
  parent: System.Windows.Ink
  isExternal: false
  name: StylusShape
  nameWithType: StylusShape
  fullName: System.Windows.Ink.StylusShape
- uid: System.Windows.Controls.InkCanvas.Gesture
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: Gesture
  nameWithType: InkCanvas.Gesture
  fullName: System.Windows.Controls.InkCanvas.Gesture
- uid: System.Windows.Controls.InkCanvasGestureEventHandler
  parent: System.Windows.Controls
  isExternal: false
  name: InkCanvasGestureEventHandler
  nameWithType: InkCanvasGestureEventHandler
  fullName: System.Windows.Controls.InkCanvasGestureEventHandler
- uid: System.Windows.Controls.InkCanvas.GestureEvent
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: GestureEvent
  nameWithType: InkCanvas.GestureEvent
  fullName: System.Windows.Controls.InkCanvas.GestureEvent
- uid: System.Windows.Controls.InkCanvas.GetBottom(System.Windows.UIElement)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: GetBottom(UIElement)
  nameWithType: InkCanvas.GetBottom(UIElement)
  fullName: System.Windows.Controls.InkCanvas.GetBottom(UIElement)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.UIElement
  parent: System.Windows
  isExternal: false
  name: UIElement
  nameWithType: UIElement
  fullName: System.Windows.UIElement
- uid: System.Windows.Controls.InkCanvas.GetEnabledGestures
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: GetEnabledGestures()
  nameWithType: InkCanvas.GetEnabledGestures()
  fullName: System.Windows.Controls.InkCanvas.GetEnabledGestures()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Ink.ApplicationGesture}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ApplicationGesture>
  nameWithType: ReadOnlyCollection<ApplicationGesture>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Ink.ApplicationGesture>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Windows.Ink.ApplicationGesture>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Ink.ApplicationGesture
    name: ApplicationGesture
    nameWithType: ApplicationGesture
    fullName: ApplicationGesture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Controls.InkCanvas.GetLeft(System.Windows.UIElement)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: GetLeft(UIElement)
  nameWithType: InkCanvas.GetLeft(UIElement)
  fullName: System.Windows.Controls.InkCanvas.GetLeft(UIElement)
- uid: System.Windows.Controls.InkCanvas.GetRight(System.Windows.UIElement)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: GetRight(UIElement)
  nameWithType: InkCanvas.GetRight(UIElement)
  fullName: System.Windows.Controls.InkCanvas.GetRight(UIElement)
- uid: System.Windows.Controls.InkCanvas.GetSelectedElements
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: GetSelectedElements()
  nameWithType: InkCanvas.GetSelectedElements()
  fullName: System.Windows.Controls.InkCanvas.GetSelectedElements()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.UIElement}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<UIElement>
  nameWithType: ReadOnlyCollection<UIElement>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.UIElement>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Windows.UIElement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.UIElement
    name: UIElement
    nameWithType: UIElement
    fullName: UIElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Controls.InkCanvas.GetSelectedStrokes
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: GetSelectedStrokes()
  nameWithType: InkCanvas.GetSelectedStrokes()
  fullName: System.Windows.Controls.InkCanvas.GetSelectedStrokes()
- uid: System.Windows.Ink.StrokeCollection
  parent: System.Windows.Ink
  isExternal: false
  name: StrokeCollection
  nameWithType: StrokeCollection
  fullName: System.Windows.Ink.StrokeCollection
- uid: System.Windows.Controls.InkCanvas.GetSelectionBounds
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: GetSelectionBounds()
  nameWithType: InkCanvas.GetSelectionBounds()
  fullName: System.Windows.Controls.InkCanvas.GetSelectionBounds()
- uid: System.Windows.Rect
  parent: System.Windows
  isExternal: false
  name: Rect
  nameWithType: Rect
  fullName: System.Windows.Rect
- uid: System.Windows.Controls.InkCanvas.GetTop(System.Windows.UIElement)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: GetTop(UIElement)
  nameWithType: InkCanvas.GetTop(UIElement)
  fullName: System.Windows.Controls.InkCanvas.GetTop(UIElement)
- uid: System.Windows.Controls.InkCanvas.GetVisualChild(System.Int32)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: GetVisualChild(Int32)
  nameWithType: InkCanvas.GetVisualChild(Int32)
  fullName: System.Windows.Controls.InkCanvas.GetVisualChild(Int32)
- uid: System.Windows.Media.Visual
  parent: System.Windows.Media
  isExternal: false
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Controls.InkCanvas.HitTestCore(System.Windows.Media.PointHitTestParameters)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: HitTestCore(PointHitTestParameters)
  nameWithType: InkCanvas.HitTestCore(PointHitTestParameters)
  fullName: System.Windows.Controls.InkCanvas.HitTestCore(PointHitTestParameters)
- uid: System.Windows.Media.HitTestResult
  parent: System.Windows.Media
  isExternal: false
  name: HitTestResult
  nameWithType: HitTestResult
  fullName: System.Windows.Media.HitTestResult
- uid: System.Windows.Media.PointHitTestParameters
  parent: System.Windows.Media
  isExternal: false
  name: PointHitTestParameters
  nameWithType: PointHitTestParameters
  fullName: System.Windows.Media.PointHitTestParameters
- uid: System.Windows.Controls.InkCanvas.HitTestSelection(System.Windows.Point)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: HitTestSelection(Point)
  nameWithType: InkCanvas.HitTestSelection(Point)
  fullName: System.Windows.Controls.InkCanvas.HitTestSelection(Point)
- uid: System.Windows.Controls.InkCanvasSelectionHitResult
  parent: System.Windows.Controls
  isExternal: false
  name: InkCanvasSelectionHitResult
  nameWithType: InkCanvasSelectionHitResult
  fullName: System.Windows.Controls.InkCanvasSelectionHitResult
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Controls.InkCanvas.InkPresenter
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: InkPresenter
  nameWithType: InkCanvas.InkPresenter
  fullName: System.Windows.Controls.InkCanvas.InkPresenter
- uid: System.Windows.Controls.InkPresenter
  parent: System.Windows.Controls
  isExternal: false
  name: InkPresenter
  nameWithType: InkPresenter
  fullName: System.Windows.Controls.InkPresenter
- uid: System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: IsGestureRecognizerAvailable
  nameWithType: InkCanvas.IsGestureRecognizerAvailable
  fullName: System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable
- uid: System.Windows.Controls.InkCanvas.LeftProperty
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: LeftProperty
  nameWithType: InkCanvas.LeftProperty
  fullName: System.Windows.Controls.InkCanvas.LeftProperty
- uid: System.Windows.Controls.InkCanvas.LogicalChildren
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: LogicalChildren
  nameWithType: InkCanvas.LogicalChildren
  fullName: System.Windows.Controls.InkCanvas.LogicalChildren
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Controls.InkCanvas.MeasureOverride(System.Windows.Size)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: MeasureOverride(Size)
  nameWithType: InkCanvas.MeasureOverride(Size)
  fullName: System.Windows.Controls.InkCanvas.MeasureOverride(Size)
- uid: System.Windows.Controls.InkCanvas.MoveEnabled
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: MoveEnabled
  nameWithType: InkCanvas.MoveEnabled
  fullName: System.Windows.Controls.InkCanvas.MoveEnabled
- uid: System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(System.Windows.RoutedEventArgs)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnActiveEditingModeChanged(RoutedEventArgs)
  nameWithType: InkCanvas.OnActiveEditingModeChanged(RoutedEventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(RoutedEventArgs)
- uid: System.Windows.RoutedEventArgs
  parent: System.Windows
  isExternal: false
  name: RoutedEventArgs
  nameWithType: RoutedEventArgs
  fullName: System.Windows.RoutedEventArgs
- uid: System.Windows.Controls.InkCanvas.OnCreateAutomationPeer
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnCreateAutomationPeer()
  nameWithType: InkCanvas.OnCreateAutomationPeer()
  fullName: System.Windows.Controls.InkCanvas.OnCreateAutomationPeer()
- uid: System.Windows.Automation.Peers.AutomationPeer
  parent: System.Windows.Automation.Peers
  isExternal: false
  name: AutomationPeer
  nameWithType: AutomationPeer
  fullName: System.Windows.Automation.Peers.AutomationPeer
- uid: System.Windows.Controls.InkCanvas.OnDefaultDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnDefaultDrawingAttributesReplaced(DrawingAttributesReplacedEventArgs)
  nameWithType: InkCanvas.OnDefaultDrawingAttributesReplaced(DrawingAttributesReplacedEventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnDefaultDrawingAttributesReplaced(DrawingAttributesReplacedEventArgs)
- uid: System.Windows.Ink.DrawingAttributesReplacedEventArgs
  parent: System.Windows.Ink
  isExternal: false
  name: DrawingAttributesReplacedEventArgs
  nameWithType: DrawingAttributesReplacedEventArgs
  fullName: System.Windows.Ink.DrawingAttributesReplacedEventArgs
- uid: System.Windows.Controls.InkCanvas.OnEditingModeChanged(System.Windows.RoutedEventArgs)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnEditingModeChanged(RoutedEventArgs)
  nameWithType: InkCanvas.OnEditingModeChanged(RoutedEventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnEditingModeChanged(RoutedEventArgs)
- uid: System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged(System.Windows.RoutedEventArgs)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnEditingModeInvertedChanged(RoutedEventArgs)
  nameWithType: InkCanvas.OnEditingModeInvertedChanged(RoutedEventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged(RoutedEventArgs)
- uid: System.Windows.Controls.InkCanvas.OnGesture(System.Windows.Controls.InkCanvasGestureEventArgs)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnGesture(InkCanvasGestureEventArgs)
  nameWithType: InkCanvas.OnGesture(InkCanvasGestureEventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnGesture(InkCanvasGestureEventArgs)
- uid: System.Windows.Controls.InkCanvasGestureEventArgs
  parent: System.Windows.Controls
  isExternal: false
  name: InkCanvasGestureEventArgs
  nameWithType: InkCanvasGestureEventArgs
  fullName: System.Windows.Controls.InkCanvasGestureEventArgs
- uid: System.Windows.Controls.InkCanvas.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)
  nameWithType: InkCanvas.OnPropertyChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnPropertyChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.DependencyPropertyChangedEventArgs
  parent: System.Windows
  isExternal: false
  name: DependencyPropertyChangedEventArgs
  nameWithType: DependencyPropertyChangedEventArgs
  fullName: System.Windows.DependencyPropertyChangedEventArgs
- uid: System.Windows.Controls.InkCanvas.OnSelectionChanged(System.EventArgs)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnSelectionChanged(EventArgs)
  nameWithType: InkCanvas.OnSelectionChanged(EventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnSelectionChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Controls.InkCanvas.OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnSelectionChanging(InkCanvasSelectionChangingEventArgs)
  nameWithType: InkCanvas.OnSelectionChanging(InkCanvasSelectionChangingEventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnSelectionChanging(InkCanvasSelectionChangingEventArgs)
- uid: System.Windows.Controls.InkCanvasSelectionChangingEventArgs
  parent: System.Windows.Controls
  isExternal: false
  name: InkCanvasSelectionChangingEventArgs
  nameWithType: InkCanvasSelectionChangingEventArgs
  fullName: System.Windows.Controls.InkCanvasSelectionChangingEventArgs
- uid: System.Windows.Controls.InkCanvas.OnSelectionMoved(System.EventArgs)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnSelectionMoved(EventArgs)
  nameWithType: InkCanvas.OnSelectionMoved(EventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnSelectionMoved(EventArgs)
- uid: System.Windows.Controls.InkCanvas.OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnSelectionMoving(InkCanvasSelectionEditingEventArgs)
  nameWithType: InkCanvas.OnSelectionMoving(InkCanvasSelectionEditingEventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnSelectionMoving(InkCanvasSelectionEditingEventArgs)
- uid: System.Windows.Controls.InkCanvasSelectionEditingEventArgs
  parent: System.Windows.Controls
  isExternal: false
  name: InkCanvasSelectionEditingEventArgs
  nameWithType: InkCanvasSelectionEditingEventArgs
  fullName: System.Windows.Controls.InkCanvasSelectionEditingEventArgs
- uid: System.Windows.Controls.InkCanvas.OnSelectionResized(System.EventArgs)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnSelectionResized(EventArgs)
  nameWithType: InkCanvas.OnSelectionResized(EventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnSelectionResized(EventArgs)
- uid: System.Windows.Controls.InkCanvas.OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnSelectionResizing(InkCanvasSelectionEditingEventArgs)
  nameWithType: InkCanvas.OnSelectionResizing(InkCanvasSelectionEditingEventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnSelectionResizing(InkCanvasSelectionEditingEventArgs)
- uid: System.Windows.Controls.InkCanvas.OnStrokeCollected(System.Windows.Controls.InkCanvasStrokeCollectedEventArgs)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnStrokeCollected(InkCanvasStrokeCollectedEventArgs)
  nameWithType: InkCanvas.OnStrokeCollected(InkCanvasStrokeCollectedEventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnStrokeCollected(InkCanvasStrokeCollectedEventArgs)
- uid: System.Windows.Controls.InkCanvasStrokeCollectedEventArgs
  parent: System.Windows.Controls
  isExternal: false
  name: InkCanvasStrokeCollectedEventArgs
  nameWithType: InkCanvasStrokeCollectedEventArgs
  fullName: System.Windows.Controls.InkCanvasStrokeCollectedEventArgs
- uid: System.Windows.Controls.InkCanvas.OnStrokeErased(System.Windows.RoutedEventArgs)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnStrokeErased(RoutedEventArgs)
  nameWithType: InkCanvas.OnStrokeErased(RoutedEventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnStrokeErased(RoutedEventArgs)
- uid: System.Windows.Controls.InkCanvas.OnStrokeErasing(System.Windows.Controls.InkCanvasStrokeErasingEventArgs)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnStrokeErasing(InkCanvasStrokeErasingEventArgs)
  nameWithType: InkCanvas.OnStrokeErasing(InkCanvasStrokeErasingEventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnStrokeErasing(InkCanvasStrokeErasingEventArgs)
- uid: System.Windows.Controls.InkCanvasStrokeErasingEventArgs
  parent: System.Windows.Controls
  isExternal: false
  name: InkCanvasStrokeErasingEventArgs
  nameWithType: InkCanvasStrokeErasingEventArgs
  fullName: System.Windows.Controls.InkCanvasStrokeErasingEventArgs
- uid: System.Windows.Controls.InkCanvas.OnStrokesReplaced(System.Windows.Controls.InkCanvasStrokesReplacedEventArgs)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnStrokesReplaced(InkCanvasStrokesReplacedEventArgs)
  nameWithType: InkCanvas.OnStrokesReplaced(InkCanvasStrokesReplacedEventArgs)
  fullName: System.Windows.Controls.InkCanvas.OnStrokesReplaced(InkCanvasStrokesReplacedEventArgs)
- uid: System.Windows.Controls.InkCanvasStrokesReplacedEventArgs
  parent: System.Windows.Controls
  isExternal: false
  name: InkCanvasStrokesReplacedEventArgs
  nameWithType: InkCanvasStrokesReplacedEventArgs
  fullName: System.Windows.Controls.InkCanvasStrokesReplacedEventArgs
- uid: System.Windows.Controls.InkCanvas.Paste
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: Paste()
  nameWithType: InkCanvas.Paste()
  fullName: System.Windows.Controls.InkCanvas.Paste()
- uid: System.Windows.Controls.InkCanvas.Paste(System.Windows.Point)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: Paste(Point)
  nameWithType: InkCanvas.Paste(Point)
  fullName: System.Windows.Controls.InkCanvas.Paste(Point)
- uid: System.Windows.Controls.InkCanvas.PreferredPasteFormats
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: PreferredPasteFormats
  nameWithType: InkCanvas.PreferredPasteFormats
  fullName: System.Windows.Controls.InkCanvas.PreferredPasteFormats
- uid: System.Collections.Generic.IEnumerable{System.Windows.Controls.InkCanvasClipboardFormat}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<InkCanvasClipboardFormat>
  nameWithType: IEnumerable<InkCanvasClipboardFormat>
  fullName: System.Collections.Generic.IEnumerable<System.Windows.Controls.InkCanvasClipboardFormat>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Windows.Controls.InkCanvasClipboardFormat>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Controls.InkCanvasClipboardFormat
    name: InkCanvasClipboardFormat
    nameWithType: InkCanvasClipboardFormat
    fullName: InkCanvasClipboardFormat
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Controls.InkCanvas.ResizeEnabled
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: ResizeEnabled
  nameWithType: InkCanvas.ResizeEnabled
  fullName: System.Windows.Controls.InkCanvas.ResizeEnabled
- uid: System.Windows.Controls.InkCanvas.RightProperty
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: RightProperty
  nameWithType: InkCanvas.RightProperty
  fullName: System.Windows.Controls.InkCanvas.RightProperty
- uid: System.Windows.Controls.InkCanvas.Select(System.Collections.Generic.IEnumerable{System.Windows.UIElement})
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: Select(IEnumerable<UIElement>)
  nameWithType: InkCanvas.Select(IEnumerable<UIElement>)
  fullName: System.Windows.Controls.InkCanvas.Select(IEnumerable<UIElement>)
- uid: System.Collections.Generic.IEnumerable{System.Windows.UIElement}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<UIElement>
  nameWithType: IEnumerable<UIElement>
  fullName: System.Collections.Generic.IEnumerable<System.Windows.UIElement>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Windows.UIElement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.UIElement
    name: UIElement
    nameWithType: UIElement
    fullName: UIElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: Select(StrokeCollection)
  nameWithType: InkCanvas.Select(StrokeCollection)
  fullName: System.Windows.Controls.InkCanvas.Select(StrokeCollection)
- uid: System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: Select(StrokeCollection,IEnumerable<UIElement>)
  nameWithType: InkCanvas.Select(StrokeCollection,IEnumerable<UIElement>)
  fullName: System.Windows.Controls.InkCanvas.Select(StrokeCollection,IEnumerable<UIElement>)
- uid: System.Windows.Controls.InkCanvas.SelectionChanged
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: SelectionChanged
  nameWithType: InkCanvas.SelectionChanged
  fullName: System.Windows.Controls.InkCanvas.SelectionChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Controls.InkCanvas.SelectionChanging
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: SelectionChanging
  nameWithType: InkCanvas.SelectionChanging
  fullName: System.Windows.Controls.InkCanvas.SelectionChanging
- uid: System.Windows.Controls.InkCanvasSelectionChangingEventHandler
  parent: System.Windows.Controls
  isExternal: false
  name: InkCanvasSelectionChangingEventHandler
  nameWithType: InkCanvasSelectionChangingEventHandler
  fullName: System.Windows.Controls.InkCanvasSelectionChangingEventHandler
- uid: System.Windows.Controls.InkCanvas.SelectionMoved
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: SelectionMoved
  nameWithType: InkCanvas.SelectionMoved
  fullName: System.Windows.Controls.InkCanvas.SelectionMoved
- uid: System.Windows.Controls.InkCanvas.SelectionMoving
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: SelectionMoving
  nameWithType: InkCanvas.SelectionMoving
  fullName: System.Windows.Controls.InkCanvas.SelectionMoving
- uid: System.Windows.Controls.InkCanvasSelectionEditingEventHandler
  parent: System.Windows.Controls
  isExternal: false
  name: InkCanvasSelectionEditingEventHandler
  nameWithType: InkCanvasSelectionEditingEventHandler
  fullName: System.Windows.Controls.InkCanvasSelectionEditingEventHandler
- uid: System.Windows.Controls.InkCanvas.SelectionResized
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: SelectionResized
  nameWithType: InkCanvas.SelectionResized
  fullName: System.Windows.Controls.InkCanvas.SelectionResized
- uid: System.Windows.Controls.InkCanvas.SelectionResizing
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: SelectionResizing
  nameWithType: InkCanvas.SelectionResizing
  fullName: System.Windows.Controls.InkCanvas.SelectionResizing
- uid: System.Windows.Controls.InkCanvas.SetBottom(System.Windows.UIElement,System.Double)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: SetBottom(UIElement,Double)
  nameWithType: InkCanvas.SetBottom(UIElement,Double)
  fullName: System.Windows.Controls.InkCanvas.SetBottom(UIElement,Double)
- uid: System.Windows.Controls.InkCanvas.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: SetEnabledGestures(IEnumerable<ApplicationGesture>)
  nameWithType: InkCanvas.SetEnabledGestures(IEnumerable<ApplicationGesture>)
  fullName: System.Windows.Controls.InkCanvas.SetEnabledGestures(IEnumerable<ApplicationGesture>)
- uid: System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ApplicationGesture>
  nameWithType: IEnumerable<ApplicationGesture>
  fullName: System.Collections.Generic.IEnumerable<System.Windows.Ink.ApplicationGesture>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Windows.Ink.ApplicationGesture>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Ink.ApplicationGesture
    name: ApplicationGesture
    nameWithType: ApplicationGesture
    fullName: ApplicationGesture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Controls.InkCanvas.SetLeft(System.Windows.UIElement,System.Double)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: SetLeft(UIElement,Double)
  nameWithType: InkCanvas.SetLeft(UIElement,Double)
  fullName: System.Windows.Controls.InkCanvas.SetLeft(UIElement,Double)
- uid: System.Windows.Controls.InkCanvas.SetRight(System.Windows.UIElement,System.Double)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: SetRight(UIElement,Double)
  nameWithType: InkCanvas.SetRight(UIElement,Double)
  fullName: System.Windows.Controls.InkCanvas.SetRight(UIElement,Double)
- uid: System.Windows.Controls.InkCanvas.SetTop(System.Windows.UIElement,System.Double)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: SetTop(UIElement,Double)
  nameWithType: InkCanvas.SetTop(UIElement,Double)
  fullName: System.Windows.Controls.InkCanvas.SetTop(UIElement,Double)
- uid: System.Windows.Controls.InkCanvas.StrokeCollected
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: StrokeCollected
  nameWithType: InkCanvas.StrokeCollected
  fullName: System.Windows.Controls.InkCanvas.StrokeCollected
- uid: System.Windows.Controls.InkCanvasStrokeCollectedEventHandler
  parent: System.Windows.Controls
  isExternal: false
  name: InkCanvasStrokeCollectedEventHandler
  nameWithType: InkCanvasStrokeCollectedEventHandler
  fullName: System.Windows.Controls.InkCanvasStrokeCollectedEventHandler
- uid: System.Windows.Controls.InkCanvas.StrokeCollectedEvent
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: StrokeCollectedEvent
  nameWithType: InkCanvas.StrokeCollectedEvent
  fullName: System.Windows.Controls.InkCanvas.StrokeCollectedEvent
- uid: System.Windows.Controls.InkCanvas.StrokeErased
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: StrokeErased
  nameWithType: InkCanvas.StrokeErased
  fullName: System.Windows.Controls.InkCanvas.StrokeErased
- uid: System.Windows.Controls.InkCanvas.StrokeErasedEvent
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: StrokeErasedEvent
  nameWithType: InkCanvas.StrokeErasedEvent
  fullName: System.Windows.Controls.InkCanvas.StrokeErasedEvent
- uid: System.Windows.Controls.InkCanvas.StrokeErasing
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: StrokeErasing
  nameWithType: InkCanvas.StrokeErasing
  fullName: System.Windows.Controls.InkCanvas.StrokeErasing
- uid: System.Windows.Controls.InkCanvasStrokeErasingEventHandler
  parent: System.Windows.Controls
  isExternal: false
  name: InkCanvasStrokeErasingEventHandler
  nameWithType: InkCanvasStrokeErasingEventHandler
  fullName: System.Windows.Controls.InkCanvasStrokeErasingEventHandler
- uid: System.Windows.Controls.InkCanvas.Strokes
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: Strokes
  nameWithType: InkCanvas.Strokes
  fullName: System.Windows.Controls.InkCanvas.Strokes
- uid: System.Windows.Controls.InkCanvas.StrokesProperty
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: StrokesProperty
  nameWithType: InkCanvas.StrokesProperty
  fullName: System.Windows.Controls.InkCanvas.StrokesProperty
- uid: System.Windows.Controls.InkCanvas.StrokesReplaced
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: StrokesReplaced
  nameWithType: InkCanvas.StrokesReplaced
  fullName: System.Windows.Controls.InkCanvas.StrokesReplaced
- uid: System.Windows.Controls.InkCanvasStrokesReplacedEventHandler
  parent: System.Windows.Controls
  isExternal: false
  name: InkCanvasStrokesReplacedEventHandler
  nameWithType: InkCanvasStrokesReplacedEventHandler
  fullName: System.Windows.Controls.InkCanvasStrokesReplacedEventHandler
- uid: System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddChild(System.Object)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: InkCanvas.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Controls.InkCanvas.System.Windows.Markup.IAddChild.AddChild(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddText(System.String)
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: InkCanvas.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Controls.InkCanvas.System.Windows.Markup.IAddChild.AddText(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Controls.InkCanvas.TopProperty
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: TopProperty
  nameWithType: InkCanvas.TopProperty
  fullName: System.Windows.Controls.InkCanvas.TopProperty
- uid: System.Windows.Controls.InkCanvas.UseCustomCursor
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: UseCustomCursor
  nameWithType: InkCanvas.UseCustomCursor
  fullName: System.Windows.Controls.InkCanvas.UseCustomCursor
- uid: System.Windows.Controls.InkCanvas.VisualChildrenCount
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: VisualChildrenCount
  nameWithType: InkCanvas.VisualChildrenCount
  fullName: System.Windows.Controls.InkCanvas.VisualChildrenCount
- uid: System.Windows.Controls.InkCanvas.#ctor*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: InkCanvas
  nameWithType: InkCanvas.InkCanvas
- uid: System.Windows.Controls.InkCanvas.ActiveEditingMode*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: ActiveEditingMode
  nameWithType: InkCanvas.ActiveEditingMode
- uid: System.Windows.Controls.InkCanvas.ArrangeOverride*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: ArrangeOverride
  nameWithType: InkCanvas.ArrangeOverride
- uid: System.Windows.Controls.InkCanvas.Background*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: Background
  nameWithType: InkCanvas.Background
- uid: System.Windows.Controls.InkCanvas.CanPaste*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: CanPaste
  nameWithType: InkCanvas.CanPaste
- uid: System.Windows.Controls.InkCanvas.Children*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: Children
  nameWithType: InkCanvas.Children
- uid: System.Windows.Controls.InkCanvas.CopySelection*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: CopySelection
  nameWithType: InkCanvas.CopySelection
- uid: System.Windows.Controls.InkCanvas.CutSelection*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: CutSelection
  nameWithType: InkCanvas.CutSelection
- uid: System.Windows.Controls.InkCanvas.DefaultDrawingAttributes*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: DefaultDrawingAttributes
  nameWithType: InkCanvas.DefaultDrawingAttributes
- uid: System.Windows.Controls.InkCanvas.DefaultStylusPointDescription*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: DefaultStylusPointDescription
  nameWithType: InkCanvas.DefaultStylusPointDescription
- uid: System.Windows.Controls.InkCanvas.DynamicRenderer*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: DynamicRenderer
  nameWithType: InkCanvas.DynamicRenderer
- uid: System.Windows.Controls.InkCanvas.EditingMode*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: EditingMode
  nameWithType: InkCanvas.EditingMode
- uid: System.Windows.Controls.InkCanvas.EditingModeInverted*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: EditingModeInverted
  nameWithType: InkCanvas.EditingModeInverted
- uid: System.Windows.Controls.InkCanvas.EraserShape*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: EraserShape
  nameWithType: InkCanvas.EraserShape
- uid: System.Windows.Controls.InkCanvas.GetBottom*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: GetBottom
  nameWithType: InkCanvas.GetBottom
- uid: System.Windows.Controls.InkCanvas.GetEnabledGestures*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: GetEnabledGestures
  nameWithType: InkCanvas.GetEnabledGestures
- uid: System.Windows.Controls.InkCanvas.GetLeft*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: GetLeft
  nameWithType: InkCanvas.GetLeft
- uid: System.Windows.Controls.InkCanvas.GetRight*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: GetRight
  nameWithType: InkCanvas.GetRight
- uid: System.Windows.Controls.InkCanvas.GetSelectedElements*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: GetSelectedElements
  nameWithType: InkCanvas.GetSelectedElements
- uid: System.Windows.Controls.InkCanvas.GetSelectedStrokes*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: GetSelectedStrokes
  nameWithType: InkCanvas.GetSelectedStrokes
- uid: System.Windows.Controls.InkCanvas.GetSelectionBounds*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: GetSelectionBounds
  nameWithType: InkCanvas.GetSelectionBounds
- uid: System.Windows.Controls.InkCanvas.GetTop*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: GetTop
  nameWithType: InkCanvas.GetTop
- uid: System.Windows.Controls.InkCanvas.GetVisualChild*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: GetVisualChild
  nameWithType: InkCanvas.GetVisualChild
- uid: System.Windows.Controls.InkCanvas.HitTestCore*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: HitTestCore
  nameWithType: InkCanvas.HitTestCore
- uid: System.Windows.Controls.InkCanvas.HitTestSelection*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: HitTestSelection
  nameWithType: InkCanvas.HitTestSelection
- uid: System.Windows.Controls.InkCanvas.InkPresenter*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: InkPresenter
  nameWithType: InkCanvas.InkPresenter
- uid: System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: IsGestureRecognizerAvailable
  nameWithType: InkCanvas.IsGestureRecognizerAvailable
- uid: System.Windows.Controls.InkCanvas.LogicalChildren*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: LogicalChildren
  nameWithType: InkCanvas.LogicalChildren
- uid: System.Windows.Controls.InkCanvas.MeasureOverride*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: MeasureOverride
  nameWithType: InkCanvas.MeasureOverride
- uid: System.Windows.Controls.InkCanvas.MoveEnabled*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: MoveEnabled
  nameWithType: InkCanvas.MoveEnabled
- uid: System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnActiveEditingModeChanged
  nameWithType: InkCanvas.OnActiveEditingModeChanged
- uid: System.Windows.Controls.InkCanvas.OnCreateAutomationPeer*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnCreateAutomationPeer
  nameWithType: InkCanvas.OnCreateAutomationPeer
- uid: System.Windows.Controls.InkCanvas.OnDefaultDrawingAttributesReplaced*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnDefaultDrawingAttributesReplaced
  nameWithType: InkCanvas.OnDefaultDrawingAttributesReplaced
- uid: System.Windows.Controls.InkCanvas.OnEditingModeChanged*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnEditingModeChanged
  nameWithType: InkCanvas.OnEditingModeChanged
- uid: System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnEditingModeInvertedChanged
  nameWithType: InkCanvas.OnEditingModeInvertedChanged
- uid: System.Windows.Controls.InkCanvas.OnGesture*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnGesture
  nameWithType: InkCanvas.OnGesture
- uid: System.Windows.Controls.InkCanvas.OnPropertyChanged*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnPropertyChanged
  nameWithType: InkCanvas.OnPropertyChanged
- uid: System.Windows.Controls.InkCanvas.OnSelectionChanged*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnSelectionChanged
  nameWithType: InkCanvas.OnSelectionChanged
- uid: System.Windows.Controls.InkCanvas.OnSelectionChanging*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnSelectionChanging
  nameWithType: InkCanvas.OnSelectionChanging
- uid: System.Windows.Controls.InkCanvas.OnSelectionMoved*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnSelectionMoved
  nameWithType: InkCanvas.OnSelectionMoved
- uid: System.Windows.Controls.InkCanvas.OnSelectionMoving*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnSelectionMoving
  nameWithType: InkCanvas.OnSelectionMoving
- uid: System.Windows.Controls.InkCanvas.OnSelectionResized*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnSelectionResized
  nameWithType: InkCanvas.OnSelectionResized
- uid: System.Windows.Controls.InkCanvas.OnSelectionResizing*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnSelectionResizing
  nameWithType: InkCanvas.OnSelectionResizing
- uid: System.Windows.Controls.InkCanvas.OnStrokeCollected*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnStrokeCollected
  nameWithType: InkCanvas.OnStrokeCollected
- uid: System.Windows.Controls.InkCanvas.OnStrokeErased*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnStrokeErased
  nameWithType: InkCanvas.OnStrokeErased
- uid: System.Windows.Controls.InkCanvas.OnStrokeErasing*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnStrokeErasing
  nameWithType: InkCanvas.OnStrokeErasing
- uid: System.Windows.Controls.InkCanvas.OnStrokesReplaced*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: OnStrokesReplaced
  nameWithType: InkCanvas.OnStrokesReplaced
- uid: System.Windows.Controls.InkCanvas.Paste*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: Paste
  nameWithType: InkCanvas.Paste
- uid: System.Windows.Controls.InkCanvas.PreferredPasteFormats*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: PreferredPasteFormats
  nameWithType: InkCanvas.PreferredPasteFormats
- uid: System.Windows.Controls.InkCanvas.ResizeEnabled*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: ResizeEnabled
  nameWithType: InkCanvas.ResizeEnabled
- uid: System.Windows.Controls.InkCanvas.Select*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: Select
  nameWithType: InkCanvas.Select
- uid: System.Windows.Controls.InkCanvas.SetBottom*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: SetBottom
  nameWithType: InkCanvas.SetBottom
- uid: System.Windows.Controls.InkCanvas.SetEnabledGestures*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: SetEnabledGestures
  nameWithType: InkCanvas.SetEnabledGestures
- uid: System.Windows.Controls.InkCanvas.SetLeft*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: SetLeft
  nameWithType: InkCanvas.SetLeft
- uid: System.Windows.Controls.InkCanvas.SetRight*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: SetRight
  nameWithType: InkCanvas.SetRight
- uid: System.Windows.Controls.InkCanvas.SetTop*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: SetTop
  nameWithType: InkCanvas.SetTop
- uid: System.Windows.Controls.InkCanvas.Strokes*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: Strokes
  nameWithType: InkCanvas.Strokes
- uid: System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddChild*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild
  nameWithType: InkCanvas.System.Windows.Markup.IAddChild.AddChild
- uid: System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddText*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText
  nameWithType: InkCanvas.System.Windows.Markup.IAddChild.AddText
- uid: System.Windows.Controls.InkCanvas.UseCustomCursor*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: UseCustomCursor
  nameWithType: InkCanvas.UseCustomCursor
- uid: System.Windows.Controls.InkCanvas.VisualChildrenCount*
  parent: System.Windows.Controls.InkCanvas
  isExternal: false
  name: VisualChildrenCount
  nameWithType: InkCanvas.VisualChildrenCount
