### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeBinaryOperatorExpression
  id: CodeBinaryOperatorExpression
  children:
  - System.CodeDom.CodeBinaryOperatorExpression.#ctor
  - System.CodeDom.CodeBinaryOperatorExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeBinaryOperatorType,System.CodeDom.CodeExpression)
  - System.CodeDom.CodeBinaryOperatorExpression.Left
  - System.CodeDom.CodeBinaryOperatorExpression.Operator
  - System.CodeDom.CodeBinaryOperatorExpression.Right
  langs:
  - csharp
  name: CodeBinaryOperatorExpression
  nameWithType: CodeBinaryOperatorExpression
  fullName: System.CodeDom.CodeBinaryOperatorExpression
  type: Class
  summary: "두 식 간에 이항 연산의 구성 되는 식을 나타냅니다."
  remarks: "CodeBinaryOperatorExpression 이항 연산자를 포함 하는 코드 식을 나타내는 데 사용할 수 있습니다. 이항 연산자의 예로 같음 (`==`), 더하기 (`+`), 비트 및 (`|`) 연산자. <xref:System.CodeDom.CodeBinaryOperatorType>열거형에는 여러 언어에서 지원 되는 기본, 자주 사용 되는 이항 연산자의 집합을 나타냅니다.</xref:System.CodeDom.CodeBinaryOperatorType>"
  example:
  - "This example demonstrates use of a CodeBinaryOperatorExpression to add two numbers together.  \n  \n [!code-cs[CodeBinaryOperatorExpression#2](~/add/codesnippet/csharp/t-system.codedom.codebin_1.cs)]\n [!code-cpp[CodeBinaryOperatorExpression#2](~/add/codesnippet/cpp/t-system.codedom.codebin_1.cpp)]\n [!code-vb[CodeBinaryOperatorExpression#2](~/add/codesnippet/visualbasic/t-system.codedom.codebin_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeBinaryOperatorExpression : System.CodeDom.CodeExpression
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  - System.CodeDom.CodeExpression
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeObject.UserData
  platform:
  - net462
- uid: System.CodeDom.CodeBinaryOperatorExpression.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeBinaryOperatorExpression
  langs:
  - csharp
  name: CodeBinaryOperatorExpression()
  nameWithType: CodeBinaryOperatorExpression.CodeBinaryOperatorExpression()
  fullName: System.CodeDom.CodeBinaryOperatorExpression.CodeBinaryOperatorExpression()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.CodeDom.CodeBinaryOperatorExpression&quot;> </xref> 클래스입니다."
  syntax:
    content: public CodeBinaryOperatorExpression ();
    parameters: []
  overload: System.CodeDom.CodeBinaryOperatorExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeBinaryOperatorExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeBinaryOperatorType,System.CodeDom.CodeExpression)
  id: '#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeBinaryOperatorType,System.CodeDom.CodeExpression)'
  parent: System.CodeDom.CodeBinaryOperatorExpression
  langs:
  - csharp
  name: CodeBinaryOperatorExpression(CodeExpression,CodeBinaryOperatorType,CodeExpression)
  nameWithType: CodeBinaryOperatorExpression.CodeBinaryOperatorExpression(CodeExpression,CodeBinaryOperatorType,CodeExpression)
  fullName: System.CodeDom.CodeBinaryOperatorExpression.CodeBinaryOperatorExpression(CodeExpression,CodeBinaryOperatorType,CodeExpression)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.CodeDom.CodeBinaryOperatorExpression&quot;> </xref> 클래스 지정된 된 매개 변수를 사용 합니다."
  syntax:
    content: public CodeBinaryOperatorExpression (System.CodeDom.CodeExpression left, System.CodeDom.CodeBinaryOperatorType op, System.CodeDom.CodeExpression right);
    parameters:
    - id: left
      type: System.CodeDom.CodeExpression
      description: "<xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> 연산자의 왼쪽에 있습니다."
    - id: op
      type: System.CodeDom.CodeBinaryOperatorType
      description: "A <xref href=&quot;System.CodeDom.CodeBinaryOperatorType&quot;> </xref> 연산자의 유형을 나타내는입니다."
    - id: right
      type: System.CodeDom.CodeExpression
      description: "<xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> 연산자의 오른쪽에 있습니다."
  overload: System.CodeDom.CodeBinaryOperatorExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeBinaryOperatorExpression.Left
  id: Left
  parent: System.CodeDom.CodeBinaryOperatorExpression
  langs:
  - csharp
  name: Left
  nameWithType: CodeBinaryOperatorExpression.Left
  fullName: System.CodeDom.CodeBinaryOperatorExpression.Left
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "연산자의 왼쪽에 코드 식을 가져오거나 설정 합니다."
  syntax:
    content: public System.CodeDom.CodeExpression Left { get; set; }
    return:
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> 왼쪽된 피연산자를 나타내는입니다."
  overload: System.CodeDom.CodeBinaryOperatorExpression.Left*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeBinaryOperatorExpression.Operator
  id: Operator
  parent: System.CodeDom.CodeBinaryOperatorExpression
  langs:
  - csharp
  name: Operator
  nameWithType: CodeBinaryOperatorExpression.Operator
  fullName: System.CodeDom.CodeBinaryOperatorExpression.Operator
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "이항 연산자 식의 연산자를 가져오거나 설정 합니다."
  remarks: "이항 연산자는 두 개의 피연산자에 평가 수행합니다. 이항 연산자의 예로 같음 (`==`), 더하기 (`+`), 비트 및 (`|`) 연산자. 자주 사용 되는 많은 이항 연산자에서 찾을 수 있습니다는 <xref:System.CodeDom.CodeBinaryOperatorType>열거형.</xref:System.CodeDom.CodeBinaryOperatorType>"
  syntax:
    content: public System.CodeDom.CodeBinaryOperatorType Operator { get; set; }
    return:
      type: System.CodeDom.CodeBinaryOperatorType
      description: "A <xref href=&quot;System.CodeDom.CodeBinaryOperatorType&quot;> </xref> 식에서 연산자의 형식을 나타내는입니다."
  overload: System.CodeDom.CodeBinaryOperatorExpression.Operator*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeBinaryOperatorExpression.Right
  id: Right
  parent: System.CodeDom.CodeBinaryOperatorExpression
  langs:
  - csharp
  name: Right
  nameWithType: CodeBinaryOperatorExpression.Right
  fullName: System.CodeDom.CodeBinaryOperatorExpression.Right
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "연산자의 오른쪽에 코드 식을 가져오거나 설정 합니다."
  syntax:
    content: public System.CodeDom.CodeExpression Right { get; set; }
    return:
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> 오른쪽 피연산자를 나타내는입니다."
  overload: System.CodeDom.CodeBinaryOperatorExpression.Right*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeExpression
  isExternal: false
  name: System.CodeDom.CodeExpression
- uid: System.CodeDom.CodeBinaryOperatorExpression.#ctor
  parent: System.CodeDom.CodeBinaryOperatorExpression
  isExternal: false
  name: CodeBinaryOperatorExpression()
  nameWithType: CodeBinaryOperatorExpression.CodeBinaryOperatorExpression()
  fullName: System.CodeDom.CodeBinaryOperatorExpression.CodeBinaryOperatorExpression()
- uid: System.CodeDom.CodeBinaryOperatorExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeBinaryOperatorType,System.CodeDom.CodeExpression)
  parent: System.CodeDom.CodeBinaryOperatorExpression
  isExternal: false
  name: CodeBinaryOperatorExpression(CodeExpression,CodeBinaryOperatorType,CodeExpression)
  nameWithType: CodeBinaryOperatorExpression.CodeBinaryOperatorExpression(CodeExpression,CodeBinaryOperatorType,CodeExpression)
  fullName: System.CodeDom.CodeBinaryOperatorExpression.CodeBinaryOperatorExpression(CodeExpression,CodeBinaryOperatorType,CodeExpression)
- uid: System.CodeDom.CodeBinaryOperatorType
  parent: System.CodeDom
  isExternal: false
  name: CodeBinaryOperatorType
  nameWithType: CodeBinaryOperatorType
  fullName: System.CodeDom.CodeBinaryOperatorType
- uid: System.CodeDom.CodeBinaryOperatorExpression.Left
  parent: System.CodeDom.CodeBinaryOperatorExpression
  isExternal: false
  name: Left
  nameWithType: CodeBinaryOperatorExpression.Left
  fullName: System.CodeDom.CodeBinaryOperatorExpression.Left
- uid: System.CodeDom.CodeBinaryOperatorExpression.Operator
  parent: System.CodeDom.CodeBinaryOperatorExpression
  isExternal: false
  name: Operator
  nameWithType: CodeBinaryOperatorExpression.Operator
  fullName: System.CodeDom.CodeBinaryOperatorExpression.Operator
- uid: System.CodeDom.CodeBinaryOperatorExpression.Right
  parent: System.CodeDom.CodeBinaryOperatorExpression
  isExternal: false
  name: Right
  nameWithType: CodeBinaryOperatorExpression.Right
  fullName: System.CodeDom.CodeBinaryOperatorExpression.Right
- uid: System.CodeDom.CodeBinaryOperatorExpression.#ctor*
  parent: System.CodeDom.CodeBinaryOperatorExpression
  isExternal: false
  name: CodeBinaryOperatorExpression
  nameWithType: CodeBinaryOperatorExpression.CodeBinaryOperatorExpression
- uid: System.CodeDom.CodeBinaryOperatorExpression.Left*
  parent: System.CodeDom.CodeBinaryOperatorExpression
  isExternal: false
  name: Left
  nameWithType: CodeBinaryOperatorExpression.Left
- uid: System.CodeDom.CodeBinaryOperatorExpression.Operator*
  parent: System.CodeDom.CodeBinaryOperatorExpression
  isExternal: false
  name: Operator
  nameWithType: CodeBinaryOperatorExpression.Operator
- uid: System.CodeDom.CodeBinaryOperatorExpression.Right*
  parent: System.CodeDom.CodeBinaryOperatorExpression
  isExternal: false
  name: Right
  nameWithType: CodeBinaryOperatorExpression.Right
