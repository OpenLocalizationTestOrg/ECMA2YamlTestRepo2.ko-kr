### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.FileDialog
  id: FileDialog
  children:
  - Microsoft.Win32.FileDialog.#ctor
  - Microsoft.Win32.FileDialog.AddExtension
  - Microsoft.Win32.FileDialog.CheckFileExists
  - Microsoft.Win32.FileDialog.CheckPathExists
  - Microsoft.Win32.FileDialog.CustomPlaces
  - Microsoft.Win32.FileDialog.DefaultExt
  - Microsoft.Win32.FileDialog.DereferenceLinks
  - Microsoft.Win32.FileDialog.FileName
  - Microsoft.Win32.FileDialog.FileNames
  - Microsoft.Win32.FileDialog.FileOk
  - Microsoft.Win32.FileDialog.Filter
  - Microsoft.Win32.FileDialog.FilterIndex
  - Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  - Microsoft.Win32.FileDialog.InitialDirectory
  - Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  - Microsoft.Win32.FileDialog.Options
  - Microsoft.Win32.FileDialog.Reset
  - Microsoft.Win32.FileDialog.RestoreDirectory
  - Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)
  - Microsoft.Win32.FileDialog.SafeFileName
  - Microsoft.Win32.FileDialog.SafeFileNames
  - Microsoft.Win32.FileDialog.Title
  - Microsoft.Win32.FileDialog.ToString
  - Microsoft.Win32.FileDialog.ValidateNames
  langs:
  - csharp
  name: FileDialog
  nameWithType: FileDialog
  fullName: Microsoft.Win32.FileDialog
  type: Class
  summary: "포함 하 여 파일 대화 상자에 공통적인 기능을 캡슐화 하는 추상 기본 클래스 <xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref> 및 <xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;> </xref>합니다."
  syntax:
    content: 'public abstract class FileDialog : Microsoft.Win32.CommonDialog'
  inheritance:
  - System.Object
  - Microsoft.Win32.CommonDialog
  implements: []
  inheritedMembers:
  - Microsoft.Win32.CommonDialog.CheckPermissionsToShowDialog
  - Microsoft.Win32.CommonDialog.ShowDialog
  - Microsoft.Win32.CommonDialog.ShowDialog(System.Windows.Window)
  - Microsoft.Win32.CommonDialog.Tag
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.#ctor
  id: '#ctor'
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FileDialog()
  nameWithType: FileDialog.FileDialog()
  fullName: Microsoft.Win32.FileDialog.FileDialog()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "새 인스턴스를 초기화는 <xref href=&quot;Microsoft.Win32.FileDialog&quot;> </xref> 클래스입니다."
  syntax:
    content: protected FileDialog ();
    parameters: []
  overload: Microsoft.Win32.FileDialog.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.AddExtension
  id: AddExtension
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: AddExtension
  nameWithType: FileDialog.AddExtension
  fullName: Microsoft.Win32.FileDialog.AddExtension
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "파일 대화 상자에 자동으로 추가할지 확장 파일 이름 확장명이 생략 하는 경우를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public bool AddExtension { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>확장 추가; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.Win32.FileDialog.AddExtension*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.CheckFileExists
  id: CheckFileExists
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: CheckFileExists
  nameWithType: FileDialog.CheckFileExists
  fullName: Microsoft.Win32.FileDialog.CheckFileExists
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "사용자는 존재 하지 않는 파일 이름을 지정 하는 경우 파일 대화 상자에 경고가 표시 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "<xref:Microsoft.Win32.OpenFileDialog>이 속성 설정 하는 클래스 `true` 의 생성자에.</xref:Microsoft.Win32.OpenFileDialog>"
  syntax:
    content: public virtual bool CheckFileExists { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경고가 표시 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 이 기본 클래스의 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.Win32.FileDialog.CheckFileExists*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.CheckPathExists
  id: CheckPathExists
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: CheckPathExists
  nameWithType: FileDialog.CheckPathExists
  fullName: Microsoft.Win32.FileDialog.CheckPathExists
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "잘못 된 경로 및 파일 이름을 입력 하는 경우 경고를 표시할지 여부를 지정 하는 값을 가져오거나 설정 합니다."
  syntax:
    content: public bool CheckPathExists { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경고가 표시 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.Win32.FileDialog.CheckPathExists*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.CustomPlaces
  id: CustomPlaces
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: CustomPlaces
  nameWithType: FileDialog.CustomPlaces
  fullName: Microsoft.Win32.FileDialog.CustomPlaces
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "파일 대화 상자에 대 한 사용자 지정 위치 목록을 가져오거나 설정 합니다."
  remarks: "부터는 [!INCLUDE[TLA2#tla_winvista](~/add/includes/tla2sharptla-winvista-md.md)]저장 파일 대화 상자를 열고는 **즐겨찾기 링크** 사용자를 다른 위치로 신속 하 게 탐색할 수 있는 대화 상자의 왼쪽에 패널입니다. 이러한 링크는 사용자 지정 위치 라고 합니다. 이 속성을 사용 하면 응용 프로그램 파일 대화 상자를 사용 하는 경우 표시 되는 목록을 수정할 수 있습니다."
  syntax:
    content: public System.Collections.Generic.IList<Microsoft.Win32.FileDialogCustomPlace> CustomPlaces { get; set; }
    return:
      type: System.Collections.Generic.IList{Microsoft.Win32.FileDialogCustomPlace}
      description: "사용자 지정 위치 목록입니다."
  overload: Microsoft.Win32.FileDialog.CustomPlaces*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.DefaultExt
  id: DefaultExt
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: DefaultExt
  nameWithType: FileDialog.DefaultExt
  fullName: Microsoft.Win32.FileDialog.DefaultExt
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "표시 되는 파일 목록을 필터링 하는 데 기본 확장명 문자열을 지정 하는 값을 가져오거나 설정 합니다."
  remarks: "확장명 문자열 앞에 마침표를 포함 해야 합니다. 예를 들어 모든 텍스트 파일을 선택 하려면 &quot;.txt&quot; DefaultExt 속성을 설정 합니다.       기본적으로는 <xref:Microsoft.Win32.FileDialog.AddExtension%2A>속성에서 표시 된 파일 목록을 필터링 하기 위해 확장을 확인 하려고 시도 <xref:Microsoft.Win32.FileDialog.Filter%2A>속성.</xref:Microsoft.Win32.FileDialog.Filter%2A> </xref:Microsoft.Win32.FileDialog.AddExtension%2A> 확장에서 확인할 수 없는 경우는 <xref:Microsoft.Win32.FileDialog.Filter%2A>DefaultExt 속성을 대신 사용 됩니다.</xref:Microsoft.Win32.FileDialog.Filter%2A>"
  example:
  - "The following example shows how to create an <xref:Microsoft.Win32.OpenFileDialog> that contains a default file name and extension type.  \n  \n [!code-cs[DialogBoxesOverviewSnippets#OpenFileDialogBoxCODEBEHIND](~/add/codesnippet/csharp/DialogBoxesOverviewSnippets.CSharp/Window1.xaml.cs#openfiledialogboxcodebehind)]\n [!code-vb[DialogBoxesOverviewSnippets#OpenFileDialogBoxCODEBEHIND](~/add/codesnippet/visualbasic/dialogboxesoverviewsnippets/window1.xaml.vb#openfiledialogboxcodebehind)]"
  syntax:
    content: public string DefaultExt { get; set; }
    return:
      type: System.String
      description: "기본 확장명 문자열입니다. 기본값은 <xref:System.String>.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.DefaultExt*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.DereferenceLinks
  id: DereferenceLinks
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: DereferenceLinks
  nameWithType: FileDialog.DereferenceLinks
  fullName: Microsoft.Win32.FileDialog.DereferenceLinks
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "파일 대화 상자에서는 바로 가기로 참조 되는 파일의 위치 또는 바로 가기 파일 (.lnk)의 위치를 반환 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public bool DereferenceLinks { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>참조 되는 위치를 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 바로 가기 위치를 반환 합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.Win32.FileDialog.DereferenceLinks*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.FileName
  id: FileName
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FileName
  nameWithType: FileDialog.FileName
  fullName: Microsoft.Win32.FileDialog.FileName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "파일 대화 상자에서 선택한 파일의 전체 경로 포함 하는 문자열을 가져오거나 설정 합니다."
  remarks: "둘 이상의 파일 이름을 선택 하는 경우 (길이의 <xref:Microsoft.Win32.FileDialog.FileNames%2A>가&1; 보다 큰) 파일 이름에는 첫 번째 선택한 파일 이름을 포함 합니다.</xref:Microsoft.Win32.FileDialog.FileNames%2A> 이 속성에 포함 된 파일 이름은 없으므로 선택 하면 <xref:System.String.Empty>대신 `null`.</xref:System.String.Empty>"
  syntax:
    content: public string FileName { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>파일 대화 상자에서 선택한 파일의 전체 경로입니다.</xref:System.String> 기본값은 <xref:System.String>.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.FileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.FileNames
  id: FileNames
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FileNames
  nameWithType: FileDialog.FileNames
  fullName: Microsoft.Win32.FileDialog.FileNames
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "선택한 각 파일에 대 한 파일 이름이 하나씩 들어 있는 배열을 가져옵니다."
  syntax:
    content: public string[] FileNames { get; }
    return:
      type: System.String[]
      description: "배열을 <xref:System.String>선택한 각 파일에 대 한 파일 이름이 하나씩 들어 있는.</xref:System.String> 기본값은 값이 <xref:System.String>.</xref:System.String> 단일 항목으로 배열"
  overload: Microsoft.Win32.FileDialog.FileNames*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.FileOk
  id: FileOk
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FileOk
  nameWithType: FileDialog.FileOk
  fullName: Microsoft.Win32.FileDialog.FileOk
  type: Event
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "사용자가 클릭 하거나 파일 이름을 선택할 때 발생는 **열려** 의 단추는 <xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref> 또는 **저장** 의 단추는 <xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;> </xref>합니다."
  remarks: "FileOk는 사용자가 파일 이름을 선택 대화 상자를 닫기 전에 수 있도록 하 여 선택 영역을 처리 한 후에 발생 합니다. 필요한 경우 사용자가 선택한 설정 하 여 취소할 수 있습니다는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>의 속성은 <xref:System.ComponentModel.CancelEventArgs>인수를 `true`.</xref:System.ComponentModel.CancelEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>"
  syntax:
    content: public event System.ComponentModel.CancelEventHandler FileOk;
    return:
      type: System.ComponentModel.CancelEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.Filter
  id: Filter
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: Filter
  nameWithType: FileDialog.Filter
  fullName: Microsoft.Win32.FileDialog.Filter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "어떤 형식의 파일 중 하나에서 표시 되는지를 결정 하는 필터 문자열을 가져오거나 설정 합니다.는 <xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref> 또는 <xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;> </xref>합니다."
  remarks: "If Filter is either `null` or <xref:System.String>, all files are displayed, and folders are always displayed.  \n  \n You can specify a subset of file types to be displayed by setting the Filter property. Each file type can represent a specific type of file, such as the following:  \n  \n-   Word Documents (*.doc)  \n  \n-   Excel Worksheets (*.xls)  \n  \n-   PowerPoint Presentations (*.ppt)  \n  \n Alternatively, a file type can represent a group of related file types, such as the following:  \n  \n-   Office Files (*.doc, \\*.xls, \\*.ppt)  \n  \n-   All Files (*.\\*)  \n  \n To specify a subset of the types of files that are displayed, you set the Filter property with a string value (the *filter string*) that specifies one or more types of files to filter by. The following shows the expected format of the filter string:  \n  \n `FileType1[[|FileType2]...[|FileTypeN]]`  \n  \n You use the following format to describe each file type:  \n  \n `Label|Extension1[[;Extension2]...[;ExtensionN]]`  \n  \n The *Label* part is a human-readable string value that describes the file type, such as the following:  \n  \n-   \"Word Documents\"  \n  \n-   \"Excel Worksheets\"  \n  \n-   \"PowerPoint Presentations\"  \n  \n-   \"Office Files\"  \n  \n-   \"All Files\"  \n  \n Each file type must be described by at least one *Extension*. If more than one *Extension* is used, each *Extension* must be separated by a semicolon (\";\"). For example:  \n  \n-   \"*.doc\"  \n  \n-   \"*.xls;\"  \n  \n-   \"*.ppt\"  \n  \n-   \"*.doc;\\*.xls;\\*.ppt\"  \n  \n-   \"*.\\*\"  \n  \n The following are complete examples of valid Filter string values:  \n  \n-   `Word Documents|*.doc`  \n  \n-   `Excel Worksheets|*.xls`  \n  \n-   `PowerPoint Presentations|*.ppt`  \n  \n-   `Office Files|*.doc;*.xls;*.ppt`  \n  \n-   `All Files|*.*`  \n  \n-   `Word Documents|*.doc|Excel Worksheets|*.xls|PowerPoint Presentations|*.ppt|Office Files|*.doc;*.xls;*.ppt|All Files|*.*`  \n  \n Each file type that is included in the filter is added as a separate item to the **Files of type:** drop-down list in the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog>, as shown in the following figure.  \n  \n ![Using the FileDialog.Filter in the Open Dialog Box](~/add/media/filedialogfilterfigure1.png \"Using the FileDialog.Filter in the Open Dialog Box\")  \n  \n The user can choose a file type from this list to filter by. By default, the first item in the list (for example, the first file type) is selected when the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog> is displayed. To specify that another file type to be selected, you set the <xref:Microsoft.Win32.FileDialog.FilterIndex%2A> property before showing the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog> (by calling <xref:Microsoft.Win32.CommonDialog.ShowDialog%2A>)."
  example:
  - "The following examples demonstrate several types of filter strings that can be set by using the Filter property.  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString1](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring1)]\n[!code-vb[FileDialogFilterSnippets#FilterString1](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring1)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString2](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring2)]\n[!code-vb[FileDialogFilterSnippets#FilterString2](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring2)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString3](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring3)]\n[!code-vb[FileDialogFilterSnippets#FilterString3](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring3)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString4](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring4)]\n[!code-vb[FileDialogFilterSnippets#FilterString4](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring4)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString5](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring5)]\n[!code-vb[FileDialogFilterSnippets#FilterString5](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring5)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString6](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring6)]\n[!code-vb[FileDialogFilterSnippets#FilterString6](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring6)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString7](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring7)]\n[!code-vb[FileDialogFilterSnippets#FilterString7](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring7)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString8](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring8)]\n[!code-vb[FileDialogFilterSnippets#FilterString8](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring8)]"
  syntax:
    content: public string Filter { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>필터가 들어 있는.</xref:System.String> 기본값은 <xref:System.String>, 따라서 필터가 적용 되 고 모든 파일 형식에 표시 됩니다.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.Filter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "필터 문자열이 잘못 되었습니다."
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.FilterIndex
  id: FilterIndex
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FilterIndex
  nameWithType: FileDialog.FilterIndex
  fullName: Microsoft.Win32.FileDialog.FilterIndex
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "파일 대화 상자에서 현재 선택한 필터의 인덱스를 가져오거나 설정 합니다."
  remarks: "이 인덱스는 1부터 시작 하지 0부터 기본 호환성 요구 사항으로 인해 [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)]합니다."
  syntax:
    content: public int FilterIndex { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>선택한 필터의 인덱스입니다.</xref:System.Int32> 기본값은 1입니다."
  overload: Microsoft.Win32.FileDialog.FilterIndex*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  id: HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: HookProc(IntPtr,Int32,IntPtr,IntPtr)
  nameWithType: FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
  fullName: Microsoft.Win32.FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "파일 대화 상자에 공통적인 기능을 추가 하도록 재정의 된 하는 공용 파일 대화 상자 후크 프로시저를 정의 합니다."
  syntax:
    content: protected override IntPtr HookProc (IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam);
    parameters:
    - id: hwnd
      type: System.IntPtr
      description: "에 대 한 창 핸들은 [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] 대화 상자."
    - id: msg
      type: System.Int32
      description: "처리할 메시지의 [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] 대화 상자."
    - id: wParam
      type: System.IntPtr
      description: "대화 상자 작업 매개 변수입니다."
    - id: lParam
      type: System.IntPtr
      description: "대화 상자 작업 매개 변수입니다."
    return:
      type: System.IntPtr
      description: "반환 <xref:System.IntPtr>; 성공을 표시 하기 위해 실패를 나타내려면&0;이 아닌 값이 반환 하는 그렇지 않은 경우.</xref:System.IntPtr>"
  overload: Microsoft.Win32.FileDialog.HookProc*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.InitialDirectory
  id: InitialDirectory
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: InitialDirectory
  nameWithType: FileDialog.InitialDirectory
  fullName: Microsoft.Win32.FileDialog.InitialDirectory
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "파일 대화 상자에 표시 되는 초기 디렉터리를 가져오거나 설정 합니다."
  remarks: "초기 디렉터리 집합이 있는,이 속성이 포함 됩니다 <xref:System.String>null 문자열이 아닌.</xref:System.String>"
  syntax:
    content: public string InitialDirectory { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>초기 디렉터리를 포함 합니다.</xref:System.String> 기본값은 <xref:System.String>.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.InitialDirectory*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  id: OnFileOk(System.ComponentModel.CancelEventArgs)
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: OnFileOk(CancelEventArgs)
  nameWithType: FileDialog.OnFileOk(CancelEventArgs)
  fullName: Microsoft.Win32.FileDialog.OnFileOk(CancelEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "발생 된 <xref href=&quot;Microsoft.Win32.FileDialog.FileOk&quot;> </xref> 이벤트입니다."
  remarks: "OnFileOk 발생는 <xref:Microsoft.Win32.FileDialog.FileOk>이벤트.</xref:Microsoft.Win32.FileDialog.FileOk>       파생 되는 형식을 <xref:Microsoft.Win32.FileDialog>OnFileOk를 재정의할 수 있습니다.</xref:Microsoft.Win32.FileDialog> 재정의 된 메서드를 호출 해야 OnFileOk 기본 클래스에 <xref:Microsoft.Win32.FileDialog.FileOk>발생 해야 합니다.</xref:Microsoft.Win32.FileDialog.FileOk>"
  syntax:
    content: protected void OnFileOk (System.ComponentModel.CancelEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.CancelEventArgs
      description: "A <xref:System.ComponentModel.CancelEventArgs>이벤트 데이터를 포함 하는.</xref:System.ComponentModel.CancelEventArgs>"
  overload: Microsoft.Win32.FileDialog.OnFileOk*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.Options
  id: Options
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: Options
  nameWithType: FileDialog.Options
  fullName: Microsoft.Win32.FileDialog.Options
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "가져옵니다는 [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] 에서 사용 되는 공용 파일 대화 상자 플래그 파일 초기화에 대 한 대화 상자."
  remarks: "이 값은 사용 하 여 속성 값의 현재 설정 된 파일 대화 상자를 표시 합니다. 실제 옵션은 특정 대화 상자에서 속성으로 노출 있지만 하므로이 속성의 용도 주로 내부 파생된 클래스 <xref:Microsoft.Win32.OpenFileDialog>및 <xref:Microsoft.Win32.SaveFileDialog>.</xref:Microsoft.Win32.SaveFileDialog> </xref:Microsoft.Win32.OpenFileDialog> 구현할 때 사용 하기 위해이 수준에서는 공용 플래그 값으로 설명 하지"
  syntax:
    content: protected int Options { get; }
    return:
      type: System.Int32
      description: "A <xref:System.Int32>를 포함 하는 [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] 에서 사용 되는 공용 파일 대화 상자 플래그 파일 초기화에 대 한 대화 상자.</xref:System.Int32>"
  overload: Microsoft.Win32.FileDialog.Options*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.Reset
  id: Reset
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: Reset()
  nameWithType: FileDialog.Reset()
  fullName: Microsoft.Win32.FileDialog.Reset()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "설정 파일 대화 상자의 모든 속성을 초기 값 백업합니다."
  syntax:
    content: public override void Reset ();
    parameters: []
  overload: Microsoft.Win32.FileDialog.Reset*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.RestoreDirectory
  id: RestoreDirectory
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: RestoreDirectory
  nameWithType: FileDialog.RestoreDirectory
  fullName: Microsoft.Win32.FileDialog.RestoreDirectory
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "이 속성이 구현 되지 않습니다."
  syntax:
    content: public bool RestoreDirectory { get; set; }
    return:
      type: System.Boolean
      description: "구현되지 않았습니다."
  overload: Microsoft.Win32.FileDialog.RestoreDirectory*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)
  id: RunDialog(System.IntPtr)
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: RunDialog(IntPtr)
  nameWithType: FileDialog.RunDialog(IntPtr)
  fullName: Microsoft.Win32.FileDialog.RunDialog(IntPtr)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "<xref:Microsoft.Win32.CommonDialog.RunDialog*>파생된 클래스에서와 같은 파일 대화 상자를 표시 하기 위해 호출 <xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref> 및 <xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;> </xref>합니다.</xref:Microsoft.Win32.CommonDialog.RunDialog*>"
  remarks: "이후에 표시 되는 대화 상자에 의해 지정 되는 소유자 창에 할당 되는 `hwndOwner` 매개 변수입니다."
  syntax:
    content: protected override bool RunDialog (IntPtr hwndOwner);
    parameters:
    - id: hwndOwner
      type: System.IntPtr
      description: "대화 상자를 소유 하는 창에 대 한 핸들입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사용자가 클릭할 경우는 **확인** 단추가 표시 되는 대화 상자 (예를 들어 <xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref>, <xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;> </xref>), 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.Win32.FileDialog.RunDialog*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.SafeFileName
  id: SafeFileName
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: SafeFileName
  nameWithType: FileDialog.SafeFileName
  fullName: Microsoft.Win32.FileDialog.SafeFileName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "선택한 파일에 대 한 파일 이름을 포함 하는 문자열을 가져옵니다."
  remarks: "이 값은 고 <xref:Microsoft.Win32.FileDialog.FileName%2A>에서 제거 하는 모든 경로 정보입니다.</xref:Microsoft.Win32.FileDialog.FileName%2A> 경로 제거 하면 값 부분 신뢰 응용 프로그램에 사용할 적절 한 로컬 파일 시스템에 대 한 정보를 검색 하는 데 응용 프로그램을 없기 때문입니다.       파일 이름을 여러 개 선택 되어 있으면 (길이 <xref:Microsoft.Win32.FileDialog.SafeFileNames%2A>가&1; 보다 큰)이이 속성에는 첫 번째 선택한 파일 이름만 포함 합니다.</xref:Microsoft.Win32.FileDialog.SafeFileNames%2A>       참조 [XBAP 샘플에서 안전한 파일 업로드](http://msdn.microsoft.com/en-us/01206dd3-acc7-45ff-aeb9-502c20aaad2c)합니다."
  syntax:
    content: public string SafeFileName { get; }
    return:
      type: System.String
      description: "A <xref:System.String>선택한 파일의 파일 이름이 들어 있는.</xref:System.String> 기본값은 <xref:System.String>, 이기도 값 중 하나 파일을 선택 하지 않았거나 디렉터리를 선택 하는 경우.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.SafeFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.SafeFileNames
  id: SafeFileNames
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: SafeFileNames
  nameWithType: FileDialog.SafeFileNames
  fullName: Microsoft.Win32.FileDialog.SafeFileNames
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "선택한 각 파일에 대 한 안전한 파일 이름이 하나씩 들어 있는 배열을 가져옵니다."
  remarks: "<xref:Microsoft.Win32.FileDialog.SafeFileName%2A>.</xref:Microsoft.Win32.FileDialog.SafeFileName%2A> 를 참조 하십시오."
  syntax:
    content: public string[] SafeFileNames { get; }
    return:
      type: System.String[]
      description: "배열을 <xref:System.String>선택한 각 파일에 대 한 안전한 파일 이름이 하나씩 들어 있는.</xref:System.String> 기본값은 값이 <xref:System.String>.</xref:System.String> 단일 항목으로 배열"
  overload: Microsoft.Win32.FileDialog.SafeFileNames*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.Title
  id: Title
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: Title
  nameWithType: FileDialog.Title
  fullName: Microsoft.Win32.FileDialog.Title
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "파일 대화 상자의 제목 표시줄에 표시 되는 텍스트를 가져오거나 설정 합니다."
  remarks: "제목 null 이면 또는 <xref:System.String>, 기본값, 지역화 된 값을 사용, 예: &quot;다른 이름으로 저장&quot; 또는 &quot;열&quot;.</xref:System.String>"
  syntax:
    content: public string Title { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>파일 대화 상자의 제목 표시줄에 표시 되는 텍스트입니다.</xref:System.String> 기본값은 <xref:System.String>.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.Title*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.ToString
  id: ToString
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: ToString()
  nameWithType: FileDialog.ToString()
  fullName: Microsoft.Win32.FileDialog.ToString()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "파일 대화 상자를 표시 하는 문자열을 반환 합니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String>나타낸 <xref href=&quot;Microsoft.Win32.FileDialog&quot;> </xref> 중 하나에서 선택한 파일에 대 한 전체 경로 이름이 들어 있는 <xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref>, <xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;> </xref>.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.ToString*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.ValidateNames
  id: ValidateNames
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: ValidateNames
  nameWithType: FileDialog.ValidateNames
  fullName: Microsoft.Win32.FileDialog.ValidateNames
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "가져오거나 대화 상자에 받아들일지 여부를 나타내는 값만 유효한 [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] 파일 이름입니다."
  syntax:
    content: public bool ValidateNames { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>잘못 된 파일 이름이 제공 되는 경우; 경고를 표시 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.Win32.FileDialog.ValidateNames*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Win32.CommonDialog
  isExternal: false
  name: Microsoft.Win32.CommonDialog
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: Microsoft.Win32.FileDialog.#ctor
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileDialog()
  nameWithType: FileDialog.FileDialog()
  fullName: Microsoft.Win32.FileDialog.FileDialog()
- uid: Microsoft.Win32.FileDialog.AddExtension
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: AddExtension
  nameWithType: FileDialog.AddExtension
  fullName: Microsoft.Win32.FileDialog.AddExtension
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.FileDialog.CheckFileExists
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CheckFileExists
  nameWithType: FileDialog.CheckFileExists
  fullName: Microsoft.Win32.FileDialog.CheckFileExists
- uid: Microsoft.Win32.FileDialog.CheckPathExists
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CheckPathExists
  nameWithType: FileDialog.CheckPathExists
  fullName: Microsoft.Win32.FileDialog.CheckPathExists
- uid: Microsoft.Win32.FileDialog.CustomPlaces
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CustomPlaces
  nameWithType: FileDialog.CustomPlaces
  fullName: Microsoft.Win32.FileDialog.CustomPlaces
- uid: System.Collections.Generic.IList{Microsoft.Win32.FileDialogCustomPlace}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<FileDialogCustomPlace>
  nameWithType: IList<FileDialogCustomPlace>
  fullName: System.Collections.Generic.IList<Microsoft.Win32.FileDialogCustomPlace>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<Microsoft.Win32.FileDialogCustomPlace>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Win32.FileDialogCustomPlace
    name: FileDialogCustomPlace
    nameWithType: FileDialogCustomPlace
    fullName: FileDialogCustomPlace
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Win32.FileDialog.DefaultExt
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: DefaultExt
  nameWithType: FileDialog.DefaultExt
  fullName: Microsoft.Win32.FileDialog.DefaultExt
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Win32.FileDialog.DereferenceLinks
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: DereferenceLinks
  nameWithType: FileDialog.DereferenceLinks
  fullName: Microsoft.Win32.FileDialog.DereferenceLinks
- uid: Microsoft.Win32.FileDialog.FileName
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileName
  nameWithType: FileDialog.FileName
  fullName: Microsoft.Win32.FileDialog.FileName
- uid: Microsoft.Win32.FileDialog.FileNames
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileNames
  nameWithType: FileDialog.FileNames
  fullName: Microsoft.Win32.FileDialog.FileNames
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Win32.FileDialog.FileOk
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileOk
  nameWithType: FileDialog.FileOk
  fullName: Microsoft.Win32.FileDialog.FileOk
- uid: System.ComponentModel.CancelEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CancelEventHandler
  nameWithType: CancelEventHandler
  fullName: System.ComponentModel.CancelEventHandler
- uid: Microsoft.Win32.FileDialog.Filter
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Filter
  nameWithType: FileDialog.Filter
  fullName: Microsoft.Win32.FileDialog.Filter
- uid: Microsoft.Win32.FileDialog.FilterIndex
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FilterIndex
  nameWithType: FileDialog.FilterIndex
  fullName: Microsoft.Win32.FileDialog.FilterIndex
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: HookProc(IntPtr,Int32,IntPtr,IntPtr)
  nameWithType: FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
  fullName: Microsoft.Win32.FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: Microsoft.Win32.FileDialog.InitialDirectory
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: InitialDirectory
  nameWithType: FileDialog.InitialDirectory
  fullName: Microsoft.Win32.FileDialog.InitialDirectory
- uid: Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: OnFileOk(CancelEventArgs)
  nameWithType: FileDialog.OnFileOk(CancelEventArgs)
  fullName: Microsoft.Win32.FileDialog.OnFileOk(CancelEventArgs)
- uid: System.ComponentModel.CancelEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: CancelEventArgs
  nameWithType: CancelEventArgs
  fullName: System.ComponentModel.CancelEventArgs
- uid: Microsoft.Win32.FileDialog.Options
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Options
  nameWithType: FileDialog.Options
  fullName: Microsoft.Win32.FileDialog.Options
- uid: Microsoft.Win32.FileDialog.Reset
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Reset()
  nameWithType: FileDialog.Reset()
  fullName: Microsoft.Win32.FileDialog.Reset()
- uid: Microsoft.Win32.FileDialog.RestoreDirectory
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: RestoreDirectory
  nameWithType: FileDialog.RestoreDirectory
  fullName: Microsoft.Win32.FileDialog.RestoreDirectory
- uid: Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: RunDialog(IntPtr)
  nameWithType: FileDialog.RunDialog(IntPtr)
  fullName: Microsoft.Win32.FileDialog.RunDialog(IntPtr)
- uid: Microsoft.Win32.FileDialog.SafeFileName
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: SafeFileName
  nameWithType: FileDialog.SafeFileName
  fullName: Microsoft.Win32.FileDialog.SafeFileName
- uid: Microsoft.Win32.FileDialog.SafeFileNames
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: SafeFileNames
  nameWithType: FileDialog.SafeFileNames
  fullName: Microsoft.Win32.FileDialog.SafeFileNames
- uid: Microsoft.Win32.FileDialog.Title
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Title
  nameWithType: FileDialog.Title
  fullName: Microsoft.Win32.FileDialog.Title
- uid: Microsoft.Win32.FileDialog.ToString
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: ToString()
  nameWithType: FileDialog.ToString()
  fullName: Microsoft.Win32.FileDialog.ToString()
- uid: Microsoft.Win32.FileDialog.ValidateNames
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: ValidateNames
  nameWithType: FileDialog.ValidateNames
  fullName: Microsoft.Win32.FileDialog.ValidateNames
- uid: Microsoft.Win32.FileDialog.#ctor*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileDialog
  nameWithType: FileDialog.FileDialog
- uid: Microsoft.Win32.FileDialog.AddExtension*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: AddExtension
  nameWithType: FileDialog.AddExtension
- uid: Microsoft.Win32.FileDialog.CheckFileExists*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CheckFileExists
  nameWithType: FileDialog.CheckFileExists
- uid: Microsoft.Win32.FileDialog.CheckPathExists*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CheckPathExists
  nameWithType: FileDialog.CheckPathExists
- uid: Microsoft.Win32.FileDialog.CustomPlaces*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CustomPlaces
  nameWithType: FileDialog.CustomPlaces
- uid: Microsoft.Win32.FileDialog.DefaultExt*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: DefaultExt
  nameWithType: FileDialog.DefaultExt
- uid: Microsoft.Win32.FileDialog.DereferenceLinks*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: DereferenceLinks
  nameWithType: FileDialog.DereferenceLinks
- uid: Microsoft.Win32.FileDialog.FileName*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileName
  nameWithType: FileDialog.FileName
- uid: Microsoft.Win32.FileDialog.FileNames*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileNames
  nameWithType: FileDialog.FileNames
- uid: Microsoft.Win32.FileDialog.Filter*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Filter
  nameWithType: FileDialog.Filter
- uid: Microsoft.Win32.FileDialog.FilterIndex*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FilterIndex
  nameWithType: FileDialog.FilterIndex
- uid: Microsoft.Win32.FileDialog.HookProc*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: HookProc
  nameWithType: FileDialog.HookProc
- uid: Microsoft.Win32.FileDialog.InitialDirectory*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: InitialDirectory
  nameWithType: FileDialog.InitialDirectory
- uid: Microsoft.Win32.FileDialog.OnFileOk*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: OnFileOk
  nameWithType: FileDialog.OnFileOk
- uid: Microsoft.Win32.FileDialog.Options*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Options
  nameWithType: FileDialog.Options
- uid: Microsoft.Win32.FileDialog.Reset*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Reset
  nameWithType: FileDialog.Reset
- uid: Microsoft.Win32.FileDialog.RestoreDirectory*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: RestoreDirectory
  nameWithType: FileDialog.RestoreDirectory
- uid: Microsoft.Win32.FileDialog.RunDialog*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: RunDialog
  nameWithType: FileDialog.RunDialog
- uid: Microsoft.Win32.FileDialog.SafeFileName*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: SafeFileName
  nameWithType: FileDialog.SafeFileName
- uid: Microsoft.Win32.FileDialog.SafeFileNames*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: SafeFileNames
  nameWithType: FileDialog.SafeFileNames
- uid: Microsoft.Win32.FileDialog.Title*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Title
  nameWithType: FileDialog.Title
- uid: Microsoft.Win32.FileDialog.ToString*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: ToString
  nameWithType: FileDialog.ToString
- uid: Microsoft.Win32.FileDialog.ValidateNames*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: ValidateNames
  nameWithType: FileDialog.ValidateNames
