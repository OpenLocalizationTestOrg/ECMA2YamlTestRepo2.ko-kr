### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.ClockController
  id: ClockController
  children:
  - System.Windows.Media.Animation.ClockController.Begin
  - System.Windows.Media.Animation.ClockController.Clock
  - System.Windows.Media.Animation.ClockController.Pause
  - System.Windows.Media.Animation.ClockController.Remove
  - System.Windows.Media.Animation.ClockController.Resume
  - System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)
  - System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)
  - System.Windows.Media.Animation.ClockController.SkipToFill
  - System.Windows.Media.Animation.ClockController.SpeedRatio
  - System.Windows.Media.Animation.ClockController.Stop
  langs:
  - csharp
  name: ClockController
  nameWithType: ClockController
  fullName: System.Windows.Media.Animation.ClockController
  type: Class
  summary: "대화형으로 제어는 <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref>합니다."
  remarks: "ClockController를 사용 하 여 대화형으로 시작, 일시 중지, 다시 시작, 검색, 건너뛰기, 중지 및 <xref:System.Windows.Media.Animation.Clock>.</xref:System.Windows.Media.Animation.Clock> 를 제거 하려면 루트 수준의 클럭만 대화형으로 제어할 수 있습니다."
  syntax:
    content: 'public sealed class ClockController : System.Windows.Threading.DispatcherObject'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.Begin
  id: Begin
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: Begin()
  nameWithType: ClockController.Begin()
  fullName: System.Windows.Media.Animation.ClockController.Begin()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "대상을 설정 <xref:System.Windows.Media.Animation.ClockController.Clock*>다음 틱에 시작 되도록 합니다.</xref:System.Windows.Media.Animation.ClockController.Clock*>"
  remarks: "이 메서드를 사용 하면 대상 <xref:System.Windows.Media.Animation.Clock>것 처럼 동작 하도록 해당 <xref:System.Windows.Media.Animation.Timeline>개체의 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>다음 틱의 시간으로 설정 되었습니다.</xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> </xref:System.Windows.Media.Animation.Timeline> </xref:System.Windows.Media.Animation.Clock> 타임 라인의 실제 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>설정은 무시 됩니다 (이지만 변경 되지 않습니다).</xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>       이 메서드를 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> <xref:System.Windows.Media.Animation.ClockState>수 있습니다.</xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 대상 클록의 변경합니다 Begin 메서드에 일시 중지 된 클록 다시 시작 하지 않습니다.       이 메서드는 다음 번 틱을 처리할 때까지 타이밍 트리에 영향을 주지는. 파생 작업으로 적절 한 이벤트는 또한 발생 하지 그때 까지는. 이 메서드를 호출는 <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated>및 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>이벤트.</xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> </xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated>"
  syntax:
    content: public void Begin ();
    parameters: []
  overload: System.Windows.Media.Animation.ClockController.Begin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.Clock
  id: Clock
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: Clock
  nameWithType: ClockController.Clock
  fullName: System.Windows.Media.Animation.ClockController.Clock
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "가져옵니다는 <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref> 이 제어 <xref href=&quot;System.Windows.Media.Animation.ClockController&quot;> </xref>합니다."
  syntax:
    content: public System.Windows.Media.Animation.Clock Clock { get; }
    return:
      type: System.Windows.Media.Animation.Clock
      description: "<xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref> 이 제어 <xref href=&quot;System.Windows.Media.Animation.ClockController&quot;> </xref>합니다."
  overload: System.Windows.Media.Animation.ClockController.Clock*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.Pause
  id: Pause
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: Pause()
  nameWithType: ClockController.Pause()
  fullName: System.Windows.Media.Animation.ClockController.Pause()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "대상 중지 <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref> 의 처리를 합니다."
  remarks: "일시 중지할 수 있습니다는 <xref:System.Windows.Media.Animation.Clock>clock의 현재 상태와 일시 중지에 관계 없이 현재 상태는 변경 되지 않습니다.</xref:System.Windows.Media.Animation.Clock> 클록 일시 중지할 수 동안 <xref:System.Windows.Media.Animation.ClockState>, <xref:System.Windows.Media.Animation.ClockState>, 또는 <xref:System.Windows.Media.Animation.ClockState>.</xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.ClockState> 사용 하 여 클록 일시 중지를 해제 하는 유일한 방법은는 <xref:System.Windows.Media.Animation.ClockController.Resume%2A>메서드.</xref:System.Windows.Media.Animation.ClockController.Resume%2A> 클록을 암시적으로 일시 중지 자식을 일시 중지 됩니다.       대상 클록 이미 일시 중지 된 경우이 메서드를 호출 해도 아무 효과가 없습니다.       클록 트리거 일시 중지는 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>이벤트.</xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>"
  syntax:
    content: public void Pause ();
    parameters: []
  overload: System.Windows.Media.Animation.ClockController.Pause*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.Remove
  id: Remove
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: Remove()
  nameWithType: ClockController.Remove()
  fullName: System.Windows.Media.Animation.ClockController.Remove()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "제거는 <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref> 이 연관 <xref href=&quot;System.Windows.Media.Animation.ClockController&quot;> </xref> 애니메이션 효과가 적용 된 속성에서 합니다. 시계 및 해당 자식 clock에는 이러한 속성을 지정할 수 없습니다."
  remarks: "이 메서드를 트리거합니다는 <xref:System.Windows.Media.Animation.Clock.RemoveRequested>이벤트.</xref:System.Windows.Media.Animation.Clock.RemoveRequested>"
  example:
  - "The following example shows how to remove and otherwise interactively control a clock.  \n  \n [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/add/codesnippet/visualbasic/clockcontroller_procedural_snip/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]\n [!code-cs[ClockController_procedural_snip#ClockControllerSeekExample](~/add/codesnippet/csharp/ClockController_procedural_snip/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]"
  syntax:
    content: public void Remove ();
    parameters: []
  overload: System.Windows.Media.Animation.ClockController.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.Resume
  id: Resume
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: Resume()
  nameWithType: ClockController.Resume()
  fullName: System.Windows.Media.Animation.ClockController.Resume()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "사용 하도록 설정 된 <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref> 는 이전에 일시 중지 된 진행을 재개 합니다."
  remarks: "일시 중지 하거나 다시 시작할 수는 <xref:System.Windows.Media.Animation.Clock>clock의 현재 상태 및 일시 중지 하거나 재개 하는 것에 관계 없이 현재 상태는 변경 되지 않습니다.</xref:System.Windows.Media.Animation.Clock> 클록 일시 중지할 수 동안 <xref:System.Windows.Media.Animation.ClockState>, <xref:System.Windows.Media.Animation.ClockState>, 또는 <xref:System.Windows.Media.Animation.ClockState>.</xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.ClockState> Resume 메서드를 사용 하 여 일시 중지 된 시계를 다시 시작 하는 유일한 방법은 됩니다. 암시적으로 clock 자식 다시 시작 합니다. 일시 중지 되지 않은 클록에서이 메서드를 호출 해도 아무 효과가 없습니다.       일시 중지 된 클록 트리거를 다시 시작은 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>이벤트.</xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>"
  syntax:
    content: public void Resume ();
    parameters: []
  overload: System.Windows.Media.Animation.ClockController.Resume*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)
  id: Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: Seek(TimeSpan,TimeSeekOrigin)
  nameWithType: ClockController.Seek(TimeSpan,TimeSeekOrigin)
  fullName: System.Windows.Media.Animation.ClockController.Seek(TimeSpan,TimeSeekOrigin)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "대상 검색 (seek) <xref:System.Windows.Media.Animation.ClockController.Clock*>다음 틱이 발생할 때 지정된 된 크기 여.</xref:System.Windows.Media.Animation.ClockController.Clock*> 대상 클록이 중지 되 면 검색 하면 다시 활성화 합니다."
  remarks: "Seek 작업을 사용 하지 않습니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>이 시계의 타임이 라인의 설정을 고려: 클록의 타임 라인에 처럼 처리 되는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>1 및 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> </xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> </xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> </xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>       이 메서드를 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> <xref:System.Windows.Media.Animation.ClockState>수 있습니다.</xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 클록의 변경합니다 이 메서드는 다음 번 틱을 처리할 때까지 타이밍 트리에 영향을 주지는. 파생 작업으로 적합 한 이벤트가 발생 하지 않습니다 그때 까지는 합니다.       스토리 보드 트리거 검색는 <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated>및 <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated>이벤트.</xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> </xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated>       자식이 대상 클록의 현재 시간 그에 따라 업데이트 됩니다."
  example:
  - "The following example shows how to seek using a <xref:System.Windows.Media.Animation.ClockController>.  \n  \n [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/add/codesnippet/visualbasic/clockcontroller_procedural_snip/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]\n [!code-cs[ClockController_procedural_snip#ClockControllerSeekExample](~/add/codesnippet/csharp/ClockController_procedural_snip/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]"
  syntax:
    content: public void Seek (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);
    parameters:
    - id: offset
      type: System.TimeSpan
      description: "Seek 오프셋이 대상 클록의 시간 단위로 지정 합니다. 클록의 기준으로이 오프셋은 <xref href=&quot;System.Windows.Media.Animation.TimeSeekOrigin&quot;> </xref> 또는 <xref href=&quot;System.Windows.Media.Animation.TimeSeekOrigin&quot;> </xref>의 값에 따라 `origin`합니다."
    - id: origin
      type: System.Windows.Media.Animation.TimeSeekOrigin
      description: "지정 된 오프셋이 대상 클록의 기준으로 하는지 여부를 나타내는 값 <xref href=&quot;System.Windows.Media.Animation.TimeSeekOrigin&quot;> </xref> 또는 <xref href=&quot;System.Windows.Media.Animation.TimeSeekOrigin&quot;> </xref>합니다."
  overload: System.Windows.Media.Animation.ClockController.Seek*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)
  id: SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: SeekAlignedToLastTick(TimeSpan,TimeSeekOrigin)
  nameWithType: ClockController.SeekAlignedToLastTick(TimeSpan,TimeSeekOrigin)
  fullName: System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(TimeSpan,TimeSeekOrigin)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "대상 검색 (seek) <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref> 즉시를 지정 된 크기입니다. 대상 클록이 중지 되 면 검색 하면 다시 활성화 합니다."
  remarks: "Seek 작업을 사용 하지 않습니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>이 시계의 타임이 라인의 설정을 고려: 클록의 타임 라인에 처럼 처리 되는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>1 및 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> </xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> </xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> </xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>       SeekAlignedToLastTick은 seeked 시간을 마지막 클록 틱 효과 맞춥니다. 값은 있지만 화면에는 화면 업데이트 될 때까지이 변경 내용이 반영 되지 SeekAlignedToLastTick, 때문에 변경 내용을 반영 하도록 즉시 업데이트 됩니다.       자식이 대상 클록의 현재 시간 그에 따라 업데이트 됩니다.       이 메서드를 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> <xref:System.Windows.Media.Animation.ClockState>수 있습니다.</xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 클록의 변경합니다       스토리 보드 트리거 검색는 <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated>및 <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated>이벤트.</xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> </xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated>"
  example:
  - "The following example demonstrates both the <xref:System.Windows.Media.Animation.ClockController.Seek%2A> and SeekAlignedToLastTick methods of a <xref:System.Windows.Media.Animation.ClockController>.  \n  \n [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/add/codesnippet/visualbasic/clockcontroller_procedural_snip/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]\n [!code-cs[ClockController_procedural_snip#ClockControllerSeekExample](~/add/codesnippet/csharp/ClockController_procedural_snip/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]"
  syntax:
    content: public void SeekAlignedToLastTick (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);
    parameters:
    - id: offset
      type: System.TimeSpan
      description: "Seek 오프셋이 대상 클록의 시간 단위로 지정 합니다. 클록의 기준으로이 오프셋은 <xref href=&quot;System.Windows.Media.Animation.TimeSeekOrigin&quot;> </xref> 또는 <xref href=&quot;System.Windows.Media.Animation.TimeSeekOrigin&quot;> </xref>의 값에 따라 `origin`합니다."
    - id: origin
      type: System.Windows.Media.Animation.TimeSeekOrigin
      description: "지정 된 오프셋이 대상 클록의 기준으로 하는지 여부를 나타내는 값 <xref href=&quot;System.Windows.Media.Animation.TimeSeekOrigin&quot;> </xref> 또는 <xref href=&quot;System.Windows.Media.Animation.TimeSeekOrigin&quot;> </xref>합니다."
  overload: System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.SkipToFill
  id: SkipToFill
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: SkipToFill()
  nameWithType: ClockController.SkipToFill()
  fullName: System.Windows.Media.Animation.ClockController.SkipToFill()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "대상의 현재 시간을 이동 <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref> 활성 기간의 끝에 있습니다."
  remarks: "이 메서드는 대상 클록의 이동은 활성 기간의 끝으로 현재 시간 이 시점에서 클록의 동작이 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>해당 <xref:System.Windows.Media.Animation.Timeline>.</xref:System.Windows.Media.Animation.Timeline> 의 설정</xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 에 따라 지정 되어 경우 타임 라인의 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>속성이 <xref:System.Windows.Media.Animation.FillBehavior>는 속성이로 설정 된 경우 클록 채웁니다; <xref:System.Windows.Media.Animation.FillBehavior>, 클록 중지.</xref:System.Windows.Media.Animation.FillBehavior> </xref:System.Windows.Media.Animation.FillBehavior> </xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>       이 메서드는 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A>은 <xref:System.Windows.Media.Animation.ClockState>.</xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 대상 클록의 경우에만 적용       이 메서드는 다음 번 틱을 처리할 때까지 타이밍 트리에 영향을 주지는. 파생 작업으로 적합 한 이벤트가 발생 하지 않습니다 그때 까지는 합니다.       스토리 보드의 채우기 기간 트리거 당기지는 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>및 <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated>이벤트.</xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> </xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>"
  syntax:
    content: public void SkipToFill ();
    parameters: []
  overload: System.Windows.Media.Animation.ClockController.SkipToFill*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.SpeedRatio
  id: SpeedRatio
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: SpeedRatio
  nameWithType: ClockController.SpeedRatio
  fullName: System.Windows.Media.Animation.ClockController.SpeedRatio
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "대상의 대화형 속도 가져오거나 설정 합니다. <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref>합니다."
  remarks: "이 속성을 설정는 다음 틱까지 효과가 없습니다. 이 속성을 설정 하 고 다음 하기 전에 해당 값을 가져올 경우 다음 틱이 발생할 이전 값을 얻게 됩니다. 이 속성은 다음 틱 후 새 값을 반환 합니다.       이 속성을 설정 해도 기본 타임 라인의 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>.</xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 값 변경 되지 않습니다.       대상 클록의 트리거합니다이 속성을 설정할 <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated>이벤트.</xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated>"
  syntax:
    content: public double SpeedRatio { get; set; }
    return:
      type: System.Double
      description: "대상 클록의 대화형 속도 설명 하는&0; 보다 큰 유한 값입니다. 이 값의 값을 곱해는 <> </> *> 클록의의 <xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>합니다. 예를 들어 경우 타임 라인의 <> </> *>은 0.5 및 <xref href=&quot;System.Windows.Media.Animation.ClockController&quot;> </xref> 1.5 배 보통 속도 (0.5 * 3.0)로 이동 개체의 동안 3.0 이면 타임 라인입니다. 기본값은 1.0입니다."
  overload: System.Windows.Media.Animation.ClockController.SpeedRatio*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.Stop
  id: Stop
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: Stop()
  nameWithType: ClockController.Stop()
  fullName: System.Windows.Media.Animation.ClockController.Stop()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "대상 중지 <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref>합니다."
  remarks: "이 메서드를 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> <xref:System.Windows.Media.Animation.Clock.Stopped%2A>수 있습니다.</xref:System.Windows.Media.Animation.Clock.Stopped%2A> </xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 대상 클록의 변경합니다       A <xref:System.Windows.Media.Animation.Clock.Stopped%2A>시계를 사용 하 여 다시 시작할 수는 <xref:System.Windows.Media.Animation.ClockController.Begin%2A>, <xref:System.Windows.Media.Animation.ClockController.Seek%2A>, 또는 <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>메서드.</xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> </xref:System.Windows.Media.Animation.ClockController.Seek%2A> </xref:System.Windows.Media.Animation.ClockController.Begin%2A> </xref:System.Windows.Media.Animation.Clock.Stopped%2A>       이 메서드는 다음 번 틱을 처리할 때까지 타이밍 트리에 영향을 주지는. 파생 작업으로 적합 한 이벤트가 발생 하지 않습니다 그때 까지는 합니다.       클록 트리거 중지는 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>및 <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated>이벤트 하지 않고는 <xref:System.Windows.Media.Animation.Clock.Completed>이벤트.</xref:System.Windows.Media.Animation.Clock.Completed> </xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> </xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>"
  syntax:
    content: public void Stop ();
    parameters: []
  overload: System.Windows.Media.Animation.ClockController.Stop*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: System.Windows.Threading.DispatcherObject
- uid: System.Windows.Media.Animation.ClockController.Begin
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Begin()
  nameWithType: ClockController.Begin()
  fullName: System.Windows.Media.Animation.ClockController.Begin()
- uid: System.Windows.Media.Animation.ClockController.Clock
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Clock
  nameWithType: ClockController.Clock
  fullName: System.Windows.Media.Animation.ClockController.Clock
- uid: System.Windows.Media.Animation.Clock
  parent: System.Windows.Media.Animation
  isExternal: false
  name: Clock
  nameWithType: Clock
  fullName: System.Windows.Media.Animation.Clock
- uid: System.Windows.Media.Animation.ClockController.Pause
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Pause()
  nameWithType: ClockController.Pause()
  fullName: System.Windows.Media.Animation.ClockController.Pause()
- uid: System.Windows.Media.Animation.ClockController.Remove
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Remove()
  nameWithType: ClockController.Remove()
  fullName: System.Windows.Media.Animation.ClockController.Remove()
- uid: System.Windows.Media.Animation.ClockController.Resume
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Resume()
  nameWithType: ClockController.Resume()
  fullName: System.Windows.Media.Animation.ClockController.Resume()
- uid: System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Seek(TimeSpan,TimeSeekOrigin)
  nameWithType: ClockController.Seek(TimeSpan,TimeSeekOrigin)
  fullName: System.Windows.Media.Animation.ClockController.Seek(TimeSpan,TimeSeekOrigin)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Windows.Media.Animation.TimeSeekOrigin
  parent: System.Windows.Media.Animation
  isExternal: false
  name: TimeSeekOrigin
  nameWithType: TimeSeekOrigin
  fullName: System.Windows.Media.Animation.TimeSeekOrigin
- uid: System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: SeekAlignedToLastTick(TimeSpan,TimeSeekOrigin)
  nameWithType: ClockController.SeekAlignedToLastTick(TimeSpan,TimeSeekOrigin)
  fullName: System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(TimeSpan,TimeSeekOrigin)
- uid: System.Windows.Media.Animation.ClockController.SkipToFill
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: SkipToFill()
  nameWithType: ClockController.SkipToFill()
  fullName: System.Windows.Media.Animation.ClockController.SkipToFill()
- uid: System.Windows.Media.Animation.ClockController.SpeedRatio
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: SpeedRatio
  nameWithType: ClockController.SpeedRatio
  fullName: System.Windows.Media.Animation.ClockController.SpeedRatio
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Animation.ClockController.Stop
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Stop()
  nameWithType: ClockController.Stop()
  fullName: System.Windows.Media.Animation.ClockController.Stop()
- uid: System.Windows.Media.Animation.ClockController.Begin*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Begin
  nameWithType: ClockController.Begin
- uid: System.Windows.Media.Animation.ClockController.Clock*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Clock
  nameWithType: ClockController.Clock
- uid: System.Windows.Media.Animation.ClockController.Pause*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Pause
  nameWithType: ClockController.Pause
- uid: System.Windows.Media.Animation.ClockController.Remove*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Remove
  nameWithType: ClockController.Remove
- uid: System.Windows.Media.Animation.ClockController.Resume*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Resume
  nameWithType: ClockController.Resume
- uid: System.Windows.Media.Animation.ClockController.Seek*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Seek
  nameWithType: ClockController.Seek
- uid: System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: SeekAlignedToLastTick
  nameWithType: ClockController.SeekAlignedToLastTick
- uid: System.Windows.Media.Animation.ClockController.SkipToFill*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: SkipToFill
  nameWithType: ClockController.SkipToFill
- uid: System.Windows.Media.Animation.ClockController.SpeedRatio*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: SpeedRatio
  nameWithType: ClockController.SpeedRatio
- uid: System.Windows.Media.Animation.ClockController.Stop*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Stop
  nameWithType: ClockController.Stop
