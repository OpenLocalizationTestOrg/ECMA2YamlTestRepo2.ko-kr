### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.SemaphoreRights
  id: SemaphoreRights
  children:
  - System.Security.AccessControl.SemaphoreRights.ChangePermissions
  - System.Security.AccessControl.SemaphoreRights.Delete
  - System.Security.AccessControl.SemaphoreRights.FullControl
  - System.Security.AccessControl.SemaphoreRights.Modify
  - System.Security.AccessControl.SemaphoreRights.ReadPermissions
  - System.Security.AccessControl.SemaphoreRights.Synchronize
  - System.Security.AccessControl.SemaphoreRights.TakeOwnership
  langs:
  - csharp
  name: SemaphoreRights
  nameWithType: SemaphoreRights
  fullName: System.Security.AccessControl.SemaphoreRights
  type: Enum
  summary: "명명 된 시스템 세마포 개체에 적용할 수 있는 액세스 제어 권한을 지정 합니다."
  remarks: "만들 때 액세스 제어 권한을 지정 하려면 SemaphoreRights 열거형을 사용 하 여 <xref:System.Security.AccessControl.SemaphoreSecurity>개체입니다.</xref:System.Security.AccessControl.SemaphoreSecurity> 명명된 된 시스템 세마포에 대 한 권한이 적용 하려면 사용 <xref:System.Security.AccessControl.SemaphoreSecurity>개체와 <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%2CSystem.Boolean%40%2CSystem.Security.AccessControl.SemaphoreSecurity%29?displayProperty=fullName>생성자 및 <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName>메서드.</xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName> </xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%2CSystem.Boolean%40%2CSystem.Security.AccessControl.SemaphoreSecurity%29?displayProperty=fullName> </xref:System.Security.AccessControl.SemaphoreSecurity>       기본 Windows 액세스 권한의 숫자 값에 대 한 참조 [동기화 개체 보안 및 액세스 권한 (Windows)](http://go.microsoft.com/fwlink/p/?LinkId=243073) MSDN 라이브러리에서.      > [!NOTE] > 동기화 개체에 대 한 보안은 Windows 98 또는 Windows Millennium Edition에 대 한 지원 되지 않습니다."
  example:
  - "The following code example demonstrates the use of SemaphoreRights values when creating and using <xref:System.Security.AccessControl.SemaphoreAccessRule> objects. The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules. The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType?displayProperty=fullName>rule.  \n  \n> [!NOTE]\n>  This example does not attach the security object to an <xref:System.Threading.Semaphore> object; see <xref:System.Security.AccessControl.SemaphoreSecurity>, <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=fullName> method, and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName>.  \n  \n [!code-cs[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/add/codesnippet/csharp/t-system.security.access_10_1.cs)]\n [!code-vb[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/add/codesnippet/visualbasic/t-system.security.access_10_1.vb)]"
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(false)]

      public enum SemaphoreRights
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreRights.ChangePermissions
  id: ChangePermissions
  parent: System.Security.AccessControl.SemaphoreRights
  langs:
  - csharp
  name: ChangePermissions
  nameWithType: SemaphoreRights.ChangePermissions
  fullName: System.Security.AccessControl.SemaphoreRights.ChangePermissions
  type: Field
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "및 명명된 된 세마포와 관련 된 규칙을 감사 보안을 변경할 수 있는 권한입니다."
  syntax:
    content: ChangePermissions
    return:
      type: System.Security.AccessControl.SemaphoreRights
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreRights.Delete
  id: Delete
  parent: System.Security.AccessControl.SemaphoreRights
  langs:
  - csharp
  name: Delete
  nameWithType: SemaphoreRights.Delete
  fullName: System.Security.AccessControl.SemaphoreRights.Delete
  type: Field
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "명명된 된 세마포를 삭제 하는 권한입니다."
  syntax:
    content: Delete
    return:
      type: System.Security.AccessControl.SemaphoreRights
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreRights.FullControl
  id: FullControl
  parent: System.Security.AccessControl.SemaphoreRights
  langs:
  - csharp
  name: FullControl
  nameWithType: SemaphoreRights.FullControl
  fullName: System.Security.AccessControl.SemaphoreRights.FullControl
  type: Field
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "명명된 된 세마포를 완전히 제어 및 감사 규칙을 해당 액세스 규칙을 수정할 수 있는 권한"
  syntax:
    content: FullControl
    return:
      type: System.Security.AccessControl.SemaphoreRights
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreRights.Modify
  id: Modify
  parent: System.Security.AccessControl.SemaphoreRights
  langs:
  - csharp
  name: Modify
  nameWithType: SemaphoreRights.Modify
  fullName: System.Security.AccessControl.SemaphoreRights.Modify
  type: Field
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "명명된 된 세마포를 해제 하기 위해 권한입니다."
  syntax:
    content: Modify
    return:
      type: System.Security.AccessControl.SemaphoreRights
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreRights.ReadPermissions
  id: ReadPermissions
  parent: System.Security.AccessControl.SemaphoreRights
  langs:
  - csharp
  name: ReadPermissions
  nameWithType: SemaphoreRights.ReadPermissions
  fullName: System.Security.AccessControl.SemaphoreRights.ReadPermissions
  type: Field
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "명명된 된 세마포에 대 한 규칙을 열고 액세스 규칙 및 감사 권한."
  syntax:
    content: ReadPermissions
    return:
      type: System.Security.AccessControl.SemaphoreRights
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreRights.Synchronize
  id: Synchronize
  parent: System.Security.AccessControl.SemaphoreRights
  langs:
  - csharp
  name: Synchronize
  nameWithType: SemaphoreRights.Synchronize
  fullName: System.Security.AccessControl.SemaphoreRights.Synchronize
  type: Field
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "명명된 된 세마포를 대기할 수 있는 권한입니다."
  syntax:
    content: Synchronize
    return:
      type: System.Security.AccessControl.SemaphoreRights
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreRights.TakeOwnership
  id: TakeOwnership
  parent: System.Security.AccessControl.SemaphoreRights
  langs:
  - csharp
  name: TakeOwnership
  nameWithType: SemaphoreRights.TakeOwnership
  fullName: System.Security.AccessControl.SemaphoreRights.TakeOwnership
  type: Field
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "명명된 된 세마포의 소유자를 변경할 수 있는 권한입니다."
  syntax:
    content: TakeOwnership
    return:
      type: System.Security.AccessControl.SemaphoreRights
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Security.AccessControl.SemaphoreRights.ChangePermissions
  parent: System.Security.AccessControl.SemaphoreRights
  isExternal: false
  name: ChangePermissions
  nameWithType: SemaphoreRights.ChangePermissions
  fullName: System.Security.AccessControl.SemaphoreRights.ChangePermissions
- uid: System.Security.AccessControl.SemaphoreRights
  parent: System.Security.AccessControl
  isExternal: false
  name: SemaphoreRights
  nameWithType: SemaphoreRights
  fullName: System.Security.AccessControl.SemaphoreRights
- uid: System.Security.AccessControl.SemaphoreRights.Delete
  parent: System.Security.AccessControl.SemaphoreRights
  isExternal: false
  name: Delete
  nameWithType: SemaphoreRights.Delete
  fullName: System.Security.AccessControl.SemaphoreRights.Delete
- uid: System.Security.AccessControl.SemaphoreRights.FullControl
  parent: System.Security.AccessControl.SemaphoreRights
  isExternal: false
  name: FullControl
  nameWithType: SemaphoreRights.FullControl
  fullName: System.Security.AccessControl.SemaphoreRights.FullControl
- uid: System.Security.AccessControl.SemaphoreRights.Modify
  parent: System.Security.AccessControl.SemaphoreRights
  isExternal: false
  name: Modify
  nameWithType: SemaphoreRights.Modify
  fullName: System.Security.AccessControl.SemaphoreRights.Modify
- uid: System.Security.AccessControl.SemaphoreRights.ReadPermissions
  parent: System.Security.AccessControl.SemaphoreRights
  isExternal: false
  name: ReadPermissions
  nameWithType: SemaphoreRights.ReadPermissions
  fullName: System.Security.AccessControl.SemaphoreRights.ReadPermissions
- uid: System.Security.AccessControl.SemaphoreRights.Synchronize
  parent: System.Security.AccessControl.SemaphoreRights
  isExternal: false
  name: Synchronize
  nameWithType: SemaphoreRights.Synchronize
  fullName: System.Security.AccessControl.SemaphoreRights.Synchronize
- uid: System.Security.AccessControl.SemaphoreRights.TakeOwnership
  parent: System.Security.AccessControl.SemaphoreRights
  isExternal: false
  name: TakeOwnership
  nameWithType: SemaphoreRights.TakeOwnership
  fullName: System.Security.AccessControl.SemaphoreRights.TakeOwnership
