### YamlMime:ManagedReference
items:
- uid: System.Transactions.Enlistment
  id: Enlistment
  children:
  - System.Transactions.Enlistment.Done
  langs:
  - csharp
  name: Enlistment
  nameWithType: Enlistment
  fullName: System.Transactions.Enlistment
  type: Class
  summary: "트랜잭션의 마지막 단계를 참여 한 트랜잭션이 참가자와 트랜잭션 관리자 간 통신을 용이 하 게 합니다."
  remarks: "경우는 <xref:System.Transactions.Transaction.EnlistVolatile%2A>및 <xref:System.Transactions.Transaction.EnlistDurable%2A>의 메서드는 <xref:System.Transactions.Transaction>개체 트랜잭션에서 참가자를 등록 하기 위해 호출 되는 인 리스트 먼 트를 설명 하는이 개체를 반환 합니다.</xref:System.Transactions.Transaction> </xref:System.Transactions.Transaction.EnlistDurable%2A> </xref:System.Transactions.Transaction.EnlistVolatile%2A>       트랜잭션 커밋의 마지막 단계는 트랜잭션 관리자를 구현 하는 리소스 관리자에 게이 개체를 전달 된 <xref:System.Transactions.IEnlistmentNotification>가 트랜잭션에 참여 하는 인터페이스입니다.</xref:System.Transactions.IEnlistmentNotification> 특히, 트랜잭션 관리자 호출 중 하나는 <xref:System.Transactions.IEnlistmentNotification.Commit%2A>또는 <xref:System.Transactions.IEnlistmentNotification.Rollback%2A>여부 후자에서 하기로 트랜잭션을 커밋하거나에 따라 참가자의 메서드.</xref:System.Transactions.IEnlistmentNotification.Rollback%2A> </xref:System.Transactions.IEnlistmentNotification.Commit%2A> 참가자를 호출 해야 합니다는 <xref:System.Transactions.Enlistment.Done%2A>트랜잭션 관리자는 작업이 완료 되었음을 알 수 있도록이 개체의 메서드에.</xref:System.Transactions.Enlistment.Done%2A>       인 리스트 먼 트를 호출할 수는 <xref:System.Transactions.Enlistment.Done%2A>메서드 전에 언제 든 지 라 부릅니다 <xref:System.Transactions.PreparingEnlistment.Prepared%2A>준비 단계에.</xref:System.Transactions.PreparingEnlistment.Prepared%2A> </xref:System.Transactions.Enlistment.Done%2A>  이렇게 하면 해당 인 리스트 먼 트랜잭션에서 커밋 응답 하지만 최종 결과 수신 하지 않아도 의미 읽기 전용 투표를 캐스팅은 했습니다. 유의 후의 <xref:System.Transactions.Enlistment.Done%2A>메서드가 호출 되 면 등록 된 참가자는 트랜잭션 관리자에서 더 이상 알림을 받습니다.</xref:System.Transactions.Enlistment.Done%2A>"
  example:
  - "The following example shows an implementation of the <xref:System.Transactions.IEnlistmentNotification> interface, and when the <xref:System.Transactions.Enlistment.Done%2A> method should be called.  \n  \n [!code-cs[Tx_Enlist#2](~/add/codesnippet/csharp/t-system.transactions.en_1.cs)]\n [!code-vb[Tx_Enlist#2](~/add/codesnippet/visualbasic/t-system.transactions.en_1.vb)]"
  syntax:
    content: public class Enlistment
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Transactions.Enlistment.Done
  id: Done
  parent: System.Transactions.Enlistment
  langs:
  - csharp
  name: Done()
  nameWithType: Enlistment.Done()
  fullName: System.Transactions.Enlistment.Done()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "트랜잭션 참가 요소 작업을 완료 했음을 나타냅니다."
  remarks: "트랜잭션 커밋의 마지막 단계는 트랜잭션 관리자 호출는 <xref:System.Transactions.IEnlistmentNotification.Commit%2A>, <xref:System.Transactions.IEnlistmentNotification.Rollback%2A>또는 <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>트랜잭션이 커밋 또는 롤백 인지에 따라 참가자의 메서드.</xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> </xref:System.Transactions.IEnlistmentNotification.Rollback%2A> </xref:System.Transactions.IEnlistmentNotification.Commit%2A> 트랜잭션을 완료 하 고 다음 트랜잭션 관리자에서 Done 메서드를 호출 하 여 완료 했음을 알립니다 하는 데 필요한 작업을 수행한 리소스 관리자는 `enlistment` 매개 변수입니다.       리소스 관리자가, 영속적 참여 Done 메서드를 호출 하 여 응답 하지 않는 경우, 트랜잭션 관리자가 리소스 관리자에서 해당 알림 호출을 받았음을 있는지 아닙니다. 따라서 트랜잭션 관리자에 대 한 응답 대기 및 관련 정보가이 거래를 유지 합니다.  수행 하는 경우이 호출 되지 정보의이 부분을 무기한 보관 됩니다 메모리 또는 시스템 수준 리소스입니다. 따라서 리소스를 회수할 수 없게 됩니다. 분산 트랜잭션에서이 수는 MSDTC 로그가 가득 MSDTC 프로세스를 중단 하는 합니다. 관리 하는 트랜잭션의 경우 <xref:System.Transactions>,이 인해 리소스 관리자의 프로세스의 메모리 소비량에 점진적으로 지속적으로 증가 합니다.</xref:System.Transactions> 따라서 것이 중요 한 리소스 관리자 작업을 완료 한 후 Done 메서드를 호출 하 여 작업을 준비 합니다.       가 호출 되기 전에 인 리스트 먼 트 언제 든 지 Done 메서드 호출 수 <xref:System.Transactions.PreparingEnlistment.Prepared%2A>준비 단계에.</xref:System.Transactions.PreparingEnlistment.Prepared%2A> 이렇게 하면 해당 인 리스트 먼 트랜잭션에서 커밋 응답 하지만 최종 결과 수신 하지 않아도 의미 읽기 전용 투표를 캐스팅은 했습니다. 즉,이 메서드가 호출 되 면 등록 된 참가자 없습니다 더 이상 알림을 받지 트랜잭션 관리자에서 note 합니다."
  syntax:
    content: public void Done ();
    parameters: []
  overload: System.Transactions.Enlistment.Done*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Transactions.Enlistment.Done
  parent: System.Transactions.Enlistment
  isExternal: false
  name: Done()
  nameWithType: Enlistment.Done()
  fullName: System.Transactions.Enlistment.Done()
- uid: System.Transactions.Enlistment.Done*
  parent: System.Transactions.Enlistment
  isExternal: false
  name: Done
  nameWithType: Enlistment.Done
