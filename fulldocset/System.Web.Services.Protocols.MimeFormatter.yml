### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.MimeFormatter
  id: MimeFormatter
  children:
  - System.Web.Services.Protocols.MimeFormatter.#ctor
  - System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)
  langs:
  - csharp
  name: MimeFormatter
  nameWithType: MimeFormatter
  fullName: System.Web.Services.Protocols.MimeFormatter
  type: Class
  summary: "모든 판독기 및 작성기 SOAP 하지 않고 웹 서비스 및 HTTP를 사용 하 여 구현 하는 클라이언트에 대 한 추상 기본 클래스를 제공 합니다."
  remarks: "웹 서비스 작성자 및 독자 serialize 및 deserialize, 각각 HTTP 요청 또는 응답 스트림을 웹 메서드의 매개 변수 또는 반환 개체 사이입니다. MimeFormatter 클래스 클라이언트와 서비스 측에 있는 공통 인터페이스와 판독기 및 작성기 클래스에 대 한 기능을 설정 합니다.       MimeFormatter 클래스에는 HTTP GET 및 HTTP POST 작업을 통해 웹 서비스의.NET Framework의 구현을 지원합니다. HTTP GET 작업에서 요청 매개 변수에서 HTTP 요청 Locator URL (Uniform Resource) 인코딩됩니다. HTTP POST 작업에서 요청 매개 변수는 HTML 폼와 마찬가지로 HTTP 요청 본문에서 인코딩됩니다. 두 구현 모두 반환 값은 HTTP 응답 본문에는 비 SOAP XML 문서로 나타납니다.       개발자는 일반적으로 직접 MimeFormatter 또는 해당 하위 클래스를 사용 하지 않아도 합니다. 대신 HTTP GET 또는 HTTP POST 구현에 따라 클라이언트 프록시 코드를 생성 하는 Wsdl.exe 도구, 적용 된 <xref:System.Web.Services.Protocols.HttpMethodAttribute>각 웹 메서드에 특성의 <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A>및 <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>MimeFormatter 클래스에서 파생 된 적절 한 형식으로 속성</xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> </xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> 을 설정 하 고</xref:System.Web.Services.Protocols.HttpMethodAttribute> 서버에서 ASP.NET 구성 파일 (Web.config)에 대 한 설정에 따라 적절 한 파생된 형식이 사용 됩니다. 클라이언트에서 적절 한 파생된 형식이 WSDL에서 결정 됩니다."
  syntax:
    content: public abstract class MimeFormatter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: MimeFormatter()
  nameWithType: MimeFormatter.MimeFormatter()
  fullName: System.Web.Services.Protocols.MimeFormatter.MimeFormatter()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref> 클래스입니다."
  syntax:
    content: protected MimeFormatter ();
    parameters: []
  overload: System.Web.Services.Protocols.MimeFormatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  id: CreateInstance(System.Type,System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: CreateInstance(Type,Object)
  nameWithType: MimeFormatter.CreateInstance(Type,Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.CreateInstance(Type,Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "만들고에서 파생 된 구체적인 클래스의 인스턴스를 초기화 합니다. <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>합니다."
  remarks: "CreateInstance 메서드는 파생된 클래스의 인스턴스를 만들고 추상의 파생된 클래스의 구현을 호출 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>메서드.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> CreateInstance 메서드 요청이 나 응답 처리 될 때 호출 됩니다.       이니셜라이저는 매개 변수로 전달 되는 개체는 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>메서드.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> CreateInstance 메서드를 매개 변수로 전달 이니셜라이저를 호출 하 여 파생된 클래스의 다른 인스턴스에서 가져올는 <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>클라이언트 또는 서비스 초기화 하는 동안 메서드.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>"
  syntax:
    content: public static System.Web.Services.Protocols.MimeFormatter CreateInstance (Type type, object initializer);
    parameters:
    - id: type
      type: System.Type
      description: "파생 된 형식, <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>의 인스턴스를 만듭니다."
    - id: initializer
      type: System.Object
      description: "인스턴스를 초기화 하는 데 사용 되는 개체의 파생된 클래스의 구현을 통해 이전 가져온는 <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer*>메서드.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer*>"
    return:
      type: System.Web.Services.Protocols.MimeFormatter
      description: "A <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;></xref> object."
  overload: System.Web.Services.Protocols.MimeFormatter.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  id: GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(LogicalMethodInfo)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "파생된 클래스에서 재정의 되 면 지정 된 메서드는 이니셜라이저를 반환 합니다."
  remarks: "이니셜라이저는 매개 변수로 전달 되는 개체는 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>메서드.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       파생된 클래스의 구현 GetInitializer 인스턴스 메서드의 클라이언트 또는 서비스 초기화 하는 동안 호출 됩니다. 나중에, 요청 또는 응답 처리 된 시간에 이니셜라이저 개체가 전달 된 정적 <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>메서드를 초기화 합니다.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> 한 다음 파생된 클래스의 다른 개체의 인스턴스를 만드는 메서드</xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> 를 다른 개체는 실제 읽기 또는 쓰기를 수행합니다."
  syntax:
    content: public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);
    parameters:
    - id: methodInfo
      type: System.Web.Services.Protocols.LogicalMethodInfo
      description: "A <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> 이니셜라이저를 가져올 웹 메서드를 지정 하 합니다."
    return:
      type: System.Object
      description: "<xref:System.Object>지정된 메서드에 대 한 이니셜라이저를 포함 하는.</xref:System.Object>"
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  id: GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializer(Type,LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "에 지정된 된 메서드에 대 한 이니셜라이저를 반환합니다."
  remarks: "이니셜라이저는 매개 변수로 전달 되는 개체는 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>메서드.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       파생된 클래스의 <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>암시적으로 파생된 클래스의 인스턴스를 만드는 메서드</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> 를 호출 하는 정적 GetInitializer 메서드 요청 또는 응답은 처리 이니셜라이저 개체 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>메서드는 파생된 클래스의 다른 인스턴스에</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> 전달 됩니다. 다른 개체는 실제 읽기 또는 쓰기를 수행 합니다."
  syntax:
    content: public static object GetInitializer (Type type, System.Web.Services.Protocols.LogicalMethodInfo methodInfo);
    parameters:
    - id: type
      type: System.Type
      description: "파생 된 형식, <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>,-이니셜라이저를 가져옵니다."
    - id: methodInfo
      type: System.Web.Services.Protocols.LogicalMethodInfo
      description: "A <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> 이니셜라이저를 가져올 웹 메서드를 지정 하 합니다."
    return:
      type: System.Object
      description: "A <xref:System.Object>지정된 메서드에 대 한 이니셜라이저를 포함 하는 개체입니다.</xref:System.Object>"
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  id: GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializers(LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(LogicalMethodInfo[])
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "파생된 클래스에서 재정의 되 면 해당 메서드가 정의 된 입력된 배열 하는 개체 이니셜라이저의 배열을 반환 합니다."
  remarks: "이니셜라이저는 매개 변수로 전달 되는 개체는 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>메서드.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       GetInitializers 인스턴스 메서드가 호출 하는 <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>인스턴스 메서드 각각에 대해 웹 메서드를 입력 합니다.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> 파생 된 클래스의 인스턴스를 즉 <xref:System.Web.Services.Protocols.MimeFormatter>이미 생성 되었습니다.</xref:System.Web.Services.Protocols.MimeFormatter> 요청 또는 응답 처리 된 시간에 이니셜라이저 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>메서드는 파생된 클래스의 다른 인스턴스에</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> 전달 됩니다. 다른 개체는 실제 읽기 또는 쓰기를 수행 합니다."
  syntax:
    content: public virtual object[] GetInitializers (System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);
    parameters:
    - id: methodInfos
      type: System.Web.Services.Protocols.LogicalMethodInfo[]
      description: "여기서 각 방법에 대해 반환 된 이니셜라이저 배열에서 해당 인덱스의 개체 가져온 웹 메서드의 배열입니다."
    return:
      type: System.Object[]
      description: "해당 메서드 정의의 입력된 배열에는 이니셜라이저 개체의 배열입니다."
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  id: GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializers(Type,LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "지정된 된 클래스에서 파생 된 해당 메서드 정의의 입력된 배열 하는 개체 이니셜라이저의 배열을 반환 <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>합니다."
  remarks: "이니셜라이저는 매개 변수로 전달 되는 개체는 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>메서드.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       정적 GetInitializersmethod의 호출으로 인해는 <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>에서 지정 된 파생된 클래스에 속하는 메서드에 `type` 매개 변수.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>"
  syntax:
    content: public static object[] GetInitializers (Type type, System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);
    parameters:
    - id: type
      type: System.Type
      description: "파생 된 형식, <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>, 이니셜라이저를 받게 됩니다."
    - id: methodInfos
      type: System.Web.Services.Protocols.LogicalMethodInfo[]
      description: "형식의 배열 <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> 이니셜라이저를 가져올 웹 메서드를 지정 하는 합니다."
    return:
      type: System.Object[]
      description: "지정된 된 클래스에서 파생 된 입력 배열 메서드 정의에 해당 이니셜라이저 개체의 배열 <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>합니다."
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)
  id: Initialize(System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: Initialize(Object)
  nameWithType: MimeFormatter.Initialize(Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.Initialize(Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "파생된 클래스에서 재정의 되 면 인스턴스를 초기화 합니다."
  remarks: "Initialize 메서드 요청 또는 응답 처리 됩니다. 그러나 이니셜라이저를 호출 하 여 가져올는 <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>클라이언트 또는 서비스 초기화 하는 동안 다른 인스턴스에서 메서드.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>"
  syntax:
    content: public abstract void Initialize (object initializer);
    parameters:
    - id: initializer
      type: System.Object
      description: "메서드를 구현 하는 특정 클래스에 적절 한 형식의 개체입니다."
  overload: System.Web.Services.Protocols.MimeFormatter.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Services.Protocols.MimeFormatter.#ctor
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: MimeFormatter()
  nameWithType: MimeFormatter.MimeFormatter()
  fullName: System.Web.Services.Protocols.MimeFormatter.MimeFormatter()
- uid: System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: CreateInstance(Type,Object)
  nameWithType: MimeFormatter.CreateInstance(Type,Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.CreateInstance(Type,Object)
- uid: System.Web.Services.Protocols.MimeFormatter
  parent: System.Web.Services.Protocols
  isExternal: false
  name: MimeFormatter
  nameWithType: MimeFormatter
  fullName: System.Web.Services.Protocols.MimeFormatter
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(LogicalMethodInfo)
- uid: System.Web.Services.Protocols.LogicalMethodInfo
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializer(Type,LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializers(LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(LogicalMethodInfo[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Services.Protocols.LogicalMethodInfo[]
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo[]
  spec.csharp:
  - uid: System.Web.Services.Protocols.LogicalMethodInfo
    name: LogicalMethodInfo
    nameWithType: LogicalMethodInfo
    fullName: LogicalMethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializers(Type,LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
- uid: System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: Initialize(Object)
  nameWithType: MimeFormatter.Initialize(Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.Initialize(Object)
- uid: System.Web.Services.Protocols.MimeFormatter.#ctor*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: MimeFormatter
  nameWithType: MimeFormatter.MimeFormatter
- uid: System.Web.Services.Protocols.MimeFormatter.CreateInstance*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: CreateInstance
  nameWithType: MimeFormatter.CreateInstance
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializer
  nameWithType: MimeFormatter.GetInitializer
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializers
  nameWithType: MimeFormatter.GetInitializers
- uid: System.Web.Services.Protocols.MimeFormatter.Initialize*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: Initialize
  nameWithType: MimeFormatter.Initialize
