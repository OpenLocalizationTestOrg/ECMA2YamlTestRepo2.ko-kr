### YamlMime:ManagedReference
items:
- uid: System.Runtime.ConstrainedExecution.Cer
  id: Cer
  children:
  - System.Runtime.ConstrainedExecution.Cer.MayFail
  - System.Runtime.ConstrainedExecution.Cer.None
  - System.Runtime.ConstrainedExecution.Cer.Success
  langs:
  - csharp
  name: Cer
  nameWithType: Cer
  fullName: System.Runtime.ConstrainedExecution.Cer
  type: Enum
  summary: "제약이 있는 실행 영역 내에서 호출 하는 경우 메서드의 동작을 지정 합니다."
  remarks: "Cer 열거형 메서드, 형식 또는 어셈블리 제약이 있는 실행 영역 (CER) 내에서 동작을 지정 합니다. 엔터티 성공할 지를 나타내기 위해 사용 가능한 세 가지 값 중 하나를 사용 CER를 알지 또는 명확한 성공 또는 실패를 보고 하는 일을 할 수 있습니다.       CER에서는 코드 영역을 실행 하는 중단 없이 중단 된 스레드 메모리 부족 예외 또는 스택 오버플로 같은 비동기 예외가 발생 하는 경우에 합니다."
  example:
  - "The following code example demonstrates the use of the Cer enumeration when specifying a constrained execution region for a method. This code example is part of a larger example provided for the <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A> constructor.  \n  \n [!code-vb[System.Runtime.ConstrainedExecution#3](~/add/codesnippet/visualbasic/t-system.runtime.constra_2_1.vb)]\n [!code-cs[System.Runtime.ConstrainedExecution#3](~/add/codesnippet/csharp/t-system.runtime.constra_2_1.cs)]"
  syntax:
    content: public enum Cer
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Runtime.ConstrainedExecution.Cer.MayFail
  id: MayFail
  parent: System.Runtime.ConstrainedExecution.Cer
  langs:
  - csharp
  name: MayFail
  nameWithType: Cer.MayFail
  fullName: System.Runtime.ConstrainedExecution.Cer.MayFail
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.ConstrainedExecution
  summary: "예외 조건이 발생할 때 메서드가 실패할 수 있습니다. 이 경우 메서드는 다시 보고할 호출 하는 메서드로 성공 또는 실패를 합니다. 메서드 반환 값을 보고할 수 있도록 하려면 메서드 본문 주위에 CER 있어야 합니다."
  syntax:
    content: MayFail
    return:
      type: System.Runtime.ConstrainedExecution.Cer
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.ConstrainedExecution.Cer.None
  id: None
  parent: System.Runtime.ConstrainedExecution.Cer
  langs:
  - csharp
  name: None
  nameWithType: Cer.None
  fullName: System.Runtime.ConstrainedExecution.Cer.None
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.ConstrainedExecution
  summary: '메서드, 형식 또는 어셈블리에는 CER의 개념이 없습니다. Cer 기능을는 사용 하지 않습니다. 이 의미는 다음과 같습니다.'
  remarks: "-예외 조건이 발생할 때 메서드가 실패할 수 있습니다.      -메서드 실패를 보고 하지 않을 수도 (이 명확 하지 않은).      -메서드 (즉, 가장 가능성이 높은 시나리오) 염두에서 cer 기록 되지 않습니다.       암시적으로 표시는 메서드, 형식 또는 어셈블리에 성공 하려면 명시적으로 표시 되지 않으면, `Cer.None`합니다."
  syntax:
    content: None
    return:
      type: System.Runtime.ConstrainedExecution.Cer
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.ConstrainedExecution.Cer.Success
  id: Success
  parent: System.Runtime.ConstrainedExecution.Cer
  langs:
  - csharp
  name: Success
  nameWithType: Cer.Success
  fullName: System.Runtime.ConstrainedExecution.Cer.Success
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.ConstrainedExecution
  summary: "예외 조건이 발생할 때 메서드는 성공 하도록 보장 됩니다. 도를 호출 하면에서 비 CER 지역 내에서 호출 되는 메서드를 포함 하는 CER 구성 해야 합니다. 메서드는 의도 한 대로 작업을 수행 하는 경우에 성공 합니다. 예를 들어 표시 <xref:System.Collections.ArrayList.Count*>와 `ReliabilityContractAttribute(Cer.Success)` CER에서 실행할 때 항상에 있는 요소의 숫자 개수를 반환 하는지 의미는 <xref href=&quot;System.Collections.ArrayList&quot;> </xref> 지정 하지 않은 상태에서 내부 필드를 벗어날 수 및.</xref:System.Collections.ArrayList.Count*>"
  syntax:
    content: Success
    return:
      type: System.Runtime.ConstrainedExecution.Cer
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Runtime.ConstrainedExecution.Cer.MayFail
  parent: System.Runtime.ConstrainedExecution.Cer
  isExternal: false
  name: MayFail
  nameWithType: Cer.MayFail
  fullName: System.Runtime.ConstrainedExecution.Cer.MayFail
- uid: System.Runtime.ConstrainedExecution.Cer
  parent: System.Runtime.ConstrainedExecution
  isExternal: false
  name: Cer
  nameWithType: Cer
  fullName: System.Runtime.ConstrainedExecution.Cer
- uid: System.Runtime.ConstrainedExecution.Cer.None
  parent: System.Runtime.ConstrainedExecution.Cer
  isExternal: false
  name: None
  nameWithType: Cer.None
  fullName: System.Runtime.ConstrainedExecution.Cer.None
- uid: System.Runtime.ConstrainedExecution.Cer.Success
  parent: System.Runtime.ConstrainedExecution.Cer
  isExternal: false
  name: Success
  nameWithType: Cer.Success
  fullName: System.Runtime.ConstrainedExecution.Cer.Success
