### YamlMime:ManagedReference
items:
- uid: System.Web.UI.StateManagedCollection
  id: StateManagedCollection
  children:
  - System.Web.UI.StateManagedCollection.#ctor
  - System.Web.UI.StateManagedCollection.Clear
  - System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.StateManagedCollection.Count
  - System.Web.UI.StateManagedCollection.CreateKnownType(System.Int32)
  - System.Web.UI.StateManagedCollection.GetEnumerator
  - System.Web.UI.StateManagedCollection.GetKnownTypes
  - System.Web.UI.StateManagedCollection.OnClear
  - System.Web.UI.StateManagedCollection.OnClearComplete
  - System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnValidate(System.Object)
  - System.Web.UI.StateManagedCollection.SetDirty
  - System.Web.UI.StateManagedCollection.SetDirtyObject(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot
  - System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Clear
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState
  langs:
  - csharp
  name: StateManagedCollection
  nameWithType: StateManagedCollection
  fullName: System.Web.UI.StateManagedCollection
  type: Class
  summary: "관리 하는 모든 강력한 형식의 컬렉션에 대 한 기본 클래스를 제공 <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> 개체입니다."
  remarks: "StateManagedCollection 클래스는 저장 하는 모든 강력한 형식의 컬렉션에 대 한 기본 클래스 <xref:System.Web.UI.IStateManager>요소를 포함 하 여 <xref:System.Web.UI.WebControls.DataControlFieldCollection>, <xref:System.Web.UI.WebControls.ParameterCollection>, <xref:System.Web.UI.WebControls.StyleCollection>, <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>, 등에.</xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.StyleCollection> </xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.DataControlFieldCollection> </xref:System.Web.UI.IStateManager> StateManagedCollection 컬렉션 상태가 포함 된 요소 뿐만 아니라 자체의 상태를 관리 합니다. 에 대 한 호출 이므로 <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>컬렉션의 상태 및 현재 컬렉션에 포함 된 모든 요소의 상태를 저장 합니다.</xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>       StateManagedCollection 클래스에서 파생 된 경우를 고려해 야 할 가장 중요 한 메서드는 <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A>, <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A>, <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>, <xref:System.Web.UI.StateManagedCollection.SetDirty%2A>, 및 <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A>.</xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A> </xref:System.Web.UI.StateManagedCollection.SetDirty%2A> </xref:System.Web.UI.StateManagedCollection.OnValidate%2A> </xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> </xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A>및 <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A>메서드는 뷰 상태에 포함 된 요소 형식에 대 한 인덱스를 저장 하는 데 사용 됩니다.</xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> </xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> 정규화 된 형식 이름 대신 인덱스를 저장 하면 성능이 향상 됩니다. <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>메서드는 컬렉션의 요소를 조작 및 비즈니스 규칙에 따라 요소의 유효성을 검사 합니다.</xref:System.Web.UI.StateManagedCollection.OnValidate%2A> 그러나 현재 구현은 <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>메서드는 작업이 금지 `null` 개체 컬렉션에 저장 되지 파생 글씨에서 고유한 유효성 검사 동작을 정의 하려면이 메서드를 재정의할 수 있습니다.</xref:System.Web.UI.StateManagedCollection.OnValidate%2A> <xref:System.Web.UI.StateManagedCollection.SetDirty%2A>메서드를 사용 하면 전체 컬렉션이 뷰 상태에 직렬화, 로드 된 마지막 시간 이후 상태에 대해 변경만 직렬화 하는 대신.</xref:System.Web.UI.StateManagedCollection.SetDirty%2A> <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A>메서드는 추상 메서드이며 요소 수준에서이 동작을 수행 하기 위해 구현할 수 있습니다.</xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A>      > [!IMPORTANT] > StateManagedCollection 뷰 상태에 컬렉션 항목의 정규화 된 어셈블리 형식 이름을 저장 합니다. 사이트 방문자 뷰 상태를 디코딩할 수 및 형식 이름을 검색 합니다. 이 시나리오는 보안 문제에 웹 사이트를 만드는 경우 뷰 상태에 배치 하기 전에 수동으로 형식 이름의 암호화할 수 있습니다."
  example:
  - "The following code example demonstrates how to derive a strongly typed collection class from StateManagedCollection to contain <xref:System.Web.UI.IStateManager> objects. In this example, the `CycleCollection` is derived to contain instances of the abstract `Cycle` class, which can be either `Bicycle` or `Tricycle` objects. The `Cycle` class implements the <xref:System.Web.UI.IStateManager> interface because it stores the value of the `CycleColor` property in view state.  \n  \n [!code-cs[Samples.AspNet.CycleCollection#1](~/add/codesnippet/csharp/t-system.web.ui.stateman_1.cs)]\n [!code-vb[Samples.AspNet.CycleCollection#1](~/add/codesnippet/visualbasic/t-system.web.ui.stateman_1.vb)]"
  syntax:
    content: 'public abstract class StateManagedCollection : System.Collections.IList, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: StateManagedCollection()
  nameWithType: StateManagedCollection.StateManagedCollection()
  fullName: System.Web.UI.StateManagedCollection.StateManagedCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 클래스입니다."
  remarks: "파생된 클래스 사용자 지정된 구현을 제공 하는 생성자를 재정의할 수 있습니다."
  syntax:
    content: protected StateManagedCollection ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.Clear
  id: Clear
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: StateManagedCollection.Clear()
  fullName: System.Web.UI.StateManagedCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "모든 항목을 제거는 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 컬렉션입니다."
  remarks: "<xref:System.Web.UI.StateManagedCollection.OnClear%2A>Clear 메서드를 호출 하기 전에 메서드는 및 <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A>Clear 컬렉션에서 요소 제거 완료 된 후 메서드가 호출 됩니다.</xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> </xref:System.Web.UI.StateManagedCollection.OnClear%2A>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: StateManagedCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.StateManagedCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "요소에 복사는 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 컬렉션을 배열의 특정 배열 인덱스에서 시작 합니다."
  remarks: "지정된 된 배열의 호환 되는 형식 이어야 합니다.       요소가 복사 되는 <xref:System.Array>순서는 열거자를 통해 반복 하는 <xref:System.Web.UI.StateManagedCollection>컬렉션.</xref:System.Web.UI.StateManagedCollection> </xref:System.Array>"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "1 차원 <xref:System.Array>에서 복사한 요소의 대상인은 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>.</xref:System.Array> <xref:System.Array>0부터 시작 하는 인덱스가 있어야 합니다.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "인덱스는&0;부터 시작 `array` 복사가 시작 되는 합니다."
  overload: System.Web.UI.StateManagedCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>가&0; 보다 작습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code> is multidimensional.  \n  \n \\- or -  \n  \n <code>index</code> is greater than or equal to the length of <code>array</code>.  \n  \n \\- or -  \n  \n The number of elements in the source <xref href=\"System.Web.UI.StateManagedCollection\"></xref> is greater than the available space from the <code>index</code> to the end of the destination <code>array</code>."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.Count
  id: Count
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: Count
  nameWithType: StateManagedCollection.Count
  fullName: System.Web.UI.StateManagedCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "에 포함 된 요소의 수를 가져옵니다는 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 컬렉션입니다."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "에 포함 된 요소의 수는 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>합니다."
  overload: System.Web.UI.StateManagedCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.CreateKnownType(System.Int32)
  id: CreateKnownType(System.Int32)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: CreateKnownType(Int32)
  nameWithType: StateManagedCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.StateManagedCollection.CreateKnownType(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "파생된 클래스에서 재정의 되 면 구현 하는 클래스의 인스턴스를 만들고 <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref>합니다. 생성 되는 개체 유형을 기반으로 반환 된 컬렉션의 지정된 된 멤버는 <xref:System.Web.UI.StateManagedCollection.GetKnownTypes*>메서드.</xref:System.Web.UI.StateManagedCollection.GetKnownTypes*>"
  remarks: "CreateKnownType 메서드 내부적으로 호출 됩니다는 <xref:System.Web.UI.StateManagedCollection>컬렉션의 구현에는 <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23LoadViewState%2A?displayProperty=fullName>메서드.</xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23LoadViewState%2A?displayProperty=fullName> </xref:System.Web.UI.StateManagedCollection> 파생된 컬렉션의 기본 인스턴스를 반환 하려면 CreateKnownType 메서드를 재정의 <xref:System.Web.UI.IStateManager>제공 된 것으로 식별 되 형식 `index`, 반환 형식 중 하나에 매핑되는 <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A>메서드.</xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> </xref:System.Web.UI.IStateManager>"
  example:
  - "The following code example demonstrates how a strongly typed <xref:System.Web.UI.StateManagedCollection> class implements the CreateKnownType method. The `CycleCollection` implementation of CreateKnownType returns the default instance of either a `Bicycle` or `Tricycle` object, depending on the index passed. This code example is part of a larger example provided for the <xref:System.Web.UI.StateManagedCollection> class.  \n  \n [!code-cs[Samples.AspNet.CycleCollection#2](~/add/codesnippet/csharp/m-system.web.ui.stateman_1_1.cs)]\n [!code-vb[Samples.AspNet.CycleCollection#2](~/add/codesnippet/visualbasic/m-system.web.ui.stateman_1_1.vb)]"
  syntax:
    content: protected virtual object CreateKnownType (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "반환 된 형식의 순서 있는 목록을 인덱스 <xref:System.Web.UI.StateManagedCollection.GetKnownTypes*>, 형식의 <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> 만들려는.</xref:System.Web.UI.StateManagedCollection.GetKnownTypes*>"
    return:
      type: System.Object
      description: "파생 된 클래스의 인스턴스 <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref>를 따라는 <code> index </code> 제공 합니다."
  overload: System.Web.UI.StateManagedCollection.CreateKnownType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "모든 경우에 파생된 클래스에서 재정의 되지 않으면 합니다."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: StateManagedCollection.GetEnumerator()
  fullName: System.Web.UI.StateManagedCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "반복 하는 반복기를 반환 된 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 컬렉션입니다."
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>을 반복 하는 데 사용 하 여 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Web.UI.StateManagedCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.GetKnownTypes
  id: GetKnownTypes
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: GetKnownTypes()
  nameWithType: StateManagedCollection.GetKnownTypes()
  fullName: System.Web.UI.StateManagedCollection.GetKnownTypes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "파생된 클래스에서 재정의 하는 경우의 배열을 가져옵니다 <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> 형식에 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 컬렉션에 포함 될 수 있습니다."
  remarks: "GetKnownTypes 메서드 내부적으로 호출 됩니다는 <xref:System.Web.UI.StateManagedCollection>컬렉션의 구현에는 <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>메서드.</xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> </xref:System.Web.UI.StateManagedCollection> 파생된 컬렉션의 배열을 반환 하려면 GetKnownTypes 메서드를 재정의 <xref:System.Type>컬렉션에 포함할 수 있는 형식을 나타내는 개체입니다.</xref:System.Type>"
  example:
  - "The following code example demonstrates how a strongly typed <xref:System.Web.UI.StateManagedCollection> class implements the GetKnownTypes method. The `CycleCollection` implementation of GetKnownTypes returns a <xref:System.Type> array of known types, including `Bicycle` and `Tricycle` types. This code example is part of a larger example provided for the <xref:System.Web.UI.StateManagedCollection> class.  \n  \n [!code-cs[Samples.AspNet.CycleCollection#2](~/add/codesnippet/csharp/m-system.web.ui.stateman_0_1.cs)]\n [!code-vb[Samples.AspNet.CycleCollection#2](~/add/codesnippet/visualbasic/m-system.web.ui.stateman_0_1.vb)]"
  syntax:
    content: protected virtual Type[] GetKnownTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "순서 있는 배열 <xref:System.Type>개체의 형식을 식별 하는 <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> 개체를 컬렉션에 포함 될 수 있습니다.</xref:System.Type> 기본 구현은 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.StateManagedCollection.GetKnownTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnClear
  id: OnClear
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnClear()
  nameWithType: StateManagedCollection.OnClear()
  fullName: System.Web.UI.StateManagedCollection.OnClear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "파생된 클래스에서 재정의 되 면 수행 하기 전에 추가 작업은 <xref:System.Web.UI.StateManagedCollection.Clear*>메서드 컬렉션에서 모든 항목을 제거 합니다.</xref:System.Web.UI.StateManagedCollection.Clear*>"
  remarks: "파생 된 컬렉션 <xref:System.Web.UI.StateManagedCollection>OnClear 메서드를 사용 하 여 컬렉션에서 모든 항목이 제거 되기 전에 추가 작업을 수행를 재정의 하는 <xref:System.Web.UI.StateManagedCollection.Clear%2A>메서드.</xref:System.Web.UI.StateManagedCollection.Clear%2A> </xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnClear ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.OnClear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnClearComplete
  id: OnClearComplete
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnClearComplete()
  nameWithType: StateManagedCollection.OnClearComplete()
  fullName: System.Web.UI.StateManagedCollection.OnClearComplete()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "파생된 클래스에서 재정의 되 면 후 추가 작업을 수행 합니다.는 <xref:System.Web.UI.StateManagedCollection.Clear*>메서드 컬렉션에서 모든 항목을 제거 하 고 나면.</xref:System.Web.UI.StateManagedCollection.Clear*>"
  remarks: "파생 된 컬렉션 <xref:System.Web.UI.StateManagedCollection>OnClearComplete 메서드를 사용 하 여 컬렉션에서 모든 항목을 제거한 후 추가 작업을 수행를 재정의 하는 <xref:System.Web.UI.StateManagedCollection.Clear%2A>메서드.</xref:System.Web.UI.StateManagedCollection.Clear%2A> </xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnClearComplete ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.OnClearComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)
  id: OnInsert(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnInsert(Int32,Object)
  nameWithType: StateManagedCollection.OnInsert(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnInsert(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "파생된 클래스에서 재정의 되 면 수행 하기 전에 추가 작업은 &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt; 또는 &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A&gt; 메서드 컬렉션에 항목을 추가 합니다."
  remarks: "파생 된 컬렉션 <xref:System.Web.UI.StateManagedCollection>OnInsert 메서드 항목을 사용 하 여 컬렉션에 추가 되기 전에 추가 작업을 수행를 재정의 하는 <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A>또는 <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A>메서드.</xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> </xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> </xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnInsert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "인덱스&0;부터 시작 `value` 삽입 해야는 &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt; 메서드."
    - id: value
      type: System.Object
      description: "에 삽입할 개체는 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>합니다."
  overload: System.Web.UI.StateManagedCollection.OnInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)
  id: OnInsertComplete(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnInsertComplete(Int32,Object)
  nameWithType: StateManagedCollection.OnInsertComplete(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnInsertComplete(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "파생된 클래스에서 재정의 되 면 후 추가 작업을 수행 합니다.는 &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt; 또는 &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A&gt; 메서드 컬렉션에 항목을 추가 합니다."
  remarks: "파생 된 컬렉션 <xref:System.Web.UI.StateManagedCollection>OnInsertComplete 메서드 항목을 사용 하 여 컬렉션에 추가 된 후 추가 작업을 수행를 재정의 하는 <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A>또는 <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A>메서드.</xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> </xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> </xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnInsertComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "인덱스&0;부터 시작 `value` 사용 하 여 삽입 된 &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt; 메서드."
    - id: value
      type: System.Object
      description: "개체에 삽입 된 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>합니다."
  overload: System.Web.UI.StateManagedCollection.OnInsertComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)
  id: OnRemove(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnRemove(Int32,Object)
  nameWithType: StateManagedCollection.OnRemove(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnRemove(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "파생된 클래스에서 재정의 되 면 수행 하기 전에 추가 작업은 &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt; 또는 &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt; 메서드 컬렉션에서 지정된 된 항목을 제거 합니다."
  remarks: "파생 된 컬렉션 <xref:System.Web.UI.StateManagedCollection>OnRemove 메서드 항목을 사용 하 여 컬렉션에서 제거 되기 전에 추가 작업을 수행를 재정의 하는 <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A>또는 <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A>메서드.</xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> </xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> </xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnRemove (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "이 제거 하려면 항목의&0;부터 시작 인덱스 때 사용 되 &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt; 호출 됩니다."
    - id: value
      type: System.Object
      description: "제거할 개체의 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>이며 될 때 사용 됩니다 &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt; 호출 됩니다."
  overload: System.Web.UI.StateManagedCollection.OnRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)
  id: OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnRemoveComplete(Int32,Object)
  nameWithType: StateManagedCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnRemoveComplete(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "파생된 클래스에서 재정의 되 면 후 추가 작업을 수행 합니다.는 &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt; 또는 &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt; 메서드 컬렉션에서 지정된 된 항목을 제거 합니다."
  remarks: "파생 된 컬렉션 <xref:System.Web.UI.StateManagedCollection>OnRemoveComplete 메서드를 사용 하 여 컬렉션에서 항목을 제거한 후 추가 작업을 수행를 재정의 하는 <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A>또는 <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A>메서드.</xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> </xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> </xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnRemoveComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "이 제거 하려면 항목의&0;부터 시작 인덱스 때 사용 되 &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt; 호출 됩니다."
    - id: value
      type: System.Object
      description: "제거 된 개체가 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>이며 될 때 사용 됩니다 &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt; 호출 됩니다."
  overload: System.Web.UI.StateManagedCollection.OnRemoveComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: StateManagedCollection.OnValidate(Object)
  fullName: System.Web.UI.StateManagedCollection.OnValidate(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "파생된 클래스에서 재정의 되 면 요소의 유효성을 검사는 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 컬렉션입니다."
  remarks: "OnValidate 메서드를 호출을 통해 조작 하는 개체의 유효성을 검사 하는 <xref:System.Web.UI.StateManagedCollection>구현의 <xref:System.Collections.IList>인터페이스 메서드의.</xref:System.Collections.IList> </xref:System.Web.UI.StateManagedCollection> 개체가 컬렉션에 의해 조작 되지 않았는지 확인 하는 기본 구현은 `null`소비량이 적어지지만에서 파생 된 컬렉션 <xref:System.Web.UI.StateManagedCollection>, 형식 검사와 같은 추가 유효성 검사를 수행 하려면 OnValidate 메서드를 재정의 합니다.</xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnValidate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> 유효성을 검사 합니다."
  overload: System.Web.UI.StateManagedCollection.OnValidate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.SetDirty
  id: SetDirty
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: SetDirty()
  nameWithType: StateManagedCollection.SetDirty()
  fullName: System.Web.UI.StateManagedCollection.SetDirty()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "전체 강제로 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 컬렉션이 뷰 상태에 직렬화 합니다."
  remarks: "SetDirty 메서드 강제로 <xref:System.Web.UI.StateManagedCollection>완전히 serialize 되는 컬렉션 (반면는 <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>만 변경 정보를 저장 하는 메서드).</xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> </xref:System.Web.UI.StateManagedCollection> 컬렉션을 의미 있는 방식에서 변경 되어 변경 정보 뷰 상태에서 메모리에 개체를 다시 만들 수 없는 경우에 유용 합니다."
  syntax:
    content: public void SetDirty ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.SetDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.SetDirtyObject(System.Object)
  id: SetDirtyObject(System.Object)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: SetDirtyObject(Object)
  nameWithType: StateManagedCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.StateManagedCollection.SetDirtyObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "파생된 클래스에서 재정의 되 면 지시는 <xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref> 변경만 기록 하는 대신 전체 상태 뷰 상태를 기록 하도록 컬렉션에 포함 된 정보입니다."
  remarks: "SetDirtyObject 메서드 내부적으로 호출 됩니다는 <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>, <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A>, 및 <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A>메서드.</xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> </xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> </xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>"
  example:
  - "The following code example demonstrates how a strongly typed <xref:System.Web.UI.StateManagedCollection> class implements the abstract SetDirtyObject method. The `CycleCollection` uses a <xref:System.Web.UI.StateBag> object to store its view-state information, and simply delegates the call to the <xref:System.Web.UI.StateBag.SetDirty%2A> method of the <xref:System.Web.UI.StateBag> object. This code example is part of a larger example provided for the <xref:System.Web.UI.StateManagedCollection> class.  \n  \n [!code-cs[Samples.AspNet.CycleCollection#2](~/add/codesnippet/csharp/m-system.web.ui.stateman_2_1.cs)]\n [!code-vb[Samples.AspNet.CycleCollection#2](~/add/codesnippet/visualbasic/m-system.web.ui.stateman_2_1.vb)]"
  syntax:
    content: protected abstract void SetDirtyObject (object o);
    parameters:
    - id: o
      type: System.Object
      description: "<xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> 하는 자체 완전히 직렬화 해야 합니다."
  overload: System.Web.UI.StateManagedCollection.SetDirtyObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.ICollection.Count
  nameWithType: StateManagedCollection.System.Collections.ICollection.Count
  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "에 포함 된 요소의 수를 가져옵니다는 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 컬렉션입니다."
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "에 있는 요소의 수는 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>합니다."
  overload: System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: StateManagedCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 컬렉션이 동기화 되어 스레드로부터 안전 하 게 보호 합니다. 이 메서드가 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 모든 경우에에서 합니다."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>모든 경우"
  overload: System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: StateManagedCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다는 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 컬렉션입니다. 이 메서드가 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 모든 경우에에서 합니다."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>모든 경우"
  overload: System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: StateManagedCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "반복 하는 반복기를 반환 된 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 컬렉션입니다."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>을 반복 하는 데 사용 하 여 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "항목을 추가 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 컬렉션입니다."
  remarks: "<xref:System.Web.UI.StateManagedCollection.OnValidate%2A>및 <xref:System.Web.UI.StateManagedCollection.OnInsert%2A>요소를 컬렉션에 추가 되기 전에 호출 되어 및 <xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A>메서드 요소가 추가 된 후 호출 됩니다.</xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A> </xref:System.Web.UI.StateManagedCollection.OnInsert%2A> </xref:System.Web.UI.StateManagedCollection.OnValidate%2A>"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The<xref uid=&quot;langword_csharp_ object &quot; name=&quot; object &quot; href=&quot;&quot;></xref>to add to the <xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>."
    return:
      type: System.Int32
      description: "새 요소가 삽입 된 위치입니다."
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The specified <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.Clear()
  nameWithType: StateManagedCollection.System.Collections.IList.Clear()
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "모든 항목을 제거는 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 컬렉션입니다."
  remarks: "<xref:System.Web.UI.StateManagedCollection.OnClear%2A>전에 메서드가 호출 되는 <xref:System.Web.UI.StateManagedCollection.Clear%2A>메서드가 호출 되 고 <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A>후 메서드는 <xref:System.Web.UI.StateManagedCollection.Clear%2A>컬렉션에서 요소 제거 완료.</xref:System.Web.UI.StateManagedCollection.Clear%2A> </xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> </xref:System.Web.UI.StateManagedCollection.Clear%2A> </xref:System.Web.UI.StateManagedCollection.OnClear%2A>"
  syntax:
    content: void IList.Clear ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "결정 여부는 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 컬렉션에 특정 값을 포함 합니다."
  remarks: "<xref:System.Web.UI.StateManagedCollection.OnValidate%2A>유효성을 검사할 메서드는 `value` 컬렉션을 선택 하기 전에.</xref:System.Web.UI.StateManagedCollection.OnValidate%2A>"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref> 에서 찾으려고는 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>에 개체가 있으면는 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 경우 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 값 매개 변수의 전달 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 반환 됩니다."
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "지정된 된 항목의 인덱스를 결정은 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 컬렉션입니다."
  remarks: "<xref:System.Web.UI.StateManagedCollection.OnValidate%2A>유효성을 검사할 메서드는 `value` 인덱스 반환 되기 전에.</xref:System.Web.UI.StateManagedCollection.OnValidate%2A>"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "찾을 개체의 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>합니다."
    return:
      type: System.Int32
      description: "인덱스 <code> value </code>가 목록에서 검색 되지 않으면-1입니다."
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "에 항목을 삽입의 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 컬렉션 내의 지정한 인덱스에 있습니다."
  remarks: "경우 `index` 은-1, `value` 의 시작 부분에 추가 되는 <xref:System.Web.UI.StateManagedCollection>컬렉션.</xref:System.Web.UI.StateManagedCollection> 경우 `index` 는 컬렉션의 항목 수와 일치 `value` 컬렉션의 끝에 추가 됩니다."
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "인덱스&0;부터 시작 `value` 삽입 해야 합니다."
    - id: value
      type: System.Object
      description: "에 삽입할 개체는 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>합니다."
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정 된 <code> index </code> 컬렉션의 범위를 벗어났습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 읽기 전용입니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The specified <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: StateManagedCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 컬렉션 크기가 고정된 되어 있습니다. 이 메서드가 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 모든 경우에에서 합니다."
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>모든 경우"
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: StateManagedCollection.System.Collections.IList.IsReadOnly
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 컬렉션은 읽기 전용입니다."
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 읽기 전용, 되지 않았으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: StateManagedCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> 지정된 된 인덱스에 요소입니다."
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "가져올 요소의&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.Object
      description: "지정된 된 인덱스에 요소입니다."
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정 된 <code> index </code> 컬렉션의 범위를 벗어났습니다."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "지정된 된 개체의 첫 번째 제거는 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 컬렉션입니다."
  remarks: "<xref:System.Web.UI.StateManagedCollection.OnValidate%2A>유효성을 검사할 메서드는 `value` 전에 값이 컬렉션에서 제거 됩니다.</xref:System.Web.UI.StateManagedCollection.OnValidate%2A> <xref:System.Web.UI.StateManagedCollection.OnRemove%2A>개체를 제거 하기 전에 메서드는 및 <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A>메서드는 개체가 제거 된 후 호출 됩니다.</xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> </xref:System.Web.UI.StateManagedCollection.OnRemove%2A>"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "제거할 개체의 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>합니다."
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 읽기 전용입니다."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: StateManagedCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "제거는 <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> 지정된 된 인덱스에 요소입니다."
  remarks: "<xref:System.Web.UI.StateManagedCollection.OnValidate%2A>유효성을 검사할 메서드는 `value` 전에 값이 컬렉션에서 제거 됩니다.</xref:System.Web.UI.StateManagedCollection.OnValidate%2A> <xref:System.Web.UI.StateManagedCollection.OnRemove%2A>개체를 제거 하기 전에 메서드는 및 <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A>메서드는 개체가 제거 된 후 호출 됩니다.</xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> </xref:System.Web.UI.StateManagedCollection.OnRemove%2A>"
  syntax:
    content: void IList.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "제거할 항목의&0;부터 시작 하는 인덱스입니다."
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 읽기 전용입니다."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 컬렉션 뷰 상태의 변경 내용을 저장 합니다."
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컬렉션에서 자신의 상태와의 모든 상태를 저장 하도록 표시 되어 있으면는 <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> ; 포함 된 항목, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "이전에 저장 된 뷰 상태를 복원는 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 컬렉션 및 <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> 포함 된 항목입니다."
  remarks: "저장 된 뷰 상태 정보를 복원 하는이 메서드는 <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>메서드.</xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>       뷰 상태는 서버 컨트롤의 속성 값의 누적 합니다. 이러한 값이 서버 컨트롤의 <xref:System.Web.UI.Control.ViewState%2A>속성을 <xref:System.Web.UI.StateBag>클래스</xref:System.Web.UI.StateBag> 의 인스턴스인</xref:System.Web.UI.Control.ViewState%2A> 에 자동으로 포함 됩니다. 그런 다음이 속성의이 값은 저장 상태 서버 컨트롤 수명 주기 단계 후 문자열 개체에 유지 됩니다. 자세한 내용은 참조 [NIB: ASP.NET 웹 서버 컨트롤](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1)합니다.       이 메서드는 주로 컨트롤 개발자가 사용 됩니다. 사용자 지정 서버 컨트롤에서 해당 뷰 상태를 복원 하는 방법을 지정 하려면이 메서드를 재정의할 수 있습니다. 자세한 내용은 참조 [ASP.NET 상태 관리 개요](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: void IStateManager.LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "컬렉션과 컬렉션 요소의 상태를 복원할를 나타내는 개체입니다."
  overload: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "변경 내용을 저장는 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 컬렉션 및 각 <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> 서버 페이지가 포함 된 이후에 개체를 다시 게시 합니다."
  remarks: "이 메서드는 주로 컨트롤 개발자가 사용 됩니다.       뷰 상태는 서버 컨트롤의 속성 값의 누적 합니다. 이러한 값이 서버 컨트롤의 <xref:System.Web.UI.Control.ViewState%2A>속성을 <xref:System.Web.UI.StateBag>클래스</xref:System.Web.UI.StateBag> 의 인스턴스인</xref:System.Web.UI.Control.ViewState%2A> 에 자동으로 포함 됩니다. 그런 다음이 속성의이 값은 저장 상태 서버 컨트롤 수명 주기 단계 후 문자열 개체에 유지 됩니다. 자세한 내용은 참조 [NIB: ASP.NET 웹 서버 컨트롤](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1)합니다.       이 문자열 개체 뷰 상태가 저장 되는 경우 숨겨진된 HTML 요소에 저장 된 변수도 클라이언트에 반환 됩니다 (`<input type=&quot;hidden&quot;>`). 사용자 지정 서버 컨트롤을 만들 때이 메서드를 재정의 하 고 서버 컨트롤의 수정 하 여 효율성을 개선 <xref:System.Web.UI.Control.ViewState%2A>속성.</xref:System.Web.UI.Control.ViewState%2A> 자세한 내용은 참조 [NIB: ASP.NET 웹 서버 컨트롤](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1) 및[ASP.NET 상태 관리 개요](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "뷰 상태 변경 내용을 포함 하는 개체는 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 및 포함 된 항목입니다. 이 메서드가 반환 하는 경우 뷰 상태가 없는 연결 된 컬렉션 및 해당 요소의 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "로 인해는 <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> 컬렉션 및 각는 <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> 동일한 페이지에 대 한 요청에 대해 유지할 수 있도록 해당 뷰 상태의 변경 내용을 추적 하기 위해 포함 된 개체입니다."
  remarks: 'View state is the accumulation of the values of a server control''s properties. These values are automatically placed in the server control''s <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class. This property''s value is then persisted to a string object after the save state stage of the server control life cycle. For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).'
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.StateManagedCollection.#ctor
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: StateManagedCollection()
  nameWithType: StateManagedCollection.StateManagedCollection()
  fullName: System.Web.UI.StateManagedCollection.StateManagedCollection()
- uid: System.Web.UI.StateManagedCollection.Clear
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: Clear()
  nameWithType: StateManagedCollection.Clear()
  fullName: System.Web.UI.StateManagedCollection.Clear()
- uid: System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: StateManagedCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.StateManagedCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.StateManagedCollection.Count
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: Count
  nameWithType: StateManagedCollection.Count
  fullName: System.Web.UI.StateManagedCollection.Count
- uid: System.Web.UI.StateManagedCollection.CreateKnownType(System.Int32)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: CreateKnownType(Int32)
  nameWithType: StateManagedCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.StateManagedCollection.CreateKnownType(Int32)
- uid: System.Web.UI.StateManagedCollection.GetEnumerator
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: StateManagedCollection.GetEnumerator()
  fullName: System.Web.UI.StateManagedCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.StateManagedCollection.GetKnownTypes
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: GetKnownTypes()
  nameWithType: StateManagedCollection.GetKnownTypes()
  fullName: System.Web.UI.StateManagedCollection.GetKnownTypes()
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.StateManagedCollection.OnClear
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnClear()
  nameWithType: StateManagedCollection.OnClear()
  fullName: System.Web.UI.StateManagedCollection.OnClear()
- uid: System.Web.UI.StateManagedCollection.OnClearComplete
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnClearComplete()
  nameWithType: StateManagedCollection.OnClearComplete()
  fullName: System.Web.UI.StateManagedCollection.OnClearComplete()
- uid: System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnInsert(Int32,Object)
  nameWithType: StateManagedCollection.OnInsert(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnInsert(Int32,Object)
- uid: System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnInsertComplete(Int32,Object)
  nameWithType: StateManagedCollection.OnInsertComplete(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnInsertComplete(Int32,Object)
- uid: System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnRemove(Int32,Object)
  nameWithType: StateManagedCollection.OnRemove(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnRemove(Int32,Object)
- uid: System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnRemoveComplete(Int32,Object)
  nameWithType: StateManagedCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnRemoveComplete(Int32,Object)
- uid: System.Web.UI.StateManagedCollection.OnValidate(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnValidate(Object)
  nameWithType: StateManagedCollection.OnValidate(Object)
  fullName: System.Web.UI.StateManagedCollection.OnValidate(Object)
- uid: System.Web.UI.StateManagedCollection.SetDirty
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: SetDirty()
  nameWithType: StateManagedCollection.SetDirty()
  fullName: System.Web.UI.StateManagedCollection.SetDirty()
- uid: System.Web.UI.StateManagedCollection.SetDirtyObject(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: SetDirtyObject(Object)
  nameWithType: StateManagedCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.StateManagedCollection.SetDirtyObject(Object)
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: StateManagedCollection.System.Collections.ICollection.Count
  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.Count
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: StateManagedCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: StateManagedCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.SyncRoot
- uid: System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: StateManagedCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Add(Object)
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Clear
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Clear()
  nameWithType: StateManagedCollection.System.Collections.IList.Clear()
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Clear()
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Contains(Object)
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: StateManagedCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: StateManagedCollection.System.Collections.IList.IsReadOnly
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IsReadOnly
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: StateManagedCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Item(Int32)
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Remove(Object)
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: StateManagedCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.RemoveAt(Int32)
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.StateManagedCollection.#ctor*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: StateManagedCollection
  nameWithType: StateManagedCollection.StateManagedCollection
- uid: System.Web.UI.StateManagedCollection.Clear*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: Clear
  nameWithType: StateManagedCollection.Clear
- uid: System.Web.UI.StateManagedCollection.CopyTo*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: CopyTo
  nameWithType: StateManagedCollection.CopyTo
- uid: System.Web.UI.StateManagedCollection.Count*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: Count
  nameWithType: StateManagedCollection.Count
- uid: System.Web.UI.StateManagedCollection.CreateKnownType*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: CreateKnownType
  nameWithType: StateManagedCollection.CreateKnownType
- uid: System.Web.UI.StateManagedCollection.GetEnumerator*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: StateManagedCollection.GetEnumerator
- uid: System.Web.UI.StateManagedCollection.GetKnownTypes*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: GetKnownTypes
  nameWithType: StateManagedCollection.GetKnownTypes
- uid: System.Web.UI.StateManagedCollection.OnClear*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnClear
  nameWithType: StateManagedCollection.OnClear
- uid: System.Web.UI.StateManagedCollection.OnClearComplete*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnClearComplete
  nameWithType: StateManagedCollection.OnClearComplete
- uid: System.Web.UI.StateManagedCollection.OnInsert*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnInsert
  nameWithType: StateManagedCollection.OnInsert
- uid: System.Web.UI.StateManagedCollection.OnInsertComplete*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnInsertComplete
  nameWithType: StateManagedCollection.OnInsertComplete
- uid: System.Web.UI.StateManagedCollection.OnRemove*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnRemove
  nameWithType: StateManagedCollection.OnRemove
- uid: System.Web.UI.StateManagedCollection.OnRemoveComplete*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnRemoveComplete
  nameWithType: StateManagedCollection.OnRemoveComplete
- uid: System.Web.UI.StateManagedCollection.OnValidate*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnValidate
  nameWithType: StateManagedCollection.OnValidate
- uid: System.Web.UI.StateManagedCollection.SetDirty*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: SetDirty
  nameWithType: StateManagedCollection.SetDirty
- uid: System.Web.UI.StateManagedCollection.SetDirtyObject*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: SetDirtyObject
  nameWithType: StateManagedCollection.SetDirtyObject
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: StateManagedCollection.System.Collections.ICollection.Count
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: StateManagedCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: StateManagedCollection.System.Collections.ICollection.SyncRoot
- uid: System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: StateManagedCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Add*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: StateManagedCollection.System.Collections.IList.Add
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Clear*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Clear
  nameWithType: StateManagedCollection.System.Collections.IList.Clear
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Contains*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: StateManagedCollection.System.Collections.IList.Contains
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: StateManagedCollection.System.Collections.IList.IndexOf
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Insert*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: StateManagedCollection.System.Collections.IList.Insert
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: StateManagedCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: StateManagedCollection.System.Collections.IList.IsReadOnly
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Item*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: StateManagedCollection.System.Collections.IList.Item
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Remove*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: StateManagedCollection.System.Collections.IList.Remove
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt
  nameWithType: StateManagedCollection.System.Collections.IList.RemoveAt
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.TrackViewState
