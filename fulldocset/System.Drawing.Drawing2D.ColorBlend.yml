### YamlMime:ManagedReference
items:
- uid: System.Drawing.Drawing2D.ColorBlend
  id: ColorBlend
  children:
  - System.Drawing.Drawing2D.ColorBlend.#ctor
  - System.Drawing.Drawing2D.ColorBlend.#ctor(System.Int32)
  - System.Drawing.Drawing2D.ColorBlend.Colors
  - System.Drawing.Drawing2D.ColorBlend.Positions
  langs:
  - csharp
  name: ColorBlend
  nameWithType: ColorBlend
  fullName: System.Drawing.Drawing2D.ColorBlend
  type: Class
  summary: "색 및 위치는 여러 가지 색 그라데이션을에 색 혼합 효과 주는 데 사용 되는 배열을 정의 합니다. 이 클래스는 상속 될 수 없습니다."
  syntax:
    content: public sealed class ColorBlend
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.ColorBlend.#ctor
  id: '#ctor'
  parent: System.Drawing.Drawing2D.ColorBlend
  langs:
  - csharp
  name: ColorBlend()
  nameWithType: ColorBlend.ColorBlend()
  fullName: System.Drawing.Drawing2D.ColorBlend.ColorBlend()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Drawing2D.ColorBlend&quot;> </xref> 클래스입니다."
  remarks: ''
  example:
  - "The following example is intended to be used in a Windows Forms environment. It demonstrates how to use the <xref:System.Drawing.Drawing2D.ColorBlend> class in conjunction with the <xref:System.Drawing.Drawing2D.LinearGradientBrush> class to draw an ellipse to screen that has its colors blended. The ellipse is green on the left, blends to yellow, then to blue, and finally to red on the right. This is accomplished through the settings in the `myColors` and `myPositions` arrays used in the <xref:System.Drawing.Drawing2D.ColorBlend.Colors%2A> and <xref:System.Drawing.Drawing2D.ColorBlend.Positions%2A> properties. Note that the <xref:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors%2A> property of the <xref:System.Drawing.Drawing2D.LinearGradientBrush> object named `lgBrush2` must be made equal to the <xref:System.Drawing.Drawing2D.ColorBlend> object `myBlend`.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicMisc#4](~/add/codesnippet/visualbasic/m-system.drawing.drawing_16_1.vb)]\n [!code-cs[System.Drawing.Drawing2D.ClassicMisc#4](~/add/codesnippet/csharp/m-system.drawing.drawing_16_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicMisc#4](~/add/codesnippet/cpp/m-system.drawing.drawing_16_1.cpp)]"
  syntax:
    content: public ColorBlend ();
    parameters: []
  overload: System.Drawing.Drawing2D.ColorBlend.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.ColorBlend.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Drawing.Drawing2D.ColorBlend
  langs:
  - csharp
  name: ColorBlend(Int32)
  nameWithType: ColorBlend.ColorBlend(Int32)
  fullName: System.Drawing.Drawing2D.ColorBlend.ColorBlend(Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Drawing2D.ColorBlend&quot;> </xref> 지정된 된 수의 색 및 위치를 사용 하 여 클래스입니다."
  remarks: ''
  example:
  - For an example see <xref:System.Drawing.Drawing2D.ColorBlend.%23ctor%2A>
  syntax:
    content: public ColorBlend (int count);
    parameters:
    - id: count
      type: System.Int32
      description: "색과이 위치의 수 <xref href=&quot;System.Drawing.Drawing2D.ColorBlend&quot;> </xref>합니다."
  overload: System.Drawing.Drawing2D.ColorBlend.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.ColorBlend.Colors
  id: Colors
  parent: System.Drawing.Drawing2D.ColorBlend
  langs:
  - csharp
  name: Colors
  nameWithType: ColorBlend.Colors
  fullName: System.Drawing.Drawing2D.ColorBlend.Colors
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "그라데이션 따라 해당 위치에 사용할 색을 나타내는 색의 배열을 가져오거나 설정 합니다."
  remarks: "이 속성은 배열을 <xref:System.Drawing.Color>그라데이션 따라 해당 위치에 사용할 색을 나타내는 구조.</xref:System.Drawing.Color> 와 함께 <xref:System.Drawing.Drawing2D.ColorBlend.Positions%2A>속성,이 속성은 다중 색 그라데이션을 정의 합니다.</xref:System.Drawing.Drawing2D.ColorBlend.Positions%2A>"
  syntax:
    content: public System.Drawing.Color[] Colors { get; set; }
    return:
      type: System.Drawing.Color[]
      description: "배열을 <xref href=&quot;System.Drawing.Color&quot;> </xref> 그라데이션 따라 해당 위치에 사용할 색을 나타내는 구조입니다."
  overload: System.Drawing.Drawing2D.ColorBlend.Colors*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.ColorBlend.Positions
  id: Positions
  parent: System.Drawing.Drawing2D.ColorBlend
  langs:
  - csharp
  name: Positions
  nameWithType: ColorBlend.Positions
  fullName: System.Drawing.Drawing2D.ColorBlend.Positions
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "그라데이션 선 따라 위치를 가져오거나 설정 합니다."
  remarks: "이 배열의 요소 그라데이션 선 따라 거리의 백분율을 지정합니다. 예를 들어 0.2 요소 값이이 지점이 시작 지점에서 전체 거리의 20% 임을 지정 합니다. 이 배열에 있는 요소 0.0 f에서 1.0 f, 사이의 부동 소수점 값으로 표시 됩니다 하 고 배열의 첫 번째 요소가 0.0 f 여야 합니다. 마지막 요소는 1.0 f 여야 합니다.       와 함께 <xref:System.Drawing.Drawing2D.ColorBlend.Colors%2A>속성,이 속성은 다중 색 그라데이션을 정의 합니다.</xref:System.Drawing.Drawing2D.ColorBlend.Colors%2A>"
  syntax:
    content: public float[] Positions { get; set; }
    return:
      type: System.Single[]
      description: "그라데이션 선 따라 거리의 백분율을 지정 하는 값의 배열입니다."
  overload: System.Drawing.Drawing2D.ColorBlend.Positions*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Drawing.Drawing2D.ColorBlend.#ctor
  parent: System.Drawing.Drawing2D.ColorBlend
  isExternal: false
  name: ColorBlend()
  nameWithType: ColorBlend.ColorBlend()
  fullName: System.Drawing.Drawing2D.ColorBlend.ColorBlend()
- uid: System.Drawing.Drawing2D.ColorBlend.#ctor(System.Int32)
  parent: System.Drawing.Drawing2D.ColorBlend
  isExternal: false
  name: ColorBlend(Int32)
  nameWithType: ColorBlend.ColorBlend(Int32)
  fullName: System.Drawing.Drawing2D.ColorBlend.ColorBlend(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Drawing2D.ColorBlend.Colors
  parent: System.Drawing.Drawing2D.ColorBlend
  isExternal: false
  name: Colors
  nameWithType: ColorBlend.Colors
  fullName: System.Drawing.Drawing2D.ColorBlend.Colors
- uid: System.Drawing.Color[]
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color[]
  spec.csharp:
  - uid: System.Drawing.Color
    name: Color
    nameWithType: Color
    fullName: Color[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Drawing2D.ColorBlend.Positions
  parent: System.Drawing.Drawing2D.ColorBlend
  isExternal: false
  name: Positions
  nameWithType: ColorBlend.Positions
  fullName: System.Drawing.Drawing2D.ColorBlend.Positions
- uid: System.Single[]
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single[]
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: Single[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Drawing2D.ColorBlend.#ctor*
  parent: System.Drawing.Drawing2D.ColorBlend
  isExternal: false
  name: ColorBlend
  nameWithType: ColorBlend.ColorBlend
- uid: System.Drawing.Drawing2D.ColorBlend.Colors*
  parent: System.Drawing.Drawing2D.ColorBlend
  isExternal: false
  name: Colors
  nameWithType: ColorBlend.Colors
- uid: System.Drawing.Drawing2D.ColorBlend.Positions*
  parent: System.Drawing.Drawing2D.ColorBlend
  isExternal: false
  name: Positions
  nameWithType: ColorBlend.Positions
