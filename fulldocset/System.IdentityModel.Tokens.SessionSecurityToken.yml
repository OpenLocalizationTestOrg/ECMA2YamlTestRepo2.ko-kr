### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SessionSecurityToken
  id: SessionSecurityToken
  children:
  - System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal)
  - System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String)
  - System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.TimeSpan)
  - System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  - System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  - System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)
  - System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.DateTime,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)
  - System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.IdentityModel.Tokens.SymmetricSecurityKey)
  - System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal
  - System.IdentityModel.Tokens.SessionSecurityToken.Context
  - System.IdentityModel.Tokens.SessionSecurityToken.ContextId
  - System.IdentityModel.Tokens.SessionSecurityToken.EndpointId
  - System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.IdentityModel.Tokens.SessionSecurityToken.Id
  - System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent
  - System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode
  - System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime
  - System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime
  - System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration
  - System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion
  - System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys
  - System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom
  - System.IdentityModel.Tokens.SessionSecurityToken.ValidTo
  langs:
  - csharp
  name: SessionSecurityToken
  nameWithType: SessionSecurityToken
  fullName: System.IdentityModel.Tokens.SessionSecurityToken
  type: Class
  summary: "세션과 연결 된 데이터를 포함 하는 보안 토큰을 정의 합니다."
  remarks: "세션 토큰에 저장 된 <xref:System.Security.Claims.ClaimsPrincipal>; 세션을 정의 하는 다른 매개 변수 뿐만 아니라 세션에 연관 된 사용자의 예를 들어 세션 시작 및 종료 시간.</xref:System.Security.Claims.ClaimsPrincipal>       수동 시나리오에서는 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule>호출는 <xref:System.IdentityModel.Services.SessionAuthenticationModule>(SAM)에서 세션 토큰을 만드는 인증 파이프라인에서는 <xref:System.Security.Claims.ClaimsPrincipal>인증된 된 사용자를 나타내는입니다.</xref:System.Security.Claims.ClaimsPrincipal> </xref:System.IdentityModel.Services.SessionAuthenticationModule> </xref:System.IdentityModel.Services.WSFederationAuthenticationModule> SAM를 사용 하 여 구성 된 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>토큰을 만드는 쿠키로 serialize (고 이후 요청에서 쿠키에서 토큰을 deserialize 하는 데).</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> SAM 구성한의 인스턴스를 사용 하 여 <xref:System.IdentityModel.Services.CookieHandler>HTTP 응답에 쿠키를 다시 작성 하는 클래스입니다.</xref:System.IdentityModel.Services.CookieHandler> 이 쿠키는 클라이언트에 반환 되 고 이후 요청에서 클라이언트 수 라운드트립이 다시 보안 토큰을 가져오는 데 id 공급자를 다시 수행 하지 않고 쿠키 제공 합니다. Wif 세션의 작동 방식에 대 한 자세한 내용은 참조 [WIF 세션 관리](~/add/includes/ajax-current-ext-md.md)합니다. 웹 팜 시나리오에 세션을 사용 하는 방법에 대 한 정보를 참조 하십시오. [WIF 및 웹 팜](~/add/includes/ajax-current-ext-md.md)합니다.       세션 토큰 여부 참조 모드에서 작동할 수 있습니다. 세션 토큰 참조 모드에서 작동 되지 않으면 전체 토큰 클라이언트에 저장 된 세션 쿠키로 직렬화 됩니다. Serialize 된 세션 토큰 매우 커질 수 되었고 클라이언트에 저장 된 쿠키를 매우 많은 수 있습니다 따라서 합니다. 참조 모드 전체 세션을 직렬화 하는 대신 쿠키로 토큰을 토큰 세션 보안 토큰 캐시에 저장 되 고 캐시에서 토큰을 검색 하는 데 필요한 키를 생성 하는 데 사용 정보에만 쿠키에 저장 됩니다. 쿠키의 크기를 크게 줄일 수 있습니다이 있습니다. 세션 토큰 캐시 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>및 캐시 키가 구현 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>클래스</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> 에서 파생 된 클래스에 의해 구현 됩니다. <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>및 <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>속성에 사용 되는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>캐시 키를 생성 하는 클래스입니다.</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>       <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>속성 여부 참조 모드에서 세션 토큰 인지를 확인 합니다.</xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>      > [!IMPORTANT] >를 제공 하는 것이 좋습니다 참조 모드에서 작동 하는 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=fullName>global.asax.cs 파일 및 설정에 대 한 이벤트는 <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>전달 된 토큰에 대 한 속성의 <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName>속성.</xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> </xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=fullName> 이렇게 하면 세션 토큰 모든 요청에 대 한 참조 모드로 작동 있으며 단순히 설정 보다 우선 적용 됩니다는 <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=fullName>속성 세션 인증 모듈에 저장 합니다.</xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=fullName>       <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>WIF와 함께 제공 되는 클래스도 Ws-secure Conversation 세션 토큰을 serialize `<wsc:SecurityContextToken>` 요소.</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>"
  syntax:
    content: 'public class SessionSecurityToken : System.IdentityModel.Tokens.SecurityToken, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityToken
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal)
  id: '#ctor(System.Security.Claims.ClaimsPrincipal)'
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SessionSecurityToken(ClaimsPrincipal)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref> 클래스에서 지정된 된 보안 주체입니다."
  remarks: "다음 표에서 <xref:System.IdentityModel.Tokens.SessionSecurityToken>클래스</xref:System.IdentityModel.Tokens.SessionSecurityToken> 의 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 초기 값 |   |--------------|-------------------|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>| `claimsPrincipal`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>| `null`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>| 생성 된 고유 ID로 설정 |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>| <xref:System.String.Empty?displayProperty=fullName>|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>| 생성 된 고유 ID로 설정 |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>| `false`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>| `false`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>| <xref:System.DateTime.UtcNow%2A>|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>| <xref:System.DateTime.UtcNow%2A> <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName>속성 더하기. |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>| `null`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>| 생성 된 128 비트 대칭 키를 포함 합니다.</xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A> </xref:System.String.Empty?displayProperty=fullName> </xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A> **참고:** 기본 구현에서는이 속성을 사용 하지 않습니다. 서명 및 암호화 키가 지정 됩니다는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>에 의해 적용 된 쿠키 변환으로 토큰을 처리 하는. |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>| <xref:System.DateTime.UtcNow%2A>|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>| <xref:System.DateTime.UtcNow%2A>과 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName>속성입니다. |</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>"
  syntax:
    content: public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal);
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "토큰을 초기화 하는 클레임 주체입니다."
  overload: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimsPrincipal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Security.Claims.ClaimsPrincipal.Identities*> property of <code>claimsPrincipal</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SessionSecurityToken(SerializationInfo,StreamingContext)
  nameWithType: SessionSecurityToken.SessionSecurityToken(SerializationInfo,StreamingContext)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref> serialize 된 데이터 클래스입니다."
  syntax:
    content: protected SessionSecurityToken (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "직렬화 된 개체 데이터입니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "원본에 대 한 컨텍스트 정보입니다."
  overload: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String)
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.String)'
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SessionSecurityToken(ClaimsPrincipal,String)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref> 클래스에서 지정된 된 주 및 부트스트랩 토큰입니다."
  remarks: "다음 표에서 <xref:System.IdentityModel.Tokens.SessionSecurityToken>클래스</xref:System.IdentityModel.Tokens.SessionSecurityToken> 의 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 초기 값 |   |--------------|-------------------|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>| `claimsPrincipal`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>| `context`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>| 생성 된 고유 ID로 설정 |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>| <xref:System.String.Empty?displayProperty=fullName>|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>| 생성 된 고유 ID로 설정 |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>| `false`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>| `false`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>| <xref:System.DateTime.UtcNow%2A>|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>| <xref:System.DateTime.UtcNow%2A> <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName>속성 더하기. |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>| `null`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>| 생성 된 128 비트 대칭 키를 포함 합니다.</xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A> </xref:System.String.Empty?displayProperty=fullName> </xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A> **참고:** 기본 구현에서는이 속성을 사용 하지 않습니다. 서명 및 암호화 키가 지정 됩니다는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>에 의해 적용 된 쿠키 변환으로 토큰을 처리 하는. |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>| <xref:System.DateTime.UtcNow%2A>|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>| <xref:System.DateTime.UtcNow%2A>과 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName>속성입니다. |</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>"
  syntax:
    content: public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context);
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "부트스트랩 토큰에서 생성 된 클레임 주체입니다."
    - id: context
      type: System.String
      description: "상황에 맞는 옵션, 응용 프로그램별 문자열입니다."
  overload: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimsPrincipal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Security.Claims.ClaimsPrincipal.Identities*> property of <code>claimsPrincipal</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.TimeSpan)
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.TimeSpan)'
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SessionSecurityToken(ClaimsPrincipal,TimeSpan)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,TimeSpan)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,TimeSpan)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref> 클래스에서 지정된 된 보안 주체입니다. 새 토큰 유효 <xref:System.DateTime.UtcNow*>지정된 된 lifetime을 통해.</xref:System.DateTime.UtcNow*>"
  remarks: "다음 표에서 <xref:System.IdentityModel.Tokens.SessionSecurityToken>클래스</xref:System.IdentityModel.Tokens.SessionSecurityToken> 의 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 초기 값 |   |--------------|-------------------|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>| `claimsPrincipal`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>| `null`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>| 생성 된 고유 ID로 설정 |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>| <xref:System.String.Empty?displayProperty=fullName>|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>| 생성 된 고유 ID로 설정 |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>| `false`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>| `false`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>| <xref:System.DateTime.UtcNow%2A>|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>| <xref:System.DateTime.UtcNow%2A> plus `lifetime`.|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>| `null`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>| 생성 된 128 비트 대칭 키를 포함 합니다.</xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A> </xref:System.String.Empty?displayProperty=fullName> </xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A> **참고:** 기본 구현에서는이 속성을 사용 하지 않습니다. 서명 및 암호화 키가 지정 됩니다는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>에 의해 적용 된 쿠키 변환으로 토큰을 처리 하는. |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>| <xref:System.DateTime.UtcNow%2A>|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>| <xref:System.DateTime.UtcNow%2A> plus `lifetime`.|</xref:System.DateTime.UtcNow%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A></xref:System.DateTime.UtcNow%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A></xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>"
  syntax:
    content: public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, TimeSpan lifetime);
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "토큰을 초기화 하는 클레임 주체입니다."
    - id: lifetime
      type: System.TimeSpan
      description: "토큰은 유효 현재 시간에서 사용 되는 기간입니다. <> </> *> 속성으로 설정 됩니다 <> </> *> 및 <> </> *> 속성으로 설정 됩니다 <> </> *> 또한이 매개 변수에서 지정 된 기간입니다."
  overload: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimsPrincipal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Security.Claims.ClaimsPrincipal.Identities*> property of <code>claimsPrincipal</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>lifetime</code>보다 작거나 같음 <xref:System.TimeSpan.Zero>합니다."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})'
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SessionSecurityToken(ClaimsPrincipal,String,Nullable<DateTime>,Nullable<DateTime>)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String,Nullable<DateTime>,Nullable<DateTime>)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String,Nullable<DateTime>,Nullable<DateTime>)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref> 부트스트랩 토큰이; 고 지정 된 보안 주체에서 클래스 및 지정 된 시작 시간 및 만료 시간입니다."
  remarks: "다음 표에서 <xref:System.IdentityModel.Tokens.SessionSecurityToken>클래스</xref:System.IdentityModel.Tokens.SessionSecurityToken> 의 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 초기 값 |   |--------------|-------------------|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>| `claimsPrincipal`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>| `context`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>| 생성 된 고유 ID로 설정 |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>| <xref:System.String.Empty?displayProperty=fullName>|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>| 생성 된 고유 ID로 설정 |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>| `false`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>| `false`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>| 에 따른 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>속성의 값으로 설정 된 `ValidFrom` 매개 변수입니다. |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>| 에 따른 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>속성의 값은 `ValidTo` 매개 변수입니다. |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>| `null`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>| 생성 된 128 비트 대칭 키를 포함 합니다.</xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A> </xref:System.String.Empty?displayProperty=fullName> </xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A> **참고:** 기본 구현에서는이 속성을 사용 하지 않습니다. 서명 및 암호화 키가 지정 됩니다는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>에 의해 적용 된 쿠키 변환으로 토큰을 처리 하는. |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>| 값은 `validFrom` 매개 변수를 하거나, 있는 경우 `validFrom` 은 `null`, <xref:System.DateTime.UtcNow%2A>. |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>| 값은 `validFrom` 매개 변수.</xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 경우 `validFrom` 은 `null`의 값은 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>속성 (기준으로 `validFrom` 매개 변수)과 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName>속성. |</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>"
  syntax:
    content: public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context, Nullable<DateTime> validFrom, Nullable<DateTime> validTo);
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "부트스트랩 토큰에서 생성 된 클레임 주체입니다."
    - id: context
      type: System.String
      description: "상황에 맞는 옵션, 응용 프로그램별 문자열입니다."
    - id: validFrom
      type: System.Nullable{System.DateTime}
      description: "토큰 유효 해지는 시간 인스턴트입니다. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>지정 하려면<xref:System.DateTime.UtcNow*></xref:System.DateTime.UtcNow*>"
    - id: validTo
      type: System.Nullable{System.DateTime}
      description: "시간이 지나면 인스턴트 토큰은 더 이상 유효 합니다. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>값을 추가 하 여 값을 결정 해야 되도록 지정 하는 &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName&gt; 속성에 지정 된 시간을는 `validFrom` 매개 변수입니다."
  overload: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimsPrincipal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Security.Claims.ClaimsPrincipal.Identities*> property of <code>claimsPrincipal</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> validFrom </code> 및 <code> validTo </code> 매개 변수를 확인할 수 없습니다; 예를 들어 <code> validTo </code> 발생 하는 시간을 지정 이전의 <code> validFrom </code>합니다."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})'
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SessionSecurityToken(ClaimsPrincipal,String,String,Nullable<DateTime>,Nullable<DateTime>)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String,String,Nullable<DateTime>,Nullable<DateTime>)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String,String,Nullable<DateTime>,Nullable<DateTime>)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref> 부트스트랩 토큰이; 고 지정 된 보안 주체에서 클래스 및 지정 된 시작 시간 및 만료 시간입니다. 새 토큰의 범위 지정된 된 끝점으로 지정 됩니다."
  remarks: "다음 표에서 <xref:System.IdentityModel.Tokens.SessionSecurityToken>클래스</xref:System.IdentityModel.Tokens.SessionSecurityToken> 의 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 초기 값 |   |--------------|-------------------|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>| `claimsPrincipal`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>| `context`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>| 생성 된 고유 ID로 설정 |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>| `endpointId`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>| 생성 된 고유 ID로 설정 |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>| `false`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>| `false`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>| 에 따른 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>속성의 값으로 설정 된 `ValidFrom` 매개 변수입니다. |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>| 에 따른 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>속성의 값은 `ValidTo` 매개 변수입니다. |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>| `null`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>| 생성 된 128 비트 대칭 키를 포함 합니다.</xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A> **참고:** 기본 구현에서는이 속성을 사용 하지 않습니다. 서명 및 암호화 키가 지정 됩니다는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>에 의해 적용 된 쿠키 변환으로 토큰을 처리 하는. |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>| 값은 `validFrom` 매개 변수를 하거나, 있는 경우 `validFrom` 은 `null`, <xref:System.DateTime.UtcNow%2A>. |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>| 값은 `validFrom` 매개 변수.</xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 경우 `validFrom` 은 `null`의 값은 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>속성 (기준으로 `validFrom` 매개 변수)과 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName>속성. |</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>"
  syntax:
    content: public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context, string endpointId, Nullable<DateTime> validFrom, Nullable<DateTime> validTo);
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "부트스트랩 토큰에서 생성 된 클레임 주체입니다."
    - id: context
      type: System.String
      description: "상황에 맞는 옵션, 응용 프로그램별 문자열입니다."
    - id: endpointId
      type: System.String
      description: "이 토큰이 연결 된 끝점입니다. 빈 문자열 범위가 지정 되지 않은 토큰을 만듭니다."
    - id: validFrom
      type: System.Nullable{System.DateTime}
      description: "토큰 유효 해지는 시간 인스턴트입니다. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref><xref:System.DateTime.UtcNow*>.</xref:System.DateTime.UtcNow*> 지정 하려면"
    - id: validTo
      type: System.Nullable{System.DateTime}
      description: "시간이 지나면 인스턴트 토큰은 더 이상 유효 합니다. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>값을 추가 하 여 값을 결정 해야 되도록 지정 하는 &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName&gt; 속성에 지정 된 시간을는 `validFrom` 매개 변수입니다."
  overload: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimsPrincipal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Security.Claims.ClaimsPrincipal.Identities*> property of <code>claimsPrincipal</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>endpointId</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> validFrom </code> 및 <code> validTo </code> 매개 변수를 확인할 수 없습니다; 예를 들어 <code> validTo </code> 발생 하는 시간을 지정 이전의 <code> validFrom </code>합니다."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)'
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,TimeSpan,SymmetricSecurityKey)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,TimeSpan,SymmetricSecurityKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,TimeSpan,SymmetricSecurityKey)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref> 지정한 보안 주체가, 컨텍스트 ID, 컨텍스트, 끝점, 수명 및 키를 사용 하 여 클래스입니다."
  remarks: "다음 표에서 <xref:System.IdentityModel.Tokens.SessionSecurityToken>클래스</xref:System.IdentityModel.Tokens.SessionSecurityToken> 의 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 초기 값 |   |--------------|-------------------|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>| `claimsPrincipal`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>| `context`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>| `contextId`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>| `endpointId`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>| 생성 된 고유 ID로 설정 |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>| `false`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>| `false`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>| <xref:System.DateTime.UtcNow%2A>|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>| <xref:System.DateTime.UtcNow%2A> plus `lifetime`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>| `null`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>| 단일 요소 중 하나를 포함 `key` 하거나, 있는 경우 `key` 은 `null`, 생성 된 128 비트 대칭 키를.</xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A> **참고:** 기본 구현에서는이 속성을 사용 하지 않습니다. 서명 및 암호화 키가 지정 됩니다는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>에 의해 적용 된 쿠키 변환으로 토큰을 처리 하는. |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>| <xref:System.DateTime.UtcNow%2A>|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>| <xref:System.DateTime.UtcNow%2A> plus `lifetime`|</xref:System.DateTime.UtcNow%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A></xref:System.DateTime.UtcNow%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A></xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>"
  syntax:
    content: public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, System.Xml.UniqueId contextId, string context, string endpointId, TimeSpan lifetime, System.IdentityModel.Tokens.SymmetricSecurityKey key);
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "이 세션에 연관 된 클레임 주체입니다."
    - id: contextId
      type: System.Xml.UniqueId
      description: "이 토큰에 연결 된 컨텍스트 식별자입니다."
    - id: context
      type: System.String
      description: "상황에 맞는 옵션, 응용 프로그램별 문자열입니다."
    - id: endpointId
      type: System.String
      description: "이 토큰이 연결 된 끝점입니다. 빈 문자열 범위가 지정 되지 않은 토큰을 만듭니다."
    - id: lifetime
      type: System.TimeSpan
      description: "세션 토큰의 수명입니다. <> </> *> 속성으로 설정 됩니다 <> </> *> 및 <> </> *> 속성으로 설정 됩니다 <> </> *> 또한이 매개 변수에서 지정 된 기간입니다."
    - id: key
      type: System.IdentityModel.Tokens.SymmetricSecurityKey
      description: "선택적 대칭 세션 키입니다."
  overload: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimsPrincipal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Security.Claims.ClaimsPrincipal.Identities*> property of <code>claimsPrincipal</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>contextId</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>endpointId</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>lifetime</code>보다 작거나 같음 <xref:System.TimeSpan.Zero>합니다."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.DateTime,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.DateTime,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)'
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,DateTime,TimeSpan,SymmetricSecurityKey)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,DateTime,TimeSpan,SymmetricSecurityKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,DateTime,TimeSpan,SymmetricSecurityKey)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref> 지정한 보안 주체가, 컨텍스트 ID, 컨텍스트, 끝점, 유효한 타임 스탬프, 수명 및 키를 사용 하 여 클래스입니다."
  remarks: "다음 표에서 <xref:System.IdentityModel.Tokens.SessionSecurityToken>클래스</xref:System.IdentityModel.Tokens.SessionSecurityToken> 의 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 초기 값 |   |--------------|-------------------|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>| `claimsPrincipal`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>| `context`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>| `contextId` 하거나, 있는 경우 `contextId` 은 `null`, 고유 ID를 생성 |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>| `endpointId`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>| 생성 된 고유 ID로 설정 |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>| `false`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>| `false`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>| `validFrom`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>| `validFrom` plus `lifetime`.|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>| `null`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>| 단일 요소 중 하나를 포함 `key` 하거나, 있는 경우 `key` 은 `null`, 생성 된 128 비트 대칭 키를.</xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A> **참고:** 기본 구현에서는이 속성을 사용 하지 않습니다. 서명 및 암호화 키가 지정 됩니다는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>에 의해 적용 된 쿠키 변환으로 토큰을 처리 하는. |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>| `validFrom`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>| `validFrom` plus `lifetime`.|</xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A></xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>"
  syntax:
    content: public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, System.Xml.UniqueId contextId, string context, string endpointId, DateTime validFrom, TimeSpan lifetime, System.IdentityModel.Tokens.SymmetricSecurityKey key);
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "이 세션에 연관 된 클레임 주체입니다."
    - id: contextId
      type: System.Xml.UniqueId
      description: "이 토큰에 연결 된 컨텍스트 식별자입니다."
    - id: context
      type: System.String
      description: "상황에 맞는 옵션, 응용 프로그램별 문자열입니다."
    - id: endpointId
      type: System.String
      description: "이 토큰이 연결 된 끝점입니다. 빈 문자열 범위가 지정 되지 않은 토큰을 만듭니다."
    - id: validFrom
      type: System.DateTime
      description: "토큰이 유효 해지는 시간입니다."
    - id: lifetime
      type: System.TimeSpan
      description: "세션 토큰의 수명입니다. <> </> *> 속성으로 설정 됩니다 <> </> *> 또한이 매개 변수에서 지정 된 기간입니다."
    - id: key
      type: System.IdentityModel.Tokens.SymmetricSecurityKey
      description: "선택적 대칭 세션 키입니다."
  overload: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimsPrincipal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Security.Claims.ClaimsPrincipal.Identities*> property of <code>claimsPrincipal</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>contextId</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>endpointId</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>lifetime</code>보다 작거나 같음 <xref:System.TimeSpan.Zero>합니다."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.IdentityModel.Tokens.SymmetricSecurityKey)
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.IdentityModel.Tokens.SymmetricSecurityKey)'
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,Nullable<DateTime>,Nullable<DateTime>,SymmetricSecurityKey)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,Nullable<DateTime>,Nullable<DateTime>,SymmetricSecurityKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,Nullable<DateTime>,Nullable<DateTime>,SymmetricSecurityKey)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref> 지정한 보안 주체가, 컨텍스트 ID, 컨텍스트, 끝점, 시작 시간, 만료 시간 및 키를 사용 하 여 클래스입니다."
  remarks: "다음 표에서 <xref:System.IdentityModel.Tokens.SessionSecurityToken>클래스</xref:System.IdentityModel.Tokens.SessionSecurityToken> 의 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 초기 값 |   |--------------|-------------------|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>| `claimsPrincipal`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>| `context`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>| `contextId`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>| `endpointId`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>| 생성 된 고유 ID로 설정 |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>| `false`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>| `false`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>| 에 따른 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>속성의 값으로 설정 된 `ValidFrom` 매개 변수입니다. |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>| 에 따른 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>속성의 값은 `ValidTo` 매개 변수입니다. |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>| `null`|   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>| 단일 요소 중 하나를 포함 `key` 하거나, 있는 경우 `key` 은 `null`, 생성 된 128 비트 대칭 키를.</xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A> **참고:** 기본 구현에서는이 속성을 사용 하지 않습니다. 서명 및 암호화 키가 지정 됩니다는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>에 의해 적용 된 쿠키 변환으로 토큰을 처리 하는. |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>| 값은 `validFrom` 매개 변수를 하거나, 있는 경우 `validFrom` 은 `null`, <xref:System.DateTime.UtcNow%2A>. |   | <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>| 값은 `validFrom` 매개 변수.</xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 경우 `validFrom` 은 `null`의 값은 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>속성 (기준으로 `validFrom` 매개 변수)과 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName>속성. |</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>"
  syntax:
    content: public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, System.Xml.UniqueId contextId, string context, string endpointId, Nullable<DateTime> validFrom, Nullable<DateTime> validTo, System.IdentityModel.Tokens.SymmetricSecurityKey key);
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "이 세션에 연관 된 클레임 주체입니다."
    - id: contextId
      type: System.Xml.UniqueId
      description: "이 토큰에 연결 된 컨텍스트 식별자입니다."
    - id: context
      type: System.String
      description: "상황에 맞는 옵션, 응용 프로그램별 문자열입니다."
    - id: endpointId
      type: System.String
      description: "이 토큰이 연결 된 끝점입니다. 빈 문자열 범위가 지정 되지 않은 토큰을 만듭니다."
    - id: validFrom
      type: System.Nullable{System.DateTime}
      description: "토큰 유효 해지는 시간 인스턴트입니다. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>지정 하려면<xref:System.DateTime.UtcNow*></xref:System.DateTime.UtcNow*>"
    - id: validTo
      type: System.Nullable{System.DateTime}
      description: "시간이 지나면 인스턴트 토큰은 더 이상 유효 합니다. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>값을 추가 하 여 값을 결정 해야 되도록 지정 하는 &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName&gt; 속성에 지정 된 시간을는 `validFrom` 매개 변수입니다."
    - id: key
      type: System.IdentityModel.Tokens.SymmetricSecurityKey
      description: "선택적 대칭 세션 키입니다."
  overload: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimsPrincipal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Security.Claims.ClaimsPrincipal.Identities*> property of <code>claimsPrincipal</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>contextId</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>validFrom</code>보다 크거나 같으면 <code>validTo</code>합니다.       -또는- <code>validTo</code> 현재 시간 보다 작습니다."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal
  id: ClaimsPrincipal
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: ClaimsPrincipal
  nameWithType: SessionSecurityToken.ClaimsPrincipal
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "세션과 관련 된 클레임 주체를 가져옵니다."
  syntax:
    content: public System.Security.Claims.ClaimsPrincipal ClaimsPrincipal { get; }
    return:
      type: System.Security.Claims.ClaimsPrincipal
      description: "클레임 주체입니다."
  overload: System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.Context
  id: Context
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: Context
  nameWithType: SessionSecurityToken.Context
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.Context
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "컨텍스트 값을 지정 하는 사용자는 가져옵니다."
  remarks: "응용 프로그램 관련 컨텍스트를 저장 하려면이 속성을 사용할 수 있습니다."
  syntax:
    content: public string Context { get; }
    return:
      type: System.String
      description: "사용자는 컨텍스트 값을 지정 합니다."
  overload: System.IdentityModel.Tokens.SessionSecurityToken.Context*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ContextId
  id: ContextId
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: ContextId
  nameWithType: SessionSecurityToken.ContextId
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.ContextId
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "세션 컨텍스트 식별자를 가져옵니다."
  remarks: "컨텍스트 식별자는 모든 세션 토큰에서 고유 합니다.       <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>클래스에 컨텍스트 ID와 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>.</xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> 토큰에 대 한 키를 생성 하는 키 생성을 모두 사용 하 여</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>       <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>클래스에는이 속성으로 직렬화는 `<Identifier>` 의 자식 요소는 `<wsc:SecurityContextToken>` 요소.</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 자세한 내용은 참조에 대 한 설명서는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=fullName>메서드.</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=fullName>"
  syntax:
    content: public System.Xml.UniqueId ContextId { get; }
    return:
      type: System.Xml.UniqueId
      description: "세션 컨텍스트 식별자입니다."
  overload: System.IdentityModel.Tokens.SessionSecurityToken.ContextId*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.EndpointId
  id: EndpointId
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: EndpointId
  nameWithType: SessionSecurityToken.EndpointId
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.EndpointId
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "이 토큰은 범위가 지정 된 끝점의 ID를 가져옵니다."
  remarks: >-
    > [!IMPORTANT]

    >  If the EndpointId property is `null`, the session token is treated as globally scoped by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class. This can present a potential security risk.
  syntax:
    content: public string EndpointId { get; }
    return:
      type: System.String
      description: "끝점의 ID입니다."
  overload: System.IdentityModel.Tokens.SessionSecurityToken.EndpointId*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: SessionSecurityToken.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "설정의 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 세션 보안 토큰을 serialize 하는 데 필요한 정보로 합니다."
  syntax:
    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "직렬화 된 개체 데이터입니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "소스 또는 대상에 대 한 컨텍스트 정보입니다."
  overload: System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.Id
  id: Id
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: Id
  nameWithType: SessionSecurityToken.Id
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.Id
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "이 토큰의 고유 식별자를 가져옵니다."
  remarks: "<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>클래스에는이 속성으로 직렬화는 `Id` 의 특성은 `<wsc:SecurityContextToken>` 요소.</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 자세한 내용은 참조에 대 한 설명서는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=fullName>메서드.</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=fullName>"
  syntax:
    content: public override string Id { get; }
    return:
      type: System.String
      description: "토큰 id입니다."
  overload: System.IdentityModel.Tokens.SessionSecurityToken.Id*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent
  id: IsPersistent
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: IsPersistent
  nameWithType: SessionSecurityToken.IsPersistent
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "이 토큰이 나타내는 쿠키를 저장할지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "IsPersistent 속성이 `true`, 쿠키 영구 쿠키로 기록 됩니다. 영구 쿠키 만료 될 때까지 브라우저를 닫은 후 유효한 상태를 유지 합니다."
  syntax:
    content: public bool IsPersistent { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>쿠키 되; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode
  id: IsReferenceMode
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: IsReferenceMode
  nameWithType: SessionSecurityToken.IsReferenceMode
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "세션 보안 토큰 참조 모드에서 작동 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "참조 모드 간단한 아티팩트 serialization 중에 생성 되 고 토큰 자료 토큰 처리기와 연결 된 토큰 캐시에 저장 됩니다. 토큰 캐시 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>.</xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> 에서 파생 되는 클래스의 인스턴스가 웹 팜 시나리오에 대 한 토큰 캐시는 팜의 모든 노드에 걸쳐 작동 해야 합니다.      > [!IMPORTANT] >를 제공 하는 것이 좋습니다 참조 모드에서 작동 하는 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=fullName>전달 된 토큰의 IsReferenceMode 속성을 설정 하 고 global.asax.cs 파일에서 이벤트는 <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName>속성.</xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName> </xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=fullName> 이렇게 하면 세션 토큰 모든 요청에 대 한 참조 모드로 작동 있으며 단순히 설정 보다 우선 적용 됩니다는 <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=fullName>속성 세션 인증 모듈에 저장 합니다.</xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsReferenceMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>토큰이; 세션 모드에서 작동 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime
  id: KeyEffectiveTime
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: KeyEffectiveTime
  nameWithType: SessionSecurityToken.KeyEffectiveTime
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "이 토큰에 키가 유효한 있는 인스턴트 시간을 가져옵니다."
  syntax:
    content: public DateTime KeyEffectiveTime { get; }
    return:
      type: System.DateTime
      description: "키가 유효 시간 인스턴트입니다."
  overload: System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime
  id: KeyExpirationTime
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: KeyExpirationTime
  nameWithType: SessionSecurityToken.KeyExpirationTime
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "이후에이 토큰에서 키가 더 이상 유효 시간을 인스턴트를 가져옵니다."
  syntax:
    content: public DateTime KeyExpirationTime { get; }
    return:
      type: System.DateTime
      description: "키가 만료 시간 인스턴트입니다."
  overload: System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration
  id: KeyGeneration
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: KeyGeneration
  nameWithType: SessionSecurityToken.KeyGeneration
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "이 토큰에 키 생성에 대 한 식별자를 가져옵니다."
  remarks: "KeyGeneration 속성은 세션 토큰 내에서 고유 합니다. 세션 토큰을 발급 하는 경우에 컨텍스트 ID를 통해 액세스할 수 있는 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>속성.</xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> 세션 토큰 갱신 되 면 키 생성 추가 됩니다.       <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>클래스에 컨텍스트 ID와 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>.</xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> 토큰에 대 한 키를 생성 하는 키 생성을 모두 사용 하 여</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>       <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>클래스에는이 속성으로 직렬화는 `<Instance>` 의 자식 요소는 `<wsc:SecurityContextToken>` 요소.</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 자세한 내용은 참조에 대 한 설명서는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=fullName>메서드.</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=fullName>"
  syntax:
    content: public System.Xml.UniqueId KeyGeneration { get; }
    return:
      type: System.Xml.UniqueId
      description: "이 토큰에 키 생성에 대 한 고유 식별자입니다."
  overload: System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion
  id: SecureConversationVersion
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SecureConversationVersion
  nameWithType: SessionSecurityToken.SecureConversationVersion
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "토큰의 Ws-secure Conversation 세션 보안이를 serialize 하는 데 사용 되는 버전을 식별 하는 URI를 가져옵니다."
  remarks: "<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>Ws-secure Conversation Feb2005 및 Ws-secure Conversation 1.3 기본 클래스를 지원 합니다.</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> Ws-secure Conversation을 이러한 버전에 대 한 Uri는 각각 &quot;http://schemas.xmlsoap.org/ws/2005/02/sc&quot; 및 &quot;http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512&quot;입니다."
  syntax:
    content: public Uri SecureConversationVersion { get; }
    return:
      type: System.Uri
      description: "이 토큰을 serialize 하는 데 사용 되는 Ws-secure Conversation의 버전을 식별 하는 URI입니다."
  overload: System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys
  id: SecurityKeys
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SecurityKeys
  nameWithType: SessionSecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "이 세션에 연결 된 키를 가져옵니다. 이 일반적으로 단일 키입니다."
  remarks: >-
    > [!NOTE]

    >  The default implementation does not use this property. Signing and encryption keys are dictated by the cookie transforms applied by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that processes the token.
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey> SecurityKeys { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
      description: "세션에 연결 된 키입니다. 일반적으로 단일 키가입니다."
  overload: System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom
  id: ValidFrom
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: ValidFrom
  nameWithType: SessionSecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "토큰이 유효 않은 인스턴트 시간을 가져옵니다."
  syntax:
    content: public override DateTime ValidFrom { get; }
    return:
      type: System.DateTime
      description: "토큰이 잘못 된 시간입니다."
  overload: System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ValidTo
  id: ValidTo
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: ValidTo
  nameWithType: SessionSecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.ValidTo
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "인스턴트 지나면 토큰은 더 이상 유효 시간을 가져옵니다."
  syntax:
    content: public override DateTime ValidTo { get; }
    return:
      type: System.DateTime
      description: "토큰은 더 이상 유효 시간입니다."
  overload: System.IdentityModel.Tokens.SessionSecurityToken.ValidTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityToken
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal)
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken(ClaimsPrincipal)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal)
- uid: System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken(SerializationInfo,StreamingContext)
  nameWithType: SessionSecurityToken.SessionSecurityToken(SerializationInfo,StreamingContext)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String)
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken(ClaimsPrincipal,String)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.TimeSpan)
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken(ClaimsPrincipal,TimeSpan)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,TimeSpan)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken(ClaimsPrincipal,String,Nullable<DateTime>,Nullable<DateTime>)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String,Nullable<DateTime>,Nullable<DateTime>)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String,Nullable<DateTime>,Nullable<DateTime>)
- uid: System.Nullable{System.DateTime}
  parent: System
  isExternal: true
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.DateTime>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken(ClaimsPrincipal,String,String,Nullable<DateTime>,Nullable<DateTime>)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String,String,Nullable<DateTime>,Nullable<DateTime>)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String,String,Nullable<DateTime>,Nullable<DateTime>)
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,TimeSpan,SymmetricSecurityKey)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,TimeSpan,SymmetricSecurityKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,TimeSpan,SymmetricSecurityKey)
- uid: System.Xml.UniqueId
  parent: System.Xml
  isExternal: true
  name: UniqueId
  nameWithType: UniqueId
  fullName: System.Xml.UniqueId
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SymmetricSecurityKey
  nameWithType: SymmetricSecurityKey
  fullName: System.IdentityModel.Tokens.SymmetricSecurityKey
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.DateTime,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,DateTime,TimeSpan,SymmetricSecurityKey)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,DateTime,TimeSpan,SymmetricSecurityKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,DateTime,TimeSpan,SymmetricSecurityKey)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.IdentityModel.Tokens.SymmetricSecurityKey)
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,Nullable<DateTime>,Nullable<DateTime>,SymmetricSecurityKey)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,Nullable<DateTime>,Nullable<DateTime>,SymmetricSecurityKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,Nullable<DateTime>,Nullable<DateTime>,SymmetricSecurityKey)
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: ClaimsPrincipal
  nameWithType: SessionSecurityToken.ClaimsPrincipal
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal
- uid: System.IdentityModel.Tokens.SessionSecurityToken.Context
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: Context
  nameWithType: SessionSecurityToken.Context
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.Context
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ContextId
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: ContextId
  nameWithType: SessionSecurityToken.ContextId
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.ContextId
- uid: System.IdentityModel.Tokens.SessionSecurityToken.EndpointId
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: EndpointId
  nameWithType: SessionSecurityToken.EndpointId
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.EndpointId
- uid: System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: SessionSecurityToken.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.IdentityModel.Tokens.SessionSecurityToken.Id
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: Id
  nameWithType: SessionSecurityToken.Id
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.Id
- uid: System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: IsPersistent
  nameWithType: SessionSecurityToken.IsPersistent
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: IsReferenceMode
  nameWithType: SessionSecurityToken.IsReferenceMode
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode
- uid: System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: KeyEffectiveTime
  nameWithType: SessionSecurityToken.KeyEffectiveTime
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime
- uid: System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: KeyExpirationTime
  nameWithType: SessionSecurityToken.KeyExpirationTime
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime
- uid: System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: KeyGeneration
  nameWithType: SessionSecurityToken.KeyGeneration
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration
- uid: System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SecureConversationVersion
  nameWithType: SessionSecurityToken.SecureConversationVersion
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: SessionSecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<SecurityKey>
  nameWithType: ReadOnlyCollection<SecurityKey>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityKey
    name: SecurityKey
    nameWithType: SecurityKey
    fullName: SecurityKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: SessionSecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ValidTo
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: SessionSecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.ValidTo
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken
  nameWithType: SessionSecurityToken.SessionSecurityToken
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: ClaimsPrincipal
  nameWithType: SessionSecurityToken.ClaimsPrincipal
- uid: System.IdentityModel.Tokens.SessionSecurityToken.Context*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: Context
  nameWithType: SessionSecurityToken.Context
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ContextId*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: ContextId
  nameWithType: SessionSecurityToken.ContextId
- uid: System.IdentityModel.Tokens.SessionSecurityToken.EndpointId*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: EndpointId
  nameWithType: SessionSecurityToken.EndpointId
- uid: System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: GetObjectData
  nameWithType: SessionSecurityToken.GetObjectData
- uid: System.IdentityModel.Tokens.SessionSecurityToken.Id*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: Id
  nameWithType: SessionSecurityToken.Id
- uid: System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: IsPersistent
  nameWithType: SessionSecurityToken.IsPersistent
- uid: System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: IsReferenceMode
  nameWithType: SessionSecurityToken.IsReferenceMode
- uid: System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: KeyEffectiveTime
  nameWithType: SessionSecurityToken.KeyEffectiveTime
- uid: System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: KeyExpirationTime
  nameWithType: SessionSecurityToken.KeyExpirationTime
- uid: System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: KeyGeneration
  nameWithType: SessionSecurityToken.KeyGeneration
- uid: System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SecureConversationVersion
  nameWithType: SessionSecurityToken.SecureConversationVersion
- uid: System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: SessionSecurityToken.SecurityKeys
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: SessionSecurityToken.ValidFrom
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ValidTo*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: SessionSecurityToken.ValidTo
