### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.NameValueCollection
  id: NameValueCollection
  children:
  - System.Collections.Specialized.NameValueCollection.#ctor
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  - System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)
  - System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)
  - System.Collections.Specialized.NameValueCollection.AllKeys
  - System.Collections.Specialized.NameValueCollection.Clear
  - System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.NameValueCollection.Get(System.Int32)
  - System.Collections.Specialized.NameValueCollection.Get(System.String)
  - System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)
  - System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)
  - System.Collections.Specialized.NameValueCollection.GetValues(System.String)
  - System.Collections.Specialized.NameValueCollection.HasKeys
  - System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays
  - System.Collections.Specialized.NameValueCollection.Item(System.Int32)
  - System.Collections.Specialized.NameValueCollection.Item(System.String)
  - System.Collections.Specialized.NameValueCollection.Remove(System.String)
  - System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)
  langs:
  - csharp
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
  type: Class
  summary: "연결 된 나타냅니다는 컬렉션의 <xref:System.String>키 및 <xref:System.String>키 또는 인덱스에 액세스할 수 있는 값입니다.</xref:System.String> </xref:System.String>"
  remarks: "이 컬렉션은 <xref:System.Collections.Specialized.NameObjectCollectionBase>클래스</xref:System.Collections.Specialized.NameObjectCollectionBase> 에 기반 그러나 달리는 <xref:System.Collections.Specialized.NameObjectCollectionBase>,이 클래스는 하나의 키 아래에 있는 여러 개의 문자열 값을 저장 합니다.</xref:System.Collections.Specialized.NameObjectCollectionBase>       헤더, 쿼리 문자열 및 양식 데이터에 대 한이 클래스를 사용할 수 있습니다.       각 요소는 키/값 쌍입니다.       이 형식의 컬렉션 요소의 순서를 유지 하지 않는 및 컬렉션을 열거할 때 특정 순서가 보장 됩니다.       NameValueCollection 용량이 NameValueCollection 저장할 수 있는 요소의 수입니다. 요소는 NameValueCollection에 추가 되 면 자동으로 용량 증가 하면 재할당을 통해 필요에 따라 합니다.       해시 코드 공급자 키 NameValueCollection에 대 한 해시 코드를 분배 합니다. 기본 해시 코드 공급자가 있는 <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       비교자 두 키가 같은지 여부를 결정 합니다. 기본 비교자는 <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       .NET Framework 버전 1.0에서이 클래스는 문화권 구분 문자열 비교를 사용합니다. .NET Framework 1.1 이상 버전에서는이 클래스가 사용 하는 반면 <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName>문자열을 비교할 때.</xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> 문화권 비교 및 정렬에 미치는 영향에 대 한 자세한 내용은 참조 [문화권을 구분 하지 않는 문자열 작업 수행](~/add/includes/ajax-current-ext-md.md)합니다.       `null`키 또는 값으로 허용 됩니다.      > [!CAUTION] >는 <xref:System.Collections.Specialized.NameValueCollection.Get%2A>메서드는 구분 하지 않으며 `null` 지정된 된 키를 찾을 수 없으므로 반환 되는 및 `null` 키와 연결 된 값이 반환 되는 `null`.</xref:System.Collections.Specialized.NameValueCollection.Get%2A>"
  example:
  - >-
    [!code-cpp[System.Collections.Specialized.NameValueCollection2#1](~/add/codesnippet/cpp/t-system.collections.spe_6_1.cpp)]
     [!code-vb[System.Collections.Specialized.NameValueCollection2#1](~/add/codesnippet/visualbasic/t-system.collections.spe_6_1.vb)]
     [!code-cs[System.Collections.Specialized.NameValueCollection2#1](~/add/codesnippet/csharp/t-system.collections.spe_6_1.cs)]
  syntax:
    content: 'public class NameValueCollection : System.Collections.Specialized.NameObjectCollectionBase'
  inheritance:
  - System.Object
  - System.Collections.Specialized.NameObjectCollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.Count
  - System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  - System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  - System.Collections.Specialized.NameObjectCollectionBase.Keys
  - System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.#ctor
  id: '#ctor'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection()
  nameWithType: NameValueCollection.NameValueCollection()
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection()
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 클래스는 비어 있는 기본 초기 용량을 가지 및 기본 대/소문자 구분 해시 코드 공급자와 기본 대/소문자 비구분 비교자를 사용 합니다."
  remarks: "용량은 <xref:System.Collections.Specialized.NameValueCollection>요소의 수가 하는 <xref:System.Collections.Specialized.NameValueCollection>보유할 수 있습니다.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection> 요소에 추가 되는 <xref:System.Collections.Specialized.NameValueCollection>, 용량을 증가 시켜 자동으로 내부 배열을 다시 할당 하 여 필요에 따라.</xref:System.Collections.Specialized.NameValueCollection>       컬렉션의 크기를 예상할 수 있는 경우 초기 용량을 지정 하지 않아도 크기 조정 작업 <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> 에 요소를 추가 하는 동안 여러 번 수행       해시 코드 공급자 <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> 키에 대 한 해시 코드를 분배합니다. 기본 해시 코드 공급자가 있는 <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       비교자 두 키가 같은지 여부를 결정 합니다. 기본 비교자는 <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       이 생성자는 o (1) 연산입니다."
  syntax:
    content: public NameValueCollection ();
    parameters: []
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)
  id: '#ctor(System.Collections.IEqualityComparer)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(IEqualityComparer)
  nameWithType: NameValueCollection.NameValueCollection(IEqualityComparer)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(IEqualityComparer)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 클래스는 비어 있는 기본 초기 용량을 갖고 있고 사용 하 여 지정 된 <xref:System.Collections.IEqualityComparer>개체입니다.</xref:System.Collections.IEqualityComparer>"
  remarks: "용량은 <xref:System.Collections.Specialized.NameValueCollection>개체는 요소 수는는 <xref:System.Collections.Specialized.NameValueCollection>보유할 수 있습니다.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection> 요소에 추가 되는 <xref:System.Collections.Specialized.NameValueCollection>, 용량을 증가 시켜 자동으로 내부 배열을 다시 할당 하 여 필요에 따라.</xref:System.Collections.Specialized.NameValueCollection>       컬렉션의 크기를 예상할 수 있는 경우 초기 용량을 지정 하지 않아도 크기 조정 작업 <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> 에 요소를 추가 하는 동안 여러 번 수행       <xref:System.Collections.IEqualityComparer>개체 비교자와 해시 코드 공급자를 결합 합니다.</xref:System.Collections.IEqualityComparer>  해시 코드 공급자 <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> 키에 대 한 해시 코드를 분배합니다.  비교자 두 키가 같은지 여부를 결정 합니다.       이 생성자는 o (1) 연산입니다."
  syntax:
    content: public NameValueCollection (System.Collections.IEqualityComparer equalityComparer);
    parameters:
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: "<xref:System.Collections.IEqualityComparer>두 키가 같은지 여부를 확인 하 고 컬렉션의 키에 대 한 해시 코드를 생성을 사용 하는 개체입니다.</xref:System.Collections.IEqualityComparer>"
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)
  id: '#ctor(System.Collections.Specialized.NameValueCollection)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(NameValueCollection)
  nameWithType: NameValueCollection.NameValueCollection(NameValueCollection)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(NameValueCollection)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "지정 된 위치에서 항목을 복사 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 새 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 같은 동일한 초기 용량이 복사 되는 엔트리의 수와 사용 하 여 해시 코드 공급자 및 같은 비교자 소스 컬렉션입니다."
  remarks: "용량은 <xref:System.Collections.Specialized.NameValueCollection>요소의 수가 하는 <xref:System.Collections.Specialized.NameValueCollection>보유할 수 있습니다.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection> 요소에 추가 되는 <xref:System.Collections.Specialized.NameValueCollection>, 용량을 증가 시켜 자동으로 내부 배열을 다시 할당 하 여 필요에 따라.</xref:System.Collections.Specialized.NameValueCollection>       컬렉션의 크기를 예상할 수 있는 경우 초기 용량을 지정 하지 않아도 크기 조정 작업 <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> 에 요소를 추가 하는 동안 여러 번 수행       해시 코드 공급자 <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> 키에 대 한 해시 코드를 분배합니다. 기본 해시 코드 공급자가 있는 <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       비교자 두 키가 같은지 여부를 결정 합니다. 기본 비교자는 <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       새 <xref:System.Collections.Specialized.NameValueCollection> <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> 소스와 같은 순서로 정렬 되는</xref:System.Collections.Specialized.NameValueCollection> 요소       이 생성자는는 O (`n`) 작업, 여기서 `n` 에 있는 요소의 수는 `col`합니다."
  syntax:
    content: public NameValueCollection (System.Collections.Specialized.NameValueCollection col);
    parameters:
    - id: col
      type: System.Collections.Specialized.NameValueCollection
      description: "<xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 새 복사할 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 인스턴스."
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>col</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(Int32)
  nameWithType: NameValueCollection.NameValueCollection(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 클래스는 비어 있는 지정 된 초기 용량 및 기본 대/소문자 구분 해시 코드 공급자와 기본 대/소문자 비구분 비교자를 사용 합니다."
  remarks: "용량은 <xref:System.Collections.Specialized.NameValueCollection>요소의 수가 하는 <xref:System.Collections.Specialized.NameValueCollection>보유할 수 있습니다.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection> 요소에 추가 되는 <xref:System.Collections.Specialized.NameValueCollection>, 용량을 증가 시켜 자동으로 내부 배열을 다시 할당 하 여 필요에 따라.</xref:System.Collections.Specialized.NameValueCollection>       컬렉션의 크기를 예상할 수 있는 경우 초기 용량을 지정 하지 않아도 크기 조정 작업 <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> 에 요소를 추가 하는 동안 여러 번 수행       해시 코드 공급자 <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> 키에 대 한 해시 코드를 분배합니다. 기본 해시 코드 공급자가 있는 <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       비교자 두 키가 같은지 여부를 결정 합니다. 기본 비교자는 <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       이 생성자는는 O (`n`) 작업, 여기서 `n` 은 `capacity`합니다."
  syntax:
    content: public NameValueCollection (int capacity);
    parameters:
    - id: capacity
      type: System.Int32
      description: "초기 항목 수는는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 포함 될 수 있습니다."
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>가&0; 보다 작습니다."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  id: '#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(IHashCodeProvider,IComparer)
  nameWithType: NameValueCollection.NameValueCollection(IHashCodeProvider,IComparer)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(IHashCodeProvider,IComparer)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 클래스는 비어 있는 기본 초기 용량을 가지 및 지정 된 해시 코드 공급자와 지정된 된 비교자를 사용 합니다."
  remarks: "용량은 <xref:System.Collections.Specialized.NameValueCollection>요소의 수가 하는 <xref:System.Collections.Specialized.NameValueCollection>보유할 수 있습니다.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection> 요소에 추가 되는 <xref:System.Collections.Specialized.NameValueCollection>, 용량을 증가 시켜 자동으로 내부 배열을 다시 할당 하 여 필요에 따라.</xref:System.Collections.Specialized.NameValueCollection>       컬렉션의 크기를 예상할 수 있는 경우 초기 용량을 지정 하지 않아도 크기 조정 작업 <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> 에 요소를 추가 하는 동안 여러 번 수행       해시 코드 공급자 <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> 키에 대 한 해시 코드를 분배합니다. 기본 해시 코드 공급자가 있는 <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       비교자 두 키가 같은지 여부를 결정 합니다. 기본 비교자는 <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       이 생성자는 o (1) 연산입니다."
  syntax:
    content: public NameValueCollection (System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);
    parameters:
    - id: hashProvider
      type: System.Collections.IHashCodeProvider
      description: "<xref href=&quot;System.Collections.IHashCodeProvider&quot;> </xref> 모든 키에 대 한 해시 코드를 제공 하는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>합니다."
    - id: comparer
      type: System.Collections.IComparer
      description: "<xref:System.Collections.IComparer>를 사용 하는 두 개의 키가 같은지 여부를 확인 합니다.</xref:System.Collections.IComparer>"
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)
  id: '#ctor(System.Int32,System.Collections.IEqualityComparer)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(Int32,IEqualityComparer)
  nameWithType: NameValueCollection.NameValueCollection(Int32,IEqualityComparer)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(Int32,IEqualityComparer)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 클래스는 비어 있는 지정 된 초기 용량을 갖고 있고 사용 하 여 지정 된 <xref:System.Collections.IEqualityComparer>개체입니다.</xref:System.Collections.IEqualityComparer>"
  remarks: "용량은 <xref:System.Collections.Specialized.NameValueCollection>개체는 요소 수는는 <xref:System.Collections.Specialized.NameValueCollection>보유할 수 있습니다.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection> 요소에 추가 되는 <xref:System.Collections.Specialized.NameValueCollection>, 용량을 증가 시켜 자동으로 내부 배열을 다시 할당 하 여 필요에 따라.</xref:System.Collections.Specialized.NameValueCollection>       컬렉션의 크기를 예상할 수 있는 경우 초기 용량을 지정 하지 않아도 크기 조정 작업 <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> 에 요소를 추가 하는 동안 여러 번 수행       <xref:System.Collections.IEqualityComparer>개체 비교자와 해시 코드 공급자를 결합 합니다.</xref:System.Collections.IEqualityComparer>  해시 코드 공급자 <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> 키에 대 한 해시 코드를 분배합니다.  비교자 두 키가 같은지 여부를 결정 합니다.       이 생성자는는 O (`n`) 작업, 여기서 `n` 는 `capacity` 매개 변수입니다."
  syntax:
    content: public NameValueCollection (int capacity, System.Collections.IEqualityComparer equalityComparer);
    parameters:
    - id: capacity
      type: System.Int32
      description: "초기 항목 수는는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 개체에 포함 될 수 있습니다."
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: "<xref:System.Collections.IEqualityComparer>두 키가 같은지 여부를 확인 하 고 컬렉션의 키에 대 한 해시 코드를 생성을 사용 하는 개체입니다.</xref:System.Collections.IEqualityComparer>"
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>가&0; 보다 작습니다."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)
  id: '#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(Int32,NameValueCollection)
  nameWithType: NameValueCollection.NameValueCollection(Int32,NameValueCollection)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(Int32,NameValueCollection)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "지정 된 위치에서 항목을 복사 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 새 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 지정된 된 초기 용량 또는 항목의 수와 같은 초기 용량 보다 큰, 복사한 기본 대/소문자 구분 해시 코드 공급자와 기본 대/소문자 비구분 비교자를 사용 하 여 합니다."
  remarks: "용량은 <xref:System.Collections.Specialized.NameValueCollection>요소의 수가 하는 <xref:System.Collections.Specialized.NameValueCollection>보유할 수 있습니다.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection> 요소에 추가 되는 <xref:System.Collections.Specialized.NameValueCollection>, 용량을 증가 시켜 자동으로 내부 배열을 다시 할당 하 여 필요에 따라.</xref:System.Collections.Specialized.NameValueCollection>       컬렉션의 크기를 예상할 수 있는 경우 초기 용량을 지정 하지 않아도 크기 조정 작업 <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> 에 요소를 추가 하는 동안 여러 번 수행       해시 코드 공급자 <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> 키에 대 한 해시 코드를 분배합니다. 기본 해시 코드 공급자가 있는 <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       비교자 두 키가 같은지 여부를 결정 합니다. 기본 비교자는 <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       이 생성자는는 O (`n`) 작업, 여기서 `n` 은 `capacity`합니다.  경우에 있는 요소의 수 `col` 보다 크면 `capacity`,이 생성자는 O 됩니다 (`n` + `m`) 작업, 여기서 `n` 은 `capacity` 및 `m` 에 있는 요소의 수는 `col`합니다."
  syntax:
    content: public NameValueCollection (int capacity, System.Collections.Specialized.NameValueCollection col);
    parameters:
    - id: capacity
      type: System.Int32
      description: "초기 항목 수는는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 포함 될 수 있습니다."
    - id: col
      type: System.Collections.Specialized.NameValueCollection
      description: "<xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 새 복사할 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 인스턴스."
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>가&0; 보다 작습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>col</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(SerializationInfo,StreamingContext)
  nameWithType: NameValueCollection.NameValueCollection(SerializationInfo,StreamingContext)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 직렬화 할 수 있으며를 사용 하 여 지정 된 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 및 &lt;xref:System.Runtime.Serialization.StreamingContext?displayProperty=fullName&gt;합니다."
  remarks: "이 생성자는 o (1) 연산입니다."
  syntax:
    content: protected NameValueCollection (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "A <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 새 serialize 하는 데 필요한 정보를 포함 하는 개체 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 인스턴스."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "A &lt;xref:System.Runtime.Serialization.StreamingContext?displayProperty=fullName&gt; 소스 및 새와 관련 된 serialize 된 스트림의 대상이 들어 있는 개체 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 인스턴스."
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  id: '#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(Int32,IHashCodeProvider,IComparer)
  nameWithType: NameValueCollection.NameValueCollection(Int32,IHashCodeProvider,IComparer)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(Int32,IHashCodeProvider,IComparer)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 클래스는 비어 있는 지정 된 초기 용량 및 지정 된 해시 코드 공급자와 지정된 된 비교자를 사용 합니다."
  remarks: "용량은 <xref:System.Collections.Specialized.NameValueCollection>요소의 수가 하는 <xref:System.Collections.Specialized.NameValueCollection>보유할 수 있습니다.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection> 요소에 추가 되는 <xref:System.Collections.Specialized.NameValueCollection>, 용량을 증가 시켜 자동으로 내부 배열을 다시 할당 하 여 필요에 따라.</xref:System.Collections.Specialized.NameValueCollection>       컬렉션의 크기를 예상할 수 있는 경우 초기 용량을 지정 하지 않아도 크기 조정 작업 <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> 에 요소를 추가 하는 동안 여러 번 수행       해시 코드 공급자 <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> 키에 대 한 해시 코드를 분배합니다. 기본 해시 코드 공급자가 있는 <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</xref:System.Collections.CaseInsensitiveHashCodeProvider>       비교자 두 키가 같은지 여부를 결정 합니다. 기본 비교자는 <xref:System.Collections.CaseInsensitiveComparer>.</xref:System.Collections.CaseInsensitiveComparer>       이 생성자는는 O (`n`) 작업, 여기서 `n` 은 `capacity`합니다."
  syntax:
    content: public NameValueCollection (int capacity, System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);
    parameters:
    - id: capacity
      type: System.Int32
      description: "초기 항목 수는는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 포함 될 수 있습니다."
    - id: hashProvider
      type: System.Collections.IHashCodeProvider
      description: "<xref href=&quot;System.Collections.IHashCodeProvider&quot;> </xref> 모든 키에 대 한 해시 코드를 제공 하는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>합니다."
    - id: comparer
      type: System.Collections.IComparer
      description: "<xref:System.Collections.IComparer>를 사용 하는 두 개의 키가 같은지 여부를 확인 합니다.</xref:System.Collections.IComparer>"
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>가&0; 보다 작습니다."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)
  id: Add(System.Collections.Specialized.NameValueCollection)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Add(NameValueCollection)
  nameWithType: NameValueCollection.Add(NameValueCollection)
  fullName: System.Collections.Specialized.NameValueCollection.Add(NameValueCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "지정 된 항목을 복사 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 현재 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>합니다."
  remarks: "경우에 키 `c` 대상에 이미 <xref:System.Collections.Specialized.NameValueCollection>의 관련된 값을 인스턴스 `c` 대상에서 동일한 키와 연결 된 값의 쉼표로 구분 된 기존 목록에 추가 됩니다 <xref:System.Collections.Specialized.NameValueCollection>인스턴스.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection>       경우 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>이미 용량의 용량과 같은 <xref:System.Collections.Specialized.NameValueCollection>자동으로 내부 배열을 다시 할당 하 여 증가 하는 새 요소를 추가 하기 전에 기존 요소를 새 배열에 복사 됩니다.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>       경우 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>작은 용량 보다이 메서드는 o (1) 작업.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> 이 메서드는 O 됩니다 용량을 새 요소로 적용로 늘려야 하는 경우 (`n`) 작업, 여기서 `n` 은 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  syntax:
    content: public void Add (System.Collections.Specialized.NameValueCollection c);
    parameters:
    - id: c
      type: System.Collections.Specialized.NameValueCollection
      description: "<xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 현재 복사할 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>합니다."
  overload: System.Collections.Specialized.NameValueCollection.Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "컬렉션이 읽기 전용입니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>c</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: NameValueCollection.Add(String,String)
  fullName: System.Collections.Specialized.NameValueCollection.Add(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "지정한 이름 및 값을 가진 항목을 추가 하는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>합니다."
  remarks: "지정된 된 키가 대상에 이미 있는 경우 <xref:System.Collections.Specialized.NameValueCollection>인스턴스, 지정된 된 값은 폼에 있는 값의 기존 쉼표로 구분 된 목록에 추가 `&quot;value1,value2,value3&quot;`.</xref:System.Collections.Specialized.NameValueCollection> 값은 대상에서 동일한 키와 연결 <xref:System.Collections.Specialized.NameValueCollection>인스턴스.</xref:System.Collections.Specialized.NameValueCollection>       경우 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>이미 용량의 용량과 같은 <xref:System.Collections.Specialized.NameValueCollection>자동으로 내부 배열을 다시 할당 하 여 증가 하는 새 요소를 추가 하기 전에 기존 요소를 새 배열에 복사 됩니다.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>       경우 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>작은 용량 보다이 메서드는 o (1) 작업.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> 이 메서드는 O 됩니다 용량을 새 요소로 적용로 늘려야 하는 경우 (`n`) 작업, 여기서 `n` 은 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  syntax:
    content: public virtual void Add (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>추가할 엔트리의 키</xref:System.String> 키는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: value
      type: System.String
      description: "<xref:System.String>추가할 항목의 값</xref:System.String> 값일 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Collections.Specialized.NameValueCollection.Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "컬렉션이 읽기 전용입니다."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.AllKeys
  id: AllKeys
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: AllKeys
  nameWithType: NameValueCollection.AllKeys
  fullName: System.Collections.Specialized.NameValueCollection.AllKeys
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "모든 키를 가져옵니다는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>합니다."
  remarks: "이 메서드는 빈 반환 컬렉션 비어 있으면 <xref:System.String>배열을 `null`.</xref:System.String>       AllKeys 반환 된 배열이 성능 향상을 위해 캐시 되 고는 컬렉션이 변경 될 때 자동으로 새로 고친 됩니다. 파생된 클래스를 호출 하 여 캐시 된 버전을 해칠 수 <xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A>없어지고 강제 다시 배열.</xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A>       이 메서드는 O는 (`n`) 작업, 여기서 `n` 은 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  syntax:
    content: public virtual string[] AllKeys { get; }
    return:
      type: System.String[]
      description: "A <xref:System.String>의 모든 키를 포함 하는 배열에서 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>.</xref:System.String>"
  overload: System.Collections.Specialized.NameValueCollection.AllKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.Clear
  id: Clear
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: NameValueCollection.Clear()
  fullName: System.Collections.Specialized.NameValueCollection.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "모든 항목을 제거 및 캐시 된 배열을 무효로 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>합니다."
  remarks: "이 메서드는 o (1) 작업."
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Collections.Specialized.NameValueCollection.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "컬렉션이 읽기 전용입니다."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: NameValueCollection.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.NameValueCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "전체 복사 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 호환 되는&1; 차원 <xref:System.Array>대상 배열의 지정된 된 인덱스부터 시작 합니다.</xref:System.Array>"
  remarks: "지정된 된 배열의 호환 되는 형식 이어야 합니다.       이 방법은 사용 하 여 <xref:System.Array.Copy%2A?displayProperty=fullName>요소를 복사해올.</xref:System.Array.Copy%2A?displayProperty=fullName>       이 메서드는 O는 (`n`) 작업, 여기서 `n` 은 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  syntax:
    content: public void CopyTo (Array dest, int index);
    parameters:
    - id: dest
      type: System.Array
      description: "1 차원 <xref:System.Array>에서 복사한 요소의 대상인 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>.</xref:System.Array> <xref:System.Array>0부터 시작 하는 인덱스가 있어야 합니다.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "인덱스는&0;부터 시작 `dest` 복사가 시작 되는 합니다."
  overload: System.Collections.Specialized.NameValueCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dest</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>가&0; 보다 작습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>dest</code>가 다차원 배열인 경우       -또는-소스에 있는 요소의 수 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 에서 사용 가능한 공간 보다 큰 <code>index</code> 대상의 끝에 <code>dest</code>합니다."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "소스의 형식을 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 대상의 형식으로 자동 캐스팅할 수 없는 <code> dest </code>합니다."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.Get(System.Int32)
  id: Get(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Get(Int32)
  nameWithType: NameValueCollection.Get(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.Get(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "지정된 된 인덱스에서 값을 가져옵니다는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 하나의 쉼표로 구분 된 목록으로 결합 합니다."
  remarks: "이 메서드는 O는 (`n`) 작업, 여기서 `n` 지정된 된 인덱스에 있는 값의 수입니다."
  syntax:
    content: public virtual string Get (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "컬렉션에서 가져올 값을 포함 하는 항목의&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.String
      description: "A <xref:System.String>의 지정된 된 인덱스에 있는 값의 쉼표로 구분 된 목록을 포함 하는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>, 검색 되지 않으면, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.String>"
  overload: System.Collections.Specialized.NameValueCollection.Get*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>컬렉션에 대 한 인덱스의 유효한 범위를 벗어납니다."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.Get(System.String)
  id: Get(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Get(String)
  nameWithType: NameValueCollection.Get(String)
  fullName: System.Collections.Specialized.NameValueCollection.Get(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "지정된 된 키와 연결 된 값을 가져옵니다는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 하나의 쉼표로 구분 된 목록으로 결합 합니다."
  remarks: "> [!CAUTION]>이 메서드가 반환 `null` 다음과 같은 경우에: 1) 하는 경우 지정된 된 키를 찾을 수 없습니다. 및 2) 하는 경우 지정 된 키가 발견 하 고 관련된 값은 `null`합니다. 이 메서드는 두 가지 경우를 구분 하지 않습니다.       이 메서드는 O는 (`n`) 작업, 여기서 `n` 지정된 된 키와 관련 된 값의 수입니다."
  syntax:
    content: public virtual string Get (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>가져올 값을 포함 하는 항목의 키.</xref:System.String> 키는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.String
      description: "A <xref:System.String>에서 지정된 된 키와 관련 된 값의 쉼표로 구분 된 목록을 포함 하는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>, 검색 되지 않으면, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.String>"
  overload: System.Collections.Specialized.NameValueCollection.Get*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)
  id: GetKey(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: GetKey(Int32)
  nameWithType: NameValueCollection.GetKey(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.GetKey(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "지정된 된 인덱스에서 키를 가져옵니다는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>합니다."
  remarks: "이 메서드는 o (1) 작업."
  syntax:
    content: public virtual string GetKey (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "컬렉션에서 가져올 키의&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.String
      description: "A <xref:System.String>의 지정된 된 인덱스에 키를 포함 하는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>, 검색 되지 않으면, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.String>"
  overload: System.Collections.Specialized.NameValueCollection.GetKey*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>컬렉션에 대 한 인덱스의 유효한 범위를 벗어납니다."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)
  id: GetValues(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: GetValues(Int32)
  nameWithType: NameValueCollection.GetValues(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.GetValues(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "지정된 된 인덱스에서 값을 가져옵니다는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>합니다."
  remarks: "이 메서드는 O는 (`n`) 작업, 여기서 `n` 지정된 된 인덱스에 있는 값의 수입니다."
  syntax:
    content: public virtual string[] GetValues (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "컬렉션에서 가져올 값을 포함 하는 항목의&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.String[]
      description: "A <xref:System.String>의 지정된 된 인덱스에 값이 포함 된 배열에서 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>, 검색 되지 않으면, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.String>"
  overload: System.Collections.Specialized.NameValueCollection.GetValues*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>컬렉션에 대 한 인덱스의 유효한 범위를 벗어납니다."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.GetValues(System.String)
  id: GetValues(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: GetValues(String)
  nameWithType: NameValueCollection.GetValues(String)
  fullName: System.Collections.Specialized.NameValueCollection.GetValues(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "지정된 된 키와 연결 된 값을 가져옵니다는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>합니다."
  remarks: "> [!CAUTION]>이 메서드가 반환 `null` 다음과 같은 경우에: 1) 하는 경우 지정된 된 키를 찾을 수 없습니다. 및 2) 하는 경우 지정 된 키가 발견 하 고 관련된 값은 `null`합니다. 이 메서드는 두 가지 경우를 구분 하지 않습니다.       이 메서드는 O는 (`n`) 작업, 여기서 `n` 지정된 된 키와 관련 된 값의 수입니다."
  syntax:
    content: public virtual string[] GetValues (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>가져올 값을 포함 하는 항목의 키.</xref:System.String> 키는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.String[]
      description: "A <xref:System.String>배열에서 지정된 된 키와 연결 된 값을 포함 하는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>, 검색 되지 않으면, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.String>"
  overload: System.Collections.Specialized.NameValueCollection.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.HasKeys
  id: HasKeys
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: HasKeys()
  nameWithType: NameValueCollection.HasKeys()
  fullName: System.Collections.Specialized.NameValueCollection.HasKeys()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 되지 않은 키가 들어 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "이 메서드는 o (1) 작업."
  syntax:
    content: public bool HasKeys ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 되지 않은 키가 들어 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Collections.Specialized.NameValueCollection.HasKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays
  id: InvalidateCachedArrays
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: InvalidateCachedArrays()
  nameWithType: NameValueCollection.InvalidateCachedArrays()
  fullName: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "컬렉션의 캐시 된 배열을 다시 설정 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "반환 된 배열이 <xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A>성능 향상을 위해 캐시 되 고는 컬렉션이 변경 될 때 자동으로 새로 고친 됩니다.</xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A> 파생된 클래스를 다시 만들어야 배열 강제 적용 함으로써 InvalidateCachedArrays를 호출 하 여 캐시 된 버전을 무효화할 수 있습니다.       이 메서드는 o (1) 작업."
  syntax:
    content: protected void InvalidateCachedArrays ();
    parameters: []
  overload: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: NameValueCollection.Item(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "지정된 된 인덱스에 있는 엔트리를 가져옵니다는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>합니다."
  remarks: "이 속성은 다음 구문을 사용 하 여 컬렉션의 특정 요소를 액세스 하는 기능 제공: `myCollection[index]`합니다.       이 속성을 설정할 수 없습니다. 지정된 된 인덱스에 값을 설정 하려면 `Item[GetKey(index)]`합니다.       C# 언어는 키워드를 사용 하 여 항목 속성을 구현 하는 대신 인덱서를 정의 합니다. Visual Basic에서는 동일한 인덱싱 기능을 기본 속성으로 항목을 구현 합니다.       O는 지정된 된 인덱스에 값을 검색 (`n`) 작업, 여기서 `n` 값의 수입니다."
  syntax:
    content: public string this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "컬렉션에서 찾을 항목의&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.String
      description: "A <xref:System.String>컬렉션의 지정된 된 인덱스에 있는 값의 쉼표로 구분 된 목록이 포함 된.</xref:System.String>"
  overload: System.Collections.Specialized.NameValueCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>컬렉션에 대 한 인덱스의 유효한 범위를 벗어납니다."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: NameValueCollection.Item(String)
  fullName: System.Collections.Specialized.NameValueCollection.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "에 지정된 된 키와 항목을 가져오거나는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>합니다."
  remarks: "이 속성은 다음 구문을 사용 하 여 컬렉션의 특정 요소를 액세스 하는 기능 제공: `myCollection[name]`합니다.       컬렉션에 지정한 키가 이미 있습니다이 속성을 설정할 지정 된 값이 기존 값 목록을 덮어씁니다. 값의 기존 목록에 새 값을 추가 하려면 사용 된 <xref:System.Collections.Specialized.NameValueCollection.Add%2A>메서드.</xref:System.Collections.Specialized.NameValueCollection.Add%2A>       컬렉션에 지정된 된 키가 없는 경우이 속성을 설정할 지정 된 키와 지정된 된 값을 사용 하 여 새 항목을 만듭니다.      > [!CAUTION] >이 속성은 반환 `null` 다음과 같은 경우에: 지정된 된 키를 찾을 수 없습니다; 있는 경우 1) 및 2) 하는 경우 지정된 된 키를 찾아 관련된 값은 `null`합니다. 이 속성은 두 가지 경우를 구분 하지 않습니다.       C# 언어는 키워드를 사용 하 여 항목 속성을 구현 하는 대신 인덱서를 정의 합니다. Visual Basic에서는 동일한 인덱싱 기능을 기본 속성으로 항목을 구현 합니다.       검색 또는 지정된 된 키와 연결 된 값이 설정 되는 O (`n`) 작업, 여기서 `n` 값의 수입니다."
  syntax:
    content: public string this[string name] { get; set; }
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>찾을 항목의 키.</xref:System.String> 키는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.String
      description: "A <xref:System.String>검색 되지 않으면, 지정된 된 키와 관련 된 값의 쉼표로 구분 된 목록이 포함 된 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.String>"
  overload: System.Collections.Specialized.NameValueCollection.Item*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "컬렉션이 읽기 전용 및 컬렉션을 수정 하 고 작업을 시도 합니다."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: NameValueCollection.Remove(String)
  fullName: System.Collections.Specialized.NameValueCollection.Remove(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "지정된 된 키를 가진 항목을 제거는 <xref href=&quot;System.Collections.Specialized.NameObjectCollectionBase&quot;> </xref> 인스턴스."
  remarks: "경우는 <xref:System.Collections.Specialized.NameValueCollection>지정된 키를 가진 요소가 포함 되지 않습니다는 <xref:System.Collections.Specialized.NameValueCollection>변경 되지 않습니다.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Collections.Specialized.NameValueCollection> 예외가 throw 되지 않습니다.       목록 처럼 연속 된 요소 컬렉션에서 제거 된 요소 다음에 오는 요소는 빈된 자리를 차지 하도록 위로 이동 합니다. 컬렉션은 지정 된 경우 이동 되는 요소의 인덱스도 업데이트 됩니다. 요소가 해시 테이블 같은 버킷으로 개념적으로 그룹화 되어 있는 컬렉션에는 이러한 동작이 적용 되지 않습니다.       이 메서드는 O는 (`n`) 작업, 여기서 `n` 은 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>"
  syntax:
    content: public virtual void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>제거할 항목의 키.</xref:System.String> 키는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Collections.Specialized.NameValueCollection.Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "컬렉션이 읽기 전용입니다."
  platform:
  - net462
- uid: System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)
  id: Set(System.String,System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Set(String,String)
  nameWithType: NameValueCollection.Set(String,String)
  fullName: System.Collections.Specialized.NameValueCollection.Set(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "에 있는 항목의 값을 설정 하는 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>합니다."
  remarks: "컬렉션에 지정한 키가 이미 있습니다이 메서드는 지정 된 값이 기존 값 목록을 덮어씁니다. 값의 기존 목록에 새 값을 추가 하려면 사용 된 <xref:System.Collections.Specialized.NameValueCollection.Add%2A>메서드.</xref:System.Collections.Specialized.NameValueCollection.Add%2A>       컬렉션에 지정된 된 키가 없는 경우이 메서드는 지정 된 키와 지정된 된 값을 사용 하 여 새 항목을 만듭니다.       이 메서드는 o (1) 작업."
  syntax:
    content: public virtual void Set (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>새 값을 추가할 엔트리의 키입니다.</xref:System.String> 키는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: value
      type: System.String
      description: "<xref:System.Object>지정된 된 항목에 추가할 새 값을 나타내는입니다.</xref:System.Object> 값일 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Collections.Specialized.NameValueCollection.Set*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "컬렉션이 읽기 전용입니다."
  platform:
  - net462
references:
- uid: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: System.Collections.Specialized.NameObjectCollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Collections.Specialized.NameValueCollection.#ctor
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection()
  nameWithType: NameValueCollection.NameValueCollection()
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection()
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(IEqualityComparer)
  nameWithType: NameValueCollection.NameValueCollection(IEqualityComparer)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(IEqualityComparer)
- uid: System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: true
  name: IEqualityComparer
  nameWithType: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(NameValueCollection)
  nameWithType: NameValueCollection.NameValueCollection(NameValueCollection)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(Int32)
  nameWithType: NameValueCollection.NameValueCollection(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(IHashCodeProvider,IComparer)
  nameWithType: NameValueCollection.NameValueCollection(IHashCodeProvider,IComparer)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(IHashCodeProvider,IComparer)
- uid: System.Collections.IHashCodeProvider
  parent: System.Collections
  isExternal: false
  name: IHashCodeProvider
  nameWithType: IHashCodeProvider
  fullName: System.Collections.IHashCodeProvider
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: true
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(Int32,IEqualityComparer)
  nameWithType: NameValueCollection.NameValueCollection(Int32,IEqualityComparer)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(Int32,IEqualityComparer)
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(Int32,NameValueCollection)
  nameWithType: NameValueCollection.NameValueCollection(Int32,NameValueCollection)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(Int32,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(SerializationInfo,StreamingContext)
  nameWithType: NameValueCollection.NameValueCollection(SerializationInfo,StreamingContext)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(Int32,IHashCodeProvider,IComparer)
  nameWithType: NameValueCollection.NameValueCollection(Int32,IHashCodeProvider,IComparer)
  fullName: System.Collections.Specialized.NameValueCollection.NameValueCollection(Int32,IHashCodeProvider,IComparer)
- uid: System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Add(NameValueCollection)
  nameWithType: NameValueCollection.Add(NameValueCollection)
  fullName: System.Collections.Specialized.NameValueCollection.Add(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Add(String,String)
  nameWithType: NameValueCollection.Add(String,String)
  fullName: System.Collections.Specialized.NameValueCollection.Add(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.NameValueCollection.AllKeys
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: AllKeys
  nameWithType: NameValueCollection.AllKeys
  fullName: System.Collections.Specialized.NameValueCollection.AllKeys
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Collections.Specialized.NameValueCollection.Clear
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Clear()
  nameWithType: NameValueCollection.Clear()
  fullName: System.Collections.Specialized.NameValueCollection.Clear()
- uid: System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: NameValueCollection.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.NameValueCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.Specialized.NameValueCollection.Get(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Get(Int32)
  nameWithType: NameValueCollection.Get(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.Get(Int32)
- uid: System.Collections.Specialized.NameValueCollection.Get(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Get(String)
  nameWithType: NameValueCollection.Get(String)
  fullName: System.Collections.Specialized.NameValueCollection.Get(String)
- uid: System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: GetKey(Int32)
  nameWithType: NameValueCollection.GetKey(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.GetKey(Int32)
- uid: System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: GetValues(Int32)
  nameWithType: NameValueCollection.GetValues(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.GetValues(Int32)
- uid: System.Collections.Specialized.NameValueCollection.GetValues(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: GetValues(String)
  nameWithType: NameValueCollection.GetValues(String)
  fullName: System.Collections.Specialized.NameValueCollection.GetValues(String)
- uid: System.Collections.Specialized.NameValueCollection.HasKeys
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: HasKeys()
  nameWithType: NameValueCollection.HasKeys()
  fullName: System.Collections.Specialized.NameValueCollection.HasKeys()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: InvalidateCachedArrays()
  nameWithType: NameValueCollection.InvalidateCachedArrays()
  fullName: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays()
- uid: System.Collections.Specialized.NameValueCollection.Item(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: NameValueCollection.Item(Int32)
  fullName: System.Collections.Specialized.NameValueCollection.Item(Int32)
- uid: System.Collections.Specialized.NameValueCollection.Item(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Item(String)
  nameWithType: NameValueCollection.Item(String)
  fullName: System.Collections.Specialized.NameValueCollection.Item(String)
- uid: System.Collections.Specialized.NameValueCollection.Remove(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Remove(String)
  nameWithType: NameValueCollection.Remove(String)
  fullName: System.Collections.Specialized.NameValueCollection.Remove(String)
- uid: System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Set(String,String)
  nameWithType: NameValueCollection.Set(String,String)
  fullName: System.Collections.Specialized.NameValueCollection.Set(String,String)
- uid: System.Collections.Specialized.NameValueCollection.#ctor*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection.NameValueCollection
- uid: System.Collections.Specialized.NameValueCollection.Add*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Add
  nameWithType: NameValueCollection.Add
- uid: System.Collections.Specialized.NameValueCollection.AllKeys*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: AllKeys
  nameWithType: NameValueCollection.AllKeys
- uid: System.Collections.Specialized.NameValueCollection.Clear*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Clear
  nameWithType: NameValueCollection.Clear
- uid: System.Collections.Specialized.NameValueCollection.CopyTo*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: CopyTo
  nameWithType: NameValueCollection.CopyTo
- uid: System.Collections.Specialized.NameValueCollection.Get*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Get
  nameWithType: NameValueCollection.Get
- uid: System.Collections.Specialized.NameValueCollection.GetKey*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: GetKey
  nameWithType: NameValueCollection.GetKey
- uid: System.Collections.Specialized.NameValueCollection.GetValues*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: GetValues
  nameWithType: NameValueCollection.GetValues
- uid: System.Collections.Specialized.NameValueCollection.HasKeys*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: HasKeys
  nameWithType: NameValueCollection.HasKeys
- uid: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: InvalidateCachedArrays
  nameWithType: NameValueCollection.InvalidateCachedArrays
- uid: System.Collections.Specialized.NameValueCollection.Item*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Item
  nameWithType: NameValueCollection.Item
- uid: System.Collections.Specialized.NameValueCollection.Remove*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Remove
  nameWithType: NameValueCollection.Remove
- uid: System.Collections.Specialized.NameValueCollection.Set*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Set
  nameWithType: NameValueCollection.Set
