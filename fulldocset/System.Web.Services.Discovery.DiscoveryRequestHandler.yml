### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Discovery.DiscoveryRequestHandler
  id: DiscoveryRequestHandler
  children:
  - System.Web.Services.Discovery.DiscoveryRequestHandler.#ctor
  - System.Web.Services.Discovery.DiscoveryRequestHandler.IsReusable
  - System.Web.Services.Discovery.DiscoveryRequestHandler.ProcessRequest(System.Web.HttpContext)
  langs:
  - csharp
  name: DiscoveryRequestHandler
  nameWithType: DiscoveryRequestHandler
  fullName: System.Web.Services.Discovery.DiscoveryRequestHandler
  type: Class
  summary: "웹 서비스 검색 문서에 대 한 요청을 처리 하는 ASP.NET HTTP 처리기입니다."
  remarks: "DiscoveryRequestHandler 클래스를 통해 해당 <xref:System.Web.Services.Discovery.DiscoveryRequestHandler.ProcessRequest%2A>검색 문서에 대 한 HTTP 요청을 처리 하는 메서드를.</xref:System.Web.Services.Discovery.DiscoveryRequestHandler.ProcessRequest%2A> 검색 문서로 표시 됩니다는 <xref:System.Web.Services.Discovery.DiscoveryDocument>클래스 및.disco 확장을 사용 하는 파일로 일반적으로 serialize 됩니다.</xref:System.Web.Services.Discovery.DiscoveryDocument> 지정된 된 위치에서 사용할 수 있는 웹 서비스를 확인 하기 위한 메커니즘을 제공 하는 웹 서비스를 검색 합니다.       DiscoveryRequestHandler 클래스 일반적으로 하지 않아도 개발자가 직접 사용할 수 있습니다."
  syntax:
    content: 'public sealed class DiscoveryRequestHandler : System.Web.IHttpHandler'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpHandler
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryRequestHandler.#ctor
  id: '#ctor'
  parent: System.Web.Services.Discovery.DiscoveryRequestHandler
  langs:
  - csharp
  name: DiscoveryRequestHandler()
  nameWithType: DiscoveryRequestHandler.DiscoveryRequestHandler()
  fullName: System.Web.Services.Discovery.DiscoveryRequestHandler.DiscoveryRequestHandler()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.Services.Discovery.DiscoveryRequestHandler&quot;> </xref> 클래스입니다."
  syntax:
    content: public DiscoveryRequestHandler ();
    parameters: []
  overload: System.Web.Services.Discovery.DiscoveryRequestHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryRequestHandler.IsReusable
  id: IsReusable
  parent: System.Web.Services.Discovery.DiscoveryRequestHandler
  langs:
  - csharp
  name: IsReusable
  nameWithType: DiscoveryRequestHandler.IsReusable
  fullName: System.Web.Services.Discovery.DiscoveryRequestHandler.IsReusable
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "값을 가져옵니다 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, 나타냅니다 여부 인스턴스의 <xref href=&quot;System.Web.Services.Discovery.DiscoveryRequestHandler&quot;> </xref> (또는 파생된 클래스)는 다시 사용할 수 있습니다."
  syntax:
    content: public bool IsReusable { get; }
    return:
      type: System.Boolean
      description: "이 속성은 항상 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Services.Discovery.DiscoveryRequestHandler.IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Discovery.DiscoveryRequestHandler.ProcessRequest(System.Web.HttpContext)
  id: ProcessRequest(System.Web.HttpContext)
  parent: System.Web.Services.Discovery.DiscoveryRequestHandler
  langs:
  - csharp
  name: ProcessRequest(HttpContext)
  nameWithType: DiscoveryRequestHandler.ProcessRequest(HttpContext)
  fullName: System.Web.Services.Discovery.DiscoveryRequestHandler.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Discovery
  summary: "HTTP 응답에 직렬화 하는 검색 문서에 대 한 HTTP 요청을 처리 합니다."
  remarks: "ProcessRequest 메서드가에 HTTP 요청 Locator URL (Uniform Resource)을 해당 하는 파일 시스템 경로 내에서 해당 파일을 검색 합니다. 검색에 하위 디렉터리에 확장 하 고 루트 검색 디렉터리에서 내용에 따라 대상 파일 확장명을 전환할 수 있습니다.       검색 프로세스 데이터가 채워지고이 <xref:System.Web.Services.Discovery.DiscoveryDocument>개체의 <xref:System.Web.Services.Discovery.DiscoveryDocument.References%2A>발견 된 파일에 있는 속성입니다.</xref:System.Web.Services.Discovery.DiscoveryDocument.References%2A> </xref:System.Web.Services.Discovery.DiscoveryDocument>"
  syntax:
    content: public void ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<> </> *> 및 <> </> *>의 속성은 <xref href=&quot;System.Web.HttpContext&quot;> </xref> 클래스 각각 입력 및 출력에 사용 됩니다."
  overload: System.Web.Services.Discovery.DiscoveryRequestHandler.ProcessRequest*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Services.Discovery.DiscoveryRequestHandler.#ctor
  parent: System.Web.Services.Discovery.DiscoveryRequestHandler
  isExternal: false
  name: DiscoveryRequestHandler()
  nameWithType: DiscoveryRequestHandler.DiscoveryRequestHandler()
  fullName: System.Web.Services.Discovery.DiscoveryRequestHandler.DiscoveryRequestHandler()
- uid: System.Web.Services.Discovery.DiscoveryRequestHandler.IsReusable
  parent: System.Web.Services.Discovery.DiscoveryRequestHandler
  isExternal: false
  name: IsReusable
  nameWithType: DiscoveryRequestHandler.IsReusable
  fullName: System.Web.Services.Discovery.DiscoveryRequestHandler.IsReusable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Services.Discovery.DiscoveryRequestHandler.ProcessRequest(System.Web.HttpContext)
  parent: System.Web.Services.Discovery.DiscoveryRequestHandler
  isExternal: false
  name: ProcessRequest(HttpContext)
  nameWithType: DiscoveryRequestHandler.ProcessRequest(HttpContext)
  fullName: System.Web.Services.Discovery.DiscoveryRequestHandler.ProcessRequest(HttpContext)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.Services.Discovery.DiscoveryRequestHandler.#ctor*
  parent: System.Web.Services.Discovery.DiscoveryRequestHandler
  isExternal: false
  name: DiscoveryRequestHandler
  nameWithType: DiscoveryRequestHandler.DiscoveryRequestHandler
- uid: System.Web.Services.Discovery.DiscoveryRequestHandler.IsReusable*
  parent: System.Web.Services.Discovery.DiscoveryRequestHandler
  isExternal: false
  name: IsReusable
  nameWithType: DiscoveryRequestHandler.IsReusable
- uid: System.Web.Services.Discovery.DiscoveryRequestHandler.ProcessRequest*
  parent: System.Web.Services.Discovery.DiscoveryRequestHandler
  isExternal: false
  name: ProcessRequest
  nameWithType: DiscoveryRequestHandler.ProcessRequest
