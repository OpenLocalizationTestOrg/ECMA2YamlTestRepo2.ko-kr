### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  id: ProxyWebPartManager
  children:
  - System.Web.UI.WebControls.WebParts.ProxyWebPartManager.#ctor
  - System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID
  - System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls
  - System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection
  - System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming
  - System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus
  - System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID
  - System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections
  - System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible
  langs:
  - csharp
  name: ProxyWebPartManager
  nameWithType: ProxyWebPartManager
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  type: Class
  summary: "개발자가 static으로 선언할 수 있는 방법을 제공 때 연결에는 콘텐츠 페이지는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> 콘텐츠 페이지의 연결 된 마스터 페이지 컨트롤이 선언 되었습니다."
  remarks: "내용에 정적 연결을 선언 하는 특정 시나리오에 대 한 컨트롤이 있습니다 ProxyWebPartManager 때 페이지는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>컨트롤은 마스터 페이지에 이미 선언 되었습니다.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       기본적으로 웹 파트 컨트롤을 사용 하는 웹 페이지 (한 개만) 포함 해야 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>페이지에서 모든 웹 파트 컨트롤을 관리 하는 컨트롤.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> 웹 파트 응용 프로그램 마스터 페이지를 사용 하는 경우이를 배치할 일반적는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>런타임과 단일에 마스터 페이지와 모든 콘텐츠 페이지 병합 되므로 마스터 페이지의 제어 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>컨트롤 모든 콘텐츠 페이지에서 모든 웹 파트 컨트롤을 관리 합니다.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> 그러나 개발자를 응용 프로그램의 콘텐츠 페이지에서 정적 연결을 선언 하려고 하면 이러한 것 처럼 보일 수는 제한이 있습니다. 정적 웹 파트 연결을 추가 하 여만 선언할 수 있습니다는 `asp:webpartconnection>` 의 자식으로 `<staticconnections>` 요소는 자체의 자식 이어야 합니다는 `<asp:webpartmanager>` 요소입니다. 하지만 없기 때문에 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>마스터 페이지에 이미 선언 되었습니다. 제어 하 고 허용 되는 하나 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>컨트롤 개발자가 추가 선언할 수 없습니다 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>정적 연결을 추가 하려면 콘텐츠 페이지에서 컨트롤.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>       ProxyWebPartManager 컨트롤의 일어나는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>이 시나리오에서 제어 합니다.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> 개발자는 `<asp:proxywebpartmanager>` 요소 대신는 `<asp:webpartmanager>` 요소는 콘텐츠 페이지 및 수에 다음 요소를 선언 하는 정적 연결 자식으로 합니다. 런타임 시 ProxyWebPartManager 제어의 연결에 추가 되는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A>의 컬렉션은 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>제어 하 고 다른 모든 연결과 같이 처리 합니다.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A>       ProxyWebPartManager 컨트롤을 사용 하 여 특정 개발 시나리오에만 하기 때문에 더 많은 제한이 기능 보다 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>클래스</xref:System.Web.UI.WebControls.WebParts.WebPartManager> 사실, ProxyWebPartManager 컨트롤은 역할에 대 한 정적 연결을 포함 하는 프록시를 있지만 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>제어 콘텐츠 페이지에서에서 상속 되지 않습니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>컨트롤.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> 직접 상속 된 <xref:System.Web.UI.Control>클래스 및 기본 멤버 중 일부를 재정의 합니다.</xref:System.Web.UI.Control> <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming%2A>, <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible%2A>, 및 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID%2A>속성은 재정의 되 고는 사용 되지 않도록 하는 값을 할당 합니다.</xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID%2A> </xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible%2A> </xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming%2A> 상속 된 다른 속성은 해당 디자인 타임 동작을 조정 재정의 하지만 그렇지 않은 경우 기본 속성으로 동일한 동작. 여기에 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls%2A>및 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID%2A>속성.</xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID%2A> </xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls%2A> 마지막으로, ProxyWebPartManager 클래스에는 하나의 상속 되지 않은 속성을 있습니다. <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>정적 연결의 자체 컬렉션을 반환 하는 속성 (한 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection>개체).</xref:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection> </xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>       메서드 구문과 ProxyWebPartManager 클래스는 이와 비슷하게 사용을 제한 하도록 주로 몇 가지 방법만를 재정의 합니다. 상속 된 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus%2A>메서드 호출 하는 경우 예외를 throw 하 여 사용할 수 없는 구성 됩니다.</xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus%2A> <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection%2A>메서드는 항상에서 컨트롤의 컬렉션을 포함 하지 못하도록 방지 하는 효과가 있는 빈 컨트롤 컬렉션을 반환 합니다.</xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection%2A> 마지막으로 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit%2A>메서드는 기본 메서드를 호출 하 고 다음 참조 하는 연결의 컬렉션을 할당는 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>속성을는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=fullName>의 속성은 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>컨트롤.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> </xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit%2A> 이 모든 콘텐츠 페이지에 선언 된 모든 정적 연결 겹쳐서 효과가 있도록 connections 컬렉션의 일부에서 및 유지 관리는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>마스터 페이지에서 컨트롤.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates how to use the ProxyWebPartManager class to declare static connections on content pages in an application that uses master pages. The example has five parts:  \n  \n-   A user control that enables you to change the Web Parts display mode on a page.  \n  \n-   Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.  \n  \n-   A master Web page that hosts the user control, the content pages, and the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control for the application.  \n  \n-   A content Web page that hosts a ProxyWebPartManager control, the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a static connection to connect the two controls.  \n  \n-   An explanation of how to run the example page.  \n  \n The first part of this code example is the user control that enables users to change display modes on a Web page. Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting master page. For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_ProxyWebPartManager_Overview#6](~/add/codesnippet/csharp/t-system.web.ui.webcontr_112_1.ascx)]\n [!code-vb[WebParts_ProxyWebPartManager_Overview#6](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_112_1.ascx)]  \n  \n The second part of the code example is the source code for the interface and controls. The source file contains a simple interface named `IZipCode`. There is also a <xref:System.Web.UI.WebControls.WebParts.WebPart> class named `ZipCodeWebPart` that implements the interface and acts as the provider control. Its `ProvideIZipCode` method is the callback method that implements the interface's only member. The method simply returns an instance of the interface. Note that the method is marked with a `ConnectionProvider` attribute in its metadata. This is the mechanism for identifying the method as the callback method for the provider's connection point. The other <xref:System.Web.UI.WebControls.WebParts.WebPart> class is named `WeatherWebPart`, and it acts as the consumer for the connection. This class has a method named `GetZipCode` that gets an instance of the `IZipCode` interface from the provider control. Note that this method is marked as the consumer's connection point method with a `ConnectionConsumer` attribute in its metadata.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_ProxyWebPartManager_Overview#4](~/add/codesnippet/csharp/t-system.web.ui.webcontr_112_2.cs)]\n [!code-vb[WebParts_ProxyWebPartManager_Overview#4](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_112_2.vb)]  \n  \n The third part of the code example is the master page. You should take the following source code and save it in a file, naming it MasterPageCS.master or MasterPageVB.master (depending on which language you use). Note that the master page contains a `Register` directive to register the user control, and it references the user control itself in the body of the page. The master page also declares the single `<asp:webpartmanager>` element used for this page and all related content pages. Finally, the master page has an `<asp: contentplaceholder>` element that declares the point in the page where the content page is inserted.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The fourth part of the code example is the content page. You should copy the following source code and save it in a file with an .aspx extension. Notice that its `Page` directive contains a `MasterFile` attribute to refer to the master page. Also, this page has a `Register` directive to register the file in the App_Code folder that contains the dynamically compiled custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that participate in the connection. Within the `<asp:content>` tags of the page, there is an <`asp:proxywebpartmanager>` element, with a child `<staticconnections>` element, which in turn has a child `<asp:webpartconnection>` element to declare the details of the connection. Within the `<script>` tags on the page, the `Button1_Click` method adds some code that accesses the main <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control in the master page and the ProxyWebPartManager control in the content page, and writes some of their details to the page.  \n  \n [!code-cs[WebParts_ProxyWebPartManager_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_112_4.aspx)]\n [!code-vb[WebParts_ProxyWebPartManager_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_112_4.aspx)]  \n  \n After you load the page in a browser, click the **WebPartManager Information** button and observe the information about the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control in the master page, and the ProxyWebPartManager control in the content page. For example, note that they both have the same count in their respective properties that track static connections (the <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> property). Note also that although the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control has a <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> property that tracks the number of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls it manages, the ProxyWebPartManager control has no such property, as its only purpose is to contain static connections."
  syntax:
    content: >-
      [System.ComponentModel.Bindable(false)]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.NonVisualControl]

      [System.Web.UI.ParseChildren(true)]

      [System.Web.UI.PersistChildren(false)]

      public class ProxyWebPartManager : System.Web.UI.Control
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  langs:
  - csharp
  name: ProxyWebPartManager()
  nameWithType: ProxyWebPartManager.ProxyWebPartManager()
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ProxyWebPartManager()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.WebParts.ProxyWebPartManager&quot;> </xref> 클래스입니다."
  syntax:
    content: public ProxyWebPartManager ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID
  id: ClientID
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  langs:
  - csharp
  name: ClientID
  nameWithType: ProxyWebPartManager.ClientID
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "ASP.NET에서 생성 되는 HTML 태그에 대 한 컨트롤 ID를 가져옵니다."
  syntax:
    content: public override string ClientID { get; }
    return:
      type: System.String
      description: "ASP.NET에서 생성 되는 HTML 태그에 대 한 컨트롤 ID입니다."
  overload: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls
  id: Controls
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  langs:
  - csharp
  name: Controls
  nameWithType: ProxyWebPartManager.Controls
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> UI 계층 구조에서 지정 된 서버 컨트롤의 자식 컨트롤을 나타내는 개체입니다."
  syntax:
    content: public override System.Web.UI.ControlCollection Controls { get; }
    return:
      type: System.Web.UI.ControlCollection
      description: "지정된 된 서버 컨트롤에 대 한 자식 컨트롤의 컬렉션입니다."
  overload: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection
  id: CreateControlCollection
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  langs:
  - csharp
  name: CreateControlCollection()
  nameWithType: ProxyWebPartManager.CreateControlCollection()
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "방지 하기 위해 기본 속성을 재정의 <xref href=&quot;System.Web.UI.WebControls.WebParts.ProxyWebPartManager&quot;> </xref> 에서 컨트롤을 포함 하는 컨트롤입니다."
  remarks: "방지 하기 위해 기본 메서드를 재정의 하는 CreateControlCollection 메서드는 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>컨트롤을 포함 하 고 컨트롤의 컬렉션을 반환 합니다.</xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 유일한 목적은 정적 연결 마스터 페이지를 사용 하는 응용 프로그램 내에 있는 콘텐츠 페이지에서 선언할 수 있습니다."
  syntax:
    content: protected override System.Web.UI.ControlCollection CreateControlCollection ();
    parameters: []
    return:
      type: System.Web.UI.ControlCollection
      description: "항상 반환 된 <xref href=&quot;System.Web.UI.EmptyControlCollection&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming
  id: EnableTheming
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  langs:
  - csharp
  name: EnableTheming
  nameWithType: ProxyWebPartManager.EnableTheming
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "사용 하는 테마를 방지 하기 위해 기본 속성을 재정의 합니다."
  remarks: "EnableTheming 속성 테마가 사용 하 여 사용 하지 않도록 하려면 기본 속성을 재정의 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>컨트롤.</xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 이 함께 사용 되 고 테마 나올 충돌을 방지 하기는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>마스터 페이지에서 컨트롤 (해당 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A?displayProperty=fullName>속성은 항상 반환 `true`).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: public override bool EnableTheming { get; set; }
    return:
      type: System.Boolean
      description: "항상 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, 테마를 사용 하지 않으려면입니다."
  overload: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "호출자가이 속성에 값을 할당 하려고 합니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus
  id: Focus
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  langs:
  - csharp
  name: Focus()
  nameWithType: ProxyWebPartManager.Focus()
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "메서드가 호출 되지 않도록 하려면 기본 메서드를 재정의 합니다."
  remarks: "포커스 메서드는 기본 메서드를 재정의 하 고 모든 호출자가 메서드를 호출 하려고 시도 하는 경우 예외를 throw 합니다. 때문에 이것이 상속 된 <xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName>사용자 인터페이스 (UI)를 사용 하 여 컨트롤에 대 한 반환 되지만 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>제어는 UI 및 때문에 포커스를 설정할 필요가 없습니다.</xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> </xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName>"
  syntax:
    content: public override void Focus ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "호출자가이 메서드를 호출 하려고 합니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: ProxyWebPartManager.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "발생는 <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref> 이벤트 컨트롤을 초기화 합니다."
  remarks: "기본 메서드를 호출 하 고 다음 초기화 하는 작업을 수행 하는 OnInit 메서드는 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>컨트롤.</xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 이 방법의 중요 한 작업에서 참조 하는 연결의 컬렉션을 지정 하는 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>속성을는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>컨트롤의 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=fullName>컬렉션.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> 연결 된 마스터 페이지에서 컨트롤은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID
  id: SkinID
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  langs:
  - csharp
  name: SkinID
  nameWithType: ProxyWebPartManager.SkinID
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "값이 할당 되지 않도록 하려면 기본 속성을 재정의 합니다."
  remarks: "와 사용 되지 않도록 방지 하는 효과가 있는 값이 할당 되지 않도록 하려면 기본 속성을 재정의 하는 속성 SkinID 스킨의 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>컨트롤.</xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 이 컨트롤이 페이지에는 사용자 인터페이스 (UI)를 노출 하지 때문에 수행 됩니다. 동일한 동작에 의해 구현 됩니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>제어 하는 데 해당 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A?displayProperty=fullName>속성.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: public override string SkinID { get; set; }
    return:
      type: System.String
      description: "항상 빈 문자열을 반환 합니다 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "호출자가이 속성에 값을 할당 하려고 합니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections
  id: StaticConnections
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  langs:
  - csharp
  name: StaticConnections
  nameWithType: ProxyWebPartManager.StaticConnections
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "내에서 선언 된 정적 연결의 컬렉션을 가져옵니다는 <xref uid=&quot;langword_csharp_&lt;asp:proxywebpartmanager&gt;&quot; name=&quot;&lt;asp:proxywebpartmanager&gt;&quot; href=&quot;&quot;> </xref> 콘텐츠 페이지의 요소입니다."
  remarks: "StaticConnections 속성의 컬렉션을 참조 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection>에 선언 된 개체는 `<asp:proxywebpartmanager>` 요소.</xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 이 컬렉션에 포함 된 연결의 정적 연결에 추가 되는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>컨트롤 (에서 참조 해당 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=fullName>컬렉션), 고와 관련 된 다른 모든 연결은 정확 하 게 처리 됩니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>컨트롤.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>       선언적 StaticConnections 속성에 해당 하는 요소가 `<staticconnections>` 요소입니다. 마스터 페이지를 사용 하는 응용 프로그램에는 `<staticconnections>` 요소가 자식으로 추가 됩니다는 `<asp:proxywebpartmanager>` 콘텐츠 페이지에서 요소 및 `<asp:webpartconnection>` 차례로 요소가 자식으로 추가 되는 `<staticconnections>` 요소입니다. 여러 `<asp:webpartconnection>` 하나에 요소를 추가할 수 `<staticconnections>` 요소 및 여러 콘텐츠 페이지는 마스터 페이지 응용 프로그램의 일부로 정적 연결을 선언할 수 있습니다."
  example:
  - "The following code example demonstrates how to use the StaticConnections property on the <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> class. This code example shows only the relevant portion of the code from the content page that declares the <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> control and the static connection. For the other pages required to run the code example, and a description of how to set them up, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> class overview.  \n  \n The following code is the content page that declares the `<staticconnections>` element as a child of the `<asp:proxywebpartmanager>` element. Also note that the `Button1_Click` method checks the count of the StaticConnections property on the <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> control and writes it to the page.  \n  \n [!code-cs[WebParts_ProxyWebPartManager_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1319_1.aspx)]\n [!code-vb[WebParts_ProxyWebPartManager_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1319_1.aspx)]  \n  \n After you load the page in a browser, click the **WebPartManager Information** button and observe the information about the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control in the master page, and the <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> control in the content page. For example, note that they both have the same count in their respective properties that track static connections (the StaticConnections property)."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection StaticConnections { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection&quot;> </xref> 모든 정적 들어 있는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> 내에서 선언 된 개체는 <xref uid=&quot;langword_csharp_&lt;asp:proxywebpartmanager&gt;&quot; name=&quot;&lt;asp:proxywebpartmanager&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  overload: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible
  id: Visible
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  langs:
  - csharp
  name: Visible
  nameWithType: ProxyWebPartManager.Visible
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "값이 할당 되지 않도록 하려면 기본 속성을 재정의 합니다."
  remarks: "Visible 속성을 방지 하기 위해 기본 속성을 재정의 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>표시 생성 되 고에서 제어 합니다.</xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>마찬가지로 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>제어, 사용자 인터페이스가 없는 (UI) 및 사용자에 게 표시 되지 않습니다.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>"
  syntax:
    content: public override bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "항상 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, 컨트롤 표시 되지 않도록 하려면."
  overload: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "호출자가이 속성에 값을 할당 하려고 합니다."
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.#ctor
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: ProxyWebPartManager()
  nameWithType: ProxyWebPartManager.ProxyWebPartManager()
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ProxyWebPartManager()
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: ClientID
  nameWithType: ProxyWebPartManager.ClientID
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: Controls
  nameWithType: ProxyWebPartManager.Controls
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: CreateControlCollection()
  nameWithType: ProxyWebPartManager.CreateControlCollection()
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection()
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: EnableTheming
  nameWithType: ProxyWebPartManager.EnableTheming
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: Focus()
  nameWithType: ProxyWebPartManager.Focus()
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus()
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: ProxyWebPartManager.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: SkinID
  nameWithType: ProxyWebPartManager.SkinID
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: StaticConnections
  nameWithType: ProxyWebPartManager.StaticConnections
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ProxyWebPartConnectionCollection
  nameWithType: ProxyWebPartConnectionCollection
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: Visible
  nameWithType: ProxyWebPartManager.Visible
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.#ctor*
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: ProxyWebPartManager
  nameWithType: ProxyWebPartManager.ProxyWebPartManager
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID*
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: ClientID
  nameWithType: ProxyWebPartManager.ClientID
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls*
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: Controls
  nameWithType: ProxyWebPartManager.Controls
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection*
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: CreateControlCollection
  nameWithType: ProxyWebPartManager.CreateControlCollection
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming*
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: EnableTheming
  nameWithType: ProxyWebPartManager.EnableTheming
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus*
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: Focus
  nameWithType: ProxyWebPartManager.Focus
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit*
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: OnInit
  nameWithType: ProxyWebPartManager.OnInit
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID*
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: SkinID
  nameWithType: ProxyWebPartManager.SkinID
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections*
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: StaticConnections
  nameWithType: ProxyWebPartManager.StaticConnections
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible*
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: Visible
  nameWithType: ProxyWebPartManager.Visible
