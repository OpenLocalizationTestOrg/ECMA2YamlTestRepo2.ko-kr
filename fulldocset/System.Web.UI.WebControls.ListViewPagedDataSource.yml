### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ListViewPagedDataSource
  id: ListViewPagedDataSource
  children:
  - System.Web.UI.WebControls.ListViewPagedDataSource.#ctor
  - System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging
  - System.Web.UI.WebControls.ListViewPagedDataSource.CopyTo(System.Array,System.Int32)
  - System.Web.UI.WebControls.ListViewPagedDataSource.Count
  - System.Web.UI.WebControls.ListViewPagedDataSource.DataSource
  - System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount
  - System.Web.UI.WebControls.ListViewPagedDataSource.GetEnumerator
  - System.Web.UI.WebControls.ListViewPagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  - System.Web.UI.WebControls.ListViewPagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])
  - System.Web.UI.WebControls.ListViewPagedDataSource.IsReadOnly
  - System.Web.UI.WebControls.ListViewPagedDataSource.IsServerPagingEnabled
  - System.Web.UI.WebControls.ListViewPagedDataSource.IsSynchronized
  - System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows
  - System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex
  - System.Web.UI.WebControls.ListViewPagedDataSource.SyncRoot
  - System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount
  langs:
  - csharp
  name: ListViewPagedDataSource
  nameWithType: ListViewPagedDataSource
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource
  type: Class
  summary: "페이징 관련 속성을 캡슐화는 <xref href=&quot;System.Web.UI.WebControls.ListView&quot;> </xref> 제어 합니다."
  remarks: "ListViewPagedDataSource 클래스 수 있도록 하는 속성을 캡슐화는 <xref:System.Web.UI.WebControls.ListView>페이징을 수행을 제어 합니다.</xref:System.Web.UI.WebControls.ListView>       이 클래스 가장 사용 가능한 메서드를 사용 하 여 연결 된 데이터를 열거 합니다. 데이터 원본에서 인덱싱된 액세스를 지 원하는 경우 (같은 <xref:System.Array?displayProperty=fullName>및 <xref:System.Collections.IList?displayProperty=fullName>개체), 액세스를 사용 하는 클래스.</xref:System.Collections.IList?displayProperty=fullName> </xref:System.Array?displayProperty=fullName> 클래스에 의해 만들어진는 열거자를 사용 하는 그렇지 않은 경우는 <xref:System.Collections.IEnumerable.GetEnumerator%2A>메서드.</xref:System.Collections.IEnumerable.GetEnumerator%2A>       목록이 ListViewPagedDataSource 클래스의 인스턴스에 대 한 초기 속성 값에 대 한 참조는 <xref:System.Web.UI.WebControls.ListViewPagedDataSource.%23ctor%2A>생성자.</xref:System.Web.UI.WebControls.ListViewPagedDataSource.%23ctor%2A>"
  syntax:
    content: 'public class ListViewPagedDataSource : System.Collections.ICollection, System.ComponentModel.ITypedList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.ComponentModel.ITypedList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: ListViewPagedDataSource()
  nameWithType: ListViewPagedDataSource.ListViewPagedDataSource()
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.ListViewPagedDataSource()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.ListViewPagedDataSource&quot;> </xref> 클래스입니다."
  remarks: "이 생성자를 사용 하 여 만들고 <xref:System.Web.UI.WebControls.ListViewPagedDataSource>클래스</xref:System.Web.UI.WebControls.ListViewPagedDataSource> 의 새 인스턴스를 초기화 합니다.       다음 표에서 <xref:System.Web.UI.WebControls.ListViewPagedDataSource>클래스</xref:System.Web.UI.WebControls.ListViewPagedDataSource> 의 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 초기 값 |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging%2A>| `false`|   | <xref:System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount%2A>|0|</xref:System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount%2A></xref:System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging%2A>"
  syntax:
    content: public ListViewPagedDataSource ();
    parameters: []
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging
  id: AllowServerPaging
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: AllowServerPaging
  nameWithType: ListViewPagedDataSource.AllowServerPaging
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "서버 기반 페이징이 사용 되는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "서버 기반 페이징이 활성화 되어 있는지 여부를 지정 하려면 AllowServerPaging 속성을 사용 합니다. 이 속성은로 설정 하는 경우 `true`, 데이터 원본 개체는 서버 기반 페이징이 수행 합니다. 그렇지 않은 경우는 <xref:System.Windows.Forms.ListView>컨트롤 페이징 UI 기반지 않습니다.</xref:System.Windows.Forms.ListView> 페이징 UI 기반에 <xref:System.Windows.Forms.ListView>제어 데이터 원본의 모든 레코드를 요청 하 고 현재 페이지에 대 한 이벤트만 사용 하 여.</xref:System.Windows.Forms.ListView>"
  syntax:
    content: public bool AllowServerPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>서버 기반 페이징이 활성화 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: ListViewPagedDataSource.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "지정 된 데이터 원본에서 모든 항목을 복사 &lt;xref:System.Array?displayProperty=fullName&gt; 의 지정된 된 인덱스에서 시작 하는 개체 &lt;xref:System.Array?displayProperty=fullName&gt;합니다."
  remarks: "이 메서드를 사용 하 여 지정 된 데이터 원본의 내용을 복사 <xref:System.Array?displayProperty=fullName>지정된 된 인덱스에서 시작 하는 개체입니다.</xref:System.Array?displayProperty=fullName> <xref:System.Array?displayProperty=fullName>개체 데이터 소스에 있는 항목을 반복 하는 대개.</xref:System.Array?displayProperty=fullName>"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "0부터 시작 &lt;xref:System.Array?displayProperty=fullName&gt; 데이터 원본에서 복사한 항목을 받는 개체입니다."
    - id: index
      type: System.Int32
      description: "지정 된 첫 번째 위치 &lt;xref:System.Array?displayProperty=fullName&gt; 복사한 내용의 받을 개체입니다."
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.Count
  id: Count
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: Count
  nameWithType: ListViewPagedDataSource.Count
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.Count
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "현재 페이지에 대 한 데이터 원본에서 사용할 수 있는 항목의 수를 가져옵니다."
  remarks: "Count 속성을 사용 하 여 데이터 원본에서 사용할 수 있는 항목의 수를 결정 합니다. 다음 조건에 따라 결정은 반환 되는 값: 현재 페이지 마지막 페이지가 아닌 경우-및 <xref:System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows%2A>값 보다 크거나 0의 값을 속성는 <xref:System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows%2A>속성이 반환 됩니다.</xref:System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows%2A> </xref:System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows%2A>      -현재 페이지가 없는 경우 마지막 페이지 및 <xref:System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows%2A>속성이 0의 값 보다 작은 값으로 설정 되어는 <xref:System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount%2A>속성의 값에서 빼면는 <xref:System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex%2A>속성 반환 하기 전에.</xref:System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex%2A> </xref:System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount%2A> </xref:System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows%2A>      -현재 페이지가 경우 마지막 페이지의 값은 <xref:System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount%2A>속성의 값에서 빼면는 <xref:System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex%2A>속성 반환 하기 전에.</xref:System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex%2A> </xref:System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount%2A>      If는 <xref:System.Web.UI.WebControls.ListViewPagedDataSource.DataSource%2A>속성은 `null`, 0이 반환 됩니다.</xref:System.Web.UI.WebControls.ListViewPagedDataSource.DataSource%2A>"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "현재 페이지에 대 한 데이터 원본에서 사용할 수 있는 항목의 수입니다."
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.DataSource
  id: DataSource
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: DataSource
  nameWithType: ListViewPagedDataSource.DataSource
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.DataSource
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "데이터 소스를 가져오거나 설정 합니다."
  remarks: "데이터 원본 속성을 사용 하 여 가져오거나 호출이 전달 됩니다. 데이터 소스를 설정 합니다."
  syntax:
    content: public System.Collections.IEnumerable DataSource { get; set; }
    return:
      type: System.Collections.IEnumerable
      description: "구현 하는 개체 &lt;xref:System.Collections.IEnumerable?displayProperty=fullName&gt; 데이터 소스를 나타내는입니다."
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount
  id: DataSourceCount
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: DataSourceCount
  nameWithType: ListViewPagedDataSource.DataSourceCount
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "데이터 원본에서 항목의 수를 가져옵니다."
  remarks: "DataSourceCount 속성을 사용 하 여 데이터 원본에 있는 항목 수를 결정 합니다. 서버 기반 페이징이 사용 되는 경우의 값은 <xref:System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount%2A>속성이 반환 됩니다. 그렇지 않으면 데이터 원본에 있는 항목의 총 수는 반환 합니다.</xref:System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount%2A>      > [!NOTE] > 경우는 <xref:System.Web.UI.WebControls.ListViewPagedDataSource.DataSource%2A>속성은 `null`, 0이 반환 됩니다.</xref:System.Web.UI.WebControls.ListViewPagedDataSource.DataSource%2A>"
  syntax:
    content: public int DataSourceCount { get; }
    return:
      type: System.Int32
      description: "데이터 원본에 있는 항목의 수입니다."
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "데이터 원본 개체를 구현 하지 않습니다는 &lt;xref:System.Collections.ICollection?displayProperty=fullName&gt; 인터페이스입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ListViewPagedDataSource.GetEnumerator()
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.GetEnumerator()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "구현 하는 개체를 반환 합니다. &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt; 데이터 원본에 있는 모든 항목을 포함 하 고 있습니다."
  remarks: "이 메서드를 사용 하 여 가져오려는 <xref:System.Collections.IEnumerator?displayProperty=fullName>개별 항목 데이터 원본에 액세스 하는 데 사용할 수 있는 개체입니다.</xref:System.Collections.IEnumerator?displayProperty=fullName> 열거자의 현재 위치에 있는 항목에 액세스 하려면 사용 된 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>속성.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName> 사용 하 여는 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>컬렉션의 다음 항목으로 이동 하는 메서드.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> 열거자를 원래 위치로 이동 하려면 사용 된 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>메서드.</xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>      > [!NOTE] > 처음 가져올 때 열거자 또는 호출 하는 경우는 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>열거자는 컬렉션의 첫 번째 항목을 이동 하는 메서드를 호출 해야 합니다는 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>메서드.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> </xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> 그렇지 않으면 항목으로 표시 되는 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>속성이 정의 되지 않습니다.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "&lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt; 데이터 원본에 있는 모든 항목을 포함 하는 개체입니다."
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  id: GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: GetItemProperties(PropertyDescriptor[])
  nameWithType: ListViewPagedDataSource.GetItemProperties(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.GetItemProperties(PropertyDescriptor[])
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "반환 된 <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> 데이터에 바인딩하는 데 사용 되는 속성을 나타내는 개체입니다."
  remarks: "GetItemProperties 메서드를 사용 하 여 가져올는 <xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=fullName>데이터에 바인딩하는 데 사용 되는 속성을 나타내는 개체입니다.</xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=fullName> GetItemProperties 메서드 호출의 [ITypedList.GetItemProperties (PropertyDescriptor\\[\\])](assetId:///M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])?qualifyHint=True&autoUpgrade=True) 기본 데이터 원본 개체의 메서드. 경우는 <xref:System.Web.UI.WebControls.ListViewPagedDataSource.DataSource%2A>속성은 `null` 않거나 구현 하지 않는 <xref:System.ComponentModel.ITypedList?displayProperty=fullName>인터페이스 `null` 반환 됩니다.</xref:System.ComponentModel.ITypedList?displayProperty=fullName> </xref:System.Web.UI.WebControls.ListViewPagedDataSource.DataSource%2A>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "배열을 <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> 바인딩 가능한 컬렉션에서 찾을 개체입니다. 이 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> 데이터에 바인딩하는 데 사용 되는 속성을 나타내는 개체입니다."
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.GetItemProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])
  id: GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: GetListName(PropertyDescriptor[])
  nameWithType: ListViewPagedDataSource.GetListName(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.GetListName(PropertyDescriptor[])
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "목록의 이름을 반환합니다. 이 메서드는이 클래스에는 적용 되지 않습니다."
  remarks: "이 메서드는 <xref:System.ComponentModel.ITypedList?displayProperty=fullName>인터페이스 및이 클래스에 적용 되지 않습니다</xref:System.ComponentModel.ITypedList?displayProperty=fullName> 에서 상속 반환 하도록 구현 되었음을 <xref:System.String.Empty?displayProperty=fullName>모든 경우에 대 한.</xref:System.String.Empty?displayProperty=fullName> GetListName 방법에 대 한 자세한 내용은 <xref:System.ComponentModel.ITypedList.GetListName%2A?displayProperty=fullName>.</xref:System.ComponentModel.ITypedList.GetListName%2A?displayProperty=fullName> 을 참조 하십시오."
  syntax:
    content: public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "배열을 <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> 이 목록 이름에 대해 반환 되는 개체입니다."
    return:
      type: System.String
      description: "모든 경우에에서는 빈 문자열입니다."
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.GetListName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ListViewPagedDataSource.IsReadOnly
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.IsReadOnly
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.ListViewPagedDataSource&quot;> </xref> 개체가 읽기 전용입니다."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>모든 경우"
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.IsServerPagingEnabled
  id: IsServerPagingEnabled
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: IsServerPagingEnabled
  nameWithType: ListViewPagedDataSource.IsServerPagingEnabled
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.IsServerPagingEnabled
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "서버 기반 페이징이 사용 되는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public bool IsServerPagingEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>서버 기반 페이징이 사용 하 여 지정 되는 경우는 <xref:System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging*>속성, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging*>"
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.IsServerPagingEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ListViewPagedDataSource.IsSynchronized
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.IsSynchronized
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "(스레드로부터 안전한 지) 데이터 소스에 대 한 액세스가 동기화 되어 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "이 속성에서 파생 되는 <xref:System.Collections.ICollection?displayProperty=fullName>인터페이스를 항상 반환 하도록 재정의 `false` 를이 클래스가 스레드로부터 안전 하지 않음을 나타냅니다.</xref:System.Collections.ICollection?displayProperty=fullName>       IsSynchronized 속성에 대 한 자세한 내용은 참조는 <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>의 속성은 <xref:System.Collections.ICollection?displayProperty=fullName>인터페이스.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>모든 경우"
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows
  id: MaximumRows
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: MaximumRows
  nameWithType: ListViewPagedDataSource.MaximumRows
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "단일 페이지에 표시할 항목의 최대 수를 가져오거나 설정 합니다."
  syntax:
    content: public int MaximumRows { get; set; }
    return:
      type: System.Int32
      description: "단일 페이지에 표시할 항목의 최대 수입니다."
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex
  id: StartRowIndex
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: StartRowIndex
  nameWithType: ListViewPagedDataSource.StartRowIndex
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "페이지에 표시 되는 첫 번째 레코드의 인덱스를 가져오거나 설정 합니다."
  syntax:
    content: public int StartRowIndex { get; set; }
    return:
      type: System.Int32
      description: "페이지에 표시 되는 첫 번째 레코드의 인덱스입니다."
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ListViewPagedDataSource.SyncRoot
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.SyncRoot
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "컬렉션에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다."
  remarks: "이 구현에서 반환 되는 개체는 <xref:System.Web.UI.WebControls.ListViewPagedDataSource>개체 자체입니다.</xref:System.Web.UI.WebControls.ListViewPagedDataSource>       SyncRoot 속성에 대 한 자세한 내용은 참조는 <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>의 속성은 <xref:System.Collections.ICollection?displayProperty=fullName>인터페이스.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "컬렉션에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체입니다."
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount
  id: TotalRowCount
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  langs:
  - csharp
  name: TotalRowCount
  nameWithType: ListViewPagedDataSource.TotalRowCount
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "서버 기반 페이징이 사용 하는 경우 데이터 원본에 총 항목 수를 가져오거나 설정 합니다."
  syntax:
    content: public int TotalRowCount { get; set; }
    return:
      type: System.Int32
      description: "서버 기반 페이징이 사용 하는 경우 데이터 원본에 있는 항목의 총 수입니다."
  overload: System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.#ctor
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: ListViewPagedDataSource()
  nameWithType: ListViewPagedDataSource.ListViewPagedDataSource()
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.ListViewPagedDataSource()
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: AllowServerPaging
  nameWithType: ListViewPagedDataSource.AllowServerPaging
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: ListViewPagedDataSource.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.Count
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: Count
  nameWithType: ListViewPagedDataSource.Count
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.Count
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.DataSource
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: DataSource
  nameWithType: ListViewPagedDataSource.DataSource
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.DataSource
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: DataSourceCount
  nameWithType: ListViewPagedDataSource.DataSourceCount
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.GetEnumerator
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: GetEnumerator()
  nameWithType: ListViewPagedDataSource.GetEnumerator()
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: GetItemProperties(PropertyDescriptor[])
  nameWithType: ListViewPagedDataSource.GetItemProperties(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.GetItemProperties(PropertyDescriptor[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.PropertyDescriptor[]
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor[]
  spec.csharp:
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: PropertyDescriptor[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: GetListName(PropertyDescriptor[])
  nameWithType: ListViewPagedDataSource.GetListName(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.GetListName(PropertyDescriptor[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.IsReadOnly
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: IsReadOnly
  nameWithType: ListViewPagedDataSource.IsReadOnly
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.IsReadOnly
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.IsServerPagingEnabled
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: IsServerPagingEnabled
  nameWithType: ListViewPagedDataSource.IsServerPagingEnabled
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.IsServerPagingEnabled
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.IsSynchronized
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: IsSynchronized
  nameWithType: ListViewPagedDataSource.IsSynchronized
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.IsSynchronized
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: MaximumRows
  nameWithType: ListViewPagedDataSource.MaximumRows
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: StartRowIndex
  nameWithType: ListViewPagedDataSource.StartRowIndex
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.SyncRoot
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: SyncRoot
  nameWithType: ListViewPagedDataSource.SyncRoot
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.SyncRoot
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: TotalRowCount
  nameWithType: ListViewPagedDataSource.TotalRowCount
  fullName: System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.#ctor*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: ListViewPagedDataSource
  nameWithType: ListViewPagedDataSource.ListViewPagedDataSource
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: AllowServerPaging
  nameWithType: ListViewPagedDataSource.AllowServerPaging
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.CopyTo*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: CopyTo
  nameWithType: ListViewPagedDataSource.CopyTo
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.Count*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: Count
  nameWithType: ListViewPagedDataSource.Count
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.DataSource*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: DataSource
  nameWithType: ListViewPagedDataSource.DataSource
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: DataSourceCount
  nameWithType: ListViewPagedDataSource.DataSourceCount
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.GetEnumerator*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: GetEnumerator
  nameWithType: ListViewPagedDataSource.GetEnumerator
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.GetItemProperties*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: GetItemProperties
  nameWithType: ListViewPagedDataSource.GetItemProperties
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.GetListName*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: GetListName
  nameWithType: ListViewPagedDataSource.GetListName
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.IsReadOnly*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: IsReadOnly
  nameWithType: ListViewPagedDataSource.IsReadOnly
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.IsServerPagingEnabled*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: IsServerPagingEnabled
  nameWithType: ListViewPagedDataSource.IsServerPagingEnabled
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.IsSynchronized*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: IsSynchronized
  nameWithType: ListViewPagedDataSource.IsSynchronized
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: MaximumRows
  nameWithType: ListViewPagedDataSource.MaximumRows
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: StartRowIndex
  nameWithType: ListViewPagedDataSource.StartRowIndex
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.SyncRoot*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: SyncRoot
  nameWithType: ListViewPagedDataSource.SyncRoot
- uid: System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount*
  parent: System.Web.UI.WebControls.ListViewPagedDataSource
  isExternal: false
  name: TotalRowCount
  nameWithType: ListViewPagedDataSource.TotalRowCount
