### YamlMime:ManagedReference
items:
- uid: System.Windows.Navigation.CustomContentState
  id: CustomContentState
  children:
  - System.Windows.Navigation.CustomContentState.#ctor
  - System.Windows.Navigation.CustomContentState.JournalEntryName
  - System.Windows.Navigation.CustomContentState.Replay(System.Windows.Navigation.NavigationService,System.Windows.Navigation.NavigationMode)
  langs:
  - csharp
  name: CustomContentState
  nameWithType: CustomContentState
  fullName: System.Windows.Navigation.CustomContentState
  type: Class
  summary: "CustomContentState 이후의 각 탐색에 대 한 원본 콘텐츠를 다시 로드 하지 않고 다양 한 원본 콘텐츠는 단일 상태를 통해 탐색 하는 기능을 수 있습니다."
  remarks: "기본적으로 <xref:System.Windows.Navigation.NavigationService>탐색 기록의 콘텐츠 개체의 인스턴스를 저장 하지 않습니다.</xref:System.Windows.Navigation.NavigationService> 대신, <xref:System.Windows.Navigation.NavigationService>탐색 기록을 사용 하 여 탐색할 될 때마다 콘텐츠 개체의 새 인스턴스를 만듭니다.</xref:System.Windows.Navigation.NavigationService> 이 문제는 많은 수 및 대규모 콘텐츠를 탐색할 때 과도 한 메모리 소비를 방지 하도록 설계 되었습니다. 따라서 콘텐츠 상태는 다음 탐색에서 저장 되지 않습니다. 그러나 [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] 콘텐츠의 부분에 대 한 탐색 기록 항목와 사용자 지정 상태 정보와 연결 하는 기능을 제공 합니다.       탐색 기록 항목에 연관 된 사용자 지정 상태 CustomContentState에서 파생 된 클래스 여야 합니다. 탐색 기록 항목 CustomContentState 개체는 다음 기술 중 하나를 사용 하 여 연결: 호출- **AddBackEntry**:- <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A?displayProperty=fullName>- <xref:System.Windows.Navigation.NavigationWindow.AddBackEntry%2A?displayProperty=fullName>- <xref:System.Windows.Controls.Frame.AddBackEntry%2A?displayProperty=fullName>.</xref:System.Windows.Controls.Frame.AddBackEntry%2A?displayProperty=fullName> </xref:System.Windows.Navigation.NavigationWindow.AddBackEntry%2A?displayProperty=fullName> </xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A?displayProperty=fullName>      -설정 <xref:System.Windows.Navigation.NavigatingCancelEventArgs.Content%2A?displayProperty=fullName>다음 이벤트 중 하나가 발생 하는 경우:- <xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=fullName>- <xref:System.Windows.Navigation.NavigationWindow.Navigating?displayProperty=fullName>- <xref:System.Windows.Controls.Frame.Navigating?displayProperty=fullName>- <xref:System.Windows.Navigation.NavigationWindow.Navigating?displayProperty=fullName>- <xref:System.Windows.Navigation.IProvideCustomContentState>와 연결 되도록 사용자 지정 상태가 하는 클래스를</xref:System.Windows.Navigation.IProvideCustomContentState> 구현 하 여</xref:System.Windows.Navigation.NavigationWindow.Navigating?displayProperty=fullName> </xref:System.Windows.Controls.Frame.Navigating?displayProperty=fullName> </xref:System.Windows.Navigation.NavigationWindow.Navigating?displayProperty=fullName> </xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=fullName> </xref:System.Windows.Navigation.NavigatingCancelEventArgs.Content%2A?displayProperty=fullName>      > [!NOTE] > 호출 하는 경우는 **AddBackEntry** 처리 해야 합니다는 **Navigating** 이벤트 또는 <xref:System.Windows.Navigation.IProvideCustomContentState>.</xref:System.Windows.Navigation.IProvideCustomContentState> 구현       탐색 기록 항목을 탐색할 때 [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] 를 사용자 지정 CustomContentState 개체 것과 연관 되어 있는지 확인 합니다. 호출 하는 경우 <xref:System.Windows.Navigation.CustomContentState.Replay%2A>이전 탐색에서 결과 상태를 적용 하려면 사용자 지정 CustomContentState 개체 수 있도록 합니다.</xref:System.Windows.Navigation.CustomContentState.Replay%2A>       사용자 지정 CustomContentState 클래스에서 재정의할 수 <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A>CustomContentState 개체가 연결 되는 탐색 기록 항목에 대 한 표시 되는 이름을 변경할 수 있습니다.</xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A> 값은 <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A>반환은 탐색에 노출 [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] 다양 한 탐색기의 ([!INCLUDE[TLA2#tla_ie7](~/add/includes/tla2sharptla-ie7-md.md)], <xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow> </xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A>       CustomContentState에서 파생 되는 클래스 직렬화 해야를 최소한으로 보강 되어야 합니다 즉 <xref:System.SerializableAttribute>, 필요에 따라 <xref:System.Runtime.Serialization.ISerializable>.</xref:System.Runtime.Serialization.ISerializable> 를 구현 하 고</xref:System.SerializableAttribute>      > [!IMPORTANT] > 모두 저장할 수 없습니다 콘텐츠 사용자 지정 상태에서 정보를 저장 하는 경우를 상태를 기억 하는 경우 페이지의 인스턴스에 대 한 참조가 콘텐츠를 메모리에 유지 하지 않음. 이렇게 하면 [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] 에서 기본 탐색 기록 동작의 목적은 페이지 인스턴스와 저해를 해제 합니다. 이렇게 해야 하는 경우를 사용해 <xref:System.Windows.Controls.Page.KeepAlive%2A>대신.</xref:System.Windows.Controls.Page.KeepAlive%2A>"
  example:
  - "The following is an example of a CustomContentState implementation that overrides <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A>.  \n  \n [!code-cs[CustomContentStateSnippets#MyCustomContentStateCODE](~/add/codesnippet/csharp/CustomContentStateSnippets.CSharp/MyCustomContentState.cs#mycustomcontentstatecode)]\n [!code-vb[CustomContentStateSnippets#MyCustomContentStateCODE](~/add/codesnippet/visualbasic/customcontentstatesnippets/mycustomcontentstate.vb#mycustomcontentstatecode)]"
  syntax:
    content: public abstract class CustomContentState
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Navigation.CustomContentState.#ctor
  id: '#ctor'
  parent: System.Windows.Navigation.CustomContentState
  langs:
  - csharp
  name: CustomContentState()
  nameWithType: CustomContentState.CustomContentState()
  fullName: System.Windows.Navigation.CustomContentState.CustomContentState()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Navigation.CustomContentState&quot;> </xref> 클래스입니다."
  syntax:
    content: protected CustomContentState ();
    parameters: []
  overload: System.Windows.Navigation.CustomContentState.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.CustomContentState.JournalEntryName
  id: JournalEntryName
  parent: System.Windows.Navigation.CustomContentState
  langs:
  - csharp
  name: JournalEntryName
  nameWithType: CustomContentState.JournalEntryName
  fullName: System.Windows.Navigation.CustomContentState.JournalEntryName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "탐색 기록에 저장 된 콘텐츠에 대 한 이름입니다. 표시 값 JournalEntryName <xref href=&quot;System.Windows.Navigation.NavigationWindow&quot;> </xref>, <xref href=&quot;System.Windows.Controls.Frame&quot;> </xref>, 및 [!INCLUDE[TLA#tla_ie7](~/add/includes/tlasharptla-ie7-md.md)] 탐색 [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]합니다."
  remarks: "뒤로 / 앞으로 탐색 기록에 저장 된 항목 뒤로 및 앞으로 드롭다운 탐색 모음에 탐색 단추에서 일반적으로 사용할 수 있는 [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] 포함 하 여 호스트 탐색기의 <xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>, 또는 [!INCLUDE[TLA#tla_ie7](~/add/includes/tlasharptla-ie7-md.md)].</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>       JournalEntryName는는 <xref:System.String>탐색 기록 드롭다운 목록에에서 표시 되는 값입니다.</xref:System.String>       JournalEntryName을 재정의할 수 필요는 없습니다. 우선 순위에 따라에서 탐색 기록 항목 이름을 자동으로 생성 하는 다음과 같은 데이터의 사용 되는 그렇지 않은 경우:- <xref:System.Windows.Controls.Page.Title%2A>.</xref:System.Windows.Controls.Page.Title%2A>      - <xref:System.Windows.Controls.Page.WindowTitle%2A>및 [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] 현재 페이지-는 [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] 현재 페이지에 대 한.</xref:System.Windows.Controls.Page.WindowTitle%2A>"
  syntax:
    content: public virtual string JournalEntryName { get; }
    return:
      type: System.String
      description: "<xref:System.String>탐색 기록에 저장 된 콘텐츠의 이름이.</xref:System.String>"
  overload: System.Windows.Navigation.CustomContentState.JournalEntryName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.CustomContentState.Replay(System.Windows.Navigation.NavigationService,System.Windows.Navigation.NavigationMode)
  id: Replay(System.Windows.Navigation.NavigationService,System.Windows.Navigation.NavigationMode)
  parent: System.Windows.Navigation.CustomContentState
  langs:
  - csharp
  name: Replay(NavigationService,NavigationMode)
  nameWithType: CustomContentState.Replay(NavigationService,NavigationMode)
  fullName: System.Windows.Navigation.CustomContentState.Replay(NavigationService,NavigationMode)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "탐색이 발생할 때 상태 콘텐츠를 다시 적용 하기 위해 호출 합니다."
  remarks: "재생 때 호출 항목에 연결 된 탐색 기록의 <xref:System.Windows.Navigation.CustomContentState>개체를 탐색 하는.</xref:System.Windows.Navigation.CustomContentState>       Abstract에서 파생 된 경우 <xref:System.Windows.Navigation.CustomContentState>재정의 구현을 기본 재생 메서드 호출 되지만 재생 클래스 재정의 해야 합니다.</xref:System.Windows.Navigation.CustomContentState>"
  syntax:
    content: public abstract void Replay (System.Windows.Navigation.NavigationService navigationService, System.Windows.Navigation.NavigationMode mode);
    parameters:
    - id: navigationService
      type: System.Windows.Navigation.NavigationService
      description: "<xref href=&quot;System.Windows.Navigation.NavigationService&quot;> </xref> 이 콘텐츠를 담당 하는 탐색기가 소유한 <xref href=&quot;System.Windows.Navigation.CustomContentState&quot;> </xref> 적용 되 고 있습니다."
    - id: mode
      type: System.Windows.Navigation.NavigationMode
      description: "A <xref href=&quot;System.Windows.Navigation.NavigationMode&quot;> </xref> 지정 하는 방법을 콘텐츠를 <xref href=&quot;System.Windows.Navigation.CustomContentState&quot;> </xref> 가 적용 되 고 탐색 합니다."
  overload: System.Windows.Navigation.CustomContentState.Replay*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Navigation.CustomContentState.#ctor
  parent: System.Windows.Navigation.CustomContentState
  isExternal: false
  name: CustomContentState()
  nameWithType: CustomContentState.CustomContentState()
  fullName: System.Windows.Navigation.CustomContentState.CustomContentState()
- uid: System.Windows.Navigation.CustomContentState.JournalEntryName
  parent: System.Windows.Navigation.CustomContentState
  isExternal: false
  name: JournalEntryName
  nameWithType: CustomContentState.JournalEntryName
  fullName: System.Windows.Navigation.CustomContentState.JournalEntryName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Navigation.CustomContentState.Replay(System.Windows.Navigation.NavigationService,System.Windows.Navigation.NavigationMode)
  parent: System.Windows.Navigation.CustomContentState
  isExternal: false
  name: Replay(NavigationService,NavigationMode)
  nameWithType: CustomContentState.Replay(NavigationService,NavigationMode)
  fullName: System.Windows.Navigation.CustomContentState.Replay(NavigationService,NavigationMode)
- uid: System.Windows.Navigation.NavigationService
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigationService
  nameWithType: NavigationService
  fullName: System.Windows.Navigation.NavigationService
- uid: System.Windows.Navigation.NavigationMode
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigationMode
  nameWithType: NavigationMode
  fullName: System.Windows.Navigation.NavigationMode
- uid: System.Windows.Navigation.CustomContentState.#ctor*
  parent: System.Windows.Navigation.CustomContentState
  isExternal: false
  name: CustomContentState
  nameWithType: CustomContentState.CustomContentState
- uid: System.Windows.Navigation.CustomContentState.JournalEntryName*
  parent: System.Windows.Navigation.CustomContentState
  isExternal: false
  name: JournalEntryName
  nameWithType: CustomContentState.JournalEntryName
- uid: System.Windows.Navigation.CustomContentState.Replay*
  parent: System.Windows.Navigation.CustomContentState
  isExternal: false
  name: Replay
  nameWithType: CustomContentState.Replay
