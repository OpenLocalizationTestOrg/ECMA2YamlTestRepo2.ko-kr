### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.TouchFrameEventArgs
  id: TouchFrameEventArgs
  children:
  - System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)
  - System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)
  - System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp
  - System.Windows.Input.TouchFrameEventArgs.Timestamp
  langs:
  - csharp
  name: TouchFrameEventArgs
  nameWithType: TouchFrameEventArgs
  fullName: System.Windows.Input.TouchFrameEventArgs
  type: Class
  summary: "에 대 한 데이터를 제공는 <xref href=&quot;System.Windows.Input.Touch.FrameReported&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Windows.Input.Touch.FrameReported>이벤트는 [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] Silverlight와의 호환성을 지원 하기 위해.</xref:System.Windows.Input.Touch.FrameReported> Silverlight와의 호환성을 확인 해야 하는 경우 사용 하 여 터치 이벤트와 같은 <xref:System.Windows.UIElement.TouchDown>및 <xref:System.Windows.UIElement.TouchMove>의 <xref:System.Windows.UIElement>, <xref:System.Windows.UIElement3D>, 또는 <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement> </xref:System.Windows.UIElement3D> </xref:System.Windows.UIElement> </xref:System.Windows.UIElement.TouchMove> </xref:System.Windows.UIElement.TouchDown>       TouchFrameEventArgs를 사용 하 여 가져올는 <xref:System.Windows.Input.TouchPoint>터치 이벤트와 관련 된 된 값.</xref:System.Windows.Input.TouchPoint> <xref:System.Windows.Input.TouchPoint>, 얻을 수 있습니다는 <xref:System.Windows.Input.TouchPoint.Position%2A>터치의 확인 여부는 <xref:System.Windows.Input.TouchAction>가 <xref:System.Windows.Input.TouchAction>, <xref:System.Windows.Input.TouchAction>, 또는 <xref:System.Windows.Input.TouchAction>작업.</xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchPoint.Position%2A> </xref:System.Windows.Input.TouchPoint> <xref:System.Windows.Input.TouchPoint> <xref:System.Windows.Input.TouchDevice>.</xref:System.Windows.Input.TouchDevice> 얻으려고</xref:System.Windows.Input.TouchPoint> 할 수도 있습니다. <xref:System.Windows.Input.TouchDevice>, 장치를 확인할 수 있습니다 <xref:System.Windows.Input.TouchDevice.Id%2A>있는 위치의 요소에 대 한 정보를 얻을.</xref:System.Windows.Input.TouchDevice.Id%2A> </xref:System.Windows.Input.TouchDevice>"
  example:
  - "The following example handles the <xref:System.Windows.Input.Touch.FrameReported> event and accesses the touch data in the TouchFrameEventArgs. When a touch is pressed on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>. When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released. When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked. If the move came from the first touch, its location is recorded. If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.  \n  \n This example is part of a larger example that is available in the <xref:System.Windows.Input.Touch> class overview.  \n  \n [!code-vb[TouchFrameSample#110](~/add/codesnippet/visualbasic/wpftouchframesample/mainwindow.xaml.vb#110)]\n [!code-cs[TouchFrameSample#110](~/add/codesnippet/csharp/wpftouchframesample/mainwindow.xaml.cs#110)]"
  syntax:
    content: 'public sealed class TouchFrameEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)
  id: GetPrimaryTouchPoint(System.Windows.IInputElement)
  parent: System.Windows.Input.TouchFrameEventArgs
  langs:
  - csharp
  name: GetPrimaryTouchPoint(IInputElement)
  nameWithType: TouchFrameEventArgs.GetPrimaryTouchPoint(IInputElement)
  fullName: System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "지정된 된 요소를 기준으로 기본 터치 장치의 현재 터치 포인트를 반환 합니다."
  remarks: "활성 집합에 touch 장치, 첫 번째 장치 <xref:System.Windows.Input.TouchDevice.Activated>는 기본 터치 장치.</xref:System.Windows.Input.TouchDevice.Activated> 예를 들어 두 손가락 화면을 터치 하는 경우 아래에 있는 첫 번째 손가락 기본 터치 장치도 나타납니다. 두 번째 손가락은 계속 하는 동안 첫 번째 손가락 리프트 된 경우에 기본 터치 장치는 `null`합니다."
  example:
  - "The following code processes the touch points that are retrieved from the <xref:System.Windows.Input.TouchFrameEventArgs>. When a touch is pressed on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>. When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released. When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked. If the <xref:System.Windows.Input.TouchDevice.Id%2A> matches the <xref:System.Windows.Input.TouchDevice.Id%2A> of the primary touch point, which indicates the first touch, its location is recorded. If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.  \n  \n This example is part of a larger example that is available in the <xref:System.Windows.Input.Touch> class overview.  \n  \n [!code-vb[TouchFrameSample#120](~/add/codesnippet/visualbasic/wpftouchframesample/mainwindow.xaml.vb#120)]\n [!code-cs[TouchFrameSample#120](~/add/codesnippet/csharp/wpftouchframesample/mainwindow.xaml.cs#120)]"
  syntax:
    content: public System.Windows.Input.TouchPoint GetPrimaryTouchPoint (System.Windows.IInputElement relativeTo);
    parameters:
    - id: relativeTo
      type: System.Windows.IInputElement
      description: "좌표 공간을 정의 하는 요소입니다. WPF 절대 좌표를 사용 하려면 지정 `relativeTo` 으로 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Windows.Input.TouchPoint
      description: "주의 현재 위치 <xref href=&quot;System.Windows.Input.TouchDevice&quot;> </xref> ; 지정 된 요소를 기준으로 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 경우 주 <xref href=&quot;System.Windows.Input.TouchDevice&quot;> </xref> 아니기 때문입니다."
  overload: System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)
  id: GetTouchPoints(System.Windows.IInputElement)
  parent: System.Windows.Input.TouchFrameEventArgs
  langs:
  - csharp
  name: GetTouchPoints(IInputElement)
  nameWithType: TouchFrameEventArgs.GetTouchPoints(IInputElement)
  fullName: System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "지정 된 요소를 기준으로 각 활성 터치 장치에 대 한 현재 터치 포인트를 포함 하는 컬렉션을 반환 합니다."
  remarks: ''
  example:
  - "The following code processes the touch points retrieved from the <xref:System.Windows.Input.TouchFrameEventArgs>. When a touch is pressed on the canvas, the <xref:System.Windows.Input.TouchDevice> is captured to the canvas. When the touch is raised, the <xref:System.Windows.Input.TouchDevice> is released. When a touch moves across the canvas, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked. If the <xref:System.Windows.Input.TouchDevice.Id%2A> matches the <xref:System.Windows.Input.TouchDevice.Id%2A> of the primary touch point, which indicates the first touch, its location is recorded. If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.  \n  \n This example is part of a larger example that is available in the <xref:System.Windows.Input.Touch> class overview.  \n  \n [!code-vb[TouchFrameSample#120](~/add/codesnippet/visualbasic/wpftouchframesample/mainwindow.xaml.vb#120)]\n [!code-cs[TouchFrameSample#120](~/add/codesnippet/csharp/wpftouchframesample/mainwindow.xaml.cs#120)]"
  syntax:
    content: public System.Windows.Input.TouchPointCollection GetTouchPoints (System.Windows.IInputElement relativeTo);
    parameters:
    - id: relativeTo
      type: System.Windows.IInputElement
      description: "좌표 공간을 정의 하는 요소입니다. WPF 절대 좌표를 사용 하려면 지정 `relativeTo` 으로 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Windows.Input.TouchPointCollection
      description: "현재 포함 하는 컬렉션 <xref href=&quot;System.Windows.Input.TouchPoint&quot;> </xref> 각 active <xref href=&quot;System.Windows.Input.TouchDevice&quot;> </xref>합니다."
  overload: System.Windows.Input.TouchFrameEventArgs.GetTouchPoints*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp
  id: SuspendMousePromotionUntilTouchUp
  parent: System.Windows.Input.TouchFrameEventArgs
  langs:
  - csharp
  name: SuspendMousePromotionUntilTouchUp()
  nameWithType: TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp()
  fullName: System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "이 멤버는 구현 되지 않았습니다."
  remarks: "이 메서드는 Silverlight 호환성을 위해 제공 됩니다. 장치 구현 차이 때문에 WPF 구현 되지 않습니다."
  syntax:
    content: public void SuspendMousePromotionUntilTouchUp ();
    parameters: []
  overload: System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.TouchFrameEventArgs.Timestamp
  id: Timestamp
  parent: System.Windows.Input.TouchFrameEventArgs
  langs:
  - csharp
  name: Timestamp
  nameWithType: TouchFrameEventArgs.Timestamp
  fullName: System.Windows.Input.TouchFrameEventArgs.Timestamp
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "이 이벤트에 대 한 타임 스탬프를 가져옵니다."
  syntax:
    content: public int Timestamp { get; }
    return:
      type: System.Int32
      description: "이 이벤트에 대 한 타임 스탬프입니다."
  overload: System.Windows.Input.TouchFrameEventArgs.Timestamp*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)
  parent: System.Windows.Input.TouchFrameEventArgs
  isExternal: false
  name: GetPrimaryTouchPoint(IInputElement)
  nameWithType: TouchFrameEventArgs.GetPrimaryTouchPoint(IInputElement)
  fullName: System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(IInputElement)
- uid: System.Windows.Input.TouchPoint
  parent: System.Windows.Input
  isExternal: false
  name: TouchPoint
  nameWithType: TouchPoint
  fullName: System.Windows.Input.TouchPoint
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)
  parent: System.Windows.Input.TouchFrameEventArgs
  isExternal: false
  name: GetTouchPoints(IInputElement)
  nameWithType: TouchFrameEventArgs.GetTouchPoints(IInputElement)
  fullName: System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(IInputElement)
- uid: System.Windows.Input.TouchPointCollection
  parent: System.Windows.Input
  isExternal: false
  name: TouchPointCollection
  nameWithType: TouchPointCollection
  fullName: System.Windows.Input.TouchPointCollection
- uid: System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp
  parent: System.Windows.Input.TouchFrameEventArgs
  isExternal: false
  name: SuspendMousePromotionUntilTouchUp()
  nameWithType: TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp()
  fullName: System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp()
- uid: System.Windows.Input.TouchFrameEventArgs.Timestamp
  parent: System.Windows.Input.TouchFrameEventArgs
  isExternal: false
  name: Timestamp
  nameWithType: TouchFrameEventArgs.Timestamp
  fullName: System.Windows.Input.TouchFrameEventArgs.Timestamp
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint*
  parent: System.Windows.Input.TouchFrameEventArgs
  isExternal: false
  name: GetPrimaryTouchPoint
  nameWithType: TouchFrameEventArgs.GetPrimaryTouchPoint
- uid: System.Windows.Input.TouchFrameEventArgs.GetTouchPoints*
  parent: System.Windows.Input.TouchFrameEventArgs
  isExternal: false
  name: GetTouchPoints
  nameWithType: TouchFrameEventArgs.GetTouchPoints
- uid: System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp*
  parent: System.Windows.Input.TouchFrameEventArgs
  isExternal: false
  name: SuspendMousePromotionUntilTouchUp
  nameWithType: TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp
- uid: System.Windows.Input.TouchFrameEventArgs.Timestamp*
  parent: System.Windows.Input.TouchFrameEventArgs
  isExternal: false
  name: Timestamp
  nameWithType: TouchFrameEventArgs.Timestamp
