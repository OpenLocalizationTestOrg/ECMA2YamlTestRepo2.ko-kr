### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  id: X509SecurityTokenAuthenticator
  children:
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  name: X509SecurityTokenAuthenticator
  nameWithType: X509SecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  type: Class
  summary: "인증 된 <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref>합니다."
  remarks: "X509SecurityTokenAuthenticator 클래스를 사용 하 여 인증 <xref:System.IdentityModel.Tokens.X509SecurityToken>보안 토큰입니다.</xref:System.IdentityModel.Tokens.X509SecurityToken>"
  syntax:
    content: 'public class X509SecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenAuthenticator'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator
  implements: []
  inheritedMembers:
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: X509SecurityTokenAuthenticator()
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&quot;> </xref> 클래스입니다."
  remarks: "경우는 <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>메서드는 토큰 인증, X.509 인증서는 Windows id에 매핑되지 않습니다 및 인증서가 인증서 체인을 사용 하 여 확인 합니다.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>"
  syntax:
    content: public X509SecurityTokenAuthenticator ();
    parameters: []
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)
  id: '#ctor(System.IdentityModel.Selectors.X509CertificateValidator)'
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: X509SecurityTokenAuthenticator(X509CertificateValidator)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&quot;> </xref> 클래스를 지정 된 인증서 유효성 검사기를 사용 합니다."
  remarks: "<xref:System.IdentityModel.Selectors.X509CertificateValidator>클래스 집합을 제공 미리 정의 된 인증서의 유효성 검사 모델 등의 <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A>속성.</xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator> 이 유효성 검사 모델에 전달 될 수는 `validator` 매개 변수입니다. 클래스를 파생 하는 응용 프로그램에 사용자 지정 유효성 검사 메서드가 필요한 경우 <xref:System.IdentityModel.Selectors.X509CertificateValidator>재정의 <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>메서드.</xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> </xref:System.IdentityModel.Selectors.X509CertificateValidator> <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>메서드는 <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>메서드.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>       기본적으로는 <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator>X.509 인증서를 Windows id에 매핑되지 않는.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator>"
  syntax:
    content: public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator);
    parameters:
    - id: validator
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "A <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref> 는 인증서가 유효한 지 확인 하 합니다."
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)
  id: '#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)'
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&quot;> </xref> 클래스 지정된 인증서 유효성 검사 메서드를 사용 하 고 인증서 id가 Windows id에 매핑되는지 여부를 나타냅니다."
  remarks: "<xref:System.IdentityModel.Selectors.X509CertificateValidator>클래스 집합을 제공 미리 정의 된 인증서의 유효성 검사 모델 등의 <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A>속성.</xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator> 이 유효성 검사 모델에 전달 될 수는 `validator` 매개 변수입니다. 클래스를 파생 하는 응용 프로그램에 사용자 지정 유효성 검사 메서드가 필요한 경우 <xref:System.IdentityModel.Selectors.X509CertificateValidator>재정의 <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>메서드.</xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> </xref:System.IdentityModel.Selectors.X509CertificateValidator> <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>메서드는 <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>메서드.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>       때는 <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>메서드는 토큰을 인증 및 `mapToWindows` 은 `true`, X.509 인증서는 Windows 계정에 매핑됩니다 및 클레임이에 추가 되는 <xref:System.IdentityModel.Policy.EvaluationContext>사용자가 속한 Windows 그룹과.</xref:System.IdentityModel.Policy.EvaluationContext> </xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> 보안 토큰 형식에 따라 달라 집니다 X.509 인증서를 Windows 계정에 매핑되지 않는 어떻게:-이 보안 토큰이 형식이 <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>, X.509 인증서를 사용 하 여 매핑된는 <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A>속성.</xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A> </xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>      보안 토큰이 형식이- `X509SecurityToken`, X.509 인증서는 사용자 계정 이름 (UPN)을 사용 하 여 Windows 계정에 매핑됩니다."
  syntax:
    content: public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows);
    parameters:
    - id: validator
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "A <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref> 는 인증서가 유효한 지 확인 하 합니다."
    - id: mapToWindows
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>id에 매핑하려면의 인증서를 Windows id입니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)
  id: '#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)'
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&quot;> </xref> 클래스 지정된 인증서 유효성 검사 메서드를 사용 하 고 인증서의 id가 Windows id 및 사용자가 속한 Windows 그룹에 매핑되는지 여부를 나타냅니다."
  remarks: "전달 `false` 에 `includeWindowsGroups` Windows 그룹 정보가 될 때 매개 변수는 성능을 향상 시킬 필요가 없습니다.       <xref:System.IdentityModel.Selectors.X509CertificateValidator>클래스에는 여러 정적 속성이 같은 <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A>에 전달 될 수 있는 속성은 `validator` 매개 변수.</xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator> 이러한 속성 X.509 인증서에 대 한 일반적인 유효성 검사 메서드를 제공합니다. 클래스를 파생 하는 사용자 지정 유효성 검사 메서드가 필요한 경우, <xref:System.IdentityModel.Selectors.X509CertificateValidator>재정의 <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>메서드.</xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> </xref:System.IdentityModel.Selectors.X509CertificateValidator> <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>메서드는 <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>메서드.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>       때 `true` 에 전달 되는 `mapToWindows` 매개 변수를 X.509 인증서는 Windows 계정에 매핑되고 관련 클레임에 추가 됩니다는 <xref:System.IdentityModel.Policy.EvaluationContext>, 사용자가 속한 Windows 그룹에 같은.</xref:System.IdentityModel.Policy.EvaluationContext> 보안 토큰이 형식이 때 <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>, <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A>속성은 토큰에 지정 된 id를 사용 하는; 그렇지 X.509 인증서는 X.509 인증서의 사용자 계정 이름 SubjectAltNames 확장을 기반으로 하는 Kerberos S4U 로그온을 사용 하 여 Windows id에 매핑됩니다.</xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A> </xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>"
  syntax:
    content: public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows, bool includeWindowsGroups);
    parameters:
    - id: validator
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "A <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref> 는 인증서가 유효한 지 확인 하 합니다."
    - id: mapToWindows
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>id에 매핑하려면의 인증서를 Windows id입니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: includeWindowsGroups
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Windows 그룹을 포함 하도록 사용자가 속한에 <xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets*>인증 프로세스 과정에서 생성 되지 않았으면, 속성 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets*>"
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: X509SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "이 보안 토큰 인증 자가 지정된 된 보안 토큰 유효성을 검사할 수 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "CanValidateTokenCore 메서드는 보안 토큰을 인증 하지 않습니다. 통해 수행 됩니다는 <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>메서드.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>"
  syntax:
    content: protected override bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 유효성을 검사 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>때 <code> token </code> 는 <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref> 보안 토큰 또는 클래스에서 파생 되는 <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  id: MapCertificateToWindowsAccount
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: MapCertificateToWindowsAccount
  nameWithType: X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Windows 계정에 X.509 인증서를 매핑할지 여부를 나타내는 값을 가져옵니다."
  remarks: "MapCertificateToWindowsAccount 속성은 생성자에만 설정할 수 있습니다.       전송 수준 SSL 또는 HTTPS 보안이 사용 되므로 기본 보안 채널 또는 인터넷 정보 서비스 (IIS)에서 매핑을 이미 제공한 경우 체인-유효성 검사 없이 매핑이 적용 됩니다. 그렇지 않으면 매핑을 수행 하기 전에 인증서 체인을 사용 하 여 인증서가 확인 및 인증서는 NT_AUTHORITY id에 연결 되어야 합니다. 에 정의 된 대로 CERT_CHAIN_POLICY_NT_AUTH에 해당 되는 사용 되는 체인 구조는 `CertVerifyCertificateChainPolicy` 함수 (참조는 [CertVerifyCertificateChainPolicy](http://go.microsoft.com/fwlink/?LinkId=83570) 암호화 SDK에는 함수). 이 문제는 Windows 계정에 인증서를 매핑하는 경우에 발생 합니다."
  syntax:
    content: public bool MapCertificateToWindowsAccount { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>X.509 인증서; Windows 계정에 매핑할 수 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateTokenCore(SecurityToken)
  nameWithType: X509SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "지정 된 보안 토큰을 인증 하 고 보안 토큰에 대 한 권한 부여 정책의 집합을 반환 합니다."
  remarks: "ValidateTokenCore 메서드를 재정의 하는 경우 다음이 지침을 따릅니다:-보안 토큰에 전달 하는 경우는 `token` 매개 변수 여야 throw 유효성을 검사는 <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>예외.</xref:System.IdentityModel.Tokens.SecurityTokenValidationException>      -이 응용 프로그램에 적용 권한 부여 정책이 인 경우는 빈 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.</xref:System.IdentityModel.Policy.IAuthorizationPolicy> 형식의</xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 반환       때 `null` 이 메서드에서 반환 되 [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] throw는 <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>예외.</xref:System.IdentityModel.Tokens.SecurityTokenValidationException>       ValidateTokenCore 메서드 호출의 <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>인증 하는 생성자에 지정 된 유효성 검사 메서드의 메서드는 `token` 매개 변수.</xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>"
  syntax:
    content: protected override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 유효성을 검사 합니다."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; 형식의 <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> 적용이 응용 프로그램에 대 한 권한 부여 정책의 집합이 들어 있는입니다."
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: System.IdentityModel.Selectors.SecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: X509SecurityTokenAuthenticator()
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator()
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: X509SecurityTokenAuthenticator(X509CertificateValidator)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator)
- uid: System.IdentityModel.Selectors.X509CertificateValidator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: X509CertificateValidator
  nameWithType: X509CertificateValidator
  fullName: System.IdentityModel.Selectors.X509CertificateValidator
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: X509SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: MapCertificateToWindowsAccount
  nameWithType: X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore(SecurityToken)
  nameWithType: X509SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: IAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: X509SecurityTokenAuthenticator
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore*
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore
  nameWithType: X509SecurityTokenAuthenticator.CanValidateTokenCore
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount*
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: MapCertificateToWindowsAccount
  nameWithType: X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore*
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore
  nameWithType: X509SecurityTokenAuthenticator.ValidateTokenCore
