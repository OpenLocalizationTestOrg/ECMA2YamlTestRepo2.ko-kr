### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaValidator
  id: XmlSchemaValidator
  children:
  - System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)
  - System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaValidator.EndValidation
  - System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes
  - System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles
  - System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)
  - System.Xml.Schema.XmlSchemaValidator.Initialize
  - System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)
  - System.Xml.Schema.XmlSchemaValidator.LineInfoProvider
  - System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.SourceUri
  - System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)
  - System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)
  - System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)
  - System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)
  - System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)
  - System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)
  - System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler
  - System.Xml.Schema.XmlSchemaValidator.ValidationEventSender
  - System.Xml.Schema.XmlSchemaValidator.XmlResolver
  langs:
  - csharp
  name: XmlSchemaValidator
  nameWithType: XmlSchemaValidator
  fullName: System.Xml.Schema.XmlSchemaValidator
  type: Class
  summary: "XML 스키마 정의 언어 (XSD) 스키마 유효성 검사 엔진을 나타냅니다. XmlSchemaValidator 클래스는 상속 될 수 없습니다."
  remarks: "> [!IMPORTANT]>-위치 또는 알 수 없거나 신뢰할 수 없는 원본에서 스키마를 사용 하지 마십시오. 이렇게 하면 코드의 보안을 손상 됩니다.   >-(인라인 스키마 포함)는 XML 스키마는 기본적으로 서비스 거부 공격;에 취약 신뢰할 수 없는 경우에는 사용 하지 않습니다.   >-스키마 유효성 검사 오류 메시지와 예외에는 정적 콘텐츠 모델이 나 스키마 파일에 대 한 URI 경로 대 한 중요 한 정보가 노출 될 수 있습니다. 신뢰할 수 없는 호출자에 게이 정보를 노출 하지 않도록 주의 하십시오.       XmlSchemaValidator 클래스에에서 유효성을 검사할 XML 스키마에 대해 XML 데이터 밀어넣기 기반 방식으로 있는 효과적인 고성능 메커니즘을 제공 합니다. 예를 들어 XmlSchemaValidator 클래스를 사용 하는 내부 XML infoset에서 XML 문서로 serialize 한 다음 유효성 검사 XML 판독기를 사용 하 여 문서를 재분석 하지 않고 유효성을 검사 수 있습니다. XmlSchemaValidator 클래스 사용자 지정 XML 데이터 소스를 통해 또는 유효성 검사 XML 작성기를 작성 하는 방법으로 유효성 검사 엔진을 빌드하는 데 사용할 수도 있습니다.       XmlSchemaValidator 클래스에 대 한 자세한 내용은 참조는 [XmlSchemaValidator 밀어넣기 기반 유효성 검사](~/add/includes/ajax-current-ext-md.md) 항목입니다.      > [!IMPORTANT] >는 <xref:System.Xml.Schema.XmlSchemaValidationFlags>및 <xref:System.Xml.Schema.XmlSchemaValidationFlags>XmlSchemaValidator 개체의 플래그 설정 되지 않은 유효성 검사 기본값 이어야 합니다.</xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.Schema.XmlSchemaValidationFlags> 또한는 <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A>XmlSchemaValidator 개체의 속성은 `null` 기본적으로.</xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> 결과적으로 외부 스키마에서 참조 되는 가져오기 또는 redefine 요소 해결 되지 않은 기본적으로 합니다."
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the XmlSchemaValidator class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_19_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_19_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_19_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/t-system.xml.schema.xmls_19_3.xsd)]"
  syntax:
    content: public sealed class XmlSchemaValidator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)
  id: '#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)'
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
  nameWithType: XmlSchemaValidator.XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
  fullName: System.Xml.Schema.XmlSchemaValidator.XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> 클래스입니다."
  remarks: "다음은 XmlSchemaValidator 생성자를 사용 하는 경우를 고려해 야 할 중요 한 참고 사항입니다.      -의 콘텐츠는 <xref:System.Xml.Schema.XmlSchemaSet>매개 변수는 내부에 복사 됩니다 <xref:System.Xml.Schema.XmlSchemaSet>개체 때는 <xref:System.Xml.Schema.XmlSchemaValidationFlags>또는 <xref:System.Xml.Schema.XmlSchemaValidationFlags>유효성 검사 옵션을 설정 합니다.</xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet> 결과적으로, 입력에 변경 <xref:System.Xml.Schema.XmlSchemaSet>유효성 검사 중에 개체를 유효성 검사의 결과 영향을 주지 않습니다.</xref:System.Xml.Schema.XmlSchemaSet>      If는 <xref:System.Xml.Schema.XmlSchemaSet>지정 된 매개 변수는 컴파일되지 해당 <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A>메서드를 호출 합니다.</xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> </xref:System.Xml.Schema.XmlSchemaSet>      - <xref:System.Xml.IXmlNamespaceResolver>매개 변수는 유효성 검사를 위해 특히 중요 `xs:QName` 형식.</xref:System.Xml.IXmlNamespaceResolver> <xref:System.Xml.Schema.XmlSchemaValidator>클래스는 <xref:System.Xml.IXmlNamespaceResolver>개체 대신.를 대 한 참조를 보유 하지만</xref:System.Xml.IXmlNamespaceResolver> 범위 내의 네임 스페이스를 복사 하지 않습니다</xref:System.Xml.Schema.XmlSchemaValidator> 이렇게 하면 새 네임 스페이스에 추가할 수 있습니다.는 <xref:System.Xml.IXmlNamespaceResolver>유효성 검사 프로세스 중에 개체를.</xref:System.Xml.IXmlNamespaceResolver>      > [!IMPORTANT] >는 <xref:System.Xml.Schema.XmlSchemaValidationFlags>및 <xref:System.Xml.Schema.XmlSchemaValidationFlags>의 유효성 검사 플래그는 <xref:System.Xml.Schema.XmlSchemaValidator>없는 개체 집합에는 기본값이 될.</xref:System.Xml.Schema.XmlSchemaValidator> </xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.Schema.XmlSchemaValidationFlags> 또한는 <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A>속성은 <xref:System.Xml.Schema.XmlSchemaValidator>개체가 `null` 기본적으로.</xref:System.Xml.Schema.XmlSchemaValidator> </xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> 결과적으로 외부 스키마에서 참조 되는 가져오기 또는 redefine 요소 해결 되지 않은 기본적으로 합니다."
  example:
  - For an example of the XmlSchemaValidator constructor, see the <xref:System.Xml.Schema.XmlSchemaValidator> class reference topic.
  syntax:
    content: public XmlSchemaValidator (System.Xml.XmlNameTable nameTable, System.Xml.Schema.XmlSchemaSet schemas, System.Xml.IXmlNamespaceResolver namespaceResolver, System.Xml.Schema.XmlSchemaValidationFlags validationFlags);
    parameters:
    - id: nameTable
      type: System.Xml.XmlNameTable
      description: "<xref:System.Xml.XmlNameTable>원자화 된 문자열 형식의 요소 및 특성 이름을 포함 하는 개체입니다.</xref:System.Xml.XmlNameTable>"
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> 유효성 검사에 사용 되는 XML 스키마 정의 언어 (XSD)를 포함 하는 개체입니다."
    - id: namespaceResolver
      type: System.Xml.IXmlNamespaceResolver
      description: "<xref:System.Xml.IXmlNamespaceResolver>유효성 검사 중 발견 된 네임 스페이스를 확인 하는 데 사용 되는 개체입니다.</xref:System.Xml.IXmlNamespaceResolver>"
    - id: validationFlags
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaValidationFlags&quot;> </xref> 스키마 유효성 검사 옵션을 지정 하는 값입니다."
  overload: System.Xml.Schema.XmlSchemaValidator.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "지정 된 매개 변수 중 하나 이상이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "스키마를 컴파일하는 동안 오류가 발생 했습니다.는 <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> 매개 변수입니다."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)
  id: AddSchema(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: AddSchema(XmlSchema)
  nameWithType: XmlSchemaValidator.AddSchema(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaValidator.AddSchema(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "XML 스키마 정의 언어 (XSD) 스키마 유효성 검사에 사용 되는 스키마 집합에 추가 합니다."
  remarks: "다음은 AddSchema 메서드를 사용할 때 고려해 야 할 중요 한 참고 사항입니다.      유효성을 검사 중인 XML 문서에 인라인 XML 스키마의 효과 시뮬레이션 하-AddSchema 메서드를 사용할 수 있습니다.      -대상의 네임 스페이스는 <xref:System.Xml.Schema.XmlSchema>매개 변수는 임의의 요소 또는 특성에서 이미 발생의 일치할 수 없습니다는 <xref:System.Xml.Schema.XmlSchemaValidator>개체입니다.</xref:System.Xml.Schema.XmlSchemaValidator> </xref:System.Xml.Schema.XmlSchema>      If는 <xref:System.Xml.Schema.XmlSchemaValidationFlags>유효성 검사 옵션 설정 하지 않으면, AddSchema 메서드는 아무 작업도 수행 합니다.</xref:System.Xml.Schema.XmlSchemaValidationFlags>"
  syntax:
    content: public void AddSchema (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "<xref:System.Xml.Schema.XmlSchema>유효성 검사에 사용 되는 스키마 집합에 추가할 개체입니다.</xref:System.Xml.Schema.XmlSchema>"
  overload: System.Xml.Schema.XmlSchemaValidator.AddSchema*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref:System.Xml.Schema.XmlSchema>지정 된 매개 변수는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "대상 네임 스페이스는 <xref:System.Xml.Schema.XmlSchema>매개 변수와 일치 한 요소 또는 특성에서 이미 발생 하는 <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> 개체입니다.</xref:System.Xml.Schema.XmlSchema>"
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "<xref:System.Xml.Schema.XmlSchema>매개 변수가 올바르지 않습니다.</xref:System.Xml.Schema.XmlSchema>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.EndValidation
  id: EndValidation
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: EndValidation()
  nameWithType: XmlSchemaValidator.EndValidation()
  fullName: System.Xml.Schema.XmlSchemaValidator.EndValidation()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "유효성 검사를 끝내 고 전체 XML 문서에 대 한 identity 제약 조건을 확인 합니다."
  remarks: "에 EndValidation 유효성 검사를 종료 메서드와 경우 전체 XML 문서에 대 한 identity 제약 조건을 검사는 <xref:System.Xml.Schema.XmlSchemaValidationFlags>유효성 검사 옵션을 설정 합니다.</xref:System.Xml.Schema.XmlSchemaValidationFlags>"
  syntax:
    content: public void EndValidation ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaValidator.EndValidation*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "XML 문서에서 identity 제약 조건 오류가 발견 되었습니다."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes
  id: GetExpectedAttributes
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: GetExpectedAttributes()
  nameWithType: XmlSchemaValidator.GetExpectedAttributes()
  fullName: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "현재 요소 컨텍스트에 나타날된 수 있는 특성을 반환합니다."
  remarks: "다음은 GetExpectedAttributes 메서드를 사용할 때 고려해 야 할 중요 한 참고 사항입니다.      -GetExpectedAttributes 메서드 후 즉시 호출 하는 경우는 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A>메서드를 XML 문서에 나타날 수 있는 모든 특성이 반환 됩니다.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A>      -하나 이상의 호출을 GetExpectedAttributes 메서드를 호출 하는 경우는 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A>메서드, 현재 요소에 대 한 유효성 검사 아직 하지 않은 특성이 반환 됩니다.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A>"
  syntax:
    content: public System.Xml.Schema.XmlSchemaAttribute[] GetExpectedAttributes ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchemaAttribute[]
      description: "배열을 <xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;> </xref> 개체 또는 예상 된 특성이 없는 경우 빈 배열입니다."
  overload: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles
  id: GetExpectedParticles
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: GetExpectedParticles()
  nameWithType: XmlSchemaValidator.GetExpectedParticles()
  fullName: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "현재 요소 컨텍스트에서 필요한 파티클을 반환합니다."
  remarks: "GetExpectedParticles 메서드에 의해 반환 될 수 있는 유효한 파티클은의 인스턴스는 <xref:System.Xml.Schema.XmlSchemaElement>및 <xref:System.Xml.Schema.XmlSchemaAny>클래스.</xref:System.Xml.Schema.XmlSchemaAny> </xref:System.Xml.Schema.XmlSchemaElement>       콘텐츠 모델의 compositor 다음과 같은 경우는 `xs:sequence`, 시퀀스에서 다음 파티클만 반환 됩니다. 콘텐츠 모델의 compositor가 하는 경우는 `xs:all` 또는 `xs:choice`, 현재 요소 컨텍스트에서 따를 수 있는 유효한 파티클이 모두 반환 됩니다.       예를 들어, XML 스키마 정의 언어 (XSD)에서 스키마 및 XML 문서를 확인 한 후 따르는 `book` 요소는 `book` 요소는 현재 요소 컨텍스트입니다. GetExpectedParticles 메서드 하나만 포함 된 배열을 반환 <xref:System.Xml.Schema.XmlSchemaElement>나타내는 개체는 `title` 요소.</xref:System.Xml.Schema.XmlSchemaElement> 유효성 검사 컨텍스트가 때는 `title` 요소인 GetExpectedParticles 메서드는 빈 배열을 반환 합니다. GetExpectedParticles 메서드를 호출 하는 경우는 `title` 요소의 유효성을 검사 하기 전에 `description` 요소 검증 된, 하나만 포함 된 배열을 반환 <xref:System.Xml.Schema.XmlSchemaElement>나타내는 개체는 `description` 요소.</xref:System.Xml.Schema.XmlSchemaElement> GetExpectedParticles 메서드를 호출 하는 경우는 `description` 요소 검증 된 하나만 포함 된 배열을 반환 합니다. <xref:System.Xml.Schema.XmlSchemaAny>와일드 카드를 나타내는 개체입니다.</xref:System.Xml.Schema.XmlSchemaAny>      ```vb#   Dim reader As XmlReader =  XmlReader.Create(&quot;input.xml&quot;)       Dim schemaSet As XmlSchemaSet =  New XmlSchemaSet()    schemaSet.Add(Nothing, &quot;schema.xsd&quot;)   Dim manager As XmlNamespaceManager =  New XmlNamespaceManager(reader.NameTable)       Dim validator As XmlSchemaValidator =  New XmlSchemaValidator(reader.NameTable,schemaSet,manager,XmlSchemaValidationFlags.None)   validator.Initialize()      validator.ValidateElement(&quot;book&quot;, &quot;&quot;, Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next      validator.ValidateElement(&quot;title&quot;, &quot;&quot;, Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next   validator.ValidateEndElement(Nothing)      For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next      validator.ValidateElement(&quot;description&quot;, &quot;&quot;, Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   validator.ValidateEndElement(Nothing)      For Each particle As XmlSchemaParticle In validator.GetExpectedParticles()       Console.WriteLine(particle.GetType())   Next      validator.ValidateElement(&quot;namespace&quot;, &quot;&quot;, Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   validator.ValidateEndElement(Nothing)      validator.ValidateEndElement(Nothing)   ```      ```c#   XmlReader reader = XmlReader.Create(&quot;input.xml&quot;);      XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(null, &quot;schema.xsd&quot;);   XmlNamespaceManager manager = new XmlNamespaceManager(reader.NameTable);      XmlSchemaValidator validator = new XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None);   validator.Initialize();      validator.ValidateElement(&quot;book&quot;, &quot;&quot;, null);      validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }      validator.ValidateElement(&quot;title&quot;, &quot;&quot;, null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }   validator.ValidateEndElement(null);      foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }      validator.ValidateElement(&quot;description&quot;, &quot;&quot;, null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   validator.ValidateEndElement(null);      foreach (XmlSchemaParticle particle in validator.GetExpectedParticles())   {       Console.WriteLine(particle.GetType());   }      validator.ValidateElement(&quot;namespace&quot;, &quot;&quot;, null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   validator.ValidateEndElement(null);      validator.ValidateEndElement(null);   ```이 예제에서는 다음 XML을 입력으로 사용 합니다.       `<xs:schema xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;>`       `<xs:element name=&quot;book&quot;>`       `<xs:complexType>`       `<xs:sequence>`       `<xs:element name=&quot;title&quot; type=&quot;xs:string&quot; />`       `<xs:element name=&quot;description&quot; type=&quot;xs:string&quot; />`       `<xs:any processContents =&quot;lax&quot;/>`       `</xs:sequence>`       `</xs:complexType>`       `</xs:element>`       `</xs:schema>`이 예제에서는 입력으로 다음 XSD 스키마를 사용 합니다.       `<book>`       `<title>My Book</title>`       `<description>My Book&quot;s Description</description>`       `<namespace>System.Xml.Schema</namespace>`       `</book>`"
  syntax:
    content: public System.Xml.Schema.XmlSchemaParticle[] GetExpectedParticles ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchemaParticle[]
      description: "배열을 <xref href=&quot;System.Xml.Schema.XmlSchemaParticle&quot;> </xref> 개체나 필요한 파티클 없는 경우 빈 배열입니다."
  overload: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)
  id: GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: GetUnspecifiedDefaultAttributes(ArrayList)
  nameWithType: XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList)
  fullName: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "기본 특성에 identity 제약 조건을 유효성을 검사 하 고 채웁니다는 <xref href=&quot;System.Collections.ArrayList&quot;> </xref> 으로 지정 된 <xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;> </xref> 가 이전에 유효성을 검사 하지를 사용 하 여 기본 값을 갖는 모든 특성에 대 한 개체는 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>요소 컨텍스트의 메서드.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>"
  remarks: "현재 요소에 대 한 모든 특성을 확인 한 후 GetUnspecifiedDefaultAttributes 메서드를 호출 해야는 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A>메서드.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> 유효성을 검사 중인 XML 문서에 삽입할 기본 특성 결정을 사용할지 GetUnspecifiedDefaultAttributes 메서드."
  syntax:
    content: public void GetUnspecifiedDefaultAttributes (System.Collections.ArrayList defaultAttributes);
    parameters:
    - id: defaultAttributes
      type: System.Collections.ArrayList
      description: "<xref href=&quot;System.Collections.ArrayList&quot;> </xref> 채워질 <xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;> </xref> 요소 컨텍스트의 유효성 검사 중 발생 하지 않은 모든 특성에 대 한 개체입니다."
  overload: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.Initialize
  id: Initialize
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: Initialize()
  nameWithType: XmlSchemaValidator.Initialize()
  fullName: System.Xml.Schema.XmlSchemaValidator.Initialize()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "상태를 초기화는 <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> 개체입니다."
  remarks: "Initialize 메서드는 생성 후 즉시 호출 하는 경우에 유효만 <xref:System.Xml.Schema.XmlSchemaValidator>개체 또는 <xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A>.</xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A> 를 호출한 후</xref:System.Xml.Schema.XmlSchemaValidator>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/m-system.xml.schema.xmls_4_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/m-system.xml.schema.xmls_4_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/m-system.xml.schema.xmls_4_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/m-system.xml.schema.xmls_4_3.xsd)]"
  syntax:
    content: public void Initialize ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaValidator.Initialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "호출의 <> </> *> 메서드는 생성 후 즉시 유효는 <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> 개체 또는를 호출한 후 <> </> *>만 합니다."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)
  id: Initialize(System.Xml.Schema.XmlSchemaObject)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: Initialize(XmlSchemaObject)
  nameWithType: XmlSchemaValidator.Initialize(XmlSchemaObject)
  fullName: System.Xml.Schema.XmlSchemaValidator.Initialize(XmlSchemaObject)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "상태를 초기화는 <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> 를 사용 하 여 개체는 <xref href=&quot;System.Xml.Schema.XmlSchemaObject&quot;> </xref> 부분 유효성 검사에 대해 지정 합니다."
  remarks: "Initialize 메서드를 사용 하는 <xref:System.Xml.Schema.XmlSchemaObject>매개 변수를 초기화 한 <xref:System.Xml.Schema.XmlSchemaValidator>개체 부분 유효성 검사에 대 한 시작 상태로.</xref:System.Xml.Schema.XmlSchemaValidator> </xref:System.Xml.Schema.XmlSchemaObject>"
  example:
  - "In the following example, an <xref:System.Xml.Schema.XmlSchemaObject> is initialized for partial validation using the Initialize method. The `orderNumber` schema element is passed by selecting the schema element by <xref:System.Xml.XmlQualifiedName> in the <xref:System.Xml.Schema.XmlSchemaObjectTable> collection returned by the <xref:System.Xml.Schema.XmlSchemaSet.GlobalElements%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> object. The <xref:System.Xml.Schema.XmlSchemaValidator> object then validates this specific element.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(Nothing, \"schema.xsd\")  \nschemaSet.Compile()  \nDim nameTable As NameTable = New NameTable()  \nDim manager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  \n  \nDim validator As XmlSchemaValidator = New XmlSchemaValidator(nameTable, schemaSet, manager, XmlSchemaValidationFlags.None)  \nvalidator.Initialize(schemaSet.GlobalElements.Item(New XmlQualifiedName(\"orderNumber\")))  \n  \nvalidator.ValidateElement(\"orderNumber\", \"\", Nothing)  \nvalidator.GetUnspecifiedDefaultAttributes(New ArrayList())  \nvalidator.ValidateEndOfAttributes(Nothing)  \nvalidator.ValidateText(\"123\")  \nvalidator.ValidateEndElement(Nothing)  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(null, \"schema.xsd\");  \nschemaSet.Compile();  \nNameTable nameTable = new NameTable();  \nXmlNamespaceManager manager = new XmlNamespaceManager(nameTable);  \n  \nXmlSchemaValidator validator = new XmlSchemaValidator(nameTable, schemaSet, manager, XmlSchemaValidationFlags.None);  \nvalidator.Initialize(schemaSet.GlobalElements[new XmlQualifiedName(\"orderNumber\")]);  \n  \nvalidator.ValidateElement(\"orderNumber\", \"\", null);  \nvalidator.GetUnspecifiedDefaultAttributes(new ArrayList());  \nvalidator.ValidateEndOfAttributes(null);  \nvalidator.ValidateText(\"123\");  \nvalidator.ValidateEndElement(null);  \n```  \n  \n The example takes the following XML schema as input.  \n  \n `<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">`  \n  \n `<xs:element name=\"orderNumber\" type=\"xs:int\" />`  \n  \n `</xs:schema>`"
  syntax:
    content: public void Initialize (System.Xml.Schema.XmlSchemaObject partialValidationType);
    parameters:
    - id: partialValidationType
      type: System.Xml.Schema.XmlSchemaObject
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;> </xref>, <xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;> </xref>, 또는 <xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;> </xref> 의 유효성 검사 컨텍스트를 초기화 하는 데 사용 되는 개체는 <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> 부분 유효성 검사에 대 한 개체입니다."
  overload: System.Xml.Schema.XmlSchemaValidator.Initialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "호출의 <> </> *> 메서드는 생성 후 즉시 유효는 <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> 개체 또는를 호출한 후 <> </> *>만 합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref href=&quot;System.Xml.Schema.XmlSchemaObject&quot;></xref> parameter is not an <xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;></xref>, <xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;></xref>, or <xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;></xref> object."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Xml.Schema.XmlSchemaObject&quot;> </xref> 매개 변수 여야 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider
  id: LineInfoProvider
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: LineInfoProvider
  nameWithType: XmlSchemaValidator.LineInfoProvider
  fullName: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "유효성을 검사할 XML 노드의 줄 번호 정보를 가져오거나 설정 합니다."
  remarks: "-   모든 줄 정보를 보고 <xref:System.Xml.Schema.XmlSchemaValidationException>유효성 검사 프로세스 중에 throw 됩니다.</xref:System.Xml.Schema.XmlSchemaValidationException>      -기본 <xref:System.Xml.IXmlLineInfo>속성에 대 한 0을 반환 합니다. LineInfoProvider에서 반환 된 개체는 <xref:System.Xml.IXmlLineInfo.LineNumber%2A>및 <xref:System.Xml.IXmlLineInfo.LinePosition%2A>속성.</xref:System.Xml.IXmlLineInfo.LinePosition%2A> </xref:System.Xml.IXmlLineInfo.LineNumber%2A> </xref:System.Xml.IXmlLineInfo>"
  syntax:
    content: public System.Xml.IXmlLineInfo LineInfoProvider { get; set; }
    return:
      type: System.Xml.IXmlLineInfo
      description: "<xref:System.Xml.IXmlLineInfo>개체입니다.</xref:System.Xml.IXmlLineInfo>"
  overload: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)
  id: SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: SkipToEndElement(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.SkipToEndElement(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "현재 요소 내용의 유효성 검사를 생략 하 고 준비는 <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> 개체는 부모 요소의 컨텍스트에서 내용의 유효성을 검사 합니다."
  remarks: "다음은 SkipToEndElement 메서드를 사용할 때 고려해 야 할 중요 한 참고 사항입니다.      -SkipToEndElement 메서드는 현재 요소 내용의 유효성 검사를 생략 하 고 준비는 <xref:System.Xml.Schema.XmlSchemaValidator>개체는 부모 요소의 컨텍스트에서 내용의 유효성을 검사 하는 현재 요소의 모든 자식에 대 한 유효성 검사를 생략 한 다음 호출 하는 것과 같습니다는 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>메서드.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> </xref:System.Xml.Schema.XmlSchemaValidator>      -현재 요소 콘텐츠를 성공적으로 건너뛰면 하는 경우는 <xref:System.Xml.Schema.XmlSchemaInfo>지정 하는 경우 개체의 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>속성이 <xref:System.Xml.Schema.XmlSchemaValidity>.</xref:System.Xml.Schema.XmlSchemaValidity> 로 설정 되어</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo>      > [!NOTE] > 건너뛴된 콘텐츠에 유효성 검사 오류가 보고 됩니다."
  syntax:
    content: public void SkipToEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref> 개체 현재 요소 콘텐츠를 성공적으로 건너뛰면 해당 속성이 설정 됩니다. 이 매개 변수 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "올바른 순서로 SkipToEndElement 메서드가 호출 되지 않았습니다. 예를 들어 SkipToEndElement를 호출한 후 SkipToEndElement를 호출 합니다."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.SourceUri
  id: SourceUri
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: SourceUri
  nameWithType: XmlSchemaValidator.SourceUri
  fullName: System.Xml.Schema.XmlSchemaValidator.SourceUri
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "유효성을 검사할 XML 노드의 소스 URI를 가져오거나 설정 합니다."
  remarks: "-   URI에서 보고 되는 소스 <xref:System.Xml.Schema.XmlSchemaValidationException>유효성 검사 프로세스 중에 throw 됩니다.</xref:System.Xml.Schema.XmlSchemaValidationException>      -SourceUri 속성을 설정 하지 않으면 XML 문서에 대 한 파일 이름 인지 <xref:System.String.Empty>유효성 검사 오류 메시지에.</xref:System.String.Empty>"
  syntax:
    content: public Uri SourceUri { get; set; }
    return:
      type: System.Uri
      description: "A <xref:System.Uri>유효성을 검사할 XML 노드의 소스 URI를 나타내는 개체입니다; 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Uri>"
  overload: System.Xml.Schema.XmlSchemaValidator.SourceUri*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  id: ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateAttribute(String,String,String,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateAttribute(String,String,String,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(String,String,String,XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "특성 이름, 네임 스페이스 URI 및 현재 요소 컨텍스트에서 값의 유효성을 검사 합니다."
  remarks: "다음은 ValidateAttribute 메서드를 사용할 때 고려해 야 할 중요 한 참고 사항입니다.      - <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>메서드를 호출 하 여 현재 요소에 대 한 모든 특성을 확인 한 후 해야는 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A>메서드.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> </xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>      If는 <xref:System.Xml.Schema.XmlSchemaAttribute>에 전달 된 개체는 <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A>메서드, ValidateAttribute 메서드 특성에 대해 유효성을 검사는 <xref:System.Xml.Schema.XmlSchemaAttribute>개체입니다.</xref:System.Xml.Schema.XmlSchemaAttribute> </xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> </xref:System.Xml.Schema.XmlSchemaAttribute>      -현재 요소 컨텍스트에서 특성 확인 되는 경우는 <xref:System.Xml.Schema.XmlSchemaInfo>지정 하는 경우 개체의 <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, 및 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>속성 유효성 검사의 결과가 설정 됩니다.</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A> </xref:System.Xml.Schema.XmlSchemaInfo>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/a1f6d4e1-a580-41fa-b406-_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/a1f6d4e1-a580-41fa-b406-_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/a1f6d4e1-a580-41fa-b406-_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/a1f6d4e1-a580-41fa-b406-_3.xsd)]"
  syntax:
    content: public object ValidateAttribute (string localName, string namespaceUri, string attributeValue, System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: localName
      type: System.String
      description: "유효성을 검사할 특성의 로컬 이름입니다."
    - id: namespaceUri
      type: System.String
      description: "네임 스페이스 URI 특성의 유효성을 검사 합니다."
    - id: attributeValue
      type: System.String
      description: "유효성을 검사할 특성의 값입니다."
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref> 개체 특성의 유효성을 검사에 해당 속성이 설정 됩니다. 이 매개 변수 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Object
      description: "유효성이 검사 된 특성의 값입니다."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "특성의 현재 요소 컨텍스트에서 올바르지 않습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> 올바른 순서로 메서드를 호출 하지 않았습니다. 예를 들어 호출 <> </> *> <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*> 를 호출한 후"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "지정 된 매개 변수 중 하나 이상이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)
  id: ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "특성 이름, 네임 스페이스 URI 및 현재 요소 컨텍스트에서 값의 유효성을 검사 합니다."
  remarks: "다음은 ValidateAttribute 메서드를 사용할 때 고려해 야 할 중요 한 참고 사항입니다.      - <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>메서드를 호출 하 여 현재 요소에 대 한 모든 특성을 확인 한 후 해야는 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A>메서드.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> </xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>      If는 <xref:System.Xml.Schema.XmlSchemaAttribute>에 전달 된 개체는 <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A>메서드, ValidateAttribute 메서드 특성에 대해 유효성을 검사는 <xref:System.Xml.Schema.XmlSchemaAttribute>개체입니다.</xref:System.Xml.Schema.XmlSchemaAttribute> </xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> </xref:System.Xml.Schema.XmlSchemaAttribute>      -현재 요소 컨텍스트에서 특성 확인 되는 경우는 <xref:System.Xml.Schema.XmlSchemaInfo>지정 하는 경우 개체의 <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, 및 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>속성 유효성 검사의 결과가 설정 됩니다.</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A> </xref:System.Xml.Schema.XmlSchemaInfo>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/bdf9cba1-e5e2-4a4d-8a5a-_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/bdf9cba1-e5e2-4a4d-8a5a-_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/bdf9cba1-e5e2-4a4d-8a5a-_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/bdf9cba1-e5e2-4a4d-8a5a-_3.xsd)]"
  syntax:
    content: public object ValidateAttribute (string localName, string namespaceUri, System.Xml.Schema.XmlValueGetter attributeValue, System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: localName
      type: System.String
      description: "유효성을 검사할 특성의 로컬 이름입니다."
    - id: namespaceUri
      type: System.String
      description: "네임 스페이스 URI 특성의 유효성을 검사 합니다."
    - id: attributeValue
      type: System.Xml.Schema.XmlValueGetter
      description: "<xref href=&quot;System.Xml.Schema.XmlValueGetter&quot;> </xref> <xref uid=&quot;langword_csharp_delegate&quot; name=&quot;delegate&quot; href=&quot;&quot;> </xref> 특성의 값을 특성의 XML 스키마 정의 언어 (XSD) 형식과 호환 되는 공용 언어 런타임 (CLR) 형식으로 전달 하는 데 사용 합니다."
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref> 개체 특성의 유효성을 검사에 해당 속성이 설정 됩니다. 이 매개 변수 수 및 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Object
      description: "유효성이 검사 된 특성의 값입니다."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "특성의 현재 요소 컨텍스트에서 올바르지 않습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> 올바른 순서로 메서드를 호출 하지 않았습니다. 예를 들어 호출 <> </> *> <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*> 를 호출한 후"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "지정 된 매개 변수 중 하나 이상이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  id: ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateElement(String,String,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "현재 컨텍스트에서 요소의 유효성을 검사 합니다."
  remarks: "다음은 ValidateElement 메서드를 사용할 때 고려해 야 할 중요 한 참고 사항입니다.      -요소 이름을 현재 컨텍스트에서 유효성이 성공적으로 검사 하는 경우는 <xref:System.Xml.Schema.XmlSchemaInfo>지정 하는 경우 개체의 <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>, 및 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>속성 유효성 검사의 결과가 설정 됩니다.</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A> </xref:System.Xml.Schema.XmlSchemaInfo>      -특성 중 하나 나 요소 이름이 유효 하지 않은 경우 현재 컨텍스트는 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>속성이 <xref:System.Xml.Schema.XmlSchemaValidity>고, 그렇지 않으면 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> <xref:System.Xml.Schema.XmlSchemaValidity>.</xref:System.Xml.Schema.XmlSchemaValidity> 속성이</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaValidity> </xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/0c1583e7-54af-4d75-b62c-_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/0c1583e7-54af-4d75-b62c-_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/0c1583e7-54af-4d75-b62c-_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/0c1583e7-54af-4d75-b62c-_3.xsd)]"
  syntax:
    content: public void ValidateElement (string localName, string namespaceUri, System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: localName
      type: System.String
      description: "유효성을 검사할 요소의 로컬 이름입니다."
    - id: namespaceUri
      type: System.String
      description: "네임 스페이스 URI는 요소의 유효성을 검사 합니다."
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref> 개체 요소의 이름의 유효성을 검사에 해당 속성이 설정 됩니다. 이 매개 변수 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateElement*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "요소의 이름을 현재 컨텍스트에서 올바르지 않습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> 올바른 순서로 메서드를 호출 하지 않았습니다. 예를 들어는 <> </> *> <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*> 를 호출한 후 메서드는"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)
  id: ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
  nameWithType: XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "와 현재 컨텍스트에서 요소의 유효성을 검사는 `xsi:Type`, `xsi:Nil`, `xsi:SchemaLocation`, 및 `xsi:NoNamespaceSchemaLocation` 특성 값을 지정 합니다."
  remarks: "다음은 ValidateElement 메서드를 사용할 때 고려해 야 할 중요 한 참고 사항입니다.      -요소 이름을 현재 컨텍스트에서 유효성이 성공적으로 검사 하는 경우는 <xref:System.Xml.Schema.XmlSchemaInfo>지정 하는 경우 개체의 <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>, 및 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>속성 유효성 검사의 결과가 설정 됩니다.</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A> </xref:System.Xml.Schema.XmlSchemaInfo>      -요소 이름이 나 특성 중 하나는 현재 컨텍스트에서 유효 하지 않은 경우는 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>속성이 <xref:System.Xml.Schema.XmlSchemaValidity>고, 그렇지 않으면 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> <xref:System.Xml.Schema.XmlSchemaValidity>.</xref:System.Xml.Schema.XmlSchemaValidity> 속성이</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaValidity> </xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>      If는 <xref:System.Xml.Schema.XmlSchemaValidationFlags>값에 대 한 매개 변수로 전달 되지 않았습니다는 <xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A>생성자 `xsi:SchemaLocation` 및 `xsi:NoNamespaceSchemaLocation` 특성 값은 무시 됩니다.</xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> </xref:System.Xml.Schema.XmlSchemaValidationFlags>"
  syntax:
    content: public void ValidateElement (string localName, string namespaceUri, System.Xml.Schema.XmlSchemaInfo schemaInfo, string xsiType, string xsiNil, string xsiSchemaLocation, string xsiNoNamespaceSchemaLocation);
    parameters:
    - id: localName
      type: System.String
      description: "유효성을 검사할 요소의 로컬 이름입니다."
    - id: namespaceUri
      type: System.String
      description: "네임 스페이스 URI는 요소의 유효성을 검사 합니다."
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref> 개체 요소의 이름의 유효성을 검사에 해당 속성이 설정 됩니다. 이 매개 변수 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: xsiType
      type: System.String
      description: "`xsi:Type` 특성 요소의 값입니다. 이 매개 변수 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: xsiNil
      type: System.String
      description: "`xsi:Nil` 특성 요소의 값입니다. 이 매개 변수 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: xsiSchemaLocation
      type: System.String
      description: "`xsi:SchemaLocation` 특성 요소의 값입니다. 이 매개 변수 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: xsiNoNamespaceSchemaLocation
      type: System.String
      description: "`xsi:NoNamespaceSchemaLocation` 특성 요소의 값입니다. 이 매개 변수 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateElement*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "요소의 이름을 현재 컨텍스트에서 올바르지 않습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> 올바른 순서로 메서드를 호출 하지 않았습니다. 예를 들어는 <> </> *> <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*> 를 호출한 후 메서드는"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)
  id: ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateEndElement(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "요소의 텍스트 콘텐츠 단순 콘텐츠가 있는 요소에 대 한 데이터 형식 잘못 확인 하 고 현재 요소 내용의 복합 콘텐츠가 있는 요소에 대 한 완전 한지 확인 합니다."
  remarks: "다음은 ValidateEndElement 메서드를 사용할 때 고려해 야 할 중요 한 참고 사항입니다.      -단순 콘텐츠 요소에 대 한 메서드는 요소의 텍스트 내용이 데이터 형식이 올바른지와 구문 분석 된 반환 확인 ValidateEndElement 형식화 된 값. 요소의 텍스트 콘텐츠 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> 에 대 한 이전 호출의 결과에서 가져온      -복합 콘텐츠가 있는 요소에 대 한 ValidateEndElement 메서드 현재 요소의 콘텐츠가 완전 한지 확인 합니다.      -요소에 있는 경우 기본 값, ValidateEndElement 메서드에서 반환 되는 값은 요소에 대 한 기본값입니다.      -If는 <xref:System.Xml.Schema.XmlSchemaValidator>으로 생성 된 개체는 <xref:System.Xml.Schema.XmlSchemaValidationFlags>identity 제약 조건 규칙 (있는 경우) 요소에 적용 되는 ValidateEndElement 메서드 검사를 매개 변수로 값.</xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.Schema.XmlSchemaValidator>      -현재 컨텍스트에서 요소는 유효성을 검사 하는 경우는 <xref:System.Xml.Schema.XmlSchemaInfo>지정 하는 경우 개체의 <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, 및 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>속성 유효성 검사의 결과가 설정 됩니다.</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A> </xref:System.Xml.Schema.XmlSchemaInfo>"
  syntax:
    content: public object ValidateEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref> 개체 속성을 가진 요소의 유효성이 성공적으로 설정 됩니다. 이 매개 변수 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Object
      description: "구문 분석 되 고 요소의 텍스트 값 요소에 단순 콘텐츠가 있는 경우 입력 합니다."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "요소의 콘텐츠가 잘못 되었습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> 올바른 순서로 메서드를 호출 하지 않았습니다. 예를 들어 경우는 <> </> *> <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*>.</xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*> 를 호출한 후 메서드는"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)
  id: ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateEndElement(XmlSchemaInfo,Object)
  nameWithType: XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo,Object)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "지정 된 요소의 텍스트 콘텐츠의 데이터 형식이 올바른지 확인 합니다."
  remarks: "> [!IMPORTANT]>에 대해 유효성을 검사할 경우는 `xs:key`, `xs:keyref`, 또는 `xs:unique` identity 제약 조건, ValidateEndElement 메서드 오버 로드를 사용 하지 마십시오. 대신, 호출의 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>메서드는 요소의 값을 전달 합니다.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> 그런 다음 호출에서 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>메서드 오버 로드를 사용 <xref:System.Xml.Schema.XmlSchemaInfo>요소의 텍스트 콘텐츠의 데이터 형식이 올바른지 확인 하려면를 인수로.</xref:System.Xml.Schema.XmlSchemaInfo> </xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>       다음은 ValidateEndElement 메서드를 사용할 때 고려해 야 할 중요 한 참고 사항입니다.      -단순 콘텐츠 요소에 대 한 메서드는 요소의 텍스트 내용이 데이터 형식이 올바른지와 구문 분석 된 반환 확인 ValidateEndElement 형식화 된 값. 요소의 텍스트 콘텐츠를 매개 변수로 전달 된 입력 된 콘텐츠를 가져옵니다.      If에 대 한 호출이 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>메서드 이전에 적용 되는 <xref:System.InvalidOperationException>throw 됩니다.</xref:System.InvalidOperationException> </xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>      -요소의 내용이 복잡 한 경우는 <xref:System.InvalidOperationException>throw 됩니다.</xref:System.InvalidOperationException>      -If는 <xref:System.Xml.Schema.XmlSchemaValidator>으로 생성 된 개체는 <xref:System.Xml.Schema.XmlSchemaValidationFlags>identity 제약 조건 규칙 (있는 경우) 요소에 적용 되는 ValidateEndElement 메서드 검사를 매개 변수로 값.</xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.Schema.XmlSchemaValidator>      -현재 컨텍스트에서 요소는 유효성을 검사 하는 경우는 <xref:System.Xml.Schema.XmlSchemaInfo>지정 하는 경우 개체의 <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, 및 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>속성 유효성 검사의 결과가 설정 됩니다.</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A> </xref:System.Xml.Schema.XmlSchemaInfo>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/2cd331b9-caa2-4647-acb8-_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/2cd331b9-caa2-4647-acb8-_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/2cd331b9-caa2-4647-acb8-_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/2cd331b9-caa2-4647-acb8-_3.xsd)]"
  syntax:
    content: public object ValidateEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo, object typedValue);
    parameters:
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref> 개체 요소의 텍스트 콘텐츠의 유효성을 검사에 해당 속성이 설정 됩니다. 이 매개 변수 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: typedValue
      type: System.Object
      description: "입력된 한 텍스트 콘텐츠 요소입니다."
    return:
      type: System.Object
      description: "구문 분석 되 고 형식화 된 단순 콘텐츠 요소입니다."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "요소의 텍스트 콘텐츠가 잘못 되었습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> 올바른 순서로 메서드를 호출 하지 않았습니다 (경우에 예를 들어는 <> </> *> 호출한 후 메서드는 <> </> *>)에 대 한 호출이 <> </> *> 메서드 이전에 수행한 또는 요소에 복잡 한 콘텐츠입니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "입력된 한 텍스트 콘텐츠 매개 변수 여야 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)
  id: ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateEndOfAttributes(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateEndOfAttributes(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "요소 컨텍스트에 필수 특성이 모두 있는지 확인 하 고 준비는 <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> 개체 요소의 자식 내용의 유효성을 검사 합니다."
  remarks: "다음은 ValidateEndOfAttributes 메서드를 사용할 때 고려해 야 할 중요 한 참고 사항입니다.      - <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>메서드 ValidateEndOfAttributes 하기 전에 항상 호출 해야 합니다.</xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>      -ValidateEndOfAttributes 메서드는 요소 내용의 유효성 검사를 진행 하기 전에 호출 되어야 합니다.      -요소 컨텍스트에 필수 특성이 모두 있는 경우에 <xref:System.Xml.Schema.XmlSchemaInfo>지정 하는 경우 개체의 <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>속성이 <xref:System.Xml.Schema.XmlSchemaValidity>.</xref:System.Xml.Schema.XmlSchemaValidity> 로 설정 되어</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/2739ac73-0581-4d83-ad9c-_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/2739ac73-0581-4d83-ad9c-_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/2739ac73-0581-4d83-ad9c-_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/2739ac73-0581-4d83-ad9c-_3.xsd)]"
  syntax:
    content: public void ValidateEndOfAttributes (System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref> 개체 요소 컨텍스트에 필수 특성이 모두 있는지 확인에 해당 속성이 설정 됩니다. 이 매개 변수 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "현재 요소 컨텍스트에 필수 특성이 하나 이상의 요소가 없습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "올바른 순서로 ValidateEndOfAttributes 메서드가 호출 되지 않았습니다. 예를 들어 ValidateEndOfAttributes <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*>.</xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*> 를 호출한 다음 호출"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "지정 된 매개 변수 중 하나 이상이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)
  id: ValidateText(System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateText(String)
  nameWithType: XmlSchemaValidator.ValidateText(String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateText(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "유효성을 검사 하는지 여부를 텍스트 <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> 현재 요소 컨텍스트에서 사용할 수를 지정 하 고 현재 요소에 단순 콘텐츠가 있는 경우 유효성 검사에 대 한 텍스트를 누적 합니다."
  remarks: "다음은 ValidateText 메서드를 사용할 때 고려해 야 할 중요 한 참고 사항입니다.      -요소에 있는 경우 단순 콘텐츠를 텍스트 `string` 지정 된 때까지 ValidateText 메서드를 호출할 때마다 연결 되는 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>메서드를 호출 합니다.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 경우는 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>메서드가 호출 되 면 모든 텍스트의 유효성을 검사 합니다.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>      -요소에 있는 경우 복잡 한 내용을 텍스트가 연결 되지 않습니다."
  syntax:
    content: public void ValidateText (string elementValue);
    parameters:
    - id: elementValue
      type: System.String
      description: "텍스트 <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> 유효성을 검사할 현재 요소 컨텍스트에서 합니다."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateText*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "텍스트 <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> 지정는 현재 요소 컨텍스트에서 사용할 수 없습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> 올바른 순서로 메서드를 호출 하지 않았습니다. 예를 들어는 <> </> *> <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*> 를 호출한 후 메서드는"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "텍스트 <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> 매개 변수 여야 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)
  id: ValidateText(System.Xml.Schema.XmlValueGetter)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateText(XmlValueGetter)
  nameWithType: XmlSchemaValidator.ValidateText(XmlValueGetter)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateText(XmlValueGetter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "반환 된 텍스트가 있는지 확인 하는 <xref href=&quot;System.Xml.Schema.XmlValueGetter&quot;> </xref> 지정 된 개체가 현재 요소 컨텍스트에서 허용 하 고 현재 요소에 단순 콘텐츠가 있는 경우 유효성 검사에 대 한 텍스트를 누적 합니다."
  remarks: "다음은 ValidateText 메서드를 사용할 때 고려해 야 할 중요 한 참고 사항입니다.      -요소에 있는 경우 단순 콘텐츠를 텍스트 `string` 지정 된 때까지 ValidateText 메서드를 호출할 때마다 연결 되는 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>메서드를 호출 합니다.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> 경우는 <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>메서드가 호출 되 면 모든 텍스트의 유효성을 검사 합니다.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>      -요소에 있는 경우 복잡 한 내용을 텍스트가 연결 되지 않습니다."
  syntax:
    content: public void ValidateText (System.Xml.Schema.XmlValueGetter elementValue);
    parameters:
    - id: elementValue
      type: System.Xml.Schema.XmlValueGetter
      description: "<xref href=&quot;System.Xml.Schema.XmlValueGetter&quot;> </xref> <xref uid=&quot;langword_csharp_delegate&quot; name=&quot;delegate&quot; href=&quot;&quot;> </xref> 텍스트 값을 특성의 XML 스키마 정의 언어 (XSD) 형식과 호환 되는 공용 언어 런타임 (CLR) 형식으로 전달 하는 데 사용 합니다."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateText*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "텍스트 <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> 지정는 현재 요소 컨텍스트에서 사용할 수 없습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> 올바른 순서로 메서드를 호출 하지 않았습니다. 예를 들어는 <> </> *> <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*> 를 호출한 후 메서드는"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "텍스트 <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> 매개 변수 여야 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)
  id: ValidateWhitespace(System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateWhitespace(String)
  nameWithType: XmlSchemaValidator.ValidateWhitespace(String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "유효성을 검사에 있는 공백을 여부는 <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> 현재 요소 컨텍스트에서 사용할 수를 지정 하 고 현재 요소에 단순 내용이 있는지 유효성 검사를 위해 공백을 누적 시킵니다."
  syntax:
    content: public void ValidateWhitespace (string elementValue);
    parameters:
    - id: elementValue
      type: System.String
      description: "공백 <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> 유효성을 검사할 현재 요소 컨텍스트에서 합니다."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "현재 요소 컨텍스트에서 공백이 ´ ù."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> 올바른 순서로 메서드를 호출 하지 않았습니다. 예를 들어 경우는 <> </> *> <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*> 를 호출한 후 메서드는"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)
  id: ValidateWhitespace(System.Xml.Schema.XmlValueGetter)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateWhitespace(XmlValueGetter)
  nameWithType: XmlSchemaValidator.ValidateWhitespace(XmlValueGetter)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(XmlValueGetter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "공백을 반환 되는지 확인 하는 <xref href=&quot;System.Xml.Schema.XmlValueGetter&quot;> </xref> 지정 된 개체가 현재 요소 컨텍스트에서 허용 하 고 현재 요소에 단순 내용이 있는지 유효성 검사를 위해 공백을 누적 시킵니다."
  syntax:
    content: public void ValidateWhitespace (System.Xml.Schema.XmlValueGetter elementValue);
    parameters:
    - id: elementValue
      type: System.Xml.Schema.XmlValueGetter
      description: "<xref href=&quot;System.Xml.Schema.XmlValueGetter&quot;> </xref> <xref uid=&quot;langword_csharp_delegate&quot; name=&quot;delegate&quot; href=&quot;&quot;> </xref> 공백 값을 특성의 XML 스키마 정의 언어 (XSD) 형식과 호환 되는 공용 언어 런타임 (CLR) 형식으로 전달 하는 데 사용 합니다."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "현재 요소 컨텍스트에서 공백이 ´ ù."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> 올바른 순서로 메서드를 호출 하지 않았습니다. 예를 들어 경우는 <> </> *> <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*> 를 호출한 후 메서드는"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler
  id: ValidationEventHandler
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidationEventHandler
  nameWithType: XmlSchemaValidator.ValidationEventHandler
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler
  type: Event
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "<xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref> 스키마 유효성 검사 경고 및 스키마 유효성 검사 중 발생 한 오류를 받는입니다."
  remarks: "없는 경우 <xref:System.Xml.Schema.ValidationEventHandler>지정 <xref:System.Xml.Schema.XmlSchemaValidationException>는 <xref:System.Xml.Schema.XmlSeverityType> <xref:System.Xml.Schema.XmlSeverityType>.</xref:System.Xml.Schema.XmlSeverityType> 의 값</xref:System.Xml.Schema.XmlSeverityType> 을 사용 하는 모든 스키마 유효성 검사 오류에 대해 throw 되</xref:System.Xml.Schema.XmlSchemaValidationException> 는</xref:System.Xml.Schema.ValidationEventHandler> <xref:System.Xml.Schema.XmlSchemaValidationException> <xref:System.Xml.Schema.XmlSeverityType> <xref:System.Xml.Schema.XmlSeverityType>안내 하십시오.</xref:System.Xml.Schema.XmlSeverityType> 값</xref:System.Xml.Schema.XmlSeverityType> 유효성 검사 경고에 대 한 throw 되지 않습니다</xref:System.Xml.Schema.XmlSchemaValidationException>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/e-system.xml.schema.xmls_0_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/e-system.xml.schema.xmls_0_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/e-system.xml.schema.xmls_0_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/e-system.xml.schema.xmls_0_3.xsd)]"
  syntax:
    content: public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;
    return:
      type: System.Xml.Schema.ValidationEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender
  id: ValidationEventSender
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidationEventSender
  nameWithType: XmlSchemaValidator.ValidationEventSender
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "유효성 검사 이벤트의 sender 개체로 보낼 개체를 가져오거나 설정 합니다."
  remarks: ''
  example:
  - For an example of a validation event, see the <xref:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler> event.
  syntax:
    content: public object ValidationEventSender { get; set; }
    return:
      type: System.Object
      description: "<xref:System.Object>; 기본값은이 <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> 개체입니다.</xref:System.Object>"
  overload: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.XmlResolver
  id: XmlResolver
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: XmlResolver
  nameWithType: XmlSchemaValidator.XmlResolver
  fullName: System.Xml.Schema.XmlSchemaValidator.XmlResolver
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "설정의 <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 해결 하는 데 사용 되는 개체 `xs:import` 및 `xs:include` 요소와 `xsi:schemaLocation` 및 `xsi:noNamespaceSchemaLocation` 특성입니다."
  remarks: >-
    > [!IMPORTANT]

    >  The <xref:System.Xml.Schema.XmlSchemaValidationFlags> and <xref:System.Xml.Schema.XmlSchemaValidationFlags> validation flags of an <xref:System.Xml.Schema.XmlSchemaValidator> object are not set be default. Additionally, the XmlResolver property of an <xref:System.Xml.Schema.XmlSchemaValidator> object is `null` by default. As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.
  syntax:
    content: public System.Xml.XmlResolver XmlResolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 개체; 기본값은는 <xref href=&quot;System.Xml.XmlUrlResolver&quot;> </xref> 개체입니다."
  overload: System.Xml.Schema.XmlSchemaValidator.XmlResolver*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xml.Schema.XmlSchemaException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaException
  nameWithType: XmlSchemaException
  fullName: System.Xml.Schema.XmlSchemaException
- uid: System.Xml.Schema.XmlSchemaValidationException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaValidationException
  nameWithType: XmlSchemaValidationException
  fullName: System.Xml.Schema.XmlSchemaValidationException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
  nameWithType: XmlSchemaValidator.XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
  fullName: System.Xml.Schema.XmlSchemaValidator.XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
- uid: System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: true
  name: XmlNameTable
  nameWithType: XmlNameTable
  fullName: System.Xml.XmlNameTable
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Xml.IXmlNamespaceResolver
  parent: System.Xml
  isExternal: true
  name: IXmlNamespaceResolver
  nameWithType: IXmlNamespaceResolver
  fullName: System.Xml.IXmlNamespaceResolver
- uid: System.Xml.Schema.XmlSchemaValidationFlags
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaValidationFlags
  nameWithType: XmlSchemaValidationFlags
  fullName: System.Xml.Schema.XmlSchemaValidationFlags
- uid: System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: AddSchema(XmlSchema)
  nameWithType: XmlSchemaValidator.AddSchema(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaValidator.AddSchema(XmlSchema)
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Schema.XmlSchemaValidator.EndValidation
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: EndValidation()
  nameWithType: XmlSchemaValidator.EndValidation()
  fullName: System.Xml.Schema.XmlSchemaValidator.EndValidation()
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetExpectedAttributes()
  nameWithType: XmlSchemaValidator.GetExpectedAttributes()
  fullName: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes()
- uid: System.Xml.Schema.XmlSchemaAttribute[]
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaAttribute
  nameWithType: XmlSchemaAttribute
  fullName: System.Xml.Schema.XmlSchemaAttribute[]
  spec.csharp:
  - uid: System.Xml.Schema.XmlSchemaAttribute
    name: XmlSchemaAttribute
    nameWithType: XmlSchemaAttribute
    fullName: XmlSchemaAttribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetExpectedParticles()
  nameWithType: XmlSchemaValidator.GetExpectedParticles()
  fullName: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles()
- uid: System.Xml.Schema.XmlSchemaParticle[]
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaParticle
  nameWithType: XmlSchemaParticle
  fullName: System.Xml.Schema.XmlSchemaParticle[]
  spec.csharp:
  - uid: System.Xml.Schema.XmlSchemaParticle
    name: XmlSchemaParticle
    nameWithType: XmlSchemaParticle
    fullName: XmlSchemaParticle[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetUnspecifiedDefaultAttributes(ArrayList)
  nameWithType: XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList)
  fullName: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList)
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Xml.Schema.XmlSchemaValidator.Initialize
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: Initialize()
  nameWithType: XmlSchemaValidator.Initialize()
  fullName: System.Xml.Schema.XmlSchemaValidator.Initialize()
- uid: System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: Initialize(XmlSchemaObject)
  nameWithType: XmlSchemaValidator.Initialize(XmlSchemaObject)
  fullName: System.Xml.Schema.XmlSchemaValidator.Initialize(XmlSchemaObject)
- uid: System.Xml.Schema.XmlSchemaObject
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaObject
  nameWithType: XmlSchemaObject
  fullName: System.Xml.Schema.XmlSchemaObject
- uid: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: LineInfoProvider
  nameWithType: XmlSchemaValidator.LineInfoProvider
  fullName: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider
- uid: System.Xml.IXmlLineInfo
  parent: System.Xml
  isExternal: true
  name: IXmlLineInfo
  nameWithType: IXmlLineInfo
  fullName: System.Xml.IXmlLineInfo
- uid: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: SkipToEndElement(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.SkipToEndElement(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(XmlSchemaInfo)
- uid: System.Xml.Schema.XmlSchemaInfo
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaInfo
  nameWithType: XmlSchemaInfo
  fullName: System.Xml.Schema.XmlSchemaInfo
- uid: System.Xml.Schema.XmlSchemaValidator.SourceUri
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: SourceUri
  nameWithType: XmlSchemaValidator.SourceUri
  fullName: System.Xml.Schema.XmlSchemaValidator.SourceUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateAttribute(String,String,String,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateAttribute(String,String,String,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(String,String,String,XmlSchemaInfo)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
- uid: System.Xml.Schema.XmlValueGetter
  parent: System.Xml.Schema
  isExternal: false
  name: XmlValueGetter
  nameWithType: XmlValueGetter
  fullName: System.Xml.Schema.XmlValueGetter
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateElement(String,String,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
  nameWithType: XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateEndElement(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateEndElement(XmlSchemaInfo,Object)
  nameWithType: XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo,Object)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo,Object)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateEndOfAttributes(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateEndOfAttributes(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(XmlSchemaInfo)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateText(String)
  nameWithType: XmlSchemaValidator.ValidateText(String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateText(String)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateText(XmlValueGetter)
  nameWithType: XmlSchemaValidator.ValidateText(XmlValueGetter)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateText(XmlValueGetter)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateWhitespace(String)
  nameWithType: XmlSchemaValidator.ValidateWhitespace(String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(String)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateWhitespace(XmlValueGetter)
  nameWithType: XmlSchemaValidator.ValidateWhitespace(XmlValueGetter)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(XmlValueGetter)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidationEventHandler
  nameWithType: XmlSchemaValidator.ValidationEventHandler
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler
- uid: System.Xml.Schema.ValidationEventHandler
  parent: System.Xml.Schema
  isExternal: false
  name: ValidationEventHandler
  nameWithType: ValidationEventHandler
  fullName: System.Xml.Schema.ValidationEventHandler
- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidationEventSender
  nameWithType: XmlSchemaValidator.ValidationEventSender
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender
- uid: System.Xml.Schema.XmlSchemaValidator.XmlResolver
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: XmlResolver
  nameWithType: XmlSchemaValidator.XmlResolver
  fullName: System.Xml.Schema.XmlSchemaValidator.XmlResolver
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Xml.Schema.XmlSchemaValidator.#ctor*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: XmlSchemaValidator
  nameWithType: XmlSchemaValidator.XmlSchemaValidator
- uid: System.Xml.Schema.XmlSchemaValidator.AddSchema*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: AddSchema
  nameWithType: XmlSchemaValidator.AddSchema
- uid: System.Xml.Schema.XmlSchemaValidator.EndValidation*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: EndValidation
  nameWithType: XmlSchemaValidator.EndValidation
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetExpectedAttributes
  nameWithType: XmlSchemaValidator.GetExpectedAttributes
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetExpectedParticles
  nameWithType: XmlSchemaValidator.GetExpectedParticles
- uid: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetUnspecifiedDefaultAttributes
  nameWithType: XmlSchemaValidator.GetUnspecifiedDefaultAttributes
- uid: System.Xml.Schema.XmlSchemaValidator.Initialize*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: Initialize
  nameWithType: XmlSchemaValidator.Initialize
- uid: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: LineInfoProvider
  nameWithType: XmlSchemaValidator.LineInfoProvider
- uid: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: SkipToEndElement
  nameWithType: XmlSchemaValidator.SkipToEndElement
- uid: System.Xml.Schema.XmlSchemaValidator.SourceUri*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: SourceUri
  nameWithType: XmlSchemaValidator.SourceUri
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateAttribute
  nameWithType: XmlSchemaValidator.ValidateAttribute
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateElement
  nameWithType: XmlSchemaValidator.ValidateElement
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateEndElement
  nameWithType: XmlSchemaValidator.ValidateEndElement
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateEndOfAttributes
  nameWithType: XmlSchemaValidator.ValidateEndOfAttributes
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateText
  nameWithType: XmlSchemaValidator.ValidateText
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateWhitespace
  nameWithType: XmlSchemaValidator.ValidateWhitespace
- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidationEventSender
  nameWithType: XmlSchemaValidator.ValidationEventSender
- uid: System.Xml.Schema.XmlSchemaValidator.XmlResolver*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: XmlResolver
  nameWithType: XmlSchemaValidator.XmlResolver
