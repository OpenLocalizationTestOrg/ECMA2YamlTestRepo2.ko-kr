### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.IAssemblyPostProcessor
  id: IAssemblyPostProcessor
  children:
  - System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)
  langs:
  - csharp
  name: IAssemblyPostProcessor
  nameWithType: IAssemblyPostProcessor
  fullName: System.Web.Compilation.IAssemblyPostProcessor
  type: Interface
  summary: "어셈블리를 빌드한 후에 어셈블리를 처리 하기 위해 구현 하는 클래스 메서드를 정의 합니다."
  remarks: "이 인터페이스를 구현 하는 클래스에 컴파일된 후 어셈블리를 액세스할 수 있습니다. <xref:System.Web.Compilation.AssemblyBuilder>클래스는 어셈블리를 컴파일한 다음 IAssemblyPostProcessor 인터페이스 웹 구성 파일에 등록 되었는지 여부를 확인 합니다.</xref:System.Web.Compilation.AssemblyBuilder> 이 경우는 <xref:System.Web.Compilation.AssemblyBuilder>호출 인스턴스는 <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A>컴파일한 후 및 어셈블리를 로드 하기 전에 동작을 수행 하려면 IAssemblyPostProcessor 인터페이스에 대 한 메서드.</xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> </xref:System.Web.Compilation.AssemblyBuilder> 예를 들어 프로파일러 도구는이 인터페이스는 어셈블리에 검색을 설정할 구현 수 있습니다.       IAssemblyPostProcessor 인터페이스를 등록할 때 ASP.NET 응용 프로그램 및 해당 어셈블리 항상 컴파일되는 디버그 모드에서."
  example:
  - "The following code example demonstrates how to create an implementation of the IAssemblyPostProcessor interface, and register it in the Web.config file of a Web application.  \n  \n The first part of the code example creates a class named `Samples.Process.postProcessTest` that implements the IAssemblyPostProcessor interface. This class performs the simple action of writing a file when the <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> method is called.  \n  \n [!code-vb[System.Web.Compilation.IAssemblyPostProcessor#1](~/add/codesnippet/visualbasic/t-system.web.compilation_8_1.vb)]\n [!code-cs[System.Web.Compilation.IAssemblyPostProcessor#1](~/add/codesnippet/csharp/t-system.web.compilation_8_1.cs)]  \n  \n Compile the class into a .dll file with the command `csc /target:library postProcessTest.cs`. Add the resulting .dll file to the Bin folder of an ASP.NET application and register the .dll in the Web.config file, as shown in the following code.  \n  \n```  \n<compilation debug=\"true\" assemblyPostProcessorType=\"Samples.Process.postProcessTest\" />  \n```  \n  \n When a user visits the Web site, the Web application is dynamically compiled and the file MyTest.txt will be written to C:\\compile."
  syntax:
    content: 'public interface IAssemblyPostProcessor : IDisposable'
  implements:
  - System.IDisposable
  platform:
  - net462
- uid: System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)
  id: PostProcessAssembly(System.String)
  parent: System.Web.Compilation.IAssemblyPostProcessor
  langs:
  - csharp
  name: PostProcessAssembly(String)
  nameWithType: IAssemblyPostProcessor.PostProcessAssembly(String)
  fullName: System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "어셈블리를 구현 하는 클래스는 어셈블리를 수정할 수 있도록 로드 되기 전에 호출 됩니다."
  remarks: "<xref:System.Web.Compilation.AssemblyBuilder>클래스는 어셈블리를 컴파일한 후에이 메서드를 호출 합니다.</xref:System.Web.Compilation.AssemblyBuilder> 이 메서드에서 어셈블리를 로드 하기 전에 수행할 작업 포함 되어야 합니다."
  example:
  - "The following code example demonstrates how to create an implementation of the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface, and register it in the Web.config file of a Web application.  \n  \n The first part of the code example creates a class named `Samples.Process.postProcessTest` that implements the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface. This class performs the simple action of writing a file when the PostProcessAssembly method is called.  \n  \n [!code-vb[System.Web.Compilation.IAssemblyPostProcessor#1](~/add/codesnippet/visualbasic/30b129b5-63b2-48bd-ad9f-_1.vb)]\n [!code-cs[System.Web.Compilation.IAssemblyPostProcessor#1](~/add/codesnippet/csharp/30b129b5-63b2-48bd-ad9f-_1.cs)]  \n  \n Compile the class into a .dll file with the command `csc /target:library postProcessTest.cs`. Add the resulting .dll file to the Bin folder of an ASP.NET application and register the .dll in the Web.config file, as shown in the following code.  \n  \n```  \n<compilation debug=\"true\" assemblyPostProcessorType=\"Samples.Process.postProcessTest\" />  \n```  \n  \n When a user visits the Web site, the Web application is dynamically compiled and the file MyTest.txt will be written to C:\\compile."
  syntax:
    content: public void PostProcessAssembly (string path);
    parameters:
    - id: path
      type: System.String
      description: "어셈블리에 대 한 경로입니다."
  overload: System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)
  parent: System.Web.Compilation.IAssemblyPostProcessor
  isExternal: false
  name: PostProcessAssembly(String)
  nameWithType: IAssemblyPostProcessor.PostProcessAssembly(String)
  fullName: System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly*
  parent: System.Web.Compilation.IAssemblyPostProcessor
  isExternal: false
  name: PostProcessAssembly
  nameWithType: IAssemblyPostProcessor.PostProcessAssembly
