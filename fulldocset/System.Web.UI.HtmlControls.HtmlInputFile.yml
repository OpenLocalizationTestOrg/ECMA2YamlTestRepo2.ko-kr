### YamlMime:ManagedReference
items:
- uid: System.Web.UI.HtmlControls.HtmlInputFile
  id: HtmlInputFile
  children:
  - System.Web.UI.HtmlControls.HtmlInputFile.#ctor
  - System.Web.UI.HtmlControls.HtmlInputFile.Accept
  - System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.UI.HtmlControls.HtmlInputFile.MaxLength
  - System.Web.UI.HtmlControls.HtmlInputFile.OnPreRender(System.EventArgs)
  - System.Web.UI.HtmlControls.HtmlInputFile.PostedFile
  - System.Web.UI.HtmlControls.HtmlInputFile.RaisePostDataChangedEvent
  - System.Web.UI.HtmlControls.HtmlInputFile.Size
  - System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  - System.Web.UI.HtmlControls.HtmlInputFile.Value
  langs:
  - csharp
  name: HtmlInputFile
  nameWithType: HtmlInputFile
  fullName: System.Web.UI.HtmlControls.HtmlInputFile
  type: Class
  summary: "HTML에 프로그래밍 방식으로 액세스할 수 있도록 <xref uid=&quot;langword_csharp_&lt;input type= file&gt;&quot; name=&quot;&lt;input type= file&gt;&quot; href=&quot;&quot;> </xref> 서버에 대 한 요소입니다."
  remarks: "Use the HtmlInputFile server control to handle uploading binary or text files from a browser client to the server. File upload works with Microsoft Internet Explorer version 3.02 or later.  \n  \n> [!NOTE]\n>  The HtmlInputFile control is designed to be used only in postback scenarios and not in asynchronous postback scenarios during partial-page rendering. When you use a HtmlInputFile control inside an <xref:System.Web.UI.UpdatePanel> control, the file must be uploaded by using a control that is a <xref:System.Web.UI.PostBackTrigger> object for the panel. <xref:System.Web.UI.UpdatePanel> controls are used to update selected regions of a page instead of updating the whole page with a postback. For more information, see [UpdatePanel Control Overview](~/add/includes/ajax-current-ext-md.md) and [Partial-Page Rendering Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n To specify the file to upload, enter the full path to the file (for example, \"C:\\MyFiles\\Test.txt\") in the text box of the control. You can also select the file by clicking the **Browse** button and then locating it in the **Choose file** dialog box.  \n  \n> [!NOTE]\n>  The <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> property of an <xref:System.Web.UI.HtmlControls.HtmlForm> control must be set to \"multipart/form-data\" for this control to work properly.  \n  \n The HtmlInputFile control does not have a built-in way to post back to the server. To upload the file to the server, use the <xref:System.Web.HttpPostedFile.SaveAs%2A> method of the <xref:System.Web.HttpPostedFile?displayProperty=fullName> object contained in the <xref:System.Web.UI.HtmlControls.HtmlInputFile.PostedFile%2A> property. This operation is usually done in an event-handling method, such as for a button click.  \n  \n> [!NOTE]\n>  When you use the <xref:System.Web.HttpPostedFile.SaveAs%2A> method of the <xref:System.Web.HttpPostedFile> class, make sure to specify a rooted path (for example, \"C:\\MyFiles\\Test.txt\"). The behavior of the <xref:System.Web.HttpPostedFile.SaveAs%2A> method can be specified in the [httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369) configuration section with the `requireRootedSaveAsPath` attribute. The default value of this attribute is `true`. If you set this attribute to `false`, then using the <xref:System.Web.HttpPostedFile.SaveAs%2A> method with no path specified will attempt to place the file in the `systemroot` \\system32\\inetsrv directory. By default, this directory is write-protected; therefore, the file can not be saved there. Make sure to provide write permission for the account used by ASP.NET for the directory where you want to store the file.  \n  \n When uploading large files, use the `maxRequestLength` attribute of the [httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369) element to increase the maximum allowable file size. A DNS error is generated in the browser when the file exceeds the specified size. You might also receive the following error message when uploading large files:  \n  \n aspnet_wp.exe (PID: 1520) was recycled because memory consumption exceeded 460 MB (60 percent of available RAM).  \n  \n If you encounter this error message, increase the value of the `memoryLimit` attribute in the [processModel Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/4b8fe20e-74c8-4566-b72c-ce5f83c8e32d) element of the Machine.config file.  \n  \n For a list of initial property values for an instance of HtmlInputFile, see the <xref:System.Web.UI.HtmlControls.HtmlInputFile.%23ctor%2A> constructor."
  example:
  - "The following code example demonstrates how to use the HtmlInputFile control to create a simple file upload scenario. For this example to work properly, you need to create a directory called `Temp` on your computer's drive C.  \n  \n [!code-vb[Classic HtmlInputFile Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.htmlcont_16_1.aspx)]\n [!code-cs[Classic HtmlInputFile Example#1](~/add/codesnippet/csharp/t-system.web.ui.htmlcont_16_1.aspx)]"
  syntax:
    content: >-
      [System.Web.UI.ValidationProperty("Value")]

      public class HtmlInputFile : System.Web.UI.HtmlControls.HtmlInputControl, System.Web.UI.IPostBackDataHandler
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.HtmlControls.HtmlControl
  - System.Web.UI.HtmlControls.HtmlInputControl
  implements:
  - System.Web.UI.IPostBackDataHandler
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableTheming
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.HtmlControls.HtmlControl.Attributes
  - System.Web.UI.HtmlControls.HtmlControl.CreateControlCollection
  - System.Web.UI.HtmlControls.HtmlControl.Disabled
  - System.Web.UI.HtmlControls.HtmlControl.GetAttribute(System.String)
  - System.Web.UI.HtmlControls.HtmlControl.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.HtmlControls.HtmlControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.HtmlControls.HtmlControl.SetAttribute(System.String,System.String)
  - System.Web.UI.HtmlControls.HtmlControl.Style
  - System.Web.UI.HtmlControls.HtmlControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.HtmlControls.HtmlControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.HtmlControls.HtmlControl.TagName
  - System.Web.UI.HtmlControls.HtmlControl.ViewStateIgnoresCase
  - System.Web.UI.HtmlControls.HtmlInputControl.Name
  - System.Web.UI.HtmlControls.HtmlInputControl.RenderAttributes(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.HtmlControls.HtmlInputControl.Type
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlInputFile.#ctor
  id: '#ctor'
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  langs:
  - csharp
  name: HtmlInputFile()
  nameWithType: HtmlInputFile.HtmlInputFile()
  fullName: System.Web.UI.HtmlControls.HtmlInputFile.HtmlInputFile()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.HtmlControls.HtmlInputFile&quot;> </xref> 클래스입니다."
  remarks: "이 생성자를 사용 하 여 만들고 <xref:System.Web.UI.HtmlControls.HtmlInputFile>클래스</xref:System.Web.UI.HtmlControls.HtmlInputFile> 의 새 인스턴스를 초기화 합니다.       다음 표에서 <xref:System.Web.UI.HtmlControls.HtmlInputFile>안내 하십시오.</xref:System.Web.UI.HtmlControls.HtmlInputFile> 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 초기 값 |   |--------------|-------------------|   | <xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>| 리터럴 문자열 &quot;file&quot;입니다. |</xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>"
  example:
  - "The following code example demonstrates how to create a new instance of the <xref:System.Web.UI.HtmlControls.HtmlInputFile> class. For this example to work properly, you need to create a directory called `Temp` on your computer's drive C.  \n  \n [!code-vb[HtmlInputFileCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmlcont_4_1.aspx)]\n [!code-cs[HtmlInputFileCtor#1](~/add/codesnippet/csharp/m-system.web.ui.htmlcont_4_1.aspx)]"
  syntax:
    content: public HtmlInputFile ();
    parameters: []
  overload: System.Web.UI.HtmlControls.HtmlInputFile.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlInputFile.Accept
  id: Accept
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  langs:
  - csharp
  name: Accept
  nameWithType: HtmlInputFile.Accept
  fullName: System.Web.UI.HtmlControls.HtmlInputFile.Accept
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "선택할 수 있는 파일 형식을 제한 하는 데 사용 되는 MIME 인코딩 쉼표로 구분 된 목록을 가져오거나 설정 합니다."
  remarks: "이 속성을 사용 하 여 서버에 업로드할 수 있는 파일 형식을 지정할 수 있습니다. 예를 들어 이미지 하 고 선택 영역을 제한 하려면이 속성을 설정 &quot;이미지 / *&quot;입니다.      > [!NOTE] >이 속성은 브라우저 별로 다르며 지원 합니다. 이 속성을 지원 하는지 여부를 확인 하려면 브라우저를 확인 합니다. 예상 되는 형식의 파일 인지 확인 하는 서버 쪽 코드를 사용 하는 것이 좋습니다."
  example:
  - "The following code example demonstrates how to use the Accept property to restrict the user from selecting any file other than an image file. For this example to work properly, you need to create a directory called `Temp` on your computer's drive C. Because support for the Accept property is browser-dependent, a server-side check is performed to ensure that only images are uploaded. An exception is thrown if the uploaded file can not be read as an <xref:System.Drawing.Image> type.  \n  \n [!code-vb[Classic HtmlInputFile.Accept Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmlcont_71_1.aspx)]\n [!code-cs[Classic HtmlInputFile.Accept Example#1](~/add/codesnippet/csharp/p-system.web.ui.htmlcont_71_1.aspx)]"
  syntax:
    content: public string Accept { get; set; }
    return:
      type: System.String
      description: "MIME 인코딩 쉼표로 구분 된 목록입니다."
  overload: System.Web.UI.HtmlControls.HtmlInputFile.Accept*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  id: LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  langs:
  - csharp
  name: LoadPostData(String,NameValueCollection)
  nameWithType: HtmlInputFile.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "포스트백 데이터에 대 한 처리는 <xref href=&quot;System.Web.UI.HtmlControls.HtmlInputFile&quot;> </xref> 제어 합니다."
  remarks: "<xref:System.Web.UI.HtmlControls.HtmlInputFile>구현 제어는 <xref:System.Web.UI.IPostBackDataHandler>인터페이스 메서드가 있는: <xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A?displayProperty=fullName>및 <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=fullName>.</xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=fullName> </xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A?displayProperty=fullName> </xref:System.Web.UI.IPostBackDataHandler> </xref:System.Web.UI.HtmlControls.HtmlInputFile> LoadPostData 메서드에 의해 호출 됩니다는 <xref:System.Web.UI.HtmlControls.HtmlInputFile.System%23Web%23UI%23IPostBackDataHandler%23RaisePostDataChangedEvent%2A>메서드와 항상 반환 `false`한다는 표시 이므로 하는 <xref:System.Web.UI.HtmlControls.HtmlInputFile>ASP.NET 페이지 프레임 워크에서 컨트롤의 상태를 관리 되지 않는.</xref:System.Web.UI.HtmlControls.HtmlInputFile> </xref:System.Web.UI.HtmlControls.HtmlInputFile.System%23Web%23UI%23IPostBackDataHandler%23RaisePostDataChangedEvent%2A>       LoadPostData 메서드의 기능을 확장 하는 컨트롤 개발자가 주로 사용 되는 <xref:System.Web.UI.HtmlControls.HtmlInputFile>컨트롤.</xref:System.Web.UI.HtmlControls.HtmlInputFile>"
  syntax:
    content: protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);
    parameters:
    - id: postDataKey
      type: System.String
      description: "컨트롤에 대 한 키 식별자입니다."
    - id: postCollection
      type: System.Collections.Specialized.NameValueCollection
      description: "들어오는 모든 이름 값의 컬렉션입니다."
    return:
      type: System.Boolean
      description: "이 메서드는 항상 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlInputFile.MaxLength
  id: MaxLength
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  langs:
  - csharp
  name: MaxLength
  nameWithType: HtmlInputFile.MaxLength
  fullName: System.Web.UI.HtmlControls.HtmlInputFile.MaxLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "클라이언트 컴퓨터에서 업로드할 파일에 대 한 파일 경로의 최대 길이 가져오거나 설정 합니다."
  remarks: "이 속성을 사용 하 여 업로드할 파일을 경로 대해 입력할 수 있는 문자 수에 대 한 제한을 지정할 수 있습니다.      > [!NOTE] >이 속성은 브라우저 별로 다르며 지원 합니다. 이 속성을 지원 하는지 여부를 확인 하려면 브라우저를 확인 합니다."
  syntax:
    content: public int MaxLength { get; set; }
    return:
      type: System.Int32
      description: "파일 경로의 최대 길이입니다. 기본값은-1로,이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.HtmlControls.HtmlInputFile.MaxLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlInputFile.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: HtmlInputFile.OnPreRender(EventArgs)
  fullName: System.Web.UI.HtmlControls.HtmlInputFile.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "발생는 <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref> 에 대 한 이벤트는 <xref href=&quot;System.Web.UI.HtmlControls.HtmlInputFile&quot;> </xref> 제어 합니다."
  remarks: "하는 경우 인코딩이 지정 되지 않은 웹 페이지에 대 한 <xref:System.Web.UI.HtmlControls.HtmlForm>컨트롤은 <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A>속성을 &quot;multipart/폼 데이터&quot;로 설정 합니다.</xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> </xref:System.Web.UI.HtmlControls.HtmlForm>"
  example:
  - "The following code example demonstrates how to override the OnPreRender method so that a `Title` attribute is always added to each custom <xref:System.Web.UI.HtmlControls.HtmlInputFile> control. For this example to work properly, you need to create a directory called `Temp` on your computer's drive C.  \n  \n [!code-vb[CustomHtmlInputFileOnPreRender#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmlcont_53_1.aspx)]\n [!code-cs[CustomHtmlInputFileOnPreRender#1](~/add/codesnippet/csharp/m-system.web.ui.htmlcont_53_1.aspx)]  \n  \n [!code-cs[CustomHtmlInputFileOnPreRender#2](~/add/codesnippet/csharp/m-system.web.ui.htmlcont_53_2.cs)]\n [!code-vb[CustomHtmlInputFileOnPreRender#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmlcont_53_2.vb)]"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.HtmlControls.HtmlInputFile.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlInputFile.PostedFile
  id: PostedFile
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  langs:
  - csharp
  name: PostedFile
  nameWithType: HtmlInputFile.PostedFile
  fullName: System.Web.UI.HtmlControls.HtmlInputFile.PostedFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "업로드 된 파일을 클라이언트에서 지정 된 액세스를 가져옵니다."
  remarks: "브라우저 보안 제한에서 여러 요청에 대해 유지 되 고이 값을 방지 합니다."
  example:
  - "The following code example demonstrates how to use the PostedFile property to initiate the utility that transfers the file to the server. Note that if the size of the uploaded file in bytes exceeds the value of the <xref:System.Web.HttpPostedFile.ContentLength%2A> property, the file is not uploaded. For this example to work properly, you need to create a directory called `Temp` on your computer's drive C.  \n  \n [!code-cs[Classic HtmlInputFile.PostedFile Example#1](~/add/codesnippet/csharp/p-system.web.ui.htmlcont_88_1.aspx)]\n [!code-vb[Classic HtmlInputFile.PostedFile Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmlcont_88_1.aspx)]"
  syntax:
    content: public System.Web.HttpPostedFile PostedFile { get; }
    return:
      type: System.Web.HttpPostedFile
      description: "A <xref href=&quot;System.Web.HttpPostedFile&quot;> </xref> 업로드할 파일에 액세스 하는 합니다."
  overload: System.Web.UI.HtmlControls.HtmlInputFile.PostedFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlInputFile.RaisePostDataChangedEvent
  id: RaisePostDataChangedEvent
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  langs:
  - csharp
  name: RaisePostDataChangedEvent()
  nameWithType: HtmlInputFile.RaisePostDataChangedEvent()
  fullName: System.Web.UI.HtmlControls.HtmlInputFile.RaisePostDataChangedEvent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "알립니다는 <xref href=&quot;System.Web.UI.HtmlControls.HtmlInputFile&quot;> </xref> 컨트롤의 상태가 변경 되었음을 제어 합니다."
  remarks: "<xref:System.Web.UI.HtmlControls.HtmlInputFile>구현 제어는 <xref:System.Web.UI.IPostBackDataHandler>인터페이스 메서드가 있는: <xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A?displayProperty=fullName>및 <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=fullName>.</xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=fullName> </xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A?displayProperty=fullName> </xref:System.Web.UI.IPostBackDataHandler> </xref:System.Web.UI.HtmlControls.HtmlInputFile> <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=fullName>메서드의 처리에 참여 하지 않습니다는 <xref:System.Web.UI.HtmlControls.HtmlInputFile>제어 하 고 인터페이스 구현 완료를 위해 포함 되었습니다.</xref:System.Web.UI.HtmlControls.HtmlInputFile> </xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=fullName>       RaisePostDataChangedEvent 메서드는 주로 컨트롤 개발자가 사용의 기능을 확장 하 고 <xref:System.Web.UI.HtmlControls.HtmlInputFile>컨트롤.</xref:System.Web.UI.HtmlControls.HtmlInputFile>"
  syntax:
    content: protected virtual void RaisePostDataChangedEvent ();
    parameters: []
  overload: System.Web.UI.HtmlControls.HtmlInputFile.RaisePostDataChangedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlInputFile.Size
  id: Size
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  langs:
  - csharp
  name: Size
  nameWithType: HtmlInputFile.Size
  fullName: System.Web.UI.HtmlControls.HtmlInputFile.Size
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "파일 경로를 입력 하 고 입력란의 너비를 가져오거나 설정 합니다."
  remarks: "이 속성을 사용 하 여 파일 경로 입력할 수 있는 입력란의 너비를 지정 합니다."
  example:
  - "The following code example demonstrates how to use the Size property to specify the width of the text box in which the user enters the file path. For this example to work properly, you need to create a directory called `Temp` on your computer's drive C.  \n  \n [!code-vb[Classic HtmlInputFile.Size Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmlcont_46_1.aspx)]\n [!code-cs[Classic HtmlInputFile.Size Example#1](~/add/codesnippet/csharp/p-system.web.ui.htmlcont_46_1.aspx)]"
  syntax:
    content: public int Size { get; set; }
    return:
      type: System.Int32
      description: "파일 경로 입력란의 너비입니다. 기본값은-1로,이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.HtmlControls.HtmlInputFile.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  id: System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  isEii: true
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  langs:
  - csharp
  name: System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  nameWithType: HtmlInputFile.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.HtmlControls.HtmlInputFile.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.HtmlControls.HtmlInputFile>인스턴스로 캐스팅 되는 <xref:System.Web.UI.IPostBackDataHandler>인터페이스.</xref:System.Web.UI.IPostBackDataHandler> </xref:System.Web.UI.HtmlControls.HtmlInputFile>"
  syntax:
    content: bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);
    parameters:
    - id: postDataKey
      type: System.String
      description: "컨트롤에 대 한 키 식별자입니다."
    - id: postCollection
      type: System.Collections.Specialized.NameValueCollection
      description: "들어오는 모든 이름 값의 컬렉션입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Web.UI.HtmlControls.HtmlInputFile&quot;> </xref> 컨트롤의 상태가 포스트백;의 결과로 변경 되었으면, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#LoadPostData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  id: System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  isEii: true
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  langs:
  - csharp
  name: System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  nameWithType: HtmlInputFile.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  fullName: System.Web.UI.HtmlControls.HtmlInputFile.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.HtmlControls.HtmlInputFile>인스턴스로 캐스팅 되는 <xref:System.Web.UI.IPostBackDataHandler>인터페이스.</xref:System.Web.UI.IPostBackDataHandler> </xref:System.Web.UI.HtmlControls.HtmlInputFile>"
  syntax:
    content: void IPostBackDataHandler.RaisePostDataChangedEvent ();
    parameters: []
  overload: System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlInputFile.Value
  id: Value
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  langs:
  - csharp
  name: Value
  nameWithType: HtmlInputFile.Value
  fullName: System.Web.UI.HtmlControls.HtmlInputFile.Value
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "클라이언트 컴퓨터에 있는 파일의 전체 경로 가져옵니다."
  remarks: "The Value property retrieves the full path of the file on the client's computer (for example \"C:\\MyFiles\\Test.txt\"). This is useful when you need to know where the file is stored on the computer submitting the file. This property is also commonly used to determine the original file name. To get the original file name, parse the value of this property.  \n  \n> [!NOTE]\n>  The Value property is read-only. If you attempt to assign a value to this property, a <xref:System.NotSupportedException?displayProperty=fullName> is thrown."
  example:
  - "The following code example demonstrates how to use the Value property to display the full path of the file on the client's computer. For this example to work properly, you need to create a directory called `Temp` on your computer's drive C.  \n  \n [!code-cs[HtmlInputFileValue#1](~/add/codesnippet/csharp/p-system.web.ui.htmlcont_29_1.aspx)]\n [!code-vb[HtmlInputFileValue#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmlcont_29_1.aspx)]"
  syntax:
    content: public override string Value { get; set; }
    return:
      type: System.String
      description: "클라이언트의 파일의 전체 경로입니다."
  overload: System.Web.UI.HtmlControls.HtmlInputFile.Value*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "이 속성에 값을 할당 하려고 했습니다."
  platform:
  - net462
references:
- uid: System.Web.UI.HtmlControls.HtmlInputControl
  isExternal: false
  name: System.Web.UI.HtmlControls.HtmlInputControl
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.HtmlControls.HtmlInputFile.#ctor
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  isExternal: false
  name: HtmlInputFile()
  nameWithType: HtmlInputFile.HtmlInputFile()
  fullName: System.Web.UI.HtmlControls.HtmlInputFile.HtmlInputFile()
- uid: System.Web.UI.HtmlControls.HtmlInputFile.Accept
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  isExternal: false
  name: Accept
  nameWithType: HtmlInputFile.Accept
  fullName: System.Web.UI.HtmlControls.HtmlInputFile.Accept
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  isExternal: false
  name: LoadPostData(String,NameValueCollection)
  nameWithType: HtmlInputFile.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData(String,NameValueCollection)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.UI.HtmlControls.HtmlInputFile.MaxLength
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  isExternal: false
  name: MaxLength
  nameWithType: HtmlInputFile.MaxLength
  fullName: System.Web.UI.HtmlControls.HtmlInputFile.MaxLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.HtmlControls.HtmlInputFile.OnPreRender(System.EventArgs)
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: HtmlInputFile.OnPreRender(EventArgs)
  fullName: System.Web.UI.HtmlControls.HtmlInputFile.OnPreRender(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.HtmlControls.HtmlInputFile.PostedFile
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  isExternal: false
  name: PostedFile
  nameWithType: HtmlInputFile.PostedFile
  fullName: System.Web.UI.HtmlControls.HtmlInputFile.PostedFile
- uid: System.Web.HttpPostedFile
  parent: System.Web
  isExternal: false
  name: HttpPostedFile
  nameWithType: HttpPostedFile
  fullName: System.Web.HttpPostedFile
- uid: System.Web.UI.HtmlControls.HtmlInputFile.RaisePostDataChangedEvent
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  isExternal: false
  name: RaisePostDataChangedEvent()
  nameWithType: HtmlInputFile.RaisePostDataChangedEvent()
  fullName: System.Web.UI.HtmlControls.HtmlInputFile.RaisePostDataChangedEvent()
- uid: System.Web.UI.HtmlControls.HtmlInputFile.Size
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  isExternal: false
  name: Size
  nameWithType: HtmlInputFile.Size
  fullName: System.Web.UI.HtmlControls.HtmlInputFile.Size
- uid: System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  nameWithType: HtmlInputFile.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.HtmlControls.HtmlInputFile.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
- uid: System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  nameWithType: HtmlInputFile.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  fullName: System.Web.UI.HtmlControls.HtmlInputFile.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
- uid: System.Web.UI.HtmlControls.HtmlInputFile.Value
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  isExternal: false
  name: Value
  nameWithType: HtmlInputFile.Value
  fullName: System.Web.UI.HtmlControls.HtmlInputFile.Value
- uid: System.Web.UI.HtmlControls.HtmlInputFile.#ctor*
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  isExternal: false
  name: HtmlInputFile
  nameWithType: HtmlInputFile.HtmlInputFile
- uid: System.Web.UI.HtmlControls.HtmlInputFile.Accept*
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  isExternal: false
  name: Accept
  nameWithType: HtmlInputFile.Accept
- uid: System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData*
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  isExternal: false
  name: LoadPostData
  nameWithType: HtmlInputFile.LoadPostData
- uid: System.Web.UI.HtmlControls.HtmlInputFile.MaxLength*
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  isExternal: false
  name: MaxLength
  nameWithType: HtmlInputFile.MaxLength
- uid: System.Web.UI.HtmlControls.HtmlInputFile.OnPreRender*
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  isExternal: false
  name: OnPreRender
  nameWithType: HtmlInputFile.OnPreRender
- uid: System.Web.UI.HtmlControls.HtmlInputFile.PostedFile*
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  isExternal: false
  name: PostedFile
  nameWithType: HtmlInputFile.PostedFile
- uid: System.Web.UI.HtmlControls.HtmlInputFile.RaisePostDataChangedEvent*
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  isExternal: false
  name: RaisePostDataChangedEvent
  nameWithType: HtmlInputFile.RaisePostDataChangedEvent
- uid: System.Web.UI.HtmlControls.HtmlInputFile.Size*
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  isExternal: false
  name: Size
  nameWithType: HtmlInputFile.Size
- uid: System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#LoadPostData*
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.LoadPostData
  nameWithType: HtmlInputFile.System.Web.UI.IPostBackDataHandler.LoadPostData
- uid: System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent*
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent
  nameWithType: HtmlInputFile.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent
- uid: System.Web.UI.HtmlControls.HtmlInputFile.Value*
  parent: System.Web.UI.HtmlControls.HtmlInputFile
  isExternal: false
  name: Value
  nameWithType: HtmlInputFile.Value
