### YamlMime:ManagedReference
items:
- uid: System.Net.NetworkInformation.Ping
  id: Ping
  children:
  - System.Net.NetworkInformation.Ping.#ctor
  - System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  - System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  - System.Net.NetworkInformation.Ping.PingCompleted
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  - System.Net.NetworkInformation.Ping.Send(System.String)
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsyncCancel
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  langs:
  - csharp
  name: Ping
  nameWithType: Ping
  fullName: System.Net.NetworkInformation.Ping
  type: Class
  summary: "응용을 프로그램을 원격 컴퓨터를 네트워크를 통해 액세스할 수 있는지 여부를 확인할 수 있습니다."
  remarks: "원격 컴퓨터에 연결할 수 있는지 확인 하려면 Ping 클래스를 사용 하는 응용 프로그램입니다.       네트워크 토폴로지 Ping 원격 호스트에 연결할 수 있는지 여부를 결정할 수 있습니다. 존재 여부와 프록시, 네트워크 주소 변환 (NAT) 장치 또는 방화벽의 구성을 성공 Ping을 방지할 수 있습니다. Ping이 성공 원격 호스트는 네트워크에서 액세스 될 수 있는지 여부만 나타냅니다. 원격 호스트에서 더 높은 수준의 서비스 (예: 웹 서버)의 존재를 보장 되지 않습니다.       이 클래스는 Ping.exe 명령줄 도구와 유사한 기능을 제공합니다. <xref:System.Net.NetworkInformation.Ping.Send%2A>및 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>메서드 해당 컴퓨터에서 원격 컴퓨터에서 ICMP 에코 응답 메시지에 대 한 대기 작업을 제어 메시지 ICMP (Internet Protocol) 에코 요청 메시지를 보냅니다.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> 에 대 한 자세한 설명은 ICMP 메시지를 참조에서 사용할 수 있는 RFC 792 [http://www.ietf.org](http://www.ietf.org/)합니다.       유형은 다음과 Ping 클래스와 함께 사용 되 고 아래에서 자세히 설명 합니다.      | **유형 이름**|**설명**|   |-------------------|---------------------|   | <xref:System.Net.NetworkInformation.IPStatus>| ICMP 에코 요청 메시지의 결과 설명 하는 상태 코드를 정의 합니다. |   | <xref:System.Net.NetworkInformation.PingOptions>| 구성 하거나 요청 패킷 (<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>)를 전달할 수 있습니다 하는 횟수를 제어 하는 설정을 검색할 수 있습니다 여부 조각난된 (<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> ) 수 있습니다. |   | <xref:System.Net.NetworkInformation.PingReply>| ICMP 에코 요청의 결과 포함 합니다. |   | <xref:System.Net.NetworkInformation.PingException>| 복구할 수 없는 오류가 발생 한 경우 throw 합니다. |   | <xref:System.Net.NetworkInformation.PingCompletedEventArgs>| <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>호출이 완료 되거나 취소 될 때 발생 하는 <xref:System.Net.NetworkInformation.Ping.PingCompleted>이벤트와 관련 된 데이터를 포함 합니다. |   | <xref:System.Net.NetworkInformation.PingCompletedEventHandler>| <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>호출이 완료 되거나 취소 될 때 호출할 콜백 메서드를 제공 하는 대리자입니다. |       <xref:System.Net.NetworkInformation.Ping.Send%2A>및 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>에 회신을 반환 하는 메서드는 <xref:System.Net.NetworkInformation.PingReply>개체입니다.</xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler>  </xref:System.Net.NetworkInformation.Ping.PingCompleted></xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> </xref:System.Net.NetworkInformation.PingException> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.PingOptions> </xref:System.Net.NetworkInformation.IPStatus> <xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=fullName>속성에서 반환 된 <xref:System.Net.NetworkInformation.IPStatus>요청의 결과 나타내는 값을.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=fullName>       요청을 보낼 때 원격 컴퓨터를 지정 해야 합니다. 이름 문자열을 문자열 형식으로 IP 주소는 호스트를 제공 하 여이 작업을 수행할 수 또는 <xref:System.Net.IPAddress>개체입니다.</xref:System.Net.IPAddress>       다음과 같은 유형의 정보를 지정할 수도 있습니다:-데이터를 요청을 함께 사용 해야 합니다. 지정 `buffer` 특정 크기의 패킷을 원격 호스트와의 네트워크 경로의 최대 전송 단위 받는 데 필요한 시간을 알 수 있습니다. (참조는 <xref:System.Net.NetworkInformation.Ping.Send%2A> <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>오버 또는 `buffer` 매개 변수.)      -ICMP 에코 패킷을 전송 중에 조각화 될 수 있습니다 여부.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> ( <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>속성과 <xref:System.Net.NetworkInformation.Ping.Send%2A>보거나 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>를 오버 로드 하는 데 걸릴는 `options` 매개 변수.)      -횟수 라우팅 노드 예: 라우터 또는 게이트웨이와 대상 컴퓨터에 도달 하거나 삭제 하기 전에 패킷을 전달할 수 있습니다.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> </xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> ( <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>보고는 <xref:System.Net.NetworkInformation.Ping.Send%2A> <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>오버 또는 `options` 매개 변수.)      -시간 제한이 있는 회신을 수신 해야 합니다.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> </xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> (참조는 <xref:System.Net.NetworkInformation.Ping.Send%2A>또는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>해당 오버 로드는 `timeout` 매개 변수.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A>       Ping 클래스는 요청을 보내기 위한 동기 및 비동기 메서드를 제공 합니다. 을 회신에 대 한 대기 하는 동안 응용 프로그램을 차단 해야 하는 경우 사용 하 여는 <xref:System.Net.NetworkInformation.Ping.Send%2A>메서드; 이러한 메서드는 동기적입니다.</xref:System.Net.NetworkInformation.Ping.Send%2A> 응용 프로그램을 차단 하지 않아야 하는 경우 사용 하 여 비동기 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>메서드.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 에 대 한 호출 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>스레드 풀에서 자동으로 할당 되는 자체 스레드에서 실행 됩니다.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 비동기 작업이 완료 되 면 발생는 <xref:System.Net.NetworkInformation.Ping.PingCompleted>이벤트.</xref:System.Net.NetworkInformation.Ping.PingCompleted> 응용 프로그램 사용을 <xref:System.Net.NetworkInformation.PingCompletedEventHandler>호출 되는 방법을 지정 하는 대리자 <xref:System.Net.NetworkInformation.Ping.PingCompleted>이벤트.</xref:System.Net.NetworkInformation.Ping.PingCompleted> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> <xref:System.Net.NetworkInformation.PingCompletedEventHandler>대리자 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 를 호출 하기 전에 이벤트를</xref:System.Net.NetworkInformation.PingCompletedEventHandler> 추가 해야 합니다. 대리자의 메서드는 <xref:System.Net.NetworkInformation.PingCompletedEventArgs>포함 된 개체는 <xref:System.Net.NetworkInformation.PingReply>의 결과 설명 하는 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>호출.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs>       여러 개의 ICMP 에코 요청을 생성 하는 Ping 클래스의 동일한 인스턴스를 사용할 수 없습니다. <xref:System.Net.NetworkInformation.Ping.Send%2A> <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>호출이 호출 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>여러 번 전에 모든 이전 호출 완료 <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 또는 진행 중인</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 동안</xref:System.Net.NetworkInformation.Ping.Send%2A> 호출"
  example:
  - "The following code example demonstrates using the Ping class synchronously.  \n  \n [!code-cs[NCLPingSync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_4_1.cs)]\n [!code-cpp[NCLPingSync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_4_1.cpp)]  \n  \n The following code example demonstrates using the Ping class asynchronously.  \n  \n [!code-cpp[NCLPingASync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_4_2.cpp)]\n [!code-cs[NCLPingASync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_4_2.cs)]"
  syntax:
    content: 'public class Ping : System.ComponentModel.Component'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Ping()
  nameWithType: Ping.Ping()
  fullName: System.Net.NetworkInformation.Ping.Ping()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.NetworkInformation.Ping&quot;> </xref> 클래스입니다."
  remarks: ''
  example:
  - "The following code example demonstrates creating a <xref:System.Net.NetworkInformation.Ping> instance. The complete example is available in the <xref:System.Net.NetworkInformation.Ping> class overview.  \n  \n [!code-cpp[NCLPingAsync#2](~/add/codesnippet/cpp/m-system.net.networkinfo_4_1.cpp)]\n [!code-cs[NCLPingAsync#2](~/add/codesnippet/csharp/m-system.net.networkinfo_4_1.cs)]"
  syntax:
    content: public Ping ();
    parameters: []
  overload: System.Net.NetworkInformation.Ping.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Ping.Dispose(Boolean)
  fullName: System.Net.NetworkInformation.Ping.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "사용 하는 관리 되지 않는 리소스를 해제는 <xref href=&quot;System.Net.NetworkInformation.Ping&quot;> </xref> 개체를 관리 되는 리소스를 선택적으로 삭제 합니다."
  remarks: "이 메서드는 public `Dispose()` 메서드 및 <xref:System.ComponentModel.Component.Finalize%2A>메서드.</xref:System.ComponentModel.Component.Finalize%2A> 공용 `Dispose()` 여 보호 된 Dispose 메서드를 호출 하는 메서드는 `disposing` 매개 변수 설정 `true`합니다. <xref:System.ComponentModel.Component.Finalize%2A>호출 `Dispose` 와 `disposing` 로 설정 `false`합니다.</xref:System.ComponentModel.Component.Finalize%2A>       경우는 `disposing` 매개 변수는 `true`,이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <xref:System.Net.NetworkInformation.Ping>개체에서 참조.</xref:System.Net.NetworkInformation.Ping> 이 메서드 호출에서 `Dispose()` 각 참조 된 개체의 메서드."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 관리 되지 않는 리소스를 해제 합니다."
  overload: System.Net.NetworkInformation.Ping.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  id: OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: OnPingCompleted(PingCompletedEventArgs)
  nameWithType: Ping.OnPingCompleted(PingCompletedEventArgs)
  fullName: System.Net.NetworkInformation.Ping.OnPingCompleted(PingCompletedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "발생 된 <xref href=&quot;System.Net.NetworkInformation.Ping.PingCompleted&quot;> </xref> 이벤트입니다."
  remarks: "클래스에서 상속 되는 <xref:System.Net.NetworkInformation.Ping>클래스에 포함 된 데이터를 기록 하는 등의 추가 작업을 수행 하려면이 메서드를 재정의할 수 있습니다는 `e` 매개 변수.</xref:System.Net.NetworkInformation.Ping>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnPingCompleted 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected void OnPingCompleted (System.Net.NetworkInformation.PingCompletedEventArgs e);
    parameters:
    - id: e
      type: System.Net.NetworkInformation.PingCompletedEventArgs
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingCompletedEventArgs&quot;> </xref> 이벤트 데이터를 포함 하는 개체입니다."
  overload: System.Net.NetworkInformation.Ping.OnPingCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.PingCompleted
  id: PingCompleted
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: PingCompleted
  nameWithType: Ping.PingCompleted
  fullName: System.Net.NetworkInformation.Ping.PingCompleted
  type: Event
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "제어 메시지 ICMP (Internet Protocol) 에코 메시지를 보내고 해당 ICMP 에코 응답 메시지를 수신 하기 위해 비동기 작업 완료 되거나 취소 될 때 발생 합니다."
  remarks: "응용 프로그램 PingCompleted 이벤트를 사용 하 여 완료 상태 및 중 하나를 호출 하 여 수집 된 데이터에 대 한 정보를 가져올 수는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>메서드.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> <xref:System.Net.NetworkInformation.PingCompletedEventHandler>대리자 호출 제공 될 때 콜백 메서드 호출 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>이 이벤트를 발생 시킵니다.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler>"
  example:
  - "The following code example demonstrates specifying a callback method for the PingCompleted event. The complete example is available in the <xref:System.Net.NetworkInformation.Ping> class overview.  \n  \n [!code-cpp[NCLPingAsync#2](~/add/codesnippet/cpp/e-system.net.networkinfo_1.cpp)]\n [!code-cs[NCLPingAsync#2](~/add/codesnippet/csharp/e-system.net.networkinfo_1.cs)]"
  syntax:
    content: public event System.Net.NetworkInformation.PingCompletedEventHandler PingCompleted;
    return:
      type: System.Net.NetworkInformation.PingCompletedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  id: Send(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress)
  nameWithType: Ping.Send(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "가 지정 하는 컴퓨터에는 제어 메시지 ICMP (Internet Protocol) 에코 메시지를 보내려고 시도 <xref:System.Net.IPAddress>, 해당 컴퓨터에서 해당 ICMP 에코 응답 메시지를 수신 합니다.</xref:System.Net.IPAddress>"
  remarks: "지정 된 호스트에이 메서드는 전송 `address` 32 <xref:System.Byte>ICMP 에코 메시지와 함께 데이터 버퍼.</xref:System.Byte> 메서드는 ICMP 에코 응답 메시지에 대 한&5; 초 동안 대기합니다. 시간, 메서드가 반환 하 고 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> 속성</xref:System.Net.NetworkInformation.PingReply.Status%2A> 에서 응답을 수신 하지 않는 경우       이 오버 로드 패킷 조각화 및 패킷 전송에 대 한 기본 설정을 사용합니다. ICMP 에코 메시지를 포함 하는 패킷 수 조각화 전송 중에는 총 패킷 크기는 전송할 수 있는 최대 패킷 크기를 초과 하는 경우 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서. 조각화를 방지 하려면 중 하나를 사용는 <xref:System.Net.NetworkInformation.Ping.Send%2A>를 사용 하는 메서드는 `options` 집합과, 매개 변수는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>속성을 `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> 때 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>은 `true` 및 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기, ICMP 에코 요청 실패.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> 패킷 또는 (조각화 된 경우)에 패킷 조각이 삭제 되기 전에 라우팅 노드에 의해 128 번 전달 될 수 있습니다. 이 설정을 변경 하려면 사용는 <xref:System.Net.NetworkInformation.Ping.Send%2A>사용 오버 로드는 `options` 매개 변수를 설정은 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>속성을 원하는 값으로.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NCLPingSampler#3](~/add/codesnippet/csharp/m-system.net.networkinfo_5_1.cs)]\n [!code-cpp[NCLPingSampler#3](~/add/codesnippet/cpp/m-system.net.networkinfo_5_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>ICMP 에코 메시지의 대상인 컴퓨터를 식별 하는.</xref:System.Net.IPAddress>"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> 하나를 수신 하거나 메시지를 받지 못한 경우 실패 한 이유를 설명 하는 경우 ICMP 에코 응답 메시지에 대 한 정보를 제공 하는 개체입니다."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "에 대 한 호출 <xref:System.Net.NetworkInformation.Ping.SendAsync*>진행 중입니다.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> 이 IPv6 주소가 고 로컬 컴퓨터의 Windows 2000 이전 버전 운영 체제를 실행 합니다."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP 메시지를 송수신 하는 동안 예외가 발생 했습니다. Throw 된 정확한 예외에 대 한 내부 예외를 참조 하십시오."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String)
  id: Send(System.String)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String)
  nameWithType: Ping.Send(String)
  fullName: System.Net.NetworkInformation.Ping.Send(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "지정한 컴퓨터에 제어 메시지 ICMP (Internet Protocol) 에코 메시지를 보내고 해당 ICMP를 수신 하려는 시도 해당 컴퓨터에서 회신 메시지를 에코 됩니다."
  remarks: "이 메서드는 전송 32 <xref:System.Byte>ICMP 에코 메시지와 함께 데이터 버퍼.</xref:System.Byte> 메서드는 ICMP 에코 응답 메시지에 대 한&5; 초 동안 대기합니다. 시간, 메서드가 반환 하 고 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> 속성</xref:System.Net.NetworkInformation.PingReply.Status%2A> 에서 응답을 수신 하지 않는 경우       이 오버 로드 패킷 조각화 및 패킷 전송에 대 한 기본 설정을 사용합니다. ICMP 에코 메시지를 포함 하는 패킷 수 조각화 전송 중에는 총 패킷 크기는 전송할 수 있는 최대 패킷 크기를 초과 하는 경우 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서. 조각화를 방지 하려면 중 하나를 사용는 <xref:System.Net.NetworkInformation.Ping.Send%2A>를 사용 하는 메서드는 `options` 집합과, 매개 변수는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>속성을 `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> 때 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>은 `true` 및 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기, ICMP 에코 요청 실패.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> 패킷 또는 (조각화 된 경우)에 패킷 조각이 삭제 되기 전에 라우팅 노드에 의해 128 번 전달 될 수 있습니다. 이 설정을 변경 하려면 사용는 <xref:System.Net.NetworkInformation.Ping.Send%2A>사용 오버 로드는 `options` 매개 변수를 설정은 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>속성을 원하는 값으로.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NCLPingSampler#2](~/add/codesnippet/csharp/m-system.net.networkinfo_2_1.cs)]\n [!code-cpp[NCLPingSampler#2](~/add/codesnippet/cpp/m-system.net.networkinfo_2_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>ICMP 에코 메시지의 대상인 컴퓨터를 식별 하는.</xref:System.String> 이 매개 변수에 대해 지정 된 값은 호스트 이름 또는 IP 주소에 대 한 문자열 표현을 수 있습니다."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> 메시지를 받지 못한 경우 수신 하나 또는 실패에 대 한 이유를 제공 하는 경우 ICMP 에코 응답 메시지에 대 한 정보를 제공 하는 개체입니다."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이거나 빈 문자열 (&quot;&quot;)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "에 대 한 호출 <xref:System.Net.NetworkInformation.Ping.SendAsync*>진행 중입니다.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> 이 IPv6 주소가 고 로컬 컴퓨터의 Windows 2000 이전 버전 운영 체제를 실행 합니다."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP 메시지를 송수신 하는 동안 예외가 발생 했습니다. Throw 된 정확한 예외에 대 한 내부 예외를 참조 하십시오."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  id: Send(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32)
  nameWithType: Ping.Send(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "가 지정 하는 컴퓨터에 지정된 된 데이터 버퍼를 사용 하는 제어 메시지 ICMP (Internet Protocol) 에코 메시지를 보내려고 시도 <xref:System.Net.IPAddress>, 해당 컴퓨터에서 해당 ICMP 에코 응답 메시지를 수신 합니다.</xref:System.Net.IPAddress> 이 메서드를 사용 하는 작업에 대 한 제한 시간 값을 지정할 수 있습니다."
  remarks: "ICMP 에코 응답 메시지에 지정 된 시간 안에 수신 되지 않으면는 `timeout` 매개 변수, ICMP 에코 실패 하 고 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> 속성</xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] >에 대 한 매우 작은 수를 지정 하는 경우 `timeout`, Ping 응답을 받을 수 있는 경우에 `timeout` 밀리초가 경과 합니다.       이 오버 로드 패킷 조각화 및 패킷 전송에 대 한 기본 설정을 사용합니다. ICMP 에코 메시지를 포함 하는 패킷 수 조각화 전송 중에는 총 패킷 크기는 전송할 수 있는 최대 패킷 크기를 초과 하는 경우 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서. 조각화를 방지 하려면 중 하나를 사용는 <xref:System.Net.NetworkInformation.Ping.Send%2A>를 사용 하는 메서드는 `options` 집합과, 매개 변수는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>속성을 `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> 때 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>은 `true` 및 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기, ICMP 에코 요청 실패.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       패킷 또는 패킷 조각을 삭제 되기 전에 라우팅 노드에 의해 128 번 전달 될 수 있습니다. 이 설정을 변경 하려면 사용는 <xref:System.Net.NetworkInformation.Ping.Send%2A>사용 오버 로드는 `options` 매개 변수를 설정은 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>속성을 원하는 값으로.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.Send%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>ICMP 에코 메시지의 대상인 컴퓨터를 식별 하는.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>echo 메시지 보내기) (이후 시간 (밀리초)의 최대 수를 지정 하는 값 ICMP 에코 응답 메시지에 대해 기다려야 합니다.</xref:System.Int32>"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> 하나를 수신 하거나 메시지를 받지 못한 경우 실패 한 이유를 제공 하는 경우 ICMP 에코 응답 메시지에 대 한 정보를 제공 하는 개체입니다."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>가&0; 보다 작습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "에 대 한 호출 <xref:System.Net.NetworkInformation.Ping.SendAsync*>진행 중입니다.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> 이 IPv6 주소가 고 로컬 컴퓨터의 Windows 2000 이전 버전 운영 체제를 실행 합니다."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP 메시지를 송수신 하는 동안 예외가 발생 했습니다. Throw 된 정확한 예외에 대 한 내부 예외를 참조 하십시오."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  id: Send(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32)
  nameWithType: Ping.Send(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "지정한 컴퓨터에 제어 메시지 ICMP (Internet Protocol) 에코 메시지를 보내고 해당 ICMP를 수신 하려는 시도 해당 컴퓨터에서 회신 메시지를 에코 됩니다. 이 메서드를 사용 하는 작업에 대 한 제한 시간 값을 지정할 수 있습니다."
  remarks: "ICMP 에코 응답 메시지에 지정 된 시간 안에 수신 되지 않으면는 `timeout` 매개 변수, ICMP 에코 실패 하 고 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> 속성</xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] >에 대 한 매우 작은 수를 지정 하는 경우 `timeout`, Ping 응답을 받을 수 있는 경우에 `timeout` 밀리초가 경과 합니다.       이 오버 로드 패킷 조각화 및 패킷 전송에 대 한 기본 설정을 사용합니다. ICMP 에코 메시지를 포함 하는 패킷 수 조각화 전송 중에는 총 패킷 크기는 전송할 수 있는 최대 패킷 크기를 초과 하는 경우 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서. 조각화를 방지 하려면 중 하나를 사용는 <xref:System.Net.NetworkInformation.Ping.Send%2A>를 사용 하는 메서드는 `options` 집합과, 매개 변수는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>속성을 `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> 때 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>은 `true` 및 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기, ICMP 에코 요청 실패.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> 패킷 또는 (조각화 된 경우)에 패킷 조각이 삭제 되기 전에 라우팅 노드에 의해 128 번 전달 될 수 있습니다. 이 설정을 변경 하려면 사용는 <xref:System.Net.NetworkInformation.Ping.Send%2A>사용 오버 로드는 `options` 매개 변수를 설정은 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>속성을 원하는 값으로.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.Send%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>ICMP 에코 메시지의 대상인 컴퓨터를 식별 하는.</xref:System.String> 이 매개 변수에 대해 지정 된 값은 호스트 이름 또는 IP 주소에 대 한 문자열 표현을 수 있습니다."
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>echo 메시지 보내기) (이후 시간 (밀리초)의 최대 수를 지정 하는 값 ICMP 에코 응답 메시지에 대해 기다려야 합니다.</xref:System.Int32>"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> 하나를 수신 하거나 메시지를 받지 못한 경우 실패 한 이유를 제공 하는 경우 ICMP 에코 응답 메시지에 대 한 정보를 제공 하는 개체입니다."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이거나 빈 문자열 (&quot;&quot;)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>가&0; 보다 작습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "에 대 한 호출 <xref:System.Net.NetworkInformation.Ping.SendAsync*>진행 중입니다.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP 메시지를 송수신 하는 동안 예외가 발생 했습니다. Throw 된 정확한 예외에 대 한 내부 예외를 참조 하십시오."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  id: Send(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32,Byte[])
  nameWithType: Ping.Send(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "가 지정 하는 컴퓨터에 지정된 된 데이터 버퍼를 사용 하는 제어 메시지 ICMP (Internet Protocol) 에코 메시지를 보내려고 시도 <xref:System.Net.IPAddress>, 해당 컴퓨터에서 해당 ICMP 에코 응답 메시지를 수신 합니다.</xref:System.Net.IPAddress> 이 오버 로드를 사용 하는 작업에 대 한 시간 제한 값을 지정할 수 있습니다."
  remarks: "ICMP 에코 응답 메시지에 지정 된 시간 안에 수신 되지 않으면는 `timeout` 매개 변수, ICMP 에코 실패 하 고 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> 속성</xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] >에 대 한 매우 작은 수를 지정 하는 경우 `timeout`, Ping 응답을 받을 수 있는 경우에 `timeout` 밀리초가 경과 합니다.       이 오버 로드 패킷 조각화 및 패킷 전송에 대 한 기본 설정을 사용합니다. ICMP 에코 메시지를 포함 하는 패킷 수 조각화 전송 중에는 총 패킷 크기는 전송할 수 있는 최대 패킷 크기를 초과 하는 경우 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서. 조각화를 방지 하려면 중 하나를 사용는 <xref:System.Net.NetworkInformation.Ping.Send%2A>를 사용 하는 메서드는 `options` 집합과, 매개 변수는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>속성을 `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> 때 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>은 `true` 및 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기, ICMP 에코 요청 실패.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       패킷 또는 패킷 조각을 삭제 되기 전에 라우팅 노드에 의해 128 번 전달 될 수 있습니다. 이 설정을 변경 하려면 사용는 <xref:System.Net.NetworkInformation.Ping.Send%2A>사용 오버 로드는 `options` 매개 변수를 설정은 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>속성을 원하는 값으로.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#6](~/add/codesnippet/csharp/b44ef8f6-ad7e-49c2-8af4-_1.cs)]\n [!code-cpp[NCLPingSampler#6](~/add/codesnippet/cpp/b44ef8f6-ad7e-49c2-8af4-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>ICMP 에코 메시지의 대상인 컴퓨터를 식별 하는.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>echo 메시지 보내기) (이후 시간 (밀리초)의 최대 수를 지정 하는 값 ICMP 에코 응답 메시지에 대해 기다려야 합니다.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>ICMP 에코 메시지와 함께 전송 되어 ICMP 에코 응답 메시지에 반환 된 데이터가 포함 된 배열.</xref:System.Byte> 배열에는 65, 500 바이트 보다 포함할 수 없습니다."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> 메시지를 받지 못한 경우 수신 하나 또는 실패에 대 한 이유를 제공 하는 경우 ICMP 에코 응답 메시지에 대 한 정보를 제공 하는 개체입니다. 메서드는 반환 <xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref> 패킷의 최대 전송 단위 (MTU)를 초과 하는 경우."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "크기 <code> buffer </code> 65500 바이트를 초과 합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는- <code>buffer</code> 은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 또는 <code>buffer</code> 크기는 65500 바이트를 초과 합니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>가&0; 보다 작습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "에 대 한 호출 <xref:System.Net.NetworkInformation.Ping.SendAsync*>진행 중입니다.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> 이 IPv6 주소가 고 로컬 컴퓨터의 Windows 2000 이전 버전 운영 체제를 실행 합니다."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP 메시지를 송수신 하는 동안 예외가 발생 했습니다. Throw 된 정확한 예외에 대 한 내부 예외를 참조 하십시오."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  id: Send(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32,Byte[])
  nameWithType: Ping.Send(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "지정한 컴퓨터에 지정된 된 데이터 버퍼를 사용 하는 제어 메시지 ICMP (Internet Protocol) 에코 메시지를 보내고 해당 ICMP를 수신 하려는 시도 해당 컴퓨터에서 회신 메시지를 에코 됩니다. 이 오버 로드를 사용 하는 작업에 대 한 시간 제한 값을 지정할 수 있습니다."
  remarks: "ICMP 에코 응답 메시지에 지정 된 시간 안에 수신 되지 않으면는 `timeout` 매개 변수, ICMP 에코 실패 하 고 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> 속성</xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] >에 대 한 매우 작은 수를 지정 하는 경우 `timeout`, Ping 응답을 받을 수 있는 경우에 `timeout` 밀리초가 경과 합니다.       이 오버 로드 패킷 조각화 및 패킷 전송에 대 한 기본 설정을 사용합니다. ICMP 에코 메시지를 포함 하는 패킷 수 조각화 전송 중에는 총 패킷 크기는 전송할 수 있는 최대 패킷 크기를 초과 하는 경우 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서. 조각화를 방지 하려면 중 하나를 사용는 <xref:System.Net.NetworkInformation.Ping.Send%2A>를 사용 하는 메서드는 `options` 집합과, 매개 변수는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>속성을 `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> 때 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>은 `true` 및 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기, ICMP 에코 요청 실패.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       패킷 또는 패킷 조각을 삭제 되기 전에 라우팅 노드에 의해 128 번 전달 될 수 있습니다. 이 설정을 변경 하려면 사용는 <xref:System.Net.NetworkInformation.Ping.Send%2A>사용 오버 로드는 `options` 매개 변수를 설정은 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>속성을 원하는 값으로.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates how to call a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>ICMP 에코 메시지의 대상인 컴퓨터를 식별 하는.</xref:System.String> 이 매개 변수에 대해 지정 된 값은 호스트 이름 또는 IP 주소에 대 한 문자열 표현을 수 있습니다."
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>echo 메시지 보내기) (이후 시간 (밀리초)의 최대 수를 지정 하는 값 ICMP 에코 응답 메시지에 대해 기다려야 합니다.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>ICMP 에코 메시지와 함께 전송 되어 ICMP 에코 응답 메시지에 반환 된 데이터가 포함 된 배열.</xref:System.Byte> 배열에는 65, 500 바이트 보다 포함할 수 없습니다."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> 하나를 수신 하거나 메시지를 받지 못한 경우 실패 한 이유를 제공 하는 경우 ICMP 에코 응답 메시지에 대 한 정보를 제공 하는 개체입니다."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "크기 <code> buffer </code> 65500 바이트를 초과 합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이거나 빈 문자열 (&quot;&quot;).       -또는- <code>buffer</code> 은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 또는 <code>buffer</code> 크기는 65500 바이트를 초과 합니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>가&0; 보다 작습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "에 대 한 호출 <xref:System.Net.NetworkInformation.Ping.SendAsync*>진행 중입니다.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP 메시지를 송수신 하는 동안 예외가 발생 했습니다. Throw 된 정확한 예외에 대 한 내부 예외를 참조 하십시오."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "가 지정 하는 컴퓨터에 지정된 된 데이터 버퍼를 사용 하는 제어 메시지 ICMP (Internet Protocol) 에코 메시지를 보내려고 시도 <xref:System.Net.IPAddress>및 해당 컴퓨터에서 해당 ICMP 에코 응답 메시지를 수신 합니다.</xref:System.Net.IPAddress> 이 오버 로드를 사용 하면 작업 및 제어 조각화에 대 한 제한 시간 값 및 ICMP 에코 메시지 패킷에 대 한 활성 시간 값을 지정할 수 있습니다."
  remarks: "ICMP 에코 응답 메시지에 지정 된 시간 내에서 수신 되지 않으면는 `timeout` 매개 변수, ICMP 에코 실패 하 고 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> 속성</xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] >에 대 한 매우 작은 수를 지정 하는 경우 `timeout`, Ping 응답을 받을 수 있는 경우에 `timeout` 밀리초가 경과 합니다.       경우는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>속성은 `true` 및 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기, ICMP 에코 요청 실패.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       사용 하 여는 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>속성을 대상에 도달 하기 전에 ICMP 에코 메시지를 전달할 수는 최대 횟수를 지정 합니다.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#5](~/add/codesnippet/csharp/81445dc1-adbd-44fc-b79c-_1.cs)]\n [!code-cpp[NCLPingSampler#5](~/add/codesnippet/cpp/81445dc1-adbd-44fc-b79c-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>ICMP 에코 메시지의 대상인 컴퓨터를 식별 하는.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>echo 메시지 보내기) (이후 시간 (밀리초)의 최대 수를 지정 하는 값 ICMP 에코 응답 메시지에 대해 기다려야 합니다.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>ICMP 에코 메시지와 함께 전송 되어 ICMP 에코 응답 메시지에 반환 된 데이터가 포함 된 배열.</xref:System.Byte> 배열에는 65, 500 바이트 보다 포함할 수 없습니다."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> 조각화 및 ICMP 에코 메시지 패킷에 대 한 활성 시간 값을 제어 하는 데 사용 되는 개체입니다."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> 메시지를 받지 못한 경우 수신 하나 또는 실패에 대 한 이유를 제공 하는 경우 ICMP 에코 응답 메시지에 대 한 정보를 제공 하는 개체입니다. 메서드는 반환 <xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref> 패킷의 최대 전송 단위 (MTU)를 초과 하는 경우."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "크기 <code> buffer </code> 65500 바이트를 초과 합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는- <code>buffer</code> 은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 또는 <code>buffer</code> 크기는 65500 바이트를 초과 합니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>가&0; 보다 작습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "에 대 한 호출 <xref:System.Net.NetworkInformation.Ping.SendAsync*>진행 중입니다.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> 이 IPv6 주소가 고 로컬 컴퓨터의 Windows 2000 이전 버전 운영 체제를 실행 합니다."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP 메시지를 송수신 하는 동안 예외가 발생 했습니다. Throw 된 정확한 예외에 대 한 내부 예외를 참조 하십시오."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "지정한 컴퓨터에 지정된 된 데이터 버퍼를 사용 하는 제어 메시지 ICMP (Internet Protocol) 에코 메시지를 보내고 해당 ICMP를 수신 하려는 시도 해당 컴퓨터에서 회신 메시지를 에코 됩니다. 이 오버 로드를 사용 하면 작업 및 제어 조각화에 대 한 제한 시간 값 및 ICMP 패킷에 대 한 활성 시간 값을 지정할 수 있습니다."
  remarks: "ICMP 에코 응답 메시지에 지정 된 시간 내에서 수신 되지 않으면는 `timeout` 매개 변수, ICMP 에코 실패 하 고 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> 속성</xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] >에 대 한 매우 작은 수를 지정 하는 경우 `timeout`, Ping 응답을 받을 수 있는 경우에 `timeout` 밀리초가 경과 합니다.       경우는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>속성은 `true` 및 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기, ICMP 에코 요청 실패.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       사용 하 여는 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>속성을 대상에 도달 하기 전에 ICMP 에코 메시지를 전달할 수는 최대 횟수를 지정 합니다.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#4](~/add/codesnippet/csharp/ce144ae4-a1a7-44f3-ac8a-_1.cs)]\n [!code-cpp[NCLPingSampler#4](~/add/codesnippet/cpp/ce144ae4-a1a7-44f3-ac8a-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>ICMP 에코 메시지의 대상인 컴퓨터를 식별 하는.</xref:System.String> 이 매개 변수에 대해 지정 된 값은 호스트 이름 또는 IP 주소에 대 한 문자열 표현을 수 있습니다."
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>echo 메시지 보내기) (이후 시간 (밀리초)의 최대 수를 지정 하는 값 ICMP 에코 응답 메시지에 대해 기다려야 합니다.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>ICMP 에코 메시지와 함께 전송 되어 ICMP 에코 응답 메시지에 반환 된 데이터가 포함 된 배열.</xref:System.Byte> 배열에는 65, 500 바이트 보다 포함할 수 없습니다."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> 조각화 및 ICMP 에코 메시지 패킷에 대 한 활성 시간 값을 제어 하는 데 사용 되는 개체입니다."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> 하나를 수신 하거나 메시지를 받지 못한 경우 실패 한 이유를 제공 하는 경우 ICMP 에코 응답 메시지에 대 한 정보를 제공 하는 개체입니다."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "크기 <code> buffer </code> 65500 바이트를 초과 합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 없거나 길이가&0; 인 문자열입니다.       -또는- <code>buffer</code> 은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 또는 <code>buffer</code> 크기는 65500 바이트를 초과 합니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>가&0; 보다 작습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "에 대 한 호출 <xref:System.Net.NetworkInformation.Ping.SendAsync*>진행 중입니다.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> 이 IPv6 주소가 고 로컬 컴퓨터의 Windows 2000 이전 버전 운영 체제를 실행 합니다."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP 메시지를 송수신 하는 동안 예외가 발생 했습니다. Throw 된 정확한 예외에 대 한 내부 예외를 참조 하십시오."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Object)
  nameWithType: Ping.SendAsync(IPAddress,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "가 지정 하는 컴퓨터에는 제어 메시지 ICMP (Internet Protocol) 에코 메시지를 보내려고 시도 비동기적으로 <xref:System.Net.IPAddress>, 해당 컴퓨터에서 해당 ICMP 에코 응답 메시지를 수신 합니다.</xref:System.Net.IPAddress>"
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>메서드 echo 메시지를 비동기적으로 보내고, 응용 프로그램에 상태를 반환 하면 작업이 (성공 여부)를 완료 하는 경우.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 호출 된 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>메서드 응용 프로그램을 차단 하지 않아야 하는 경우.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 이 메서드를 호출할 때마다 스레드 풀에서 자동으로 할당 되는 별도 스레드에서 실행 됩니다. 비동기 작업이 완료 되 면 발생는 <xref:System.Net.NetworkInformation.Ping.PingCompleted>이벤트.</xref:System.Net.NetworkInformation.Ping.PingCompleted> 때 호출 되는 방법을 지정 하려면 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>이벤트를 발생 시킨 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 를 호출 하기 전에 이벤트에 대리자</xref:System.Net.NetworkInformation.PingCompletedEventHandler> 를 추가 해야</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 대리자의 메서드는 <xref:System.Net.NetworkInformation.PingCompletedEventArgs>포함 된 개체는 <xref:System.Net.NetworkInformation.PingReply>의 결과 설명 하는 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>호출.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>개체가 상속 된 <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>속성.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> 이 속성에 포함 된 `userToken` 로 전달 된 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>호출.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>      > [!NOTE] >을 회신에 대 한 대기 하는 동안 응용 프로그램을 차단 해야 하는 경우 중 하나를 사용는 <xref:System.Net.NetworkInformation.Ping.Send%2A>메서드; 이러한 메서드는 동기적입니다.</xref:System.Net.NetworkInformation.Ping.Send%2A>       이 메서드는 전송 32 <xref:System.Byte>ICMP 에코 메시지와 함께 데이터 버퍼.</xref:System.Byte> 메서드는 ICMP 에코 응답 메시지에 대 한&5; 초 동안 대기합니다. 시간, 메서드가 반환 하 고 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> 속성</xref:System.Net.NetworkInformation.PingReply.Status%2A> 에서 응답을 수신 하지 않는 경우       이 오버 로드 패킷 조각화 및 패킷 전송에 대 한 기본 설정을 사용합니다. ICMP 에코 메시지를 포함 하는 패킷 수 조각화 전송 중에는 총 패킷 크기는 전송할 수 있는 최대 패킷 크기를 초과 하는 경우 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서. 조각화를 방지 하려면 중 하나를 사용는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>를 사용 하는 메서드는 `options` 집합과, 매개 변수는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>속성을 `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 때 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>은 `true` 및 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기, ICMP 에코 요청 실패.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       패킷 또는 패킷 조각을 삭제 되기 전에 라우팅 노드에 의해 128 번 전달 될 수 있습니다. 이 설정을 변경 하려면 사용는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>사용 오버 로드는 `options` 매개 변수를 설정은 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>속성을 원하는 값으로.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>ICMP 에코 메시지의 대상인 컴퓨터를 식별 하는.</xref:System.Net.IPAddress>"
    - id: userToken
      type: System.Object
      description: "비동기 작업이 완료 될 때 호출 되는 메서드로 전달 되는 개체입니다."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "에 대 한 호출에서 <xref:System.Net.NetworkInformation.Ping.SendAsync*>메서드 진행 중입니다.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> 이 IPv6 주소가 고 로컬 컴퓨터의 Windows 2000 이전 버전 운영 체제를 실행 합니다."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP 메시지를 송수신 하는 동안 예외가 발생 했습니다. Throw 된 정확한 예외에 대 한 내부 예외를 참조 하십시오."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> 유효한 IP 주소가 아닙니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  id: SendAsync(System.String,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Object)
  nameWithType: Ping.SendAsync(String,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "비동기적으로 지정된 된 컴퓨터에 제어 메시지 ICMP (Internet Protocol) 에코 메시지를 보내고 해당 ICMP 에코 응답 메시지를 해당 컴퓨터에서 수신 하려고 시도 합니다."
  remarks: "SendAsync 메서드 echo 메시지를 비동기적으로 보내고, 응용 프로그램에 상태를 반환 하는 작업이 완료 되 면 (성공 여부)를 합니다. 응용 프로그램을 차단 하지 않아야 하는 경우 SendAsync 메서드를 호출 합니다. 이 메서드를 호출할 때마다 스레드 풀에서 자동으로 할당 되는 별도 스레드에서 실행 됩니다. 비동기 작업이 완료 되 면 발생는 <xref:System.Net.NetworkInformation.Ping.PingCompleted>이벤트.</xref:System.Net.NetworkInformation.Ping.PingCompleted> 때 호출 되는 방법을 지정 하려면 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>이벤트를 발생 시킨 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 를 호출 하기 전에 이벤트에 대리자</xref:System.Net.NetworkInformation.PingCompletedEventHandler> 를 추가 해야</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 대리자의 메서드는 <xref:System.Net.NetworkInformation.PingCompletedEventArgs>포함 된 개체는 <xref:System.Net.NetworkInformation.PingReply>의 결과 설명 하는 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>호출.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>개체가 상속 된 <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>속성.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> 이 속성에 포함 된 `userToken` 로 전달 된 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>호출.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>      > [!NOTE] >을 회신에 대 한 대기 하는 동안 응용 프로그램을 차단 해야 하는 경우 사용 하 여는 <xref:System.Net.NetworkInformation.Ping.Send%2A>메서드; 이러한 메서드는 동기적입니다.</xref:System.Net.NetworkInformation.Ping.Send%2A>       이 메서드는 전송 32 <xref:System.Byte>ICMP 에코 메시지와 함께 데이터 버퍼.</xref:System.Byte> 메서드는 ICMP 에코 응답 메시지에 대 한&5; 초 동안 대기합니다. 메서드가 반환 하 고 <xref:System.Net.NetworkInformation.PingReply.Status%2A>속성이 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> 로 설정 되어</xref:System.Net.NetworkInformation.PingReply.Status%2A> 있는 응답을 수신 하지는 않습니다 하는 경우 시간       이 오버 로드 패킷 조각화 및 패킷 전송에 대 한 기본 설정을 사용합니다. ICMP 에코 메시지를 포함 하는 패킷 수 조각화 전송 중에는 총 패킷 크기는 전송할 수 있는 최대 패킷 크기를 초과 하는 경우 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서. 조각화를 방지 하려면 중 하나를 사용는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>를 사용 하는 메서드는 `options` 집합과, 매개 변수는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>속성을 `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 때 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>은 `true` 및 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기, ICMP 에코 요청 실패.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       패킷 또는 패킷 조각을 삭제 되기 전에 라우팅 노드에 의해 128 번 전달 될 수 있습니다. 이 설정을 변경 하려면 사용는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>사용 오버 로드는 `options` 매개 변수를 설정은 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>속성을 원하는 값으로.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>ICMP 에코 메시지의 대상인 컴퓨터를 식별 하는.</xref:System.String> 이 매개 변수에 대해 지정 된 값은 호스트 이름 또는 IP 주소에 대 한 문자열 표현을 수 있습니다."
    - id: userToken
      type: System.Object
      description: "비동기 작업이 완료 될 때 호출 되는 메서드로 전달 되는 개체입니다."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이거나 빈 문자열 (&quot;&quot;)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "SendAsync 메서드 호출이 진행 중입니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> 이 IPv6 주소가 고 로컬 컴퓨터의 Windows 2000 이전 버전 운영 체제를 실행 합니다."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP 메시지를 송수신 하는 동안 예외가 발생 했습니다. Throw 된 정확한 예외에 대 한 내부 예외를 참조 하십시오."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>유효한 IP 주소를 확인할 수 없습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "가 지정 하는 컴퓨터에는 제어 메시지 ICMP (Internet Protocol) 에코 메시지를 보내려고 시도 비동기적으로 <xref:System.Net.IPAddress>, 해당 컴퓨터에서 해당 ICMP 에코 응답 메시지를 수신 합니다.</xref:System.Net.IPAddress> 이 오버 로드를 사용 하는 작업에 대 한 시간 제한 값을 지정할 수 있습니다."
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>메서드 Echo 메시지를 비동기적으로 보내고, 응용 프로그램에 상태를 반환 하면 작업이 (성공 여부)를 완료 하는 경우.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 호출 된 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>메서드 응용 프로그램을 차단 하지 않아야 하는 경우.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 각 호출에 스레드 풀에서 자동으로 할당 되는 별도 스레드로 실행 합니다. 비동기 작업이 완료 되 면 발생는 <xref:System.Net.NetworkInformation.Ping.PingCompleted>이벤트.</xref:System.Net.NetworkInformation.Ping.PingCompleted> 응용 프로그램 사용을 <xref:System.Net.NetworkInformation.PingCompletedEventHandler>때 호출 되는 방법을 지정 하는 대리자 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>이벤트를 발생 시킵니다.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> <xref:System.Net.NetworkInformation.PingCompletedEventHandler>대리자 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 를 호출 하기 전에 이벤트를</xref:System.Net.NetworkInformation.PingCompletedEventHandler> 추가 해야 합니다. 대리자의 메서드는 <xref:System.Net.NetworkInformation.PingCompletedEventArgs>포함 된 개체는 <xref:System.Net.NetworkInformation.PingReply>의 결과 설명 하는 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>호출.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>개체가 상속 된 <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>속성.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> 이 속성에 포함 된 `userToken` 로 전달 된 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>호출.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       을 회신에 대 한 대기 하는 동안 응용 프로그램을 차단 해야 하는 경우 사용 하 여는 <xref:System.Net.NetworkInformation.Ping.Send%2A>메서드; 이러한 메서드는 동기적입니다.</xref:System.Net.NetworkInformation.Ping.Send%2A>       ICMP 에코 응답 메시지에 지정 된 시간 내에서 수신 되지 않으면는 `timeout` 매개 변수, ICMP 에코 실패 하 고 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> 속성</xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] >에 대 한 매우 작은 수를 지정 하는 경우 `timeout`, Ping 응답을 받을 수 있는 경우에 `timeout` 밀리초가 경과 합니다.       이 오버 로드 패킷 조각화 및 패킷 전송에 대 한 기본 설정을 사용합니다. ICMP 에코 메시지를 포함 하는 패킷 수 조각화 전송 중에는 총 패킷 크기는 전송할 수 있는 최대 패킷 크기를 초과 하는 경우 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서. 조각화를 방지 하려면 중 하나를 사용는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>를 사용 하는 메서드는 `options` 집합과, 매개 변수는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>속성을 `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 때 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>은 `true` 및 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기, ICMP 에코 요청 실패.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> 패킷 또는 (조각화 된 경우)에 패킷 조각이 삭제 되기 전에 라우팅 노드에 의해 128 번 전달 될 수 있습니다. 이 설정을 변경 하려면 사용는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>사용 오버 로드는 `options` 매개 변수를 설정은 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>속성을 원하는 값으로.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>ICMP 에코 메시지의 대상인 컴퓨터를 식별 하는.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>echo 메시지 보내기) (이후 시간 (밀리초)의 최대 수를 지정 하는 값 ICMP 에코 응답 메시지에 대해 기다려야 합니다.</xref:System.Int32>"
    - id: userToken
      type: System.Object
      description: "비동기 작업이 완료 될 때 호출 되는 메서드로 전달 되는 개체입니다."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>가&0; 보다 작습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "에 대 한 호출 <xref:System.Net.NetworkInformation.Ping.SendAsync*>메서드 진행 중입니다.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> 이 IPv6 주소가 고 로컬 컴퓨터의 Windows 2000 이전 버전 운영 체제를 실행 합니다."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP 메시지를 송수신 하는 동안 예외가 발생 했습니다. Throw 된 정확한 예외에 대 한 내부 예외를 참조 하십시오."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> 유효한 IP 주소가 아닙니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  id: SendAsync(System.String,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Object)
  nameWithType: Ping.SendAsync(String,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "비동기적으로 지정된 된 컴퓨터에 제어 메시지 ICMP (Internet Protocol) 에코 메시지를 보내고 해당 ICMP 에코 응답 메시지를 해당 컴퓨터에서 수신 하려고 시도 합니다. 이 오버 로드를 사용 하는 작업에 대 한 시간 제한 값을 지정할 수 있습니다."
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>메서드 Echo 메시지를 비동기적으로 보내고, 응용 프로그램에 상태를 반환 하면 작업이 (성공 여부)를 완료 하는 경우.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 호출 된 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>메서드 응용 프로그램을 차단 하지 않아야 하는 경우.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 각 호출에 스레드 풀에서 자동으로 할당 되는 별도 스레드로 실행 합니다. 비동기 작업이 완료 되 면 발생는 <xref:System.Net.NetworkInformation.Ping.PingCompleted>이벤트.</xref:System.Net.NetworkInformation.Ping.PingCompleted> 응용 프로그램 사용을 <xref:System.Net.NetworkInformation.PingCompletedEventHandler>때 호출 되는 방법을 지정 하는 대리자 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>이벤트를 발생 시킵니다.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> <xref:System.Net.NetworkInformation.PingCompletedEventHandler>대리자 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 를 호출 하기 전에 이벤트를</xref:System.Net.NetworkInformation.PingCompletedEventHandler> 추가 해야 합니다. 대리자의 메서드는 <xref:System.Net.NetworkInformation.PingCompletedEventArgs>포함 된 개체는 <xref:System.Net.NetworkInformation.PingReply>의 결과 설명 하는 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>호출.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>개체가 상속 된 <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>속성.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> 이 속성에 포함 된 `userToken` 로 전달 된 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>호출.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       을 회신에 대 한 대기 하는 동안 응용 프로그램을 차단 해야 하는 경우 사용 하 여는 <xref:System.Net.NetworkInformation.Ping.Send%2A>메서드; 이러한 메서드는 동기적입니다.</xref:System.Net.NetworkInformation.Ping.Send%2A>       ICMP 에코 응답 메시지에 지정 된 시간 내에서 수신 되지 않으면는 `timeout` 매개 변수, ICMP 에코 실패 하 고 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> 속성</xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] >에 대 한 매우 작은 수를 지정 하는 경우 `timeout`, Ping 응답을 받을 수 있는 경우에 `timeout` 밀리초가 경과 합니다.       이 오버 로드 패킷 조각화 및 패킷 전송에 대 한 기본 설정을 사용합니다. ICMP 에코 메시지를 포함 하는 패킷 수 조각화 전송 중에는 총 패킷 크기는 전송할 수 있는 최대 패킷 크기를 초과 하는 경우 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서. 조각화를 방지 하려면 중 하나를 사용는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>를 사용 하는 메서드는 `options` 집합과, 매개 변수는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>속성을 `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 때 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>은 `true` 및 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기, ICMP 에코 요청 실패.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> 패킷 또는 (조각화 된 경우)에 패킷 조각이 삭제 되기 전에 라우팅 노드에 의해 128 번 전달 될 수 있습니다. 이 설정을 변경 하려면 사용는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>사용 오버 로드는 `options` 매개 변수를 설정은 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>속성을 원하는 값으로.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>ICMP 에코 메시지의 대상인 컴퓨터를 식별 하는.</xref:System.String> 이 매개 변수에 대해 지정 된 값은 호스트 이름 또는 IP 주소에 대 한 문자열 표현을 수 있습니다."
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>echo 메시지 보내기) (이후 시간 (밀리초)의 최대 수를 지정 하는 값 ICMP 에코 응답 메시지에 대해 기다려야 합니다.</xref:System.Int32>"
    - id: userToken
      type: System.Object
      description: "비동기 작업이 완료 될 때 호출 되는 메서드로 전달 되는 개체입니다."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이거나 빈 문자열 (&quot;&quot;)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>가&0; 보다 작습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "에 대 한 호출 <xref:System.Net.NetworkInformation.Ping.SendAsync*>진행 중입니다.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>hostNameOrAddress</code>이 IPv6 주소가 고 로컬 컴퓨터의 Windows 2000 이전 버전 운영 체제를 실행 합니다."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP 메시지를 송수신 하는 동안 예외가 발생 했습니다. Throw 된 정확한 예외에 대 한 내부 예외를 참조 하십시오."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>유효한 IP 주소를 확인할 수 없습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "가 지정 하는 컴퓨터에 지정된 된 데이터 버퍼를 사용 하는 제어 메시지 ICMP (Internet Protocol) 에코 메시지를 보내려고 하면 비동기적으로 <xref:System.Net.IPAddress>, 해당 컴퓨터에서 해당 ICMP 에코 응답 메시지를 수신 합니다.</xref:System.Net.IPAddress> 이 오버 로드를 사용 하는 작업에 대 한 시간 제한 값을 지정할 수 있습니다."
  remarks: "이 메서드는 echo 메시지를 비동기적으로 전송 하 고 응용 프로그램에 상태를 반환 하는 작업이 완료 되 면 (성공 여부)를 합니다. 호출 된 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>메서드 응용 프로그램을 차단 하지 않아야 하는 경우.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 각 호출에 스레드 풀에서 자동으로 할당 되는 별도 스레드로 실행 합니다. 비동기 작업이 완료 되 면 발생는 <xref:System.Net.NetworkInformation.Ping.PingCompleted>이벤트.</xref:System.Net.NetworkInformation.Ping.PingCompleted> 때 호출 되는 방법을 지정 하려면 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>이벤트를 발생 시킨 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 를 호출 하기 전에 이벤트에 대리자</xref:System.Net.NetworkInformation.PingCompletedEventHandler> 를 추가 해야</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 대리자의 메서드는 <xref:System.Net.NetworkInformation.PingCompletedEventArgs>포함 된 개체는 <xref:System.Net.NetworkInformation.PingReply>의 결과 설명 하는 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>호출.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>개체가 상속 된 <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>속성.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> 이 속성에 포함 된 `userToken` 로 전달 된 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>호출.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>      > [!NOTE] > 사용 하 여 응용 프로그램 회신을 기다리는 동안 차단는 <xref:System.Net.NetworkInformation.Ping.Send%2A>메서드; 이러한 메서드는 동기적입니다.</xref:System.Net.NetworkInformation.Ping.Send%2A>       ICMP 에코 응답 메시지에 지정 된 시간 내에서 수신 되지 않으면는 `timeout` 매개 변수, ICMP 에코 실패 하 고 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> 속성</xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] >에 대 한 매우 작은 수를 지정 하는 경우 `timeout`, Ping 응답을 받을 수 있는 경우에 `timeout` 밀리초가 경과 합니다.       이 오버 로드 패킷 조각화 및 패킷 전송에 대 한 기본 설정을 사용합니다. ICMP 에코 메시지를 포함 하는 패킷 수 조각화 전송 중에는 총 패킷 크기는 전송할 수 있는 최대 패킷 크기를 초과 하는 경우 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서. 조각화를 방지 하려면 중 하나를 사용는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>를 사용 하는 메서드는 `options` 집합과, 매개 변수는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>속성을 `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 때 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>은 `true` 및 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기, ICMP 에코 요청 실패.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> 패킷 또는 (조각화 된 경우)에 패킷 조각이 삭제 되기 전에 라우팅 노드에 의해 128 번 전달 될 수 있습니다. 이 설정을 변경 하려면 사용는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>사용 오버 로드는 `options` 매개 변수를 설정은 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>속성을 원하는 값으로.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>ICMP 에코 메시지의 대상인 컴퓨터를 식별 하는.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>echo 메시지 보내기) (이후 시간 (밀리초)의 최대 수를 지정 하는 값 ICMP 에코 응답 메시지에 대해 기다려야 합니다.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>ICMP 에코 메시지와 함께 전송 되어 ICMP 에코 응답 메시지에 반환 된 데이터가 포함 된 배열.</xref:System.Byte> 배열에는 65, 500 바이트 보다 포함할 수 없습니다."
    - id: userToken
      type: System.Object
      description: "비동기 작업이 완료 될 때 호출 되는 메서드로 전달 되는 개체입니다."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>가&0; 보다 작습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "에 대 한 호출 <xref:System.Net.NetworkInformation.Ping.SendAsync*>진행 중입니다.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> 이 IPv6 주소가 고 로컬 컴퓨터의 Windows 2000 이전 버전 운영 체제를 실행 합니다."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP 메시지를 송수신 하는 동안 예외가 발생 했습니다. Throw 된 정확한 예외에 대 한 내부 예외를 참조 하십시오."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> 유효한 IP 주소가 아닙니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 삭제 되었습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "크기 <code> buffer </code> 65500 바이트를 초과 합니다."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  id: SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "비동기적으로 지정된 된 컴퓨터에 지정된 된 데이터 버퍼를 사용 하는 제어 메시지 ICMP (Internet Protocol) 에코 메시지를 보내고 해당 컴퓨터에서 해당 ICMP 에코 응답 메시지를 수신 하려고 시도 합니다. 이 오버 로드를 사용 하는 작업에 대 한 시간 제한 값을 지정할 수 있습니다."
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>메서드 Echo 메시지를 비동기적으로 보내고, 응용 프로그램에 상태를 반환 하면 작업이 (성공 여부)를 완료 하는 경우.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 호출 된 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>메서드 응용 프로그램을 차단 하지 않아야 하는 경우.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 각 호출에 스레드 풀에서 자동으로 할당 되는 별도 스레드로 실행 합니다. 비동기 작업이 완료 되 면 발생는 <xref:System.Net.NetworkInformation.Ping.PingCompleted>이벤트.</xref:System.Net.NetworkInformation.Ping.PingCompleted> 응용 프로그램 사용을 <xref:System.Net.NetworkInformation.PingCompletedEventHandler>때 호출 되는 방법을 지정 하는 대리자 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>이벤트를 발생 시킵니다.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> <xref:System.Net.NetworkInformation.PingCompletedEventHandler>대리자 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 를 호출 하기 전에 이벤트를</xref:System.Net.NetworkInformation.PingCompletedEventHandler> 추가 해야 합니다. 대리자의 메서드는 <xref:System.Net.NetworkInformation.PingCompletedEventArgs>포함 된 개체는 <xref:System.Net.NetworkInformation.PingReply>의 결과 설명 하는 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>호출.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>개체가 상속 된 <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>속성.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> 이 속성에 포함 된 `userToken` 로 전달 된 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>호출.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       을 회신에 대 한 대기 하는 동안 응용 프로그램을 차단 해야 하는 경우 사용 하 여는 <xref:System.Net.NetworkInformation.Ping.Send%2A>메서드; 이러한 메서드는 동기적입니다.</xref:System.Net.NetworkInformation.Ping.Send%2A>       ICMP 에코 응답 메시지에 지정 된 시간 내에서 수신 되지 않으면는 `timeout` 매개 변수, ICMP 에코 실패 하 고 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> 속성</xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] >에 대 한 매우 작은 수를 지정 하는 경우 `timeout`, Ping 응답을 받을 수 있는 경우에 `timeout` 밀리초가 경과 합니다.       이 오버 로드 패킷 조각화 및 패킷 전송에 대 한 기본 설정을 사용합니다. ICMP 에코 메시지를 포함 하는 패킷 수 조각화 전송 중에는 총 패킷 크기는 전송할 수 있는 최대 패킷 크기를 초과 하는 경우 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서. 조각화를 방지 하려면 중 하나를 사용는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>를 사용 하는 메서드는 `options` 집합과, 매개 변수는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>속성을 `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 때 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>은 `true` 및 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기, ICMP 에코 요청 실패.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> 패킷 또는 (조각화 된 경우)에 패킷 조각이 삭제 되기 전에 라우팅 노드에 의해 128 번 전달 될 수 있습니다. 이 설정을 변경 하려면 사용는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>사용 오버 로드는 `options` 매개 변수를 설정은 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>속성을 원하는 값으로.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - The following code example demonstrates how to call a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>ICMP 에코 메시지의 대상인 컴퓨터를 식별 하는.</xref:System.String> 이 매개 변수에 대해 지정 된 값은 호스트 이름 또는 IP 주소에 대 한 문자열 표현을 수 있습니다."
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>echo 메시지 보내기) (이후 시간 (밀리초)의 최대 수를 지정 하는 값 ICMP 에코 응답 메시지에 대해 기다려야 합니다.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>ICMP 에코 메시지와 함께 전송 되어 ICMP 에코 응답 메시지에 반환 된 데이터가 포함 된 배열.</xref:System.Byte> 배열에는 65, 500 바이트 보다 포함할 수 없습니다."
    - id: userToken
      type: System.Object
      description: "비동기 작업이 완료 될 때 호출 되는 메서드로 전달 되는 개체입니다."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이거나 빈 문자열 (&quot;&quot;).       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>가&0; 보다 작습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "에 대 한 호출 <xref:System.Net.NetworkInformation.Ping.SendAsync*>진행 중입니다.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>hostNameOrAddress</code>이 IPv6 주소가 고 로컬 컴퓨터의 Windows 2000 이전 버전 운영 체제를 실행 합니다."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP 메시지를 송수신 하는 동안 예외가 발생 했습니다. Throw 된 정확한 예외에 대 한 내부 예외를 참조 하십시오."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>유효한 IP 주소를 확인할 수 없습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 삭제 되었습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "크기 <code> buffer </code> 65500 바이트를 초과 합니다."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "가 지정 하는 컴퓨터에 지정된 된 데이터 버퍼를 사용 하는 제어 메시지 ICMP (Internet Protocol) 에코 메시지를 보내려고 하면 비동기적으로 <xref:System.Net.IPAddress>, 해당 컴퓨터에서 해당 ICMP 에코 응답 메시지를 수신 합니다.</xref:System.Net.IPAddress> 이 오버 로드를 사용 하면 작업 및 제어 조각화에 대 한 제한 시간 값 및 ICMP 에코 메시지 패킷에 대 한 활성 시간 값을 지정할 수 있습니다."
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>메서드 Echo 메시지를 비동기적으로 보내고, 응용 프로그램에 상태를 반환 하면 작업이 (성공 여부)를 완료 하는 경우.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 호출 된 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>메서드 응용 프로그램을 차단 해야 하는 경우.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 각 호출에 스레드 풀에서 자동으로 할당 되는 별도 스레드로 실행 합니다. 비동기 작업이 완료 되 면 발생는 <xref:System.Net.NetworkInformation.Ping.PingCompleted>이벤트.</xref:System.Net.NetworkInformation.Ping.PingCompleted> 응용 프로그램 사용을 <xref:System.Net.NetworkInformation.PingCompletedEventHandler>때 호출 되는 방법을 지정 하는 대리자 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>이벤트를 발생 시킵니다.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> <xref:System.Net.NetworkInformation.PingCompletedEventHandler>대리자 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 를 호출 하기 전에 이벤트를</xref:System.Net.NetworkInformation.PingCompletedEventHandler> 추가 해야 합니다. 대리자의 메서드는 <xref:System.Net.NetworkInformation.PingCompletedEventArgs>포함 된 개체는 <xref:System.Net.NetworkInformation.PingReply>의 결과 설명 하는 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>호출.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>개체가 상속 된 <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>속성.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> 이 속성에 포함 된 `userToken` 로 전달 된 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>호출.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       사용 하 여 응용 프로그램 회신을 기다리는 동안 차단는 <xref:System.Net.NetworkInformation.Ping.Send%2A>메서드; 이러한 메서드는 동기적입니다.</xref:System.Net.NetworkInformation.Ping.Send%2A>       ICMP 에코 응답 메시지에 지정 된 시간 내에서 수신 되지 않으면는 `timeout` 매개 변수, ICMP 에코 실패 하 고 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> 속성</xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] >에 대 한 매우 작은 수를 지정 하는 경우 `timeout`, Ping 응답을 받을 수 있는 경우에 `timeout` 밀리초가 경과 합니다.       경우는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>속성은 `true` 및 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기, ICMP 에코 요청 실패.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       사용 하 여는 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>속성을 대상에 도달 하기 전에 ICMP 에코 메시지를 전달할 수는 최대 횟수를 지정 합니다.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method. For an implementation of the callback method, see the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method overload example section.  \n  \n The following code example requires the following namespaces:  \n  \n [!code-cs[NCLPingSampler#0](~/add/codesnippet/csharp/cc37a528-8801-4ac0-83d4-_1.cs)]\n [!code-cpp[NCLPingSampler#0](~/add/codesnippet/cpp/cc37a528-8801-4ac0-83d4-_1.cpp)]  \n  \n The following code example sends an ICMP echo message asynchronously.  \n  \n [!code-cs[NCLPingSampler#7](~/add/codesnippet/csharp/cc37a528-8801-4ac0-83d4-_2.cs)]\n [!code-cpp[NCLPingSampler#7](~/add/codesnippet/cpp/cc37a528-8801-4ac0-83d4-_2.cpp)]"
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>ICMP 에코 메시지의 대상인 컴퓨터를 식별 하는.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>echo 메시지 보내기) (이후 시간 (밀리초)의 최대 수를 지정 하는 값 ICMP 에코 응답 메시지에 대해 기다려야 합니다.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>ICMP 에코 메시지와 함께 전송 되어 ICMP 에코 응답 메시지에 반환 된 데이터가 포함 된 배열.</xref:System.Byte> 배열에는 65, 500 바이트 보다 포함할 수 없습니다."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> 조각화 및 ICMP 에코 메시지 패킷에 대 한 활성 시간 값을 제어 하는 데 사용 되는 개체입니다."
    - id: userToken
      type: System.Object
      description: "비동기 작업이 완료 될 때 호출 되는 메서드로 전달 되는 개체입니다."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>가&0; 보다 작습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "에 대 한 호출 <xref:System.Net.NetworkInformation.Ping.SendAsync*>진행 중입니다.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> 이 IPv6 주소가 고 로컬 컴퓨터의 Windows 2000 이전 버전 운영 체제를 실행 합니다."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP 메시지를 송수신 하는 동안 예외가 발생 했습니다. Throw 된 정확한 예외에 대 한 내부 예외를 참조 하십시오."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> 유효한 IP 주소가 아닙니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 삭제 되었습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "크기 <code> buffer </code> 65500 바이트를 초과 합니다."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  id: SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "비동기적으로 지정된 된 컴퓨터에 지정된 된 데이터 버퍼를 사용 하는 제어 메시지 ICMP (Internet Protocol) 에코 메시지를 보내고 해당 컴퓨터에서 해당 ICMP 에코 응답 메시지를 수신 하려고 시도 합니다. 이 오버 로드를 사용 하면 작업 및 제어 조각화에 대 한 제한 시간 값 및 ICMP 패킷에 대 한 활성 시간 값을 지정할 수 있습니다."
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>메서드 Echo 메시지를 비동기적으로 보내고, 응용 프로그램에 상태를 반환 하면 작업이 (성공 여부)를 완료 하는 경우.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 호출 된 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>메서드 응용 프로그램을 차단 해야 하는 경우.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 각 호출에 스레드 풀에서 자동으로 할당 되는 별도 스레드로 실행 합니다. 비동기 작업이 완료 되 면 발생는 <xref:System.Net.NetworkInformation.Ping.PingCompleted>이벤트.</xref:System.Net.NetworkInformation.Ping.PingCompleted> 응용 프로그램 사용을 <xref:System.Net.NetworkInformation.PingCompletedEventHandler>때 호출 되는 방법을 지정 하는 대리자 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>이벤트를 발생 시킵니다.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> <xref:System.Net.NetworkInformation.PingCompletedEventHandler>대리자 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 를 호출 하기 전에 이벤트를</xref:System.Net.NetworkInformation.PingCompletedEventHandler> 추가 해야 합니다. 대리자의 메서드는 <xref:System.Net.NetworkInformation.PingCompletedEventArgs>포함 된 개체는 <xref:System.Net.NetworkInformation.PingReply>의 결과 설명 하는 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>호출.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>개체가 상속 된 <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>속성.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> 이 속성에 포함 된 `userToken` 로 전달 된 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>호출.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       을 회신에 대 한 대기 하는 동안 응용 프로그램을 차단 해야 하는 경우 사용 하 여는 <xref:System.Net.NetworkInformation.Ping.Send%2A>메서드; 이러한 메서드는 동기적입니다.</xref:System.Net.NetworkInformation.Ping.Send%2A>       ICMP 에코 응답 메시지에 지정 된 시간 내에서 수신 되지 않으면는 `timeout` 매개 변수, ICMP 에코 실패 하 고 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> 속성</xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] >에 대 한 매우 작은 수를 지정 하는 경우 `timeout`, Ping 응답을 받을 수 있는 경우에 `timeout` 밀리초가 경과 합니다.       경우는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>속성은 `true` 및 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기, ICMP 에코 요청 실패.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       사용 하 여는 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>속성을 대상에 도달 하기 전에 ICMP 에코 메시지를 전달할 수는 최대 횟수를 지정 합니다.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이러한 경우 <xref:System.Net.NetworkInformation.PingReply.Status%2A>를 <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cpp[NCLPingAsync#1](~/add/codesnippet/cpp/56cfcaea-d9d5-4c26-9eea-_1.cpp)]\n [!code-cs[NCLPingAsync#1](~/add/codesnippet/csharp/56cfcaea-d9d5-4c26-9eea-_1.cs)]"
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>ICMP 에코 메시지의 대상인 컴퓨터를 식별 하는.</xref:System.String> 이 매개 변수에 대해 지정 된 값은 호스트 이름 또는 IP 주소에 대 한 문자열 표현을 수 있습니다."
    - id: timeout
      type: System.Int32
      description: "A <xref:System.Byte>ICMP 에코 메시지와 함께 전송 되어 ICMP 에코 응답 메시지에 반환 된 데이터가 포함 된 배열.</xref:System.Byte> 배열에는 65, 500 바이트 보다 포함할 수 없습니다."
    - id: buffer
      type: System.Byte[]
      description: "<xref:System.Int32>echo 메시지 보내기) (이후 시간 (밀리초)의 최대 수를 지정 하는 값 ICMP 에코 응답 메시지에 대해 기다려야 합니다.</xref:System.Int32>"
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> 조각화 및 ICMP 에코 메시지 패킷에 대 한 활성 시간 값을 제어 하는 데 사용 되는 개체입니다."
    - id: userToken
      type: System.Object
      description: "비동기 작업이 완료 될 때 호출 되는 메서드로 전달 되는 개체입니다."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이거나 빈 문자열 (&quot;&quot;).       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>가&0; 보다 작습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "에 대 한 호출 <xref:System.Net.NetworkInformation.Ping.SendAsync*>진행 중입니다.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> 이 IPv6 주소가 고 로컬 컴퓨터의 Windows 2000 이전 버전 운영 체제를 실행 합니다."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP 메시지를 송수신 하는 동안 예외가 발생 했습니다. Throw 된 정확한 예외에 대 한 내부 예외를 참조 하십시오."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>유효한 IP 주소를 확인할 수 없습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 삭제 되었습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "크기 <code> buffer </code> 65500 바이트를 초과 합니다."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel
  id: SendAsyncCancel
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsyncCancel()
  nameWithType: Ping.SendAsyncCancel()
  fullName: System.Net.NetworkInformation.Ping.SendAsyncCancel()
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "제어 메시지 ICMP (Internet Protocol) 에코 메시지를 보낼 모든 보류 중인 비동기 요청을 취소 하 고 해당 ICMP 에코 응답 메시지를 받습니다."
  remarks: "호출을 종료 하려면이 메서드를 호출 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>완료 되지 않았습니다.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>"
  syntax:
    content: public void SendAsyncCancel ();
    parameters: []
  overload: System.Net.NetworkInformation.Ping.SendAsyncCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  id: SendPingAsync(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress)
  nameWithType: Ping.SendPingAsync(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "가 지정 하는 컴퓨터에 지정된 된 데이터 버퍼를 사용 하는 제어 메시지 ICMP (Internet Protocol) 에코 메시지 보내기 <xref:System.Net.IPAddress>, 고 비동기 작업으로 해당 컴퓨터에서 해당 ICMP 에코 응답 메시지를 받습니다.</xref:System.Net.IPAddress>"
  remarks: "이 작업을 차단 하지 않습니다. 반환 된 <xref:System.Threading.Tasks.Task%601>> 개체 ICMP 패킷을 전송 되어 고 응답이 수신 된 후 완료 됩니다.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "ICMP 에코 메시지의 대상인 컴퓨터를 식별 하는 IP 주소입니다."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "반환 &lt;xref:System.Threading.Tasks.Task%601&gt;합니다.       비동기 작업을 나타내는 작업 개체입니다."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "에 대 한 호출 <xref:System.Net.NetworkInformation.Ping.SendPingAsync*>진행 중입니다.</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP 메시지를 송수신 하는 동안 예외가 발생 했습니다. Throw 된 정확한 예외에 대 한 내부 예외를 참조 하십시오."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> 유효한 IP 주소가 아닙니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  id: SendPingAsync(System.String)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String)
  nameWithType: Ping.SendPingAsync(String)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "제어 메시지 ICMP (Internet Protocol) 에코 메시지 지정 된 데이터 버퍼가 너무 지정된 된 컴퓨터와 비동기 작업으로 해당 컴퓨터에서 해당 ICMP 에코 응답 메시지를 수신할 보냅니다."
  remarks: "이 작업을 차단 하지 않습니다. 반환 된 <xref:System.Threading.Tasks.Task%601>> 개체 ICMP 패킷을 전송 되어 고 응답이 수신 된 후 완료 됩니다.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "ICMP 에코 메시지의 대상인 컴퓨터입니다. 이 매개 변수에 대해 지정 된 값은 호스트 이름 또는 IP 주소에 대 한 문자열 표현을 수 있습니다."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "반환 &lt;xref:System.Threading.Tasks.Task%601&gt;합니다.       비동기 작업을 나타내는 작업 개체입니다."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  id: SendPingAsync(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "가 지정 하는 컴퓨터에 지정된 된 데이터 버퍼를 사용 하는 제어 메시지 ICMP (Internet Protocol) 에코 메시지 보내기 <xref:System.Net.IPAddress>, 고 비동기 작업으로 해당 컴퓨터에서 해당 ICMP 에코 응답 메시지를 받습니다.</xref:System.Net.IPAddress> 이 오버 로드를 사용 하는 작업에 대 한 시간 제한 값을 지정할 수 있습니다."
  remarks: "이 작업을 차단 하지 않습니다. 반환 된 <xref:System.Threading.Tasks.Task%601>> 개체 ICMP 패킷을 전송 되어 고 응답이 수신 된 후 완료 됩니다.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "ICMP 에코 메시지의 대상인 컴퓨터를 식별 하는 IP 주소입니다."
    - id: timeout
      type: System.Int32
      description: "Echo 메시지 보내기) (이후 시간 (밀리초)의 최대 수 ICMP 에코 응답 메시지에 대해 기다려야 합니다."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "반환 &lt;xref:System.Threading.Tasks.Task%601&gt;합니다.       비동기 작업을 나타내는 작업 개체입니다."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  id: SendPingAsync(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32)
  nameWithType: Ping.SendPingAsync(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "제어 메시지 ICMP (Internet Protocol) 에코 메시지 지정 된 데이터 버퍼가 너무 지정된 된 컴퓨터와 비동기 작업으로 해당 컴퓨터에서 해당 ICMP 에코 응답 메시지를 수신할 보냅니다. 이 오버 로드를 사용 하는 작업에 대 한 시간 제한 값을 지정할 수 있습니다."
  remarks: "이 작업을 차단 하지 않습니다. 반환 된 <xref:System.Threading.Tasks.Task%601>> 개체 ICMP 패킷을 전송 되어 고 응답이 수신 된 후 완료 됩니다.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "ICMP 에코 메시지의 대상인 컴퓨터입니다. 이 매개 변수에 대해 지정 된 값은 호스트 이름 또는 IP 주소에 대 한 문자열 표현을 수 있습니다."
    - id: timeout
      type: System.Int32
      description: "Echo 메시지 보내기) (이후 시간 (밀리초)의 최대 수 ICMP 에코 응답 메시지에 대해 기다려야 합니다."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "반환 &lt;xref:System.Threading.Tasks.Task%601&gt;합니다.       비동기 작업을 나타내는 작업 개체입니다."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  id: SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "가 지정 하는 컴퓨터에 지정된 된 데이터 버퍼를 사용 하는 제어 메시지 ICMP (Internet Protocol) 에코 메시지 보내기 <xref:System.Net.IPAddress>, 고 비동기 작업으로 해당 컴퓨터에서 해당 ICMP 에코 응답 메시지를 받습니다.</xref:System.Net.IPAddress> 이 오버 로드를 사용 하면 작업 및 사용 하 여 송신 및 수신 하기 위해 버퍼에 대 한 제한 시간 값을 지정할 수 있습니다."
  remarks: "이 작업을 차단 하지 않습니다. 반환 된 <xref:System.Threading.Tasks.Task%601>> 개체 ICMP 패킷을 전송 되어 고 응답이 수신 된 후 완료 됩니다.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "ICMP 에코 메시지의 대상인 컴퓨터를 식별 하는 IP 주소입니다."
    - id: timeout
      type: System.Int32
      description: "Echo 메시지 보내기) (이후 시간 (밀리초)의 최대 수 ICMP 에코 응답 메시지에 대해 기다려야 합니다."
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>ICMP 에코 메시지와 함께 전송 되어 ICMP 에코 응답 메시지에 반환 된 데이터가 포함 된 배열.</xref:System.Byte> 배열에는 65, 500 바이트 보다 포함할 수 없습니다."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "반환 &lt;xref:System.Threading.Tasks.Task%601&gt;합니다.       비동기 작업을 나타내는 작업 개체입니다."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>가&0; 보다 작습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "에 대 한 호출 <xref:System.Net.NetworkInformation.Ping.SendPingAsync*>진행 중입니다.</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP 메시지를 송수신 하는 동안 예외가 발생 했습니다. Throw 된 정확한 예외에 대 한 내부 예외를 참조 하십시오."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> 유효한 IP 주소가 아닙니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 삭제 되었습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "크기 <code> buffer </code> 65, 500 바이트를 초과 합니다."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  id: SendPingAsync(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "제어 메시지 ICMP (Internet Protocol) 에코 메시지 지정 된 데이터 버퍼가 너무 지정된 된 컴퓨터와 비동기 작업으로 해당 컴퓨터에서 해당 ICMP 에코 응답 메시지를 수신할 보냅니다. 이 오버 로드를 사용 하면 작업 및 사용 하 여 송신 및 수신 하기 위해 버퍼에 대 한 제한 시간 값을 지정할 수 있습니다."
  remarks: "이 작업을 차단 하지 않습니다. 반환 된 <xref:System.Threading.Tasks.Task%601>> 개체 ICMP 패킷을 전송 되어 고 응답이 수신 된 후 완료 됩니다.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "ICMP 에코 메시지의 대상인 컴퓨터입니다. 이 매개 변수에 대해 지정 된 값은 호스트 이름 또는 IP 주소에 대 한 문자열 표현을 수 있습니다."
    - id: timeout
      type: System.Int32
      description: "Echo 메시지 보내기) (이후 시간 (밀리초)의 최대 수 ICMP 에코 응답 메시지에 대해 기다려야 합니다."
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>ICMP 에코 메시지와 함께 전송 되어 ICMP 에코 응답 메시지에 반환 된 데이터가 포함 된 배열.</xref:System.Byte> 배열에는 65, 500 바이트 보다 포함할 수 없습니다."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "반환 &lt;xref:System.Threading.Tasks.Task%601&gt;합니다.       비동기 작업을 나타내는 작업 개체입니다."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "가 지정 하는 컴퓨터에 지정된 된 데이터 버퍼를 사용 하는 제어 메시지 ICMP (Internet Protocol) 에코 메시지 보내기 <xref:System.Net.IPAddress>, 고 비동기 작업으로 해당 컴퓨터에서 해당 ICMP 에코 응답 메시지를 받습니다.</xref:System.Net.IPAddress> 이 오버 로드를 사용 하면 버퍼를 사용 하 여 송신 및 수신 하는 작업에 대 한 시간 제한 값을 지정 하 고 조각화 및 ICMP 에코 메시지 패킷에 대 한 활성 시간 값을 제어할 수 있습니다."
  remarks: "이 작업을 차단 하지 않습니다. 반환 된 <xref:System.Threading.Tasks.Task%601>> 개체 ICMP 패킷을 전송 되어 고 응답이 수신 된 후 완료 됩니다.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "ICMP 에코 메시지의 대상인 컴퓨터를 식별 하는 IP 주소입니다."
    - id: timeout
      type: System.Int32
      description: "Echo 메시지 보내기) (이후 시간 (밀리초)의 최대 수 ICMP 에코 응답 메시지에 대해 기다려야 합니다."
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>ICMP 에코 메시지와 함께 전송 되어 ICMP 에코 응답 메시지에 반환 된 데이터가 포함 된 배열.</xref:System.Byte> 배열에는 65, 500 바이트 보다 포함할 수 없습니다."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> 조각화 및 ICMP 에코 메시지 패킷에 대 한 활성 시간 값을 제어 하는 데 사용 되는 개체입니다."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "반환 &lt;xref:System.Threading.Tasks.Task%601&gt;합니다.       비동기 작업을 나타내는 작업 개체입니다."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>가&0; 보다 작습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "에 대 한 호출 <xref:System.Net.NetworkInformation.Ping.SendPingAsync*>진행 중입니다.</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP 메시지를 송수신 하는 동안 예외가 발생 했습니다. Throw 된 정확한 예외에 대 한 내부 예외를 참조 하십시오."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> 유효한 IP 주소가 아닙니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 삭제 되었습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "크기 <code> buffer </code> 65, 500 바이트를 초과 합니다."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "제어 메시지 ICMP (Internet Protocol) 에코 메시지 지정 된 데이터 버퍼가 너무 지정된 된 컴퓨터와 비동기 작업으로 해당 컴퓨터에서 해당 ICMP 에코 응답 메시지를 수신할 보냅니다. 이 오버 로드를 사용 하면 버퍼를 사용 하 여 송신 및 수신 하는 작업에 대 한 시간 제한 값을 지정 하 고 조각화 및 ICMP 에코 메시지 패킷에 대 한 활성 시간 값을 제어할 수 있습니다."
  remarks: "이 작업을 차단 하지 않습니다. 반환 된 <xref:System.Threading.Tasks.Task%601>> 개체 ICMP 패킷을 전송 되어 고 응답이 수신 된 후 완료 됩니다.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "ICMP 에코 메시지의 대상인 컴퓨터입니다. 이 매개 변수에 대해 지정 된 값은 호스트 이름 또는 IP 주소에 대 한 문자열 표현을 수 있습니다."
    - id: timeout
      type: System.Int32
      description: "Echo 메시지 보내기) (이후 시간 (밀리초)의 최대 수 ICMP 에코 응답 메시지에 대해 기다려야 합니다."
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>ICMP 에코 메시지와 함께 전송 되어 ICMP 에코 응답 메시지에 반환 된 데이터가 포함 된 배열.</xref:System.Byte> 배열에는 65, 500 바이트 보다 포함할 수 없습니다."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> 조각화 및 ICMP 에코 메시지 패킷에 대 한 활성 시간 값을 제어 하는 데 사용 되는 개체입니다."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "반환 &lt;xref:System.Threading.Tasks.Task%601&gt;합니다.       비동기 작업을 나타내는 작업 개체입니다."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.NetworkInformation.PingException
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingException
  nameWithType: PingException
  fullName: System.Net.NetworkInformation.PingException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.Sockets.SocketException
  isExternal: true
  name: System.Net.Sockets.SocketException
- uid: System.Net.NetworkInformation.Ping.#ctor
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Ping()
  nameWithType: Ping.Ping()
  fullName: System.Net.NetworkInformation.Ping.Ping()
- uid: System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Ping.Dispose(Boolean)
  fullName: System.Net.NetworkInformation.Ping.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: OnPingCompleted(PingCompletedEventArgs)
  nameWithType: Ping.OnPingCompleted(PingCompletedEventArgs)
  fullName: System.Net.NetworkInformation.Ping.OnPingCompleted(PingCompletedEventArgs)
- uid: System.Net.NetworkInformation.PingCompletedEventArgs
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingCompletedEventArgs
  nameWithType: PingCompletedEventArgs
  fullName: System.Net.NetworkInformation.PingCompletedEventArgs
- uid: System.Net.NetworkInformation.Ping.PingCompleted
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: PingCompleted
  nameWithType: Ping.PingCompleted
  fullName: System.Net.NetworkInformation.Ping.PingCompleted
- uid: System.Net.NetworkInformation.PingCompletedEventHandler
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingCompletedEventHandler
  nameWithType: PingCompletedEventHandler
  fullName: System.Net.NetworkInformation.PingCompletedEventHandler
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress)
  nameWithType: Ping.Send(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress)
- uid: System.Net.NetworkInformation.PingReply
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingReply
  nameWithType: PingReply
  fullName: System.Net.NetworkInformation.PingReply
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net.NetworkInformation.Ping.Send(System.String)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String)
  nameWithType: Ping.Send(String)
  fullName: System.Net.NetworkInformation.Ping.Send(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32)
  nameWithType: Ping.Send(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32)
  nameWithType: Ping.Send(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32)
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32,Byte[])
  nameWithType: Ping.Send(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32,Byte[])
  nameWithType: Ping.Send(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.PingOptions
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingOptions
  nameWithType: PingOptions
  fullName: System.Net.NetworkInformation.PingOptions
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Object)
  nameWithType: Ping.SendAsync(IPAddress,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Object)
  nameWithType: Ping.SendAsync(String,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Object)
  nameWithType: Ping.SendAsync(String,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsyncCancel()
  nameWithType: Ping.SendAsyncCancel()
  fullName: System.Net.NetworkInformation.Ping.SendAsyncCancel()
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress)
  nameWithType: Ping.SendPingAsync(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress)
- uid: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<PingReply>
  nameWithType: Task<PingReply>
  fullName: System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Net.NetworkInformation.PingReply>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.NetworkInformation.PingReply
    name: PingReply
    nameWithType: PingReply
    fullName: PingReply
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String)
  nameWithType: Ping.SendPingAsync(String)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32)
  nameWithType: Ping.SendPingAsync(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.#ctor*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Ping
  nameWithType: Ping.Ping
- uid: System.Net.NetworkInformation.Ping.Dispose*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Dispose
  nameWithType: Ping.Dispose
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: OnPingCompleted
  nameWithType: Ping.OnPingCompleted
- uid: System.Net.NetworkInformation.Ping.Send*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send
  nameWithType: Ping.Send
- uid: System.Net.NetworkInformation.Ping.SendAsync*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync
  nameWithType: Ping.SendAsync
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsyncCancel
  nameWithType: Ping.SendAsyncCancel
- uid: System.Net.NetworkInformation.Ping.SendPingAsync*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync
  nameWithType: Ping.SendPingAsync
