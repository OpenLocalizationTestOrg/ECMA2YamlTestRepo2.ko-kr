### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.XamlTypeMapper
  id: XamlTypeMapper
  children:
  - System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])
  - System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])
  - System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)
  - System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)
  - System.Windows.Markup.XamlTypeMapper.DefaultMapper
  - System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)
  - System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)
  langs:
  - csharp
  name: XamlTypeMapper
  nameWithType: XamlTypeMapper
  fullName: System.Windows.Markup.XamlTypeMapper
  type: Class
  summary: "적절 한 CLR에 XAML 요소 이름을 매핑합니다 <xref:System.Type>어셈블리에.</xref:System.Type>"
  remarks: "<xref:System.Windows.Markup.XamlReader>및 <xref:System.Windows.Markup.XamlWriter>.</xref:System.Windows.Markup.XamlWriter> </xref:System.Windows.Markup.XamlReader> 에 대 한 대체 컨텍스트를 제공 하는 고급 WPF 시나리오의 일부인 XamlTypeMapper 에 대 한 [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] WPF 응용 프로그램을 고려해 야 재정의 <xref:System.Xaml.XamlSchemaContext>XamlTypeMapper 사용 하려고 하지 않고이 시나리오에 대 한.</xref:System.Xaml.XamlSchemaContext>       XamlTypeMapper를 사용 하 여 XAML 파서에의 응용 프로그램 보다 더 직접적 기법을 통해 사용자 지정 매핑 정보로 제공할 수 있습니다 <xref:System.Windows.Markup.XmlnsDefinitionAttribute>어셈블리 코드에 대 한 값.</xref:System.Windows.Markup.XmlnsDefinitionAttribute> 이 추가 하기 위해 다시 컴파일할 필요 없이 기존 어셈블리에 있는 xaml 형식을 참조 하거나 어셈블리의 모든 CLR 네임 스페이스의 통합 하는 데 유용할 수 있습니다 <xref:System.Windows.Markup.XmlnsDefinitionAttribute>특성 지정 합니다.</xref:System.Windows.Markup.XmlnsDefinitionAttribute>       일반적으로 <xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A> <xref:System.Windows.Markup.ParserContext>.</xref:System.Windows.Markup.ParserContext> 에 대 한 속성 값</xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A> 을 지정 하기 위해 XamlTypeMapper 인스턴스를 만들으십시오 <xref:System.Windows.Markup.ParserContext>차례로으로 사용할 수에 대 한 컨텍스트는 <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=fullName>호출.</xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=fullName> </xref:System.Windows.Markup.ParserContext>      ## 사용 하 여 기본 맵 편집기를 가져올 수 기본 매퍼 있습니다는 <xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A>정적 속성입니다.</xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A> 기본 매퍼 기본 어셈블리 목록에 대해서만 작동 합니다. (XamlTypeMapper 생성자에 지정 됨) 처럼 어셈블리에 대 한 특정 정보가 없습니다 사용 됩니다.      <a name=&quot;xamlTextUsage_XamlTypeMapper&quot;></a># # XAML 텍스트 사용"
  syntax:
    content: public class XamlTypeMapper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: XamlTypeMapper(String[])
  nameWithType: XamlTypeMapper.XamlTypeMapper(String[])
  fullName: System.Windows.Markup.XamlTypeMapper.XamlTypeMapper(String[])
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;> </xref> 어셈블리의 배열을 지정 하 여 클래스 이름을 지정 하는 <xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;> </xref> 사용 해야 합니다."
  syntax:
    content: public XamlTypeMapper (string[] assemblyNames);
    parameters:
    - id: assemblyNames
      type: System.String[]
      description: "어셈블리 이름의 배열은 <xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;> </xref> 사용 해야 합니다."
  overload: System.Windows.Markup.XamlTypeMapper.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assemblyNames</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])
  id: '#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])'
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: XamlTypeMapper(String[],NamespaceMapEntry[])
  nameWithType: XamlTypeMapper.XamlTypeMapper(String[],NamespaceMapEntry[])
  fullName: System.Windows.Markup.XamlTypeMapper.XamlTypeMapper(String[],NamespaceMapEntry[])
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;> </xref> 클래스, 지정된 된 어셈블리 이름 배열을 사용 하 고 지정된 된 네임 스페이스에 매핑합니다."
  syntax:
    content: public XamlTypeMapper (string[] assemblyNames, System.Windows.Markup.NamespaceMapEntry[] namespaceMaps);
    parameters:
    - id: assemblyNames
      type: System.String[]
      description: "어셈블리 이름의 배열은 <xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;> </xref> 사용 해야 합니다."
    - id: namespaceMaps
      type: System.Windows.Markup.NamespaceMapEntry[]
      description: "네임 스페이스 맵 배열은 <xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;> </xref> 사용 해야 합니다."
  overload: System.Windows.Markup.XamlTypeMapper.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assemblyNames</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)
  id: AddMappingProcessingInstruction(System.String,System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: AddMappingProcessingInstruction(String,String,String)
  nameWithType: XamlTypeMapper.AddMappingProcessingInstruction(String,String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(String,String,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "어셈블리에 XML 네임 스페이스와 CLR 네임 스페이스 간의 매핑을 정의 하 고에 추가 된 <xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;> </xref> 정보입니다."
  remarks: "AddMappingProcessingInstruction은 매핑을 추가 하려면 프로그래밍 방식으로 됩니다.  예를 들어 다음 XAML mapping 명령의 여러 부분은 매개 변수에 해당 하는 AddMappingProcessingInstruction의: ```   <Window xmlns:SDK=&quot;clr-namespace:Samples;assembly=SDKSamples&quot;>   ...   ``` 는 `xmlNamespace` 은 `SDK`, `clrNamespace` 은 `Samples`, 및 `assemblyName` 은 `SDKSamples`합니다."
  syntax:
    content: public void AddMappingProcessingInstruction (string xmlNamespace, string clrNamespace, string assemblyName);
    parameters:
    - id: xmlNamespace
      type: System.String
      description: "XML 네임 스페이스의 접두사입니다."
    - id: clrNamespace
      type: System.String
      description: "매핑할 형식을 포함 하는 CLR 네임 스페이스입니다."
    - id: assemblyName
      type: System.String
      description: "CLR 네임 스페이스를 포함 하는 어셈블리입니다."
  overload: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xmlNamespace</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>clrNamespace</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>assemblyName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)
  id: AllowInternalType(System.Type)
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: AllowInternalType(Type)
  nameWithType: XamlTypeMapper.AllowInternalType(Type)
  fullName: System.Windows.Markup.XamlTypeMapper.AllowInternalType(Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "에 대 한 권한을 요청는 <xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;> </xref> 파생 형식에서 특정 내부 형식에 액세스 하려면 완전 신뢰 수준에서 호출 합니다."
  remarks: "AllowInternalType 항상 반환 하위 클래스에서 재정의 되지 않으면 `false`합니다.       동작은 AllowInternalType 반환할지 여부 있어야 하위 클래스에서 재정의 되 면 `true` 내부 형식이 고, 그렇지 않으면 액세스 될 수 있도록 `false`합니다."
  syntax:
    content: protected virtual bool AllowInternalType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "액세스 형식입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>내부 형식; 액세스할 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Markup.XamlTypeMapper.AllowInternalType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.DefaultMapper
  id: DefaultMapper
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: DefaultMapper
  nameWithType: XamlTypeMapper.DefaultMapper
  fullName: System.Windows.Markup.XamlTypeMapper.DefaultMapper
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "인스턴스를 가져옵니다는 <xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;> </xref> 지정 되지 않은 경우 사용할 수 있습니다."
  remarks: "기본 매퍼 기본 어셈블리 목록에 대해서만 작동 합니다. 어셈블리에 대 한 특정 정보가 없습니다 (에 지정 되어 <xref:System.Windows.Markup.XamlTypeMapper>생성자) 사용 됩니다.</xref:System.Windows.Markup.XamlTypeMapper> 현재 구현에서 기본 어셈블리 목록은: `WindowsBase`, `PresentationCore`, `PresentationFramework`합니다.       기본 맵 편집기를 사용 하 여 사용할 수 없다는 사용자 지정 어셈블리/형식 XAML에서 전혀 의미 하지 않습니다. 사용자 지정 형식/어셈블리를 사용 하는 경우 사용 해야 기본 XAML 기술을으로 매핑을 만드는 의미일 뿐 `xmlns` , 형식 매퍼 API와 달리, 형식/어셈블리 참조는 각 XAML 페이지에서 특성입니다. 자세한 내용은 참조 [XAML 네임 스페이스 및 WPF XAML에 대 한 매핑 Namespace](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public static System.Windows.Markup.XamlTypeMapper DefaultMapper { get; }
    return:
      type: System.Windows.Markup.XamlTypeMapper
      description: "기본 형식 매퍼입니다."
  overload: System.Windows.Markup.XamlTypeMapper.DefaultMapper*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)
  id: GetType(System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: GetType(String,String)
  nameWithType: XamlTypeMapper.GetType(String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.GetType(String,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "CLR 가져옵니다 <xref:System.Type>지정된 된 XAML 요소가 매핑되는, 지정 된 XML 네임 스페이스 접두사와 요소 이름을 사용 하 여.</xref:System.Type>"
  remarks: "제공된 된 정보에 매핑되는 형식을 찾을 수 없는 경우 `null` 반환 됩니다.       일부분으로 접두사를 넣지 마십시오 `localName`합니다. XAML 요소 정보를 접두사로 하나에 대 한 요소로 구분 `xmlNamespace` 및 `localName` 이 API 호출에 대 한 구성 요소입니다."
  syntax:
    content: public Type GetType (string xmlNamespace, string localName);
    parameters:
    - id: xmlNamespace
      type: System.String
      description: "지정 된 XML 네임 스페이스 접두사입니다."
    - id: localName
      type: System.String
      description: "매핑된 <xref:System.Type>>for</xref:System.Type> 얻으려고 XAML 요소의 &quot;local&quot; 이름 이 컨텍스트에서 로컬 의미와 제공 된 매핑 `xmlNamespace`합니다."
    return:
      type: System.Type
      description: "<xref:System.Type>개체 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 매핑이 없는 확인할 수 있는 경우.</xref:System.Type>"
  overload: System.Windows.Markup.XamlTypeMapper.GetType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xmlNamespace</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>localName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)
  id: SetAssemblyPath(System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: SetAssemblyPath(String,String)
  nameWithType: XamlTypeMapper.SetAssemblyPath(String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(String,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "어셈블리를 로드할 때 사용할 경로를 지정 합니다."
  syntax:
    content: public void SetAssemblyPath (string assemblyName, string assemblyPath);
    parameters:
    - id: assemblyName
      type: System.String
      description: "확장명 또는 경로 지정 하지 않고 어셈블리의 짧은 이름 (해당 하 &lt;xref:System.Reflection.AssemblyName.Name%2A?displayProperty=fullName&gt;)."
    - id: assemblyPath
      type: System.String
      description: "어셈블리의 파일 경로입니다. 어셈블리 경로는 파일 확장명을 포함 하는 전체 파일 경로 여야 합니다."
  overload: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assemblyName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>assemblyPath</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Windows.Markup.XamlParseException
    commentId: T:System.Windows.Markup.XamlParseException
    description: "<code>assemblyName</code><xref:System.String> -또는- <code>assemblyPath</code> 은 <xref:System.String> -또는- <code>assemblyPath</code> 은 파일 확장명을 포함 하는 전체 파일 경로가 아닙니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Markup.XamlParseException
  parent: System.Windows.Markup
  isExternal: false
  name: XamlParseException
  nameWithType: XamlParseException
  fullName: System.Windows.Markup.XamlParseException
- uid: System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: XamlTypeMapper(String[])
  nameWithType: XamlTypeMapper.XamlTypeMapper(String[])
  fullName: System.Windows.Markup.XamlTypeMapper.XamlTypeMapper(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: XamlTypeMapper(String[],NamespaceMapEntry[])
  nameWithType: XamlTypeMapper.XamlTypeMapper(String[],NamespaceMapEntry[])
  fullName: System.Windows.Markup.XamlTypeMapper.XamlTypeMapper(String[],NamespaceMapEntry[])
- uid: System.Windows.Markup.NamespaceMapEntry[]
  parent: System.Windows.Markup
  isExternal: false
  name: NamespaceMapEntry
  nameWithType: NamespaceMapEntry
  fullName: System.Windows.Markup.NamespaceMapEntry[]
  spec.csharp:
  - uid: System.Windows.Markup.NamespaceMapEntry
    name: NamespaceMapEntry
    nameWithType: NamespaceMapEntry
    fullName: NamespaceMapEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: AddMappingProcessingInstruction(String,String,String)
  nameWithType: XamlTypeMapper.AddMappingProcessingInstruction(String,String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: AllowInternalType(Type)
  nameWithType: XamlTypeMapper.AllowInternalType(Type)
  fullName: System.Windows.Markup.XamlTypeMapper.AllowInternalType(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Markup.XamlTypeMapper.DefaultMapper
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: DefaultMapper
  nameWithType: XamlTypeMapper.DefaultMapper
  fullName: System.Windows.Markup.XamlTypeMapper.DefaultMapper
- uid: System.Windows.Markup.XamlTypeMapper
  parent: System.Windows.Markup
  isExternal: false
  name: XamlTypeMapper
  nameWithType: XamlTypeMapper
  fullName: System.Windows.Markup.XamlTypeMapper
- uid: System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: GetType(String,String)
  nameWithType: XamlTypeMapper.GetType(String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.GetType(String,String)
- uid: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: SetAssemblyPath(String,String)
  nameWithType: XamlTypeMapper.SetAssemblyPath(String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(String,String)
- uid: System.Windows.Markup.XamlTypeMapper.#ctor*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: XamlTypeMapper
  nameWithType: XamlTypeMapper.XamlTypeMapper
- uid: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: AddMappingProcessingInstruction
  nameWithType: XamlTypeMapper.AddMappingProcessingInstruction
- uid: System.Windows.Markup.XamlTypeMapper.AllowInternalType*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: AllowInternalType
  nameWithType: XamlTypeMapper.AllowInternalType
- uid: System.Windows.Markup.XamlTypeMapper.DefaultMapper*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: DefaultMapper
  nameWithType: XamlTypeMapper.DefaultMapper
- uid: System.Windows.Markup.XamlTypeMapper.GetType*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: GetType
  nameWithType: XamlTypeMapper.GetType
- uid: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: SetAssemblyPath
  nameWithType: XamlTypeMapper.SetAssemblyPath
