### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.Control
  id: Control
  children:
  - System.Windows.Forms.Control.#ctor
  - System.Windows.Forms.Control.#ctor(System.String)
  - System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)
  - System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)
  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)
  - System.Windows.Forms.Control.AccessibilityObject
  - System.Windows.Forms.Control.AccessibleDefaultActionDescription
  - System.Windows.Forms.Control.AccessibleDescription
  - System.Windows.Forms.Control.AccessibleName
  - System.Windows.Forms.Control.AccessibleRole
  - System.Windows.Forms.Control.AllowDrop
  - System.Windows.Forms.Control.Anchor
  - System.Windows.Forms.Control.AutoScrollOffset
  - System.Windows.Forms.Control.AutoSize
  - System.Windows.Forms.Control.AutoSizeChanged
  - System.Windows.Forms.Control.BackColor
  - System.Windows.Forms.Control.BackColorChanged
  - System.Windows.Forms.Control.BackgroundImage
  - System.Windows.Forms.Control.BackgroundImageChanged
  - System.Windows.Forms.Control.BackgroundImageLayout
  - System.Windows.Forms.Control.BackgroundImageLayoutChanged
  - System.Windows.Forms.Control.BeginInvoke(System.Delegate)
  - System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])
  - System.Windows.Forms.Control.BindingContext
  - System.Windows.Forms.Control.BindingContextChanged
  - System.Windows.Forms.Control.Bottom
  - System.Windows.Forms.Control.Bounds
  - System.Windows.Forms.Control.BringToFront
  - System.Windows.Forms.Control.CanEnableIme
  - System.Windows.Forms.Control.CanFocus
  - System.Windows.Forms.Control.CanRaiseEvents
  - System.Windows.Forms.Control.CanSelect
  - System.Windows.Forms.Control.Capture
  - System.Windows.Forms.Control.CausesValidation
  - System.Windows.Forms.Control.CausesValidationChanged
  - System.Windows.Forms.Control.ChangeUICues
  - System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls
  - System.Windows.Forms.Control.Click
  - System.Windows.Forms.Control.ClientRectangle
  - System.Windows.Forms.Control.ClientSize
  - System.Windows.Forms.Control.ClientSizeChanged
  - System.Windows.Forms.Control.CompanyName
  - System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)
  - System.Windows.Forms.Control.ContainsFocus
  - System.Windows.Forms.Control.ContextMenu
  - System.Windows.Forms.Control.ContextMenuChanged
  - System.Windows.Forms.Control.ContextMenuStrip
  - System.Windows.Forms.Control.ContextMenuStripChanged
  - System.Windows.Forms.Control.ControlAdded
  - System.Windows.Forms.Control.ControlRemoved
  - System.Windows.Forms.Control.Controls
  - System.Windows.Forms.Control.CreateAccessibilityInstance
  - System.Windows.Forms.Control.CreateControl
  - System.Windows.Forms.Control.CreateControlsInstance
  - System.Windows.Forms.Control.Created
  - System.Windows.Forms.Control.CreateGraphics
  - System.Windows.Forms.Control.CreateHandle
  - System.Windows.Forms.Control.CreateParams
  - System.Windows.Forms.Control.Cursor
  - System.Windows.Forms.Control.CursorChanged
  - System.Windows.Forms.Control.DataBindings
  - System.Windows.Forms.Control.DefaultBackColor
  - System.Windows.Forms.Control.DefaultCursor
  - System.Windows.Forms.Control.DefaultFont
  - System.Windows.Forms.Control.DefaultForeColor
  - System.Windows.Forms.Control.DefaultImeMode
  - System.Windows.Forms.Control.DefaultMargin
  - System.Windows.Forms.Control.DefaultMaximumSize
  - System.Windows.Forms.Control.DefaultMinimumSize
  - System.Windows.Forms.Control.DefaultPadding
  - System.Windows.Forms.Control.DefaultSize
  - System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.DestroyHandle
  - System.Windows.Forms.Control.DisplayRectangle
  - System.Windows.Forms.Control.Dispose(System.Boolean)
  - System.Windows.Forms.Control.Disposing
  - System.Windows.Forms.Control.Dock
  - System.Windows.Forms.Control.DockChanged
  - System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)
  - System.Windows.Forms.Control.DoubleBuffered
  - System.Windows.Forms.Control.DoubleClick
  - System.Windows.Forms.Control.DragDrop
  - System.Windows.Forms.Control.DragEnter
  - System.Windows.Forms.Control.DragLeave
  - System.Windows.Forms.Control.DragOver
  - System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)
  - System.Windows.Forms.Control.Enabled
  - System.Windows.Forms.Control.EnabledChanged
  - System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)
  - System.Windows.Forms.Control.Enter
  - System.Windows.Forms.Control.FindForm
  - System.Windows.Forms.Control.Focus
  - System.Windows.Forms.Control.Focused
  - System.Windows.Forms.Control.Font
  - System.Windows.Forms.Control.FontChanged
  - System.Windows.Forms.Control.FontHeight
  - System.Windows.Forms.Control.ForeColor
  - System.Windows.Forms.Control.ForeColorChanged
  - System.Windows.Forms.Control.FromChildHandle(System.IntPtr)
  - System.Windows.Forms.Control.FromHandle(System.IntPtr)
  - System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)
  - System.Windows.Forms.Control.GetAutoSizeMode
  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)
  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)
  - System.Windows.Forms.Control.GetContainerControl
  - System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)
  - System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)
  - System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)
  - System.Windows.Forms.Control.GetTopLevel
  - System.Windows.Forms.Control.GiveFeedback
  - System.Windows.Forms.Control.GotFocus
  - System.Windows.Forms.Control.Handle
  - System.Windows.Forms.Control.HandleCreated
  - System.Windows.Forms.Control.HandleDestroyed
  - System.Windows.Forms.Control.HasChildren
  - System.Windows.Forms.Control.Height
  - System.Windows.Forms.Control.HelpRequested
  - System.Windows.Forms.Control.Hide
  - System.Windows.Forms.Control.ImeMode
  - System.Windows.Forms.Control.ImeModeBase
  - System.Windows.Forms.Control.ImeModeChanged
  - System.Windows.Forms.Control.InitLayout
  - System.Windows.Forms.Control.Invalidate
  - System.Windows.Forms.Control.Invalidate(System.Boolean)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)
  - System.Windows.Forms.Control.Invalidated
  - System.Windows.Forms.Control.Invoke(System.Delegate)
  - System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])
  - System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.InvokeRequired
  - System.Windows.Forms.Control.IsAccessible
  - System.Windows.Forms.Control.IsDisposed
  - System.Windows.Forms.Control.IsHandleCreated
  - System.Windows.Forms.Control.IsInputChar(System.Char)
  - System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.IsMirrored
  - System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)
  - System.Windows.Forms.Control.KeyDown
  - System.Windows.Forms.Control.KeyPress
  - System.Windows.Forms.Control.KeyUp
  - System.Windows.Forms.Control.Layout
  - System.Windows.Forms.Control.LayoutEngine
  - System.Windows.Forms.Control.Leave
  - System.Windows.Forms.Control.Left
  - System.Windows.Forms.Control.Location
  - System.Windows.Forms.Control.LocationChanged
  - System.Windows.Forms.Control.LostFocus
  - System.Windows.Forms.Control.Margin
  - System.Windows.Forms.Control.MarginChanged
  - System.Windows.Forms.Control.MaximumSize
  - System.Windows.Forms.Control.MinimumSize
  - System.Windows.Forms.Control.ModifierKeys
  - System.Windows.Forms.Control.MouseButtons
  - System.Windows.Forms.Control.MouseCaptureChanged
  - System.Windows.Forms.Control.MouseClick
  - System.Windows.Forms.Control.MouseDoubleClick
  - System.Windows.Forms.Control.MouseDown
  - System.Windows.Forms.Control.MouseEnter
  - System.Windows.Forms.Control.MouseHover
  - System.Windows.Forms.Control.MouseLeave
  - System.Windows.Forms.Control.MouseMove
  - System.Windows.Forms.Control.MousePosition
  - System.Windows.Forms.Control.MouseUp
  - System.Windows.Forms.Control.MouseWheel
  - System.Windows.Forms.Control.Move
  - System.Windows.Forms.Control.Name
  - System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  - System.Windows.Forms.Control.OnClick(System.EventArgs)
  - System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)
  - System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)
  - System.Windows.Forms.Control.OnCreateControl
  - System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnDockChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)
  - System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnDragLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnEnter(System.EventArgs)
  - System.Windows.Forms.Control.OnFontChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)
  - System.Windows.Forms.Control.OnGotFocus(System.EventArgs)
  - System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)
  - System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)
  - System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)
  - System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)
  - System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)
  - System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)
  - System.Windows.Forms.Control.OnLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnLostFocus(System.EventArgs)
  - System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseHover(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMove(System.EventArgs)
  - System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)
  - System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)
  - System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)
  - System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnResize(System.EventArgs)
  - System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTextChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnValidated(System.EventArgs)
  - System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)
  - System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)
  - System.Windows.Forms.Control.Padding
  - System.Windows.Forms.Control.PaddingChanged
  - System.Windows.Forms.Control.Paint
  - System.Windows.Forms.Control.Parent
  - System.Windows.Forms.Control.ParentChanged
  - System.Windows.Forms.Control.PerformLayout
  - System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)
  - System.Windows.Forms.Control.PointToClient(System.Drawing.Point)
  - System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)
  - System.Windows.Forms.Control.PreferredSize
  - System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.PreviewKeyDown
  - System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.ProcessDialogChar(System.Char)
  - System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessMnemonic(System.Char)
  - System.Windows.Forms.Control.ProductName
  - System.Windows.Forms.Control.ProductVersion
  - System.Windows.Forms.Control.PropagatingImeMode
  - System.Windows.Forms.Control.QueryAccessibilityHelp
  - System.Windows.Forms.Control.QueryContinueDrag
  - System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.RecreateHandle
  - System.Windows.Forms.Control.RecreatingHandle
  - System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.Refresh
  - System.Windows.Forms.Control.Region
  - System.Windows.Forms.Control.RegionChanged
  - System.Windows.Forms.Control.RenderRightToLeft
  - System.Windows.Forms.Control.ResetBackColor
  - System.Windows.Forms.Control.ResetBindings
  - System.Windows.Forms.Control.ResetCursor
  - System.Windows.Forms.Control.ResetFont
  - System.Windows.Forms.Control.ResetForeColor
  - System.Windows.Forms.Control.ResetImeMode
  - System.Windows.Forms.Control.ResetMouseEventArgs
  - System.Windows.Forms.Control.ResetRightToLeft
  - System.Windows.Forms.Control.ResetText
  - System.Windows.Forms.Control.Resize
  - System.Windows.Forms.Control.ResizeRedraw
  - System.Windows.Forms.Control.ResumeLayout
  - System.Windows.Forms.Control.ResumeLayout(System.Boolean)
  - System.Windows.Forms.Control.Right
  - System.Windows.Forms.Control.RightToLeft
  - System.Windows.Forms.Control.RightToLeftChanged
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)
  - System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)
  - System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)
  - System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)
  - System.Windows.Forms.Control.Scale(System.Drawing.SizeF)
  - System.Windows.Forms.Control.Scale(System.Single)
  - System.Windows.Forms.Control.Scale(System.Single,System.Single)
  - System.Windows.Forms.Control.ScaleChildren
  - System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)
  - System.Windows.Forms.Control.Select
  - System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)
  - System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - System.Windows.Forms.Control.SendToBack
  - System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)
  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)
  - System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)
  - System.Windows.Forms.Control.SetTopLevel(System.Boolean)
  - System.Windows.Forms.Control.SetVisibleCore(System.Boolean)
  - System.Windows.Forms.Control.Show
  - System.Windows.Forms.Control.ShowFocusCues
  - System.Windows.Forms.Control.ShowKeyboardCues
  - System.Windows.Forms.Control.Site
  - System.Windows.Forms.Control.Size
  - System.Windows.Forms.Control.SizeChanged
  - System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)
  - System.Windows.Forms.Control.StyleChanged
  - System.Windows.Forms.Control.SuspendLayout
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.SystemColorsChanged
  - System.Windows.Forms.Control.TabIndex
  - System.Windows.Forms.Control.TabIndexChanged
  - System.Windows.Forms.Control.TabStop
  - System.Windows.Forms.Control.TabStopChanged
  - System.Windows.Forms.Control.Tag
  - System.Windows.Forms.Control.Text
  - System.Windows.Forms.Control.TextChanged
  - System.Windows.Forms.Control.Top
  - System.Windows.Forms.Control.TopLevelControl
  - System.Windows.Forms.Control.Update
  - System.Windows.Forms.Control.UpdateBounds
  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.UpdateStyles
  - System.Windows.Forms.Control.UpdateZOrder
  - System.Windows.Forms.Control.UseWaitCursor
  - System.Windows.Forms.Control.Validated
  - System.Windows.Forms.Control.Validating
  - System.Windows.Forms.Control.Visible
  - System.Windows.Forms.Control.VisibleChanged
  - System.Windows.Forms.Control.Width
  - System.Windows.Forms.Control.WindowTarget
  - System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)
  langs:
  - csharp
  name: Control
  nameWithType: Control
  fullName: System.Windows.Forms.Control
  type: Class
  summary: "시각적으로 표시 하는 구성 요소인 컨트롤에 대 한 기본 클래스를 정의 합니다."
  remarks: "사용자 정의 컨트롤 클래스를 만들려면에서 상속 된 <xref:System.Windows.Forms.UserControl>, 컨트롤, 클래스 또는 다른 Windows Forms에서 컨트롤을 제공 합니다.</xref:System.Windows.Forms.UserControl> 사용자 지정 컨트롤 제작 하는 방법에 대 한 자세한 내용은 참조 [.NET Framework와 함께 사용자 지정 Windows Forms 컨트롤 개발](~/add/includes/ajax-current-ext-md.md)합니다.       컨트롤 클래스는 사용자에 게 정보를 표시 하는 클래스에 필요한 매우 기본적인 기능을 구현 합니다. 키보드 및 포인팅 장치를 통해 사용자 입력을 처리합니다. 메시지 라우팅 및 보안을 처리합니다. 그리기를 구현 하지는 않지만 (해당 위치 및 크기), 컨트롤의 범위를 정의 합니다. 창 핸들을 제공 (`hWnd`).       Windows Forms 컨트롤 주변 환경 처럼 자식 컨트롤이 표시 되어 있으므로 앰비언트 속성을 사용 합니다. *앰비언트 속성* 은 그렇지 않은 경우, 즉 컨트롤 속성 설정, 부모 컨트롤에서 검색 됩니다. 컨트롤에 없는 경우는 <xref:System.Windows.Forms.Control.Parent%2A>, 및에서 속성이 설정 되지 않은 경우 해당 컨트롤 통해 앰비언트 속성의 값을 확인 하는 <xref:System.Windows.Forms.Control.Site%2A>속성.</xref:System.Windows.Forms.Control.Site%2A> </xref:System.Windows.Forms.Control.Parent%2A> 컨트롤은 사이트에 없거나, 사이트 앰비언트 속성을 지원 하지 않는 경우 또는 속성에 설정 되어 있지 않으면는 <xref:System.Windows.Forms.AmbientProperties>, 컨트롤 자체 기본값을 사용 합니다.</xref:System.Windows.Forms.AmbientProperties> 일반적으로 앰비언트 속성은 컨트롤의와 같은 <xref:System.Windows.Forms.Control.BackColor%2A>, 즉 자식 컨트롤에 전달 합니다.</xref:System.Windows.Forms.Control.BackColor%2A> 예를 들어 한 <xref:System.Windows.Forms.Button>같은 가질 수 <xref:System.Windows.Forms.Control.BackColor%2A>부모로 <xref:System.Windows.Forms.Form>기본적으로.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Control.BackColor%2A> </xref:System.Windows.Forms.Button> Controlclass에서 제공 하는 앰비언트 속성에 포함: <xref:System.Windows.Forms.Control.Cursor%2A>, <xref:System.Windows.Forms.Control.Font%2A>, <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, 및 <xref:System.Windows.Forms.Control.RightToLeft%2A>.</xref:System.Windows.Forms.Control.RightToLeft%2A> </xref:System.Windows.Forms.Control.ForeColor%2A> </xref:System.Windows.Forms.Control.BackColor%2A> </xref:System.Windows.Forms.Control.Font%2A> </xref:System.Windows.Forms.Control.Cursor%2A>      > [!NOTE] > 비주얼 스타일을 지원 하 여 Windows Forms 응용 프로그램을 위해 설정 해야는 <xref:System.Windows.Forms.FlatStyle>속성을 `System` 실행 파일을 사용 하 여 매니페스트를 포함 합니다.</xref:System.Windows.Forms.FlatStyle> 매니페스트는 응용 프로그램 실행 파일 내에서 리소스 사용 또는 실행 파일과 동일한 디렉터리에 있는 별도 파일로 포함 되어 있는 XML 파일입니다. 예로 매니페스트의 예 섹션을 참조 하십시오.는 <xref:System.Windows.Forms.FlatStyle>열거형.</xref:System.Windows.Forms.FlatStyle> 비주얼 스타일을 사용 하는 방법에 대 한 자세한 내용은 참조[비주얼 스타일](http://msdn.microsoft.com/library/windows/desktop/bb773187.aspx)합니다.       Windows Forms 내게 필요한 옵션 지원 기본 제공 되 고 있으며 유틸리티를 접근성 클라이언트 응용 프로그램 화면 확대기 등 검토자 작업할 수 있도록 응용 프로그램에 대 한 정보를 제공, 음성 입력 유틸리티, 화면 키보드, 대체 입력된 장치 및 키보드 향상 유틸리티입니다. 추가 정보를 접근성 클라이언트 응용 프로그램을 제공할 수도 있습니다. 이 추가 정보를 제공 하는 방법은 두 가지가 있습니다. 설정할 수 있습니다는 <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleDescription%2A>, <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A>, 및 <xref:System.Windows.Forms.Control.AccessibleRole%2A>접근성 클라이언트 응용 프로그램에 보고 되는 속성 값입니다.</xref:System.Windows.Forms.Control.AccessibleRole%2A> </xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A> </xref:System.Windows.Forms.Control.AccessibleDescription%2A> </xref:System.Windows.Forms.Control.AccessibleName%2A> 이 메서드는 기존 컨트롤에 대 한 제한 된 내게 필요한 옵션 정보를 제공 하려면 일반적으로 사용 됩니다. 또는에서 파생 되는 고유한 클래스를 작성할 수는 <xref:System.Windows.Forms.AccessibleObject>또는 <xref:System.Windows.Forms.Control.ControlAccessibleObject>클래스, 필요에 따라 많은 내게 필요한 옵션 정보를 제공 합니다.</xref:System.Windows.Forms.Control.ControlAccessibleObject> </xref:System.Windows.Forms.AccessibleObject>      > [!NOTE] > 더 나은 성능을 유지 하기 위해 크기 설정 하지 마십시오는 컨트롤의 생성자에서입니다. 재정의 하는 메서드가 좋습니다는 <xref:System.Windows.Forms.Control.DefaultSize%2A>속성.</xref:System.Windows.Forms.Control.DefaultSize%2A>      > [!NOTE] > 컨트롤에 대 한 데이터 바인딩을 생성자에 추가 하지 마십시오. 이렇게 하면 코드 생성에서 오류가 발생 하 고 원하지 않는 동작이 발생할 수 있습니다.       대부분의 컨트롤의는 <xref:System.Windows.Forms>네임 스페이스를 구축 하는 기반으로 기본 Windows 공용 컨트롤을 사용 합니다.</xref:System.Windows.Forms> Windows 공용 컨트롤에 대 한 자세한 내용은 참조[일반 컨트롤 참조](http://msdn.microsoft.com/library/windows/desktop/bb775497.aspx)합니다.       별도 프로세스에서 Windows Forms 컨트롤을 식별 하려면 사용 하는 표준 `SendMessage` WM_GETCONTROLNAME 메시지를 전달 하도록 호출 합니다. WM_GETCONTROLNAME는 별개의 언어와 Windows 계층 구조입니다. 자세한 내용은 &quot;Windows Forms에 대 한 권장 솔루션&quot; 항목을 참조[Windows Forms 자동화](http://msdn.microsoft.com/library/ms996405.aspx)합니다.       사용 하 여 <xref:System.Windows.Forms.Control.InvokeRequired%2A>여러 스레드에서 컨트롤에 대 한 액세스를 동기화 하는 속성.</xref:System.Windows.Forms.Control.InvokeRequired%2A> 다중 스레드 Windows Forms 컨트롤에 대 한 자세한 내용은 참조 하십시오. [하는 방법: Windows Forms 컨트롤에 스레드로부터 안전한 호출 수행](~/add/includes/ajax-current-ext-md.md)"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Click")]

      [System.ComponentModel.DefaultProperty("Text")]

      [System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.ControlCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.Designer("System.Windows.Forms.Design.ControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")]

      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class Control : System.ComponentModel.Component, IDisposable, System.ComponentModel.ISynchronizeInvoke, System.Windows.Forms.IBindableComponent, System.Windows.Forms.IDropTarget, System.Windows.Forms.IWin32Window
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements:
  - System.ComponentModel.ISynchronizeInvoke
  - System.IDisposable
  - System.Windows.Forms.IBindableComponent
  - System.Windows.Forms.IDropTarget
  - System.Windows.Forms.IWin32Window
  inheritedMembers:
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Windows.Forms.Control.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Control()
  nameWithType: Control.Control()
  fullName: System.Windows.Forms.Control.Control()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 기본 설정 사용 합니다."
  remarks: "<xref:System.Windows.Forms.Control>클래스는 Windows Forms 응용 프로그램에서 사용 되는 모든 컨트롤에 대 한 기본 클래스입니다.</xref:System.Windows.Forms.Control> 이 클래스는 클래스의 인스턴스를 만들려면 일반적으로 사용 되지 않으므로이 생성자는 일반적으로 직접 호출 되지 하지만 않고 파생된 클래스에 의해 호출 됩니다."
  syntax:
    content: public Control ();
    parameters: []
  overload: System.Windows.Forms.Control.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Control(String)
  nameWithType: Control.Control(String)
  fullName: System.Windows.Forms.Control.Control(String)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 특정 텍스트를 사용 하 여 클래스입니다."
  remarks: "<xref:System.Windows.Forms.Control>클래스는 Windows Forms 응용 프로그램에서 사용 되는 모든 컨트롤에 대 한 기본 클래스입니다.</xref:System.Windows.Forms.Control> 이 클래스는 클래스의 인스턴스를 만들려면 일반적으로 사용 되지 않으므로이 생성자는 일반적으로 직접 호출 되지 하지만 않고 파생된 클래스에 의해 호출 됩니다.       이 버전의는 <xref:System.Windows.Forms.Control.%23ctor%2A>생성자 초기 설정 <xref:System.Windows.Forms.Control.Text%2A>속성 값을는 `text` 매개 변수 값.</xref:System.Windows.Forms.Control.Text%2A> </xref:System.Windows.Forms.Control.%23ctor%2A>"
  syntax:
    content: public Control (string text);
    parameters:
    - id: text
      type: System.String
      description: "컨트롤에 의해 표시 되는 텍스트입니다."
  overload: System.Windows.Forms.Control.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)
  id: '#ctor(System.Windows.Forms.Control,System.String)'
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Control(Control,String)
  nameWithType: Control.Control(Control,String)
  fullName: System.Windows.Forms.Control.Control(Control,String)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 클래스를 자식 컨트롤로 특정 텍스트 포함 합니다."
  remarks: "<xref:System.Windows.Forms.Control>클래스는 Windows Forms 응용 프로그램에서 사용 되는 모든 컨트롤에 대 한 기본 클래스입니다.</xref:System.Windows.Forms.Control> 이 클래스는 클래스의 인스턴스를 만들려면 일반적으로 사용 되지 않으므로이 생성자는 일반적으로 직접 호출 되지 하지만 않고 파생된 클래스에 의해 호출 됩니다.       이 버전의는 <xref:System.Windows.Forms.Control.%23ctor%2A>생성자 초기 설정 <xref:System.Windows.Forms.Control.Text%2A>속성 값을는 `text` 매개 변수 값.</xref:System.Windows.Forms.Control.Text%2A> </xref:System.Windows.Forms.Control.%23ctor%2A> 생성자는 부모 컨트롤 <xref:System.Windows.Forms.Control.ControlCollection>.</xref:System.Windows.Forms.Control.ControlCollection> 에 컨트롤 추가"
  syntax:
    content: public Control (System.Windows.Forms.Control parent, string text);
    parameters:
    - id: parent
      type: System.Windows.Forms.Control
      description: "<xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 컨트롤의 부모가 될 수 있습니다."
    - id: text
      type: System.String
      description: "컨트롤에 의해 표시 되는 텍스트입니다."
  overload: System.Windows.Forms.Control.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Control(String,Int32,Int32,Int32,Int32)
  nameWithType: Control.Control(String,Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.Control.Control(String,Int32,Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 특정 텍스트, 크기 및 위치를 사용 하 여 클래스입니다."
  remarks: "<xref:System.Windows.Forms.Control>클래스는 Windows Forms 응용 프로그램에서 사용 되는 모든 컨트롤에 대 한 기본 클래스입니다.</xref:System.Windows.Forms.Control> 이 클래스는 클래스의 인스턴스를 만들려면 일반적으로 사용 되지 않으므로이 생성자는 일반적으로 직접 호출 되지 하지만 않고 파생된 클래스에 의해 호출 됩니다.       이 버전의는 <xref:System.Windows.Forms.Control.%23ctor%2A>생성자 초기 설정 <xref:System.Windows.Forms.Control.Text%2A>속성 값을는 `text` 매개 변수 값.</xref:System.Windows.Forms.Control.Text%2A> </xref:System.Windows.Forms.Control.%23ctor%2A> 초기 <xref:System.Windows.Forms.Control.Size%2A>및 <xref:System.Windows.Forms.Control.Location%2A>컨트롤에 따라 결정 되는 `left`, `top`, `width` 및 `height` 매개 변수 값.</xref:System.Windows.Forms.Control.Location%2A> </xref:System.Windows.Forms.Control.Size%2A>      > [!NOTE] > 더 나은 성능을 유지 하기 위해 크기 설정 하지 마십시오는 컨트롤의 생성자에서입니다. 재정의 하는 메서드가 좋습니다는 <xref:System.Windows.Forms.Control.DefaultSize%2A>속성.</xref:System.Windows.Forms.Control.DefaultSize%2A>"
  syntax:
    content: public Control (string text, int left, int top, int width, int height);
    parameters:
    - id: text
      type: System.String
      description: "컨트롤에 의해 표시 되는 텍스트입니다."
    - id: left
      type: System.Int32
      description: "<> </> *> 컨트롤의 위치 (픽셀 컨트롤의 컨테이너의 왼쪽된 가장자리에서). 값에 할당 되는 <> </> *> 속성."
    - id: top
      type: System.Int32
      description: "<> </> *> 컨트롤의 위치 (픽셀)에서 컨트롤의 컨테이너의 위쪽 가장자리입니다. 값에 할당 되는 <> </> *> 속성."
    - id: width
      type: System.Int32
      description: "픽셀 단위로 컨트롤의 너비입니다. 값에 할당 되는 <xref:System.Windows.Forms.Control.Width*>속성.</xref:System.Windows.Forms.Control.Width*>"
    - id: height
      type: System.Int32
      description: "픽셀 단위로 컨트롤의 높이입니다. 값에 할당 되는 <xref:System.Windows.Forms.Control.Height*>속성.</xref:System.Windows.Forms.Control.Height*>"
  overload: System.Windows.Forms.Control.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Control(Control,String,Int32,Int32,Int32,Int32)
  nameWithType: Control.Control(Control,String,Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.Control.Control(Control,String,Int32,Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 특정 텍스트, 크기 및 위치를 자식 컨트롤로 클래스입니다."
  remarks: "<xref:System.Windows.Forms.Control>클래스는 Windows Forms 응용 프로그램에서 사용 되는 모든 컨트롤에 대 한 기본 클래스입니다.</xref:System.Windows.Forms.Control> 이 클래스는 클래스의 인스턴스를 만들려면 일반적으로 사용 되지 않으므로이 생성자는 일반적으로 직접 호출 되지 하지만 않고 파생된 클래스에 의해 호출 됩니다.       이 버전의는 <xref:System.Windows.Forms.Control.%23ctor%2A>생성자 초기 설정 <xref:System.Windows.Forms.Control.Text%2A>속성 값을는 `text` 매개 변수 값.</xref:System.Windows.Forms.Control.Text%2A> </xref:System.Windows.Forms.Control.%23ctor%2A> 생성자는 부모 컨트롤 <xref:System.Windows.Forms.Control.ControlCollection>.</xref:System.Windows.Forms.Control.ControlCollection> 에 컨트롤 추가 초기 <xref:System.Windows.Forms.Control.Size%2A>및 <xref:System.Windows.Forms.Control.Location%2A>컨트롤에 따라 결정 되는 `left`, `top`, `width` 및 `height` 매개 변수 값.</xref:System.Windows.Forms.Control.Location%2A> </xref:System.Windows.Forms.Control.Size%2A>      > [!NOTE] > 더 나은 성능을 유지 하기 위해 크기 설정 하지 마십시오는 컨트롤의 생성자에서입니다. 재정의 하는 메서드가 좋습니다는 <xref:System.Windows.Forms.Control.DefaultSize%2A>속성.</xref:System.Windows.Forms.Control.DefaultSize%2A>"
  syntax:
    content: public Control (System.Windows.Forms.Control parent, string text, int left, int top, int width, int height);
    parameters:
    - id: parent
      type: System.Windows.Forms.Control
      description: "<xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 컨트롤의 부모가 될 수 있습니다."
    - id: text
      type: System.String
      description: "컨트롤에 의해 표시 되는 텍스트입니다."
    - id: left
      type: System.Int32
      description: "<> </> *> 컨트롤의 위치 (픽셀 컨트롤의 컨테이너의 왼쪽된 가장자리에서). 값에 할당 되는 <> </> *> 속성."
    - id: top
      type: System.Int32
      description: "<> </> *> 컨트롤의 위치 (픽셀)에서 컨트롤의 컨테이너의 위쪽 가장자리입니다. 값에 할당 되는 <> </> *> 속성."
    - id: width
      type: System.Int32
      description: "픽셀 단위로 컨트롤의 너비입니다. 값에 할당 되는 <xref:System.Windows.Forms.Control.Width*>속성.</xref:System.Windows.Forms.Control.Width*>"
    - id: height
      type: System.Int32
      description: "픽셀 단위로 컨트롤의 높이입니다. 값에 할당 되는 <xref:System.Windows.Forms.Control.Height*>속성.</xref:System.Windows.Forms.Control.Height*>"
  overload: System.Windows.Forms.Control.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)
  id: AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: AccessibilityNotifyClients(AccessibleEvents,Int32)
  nameWithType: Control.AccessibilityNotifyClients(AccessibleEvents,Int32)
  fullName: System.Windows.Forms.Control.AccessibilityNotifyClients(AccessibleEvents,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정 된 접근성 클라이언트 응용 프로그램에 알립니다. <xref href=&quot;System.Windows.Forms.AccessibleEvents&quot;> </xref> 지정된 된 자식 컨트롤에 대 한 합니다."
  remarks: "호출 해야 합니다는 <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A?displayProperty=fullName>메서드 각각에 대해 <xref:System.Windows.Forms.AccessibleEvents>접근성 클라이언트 응용 프로그램의 알림을 받을 수는 있습니다.</xref:System.Windows.Forms.AccessibleEvents> </xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A?displayProperty=fullName> <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A>일반적으로 메서드는 속성을 설정 하거나 내에서 이벤트 처리기.</xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A> 예를 들어, 호출할 수 있습니다는 <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A>메서드와 전달은 <xref:System.Windows.Forms.AccessibleEvents>값 `Hide` 에서 대 한 이벤트 처리기 내에서 <xref:System.Windows.Forms.Control.VisibleChanged?displayProperty=fullName>이벤트.</xref:System.Windows.Forms.Control.VisibleChanged?displayProperty=fullName> </xref:System.Windows.Forms.AccessibleEvents> </xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A>"
  example:
  - "The following code example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code excerpt demonstrates calling the AccessibilityNotifyClients method. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#5](~/add/codesnippet/visualbasic/af0c391d-8e12-4af6-b124-_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#5](~/add/codesnippet/csharp/af0c391d-8e12-4af6-b124-_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#5](~/add/codesnippet/cpp/af0c391d-8e12-4af6-b124-_1.cpp)]"
  syntax:
    content: protected void AccessibilityNotifyClients (System.Windows.Forms.AccessibleEvents accEvent, int childID);
    parameters:
    - id: accEvent
      type: System.Windows.Forms.AccessibleEvents
      description: "<xref href=&quot;System.Windows.Forms.AccessibleEvents&quot;> </xref> 의 접근성 클라이언트 응용 프로그램에 알리기 위해."
    - id: childID
      type: System.Int32
      description: "자식 <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 액세스할 수 있는 이벤트의 알릴 수 있습니다."
  overload: System.Windows.Forms.Control.AccessibilityNotifyClients*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)
  id: AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: AccessibilityNotifyClients(AccessibleEvents,Int32,Int32)
  nameWithType: Control.AccessibilityNotifyClients(AccessibleEvents,Int32,Int32)
  fullName: System.Windows.Forms.Control.AccessibilityNotifyClients(AccessibleEvents,Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정 된 접근성 클라이언트 응용 프로그램에 알립니다. <xref href=&quot;System.Windows.Forms.AccessibleEvents&quot;> </xref> 지정된 된 자식 컨트롤에 대 한 합니다."
  syntax:
    content: protected void AccessibilityNotifyClients (System.Windows.Forms.AccessibleEvents accEvent, int objectID, int childID);
    parameters:
    - id: accEvent
      type: System.Windows.Forms.AccessibleEvents
      description: "<xref href=&quot;System.Windows.Forms.AccessibleEvents&quot;> </xref> 의 접근성 클라이언트 응용 프로그램에 알리기 위해."
    - id: objectID
      type: System.Int32
      description: "식별자는 <xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref>합니다."
    - id: childID
      type: System.Int32
      description: "자식 <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 액세스할 수 있는 이벤트의 알릴 수 있습니다."
  overload: System.Windows.Forms.Control.AccessibilityNotifyClients*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.AccessibilityObject
  id: AccessibilityObject
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: AccessibilityObject
  nameWithType: Control.AccessibilityObject
  fullName: System.Windows.Forms.Control.AccessibilityObject
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "가져옵니다는 <xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref> 컨트롤에 할당 합니다."
  remarks: "이 메서드에서 반환 되는 인스턴스를 제어 하려면 재정의 <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>메서드.</xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>       없는 경우 <xref:System.Windows.Forms.AccessibleObject>현재 할당을 컨트롤의 새 인스턴스가 만들어집니다.</xref:System.Windows.Forms.AccessibleObject>      > [!NOTE] > 가져오거나 AccessibilityObject 속성 설정에 대 한 참조를 추가 해야는 `Accessibility` 어셈블리와 함께 설치는[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]합니다.       액세스 가능한 개체에 대 한 자세한 내용은 참조 [Active Accessibility](http://msdn.microsoft.com/library/windows/desktop/dd373592.aspx)합니다."
  syntax:
    content: public System.Windows.Forms.AccessibleObject AccessibilityObject { get; }
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "<xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref> 컨트롤에 할당 합니다."
  overload: System.Windows.Forms.Control.AccessibilityObject*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.AccessibleDefaultActionDescription
  id: AccessibleDefaultActionDescription
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: AccessibleDefaultActionDescription
  nameWithType: Control.AccessibleDefaultActionDescription
  fullName: System.Windows.Forms.Control.AccessibleDefaultActionDescription
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "클라이언트 응용 프로그램 사용 하기 위해 컨트롤의 기본 동작 설명 내게 필요한 옵션 설정 하거나 가져옵니다."
  remarks: "개체의 AccessibleDefaultActionDescription 속성 개체의 주요 조작 방법에는 사용자의 관점에서 설명합니다. 이 속성에 동사 또는 짧은 동사 구 이어야 합니다.      > [!NOTE] > 일부 개체는 기본 동작 및 일부 개체에 관련 된 기본 작업이 있는 것은 <xref:System.Windows.Forms.AccessibleObject.Value%2A?displayProperty=fullName>다음 예제와 같이 속성:-확인란이 선택된 &quot;취소&quot;의 기본 동작에는 &quot;선택 됩니다.&quot;의 값</xref:System.Windows.Forms.AccessibleObject.Value%2A?displayProperty=fullName>      -확인란 선택이 취소에 &quot;확인&quot;의 기본 동작 및 값이 &quot;옵션&quot;을 해제 합니다.      -단추 &quot;Print&quot; 레이블이 지정 된 값이 없는 &quot;Press&quot;의 기본 동작을 있습니다.      -레이블을 또는 &quot;Printer&quot;를 표시 하는 텍스트 상자 컨트롤에 기본 작업이 없는 &quot;Printer&quot;의 값       액세스 가능한 개체의 속성에 대 한 자세한 내용은 참조 [설명이 포함 된 속성의 콘텐츠](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)합니다."
  syntax:
    content: public string AccessibleDefaultActionDescription { get; set; }
    return:
      type: System.String
      description: "접근성 클라이언트 응용 프로그램에서 사용 하기 위해 컨트롤의 기본 동작 설명입니다."
  overload: System.Windows.Forms.Control.AccessibleDefaultActionDescription*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.AccessibleDescription
  id: AccessibleDescription
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: AccessibleDescription
  nameWithType: Control.AccessibleDescription
  fullName: System.Windows.Forms.Control.AccessibleDescription
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "접근성 클라이언트 응용 프로그램에서 사용 하는 컨트롤에 대 한 설명을 가져오거나 설정 합니다."
  remarks: "개체의 AccessibleDescription 속성 개체의 시각적 모양에 대 한 텍스트 설명을 제공합니다. 설명은 이해를 돕기 위해 시각 장애인을 위해 주로 사용 하지만 컨텍스트 검색 이나 다른 응용 프로그램에 사용할 수도 있습니다.       AccessibleDescription 속성 설명이 드러나지 않습니다. 경우에 필요 하거나 중복 되는 경우 개체의 기반 <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleRole%2A>, <xref:System.Windows.Forms.AccessibleObject.State%2A>, 및 <xref:System.Windows.Forms.AccessibleObject.Value%2A>속성.</xref:System.Windows.Forms.AccessibleObject.Value%2A> </xref:System.Windows.Forms.AccessibleObject.State%2A> </xref:System.Windows.Forms.Control.AccessibleRole%2A> </xref:System.Windows.Forms.Control.AccessibleName%2A> 예를 들어, &quot;확인&quot; 단추에는 추가 정보를 사용 해야 합니다. 하지만 선인장 그림이 표시 된 단추입니다. <xref:System.Windows.Forms.Control.AccessibleName%2A>, 및 <xref:System.Windows.Forms.Control.AccessibleRole%2A>(용도나 <xref:System.Windows.Forms.AccessibleObject.Help%2A>) 선인장 단추에 대 한 속성의 용도 설명 하지만 AccessibleDescription 속성 &quot;선인장 그림이 표시 된 단추입니다.&quot;와 같은 명백 하지 않은 정보를 전달 합니다</xref:System.Windows.Forms.AccessibleObject.Help%2A> </xref:System.Windows.Forms.Control.AccessibleRole%2A> </xref:System.Windows.Forms.Control.AccessibleName%2A>       액세스 가능한 개체의 속성에 대 한 자세한 내용은 참조 [설명이 포함 된 속성의 콘텐츠](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)합니다."
  example:
  - "The following code example creates an instance of a <xref:System.Windows.Forms.CheckBox> derived class, `MyCheckBox`, assigns it an <xref:System.Drawing.Image> to its <xref:System.Windows.Forms.ButtonBase.Image%2A> property and sets the <xref:System.Windows.Forms.Control.AccessibleName%2A> and AccessibleDescription properties, because the <xref:System.Windows.Forms.Control.Text%2A> property is `null`. This example requires that you have a <xref:System.Windows.Forms.Form> named `MyForm`.  \n  \n [!code-cs[Windows.Forms.Control.ControlAccessibleObject#2](~/add/codesnippet/csharp/p-system.windows.forms.c_91_1.cs)]\n [!code-cpp[Windows.Forms.Control.ControlAccessibleObject#2](~/add/codesnippet/cpp/p-system.windows.forms.c_91_1.cpp)]\n [!code-vb[Windows.Forms.Control.ControlAccessibleObject#2](~/add/codesnippet/visualbasic/p-system.windows.forms.c_91_1.vb)]"
  syntax:
    content: public string AccessibleDescription { get; set; }
    return:
      type: System.String
      description: "접근성 클라이언트 응용 프로그램에서 사용 하는 컨트롤의 설명입니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.AccessibleDescription*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.AccessibleName
  id: AccessibleName
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: AccessibleName
  nameWithType: Control.AccessibleName
  fullName: System.Windows.Forms.Control.AccessibleName
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "접근성 클라이언트 응용 프로그램에서 사용 하는 컨트롤의 이름을 가져오거나 설정 합니다."
  remarks: "AccessibleName 속성은 간략하게 설명 하 고 텍스트와 같은 해당 컨테이너 내에서 개체를 식별 하는 레이블을 <xref:System.Windows.Forms.Button>, 이름는 <xref:System.Windows.Forms.MenuItem>, 또는 옆에 표시 되는 레이블을 <xref:System.Windows.Forms.TextBox>컨트롤.</xref:System.Windows.Forms.TextBox> </xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.Button>       액세스 가능한 개체의 속성에 대 한 자세한 내용은 참조는 &quot;[설명이 포함 된 속성의 콘텐츠](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)합니다."
  example:
  - "The following code example creates an instance of a <xref:System.Windows.Forms.CheckBox> derived class, `MyCheckBox`, assigns it an <xref:System.Drawing.Image> to its <xref:System.Windows.Forms.ButtonBase.Image%2A> property and sets the AccessibleName and <xref:System.Windows.Forms.Control.AccessibleDescription%2A> properties since the <xref:System.Windows.Forms.Control.Text%2A> property is `null`. This example requires that you have a <xref:System.Windows.Forms.Form> named `MyForm`.  \n  \n [!code-cs[Windows.Forms.Control.ControlAccessibleObject#2](~/add/codesnippet/csharp/p-system.windows.forms.c_35_1.cs)]\n [!code-cpp[Windows.Forms.Control.ControlAccessibleObject#2](~/add/codesnippet/cpp/p-system.windows.forms.c_35_1.cpp)]\n [!code-vb[Windows.Forms.Control.ControlAccessibleObject#2](~/add/codesnippet/visualbasic/p-system.windows.forms.c_35_1.vb)]"
  syntax:
    content: public string AccessibleName { get; set; }
    return:
      type: System.String
      description: "접근성 클라이언트 응용 프로그램에서 사용 하는 컨트롤의 이름입니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.AccessibleName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.AccessibleRole
  id: AccessibleRole
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: AccessibleRole
  nameWithType: Control.AccessibleRole
  fullName: System.Windows.Forms.Control.AccessibleRole
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 액세스 가능 역할을 가져오거나 설정 합니다."
  remarks: "AccessibleRole 속성 개체는 사용자 인터페이스 요소 종류를 설명 합니다. AccessibleRole 속성 설정은 컨트롤의 역할을 확인할 수 없는 경우 `Default`합니다.       액세스 가능한 개체의 속성에 대 한 자세한 내용은 참조 [설명이 포함 된 속성의 콘텐츠](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)합니다."
  syntax:
    content: public System.Windows.Forms.AccessibleRole AccessibleRole { get; set; }
    return:
      type: System.Windows.Forms.AccessibleRole
      description: "값 중 하나 <xref href=&quot;System.Windows.Forms.AccessibleRole&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.AccessibleRole*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "할당 된 값 중 하나는 <xref href=&quot;System.Windows.Forms.AccessibleRole&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Windows.Forms.Control.AllowDrop
  id: AllowDrop
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: AllowDrop
  nameWithType: Control.AllowDrop
  fullName: System.Windows.Forms.Control.AllowDrop
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤 사용자가 컨트롤로 끌어 데이터를 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: ''
  example:
  - "The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped. The <xref:System.Windows.Forms.Control.OnPaint%2A> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting. The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback. The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data. Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=fullName> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=fullName> values are screen coordinates, the example uses the <xref:System.Windows.Forms.Control.PointToClient%2A> method to convert them to client coordinates.  \n  \n [!code-cs[Windows.Forms.Control.DragOperations#1](~/add/codesnippet/csharp/p-system.windows.forms.c_93_1.cs)]\n [!code-cpp[Windows.Forms.Control.DragOperations#1](~/add/codesnippet/cpp/p-system.windows.forms.c_93_1.cpp)]\n [!code-vb[Windows.Forms.Control.DragOperations#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_93_1.vb)]"
  syntax:
    content: public virtual bool AllowDrop { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤에서 끌어서 놓기 작업을 수행할 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.AllowDrop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Anchor
  id: Anchor
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Anchor
  nameWithType: Control.Anchor
  fullName: System.Windows.Forms.Control.Anchor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "통해 바인딩된 컨트롤과 해당 부모 컨트롤 크기를 조정 방법을 결정 하는 컨테이너의 가장자리를 가져오거나 설정 합니다."
  remarks: "Anchor 속성을 사용 하 여 컨트롤은 자동으로 조정 방법을 부모 컨트롤 크기 조정 되는지를 정의 합니다. 부모 컨트롤에 컨트롤을 고정 부모 컨트롤 크기를 조정할 때 부모 컨트롤의 가장자리를 기준으로 같은 위치에 고정된 된 가장자리 남아 있는지 확인 합니다.       해당 컨테이너의 가장자리를 하나 이상의 컨트롤을 고정할 수 있습니다. 예를 들어 한 <xref:System.Windows.Forms.Form>와 <xref:System.Windows.Forms.Button>앵커 속성 값이 설정 된 `Top` 및 `Bottom`, <xref:System.Windows.Forms.Button>의 위쪽 및 아래쪽 가장자리에 고정 된 거리를 유지 하기 위해는 <xref:System.Windows.Forms.Form>으로 <xref:System.Windows.Forms.Control.Height%2A>의 <xref:System.Windows.Forms.Form>증가.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Control.Height%2A> </xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Button> </xref:System.Windows.Forms.Button> </xref:System.Windows.Forms.Form>      > [!NOTE] > The 앵커 및 <xref:System.Windows.Forms.Control.Dock%2A>속성은 함께 사용할 수 없습니다.</xref:System.Windows.Forms.Control.Dock%2A> 한 번에 하나만 설정할 수 있습니다 및 우선적으로 마지막으로 설정 합니다."
  example:
  - "The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties. The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized. Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>. The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property. Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button. This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.  \n  \n [!code-cs[Windows.Forms.Control Properties#3](~/add/codesnippet/csharp/p-system.windows.forms.c_119_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties#3](~/add/codesnippet/cpp/p-system.windows.forms.c_119_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties#3](~/add/codesnippet/visualbasic/p-system.windows.forms.c_119_1.vb)]"
  syntax:
    content: public virtual System.Windows.Forms.AnchorStyles Anchor { get; set; }
    return:
      type: System.Windows.Forms.AnchorStyles
      description: "비트 조합 된 <xref href=&quot;System.Windows.Forms.AnchorStyles&quot;> </xref> 값입니다. The default is <xref uid=&quot;langword_csharp_Top&quot; name=&quot;Top&quot; href=&quot;&quot;></xref> and <xref uid=&quot;langword_csharp_Left&quot; name=&quot;Left&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.Control.Anchor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.AutoScrollOffset
  id: AutoScrollOffset
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: AutoScrollOffset
  nameWithType: Control.AutoScrollOffset
  fullName: System.Windows.Forms.Control.AutoScrollOffset
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "여기서이 컨트롤이 스크롤되는 <xref:System.Windows.Forms.ScrollableControl.ScrollControlIntoView*>.</xref:System.Windows.Forms.ScrollableControl.ScrollControlIntoView*> 을 가져오거나"
  syntax:
    content: public virtual System.Drawing.Point AutoScrollOffset { get; set; }
    return:
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> 스크롤 위치를 지정 합니다. 기본값은 컨트롤의 왼쪽 위 모퉁이입니다."
  overload: System.Windows.Forms.Control.AutoScrollOffset*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.AutoSize
  id: AutoSize
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: AutoSize
  nameWithType: Control.AutoSize
  fullName: System.Windows.Forms.Control.AutoSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 속성은이 클래스와 관련이 없습니다."
  remarks: "이 속성은이 클래스와 관련이 없습니다."
  syntax:
    content: public virtual bool AutoSize { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사용 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.AutoSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.AutoSizeChanged
  id: AutoSizeChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: AutoSizeChanged
  nameWithType: Control.AutoSizeChanged
  fullName: System.Windows.Forms.Control.AutoSizeChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 이벤트는이 클래스와 관련이 없습니다."
  remarks: "이 이벤트는이 클래스와 관련이 없습니다."
  syntax:
    content: public event EventHandler AutoSizeChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.BackColor
  id: BackColor
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: BackColor
  nameWithType: Control.BackColor
  fullName: System.Windows.Forms.Control.BackColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 대 한 배경색을 가져오거나 설정 합니다."
  remarks: "BackColor 속성에서 지원 하지 않습니다 투명 색상은 `SupportsTransparentBackColor` 값 <xref:System.Windows.Forms.ControlStyles?displayProperty=fullName>로 설정 된 `true`.</xref:System.Windows.Forms.ControlStyles?displayProperty=fullName>       BackColor 속성 앰비언트 속성이입니다. 그렇지 않은 경우, 즉 앰비언트 속성은 컨트롤 속성 설정, 부모 컨트롤에서 검색 됩니다. 예를 들어 한 <xref:System.Windows.Forms.Button>부모와 동일한 BackColor 갖습니다 <xref:System.Windows.Forms.Form>기본적으로.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Button> 앰비언트 속성에 대 한 자세한 내용은 참조는 <xref:System.Windows.Forms.AmbientProperties>클래스 또는 <xref:System.Windows.Forms.Control>클래스 개요.</xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.AmbientProperties>"
  example:
  - "The following code example sets the BackColor and <xref:System.Windows.Forms.Control.ForeColor%2A> of the controls to the default system colors. The code recursively calls itself if the control has any child controls. This code example requires that you have a <xref:System.Windows.Forms.Form> with at least one child control; however, a child container control, like a <xref:System.Windows.Forms.Panel> or <xref:System.Windows.Forms.GroupBox>, with its own child control(s) would better demonstrate the recursion.  \n  \n [!code-cs[Windows.Forms.Control Properties#1](~/add/codesnippet/csharp/p-system.windows.forms.c_44_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties#1](~/add/codesnippet/cpp/p-system.windows.forms.c_44_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_44_1.vb)]"
  syntax:
    content: public virtual System.Drawing.Color BackColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref> 컨트롤의 배경색을 나타내는입니다. 기본값은 값의는 <xref:System.Windows.Forms.Control.DefaultBackColor*>속성.</xref:System.Windows.Forms.Control.DefaultBackColor*>"
  overload: System.Windows.Forms.Control.BackColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.BackColorChanged
  id: BackColorChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: BackColorChanged
  nameWithType: Control.BackColorChanged
  fullName: System.Windows.Forms.Control.BackColorChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우의 값은 <xref:System.Windows.Forms.Control.BackColor*>속성 변경.</xref:System.Windows.Forms.Control.BackColor*>"
  remarks: "이 이벤트는 <xref:System.Windows.Forms.Control.BackColor%2A>프로그래밍 방식으로 수정 되거나 사용자 상호 작용 하 여 속성이 변경 될.</xref:System.Windows.Forms.Control.BackColor%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a <xref:System.Windows.Forms.Form>that contains a <xref:System.Windows.Forms.TextBox>.  \n  \n [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_47_1.vb)]\n [!code-cs[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/csharp/e-system.windows.forms.c_47_1.cs)]\n [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/cpp/e-system.windows.forms.c_47_1.cpp)]"
  syntax:
    content: public event EventHandler BackColorChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.BackgroundImage
  id: BackgroundImage
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: BackgroundImage
  nameWithType: Control.BackgroundImage
  fullName: System.Windows.Forms.Control.BackgroundImage
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 표시할 배경 이미지를 가져오거나 설정 합니다."
  remarks: "-BackgroundImage 속성을 사용 하 여 컨트롤에 그래픽 이미지를 배치할 수 있습니다.      > [!NOTE] > 반투명, 투명 한 색을 사용 하 여 이미지 배경 이미지와 Windows Forms 컨트롤에서 지원 되지 않습니다.   >>에서이 속성이 지원 되지 않는 자식 컨트롤 <xref:System.Windows.Forms.Form.RightToLeftLayout%2A>속성은 `true`.</xref:System.Windows.Forms.Form.RightToLeftLayout%2A>"
  example:
  - "The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties. The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized. Next it sets the BackgroundImage and resizes the button to the same size as the <xref:System.Drawing.Image>. The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property. Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button. This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.  \n  \n [!code-cs[Windows.Forms.Control Properties#3](~/add/codesnippet/csharp/p-system.windows.forms.c_34_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties#3](~/add/codesnippet/cpp/p-system.windows.forms.c_34_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties#3](~/add/codesnippet/visualbasic/p-system.windows.forms.c_34_1.vb)]"
  syntax:
    content: public virtual System.Drawing.Image BackgroundImage { get; set; }
    return:
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref> 컨트롤의 배경에 표시할 이미지를 나타내는입니다."
  overload: System.Windows.Forms.Control.BackgroundImage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.BackgroundImageChanged
  id: BackgroundImageChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: BackgroundImageChanged
  nameWithType: Control.BackgroundImageChanged
  fullName: System.Windows.Forms.Control.BackgroundImageChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우의 값은 <xref:System.Windows.Forms.Control.BackgroundImage*>속성 변경.</xref:System.Windows.Forms.Control.BackgroundImage*>"
  remarks: "이 이벤트는 <xref:System.Windows.Forms.Control.BackgroundImage%2A>프로그래밍 방식으로 수정 되거나 사용자 상호 작용 하 여 속성이 변경 될.</xref:System.Windows.Forms.Control.BackgroundImage%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.  \n  \n [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_46_1.vb)]\n [!code-cs[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/csharp/e-system.windows.forms.c_46_1.cs)]\n [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/cpp/e-system.windows.forms.c_46_1.cpp)]"
  syntax:
    content: public event EventHandler BackgroundImageChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.BackgroundImageLayout
  id: BackgroundImageLayout
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: BackgroundImageLayout
  nameWithType: Control.BackgroundImageLayout
  fullName: System.Windows.Forms.Control.BackgroundImageLayout
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "에 정의 된 대로 배경 이미지 레이아웃을 가져오거나는 <xref href=&quot;System.Windows.Forms.ImageLayout&quot;> </xref> 열거 합니다."
  remarks: "BackgroundImageLayout 속성을 사용 하 여 위치 및 컨트롤에 배치 했으면 이미지의 동작을 지정할 수 있습니다. BackgroundImageLayout 경우에 적용 됩니다는 <xref:System.Windows.Forms.Control.BackgroundImage%2A>속성을 설정 합니다.</xref:System.Windows.Forms.Control.BackgroundImage%2A>       BackgroundImageLayout <xref:System.Windows.Forms.ImageLayout>.</xref:System.Windows.Forms.ImageLayout> 이외의 값으로 설정 하는 경우에 큰 이미지에 대 한 성능을 향상 시킬 수 있습니다."
  syntax:
    content: public virtual System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }
    return:
      type: System.Windows.Forms.ImageLayout
      description: "One of the values of <xref href=&quot;System.Windows.Forms.ImageLayout&quot;></xref> (<xref href=&quot;System.Windows.Forms.ImageLayout&quot;></xref> , <xref href=&quot;System.Windows.Forms.ImageLayout&quot;></xref>, <xref href=&quot;System.Windows.Forms.ImageLayout&quot;></xref>, <xref href=&quot;System.Windows.Forms.ImageLayout&quot;></xref>, or <xref href=&quot;System.Windows.Forms.ImageLayout&quot;></xref>). <xref href=&quot;System.Windows.Forms.ImageLayout&quot;></xref>기본값이입니다."
  overload: System.Windows.Forms.Control.BackgroundImageLayout*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "지정된 된 열거형 값이 존재 하지 않습니다."
  platform:
  - net462
- uid: System.Windows.Forms.Control.BackgroundImageLayoutChanged
  id: BackgroundImageLayoutChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: BackgroundImageLayoutChanged
  nameWithType: Control.BackgroundImageLayoutChanged
  fullName: System.Windows.Forms.Control.BackgroundImageLayoutChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우는 <xref:System.Windows.Forms.Control.BackgroundImageLayout*>속성 변경.</xref:System.Windows.Forms.Control.BackgroundImageLayout*>"
  remarks: "이 이벤트는 <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A>프로그래밍 방식으로 또는 사용자 상호 작용 하 여 속성 변경.</xref:System.Windows.Forms.Control.BackgroundImageLayout%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the BackgroundImageLayoutChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the BackgroundImageLayoutChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#9](~/add/codesnippet/csharp/e-system.windows.forms.c_5_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#9](~/add/codesnippet/visualbasic/e-system.windows.forms.c_5_1.vb)]"
  syntax:
    content: public event EventHandler BackgroundImageLayoutChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.BeginInvoke(System.Delegate)
  id: BeginInvoke(System.Delegate)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: BeginInvoke(Delegate)
  nameWithType: Control.BeginInvoke(Delegate)
  fullName: System.Windows.Forms.Control.BeginInvoke(Delegate)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 내부 핸들이 작성 된 스레드에서 지정된 된 대리자를 비동기적으로 실행 합니다."
  remarks: "대리자가 비동기적으로 호출 하 고이 메서드가 즉시 반환 합니다. 컨트롤의 핸들이 있는 스레드에서 모든 스레드에서이 메서드를 호출할 수 있습니다. 컨트롤의 핸들이 아직 존재 하지 않는 경우 창 핸들이 폼 또는 컨트롤을 찾을 때까지이 메서드는 컨트롤의 부모 체인을 검색 합니다. 적절 한 핸들을 찾을 수 있는 경우 BeginInvoke 예외가 throw 됩니다. 대리자 메서드 내에서 예외 포착 되지 않는 것으로 간주 되어 응용 프로그램의 포착 되지 않은 예외 처리기로 전송 됩니다.       호출할 수 있습니다 <xref:System.Windows.Forms.Control.EndInvoke%2A>경우도 있지만이 필요 하지 않은 경우는 대리자의 반환 값을 검색할 수 있습니다.</xref:System.Windows.Forms.Control.EndInvoke%2A> <xref:System.Windows.Forms.Control.EndInvoke%2A>반환 값을 검색할 수 있을 때까지 차단 됩니다.</xref:System.Windows.Forms.Control.EndInvoke%2A>      > [!NOTE] > 대부분의 메서드는 컨트롤 에서만 호출 될 수 스레드에서 컨트롤이 만들어진 위치입니다. 외에 <xref:System.Windows.Forms.Control.InvokeRequired%2A>속성에는 스레드로부터 안전 컨트롤에서 네 가지 메서드가 있습니다: <xref:System.Windows.Forms.Control.Invoke%2A>, BeginInvoke <xref:System.Windows.Forms.Control.EndInvoke%2A>, 및 <xref:System.Windows.Forms.Control.CreateGraphics%2A>컨트롤에 대 한 핸들 이미 만든 경우.</xref:System.Windows.Forms.Control.CreateGraphics%2A> </xref:System.Windows.Forms.Control.EndInvoke%2A> </xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control.InvokeRequired%2A> 호출 <xref:System.Windows.Forms.Control.CreateGraphics%2A>컨트롤의 핸들이 백그라운드 스레드에서 생성 되기 전에 잘못 된 크로스 스레드 호출 될 수 있습니다.</xref:System.Windows.Forms.Control.CreateGraphics%2A> 다른 모든 메서드 호출에 대 한 사용할지 invoke 메서드 중 하나를 컨트롤의 스레드에 대 한 호출을 마샬링하 합니다. Invoke 메서드는 항상 컨트롤의 스레드에 해당 콜백을 호출합니다.      > [!NOTE] > 메시지를 처리 해야 하는 스레드가 더 이상 활성 상태가 예외가 throw 될 수 없습니다."
  example:
  - "The following code example demonstrates a use of the BeginInvoke method.  \n  \n [!code-cpp[Control_BeginInvoke#2](~/add/codesnippet/cpp/m-system.windows.forms.c_68_1.cpp)]\n [!code-vb[Control_BeginInvoke#2](~/add/codesnippet/visualbasic/m-system.windows.forms.c_68_1.vb)]\n [!code-cs[Control_BeginInvoke#2](~/add/codesnippet/csharp/m-system.windows.forms.c_68_1.cs)]"
  syntax:
    content: public IAsyncResult BeginInvoke (Delegate method);
    parameters:
    - id: method
      type: System.Delegate
      description: "매개 변수를 사용 하는 메서드에 대리자입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>BeginInvoke 작업의 결과 나타내는입니다.</xref:System.IAsyncResult>"
  overload: System.Windows.Forms.Control.BeginInvoke*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "해당 창 핸들을 찾을 수 있습니다."
  platform:
  - net462
- uid: System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])
  id: BeginInvoke(System.Delegate,System.Object[])
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: BeginInvoke(Delegate,Object[])
  nameWithType: Control.BeginInvoke(Delegate,Object[])
  fullName: System.Windows.Forms.Control.BeginInvoke(Delegate,Object[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 내부 핸들이 작성 된 스레드에서 특정된 인수를 비동기적으로 지정된 된 대리자를 실행 합니다."
  remarks: "대리자가 비동기적으로 호출 하 고이 메서드가 즉시 반환 합니다. 컨트롤의 핸들이 있는 스레드에서 모든 스레드에서이 메서드를 호출할 수 있습니다. 컨트롤의 핸들이 아직 존재 하지 않는 경우 창 핸들이 폼 또는 컨트롤을 찾을 때까지이 메서드는 컨트롤의 부모 체인을 검색 합니다. 적절 한 핸들을 찾을 수 있는 경우 <xref:System.Windows.Forms.Control.BeginInvoke%2A>예외가 throw 됩니다.</xref:System.Windows.Forms.Control.BeginInvoke%2A> 대리자 메서드 내에서 예외 포착 되지 않는 것으로 간주 되어 응용 프로그램의 포착 되지 않은 예외 처리기로 전송 됩니다.       호출할 수 있습니다 <xref:System.Windows.Forms.Control.EndInvoke%2A>경우도 있지만이 필요 하지 않은 경우는 대리자의 반환 값을 검색할 수 있습니다.</xref:System.Windows.Forms.Control.EndInvoke%2A> <xref:System.Windows.Forms.Control.EndInvoke%2A>반환 값을 검색할 수 있을 때까지 차단 됩니다.</xref:System.Windows.Forms.Control.EndInvoke%2A>      > [!NOTE] > 대부분의 메서드는 컨트롤 에서만 호출 될 수 스레드에서 컨트롤이 만들어진 위치입니다. 외에 <xref:System.Windows.Forms.Control.InvokeRequired%2A>속성에는 스레드로부터 안전 컨트롤에서 네 가지 메서드가 있습니다: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, 및 <xref:System.Windows.Forms.Control.CreateGraphics%2A>컨트롤에 대 한 핸들 이미 만든 경우.</xref:System.Windows.Forms.Control.CreateGraphics%2A> </xref:System.Windows.Forms.Control.EndInvoke%2A> </xref:System.Windows.Forms.Control.BeginInvoke%2A> </xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control.InvokeRequired%2A> 호출 <xref:System.Windows.Forms.Control.CreateGraphics%2A>컨트롤의 핸들이 백그라운드 스레드에서 생성 되기 전에 잘못 된 크로스 스레드 호출 될 수 있습니다.</xref:System.Windows.Forms.Control.CreateGraphics%2A> 다른 모든 메서드 호출에 대 한 사용할지 invoke 메서드 중 하나를 컨트롤의 스레드에 대 한 호출을 마샬링하 합니다. Invoke 메서드는 항상 컨트롤의 스레드에 해당 콜백을 호출합니다.      > [!NOTE] > 메시지를 처리 해야 하는 스레드가 더 이상 활성 상태가 예외가 throw 될 수 없습니다."
  example:
  - "The following code example demonstrates a use of the BeginInvoke method.  \n  \n [!code-cpp[Control_BeginInvoke#1](~/add/codesnippet/cpp/m-system.windows.forms.c_33_1.cpp)]\n [!code-vb[Control_BeginInvoke#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_33_1.vb)]\n [!code-cs[Control_BeginInvoke#1](~/add/codesnippet/csharp/m-system.windows.forms.c_33_1.cs)]"
  syntax:
    content: public IAsyncResult BeginInvoke (Delegate method, object[] args);
    parameters:
    - id: method
      type: System.Delegate
      description: "수 및에 포함 된 형식과 동일한 매개 변수를 사용 하는 메서드에 대리자는 `args` 매개 변수입니다."
    - id: args
      type: System.Object[]
      description: "주어진 메서드에 인수로 전달 하는 개체의 배열입니다. 이 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 없는 인수가 필요 합니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>의 결과 나타내는 <xref:System.Windows.Forms.Control.BeginInvoke*>작업.</xref:System.Windows.Forms.Control.BeginInvoke*> </xref:System.IAsyncResult>"
  overload: System.Windows.Forms.Control.BeginInvoke*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "해당 창 핸들을 찾을 수 있습니다."
  platform:
  - net462
- uid: System.Windows.Forms.Control.BindingContext
  id: BindingContext
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: BindingContext
  nameWithType: Control.BindingContext
  fullName: System.Windows.Forms.Control.BindingContext
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "가져오거나는 <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref> 컨트롤에 대 한 합니다."
  remarks: "<xref:System.Windows.Forms.BindingContext> <xref:System.Windows.Forms.Control>반환 하는 단일<xref:System.Windows.Forms.BindingManagerBase> 에 <xref:System.Windows.Forms.Control>.</xref:System.Windows.Forms.Control> 포함 된 모든 데이터 바인딩된 컨트롤에</xref:System.Windows.Forms.BindingManagerBase> 사용 되</xref:System.Windows.Forms.Control> 는</xref:System.Windows.Forms.BindingContext> <xref:System.Windows.Forms.BindingManagerBase>동기화 동일한 데이터 소스에 바인딩된 모든 컨트롤을 유지 합니다.</xref:System.Windows.Forms.BindingManagerBase> 예를 들어 설정는 <xref:System.Windows.Forms.BindingManagerBase.Position%2A>의 속성은 <xref:System.Windows.Forms.BindingManagerBase>모든 데이터 바인딩된 컨트롤이 가리키는 내부 목록에서 항목을 지정 합니다.</xref:System.Windows.Forms.BindingManagerBase> </xref:System.Windows.Forms.BindingManagerBase.Position%2A>       새 <xref:System.Windows.Forms.BindingContext>참조 <xref:System.Windows.Forms.BindingContext.%23ctor%2A>.</xref:System.Windows.Forms.BindingContext.%23ctor%2A> BindingContext 속성에 할당 하 고</xref:System.Windows.Forms.BindingContext> 만들기에 대 한 자세한 내용은"
  example:
  - "The following code example creates four <xref:System.Windows.Forms.Binding> objects to bind five controls, a <xref:System.Windows.Forms.DateTimePicker> and four <xref:System.Windows.Forms.TextBox> controls, to several data sources. The <xref:System.Windows.Forms.BindingContext> is then used to get the <xref:System.Windows.Forms.BindingManagerBase> for each data source.  \n  \n [!code-cpp[Classic BindingContext Example#1](~/add/codesnippet/cpp/p-system.windows.forms.c_109_1.cpp)]\n [!code-cs[Classic BindingContext Example#1](~/add/codesnippet/csharp/p-system.windows.forms.c_109_1.cs)]\n [!code-vb[Classic BindingContext Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_109_1.vb)]"
  syntax:
    content: public virtual System.Windows.Forms.BindingContext BindingContext { get; set; }
    return:
      type: System.Windows.Forms.BindingContext
      description: "A <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref> 컨트롤에 대 한 합니다."
  overload: System.Windows.Forms.Control.BindingContext*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.BindingContextChanged
  id: BindingContextChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: BindingContextChanged
  nameWithType: Control.BindingContextChanged
  fullName: System.Windows.Forms.Control.BindingContextChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우의 값은 <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref> 속성 변경 합니다."
  remarks: "새 <xref:System.Windows.Forms.BindingContext>에 <xref:System.Windows.Forms.Control>통해는 <xref:System.Windows.Forms.Control.BindingContext%2A>속성 참조는 <xref:System.Windows.Forms.BindingContext.%23ctor%2A>생성자.</xref:System.Windows.Forms.BindingContext.%23ctor%2A> </xref:System.Windows.Forms.Control.BindingContext%2A> </xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.BindingContext>       이 이벤트는 <xref:System.Windows.Forms.Control.BindingContext%2A>속성이 변경 될 프로그래밍 방식으로 수정 되거나 사용자 상호 작용 하 여 변경 됩니다.</xref:System.Windows.Forms.Control.BindingContext%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example adds an <xref:System.EventHandler> delegate to the BindingContextChanged event of a <xref:System.Windows.Forms.TextBox> control.  \n  \n [!code-vb[Classic Control.BindingContextChanged Example#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_1_1.vb)]\n [!code-cs[Classic Control.BindingContextChanged Example#1](~/add/codesnippet/csharp/e-system.windows.forms.c_1_1.cs)]\n [!code-cpp[Classic Control.BindingContextChanged Example#1](~/add/codesnippet/cpp/e-system.windows.forms.c_1_1.cpp)]"
  syntax:
    content: public event EventHandler BindingContextChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Bottom
  id: Bottom
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Bottom
  nameWithType: Control.Bottom
  fullName: System.Windows.Forms.Control.Bottom
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 아래쪽 가장자리와 해당 컨테이너 클라이언트 영역의 위쪽 가장자리 사이의 픽셀 거리를 가져옵니다."
  remarks: "이 속성의 값의 합계와 같은지는 <xref:System.Windows.Forms.Control.Top%2A>속성 값 및 <xref:System.Windows.Forms.Control.Height%2A>속성 값.</xref:System.Windows.Forms.Control.Height%2A> </xref:System.Windows.Forms.Control.Top%2A>       아래 속성은 읽기 전용 속성입니다. 값을 변경 하 여이 속성 값을 조작할 수 있습니다는 <xref:System.Windows.Forms.Control.Top%2A>또는 <xref:System.Windows.Forms.Control.Height%2A>속성 또는 호출의 <xref:System.Windows.Forms.Control.SetBounds%2A>, <xref:System.Windows.Forms.Control.SetBoundsCore%2A>, <xref:System.Windows.Forms.Control.UpdateBounds%2A>, 또는 <xref:System.Windows.Forms.Control.SetClientSizeCore%2A>메서드.</xref:System.Windows.Forms.Control.SetClientSizeCore%2A> </xref:System.Windows.Forms.Control.UpdateBounds%2A> </xref:System.Windows.Forms.Control.SetBoundsCore%2A> </xref:System.Windows.Forms.Control.SetBounds%2A> </xref:System.Windows.Forms.Control.Height%2A> </xref:System.Windows.Forms.Control.Top%2A>"
  example:
  - "The following code example uses the Bottom property to define the lower limit of a <xref:System.Windows.Forms.TextBox> control relative to the client area of the container.  \n  \n [!code-cpp[Control.KeyUp#1](~/add/codesnippet/cpp/p-system.windows.forms.c_53_1.cpp)]\n [!code-vb[Control.KeyUp#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_53_1.vb)]\n [!code-cs[Control.KeyUp#1](~/add/codesnippet/csharp/p-system.windows.forms.c_53_1.cs)]"
  syntax:
    content: public int Bottom { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>(픽셀) 컨트롤의 아래쪽 가장자리와 해당 컨테이너 클라이언트 영역의 위쪽 가장자리 사이의 거리를 나타내는.</xref:System.Int32>"
  overload: System.Windows.Forms.Control.Bottom*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Bounds
  id: Bounds
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Bounds
  nameWithType: Control.Bounds
  fullName: System.Windows.Forms.Control.Bounds
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "크기와 위치 (픽셀) 부모 컨트롤을 기준으로 비클라이언트 요소를 포함 하는 컨트롤의 값을 가져오거나 설정 합니다."
  remarks: "컨트롤의 범위는 스크롤 막대, 테두리, 제목 표시줄, 메뉴 등 비클라이언트 요소를 포함 합니다. <xref:System.Windows.Forms.Control.SetBoundsCore%2A>메서드를 호출 하 여 경계 속성을 설정 합니다.</xref:System.Windows.Forms.Control.SetBoundsCore%2A> Boundsproperty를 통해 변경 되지 않은 해당 `set` 메서드를 재정의 해야 하는 <xref:System.Windows.Forms.Control.SetBoundsCore%2A>메서드 범위 속성이 설정 된 경우 코드가 실행 되도록 합니다.</xref:System.Windows.Forms.Control.SetBoundsCore%2A>"
  example:
  - "The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties. This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.  \n  \n [!code-cs[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/csharp/p-system.windows.forms.c_114_1.cs)]\n [!code-cpp[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/cpp/p-system.windows.forms.c_114_1.cpp)]\n [!code-vb[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_114_1.vb)]"
  syntax:
    content: public System.Drawing.Rectangle Bounds { get; set; }
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 비클라이언트 요소를 포함 하 여 컨트롤의 위치와 크기를 나타내는 부모 컨트롤을 기준으로 합니다."
  overload: System.Windows.Forms.Control.Bounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.BringToFront
  id: BringToFront
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: BringToFront()
  nameWithType: Control.BringToFront()
  fullName: System.Windows.Forms.Control.BringToFront()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤을 z 순서의 맨 앞으로 가져옵니다."
  remarks: "컨트롤이 z 순서의 맨 앞으로 이동 합니다. 다른 컨트롤의 자식 컨트롤을 사용 하는 경우 자식 컨트롤이 z 순서의 맨 앞으로 이동 됩니다. 누른 해도 컨트롤을 최상위 컨트롤로 하며 발생 하지 않습니다는 <xref:System.Windows.Forms.Control.Paint>이벤트.</xref:System.Windows.Forms.Control.Paint>"
  example:
  - "The following code example ensures that a <xref:System.Windows.Forms.Label> is visible by calling its BringToFront method. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Panel> named `panel1`, and a <xref:System.Windows.Forms.Label> named `label1`.  \n  \n [!code-cs[Windows.Forms.Control Members4#1](~/add/codesnippet/csharp/m-system.windows.forms.c_59_1.cs)]\n [!code-vb[Windows.Forms.Control Members4#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_59_1.vb)]\n [!code-cpp[Windows.Forms.Control Members4#1](~/add/codesnippet/cpp/m-system.windows.forms.c_59_1.cpp)]"
  syntax:
    content: public void BringToFront ();
    parameters: []
  overload: System.Windows.Forms.Control.BringToFront*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CanEnableIme
  id: CanEnableIme
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CanEnableIme
  nameWithType: Control.CanEnableIme
  fullName: System.Windows.Forms.Control.CanEnableIme
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "나타내는 값을 가져옵니다 여부는 <xref:System.Windows.Forms.Control.ImeMode*>IME 지원을 사용 하도록 속성을 활성 값으로 설정할 수 있습니다.</xref:System.Windows.Forms.Control.ImeMode*>"
  remarks: "파생된 클래스 반환 하도록이 속성을 재정의할 수 `false` IME 지원 되지 않는 경우."
  syntax:
    content: protected virtual bool CanEnableIme { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>모든 경우"
  overload: System.Windows.Forms.Control.CanEnableIme*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CanFocus
  id: CanFocus
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CanFocus
  nameWithType: Control.CanFocus
  fullName: System.Windows.Forms.Control.CanFocus
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤이 포커스를 받을 수 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "입력된 포커스를 받을 컨트롤에 대 한 순서 대로 컨트롤에 할당 하는 핸들 있어야 및 <xref:System.Windows.Forms.Control.Visible%2A>및 <xref:System.Windows.Forms.Control.Enabled%2A>속성 둘 다로 설정 해야 `true` 부모 폼 이어야 합니다는 컨트롤의 가장 바깥쪽 또는 컨트롤 모든 부모 컨트롤 및 컨트롤에는 폼 이어야 합니다.</xref:System.Windows.Forms.Control.Enabled%2A> </xref:System.Windows.Forms.Control.Visible%2A>"
  example:
  - "The following code example sets focus to the specified <xref:System.Windows.Forms.Control>, if it can receive focus.  \n  \n [!code-cpp[Windows.Forms.ControlMembers6#1](~/add/codesnippet/cpp/p-system.windows.forms.c_18_1.cpp)]\n [!code-cs[Windows.Forms.ControlMembers6#1](~/add/codesnippet/csharp/p-system.windows.forms.c_18_1.cs)]\n [!code-vb[Windows.Forms.ControlMembers6#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_18_1.vb)]"
  syntax:
    content: public bool CanFocus { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 포커스를 받을 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.CanFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CanRaiseEvents
  id: CanRaiseEvents
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CanRaiseEvents
  nameWithType: Control.CanRaiseEvents
  fullName: System.Windows.Forms.Control.CanRaiseEvents
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에서 이벤트 발생을 결정 합니다."
  remarks: "경우에이 컨트롤 ActiveX 컨트롤로 호스팅되는지,이 속성은 반환 `false` ActiveX 컨트롤에 있는 경우 이벤트입니다."
  syntax:
    content: protected override bool CanRaiseEvents { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 이벤트가 고정 되지 않은; ActiveX 컨트롤에 호스트 되는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.CanRaiseEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CanSelect
  id: CanSelect
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CanSelect
  nameWithType: Control.CanSelect
  fullName: System.Windows.Forms.Control.CanSelect
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤을 선택할 수 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "이 속성은 반환 `true` 경우는 `Selectable` 값 <xref:System.Windows.Forms.ControlStyles?displayProperty=fullName>로 설정 된 `true`표시 되 고 사용 가능한 컨트롤 자체는 다른 컨트롤에 포함 되며 부모 컨트롤이 표시 되 고 사용 하도록 설정 합니다.</xref:System.Windows.Forms.ControlStyles?displayProperty=fullName>       다음 목록에 Windows Forms 컨트롤은 선택할 수 및의 값을 반환 합니다 `false` CanSelect 속성에 대 한 합니다. 이러한 컨트롤에서 파생 된 컨트롤은도 선택할 수 없습니다.      - <xref:System.Windows.Forms.Panel>- <xref:System.Windows.Forms.GroupBox>- <xref:System.Windows.Forms.PictureBox>- <xref:System.Windows.Forms.ProgressBar>- <xref:System.Windows.Forms.Splitter>- <xref:System.Windows.Forms.Label>- <xref:System.Windows.Forms.LinkLabel>(이 경우 컨트롤에 링크가)</xref:System.Windows.Forms.LinkLabel> </xref:System.Windows.Forms.Label> </xref:System.Windows.Forms.Splitter> </xref:System.Windows.Forms.ProgressBar> </xref:System.Windows.Forms.PictureBox> </xref:System.Windows.Forms.GroupBox> </xref:System.Windows.Forms.Panel>"
  example:
  - "The following code example selects the specified <xref:System.Windows.Forms.Control>, if it is selectable.  \n  \n [!code-cpp[Windows.Forms.ControlMembers6#2](~/add/codesnippet/cpp/p-system.windows.forms.c_67_1.cpp)]\n [!code-cs[Windows.Forms.ControlMembers6#2](~/add/codesnippet/csharp/p-system.windows.forms.c_67_1.cs)]\n [!code-vb[Windows.Forms.ControlMembers6#2](~/add/codesnippet/visualbasic/p-system.windows.forms.c_67_1.vb)]"
  syntax:
    content: public bool CanSelect { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤을 선택할 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.CanSelect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Capture
  id: Capture
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Capture
  nameWithType: Control.Capture
  fullName: System.Windows.Forms.Control.Capture
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤이 마우스 캡처 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "컨트롤이 마우스를 캡처, 커서가 테두리 내 여부에 관계 없이 마우스 입력을 받습니다. 마우스는 일반적으로 끌기 작업 중에 캡처됩니다.       전경 창이 마우스를 캡처할 수 있습니다. 배경 창이 이렇게 하려고 하면 창 마우스 커서가 표시 된 창 영역 내에 있을 때 발생 하는 마우스 이벤트에 대 한 메시지를 받습니다. 또한 전경 창이 마우스를 캡처, 경우에 계속 클릭할 수 다른 창은 전경으로 전환 합니다.       마우스를 캡처한 바로 가기 키 작업 하면 안 됩니다."
  example:
  - "The following code example demonstrates the Capture property. To run this example paste the following code in a form containing a <xref:System.Windows.Forms.Label> named label1 and two <xref:System.Windows.Forms.ListBox> controls named listbox1 and listbox2. Ensure the form and controls' <xref:System.Windows.Forms.Control.MouseDown> event is associated with the method in this example.  \n  \n [!code-vb[System.Windows.Forms.ControlCapture#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_104_1.vb)]\n [!code-cpp[System.Windows.Forms.ControlCapture#1](~/add/codesnippet/cpp/p-system.windows.forms.c_104_1.cpp)]\n [!code-cs[System.Windows.Forms.ControlCapture#1](~/add/codesnippet/csharp/p-system.windows.forms.c_104_1.cs)]"
  syntax:
    content: public bool Capture { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 마우스 캡처 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.Capture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CausesValidation
  id: CausesValidation
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CausesValidation
  nameWithType: Control.CausesValidation
  fullName: System.Windows.Forms.Control.CausesValidation
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤이 포커스를 받을 때 유효성 검사가 필요한 모든 컨트롤에서 수행 해야 하는 유효성 검사가 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "CausesValidation 속성이로 설정 된 경우 `false`, <xref:System.Windows.Forms.Control.Validating>및 <xref:System.Windows.Forms.Control.Validated>이벤트는 표시 되지 않습니다.</xref:System.Windows.Forms.Control.Validated> </xref:System.Windows.Forms.Control.Validating>       CausesValidation 속성 값은 대개로 설정 `false` 도움말 단추와 같은 컨트롤에 대 한 합니다."
  example:
  - "The following code example uses the derived class<xref:System.Windows.Forms.TextBox> and validates an e-mail address that the user enters. If the e-mail address is not in the standard format (containing \"@\" and \".\"), the validation fails, an <xref:System.Windows.Forms.ErrorProvider> icon is displayed, and the event is canceled. One of the buttons on the form has its CausesValidation property set to `false`. Clicking or setting focus to this button does not trigger validation. This example requires that a <xref:System.Windows.Forms.TextBox>, an <xref:System.Windows.Forms.ErrorProvider> control, and a <xref:System.Windows.Forms.Button> have been created on a form.  \n  \n [!code-cs[Control.Validating#2](~/add/codesnippet/csharp/p-system.windows.forms.c_66_1.cs)]\n [!code-cpp[Control.Validating#2](~/add/codesnippet/cpp/p-system.windows.forms.c_66_1.cpp)]\n [!code-vb[Control.Validating#2](~/add/codesnippet/visualbasic/p-system.windows.forms.c_66_1.vb)]"
  syntax:
    content: public bool CausesValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 포커스를 받을 때 유효성 검사가 필요한 모든 컨트롤에서 수행 해야 하는 유효성 검사가 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.CausesValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CausesValidationChanged
  id: CausesValidationChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CausesValidationChanged
  nameWithType: Control.CausesValidationChanged
  fullName: System.Windows.Forms.Control.CausesValidationChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우의 값은 <xref:System.Windows.Forms.Control.CausesValidation*>속성 변경.</xref:System.Windows.Forms.Control.CausesValidation*>"
  remarks: "이 이벤트는 <xref:System.Windows.Forms.Control.CausesValidation%2A>프로그래밍 방식으로 수정 되거나 사용자 상호 작용 하 여 속성이 변경 될.</xref:System.Windows.Forms.Control.CausesValidation%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public event EventHandler CausesValidationChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ChangeUICues
  id: ChangeUICues
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ChangeUICues
  nameWithType: Control.ChangeUICues
  fullName: System.Windows.Forms.Control.ChangeUICues
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "포커스 또는 키보드 UI (사용자 인터페이스) 큐가 변경 될 때 발생 합니다."
  remarks: "이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ChangeUICues event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the ChangeUICues event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#67](~/add/codesnippet/csharp/e-system.windows.forms.c_50_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#67](~/add/codesnippet/visualbasic/e-system.windows.forms.c_50_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.UICuesEventHandler ChangeUICues;
    return:
      type: System.Windows.Forms.UICuesEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls
  id: CheckForIllegalCrossThreadCalls
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CheckForIllegalCrossThreadCalls
  nameWithType: Control.CheckForIllegalCrossThreadCalls
  fullName: System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의에 액세스 하는 잘못 된 스레드에서 호출을 catch 할지를 나타내는 값을 가져오거나 설정 합니다. <xref:System.Windows.Forms.Control.Handle*>응용 프로그램을 디버깅 되는 속성.</xref:System.Windows.Forms.Control.Handle*>"
  remarks: "컨트롤의 만드는 스레드가 아닌 다른 스레드에서 제어 하는 메서드 또는 속성 중 하나에 액세스 하려고 하면 종종 예기치 않은 결과가 발생 합니다. 일반적인 잘못 된 스레드 활동은 컨트롤의에 액세스 하는 잘못 된 스레드에서 호출 <xref:System.Windows.Forms.Control.Handle%2A>속성.</xref:System.Windows.Forms.Control.Handle%2A> CheckForIllegalCrossThreadCalls 설정 `true` 를 찾아서이 스레드 작업을 보다 쉽게 디버깅 하는 동안 진단 합니다."
  syntax:
    content: public static bool CheckForIllegalCrossThreadCalls { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>잘못 된 스레드에서 호출; 발생 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Click
  id: Click
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Click
  nameWithType: Control.Click
  fullName: System.Windows.Forms.Control.Click
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤을 클릭할 때 발생 합니다."
  remarks: "Click 이벤트 전달는 <xref:System.EventArgs>해당 이벤트 처리기에 따라서 것만 한 번의 클릭이 발생 했음을 나타냅니다.</xref:System.EventArgs> 보다 구체적인 마우스 정보 (단추, 클릭, 휠 회전 또는 위치 수)가 필요한 경우 사용 된 <xref:System.Windows.Forms.Control.MouseClick>이벤트.</xref:System.Windows.Forms.Control.MouseClick> 그러나는 <xref:System.Windows.Forms.Control.MouseClick>클릭 하 고 ENTER 키를 누르는 것과 같은 마우스 이외의 작업에 의해 발생 하는 경우 이벤트를 발생 하지 것입니다.</xref:System.Windows.Forms.Control.MouseClick>       두 번 클릭은 운영 체제의 마우스 설정에 따라 결정 됩니다. 사용자를 두 번 클릭 하지 않고 두 번 클릭을 고려할 수 있도록 마우스 단추 클릭 만으로 간격을 설정할 수 있습니다. Click 이벤트는 컨트롤을 두 번 클릭할 때마다 발생 합니다. 예를 들어는 클릭에 대 한 이벤트 처리기를 설정한 경우 및 <xref:System.Windows.Forms.Control.DoubleClick>의 이벤트는 <xref:System.Windows.Forms.Form>, 클릭 하 고 <xref:System.Windows.Forms.Control.DoubleClick>발생 하는 폼을 두 번 클릭 하 고 두 방법 모두 호출 됩니다.</xref:System.Windows.Forms.Control.DoubleClick> </xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Control.DoubleClick> 컨트롤을 두 번 클릭 하는 경우 및 컨트롤을 지원 하지 않습니다는 <xref:System.Windows.Forms.Control.DoubleClick>이벤트, 클릭 이벤트를 두 번 발생할 수 있습니다.</xref:System.Windows.Forms.Control.DoubleClick>       설정 해야 합니다는 `StandardClick` 값<xref:System.Windows.Forms.ControlStyles> 를 `true` 이 이벤트를 발생 합니다.</xref:System.Windows.Forms.ControlStyles>      > [!NOTE] >에 대 한 다음과 같은 이벤트가 발생 하지 않습니다는 <xref:System.Windows.Forms.TabControl>하나 이상 있으면 클래스 <xref:System.Windows.Forms.TabPage>에 <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName>컬렉션: <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown> <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover> <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave>및 <xref:System.Windows.Forms.Control.MouseMove>.</xref:System.Windows.Forms.Control.MouseMove> </xref:System.Windows.Forms.Control.MouseLeave> </xref:System.Windows.Forms.Control.MouseEnter> </xref:System.Windows.Forms.Control.MouseHover> </xref:System.Windows.Forms.Control.MouseUp> </xref:System.Windows.Forms.Control.MouseDown> </xref:System.Windows.Forms.Control.DoubleClick> 클릭</xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabControl> 둘 이상 있는 경우 <xref:System.Windows.Forms.TabPage>컬렉션에서 사용자 탭 컨트롤의 헤더 상호 작용 하 고 (여기서는 <xref:System.Windows.Forms.TabPage>이름이 표시), <xref:System.Windows.Forms.TabControl>적절 한 이벤트를 발생 시킵니다.</xref:System.Windows.Forms.TabControl> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabPage> 그러나 사용자 상호 작용 탭 페이지의 클라이언트 영역 내에 있으면는 <xref:System.Windows.Forms.TabPage>적절 한 이벤트를 발생 시킵니다.</xref:System.Windows.Forms.TabPage>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example shows the Click event in an event handler.  \n  \n [!code-cpp[Control.FindForm#1](~/add/codesnippet/cpp/e-system.windows.forms.c_21_1.cpp)]\n [!code-vb[Control.FindForm#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_21_1.vb)]\n [!code-cs[Control.FindForm#1](~/add/codesnippet/csharp/e-system.windows.forms.c_21_1.cs)]"
  syntax:
    content: public event EventHandler Click;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ClientRectangle
  id: ClientRectangle
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ClientRectangle
  nameWithType: Control.ClientRectangle
  fullName: System.Windows.Forms.Control.ClientRectangle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 클라이언트 영역을 나타내는 사각형을 가져옵니다."
  remarks: "컨트롤의 클라이언트 영역은 스크롤 막대, 테두리, 제목 표시줄, 메뉴 등 비클라이언트 요소에서 뺀 컨트롤의 범위입니다.       클라이언트 좌표는 컨트롤 클라이언트 영역의 왼쪽 위 모퉁이 기준으로 이므로,이 속성에서 반환 되는 사각형의 왼쪽 위 모퉁이의 좌표는 (0,&0;). 크기와 컨트롤의 화면에 그리기 등의 작업에 대 한 컨트롤 클라이언트 영역의 좌표를 가져오려면이 속성을 사용할 수 있습니다.       컨트롤에서 그리기에 대 한 자세한 내용은 참조 [Windows Forms 컨트롤 렌더링](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example enables auto-scrolling for a form, resizes the form, and ensures that a button remains visible after the form is resized. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Button> named `button2` on it.  \n  \n [!code-cpp[Windows.Forms.Control Member5#2](~/add/codesnippet/cpp/p-system.windows.forms.c_86_1.cpp)]\n [!code-cs[Windows.Forms.Control Member5#2](~/add/codesnippet/csharp/p-system.windows.forms.c_86_1.cs)]\n [!code-vb[Windows.Forms.Control Member5#2](~/add/codesnippet/visualbasic/p-system.windows.forms.c_86_1.vb)]"
  syntax:
    content: public System.Drawing.Rectangle ClientRectangle { get; }
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 컨트롤의 클라이언트 영역을 나타내는입니다."
  overload: System.Windows.Forms.Control.ClientRectangle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ClientSize
  id: ClientSize
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ClientSize
  nameWithType: Control.ClientSize
  fullName: System.Windows.Forms.Control.ClientSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 클라이언트 영역 너비와 높이 가져오거나 설정 합니다."
  remarks: "컨트롤의 클라이언트 영역은 스크롤 막대, 테두리, 제목 표시줄, 메뉴 등 비클라이언트 요소에서 뺀 컨트롤의 범위입니다. <xref:System.Windows.Forms.Control.SetClientSizeCore%2A>메서드를 호출 하 여 ClientSizeproperty 설정.</xref:System.Windows.Forms.Control.SetClientSizeCore%2A> ClientSize 속성을 통해 변경 되지 않습니다는 `set` 메서드를 재정의 해야 하는 <xref:System.Windows.Forms.Control.SetClientSizeCore%2A>메서드 ClientSize 속성을 설정 하는 경우 코드가 실행 되도록 합니다.</xref:System.Windows.Forms.Control.SetClientSizeCore%2A>       <xref:System.Drawing.Size.Width%2A?displayProperty=fullName>및 <xref:System.Drawing.Size.Height%2A?displayProperty=fullName>속성 컨트롤의 클라이언트 영역 높이 너비를 나타냅니다.</xref:System.Drawing.Size.Height%2A?displayProperty=fullName> </xref:System.Drawing.Size.Width%2A?displayProperty=fullName> 컨트롤의 화면에 그리기 등의 작업에 대 한 컨트롤의 클라이언트 영역 크기를 구합니다이 속성을 사용할 수 있습니다.       컨트롤에서 그리기에 대 한 자세한 내용은 참조 [Windows Forms 컨트롤 렌더링](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > 응용 프로그램 설정을이 속성에 바인딩할 수 없습니다. 응용 프로그램 설정에 대 한 자세한 내용은 참조 하십시오. [응용 프로그램 설정 개요](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example resizes the specified control so the control will accommodate its formatted text. The formatted text is the <xref:System.Windows.Forms.Control.Text%2A> property with the control's assigned <xref:System.Windows.Forms.Control.Font%2A> applied to the text. The `AutoSizeControl` method in this example also has a `textPadding` parameter that represents the padding to apply to all edges of the control. To make the padding appear equal, align the text with the <xref:System.Drawing.ContentAlignment?displayProperty=fullName> value, if your control supports it.  \n  \n [!code-cpp[Windows.Forms.Control Member5#1](~/add/codesnippet/cpp/p-system.windows.forms.c_30_1.cpp)]\n [!code-cs[Windows.Forms.Control Member5#1](~/add/codesnippet/csharp/p-system.windows.forms.c_30_1.cs)]\n [!code-vb[Windows.Forms.Control Member5#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_30_1.vb)]"
  syntax:
    content: public System.Drawing.Size ClientSize { get; set; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> 컨트롤의 클라이언트 영역 크기를 나타내는입니다."
  overload: System.Windows.Forms.Control.ClientSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ClientSizeChanged
  id: ClientSizeChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ClientSizeChanged
  nameWithType: Control.ClientSizeChanged
  fullName: System.Windows.Forms.Control.ClientSizeChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우의 값은 <xref:System.Windows.Forms.Control.ClientSize*>속성 변경.</xref:System.Windows.Forms.Control.ClientSize*>"
  remarks: "이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ClientSizeChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the ClientSizeChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#12](~/add/codesnippet/csharp/e-system.windows.forms.c_7_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#12](~/add/codesnippet/visualbasic/e-system.windows.forms.c_7_1.vb)]"
  syntax:
    content: public event EventHandler ClientSizeChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CompanyName
  id: CompanyName
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CompanyName
  nameWithType: Control.CompanyName
  fullName: System.Windows.Forms.Control.CompanyName
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "회사 또는 컨트롤을 포함 하는 응용 프로그램의 작성자의 이름을 가져옵니다."
  remarks: "CompanyName 속성은 읽기 전용 속성입니다. 이 속성의 값을 변경 하려면 <xref:System.Reflection.AssemblyCompanyAttribute.Company%2A> <xref:System.Reflection.AssemblyCompanyAttribute>.</xref:System.Reflection.AssemblyCompanyAttribute> 속성 값</xref:System.Reflection.AssemblyCompanyAttribute.Company%2A> 설정 C# 코드의 다음 줄 CompanyName 속성을 설정합니다.      ```c#   [assembly: AssemblyCompany(&quot;Microsoft&quot;)]   ```      > [!NOTE]> 앱에 대 한 회사 이름, 제품 이름 및 제품 버전을 제공 하는 것이 좋습니다."
  example:
  - "The following code example displays information about the application in a <xref:System.Windows.Forms.Label> contained by a <xref:System.Windows.Forms.Form>. This example requires that the CompanyName, <xref:System.Windows.Forms.Control.ProductName%2A> and <xref:System.Windows.Forms.Control.ProductVersion%2A> have been set.  \n  \n [!code-cs[Windows.Forms.Control Properties3#1](~/add/codesnippet/csharp/p-system.windows.forms.c_12_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties3#1](~/add/codesnippet/cpp/p-system.windows.forms.c_12_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties3#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_12_1.vb)]"
  syntax:
    content: public string CompanyName { get; }
    return:
      type: System.String
      description: "회사 이름이 나 컨트롤을 포함 하는 응용 프로그램의 작성자입니다."
  overload: System.Windows.Forms.Control.CompanyName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)
  id: Contains(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Contains(Control)
  nameWithType: Control.Contains(Control)
  fullName: System.Windows.Forms.Control.Contains(Control)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 컨트롤은 컨트롤의 자식 인지를 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following code example ensures that a <xref:System.Windows.Forms.Label> is visible by calling its <xref:System.Windows.Forms.Control.BringToFront%2A> method. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Panel> named `panel1`, and a <xref:System.Windows.Forms.Label> named `label1`.  \n  \n [!code-cs[Windows.Forms.Control Members4#1](~/add/codesnippet/csharp/m-system.windows.forms.c_78_1.cs)]\n [!code-vb[Windows.Forms.Control Members4#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_78_1.vb)]\n [!code-cpp[Windows.Forms.Control Members4#1](~/add/codesnippet/cpp/m-system.windows.forms.c_78_1.cpp)]"
  syntax:
    content: public bool Contains (System.Windows.Forms.Control ctl);
    parameters:
    - id: ctl
      type: System.Windows.Forms.Control
      description: "<xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 평가할 수 있습니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정된 된 컨트롤은 컨트롤의 자식이 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ContainsFocus
  id: ContainsFocus
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ContainsFocus
  nameWithType: Control.ContainsFocus
  fullName: System.Windows.Forms.Control.ContainsFocus
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤이 나 컨트롤은 자식 컨트롤 중 하나 현재 입력된 포커스를가지고 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "컨트롤이 나 그 안에 포함 된 컨트롤에 입력된 포커스가 있는지 여부를 확인 하려면이 속성을 사용할 수 있습니다. 컨트롤에 포커스를 컨트롤은 자식 컨트롤의 모든 권한이 있는지 여부에 상관 없이 포커스 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.Forms.Control.Focused%2A>속성.</xref:System.Windows.Forms.Control.Focused%2A> 컨트롤이 입력된 포커스를 사용는 <xref:System.Windows.Forms.Control.Focus%2A>또는 <xref:System.Windows.Forms.Control.Select%2A>메서드.</xref:System.Windows.Forms.Control.Select%2A> </xref:System.Windows.Forms.Control.Focus%2A>"
  syntax:
    content: public bool ContainsFocus { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤 또는 해당 자식 중 하나가 현재 제어 하는 경우에 입력된 된 포커스가 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.ContainsFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ContextMenu
  id: ContextMenu
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ContextMenu
  nameWithType: Control.ContextMenu
  fullName: System.Windows.Forms.Control.ContextMenu
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤과 연결 된 바로 가기 메뉴를 가져오거나 설정 합니다."
  remarks: "바로 가기 메뉴를 사용 하 여 컨트롤에서 마우스 오른쪽 단추로 될 때 사용자에 게 상황에 맞는 메뉴 옵션을 제공 합니다."
  example:
  - "The following code example displays the <xref:System.Windows.Forms.ContextMenu> assigned to a <xref:System.Windows.Forms.TreeView> when the right mouse button is clicked and released. This code requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> on it. It is also required that the <xref:System.Windows.Forms.TreeView> has a <xref:System.Windows.Forms.ContextMenu> assigned to its ContextMenu property.  \n  \n [!code-cs[Windows.Forms.Control Properties2#5](~/add/codesnippet/csharp/p-system.windows.forms.c_108_1.cs)]\n [!code-vb[Windows.Forms.Control Properties2#5](~/add/codesnippet/visualbasic/p-system.windows.forms.c_108_1.vb)]\n [!code-cpp[Windows.Forms.Control Properties2#5](~/add/codesnippet/cpp/p-system.windows.forms.c_108_1.cpp)]"
  syntax:
    content: public virtual System.Windows.Forms.ContextMenu ContextMenu { get; set; }
    return:
      type: System.Windows.Forms.ContextMenu
      description: "A <xref href=&quot;System.Windows.Forms.ContextMenu&quot;> </xref> 컨트롤과 연결 된 바로 가기 메뉴를 나타내는입니다."
  overload: System.Windows.Forms.Control.ContextMenu*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ContextMenuChanged
  id: ContextMenuChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ContextMenuChanged
  nameWithType: Control.ContextMenuChanged
  fullName: System.Windows.Forms.Control.ContextMenuChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우의 값은 <xref:System.Windows.Forms.Control.ContextMenu*>속성 변경.</xref:System.Windows.Forms.Control.ContextMenu*>"
  remarks: "이 이벤트는 <xref:System.Windows.Forms.Control.ContextMenu%2A>프로그래밍 방식으로 수정 되거나 사용자 상호 작용 하 여 속성이 변경 될.</xref:System.Windows.Forms.Control.ContextMenu%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example displays a message when a change occurs to the shortcut menu.  \n  \n [!code-cpp[Control_ContextMenu_CreateGraphics#2](~/add/codesnippet/cpp/e-system.windows.forms.c_6_1.cpp)]\n [!code-cs[Control_ContextMenu_CreateGraphics#2](~/add/codesnippet/csharp/e-system.windows.forms.c_6_1.cs)]\n [!code-vb[Control_ContextMenu_CreateGraphics#2](~/add/codesnippet/visualbasic/e-system.windows.forms.c_6_1.vb)]"
  syntax:
    content: public event EventHandler ContextMenuChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ContextMenuStrip
  id: ContextMenuStrip
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ContextMenuStrip
  nameWithType: Control.ContextMenuStrip
  fullName: System.Windows.Forms.Control.ContextMenuStrip
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "가져오거나는 <xref href=&quot;System.Windows.Forms.ContextMenuStrip&quot;> </xref> 이 컨트롤과 관련 된 합니다."
  remarks: "<xref:System.Windows.Forms.ContextMenu>가 <xref:System.Windows.Forms.ContextMenu>있는 <xref:System.Windows.Forms.ContextMenuStrip>.</xref:System.Windows.Forms.ContextMenuStrip> 우선</xref:System.Windows.Forms.ContextMenu> 컨트롤에 할당 된</xref:System.Windows.Forms.ContextMenu> 경우"
  example:
  - "The following code example demonstrates how to add three <xref:System.Windows.Forms.ToolStripMenuItem> objects to a <xref:System.Windows.Forms.ContextMenuStrip>. In addition it demonstrates setting the ContextMenuStrip property of the form.  \n  \n [!code-vb[System.Windows.Forms.Control.ContextMenuStrip#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_48_1.vb)]\n [!code-cs[System.Windows.Forms.Control.ContextMenuStrip#1](~/add/codesnippet/csharp/p-system.windows.forms.c_48_1.cs)]"
  syntax:
    content: public virtual System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }
    return:
      type: System.Windows.Forms.ContextMenuStrip
      description: "<xref href=&quot;System.Windows.Forms.ContextMenuStrip&quot;> </xref> 이 컨트롤에 대 한 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 없는 경우 없는 <xref href=&quot;System.Windows.Forms.ContextMenuStrip&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.ContextMenuStrip*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ContextMenuStripChanged
  id: ContextMenuStripChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ContextMenuStripChanged
  nameWithType: Control.ContextMenuStripChanged
  fullName: System.Windows.Forms.Control.ContextMenuStripChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우의 값은 <xref:System.Windows.Forms.Control.ContextMenuStrip*>속성 변경.</xref:System.Windows.Forms.Control.ContextMenuStrip*>"
  remarks: "이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ContextMenuStripChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the ContextMenuStripChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#14](~/add/codesnippet/csharp/e-system.windows.forms.c_61_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#14](~/add/codesnippet/visualbasic/e-system.windows.forms.c_61_1.vb)]"
  syntax:
    content: public event EventHandler ContextMenuStripChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ControlAdded
  id: ControlAdded
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ControlAdded
  nameWithType: Control.ControlAdded
  fullName: System.Windows.Forms.Control.ControlAdded
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "<xref:System.Windows.Forms.Control.ControlCollection>.</xref:System.Windows.Forms.Control.ControlCollection> 에 새로운 컨트롤이 추가 될 때 발생 합니다."
  remarks: "이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example uses ControlAdded to add a control to a form and displays the name of the added control in a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-cpp[Control.ControlRemoved#1](~/add/codesnippet/cpp/e-system.windows.forms.c_66_1.cpp)]\n [!code-vb[Control.ControlRemoved#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_66_1.vb)]\n [!code-cs[Control.ControlRemoved#1](~/add/codesnippet/csharp/e-system.windows.forms.c_66_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.ControlEventHandler ControlAdded;
    return:
      type: System.Windows.Forms.ControlEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ControlRemoved
  id: ControlRemoved
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ControlRemoved
  nameWithType: Control.ControlRemoved
  fullName: System.Windows.Forms.Control.ControlRemoved
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤 <xref:System.Windows.Forms.Control.ControlCollection>.</xref:System.Windows.Forms.Control.ControlCollection> 에서 제거 될 때 발생 합니다."
  remarks: "이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example uses ControlRemoved to remove a control from a form and displays the name of the removed control in a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-cpp[Control.ControlRemoved#1](~/add/codesnippet/cpp/e-system.windows.forms.c_8_1.cpp)]\n [!code-vb[Control.ControlRemoved#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_8_1.vb)]\n [!code-cs[Control.ControlRemoved#1](~/add/codesnippet/csharp/e-system.windows.forms.c_8_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.ControlEventHandler ControlRemoved;
    return:
      type: System.Windows.Forms.ControlEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Controls
  id: Controls
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Controls
  nameWithType: Control.Controls
  fullName: System.Windows.Forms.Control.Controls
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 포함 된 컨트롤의 컬렉션을 가져옵니다."
  remarks: "A <xref:System.Windows.Forms.Control>컨트롤의 컬렉션에 부모 역할도 할 수 있습니다.</xref:System.Windows.Forms.Control> 여러 컨트롤이 역할에 <xref:System.Windows.Forms.Form> <xref:System.Windows.Forms.Control.ControlCollection>필요한 <xref:System.Windows.Forms.Control>클래스</xref:System.Windows.Forms.Control> 에서 파생 된 폼의 컨트롤 속성에 할당 된</xref:System.Windows.Forms.Control.ControlCollection> 의 멤버는 각 컨트롤에</xref:System.Windows.Forms.Form> 추가 된 예를 들어       <xref:System.Windows.Forms.Control.ControlCollection> <xref:System.Windows.Forms.Control.ControlCollection>클래스</xref:System.Windows.Forms.Control.ControlCollection> 에서 사용할 수 있는 메서드를 사용 하 여 컨트롤 속성에 할당 된</xref:System.Windows.Forms.Control.ControlCollection> 컨트롤을 조작할 수 있습니다.       여러 컨트롤에 부모 컨트롤을 추가할 때 것이 좋습니다를 호출 하는 <xref:System.Windows.Forms.Control.SuspendLayout%2A>메서드는 추가할 컨트롤을 초기화 하기 전에.</xref:System.Windows.Forms.Control.SuspendLayout%2A> 부모 컨트롤에 컨트롤을 추가한 후 호출 된 <xref:System.Windows.Forms.Control.ResumeLayout%2A>메서드.</xref:System.Windows.Forms.Control.ResumeLayout%2A> 이렇게 하면 많은 컨트롤이 응용 프로그램의 성능이 향상 됩니다.       컨트롤 속성을 사용 하 여 중첩 된 컨트롤을 포함 하 여 양식의 모든 컨트롤을 반복 하 합니다. 사용 하 여는 <xref:System.Windows.Forms.Control.GetNextControl%2A>탭 순서의 이전 또는 다음 자식 컨트롤을 검색 하는 메서드입니다.</xref:System.Windows.Forms.Control.GetNextControl%2A> 사용 하 여는 <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A>속성을 가져오거나 컨테이너 컨트롤의 활성 컨트롤을 설정 합니다.</xref:System.Windows.Forms.ContainerControl.ActiveControl%2A>"
  example:
  - "The following code example removes a <xref:System.Windows.Forms.Control> from the <xref:System.Windows.Forms.Control.ControlCollection> of the derived class <xref:System.Windows.Forms.Panel> if it is a member of the collection. The example requires that you have created a <xref:System.Windows.Forms.Panel>, a <xref:System.Windows.Forms.Button>, and at least one <xref:System.Windows.Forms.RadioButton> control on a <xref:System.Windows.Forms.Form>. The <xref:System.Windows.Forms.RadioButton> control(s) are added to the <xref:System.Windows.Forms.Panel> control, and the <xref:System.Windows.Forms.Panel> control added to the <xref:System.Windows.Forms.Form>. When the button is clicked, the radio button named `removeButton` is removed from the <xref:System.Windows.Forms.Control.ControlCollection>.  \n  \n [!code-cs[ControlCollection#4](~/add/codesnippet/csharp/p-system.windows.forms.c_41_1.cs)]\n [!code-vb[ControlCollection#4](~/add/codesnippet/visualbasic/p-system.windows.forms.c_41_1.vb)]\n [!code-cpp[ControlCollection#4](~/add/codesnippet/cpp/p-system.windows.forms.c_41_1.cpp)]"
  syntax:
    content: public System.Windows.Forms.Control.ControlCollection Controls { get; }
    return:
      type: System.Windows.Forms.Control.ControlCollection
      description: "A <xref:System.Windows.Forms.Control.ControlCollection>컨트롤에 포함 된 컨트롤의 컬렉션을 나타내는.</xref:System.Windows.Forms.Control.ControlCollection>"
  overload: System.Windows.Forms.Control.Controls*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CreateAccessibilityInstance
  id: CreateAccessibilityInstance
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CreateAccessibilityInstance()
  nameWithType: Control.CreateAccessibilityInstance()
  fullName: System.Windows.Forms.Control.CreateAccessibilityInstance()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 대 한 새로운 액세스 가능성 개체를 만듭니다."
  remarks: "CreateAccessibilityInstance 메서드를 명시적으로 호출 하지 않는 경우 그 때 호출 됩니다는 <xref:System.Windows.Forms.Control.AccessibilityObject%2A>속성이 나 참조.</xref:System.Windows.Forms.Control.AccessibilityObject%2A>      > [!NOTE] > 가져오거나 설정 하는 <xref:System.Windows.Forms.Control.AccessibilityObject%2A>속성에 대 한 참조를 추가 해야는 `Accessibility` 어셈블리와 함께 설치는 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)].</xref:System.Windows.Forms.Control.AccessibilityObject%2A>"
  example:
  - "The following code example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the CreateAccessibilityInstance method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code excerpt demonstrates overriding the CreateAccessibilityInstance method. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#2](~/add/codesnippet/visualbasic/m-system.windows.forms.c_3_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#2](~/add/codesnippet/csharp/m-system.windows.forms.c_3_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#2](~/add/codesnippet/cpp/m-system.windows.forms.c_3_1.cpp)]"
  syntax:
    content: protected virtual System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();
    parameters: []
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "새 <xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref> 컨트롤에 대 한 합니다."
  overload: System.Windows.Forms.Control.CreateAccessibilityInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CreateControl
  id: CreateControl
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CreateControl()
  nameWithType: Control.CreateControl()
  fullName: System.Windows.Forms.Control.CreateControl()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "핸들과 모든 표시 되는 자식 컨트롤의 포함 하 여 표시 된 컨트롤을 강제로 만듭니다."
  remarks: "CreateControl 메서드 컨트롤과 해당 자식 컨트롤에 대해 만들 수에 대 한 핸들을 강제로 수행 합니다. 컨트롤이 나 해당 자식; 조작에 대 한 핸들을 즉시 필요할 때이 메서드는 사용 컨트롤의 생성자를 단순히 호출 <xref:System.Windows.Forms.Control.Handle%2A>.</xref:System.Windows.Forms.Control.Handle%2A> 만들지 않고       CreateControl 컨트롤 핸들이 만듭니까 경우 컨트롤의 <xref:System.Windows.Forms.Control.Visible%2A>속성은 `false`.</xref:System.Windows.Forms.Control.Visible%2A> 호출할 수 있습니다는 <xref:System.Windows.Forms.Control.CreateHandle%2A>메서드 또는 액세스는 <xref:System.Windows.Forms.Control.Handle%2A>만들 컨트롤의 속성 처리는 컨트롤의 표시 여부에 관계 없이 하지만 경우 컨트롤의 자식에 대 한 핸들이 만들어집니다 창이 없습니다.</xref:System.Windows.Forms.Control.Handle%2A> </xref:System.Windows.Forms.Control.CreateHandle%2A>"
  syntax:
    content: public void CreateControl ();
    parameters: []
  overload: System.Windows.Forms.Control.CreateControl*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CreateControlsInstance
  id: CreateControlsInstance
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CreateControlsInstance()
  nameWithType: Control.CreateControlsInstance()
  fullName: System.Windows.Forms.Control.CreateControlsInstance()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 대 한 컨트롤 컬렉션의 새 인스턴스를 만듭니다."
  syntax:
    content: protected virtual System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();
    parameters: []
    return:
      type: System.Windows.Forms.Control.ControlCollection
      description: "새 인스턴스 <xref:System.Windows.Forms.Control.ControlCollection>컨트롤에 할당 합니다.</xref:System.Windows.Forms.Control.ControlCollection>"
  overload: System.Windows.Forms.Control.CreateControlsInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Created
  id: Created
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Created
  nameWithType: Control.Created
  fullName: System.Windows.Forms.Control.Created
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤이 만들어졌는지를 나타내는 값을 가져옵니다."
  remarks: "만든 속성은 반환 `true` 경우는 <xref:System.Windows.Forms.Control>컨트롤의 핸들 수 되지 만들어졌거나 아직 다시 생성 하는 경우에 성공적으로 만들었습니다.</xref:System.Windows.Forms.Control>"
  syntax:
    content: public bool Created { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 만들어졌으면; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.Created*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CreateGraphics
  id: CreateGraphics
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CreateGraphics()
  nameWithType: Control.CreateGraphics()
  fullName: System.Windows.Forms.Control.CreateGraphics()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "만듭니다는 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 컨트롤에 대 한 합니다."
  remarks: "<xref:System.Drawing.Graphics>CreateGraphics 메서드를 통해 검색 하는 개체 하지 일반적으로 보존 되는 현재 Windows 메시지가 처리 된 후 해당 개체와 함께 색칠 다음 WM_PAINT 메시지와 함께 지워집니다 때문에.</xref:System.Drawing.Graphics> <xref:System.Drawing.Graphics>다시 사용할 수 있도록 사용 <xref:System.Drawing.Graphics.MeasureString%2A?displayProperty=fullName>.</xref:System.Drawing.Graphics.MeasureString%2A?displayProperty=fullName> 같은 표시 되지 않는 메서드를 제외 하 고 개체</xref:System.Drawing.Graphics> 를 캐시할 수 없으며 따라서 CreateGraphics를 사용 하 여 <xref:System.Drawing.Graphics>개체를 <xref:System.Drawing.Graphics.Dispose%2A>사용 합니다.가 완료 되 면</xref:System.Drawing.Graphics.Dispose%2A> 호출</xref:System.Drawing.Graphics> 될 때마다 호출 해야 대신, Windows 메시지에 대 한 자세한 내용은 <xref:System.Windows.Forms.Control.WndProc%2A>.</xref:System.Windows.Forms.Control.WndProc%2A> 을 참조 하십시오.       기본적으로 CreateGraphics 호출 스레드에 소유권을 설정 하 고 다른 스레드에서 호출 되 면 실패 합니다.      > [!NOTE] > 외에 <xref:System.Windows.Forms.Control.InvokeRequired%2A>속성에는 스레드로부터 안전 컨트롤에서 네 가지 메서드가 있습니다: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, 및 컨트롤에 대 한 핸들에서 이미 만든 경우 CreateGraphics.</xref:System.Windows.Forms.Control.EndInvoke%2A> </xref:System.Windows.Forms.Control.BeginInvoke%2A> </xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control.InvokeRequired%2A> 컨트롤의 핸들이 백그라운드 스레드에서 생성 되기 전에 CreateGraphics를 호출 하면 잘못 된 크로스 스레드 호출 발생할 수 있습니다. 다른 모든 메서드 호출에 대 한 사용할지 invoke 메서드 중 하나를 컨트롤의 스레드에 대 한 호출을 마샬링하 합니다."
  example:
  - "The following code example resizes the specified control so the control will accommodate its formatted text. The formatted text is the <xref:System.Windows.Forms.Control.Text%2A> property with the control's assigned <xref:System.Windows.Forms.Control.Font%2A> applied to the text. The `AutoSizeControl` method in this example also has a `textPadding` parameter that represents the padding to apply to all edges of the control. To make the padding appear equal, align the text with the `MiddleCenter` value of <xref:System.Drawing.ContentAlignment?displayProperty=fullName> if your control supports it.  \n  \n [!code-cpp[Windows.Forms.Control Member5#1](~/add/codesnippet/cpp/m-system.windows.forms.c_91_1.cpp)]\n [!code-cs[Windows.Forms.Control Member5#1](~/add/codesnippet/csharp/m-system.windows.forms.c_91_1.cs)]\n [!code-vb[Windows.Forms.Control Member5#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_91_1.vb)]"
  syntax:
    content: public System.Drawing.Graphics CreateGraphics ();
    parameters: []
    return:
      type: System.Drawing.Graphics
      description: "<xref href=&quot;System.Drawing.Graphics&quot;> </xref> 컨트롤에 대 한 합니다."
  overload: System.Windows.Forms.Control.CreateGraphics*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CreateHandle
  id: CreateHandle
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CreateHandle()
  nameWithType: Control.CreateHandle()
  fullName: System.Windows.Forms.Control.CreateHandle()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 대 한 핸들을 만듭니다."
  remarks: "하면 일반적으로 직접 호출 하지 CreateHandle 메서드. 호출 하는 메서드가 좋습니다는 <xref:System.Windows.Forms.Control.CreateControl%2A>강제로 컨트롤을 만들 때 컨트롤 및 해당 자식 컨트롤에 대해 만들 수에 대 한 핸들.</xref:System.Windows.Forms.Control.CreateControl%2A>"
  syntax:
    content: protected virtual void CreateHandle ();
    parameters: []
  overload: System.Windows.Forms.Control.CreateHandle*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "삭제 된 상태인 개체가입니다."
  platform:
  - net462
- uid: System.Windows.Forms.Control.CreateParams
  id: CreateParams
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CreateParams
  nameWithType: Control.CreateParams
  fullName: System.Windows.Forms.Control.CreateParams
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤 핸들이 만들어지는 경우 필요한 작성 매개 변수를 가져옵니다."
  remarks: "CreateParams 속성을 재정의 되 고 파생 된 컨트롤의 속성을 조정 하는 데 사용 해야 합니다. 와 같은 <xref:System.Windows.Forms.CreateParams.Caption%2A?displayProperty=fullName>, <xref:System.Windows.Forms.CreateParams.Width%2A?displayProperty=fullName>, <xref:System.Windows.Forms.CreateParams.Height%2A?displayProperty=fullName> <xref:System.Windows.Forms.Control.Text%2A?displayProperty=fullName> <xref:System.Windows.Forms.Control.Width%2A?displayProperty=fullName>및 <xref:System.Windows.Forms.Control.Height%2A?displayProperty=fullName>.</xref:System.Windows.Forms.Control.Height%2A?displayProperty=fullName> </xref:System.Windows.Forms.Control.Width%2A?displayProperty=fullName> </xref:System.Windows.Forms.Control.Text%2A?displayProperty=fullName> 같은 컨트롤에서 해당 속성으로</xref:System.Windows.Forms.CreateParams.Height%2A?displayProperty=fullName> 설정할 수</xref:System.Windows.Forms.CreateParams.Width%2A?displayProperty=fullName> </xref:System.Windows.Forms.CreateParams.Caption%2A?displayProperty=fullName> <xref:System.Windows.Forms.CreateParams>표준 Windows 컨트롤 클래스를 래핑할 또는 Windows Forms 네임 스페이스에서 제공 하지 않는 스타일을 설정할 때만 확장 해야 합니다.</xref:System.Windows.Forms.CreateParams> 제어 매개 변수를 만드는 방법에 대 한 자세한 내용은 참조는 `CreateWindow` 및 `CreateWindowEx` 함수 및 [CREATESTRUCT](http://msdn.microsoft.com/library/windows/desktop/ms632603.aspx)설명서를 구성 합니다."
  example:
  - "The following code example extends the CreateParams property of a <xref:System.Windows.Forms.Button> derived class. The <xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=fullName> property is changed, which causes the button to display an <xref:System.Drawing.Icon> rather than an <xref:System.Drawing.Image>. This example requires that you have a class that inherits from the <xref:System.Windows.Forms.Button> class.  \n  \n [!code-cs[CreateParams#3](~/add/codesnippet/csharp/p-system.windows.forms.c_71_1.cs)]\n [!code-cpp[CreateParams#3](~/add/codesnippet/cpp/p-system.windows.forms.c_71_1.cpp)]\n [!code-vb[CreateParams#3](~/add/codesnippet/visualbasic/p-system.windows.forms.c_71_1.vb)]"
  syntax:
    content: protected virtual System.Windows.Forms.CreateParams CreateParams { get; }
    return:
      type: System.Windows.Forms.CreateParams
      description: "A <xref href=&quot;System.Windows.Forms.CreateParams&quot;> </xref> 컨트롤에 대 한 핸들을 만들 때 필요한 작성 매개 변수를 포함 하는 합니다."
  overload: System.Windows.Forms.Control.CreateParams*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Cursor
  id: Cursor
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Cursor
  nameWithType: Control.Cursor
  fullName: System.Windows.Forms.Control.Cursor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "마우스 포인터가 컨트롤 위에 있을 때 표시 되는 커서를 가져오거나 설정 합니다."
  remarks: "할당 된 <xref:System.Windows.Forms.Cursor>마우스 포인터가 컨트롤 위에 있을 때 표시 되는 커서를 변경 하려면 컨트롤의 커서 속성에.</xref:System.Windows.Forms.Cursor> 일시적으로 응용 프로그램 집합에 있는 모든 컨트롤에 대 한 마우스 커서를 변경 하는 <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=fullName>속성.</xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=fullName> 설정한 일반적으로 <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=fullName>속성을 채울 때 대기 커서를 한 <xref:System.Windows.Forms.ComboBox>또는 저장 하거나 파일을 로드 합니다.</xref:System.Windows.Forms.ComboBox> </xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=fullName>       Cursor 속성 앰비언트 속성이입니다. 그렇지 않은 경우, 즉 앰비언트 속성은 컨트롤 속성 설정, 부모 컨트롤에서 검색 됩니다. 예를 들어 한 <xref:System.Windows.Forms.Button>같은 가질 수 <xref:System.Windows.Forms.Control.BackColor%2A>부모로 <xref:System.Windows.Forms.Form>기본적으로.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Control.BackColor%2A> </xref:System.Windows.Forms.Button> 앰비언트 속성에 대 한 자세한 내용은 참조는 <xref:System.Windows.Forms.AmbientProperties>클래스 또는 <xref:System.Windows.Forms.Control>클래스 개요.</xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.AmbientProperties>"
  example:
  - "The following code example fills a <xref:System.Windows.Forms.ComboBox> with the user's available logical drives. The example also sets the combo box's <xref:System.Windows.Forms.Cursor> property so the <xref:System.Windows.Forms.Cursors.Hand%2A?displayProperty=fullName> cursor is displayed when the mouse pointer is over the drop-down button. This code requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.ComboBox> on it.  \n  \n [!code-cs[Windows.Forms.Control Properties2#1](~/add/codesnippet/csharp/p-system.windows.forms.c_26_1.cs)]\n [!code-vb[Windows.Forms.Control Properties2#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_26_1.vb)]\n [!code-cpp[Windows.Forms.Control Properties2#1](~/add/codesnippet/cpp/p-system.windows.forms.c_26_1.cpp)]"
  syntax:
    content: public virtual System.Windows.Forms.Cursor Cursor { get; set; }
    return:
      type: System.Windows.Forms.Cursor
      description: "A <xref href=&quot;System.Windows.Forms.Cursor&quot;> </xref> 마우스 포인터가 컨트롤 위에 있을 때 표시할 커서를 나타내는입니다."
  overload: System.Windows.Forms.Control.Cursor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CursorChanged
  id: CursorChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CursorChanged
  nameWithType: Control.CursorChanged
  fullName: System.Windows.Forms.Control.CursorChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우의 값은 <xref:System.Windows.Forms.Control.Cursor*>속성 변경.</xref:System.Windows.Forms.Control.Cursor*>"
  remarks: "이 이벤트는 <xref:System.Windows.Forms.Control.Cursor%2A>프로그래밍 방식으로 수정 되거나 사용자 상호 작용 하 여 속성이 변경 될.</xref:System.Windows.Forms.Control.Cursor%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates changing the mouse cursor using the <xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=fullName> property, the <xref:System.Windows.Forms.Cursor> class, and the <xref:System.Windows.Forms.Cursors> class. The example creates a form that contains a <xref:System.Windows.Forms.ComboBox> control, a <xref:System.Windows.Forms.Panel> control, and a <xref:System.Windows.Forms.ListView> control. The<xref:System.Windows.Forms.ComboBox> contains all cursors provided by the <xref:System.Windows.Forms.Cursors> class. When the user selects a mouse cursor in the <xref:System.Windows.Forms.ComboBox>, the <xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=fullName> property is set to the selected cursor, which updates the cursor for the <xref:System.Windows.Forms.Panel>. The <xref:System.Windows.Forms.ListView> is updated every time the CursorChanged event occurs.  \n  \n [!code-cpp[System.Windows.Forms.Cursors#1](~/add/codesnippet/cpp/e-system.windows.forms.c_56_1.cpp)]\n [!code-vb[System.Windows.Forms.Cursors#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_56_1.vb)]\n [!code-cs[System.Windows.Forms.Cursors#1](~/add/codesnippet/csharp/e-system.windows.forms.c_56_1.cs)]"
  syntax:
    content: public event EventHandler CursorChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DataBindings
  id: DataBindings
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DataBindings
  nameWithType: Control.DataBindings
  fullName: System.Windows.Forms.Control.DataBindings
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 대 한 데이터 바인딩을 가져옵니다."
  remarks: "데이터 바인딩 속성을 사용 하 여 <xref:System.Windows.Forms.ControlBindingsCollection>.</xref:System.Windows.Forms.ControlBindingsCollection> 액세스 하려면 추가 하 여 <xref:System.Windows.Forms.Binding>개체를 컬렉션에는 개체의 속성에는 컨트롤의 모든 속성을 바인딩할 수 있습니다.</xref:System.Windows.Forms.Binding>"
  example:
  - "The following code example adds <xref:System.Windows.Forms.Binding> objects to the <xref:System.Windows.Forms.ControlBindingsCollection> of five controls: four <xref:System.Windows.Forms.TextBox> controls and a <xref:System.Windows.Forms.DateTimePicker> control. The <xref:System.Windows.Forms.ControlBindingsCollection> is accessed through the DataBindings property of the <xref:System.Windows.Forms.Control> class.  \n  \n [!code-cpp[Classic Control.DataBindings Example#1](~/add/codesnippet/cpp/p-system.windows.forms.c_117_1.cpp)]\n [!code-cs[Classic Control.DataBindings Example#1](~/add/codesnippet/csharp/p-system.windows.forms.c_117_1.cs)]\n [!code-vb[Classic Control.DataBindings Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_117_1.vb)]"
  syntax:
    content: public System.Windows.Forms.ControlBindingsCollection DataBindings { get; }
    return:
      type: System.Windows.Forms.ControlBindingsCollection
      description: "A <xref href=&quot;System.Windows.Forms.ControlBindingsCollection&quot;> </xref> 를 포함 하는 <xref href=&quot;System.Windows.Forms.Binding&quot;> </xref> 컨트롤에 대 한 개체입니다."
  overload: System.Windows.Forms.Control.DataBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DefaultBackColor
  id: DefaultBackColor
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DefaultBackColor
  nameWithType: Control.DefaultBackColor
  fullName: System.Windows.Forms.Control.DefaultBackColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 기본 배경색을 가져옵니다."
  remarks: "이것이 기본 <xref:System.Windows.Forms.Control.BackColor%2A>일반 최상위 컨트롤의 속성 값.</xref:System.Windows.Forms.Control.BackColor%2A> 파생된 클래스는 서로 다른 기본값을 가질 수 있습니다."
  example:
  - "The following code example demonstrates how to use the DefaultBackColor, <xref:System.Windows.Forms.Control.DefaultFont%2A>, and <xref:System.Windows.Forms.Control.DefaultForeColor%2A> members. To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.ListBox> called ListBox1. Call the `Populate_ListBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \n  \n [!code-cpp[System.Windows.Forms.ControlDefaultProperties#1](~/add/codesnippet/cpp/p-system.windows.forms.c_52_1.cpp)]\n [!code-cs[System.Windows.Forms.ControlDefaultProperties#1](~/add/codesnippet/csharp/p-system.windows.forms.c_52_1.cs)]\n [!code-vb[System.Windows.Forms.ControlDefaultProperties#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_52_1.vb)]"
  syntax:
    content: public static System.Drawing.Color DefaultBackColor { get; }
    return:
      type: System.Drawing.Color
      description: "기본 배경 <xref href=&quot;System.Drawing.Color&quot;> </xref> 컨트롤의 합니다. 기본값은 &lt;xref:System.Drawing.SystemColors.Control%2A?displayProperty=fullName&gt;합니다."
  overload: System.Windows.Forms.Control.DefaultBackColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DefaultCursor
  id: DefaultCursor
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DefaultCursor
  nameWithType: Control.DefaultCursor
  fullName: System.Windows.Forms.Control.DefaultCursor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 대 한 기본 커서를 가져오거나 설정 합니다."
  remarks: "컨트롤에 대 한 기본 커서를 구성 하려면 기본 커서를 재정의 합니다. 이 컨트롤의 생성자에 커서를 설정 하는 보다 더 효율적 이며 자동 지원 특정 커서와 관련 된 디자이너 기능에 대 한 합니다."
  syntax:
    content: protected virtual System.Windows.Forms.Cursor DefaultCursor { get; }
    return:
      type: System.Windows.Forms.Cursor
      description: "형식의 개체 <xref href=&quot;System.Windows.Forms.Cursor&quot;> </xref> 현재 기본 커서를 나타내는입니다."
  overload: System.Windows.Forms.Control.DefaultCursor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DefaultFont
  id: DefaultFont
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DefaultFont
  nameWithType: Control.DefaultFont
  fullName: System.Windows.Forms.Control.DefaultFont
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 기본 글꼴을 가져옵니다."
  remarks: "다음 표에서 운영 체제와 로컬 문화권에 따라 DefaultFont에서 반환한 값을 설명 합니다.      | 시스템 / 또는 문화권 | 글꼴 |   |----------------------------|----------|   | Windows NT 4 x, 일본어 버전 | MS UI Gothic, 9 포인트입니다. |   | 아랍어 Windows | Tahoma, 8 포인트. |   | 다른 운영 체제/문화권 | MS Shell Dlg 논리 글꼴, 일반적으로 Microsoft San Serif 8 지점. |       MS Shell Dlg 글꼴 시스템 레지스트리에 설정에 매핑됩니다.       이전 글꼴이 설치 되어 있지 않으면 기본 글꼴이 Tahoma, 8 포인트 인 경우 없으면 굴림, 8 지점 설치, DefaultFontreturns <xref:System.Drawing.FontFamily.GenericSansSerif%2A>속성</xref:System.Drawing.FontFamily.GenericSansSerif%2A> 의 값"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.DefaultBackColor%2A>, DefaultFont, and <xref:System.Windows.Forms.Control.DefaultForeColor%2A> members. To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.ListBox> called ListBox1. Call the `Populate_ListBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \n  \n [!code-cpp[System.Windows.Forms.ControlDefaultProperties#1](~/add/codesnippet/cpp/p-system.windows.forms.c_29_1.cpp)]\n [!code-cs[System.Windows.Forms.ControlDefaultProperties#1](~/add/codesnippet/csharp/p-system.windows.forms.c_29_1.cs)]\n [!code-vb[System.Windows.Forms.ControlDefaultProperties#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_29_1.vb)]"
  syntax:
    content: public static System.Drawing.Font DefaultFont { get; }
    return:
      type: System.Drawing.Font
      description: "기본 <xref href=&quot;System.Drawing.Font&quot;> </xref> 컨트롤의 합니다. 반환 되는 값은 시스템의 로컬 문화권 설정 사용자의 운영 체제에 따라 달라 집니다."
  overload: System.Windows.Forms.Control.DefaultFont*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "기본 글꼴 또는 다른 국가별 글꼴 클라이언트 컴퓨터에 설치 되지 않습니다."
  platform:
  - net462
- uid: System.Windows.Forms.Control.DefaultForeColor
  id: DefaultForeColor
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DefaultForeColor
  nameWithType: Control.DefaultForeColor
  fullName: System.Windows.Forms.Control.DefaultForeColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 기본 전경색을 가져옵니다."
  remarks: "이것이 기본 <xref:System.Windows.Forms.Control.ForeColor%2A>부모로 지정 되지 않은 컨트롤의 속성 값.</xref:System.Windows.Forms.Control.ForeColor%2A> 파생된 클래스는 서로 다른 기본값을 가질 수 있습니다."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.DefaultBackColor%2A>, <xref:System.Windows.Forms.Control.DefaultFont%2A>, and DefaultForeColor members. To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.ListBox> called ListBox1. Call the `Populate_ListBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \n  \n [!code-cpp[System.Windows.Forms.ControlDefaultProperties#1](~/add/codesnippet/cpp/p-system.windows.forms.c_49_1.cpp)]\n [!code-cs[System.Windows.Forms.ControlDefaultProperties#1](~/add/codesnippet/csharp/p-system.windows.forms.c_49_1.cs)]\n [!code-vb[System.Windows.Forms.ControlDefaultProperties#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_49_1.vb)]"
  syntax:
    content: public static System.Drawing.Color DefaultForeColor { get; }
    return:
      type: System.Drawing.Color
      description: "기본 전경 <xref href=&quot;System.Drawing.Color&quot;> </xref> 컨트롤의 합니다. 기본값은 &lt;xref:System.Drawing.SystemColors.ControlText%2A?displayProperty=fullName&gt;합니다."
  overload: System.Windows.Forms.Control.DefaultForeColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DefaultImeMode
  id: DefaultImeMode
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DefaultImeMode
  nameWithType: Control.DefaultImeMode
  fullName: System.Windows.Forms.Control.DefaultImeMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에서 지 원하는 기본 Ime (입력기) 모드를 가져옵니다."
  remarks: "(입력기)는 사용자가 표준 키보드를 사용 하 여 복잡 한 한글 등의 기호를 입력할 수 있는 프로그램입니다.       구현 되는 <xref:System.Windows.Forms.Control>클래스,이 속성은 항상 반환 된 <xref:System.Windows.Forms.ImeMode?displayProperty=fullName>값.</xref:System.Windows.Forms.ImeMode?displayProperty=fullName> </xref:System.Windows.Forms.Control> <xref:System.Windows.Forms.ImeMode>값 IME 모드는 부모 컨트롤에서 상속 되도록 지정 합니다.</xref:System.Windows.Forms.ImeMode>"
  example:
  - "The following code example overrides the DefaultImeMode property to turn off the Input Method Editor.  \n  \n [!code-cs[Windows.Forms.Control Properties2#4](~/add/codesnippet/csharp/p-system.windows.forms.c_7_1.cs)]\n [!code-vb[Windows.Forms.Control Properties2#4](~/add/codesnippet/visualbasic/p-system.windows.forms.c_7_1.vb)]\n [!code-cpp[Windows.Forms.Control Properties2#4](~/add/codesnippet/cpp/p-system.windows.forms.c_7_1.cpp)]"
  syntax:
    content: protected virtual System.Windows.Forms.ImeMode DefaultImeMode { get; }
    return:
      type: System.Windows.Forms.ImeMode
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.ImeMode&quot;> </xref> 값입니다."
  overload: System.Windows.Forms.Control.DefaultImeMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DefaultMargin
  id: DefaultMargin
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DefaultMargin
  nameWithType: Control.DefaultMargin
  fullName: System.Windows.Forms.Control.DefaultMargin
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤 사이 기본적으로 지정 하는 공간을 픽셀 단위로 가져옵니다."
  syntax:
    content: protected virtual System.Windows.Forms.Padding DefaultMargin { get; }
    return:
      type: System.Windows.Forms.Padding
      description: "A <xref href=&quot;System.Windows.Forms.Padding&quot;> </xref> 컨트롤 사이의 기본 공백을 나타내는입니다."
  overload: System.Windows.Forms.Control.DefaultMargin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DefaultMaximumSize
  id: DefaultMaximumSize
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DefaultMaximumSize
  nameWithType: Control.DefaultMaximumSize
  fullName: System.Windows.Forms.Control.DefaultMaximumSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "길이 컨트롤의 기본 최대 크기로 지정 된는 높이 픽셀 단위로 가져옵니다."
  syntax:
    content: protected virtual System.Drawing.Size DefaultMaximumSize { get; }
    return:
      type: System.Drawing.Size
      description: "A &lt;xref:System.Drawing.Point.%23ctor%2A&gt; 컨트롤의 크기를 나타내는입니다."
  overload: System.Windows.Forms.Control.DefaultMaximumSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DefaultMinimumSize
  id: DefaultMinimumSize
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DefaultMinimumSize
  nameWithType: Control.DefaultMinimumSize
  fullName: System.Windows.Forms.Control.DefaultMinimumSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "길이 컨트롤의 기본 최소 크기로 지정 된는 높이 픽셀 단위로 가져옵니다."
  syntax:
    content: protected virtual System.Drawing.Size DefaultMinimumSize { get; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> 컨트롤의 크기를 나타내는입니다."
  overload: System.Windows.Forms.Control.DefaultMinimumSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DefaultPadding
  id: DefaultPadding
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DefaultPadding
  nameWithType: Control.DefaultPadding
  fullName: System.Windows.Forms.Control.DefaultPadding
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 내용을 픽셀 단위로 내부 간격을 가져옵니다."
  syntax:
    content: protected virtual System.Windows.Forms.Padding DefaultPadding { get; }
    return:
      type: System.Windows.Forms.Padding
      description: "A <xref href=&quot;System.Windows.Forms.Padding&quot;> </xref> 컨트롤 내용의 내부 간격을 나타내는입니다."
  overload: System.Windows.Forms.Control.DefaultPadding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DefaultSize
  id: DefaultSize
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DefaultSize
  nameWithType: Control.DefaultSize
  fullName: System.Windows.Forms.Control.DefaultSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 기본 크기를 가져옵니다."
  remarks: "DefaultSize 속성이 나타내는 <xref:System.Drawing.Size>처음 만들어질 때 컨트롤의.</xref:System.Drawing.Size> 설정 하 여 컨트롤의 크기를 조정할 수 있습니다는 <xref:System.Windows.Forms.Control.Size%2A>속성 값.</xref:System.Windows.Forms.Control.Size%2A>      > [!NOTE] > 더 나은 성능을 유지 하기 위해 설정 하지 않으면는 <xref:System.Drawing.Size>생성자에서 컨트롤의.</xref:System.Drawing.Size> DefaultSize 속성을 재정의 하는 것이 좋습니다.      > [!NOTE] >의 크기, Windows Server 2003에 시스템은 <xref:System.Windows.Forms.Form>최대 픽셀 너비와 높이 모니터에 의해 제한 됩니다.</xref:System.Windows.Forms.Form>"
  example:
  - "The following code example overrides the DefaultSize property, and makes the default size of the form 500 pixels square.  \n  \n [!code-cs[Windows.Forms.Control Properties2#3](~/add/codesnippet/csharp/p-system.windows.forms.c_10_1.cs)]\n [!code-vb[Windows.Forms.Control Properties2#3](~/add/codesnippet/visualbasic/p-system.windows.forms.c_10_1.vb)]\n [!code-cpp[Windows.Forms.Control Properties2#3](~/add/codesnippet/cpp/p-system.windows.forms.c_10_1.cpp)]"
  syntax:
    content: protected virtual System.Drawing.Size DefaultSize { get; }
    return:
      type: System.Drawing.Size
      description: "기본 <xref href=&quot;System.Drawing.Size&quot;> </xref> 컨트롤의 합니다."
  overload: System.Windows.Forms.Control.DefaultSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)
  id: DefWndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DefWndProc(Message)
  nameWithType: Control.DefWndProc(Message)
  fullName: System.Windows.Forms.Control.DefWndProc(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "기본 창 프로시저에 지정된 된 메시지를 보냅니다."
  remarks: "Windows 메시지를 처리 하는 방법에 대 한 자세한 내용은 참조는 [WindowProc 함수](http://go.microsoft.com/fwlink/?LinkId=181565)합니다."
  syntax:
    content: protected virtual void DefWndProc (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "Windows <xref href=&quot;System.Windows.Forms.Message&quot;> </xref> 프로세스에 있습니다."
  overload: System.Windows.Forms.Control.DefWndProc*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DestroyHandle
  id: DestroyHandle
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DestroyHandle()
  nameWithType: Control.DestroyHandle()
  fullName: System.Windows.Forms.Control.DestroyHandle()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤과 연결 된 핸들을 소멸 시킵니다."
  syntax:
    content: protected virtual void DestroyHandle ();
    parameters: []
  overload: System.Windows.Forms.Control.DestroyHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DisplayRectangle
  id: DisplayRectangle
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DisplayRectangle
  nameWithType: Control.DisplayRectangle
  fullName: System.Windows.Forms.Control.DisplayRectangle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 표시 영역을 나타내는 사각형을 가져옵니다."
  remarks: "DisplayRectangle 속성의 표시 영역 컨트롤의 클라이언트 사각형을 반환 합니다. 기본 컨트롤 클래스에 대 한 클라이언트 사각형에는이 같습니다. 그러나 상속 하는 컨트롤의 클라이언트 영역 표시 영역과 다른 경우이 변경 해야 할 수 있습니다. 표시 사각형은 가장 작은 <xref:System.Drawing.Rectangle>컨트롤을 포함 하 고 컨트롤을 배치 하는 데 사용 됩니다.</xref:System.Drawing.Rectangle>"
  syntax:
    content: public virtual System.Drawing.Rectangle DisplayRectangle { get; }
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 컨트롤의 표시 영역을 나타내는입니다."
  overload: System.Windows.Forms.Control.DisplayRectangle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Control.Dispose(Boolean)
  fullName: System.Windows.Forms.Control.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "사용 하는 관리 되지 않는 리소스를 해제는 <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 및 해당 자식 제어 하 고 선택적으로 관리 되는 리소스를 해제 합니다."
  remarks: "이 메서드는 public `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A>메서드.`Dispose()` </xref:System.Object.Finalize%2A> 보호 된 호출 `Dispose(Boolean)` 메서드는 `disposing` 매개 변수 설정 `true`합니다. <xref:System.Object.Finalize%2A>호출 `Dispose` 와 `disposing` 로 설정 `false`합니다.</xref:System.Object.Finalize%2A>       경우는 `disposing`매개 변수는 `true`,이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <xref:System.Windows.Forms.Control>참조.</xref:System.Windows.Forms.Control> 이 메서드 호출에서 `Dispose()` 각 참조 된 개체의 메서드."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.Windows.Forms.Control.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Disposing
  id: Disposing
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Disposing
  nameWithType: Control.Disposing
  fullName: System.Windows.Forms.Control.Disposing
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "나타내는 값을 가져옵니다 여부 기본 <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 클래스 삭제 작업이 진행 됩니다."
  remarks: "이 속성이 반환 하는 경우 `true`, 기본<xref:System.Windows.Forms.Control> 클래스 삭제 작업이 진행 됩니다.</xref:System.Windows.Forms.Control> 삭제 된 컨트롤은 더 이상 유효한 Windows 컨트롤로 참조할 수 없습니다. 컨트롤의 인스턴스 삭제 하는 경우에 가비지 수집을 통해 메모리에서 제거 될 때까지 메모리에 유지 계속 됩니다. 호출할 수 없습니다의 삭제는 컨트롤을 해당 <xref:System.Windows.Forms.Control.RecreateHandle%2A>메서드.</xref:System.Windows.Forms.Control.RecreateHandle%2A>"
  syntax:
    content: public bool Disposing { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우 기본 <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 클래스 삭제; 작업이 진행 되 고, 그러지 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.Disposing*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Dock
  id: Dock
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Dock
  nameWithType: Control.Dock
  fullName: System.Windows.Forms.Control.Dock
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "가져옵니다 또는 어느 컨트롤 테두리가 부모 컨트롤에 도킹 되는지를 가져오거나 설정 하 고 해당 부모 컨트롤 크기를 조정 하는 방법을 결정 합니다."
  remarks: "Dock 속성을 사용 하 여 컨트롤은 자동으로 조정 방법을 부모 컨트롤 크기 조정 되는지를 정의 합니다. 예를 들어 도킹 설정 <xref:System.Windows.Forms.DockStyle?displayProperty=fullName>부모 컨트롤의 왼쪽된 가장자리에 맞춰지고를 부모 컨트롤의 크기를 조정할 때의 크기를 조정 하 고 컨트롤.</xref:System.Windows.Forms.DockStyle?displayProperty=fullName> 컨트롤은 폼의 z 축 (깊이)와 함께 폼에 컨트롤의 시각적 계층은 Z 순서에 도킹 됩니다.       부모 컨테이너의 한쪽 가장자리에 도킹 될 수 있습니다 또는 모든 가장자리에 도킹 될 수 컨트롤과 부모 컨테이너를 입력 합니다.       설정의 <xref:System.Windows.Forms.Control.Margin%2A>도킹 된 컨트롤의 속성에는 컨트롤에서의 거리에 영향을 주지는 해당 컨테이너의 가장자리.</xref:System.Windows.Forms.Control.Margin%2A>      > [!NOTE] >는 <xref:System.Windows.Forms.Control.Anchor%2A>Dock 속성은 함께 사용할 수 없습니다.</xref:System.Windows.Forms.Control.Anchor%2A> 한 번에 하나만 설정할 수 있습니다 및 우선적으로 마지막으로 설정 합니다."
  example:
  - "The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties. The example creates a <xref:System.Windows.Forms.TextBox> and sets its <xref:System.Windows.Forms.Control.Location%2A> within the group box. Next, it sets the <xref:System.Windows.Forms.Control.Text%2A> property of the group box, and docks the group box to the top of the form. Lastly, it disables the group box by setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false`, which causes all controls contained within the group box to be disabled.  \n  \n [!code-cs[Windows.Forms.Control Properties#2](~/add/codesnippet/csharp/p-system.windows.forms.c_24_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties#2](~/add/codesnippet/cpp/p-system.windows.forms.c_24_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties#2](~/add/codesnippet/visualbasic/p-system.windows.forms.c_24_1.vb)]"
  syntax:
    content: public virtual System.Windows.Forms.DockStyle Dock { get; set; }
    return:
      type: System.Windows.Forms.DockStyle
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.DockStyle&quot;> </xref> 값입니다. 기본값은 <xref href=&quot;System.Windows.Forms.DockStyle&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.Dock*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "할당 된 값 중 하나는 <xref href=&quot;System.Windows.Forms.DockStyle&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Windows.Forms.Control.DockChanged
  id: DockChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DockChanged
  nameWithType: Control.DockChanged
  fullName: System.Windows.Forms.Control.DockChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우의 값은 <xref:System.Windows.Forms.Control.Dock*>속성 변경.</xref:System.Windows.Forms.Control.Dock*>"
  remarks: "이 이벤트는 <xref:System.Windows.Forms.Control.Dock%2A>프로그래밍 방식으로 수정 되거나 사용자 상호 작용 하 여 속성이 변경 될.</xref:System.Windows.Forms.Control.Dock%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes(*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.  \n  \n [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_62_1.vb)]\n [!code-cs[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/csharp/e-system.windows.forms.c_62_1.cs)]\n [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/cpp/e-system.windows.forms.c_62_1.cpp)]"
  syntax:
    content: public event EventHandler DockChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)
  id: DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DoDragDrop(Object,DragDropEffects)
  nameWithType: Control.DoDragDrop(Object,DragDropEffects)
  fullName: System.Windows.Forms.Control.DoDragDrop(Object,DragDropEffects)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "끌어서 놓기 작업을 시작합니다."
  remarks: "`allowedEffects` 작업이 발생할 수 있는 끌기 매개 변수를 결정 합니다. 관리 되는 기본 클래스는 끌기 작업을 다른 프로세스에서 응용 프로그램과 상호 운용 하는 경우 데이터 해야 하거나 (<xref:System.String>, <xref:System.Drawing.Bitmap>, 또는 <xref:System.Drawing.Imaging.Metafile>), <xref:System.Runtime.Serialization.ISerializable>또는 <xref:System.Windows.Forms.IDataObject>.</xref:System.Windows.Forms.IDataObject> </xref:System.Runtime.Serialization.ISerializable> 를 구현 하는 개체 또는</xref:System.Drawing.Imaging.Metafile> </xref:System.Drawing.Bitmap> </xref:System.String>       다음에서는 끌어서 놓기 작업이 발생 시기와 방법을 설명 합니다.       DoDragDrop 메서드는 현재 커서 위치에서 제어를 결정합니다. 그런 다음 컨트롤은 유효한 놓기 대상 인지 확인 합니다.       컨트롤이 유효한 놓기 대상일 경우는 <xref:System.Windows.Forms.Control.GiveFeedback>이벤트는 지정 된 끌어서 놓기 효과 함께 발생 합니다.</xref:System.Windows.Forms.Control.GiveFeedback> 끌어서 놓기 작업의 목록에 대 한 참조는 <xref:System.Windows.Forms.DragDropEffects>열거형.</xref:System.Windows.Forms.DragDropEffects>       마우스 커서 위치, 키보드 상태 및 마우스 단추 상태의 변경 내용은 추적 합니다.      -사용자가 창의 외부로 이동 하는 경우는 <xref:System.Windows.Forms.Control.DragLeave>이벤트가 발생 합니다.</xref:System.Windows.Forms.Control.DragLeave>      -마우스를 다른 컨트롤로 가져가면 하는 경우는 <xref:System.Windows.Forms.Control.DragEnter>제어 하는 발생에 대 한.</xref:System.Windows.Forms.Control.DragEnter>      -마우스가 이동 하지만 동일한 컨트롤 내에서 경우는 <xref:System.Windows.Forms.Control.DragOver>이벤트가 발생 합니다.</xref:System.Windows.Forms.Control.DragOver>       상태가 키보드 또는 마우스 단추에서 변경 될 경우는 <xref:System.Windows.Forms.Control.QueryContinueDrag>발생 하 고 데이터를 끌기를 계속할지 여부를 결정 하는 이벤트 또는 <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>이벤트의 <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</xref:System.Windows.Forms.QueryContinueDragEventArgs> 속성</xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> 의 값을 기준으로 작업을 취소 하려면</xref:System.Windows.Forms.Control.QueryContinueDrag>      -If 값 <xref:System.Windows.Forms.DragAction>은 `Continue`, <xref:System.Windows.Forms.Control.DragOver>이벤트 작업을 계속 하려면는 및 <xref:System.Windows.Forms.Control.GiveFeedback>이벤트는 적절 한 시각적 피드백이 설정 될 수 있도록 새로운 효과 함께 발생 합니다.</xref:System.Windows.Forms.Control.GiveFeedback> </xref:System.Windows.Forms.Control.DragOver> </xref:System.Windows.Forms.DragAction> 유효한 끌어서 놓기 작업 결과의 목록에 대 한 참조는 <xref:System.Windows.Forms.DragDropEffects>열거형.</xref:System.Windows.Forms.DragDropEffects>          > [!NOTE] >는 <xref:System.Windows.Forms.Control.DragOver>및 <xref:System.Windows.Forms.Control.GiveFeedback>이벤트는 쌍을 이루고 있어서 마우스가 놓기 대상을 통과할 때 사용자가 제공 대 한 최신 피드백이 게 마우스 위치에.</xref:System.Windows.Forms.Control.GiveFeedback> </xref:System.Windows.Forms.Control.DragOver>      -If 값 <xref:System.Windows.Forms.DragAction>은 `Drop`, 놓기 효과 값이 원본에 반환, 소스 응용 프로그램이 소스 데이터에 대해 적절 한 작업을 수행할 수 있도록 예를 들어 데이터를 잘라냅니다 해당 작업이 이동 이면.</xref:System.Windows.Forms.DragAction>      -If 값 <xref:System.Windows.Forms.DragAction>은 `Cancel`, <xref:System.Windows.Forms.Control.DragLeave>이벤트가 발생 합니다.</xref:System.Windows.Forms.Control.DragLeave> </xref:System.Windows.Forms.DragAction>      > [!NOTE] > The DoDragDrop 메서드는 모든 예외를 catch 하 고 다음과 같은 보안 또는 심각한 예외만 다시 throw:-SecurityException----ThreadAbortException-발생 한 OutOfMemoryException ExecutionEngineException-StackOverflowException IndexOutOfRangeException-NullReferenceException AccessViolationException"
  example:
  - "The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the DoDragDrop method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \n  \n The example also demonstrates using custom cursors for the drag-and-drop operation. The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.  \n  \n The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>. Finally, the status of the drop is displayed in the `DropLocationLabel` <xref:System.Windows.Forms.Label>.  \n  \n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.  \n  \n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#1](~/add/codesnippet/cpp/47e0feba-eeb5-4e2f-9c6b-_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#1](~/add/codesnippet/visualbasic/47e0feba-eeb5-4e2f-9c6b-_1.vb)]\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#1](~/add/codesnippet/csharp/47e0feba-eeb5-4e2f-9c6b-_1.cs)]  \n  \n The following code example shows how to use the <xref:System.Windows.Forms.DragDropEffects> enumeration to specify how data should be transferred between the controls involved in a drag-and-drop operation. This example requires that your form includes a <xref:System.Windows.Forms.RichTextBox> control and a <xref:System.Windows.Forms.ListBox> control and that the <xref:System.Windows.Forms.ListBox> control is populated with a list of valid file names. When the user drags a file name onto the <xref:System.Windows.Forms.RichTextBox> control, the control's <xref:System.Windows.Forms.Control.DragEnter> event is raised. Within the event handler, the <xref:System.Windows.Forms.DragEventArgs.Effect%2A> property of the <xref:System.Windows.Forms.DragEventArgs> is initialized to <xref:System.Windows.Forms.DragDropEffects> to indicate that the data referenced by the file path should be copied to the <xref:System.Windows.Forms.RichTextBox> control.  \n  \n [!code-cs[RichTextDragDrop#1](~/add/codesnippet/csharp/47e0feba-eeb5-4e2f-9c6b-_2.cs)]\n [!code-vb[RichTextDragDrop#1](~/add/codesnippet/visualbasic/47e0feba-eeb5-4e2f-9c6b-_2.vb)]\n [!code-cpp[RichTextDragDrop#1](~/add/codesnippet/cpp/47e0feba-eeb5-4e2f-9c6b-_2.cpp)]"
  syntax:
    content: public System.Windows.Forms.DragDropEffects DoDragDrop (object data, System.Windows.Forms.DragDropEffects allowedEffects);
    parameters:
    - id: data
      type: System.Object
      description: "끌 데이터입니다."
    - id: allowedEffects
      type: System.Windows.Forms.DragDropEffects
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.DragDropEffects&quot;> </xref> 값입니다."
    return:
      type: System.Windows.Forms.DragDropEffects
      description: "값은 <xref href=&quot;System.Windows.Forms.DragDropEffects&quot;> </xref> 끌어서 놓기 작업 동안 수행 된 마지막 효과 나타내는 열거형입니다."
  overload: System.Windows.Forms.Control.DoDragDrop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DoubleBuffered
  id: DoubleBuffered
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DoubleBuffered
  nameWithType: Control.DoubleBuffered
  fullName: System.Windows.Forms.Control.DoubleBuffered
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 컨트롤을 줄이거나 없애기 보조 버퍼를 사용 하 여 해당 화면을 그려야 하는지를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "버퍼링 된 그래픽 줄이거나 깜빡임을 점진적으로 다시 그리면은 표시 된 화면의 부분의 발생 하는 제거할 수 있습니다. 버퍼링 된 그래픽에서는 업데이트 된 데이터 버퍼에 먼저 기록 됩니다. 다음 그래픽 버퍼의 데이터를 표시 된 화면 메모리에 신속 하 게 기록 됩니다. 일반적으로 표시 된 그래픽 메모리의 상대적으로 더 빨리 스위치 깜빡임을 그 밖에 발생할 수를 줄입니다.      > [!NOTE] > DoubleBuffered 바인딩 가능한 속성이 아닙니다."
  syntax:
    content: protected virtual bool DoubleBuffered { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이중 버퍼링을 사용 하 여 컨트롤의 화면을 그려야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.DoubleBuffered*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DoubleClick
  id: DoubleClick
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DoubleClick
  nameWithType: Control.DoubleClick
  fullName: System.Windows.Forms.Control.DoubleClick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤을 두 번 클릭할 때 발생 합니다."
  remarks: "두 번 클릭은 운영 체제의 마우스 설정에 따라 결정 됩니다. 사용자를 두 번 클릭 하지 않고 두 번 클릭을 고려할 수 있도록 마우스 단추 클릭 만으로 간격을 설정할 수 있습니다. <xref:System.Windows.Forms.Control.Click>이벤트는 컨트롤을 두 번 클릭할 때마다 발생 합니다.</xref:System.Windows.Forms.Control.Click> 예를 들어에 대 한 이벤트 처리기가는 <xref:System.Windows.Forms.Control.Click>및 DoubleClick 이벤트의 한 <xref:System.Windows.Forms.Form>, <xref:System.Windows.Forms.Control.Click>DoubleClick 이벤트는 폼을 두 번 클릭 하 고 두 메서드가 모두 호출 된 경우 발생 하 고.</xref:System.Windows.Forms.Control.Click> </xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Control.Click> 컨트롤을 두 번 클릭 하 고 해당 컨트롤이 DoubleClick 이벤트를 지원 하지 않는 경우는 <xref:System.Windows.Forms.Control.Click>이벤트를 두 번 발생할 수 있습니다.</xref:System.Windows.Forms.Control.Click>       설정 해야 합니다는 `StandardDoubleClick` 및 `StandardClick` 값 <xref:System.Windows.Forms.ControlStyles>를 `true` 이 이벤트를 발생 합니다.</xref:System.Windows.Forms.ControlStyles> 이러한 값으로 이미 설정 되었을 `true` 기존 계획에서 상속 하는 경우에 Windows Forms 컨트롤입니다.      > [!NOTE] >에 대 한 다음과 같은 이벤트가 발생 하지 않습니다는 <xref:System.Windows.Forms.TabControl>하나 이상 있으면 클래스 <xref:System.Windows.Forms.TabPage>에 <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName>컬렉션: <xref:System.Windows.Forms.Control.Click>, DoubleClick, <xref:System.Windows.Forms.Control.MouseDown> <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover> <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave>및 <xref:System.Windows.Forms.Control.MouseMove>.</xref:System.Windows.Forms.Control.MouseMove> </xref:System.Windows.Forms.Control.MouseLeave> </xref:System.Windows.Forms.Control.MouseEnter> </xref:System.Windows.Forms.Control.MouseHover> </xref:System.Windows.Forms.Control.MouseUp> </xref:System.Windows.Forms.Control.MouseDown> </xref:System.Windows.Forms.Control.Click> </xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabControl> 둘 이상 있는 경우 <xref:System.Windows.Forms.TabPage>컬렉션에서 사용자 탭 컨트롤의 헤더 상호 작용 하 고 (여기서는 <xref:System.Windows.Forms.TabPage>이름이 표시), <xref:System.Windows.Forms.TabControl>적절 한 이벤트를 발생 시킵니다.</xref:System.Windows.Forms.TabControl> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabPage> 그러나 사용자 상호 작용 탭 페이지의 클라이언트 영역 내에 있으면는 <xref:System.Windows.Forms.TabPage>적절 한 이벤트를 발생 시킵니다.</xref:System.Windows.Forms.TabPage>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example uses the DoubleClick event of a <xref:System.Windows.Forms.ListBox> to load text files listed in the <xref:System.Windows.Forms.ListBox> into a <xref:System.Windows.Forms.TextBox> control.  \n  \n [!code-cs[Control.DoubleClick#1](~/add/codesnippet/csharp/e-system.windows.forms.c_33_1.cs)]\n [!code-vb[Control.DoubleClick#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_33_1.vb)]\n [!code-cpp[Control.DoubleClick#1](~/add/codesnippet/cpp/e-system.windows.forms.c_33_1.cpp)]"
  syntax:
    content: public event EventHandler DoubleClick;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DragDrop
  id: DragDrop
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DragDrop
  nameWithType: Control.DragDrop
  fullName: System.Windows.Forms.Control.DragDrop
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "끌어서 놓기 작업이 완료 될 때 발생 합니다."
  remarks: "<xref:System.Windows.Forms.DragEventArgs.X%2A>및 <xref:System.Windows.Forms.DragEventArgs.Y%2A>의 속성은 <xref:System.Windows.Forms.DragEventArgs>화면 좌표를 클라이언트 좌표로 하지에.</xref:System.Windows.Forms.DragEventArgs> </xref:System.Windows.Forms.DragEventArgs.Y%2A> </xref:System.Windows.Forms.DragEventArgs.X%2A> 다음 줄을 [!INCLUDE[csprcs](~/add/includes/csprcs-md.md)] 코드를 클라이언트 <xref:System.Drawing.Point>.</xref:System.Drawing.Point> 속성 변환      ```   Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));   ```      > [!NOTE]> 버전에서 이전의 [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]을 넣고는 <xref:System.Windows.Forms.UserControl>와 <xref:System.Windows.Forms.Control.DragEnter>및 Windows Form에 DragDrop 이벤트 끌어서 놓습니다로 요소는 <xref:System.Windows.Forms.UserControl>디자인 타임에는 `DropDrop` 및 `DropEnter` 이벤트가 발생 합니다.</xref:System.Windows.Forms.UserControl> </xref:System.Windows.Forms.Control.DragEnter> </xref:System.Windows.Forms.UserControl> 그러나 닫았다가 솔루션을 다시 열고는 <xref:System.Windows.Forms.Control.DragEnter>및 DragDrop 이벤트가 다시 발생 하지 않습니다.</xref:System.Windows.Forms.Control.DragEnter>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "This code excerpt demonstrates using the DragDrop event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \n  \n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#5](~/add/codesnippet/cpp/e-system.windows.forms.c_72_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#5](~/add/codesnippet/visualbasic/e-system.windows.forms.c_72_1.vb)]\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#5](~/add/codesnippet/csharp/e-system.windows.forms.c_72_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.DragEventHandler DragDrop;
    return:
      type: System.Windows.Forms.DragEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DragEnter
  id: DragEnter
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DragEnter
  nameWithType: Control.DragEnter
  fullName: System.Windows.Forms.Control.DragEnter
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "개체를 컨트롤의 범위 안으로 끌 때 발생 합니다."
  remarks: "수행은 끌어서 놓기 작업 동안 마우스 커서를 컨트롤 위로 먼저 끌 때 발생 합니다.      > [!NOTE] > 버전에서 보다 이전 [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)]을 넣고는 <xref:System.Windows.Forms.UserControl>수행 된 및 <xref:System.Windows.Forms.Control.DragDrop>Windows Form에 이벤트 끌어서 놓습니다로 요소는 <xref:System.Windows.Forms.UserControl>디자인 타임에는 `DropDrop` 및 `DropEnter` 이벤트가 발생 합니다.</xref:System.Windows.Forms.UserControl> </xref:System.Windows.Forms.Control.DragDrop> </xref:System.Windows.Forms.UserControl> 그러나 때 닫았다가 솔루션에서 수행 하 고 <xref:System.Windows.Forms.Control.DragDrop>이벤트가 다시 발생 하지 않습니다.</xref:System.Windows.Forms.Control.DragDrop>       다음에서는 끌어서 놓기 작업이 발생 시기와 방법을 설명 합니다.       <xref:System.Windows.Forms.Control.DoDragDrop%2A>메서드는 현재 커서 위치에서 컨트롤을 확인 합니다.</xref:System.Windows.Forms.Control.DoDragDrop%2A> 그런 다음 컨트롤은 유효한 놓기 대상 인지 확인 합니다.       컨트롤이 유효한 놓기 대상일 경우는 <xref:System.Windows.Forms.Control.GiveFeedback>이벤트는 지정 된 끌어서 놓기 효과 함께 발생 합니다.</xref:System.Windows.Forms.Control.GiveFeedback> 끌어서 놓기 작업의 목록에 대 한 참조는 <xref:System.Windows.Forms.DragDropEffects>열거형.</xref:System.Windows.Forms.DragDropEffects>       마우스 커서 위치, 키보드 상태 및 마우스 단추 상태의 변경 내용은 추적 합니다.      -사용자가 창의 외부로 이동 하는 경우는 <xref:System.Windows.Forms.Control.DragLeave>이벤트가 발생 합니다.</xref:System.Windows.Forms.Control.DragLeave>      -마우스를 다른 컨트롤로 가져가면, 해당 컨트롤에 대 한 수행 발생 합니다.      -마우스가 이동 하지만 동일한 컨트롤 내에서 경우는 <xref:System.Windows.Forms.Control.DragOver>이벤트가 발생 합니다.</xref:System.Windows.Forms.Control.DragOver>       상태가 키보드 또는 마우스 단추에서 변경 될 경우는<xref:System.Windows.Forms.Control.QueryContinueDrag> 발생 하 고 데이터를 끌기를 계속할지 여부를 결정 하는 이벤트 또는 <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>이벤트의 <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</xref:System.Windows.Forms.QueryContinueDragEventArgs> 속성</xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> 의 값을 기준으로 작업을 취소 하려면</xref:System.Windows.Forms.Control.QueryContinueDrag>      -If 값 <xref:System.Windows.Forms.DragAction>은 `Continue`, <xref:System.Windows.Forms.Control.DragOver>이벤트 작업을 계속 하려면는 및 <xref:System.Windows.Forms.Control.GiveFeedback>이벤트는 적절 한 시각적 피드백이 설정 될 수 있도록 새로운 효과 함께 발생 합니다.</xref:System.Windows.Forms.Control.GiveFeedback> </xref:System.Windows.Forms.Control.DragOver> </xref:System.Windows.Forms.DragAction> 유효한 끌어서 놓기 작업 결과의 목록에 대 한 참조는 <xref:System.Windows.Forms.DragDropEffects>열거형.</xref:System.Windows.Forms.DragDropEffects>          > [!NOTE] >는 <xref:System.Windows.Forms.Control.DragOver>및 <xref:System.Windows.Forms.Control.GiveFeedback>이벤트는 쌍을 이루고 있어서 마우스가 놓기 대상을 통과할 때 사용자가 제공 대 한 최신 피드백이 게 마우스 위치에.</xref:System.Windows.Forms.Control.GiveFeedback> </xref:System.Windows.Forms.Control.DragOver>      -If 값 <xref:System.Windows.Forms.DragAction>은 `Drop`, 놓기 효과 값이 원본에 반환, 소스 응용 프로그램이 소스 데이터에 대해 적절 한 작업을 수행할 수 있도록 예를 들어 데이터를 잘라냅니다 해당 작업이 이동 이면.</xref:System.Windows.Forms.DragAction>      -If 값 <xref:System.Windows.Forms.DragAction>은 `Cancel`, <xref:System.Windows.Forms.Control.DragLeave>이벤트가 발생 합니다.</xref:System.Windows.Forms.Control.DragLeave> </xref:System.Windows.Forms.DragAction>          > [!NOTE] >는 <xref:System.Windows.Forms.DragEventArgs.X%2A>및 <xref:System.Windows.Forms.DragEventArgs.Y%2A>의 속성은 <xref:System.Windows.Forms.DragEventArgs>화면 좌표를 클라이언트 좌표로 하지에.</xref:System.Windows.Forms.DragEventArgs> </xref:System.Windows.Forms.DragEventArgs.Y%2A> </xref:System.Windows.Forms.DragEventArgs.X%2A> 다음 줄을 [!INCLUDE[csprcs](~/add/includes/csprcs-md.md)] 코드를 클라이언트 <xref:System.Drawing.Point>.</xref:System.Drawing.Point> 속성 변환          ```       Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));       ```이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \n  \n The example also demonstrates using custom cursors for the drag-and-drop operation. The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.  \n  \n The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>. Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.  \n  \n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.  \n  \n This code excerpt demonstrates using the DragEnter event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \n  \n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#7](~/add/codesnippet/cpp/e-system.windows.forms.c_48_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#7](~/add/codesnippet/visualbasic/e-system.windows.forms.c_48_1.vb)]\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#7](~/add/codesnippet/csharp/e-system.windows.forms.c_48_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.DragEventHandler DragEnter;
    return:
      type: System.Windows.Forms.DragEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DragLeave
  id: DragLeave
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DragLeave
  nameWithType: Control.DragLeave
  fullName: System.Windows.Forms.Control.DragLeave
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 범위 밖으로 개체를 끌 때 발생 합니다."
  remarks: "현재의 컨트롤에서 커서를 다른 위치로 끌거나 현재 끌어서 놓기 작업을 취소 하는 경우에 발생 합니다.       다음에서는 끌어서 놓기 작업이 발생 시기와 방법을 설명 합니다.       <xref:System.Windows.Forms.Control.DoDragDrop%2A>메서드는 현재 커서 위치에서 컨트롤을 확인 합니다.</xref:System.Windows.Forms.Control.DoDragDrop%2A> 그런 다음 컨트롤은 유효한 놓기 대상 인지 확인 합니다.       컨트롤이 유효한 놓기 대상일 경우는 <xref:System.Windows.Forms.Control.GiveFeedback>이벤트는 지정 된 끌어서 놓기 효과 함께 발생 합니다.</xref:System.Windows.Forms.Control.GiveFeedback> 끌어서 놓기 작업의 목록에 대 한 참조는 <xref:System.Windows.Forms.DragDropEffects>열거형.</xref:System.Windows.Forms.DragDropEffects>       마우스 커서 위치, 키보드 상태 및 마우스 단추 상태의 변경 내용은 추적 합니다.      -사용자가 창의 외부로 이동 하는 경우에 현재의 발생 합니다.      -마우스를 다른 컨트롤로 가져가면 하는 경우는 <xref:System.Windows.Forms.Control.DragEnter>제어 하는 발생에 대 한.</xref:System.Windows.Forms.Control.DragEnter>      -마우스가 이동 하지만 동일한 컨트롤 내에서 경우는 <xref:System.Windows.Forms.Control.DragOver>이벤트가 발생 합니다.</xref:System.Windows.Forms.Control.DragOver>       상태가 키보드 또는 마우스 단추에서 변경 될 경우는 <xref:System.Windows.Forms.Control.QueryContinueDrag>발생 하 고 데이터를 끌기를 계속할지 여부를 결정 하는 이벤트 또는 <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>이벤트의 <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</xref:System.Windows.Forms.QueryContinueDragEventArgs> 속성</xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> 의 값을 기준으로 작업을 취소 하려면</xref:System.Windows.Forms.Control.QueryContinueDrag>      -If 값 <xref:System.Windows.Forms.DragAction>은 `Continue`, <xref:System.Windows.Forms.Control.DragOver>이벤트 작업을 계속 하려면는 및 <xref:System.Windows.Forms.Control.GiveFeedback>이벤트는 적절 한 시각적 피드백이 설정 될 수 있도록 새로운 효과 함께 발생 합니다.</xref:System.Windows.Forms.Control.GiveFeedback> </xref:System.Windows.Forms.Control.DragOver> </xref:System.Windows.Forms.DragAction> 유효한 끌어서 놓기 작업 결과의 목록에 대 한 참조는 <xref:System.Windows.Forms.DragDropEffects>열거형.</xref:System.Windows.Forms.DragDropEffects>          > [!NOTE] >는 <xref:System.Windows.Forms.Control.DragOver>및 <xref:System.Windows.Forms.Control.GiveFeedback>이벤트는 쌍을 이루고 있어서 마우스가 놓기 대상을 통과할 때 사용자가 제공 대 한 최신 피드백이 게 마우스 위치에.</xref:System.Windows.Forms.Control.GiveFeedback> </xref:System.Windows.Forms.Control.DragOver>      -If 값 <xref:System.Windows.Forms.DragAction>은 `Drop`, 놓기 효과 값이 원본에 반환, 소스 응용 프로그램이 소스 데이터에 대해 적절 한 작업을 수행할 수 있도록 예를 들어 데이터를 잘라냅니다 해당 작업이 이동 이면.</xref:System.Windows.Forms.DragAction>      -If 값 <xref:System.Windows.Forms.DragAction>은 `Cancel`, 현재의 이벤트가 발생 합니다.</xref:System.Windows.Forms.DragAction>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \n  \n The example also demonstrates using custom cursors for the drag-and-drop operation. The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.  \n  \n The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>. Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.  \n  \n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.  \n  \n This code excerpt demonstrates using the DragLeave event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \n  \n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#8](~/add/codesnippet/cpp/e-system.windows.forms.c_10_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#8](~/add/codesnippet/visualbasic/e-system.windows.forms.c_10_1.vb)]\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#8](~/add/codesnippet/csharp/e-system.windows.forms.c_10_1.cs)]"
  syntax:
    content: public event EventHandler DragLeave;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DragOver
  id: DragOver
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DragOver
  nameWithType: Control.DragOver
  fullName: System.Windows.Forms.Control.DragOver
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "개체를 컨트롤의 범위 위로 끌 때 발생 합니다."
  remarks: "끌기 이벤트는 끌어서 놓기 작업 동안 컨트롤의 범위 내에서 마우스 커서를 이동 하는 경우에 발생 합니다.       다음에서는 끌어서 놓기 작업이 발생 시기와 방법을 설명 합니다.       <xref:System.Windows.Forms.Control.DoDragDrop%2A>메서드는 현재 커서 위치에서 컨트롤을 확인 합니다.</xref:System.Windows.Forms.Control.DoDragDrop%2A> 그런 다음 컨트롤은 유효한 놓기 대상 인지 확인 합니다.       컨트롤이 유효한 놓기 대상일 경우는 <xref:System.Windows.Forms.Control.GiveFeedback>이벤트는 지정 된 끌어서 놓기 효과 함께 발생 합니다.</xref:System.Windows.Forms.Control.GiveFeedback> 끌어서 놓기 작업의 목록에 대 한 참조는 <xref:System.Windows.Forms.DragDropEffects>열거형.</xref:System.Windows.Forms.DragDropEffects>       마우스 커서 위치, 키보드 상태 및 마우스 단추 상태의 변경 내용은 추적 합니다.      -사용자가 창의 외부로 이동 하는 경우는 <xref:System.Windows.Forms.Control.DragLeave>이벤트가 발생 합니다.</xref:System.Windows.Forms.Control.DragLeave>      -마우스를 다른 컨트롤로 가져가면 하는 경우는 <xref:System.Windows.Forms.Control.DragEnter>제어 하는 발생에 대 한.</xref:System.Windows.Forms.Control.DragEnter>      -마우스가 이동 하지만 동일한 컨트롤 내에서, 끌기 이벤트 발생 합니다.       상태가 키보드 또는 마우스 단추에서 변경 될 경우는<xref:System.Windows.Forms.Control.QueryContinueDrag> 발생 하 고 데이터를 끌기를 계속할지 여부를 결정 하는 이벤트 또는 <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>이벤트의 <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</xref:System.Windows.Forms.QueryContinueDragEventArgs> 속성</xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> 의 값을 기준으로 작업을 취소 하려면</xref:System.Windows.Forms.Control.QueryContinueDrag>      -If 값 <xref:System.Windows.Forms.DragAction>값은 `Continue`, 끌기 이벤트 작업을 계속 하려면 및 <xref:System.Windows.Forms.Control.GiveFeedback>이벤트는 적절 한 시각적 피드백이 설정 될 수 있도록 새로운 효과 함께 발생 합니다.</xref:System.Windows.Forms.Control.GiveFeedback> </xref:System.Windows.Forms.DragAction> 유효한 끌어서 놓기 작업 결과의 목록에 대 한 참조는 <xref:System.Windows.Forms.DragDropEffects>열거형.</xref:System.Windows.Forms.DragDropEffects>          > [!NOTE] > The 끌기 및 <xref:System.Windows.Forms.Control.GiveFeedback>이벤트는 쌍을 이루고 있어서 마우스가 놓기 대상을 통과할 때 사용자가 제공 대 한 최신 피드백이 게 마우스 위치에.</xref:System.Windows.Forms.Control.GiveFeedback>      -If 값 <xref:System.Windows.Forms.DragAction>은 `Drop`, 놓기 효과 값이 원본에 반환, 소스 응용 프로그램이 소스 데이터에 대해 적절 한 작업을 수행할 수 있도록 예를 들어 데이터를 잘라냅니다 해당 작업이 이동 이면.</xref:System.Windows.Forms.DragAction>      -If 값 <xref:System.Windows.Forms.DragAction>은 `Cancel`, <xref:System.Windows.Forms.Control.DragLeave>이벤트가 발생 합니다.</xref:System.Windows.Forms.Control.DragLeave> </xref:System.Windows.Forms.DragAction>          > [!NOTE] >는 <xref:System.Windows.Forms.DragEventArgs.X%2A>및 <xref:System.Windows.Forms.DragEventArgs.Y%2A>의 속성은 <xref:System.Windows.Forms.DragEventArgs>화면 좌표를 클라이언트 좌표로 하지에.</xref:System.Windows.Forms.DragEventArgs> </xref:System.Windows.Forms.DragEventArgs.Y%2A> </xref:System.Windows.Forms.DragEventArgs.X%2A> C# 코드 변환 <xref:System.Drawing.Point>클라이언트에 대 한 속성의 다음 줄: >> 가리킨 clientPoint = targetControl.PointToClient (새 지점 (de 합니다. X, de 합니다. Y));       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md).</xref:System.Drawing.Point>"
  example:
  - "The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \n  \n The example also demonstrates using custom cursors for the drag-and-drop operation. The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.  \n  \n The keyboard state is evaluated in the DragOver event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>. Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.  \n  \n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.  \n  \n This code excerpt demonstrates using the DragOver event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \n  \n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/add/codesnippet/cpp/e-system.windows.forms.c_17_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/add/codesnippet/visualbasic/e-system.windows.forms.c_17_1.vb)]\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#4](~/add/codesnippet/csharp/e-system.windows.forms.c_17_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.DragEventHandler DragOver;
    return:
      type: System.Windows.Forms.DragEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)
  id: DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DrawToBitmap(Bitmap,Rectangle)
  nameWithType: Control.DrawToBitmap(Bitmap,Rectangle)
  fullName: System.Windows.Forms.Control.DrawToBitmap(Bitmap,Rectangle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정한 비트맵 렌더링을 지원 합니다."
  remarks: "ActiveX 컨트롤에 대 한 DrawToBitmap 메서드가 지원 되지 않습니다. 재정의할 수 있습니다는 <xref:System.Windows.Forms.Control.OnPrint%2A>이벤트 하 고 필요한 경우 사용자 지정 인쇄 논리를 제공 합니다.</xref:System.Windows.Forms.Control.OnPrint%2A>       DrawToBitmap 메서드에 다음과 같은 제한 사항이:- <xref:System.ArgumentException>큰 비트맵에 대해 throw 될 수 있습니다.</xref:System.ArgumentException> 허용 되는 최대 크기는 컴퓨터에 따라 다릅니다.      -DrawToBitmap 지원 하지 않습니다는 `Ink` Windows XP Tablet PC Edition 2005 운영 체제에 대 한 제어 합니다.      -DrawToBitmap 자식 그리지 않습니다 <xref:System.Windows.Forms.TextBox>경우는 <xref:System.Windows.Forms.Control.Visible%2A>의 속성은 <xref:System.Windows.Forms.TextBox>로 설정 된 `false`.</xref:System.Windows.Forms.TextBox> </xref:System.Windows.Forms.Control.Visible%2A> </xref:System.Windows.Forms.TextBox>      -컨테이너 내에 있는 컨트롤 역순으로 렌더링 됩니다.      -DrawToBitmap에 대 한 완전히 작동 하지 않습니다는 <xref:System.Windows.Forms.RichTextBox>에게만 비트맵의 테두리를 그립니다.</xref:System.Windows.Forms.RichTextBox>"
  syntax:
    content: public void DrawToBitmap (System.Drawing.Bitmap bitmap, System.Drawing.Rectangle targetBounds);
    parameters:
    - id: bitmap
      type: System.Drawing.Bitmap
      description: "비트맵을 그릴 수입니다."
    - id: targetBounds
      type: System.Drawing.Rectangle
      description: "컨트롤이 렌더링 되는 범위입니다."
  overload: System.Windows.Forms.Control.DrawToBitmap*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Enabled
  id: Enabled
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Enabled
  nameWithType: Control.Enabled
  fullName: System.Windows.Forms.Control.Enabled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤이 사용자 상호 작용에 응답할 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "Enabled 속성을 런타임에 컨트롤을 사용 하지 않도록 설정 하거나 설정할 수 있습니다. 예를 들어 응용 프로그램의 현재 상태에 적용 되지 않는 컨트롤을 비활성화할 수 있습니다. 또한 해당 사용을 제한 하는 컨트롤을 해제할 수 있습니다. 예를 들어 사용자가 클릭 하지 않도록 하려면 단추를 해제할 수 있습니다. 컨트롤이 비활성화 된 경우에 선택할 수 없습니다.      > [!IMPORTANT] > Enabled 속성을 설정 `false` 응용 프로그램의 컨트롤 상자를 사용 하지 않도록 설정 하지 않거나 응용 프로그램 창에서 포커스를 받을 방지 합니다.       컨테이너 컨트롤의 enabled 속성을 설정 하는 경우 `false`, 포함 된 모든 컨트롤도 비활성화 됩니다. 예를 들어 사용자가 비활성화 된에 포함 된 컨트롤은 클릭할 경우 <xref:System.Windows.Forms.GroupBox>컨트롤은 이벤트가 발생 하지 않습니다.</xref:System.Windows.Forms.GroupBox>      > [!NOTE] > 스크롤할 수 있는 컨트롤을 사용 하지 않도록 설정 하는 경우 스크롤 막대가 조건도 비활성화 됩니다. 예를 들어 사용할 수 없는 여러 줄 textbox가 텍스트의 모든 줄을 표시 하려면 스크롤할 수 없습니다."
  example:
  - "The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties. The example creates a <xref:System.Windows.Forms.TextBox> and sets its <xref:System.Windows.Forms.Control.Location%2A> within the group box. Next, it sets the <xref:System.Windows.Forms.Control.Text%2A> property of the group box, and docks the group box to the top of the form. Lastly, it disables the group box by setting the Enabled property to `false`, which causes all controls contained within the group box to be disabled.  \n  \n [!code-cs[Windows.Forms.Control Properties#2](~/add/codesnippet/csharp/p-system.windows.forms.c_68_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties#2](~/add/codesnippet/cpp/p-system.windows.forms.c_68_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties#2](~/add/codesnippet/visualbasic/p-system.windows.forms.c_68_1.vb)]"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 사용자 상호 작용에 응답할 수 있으면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.EnabledChanged
  id: EnabledChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: EnabledChanged
  nameWithType: Control.EnabledChanged
  fullName: System.Windows.Forms.Control.EnabledChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우는 <xref:System.Windows.Forms.Control.Enabled*>속성 값이 변경.</xref:System.Windows.Forms.Control.Enabled*>"
  remarks: "이 이벤트는 <xref:System.Windows.Forms.Control.Enabled%2A>프로그래밍 방식으로 수정 되거나 사용자 상호 작용 하 여 속성이 변경 될.</xref:System.Windows.Forms.Control.Enabled%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example uses two <xref:System.Windows.Forms.RadioButton> controls to demonstrate the EnabledChanged event. Clicking one button changes the value of the <xref:System.Windows.Forms.Control.Enabled%2A> property of the other button to `false` and displays a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-vb[System.Windows.Forms.Control.EnabledChanged#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_32_1.vb)]\n [!code-cs[System.Windows.Forms.Control.EnabledChanged#1](~/add/codesnippet/csharp/e-system.windows.forms.c_32_1.cs)]"
  syntax:
    content: public event EventHandler EnabledChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)
  id: EndInvoke(System.IAsyncResult)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: EndInvoke(IAsyncResult)
  nameWithType: Control.EndInvoke(IAsyncResult)
  fullName: System.Windows.Forms.Control.EndInvoke(IAsyncResult)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "가 나타내는 비동기 작업의 반환 값을 검색 하는 <xref:System.IAsyncResult>전달 합니다.</xref:System.IAsyncResult>"
  remarks: "비동기 작업이 완료 되지 않은 경우이 함수는 결과가 나올 때까지 차단 됩니다.      > [!NOTE] > 외에 <xref:System.Windows.Forms.Control.InvokeRequired%2A>속성에는 스레드로부터 안전 컨트롤에서 네 가지 메서드가 있습니다: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, EndInvoke, 및 <xref:System.Windows.Forms.Control.CreateGraphics%2A>컨트롤에 대 한 핸들 이미 만든 경우.</xref:System.Windows.Forms.Control.CreateGraphics%2A> </xref:System.Windows.Forms.Control.BeginInvoke%2A> </xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control.InvokeRequired%2A> 호출 <xref:System.Windows.Forms.Control.CreateGraphics%2A>컨트롤의 핸들이 백그라운드 스레드에서 생성 되기 전에 잘못 된 크로스 스레드 호출 될 수 있습니다.</xref:System.Windows.Forms.Control.CreateGraphics%2A> 다른 모든 메서드 호출에 대 한 사용할지 invoke 메서드 중 하나를 컨트롤의 스레드에 대 한 호출을 마샬링하 합니다."
  syntax:
    content: public object EndInvoke (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>특정 호출 비동기 작업을 <xref:System.Windows.Forms.Control.BeginInvoke*>.</xref:System.Windows.Forms.Control.BeginInvoke*> 를 호출할 때 반환 되는를 나타내는</xref:System.IAsyncResult>"
    return:
      type: System.Object
      description: "<xref:System.Object>비동기 작업으로 생성 된.</xref:System.Object>"
  overload: System.Windows.Forms.Control.EndInvoke*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>asyncResult</code> parameter value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> asyncResult </code> 개체의 한 이전 호출에서 생성 되지 않은 <xref:System.Windows.Forms.Control.BeginInvoke*>동일한 컨트롤에 있는 메서드의.</xref:System.Windows.Forms.Control.BeginInvoke*>"
  platform:
  - net462
- uid: System.Windows.Forms.Control.Enter
  id: Enter
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Enter
  nameWithType: Control.Enter
  fullName: System.Windows.Forms.Control.Enter
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤이 입력 되 면 발생 합니다."
  remarks: "When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:  \n  \n1.  Enter  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  <xref:System.Windows.Forms.Control.Leave>  \n  \n4.  <xref:System.Windows.Forms.Control.Validating>  \n  \n5.  <xref:System.Windows.Forms.Control.Validated>  \n  \n6.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:  \n  \n1.  Enter  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n4.  <xref:System.Windows.Forms.Control.Leave>  \n  \n5.  <xref:System.Windows.Forms.Control.Validating>  \n  \n6.  <xref:System.Windows.Forms.Control.Validated>  \n  \n If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.  \n  \n> [!NOTE]\n>  The Enter and <xref:System.Windows.Forms.Control.Leave> events are suppressed by the <xref:System.Windows.Forms.Form> class. The equivalent events in the <xref:System.Windows.Forms.Form> class are the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events. The Enter and <xref:System.Windows.Forms.Control.Leave> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached. For example, assume you have a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.GroupBox> controls, and each <xref:System.Windows.Forms.GroupBox> control has one <xref:System.Windows.Forms.TextBox> control. When the caret is moved from one <xref:System.Windows.Forms.TextBox> to the other, the <xref:System.Windows.Forms.Control.Leave> event is raised for the <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.GroupBox>, and the Enter event is raised for the other <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TextBox>.  \n  \n> [!CAUTION]\n>  Do not attempt to set focus from within the Enter, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the `WM_KILLFOCUS` topic in the \"Keyboard Input Reference\" section and the \"Message Deadlocks\" section of the[About Messages and Message Queues](http://msdn.microsoft.com/library/windows/desktop/ms644927\\(v=vs.85\\).aspx)topic.  \n  \n For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example uses the Enter event to change the foreground and background colors of a <xref:System.Windows.Forms.TextBox> under particular conditions.  \n  \n [!code-cs[Control.Enter#1](~/add/codesnippet/csharp/e-system.windows.forms.c_20_1.cs)]\n [!code-cpp[Control.Enter#1](~/add/codesnippet/cpp/e-system.windows.forms.c_20_1.cpp)]\n [!code-vb[Control.Enter#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_20_1.vb)]"
  syntax:
    content: public event EventHandler Enter;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.FindForm
  id: FindForm
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: FindForm()
  nameWithType: Control.FindForm()
  fullName: System.Windows.Forms.Control.FindForm()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤이 포함 된 양식을 검색 합니다."
  remarks: "컨트롤의 <xref:System.Windows.Forms.Control.Parent%2A>속성 값 수와 같을 수 없습니다는 <xref:System.Windows.Forms.Form>FindForm 메서드에 의해 반환 된.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Control.Parent%2A> 예를 들어, <xref:System.Windows.Forms.RadioButton>내에서 <xref:System.Windows.Forms.GroupBox>제어 및 <xref:System.Windows.Forms.GroupBox>에서 <xref:System.Windows.Forms.Form> <xref:System.Windows.Forms.RadioButton>컨트롤의 <xref:System.Windows.Forms.Control.Parent%2A> <xref:System.Windows.Forms.GroupBox> <xref:System.Windows.Forms.GroupBox>컨트롤의 <xref:System.Windows.Forms.Control.Parent%2A>은 <xref:System.Windows.Forms.Form>.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Control.Parent%2A> </xref:System.Windows.Forms.GroupBox> </xref:System.Windows.Forms.GroupBox> </xref:System.Windows.Forms.Control.Parent%2A> </xref:System.Windows.Forms.RadioButton> </xref:System.Windows.Forms.Form> 은</xref:System.Windows.Forms.GroupBox> </xref:System.Windows.Forms.GroupBox> 컨트롤이 포함 된</xref:System.Windows.Forms.RadioButton> 경우"
  example:
  - "The following code example finds the form that contains the specified button.  \n  \n [!code-cpp[Control.FindForm#1](~/add/codesnippet/cpp/m-system.windows.forms.c_24_1.cpp)]\n [!code-vb[Control.FindForm#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_24_1.vb)]\n [!code-cs[Control.FindForm#1](~/add/codesnippet/csharp/m-system.windows.forms.c_24_1.cs)]"
  syntax:
    content: public System.Windows.Forms.Form FindForm ();
    parameters: []
    return:
      type: System.Windows.Forms.Form
      description: "<xref href=&quot;System.Windows.Forms.Form&quot;> </xref> 컨트롤입니다."
  overload: System.Windows.Forms.Control.FindForm*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Focus
  id: Focus
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Focus()
  nameWithType: Control.Focus()
  fullName: System.Windows.Forms.Control.Focus()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "입력 컨트롤에 포커스를 설정 합니다."
  remarks: "포커스 메서드 반환 `true` 컨트롤이 입력된 포커스를 성공적으로 수신 하는 경우. 컨트롤 표시 하지 않고도 모든 시각적 포커스의 입력된 포커스를 가질 수 있습니다. 아래에 나열 된 선택할 수 없는 컨트롤에서이 동작은 주로 볼 또는 모든 컨트롤에서 파생 된 해당 합니다.       컨트롤을 선택 하 고 다음에 해당할 경우 입력된 포커스를 받을:는 `Selectable` 값 <xref:System.Windows.Forms.ControlStyles>로 설정 된 `true`를 다른 컨트롤에 포함 된와 모든 부모 컨트롤이 표시 되 고 사용할.</xref:System.Windows.Forms.ControlStyles>       다음 목록에 Windows Forms 컨트롤은 선택할 수 있습니다. 이러한 컨트롤에서 파생 된 컨트롤은도 선택할 수 없습니다.      - <xref:System.Windows.Forms.Panel>- <xref:System.Windows.Forms.GroupBox>- <xref:System.Windows.Forms.PictureBox>- <xref:System.Windows.Forms.ProgressBar>- <xref:System.Windows.Forms.Splitter>- <xref:System.Windows.Forms.Label>- <xref:System.Windows.Forms.LinkLabel>(이 경우 컨트롤에 링크가) > [!NOTE] > 포커스가 주로 사용자 지정 컨트롤 작성자에는 하위 수준 메서드입니다.</xref:System.Windows.Forms.LinkLabel> </xref:System.Windows.Forms.Label> </xref:System.Windows.Forms.Splitter> </xref:System.Windows.Forms.ProgressBar> </xref:System.Windows.Forms.PictureBox> </xref:System.Windows.Forms.GroupBox> </xref:System.Windows.Forms.Panel> 대신, 응용 프로그램 프로그래머를 사용 해야는 <xref:System.Windows.Forms.Control.Select%2A>메서드 또는 <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A>자식 컨트롤에 대 한 속성 또는 <xref:System.Windows.Forms.Form.Activate%2A>폼에 대 한 메서드.</xref:System.Windows.Forms.Form.Activate%2A> </xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> </xref:System.Windows.Forms.Control.Select%2A>"
  example:
  - "The following code example sets focus to the specified <xref:System.Windows.Forms.Control>, if it can receive focus.  \n  \n [!code-cpp[Windows.Forms.ControlMembers6#1](~/add/codesnippet/cpp/m-system.windows.forms.c_82_1.cpp)]\n [!code-cs[Windows.Forms.ControlMembers6#1](~/add/codesnippet/csharp/m-system.windows.forms.c_82_1.cs)]\n [!code-vb[Windows.Forms.ControlMembers6#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_82_1.vb)]"
  syntax:
    content: public bool Focus ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>입력된 포커스 요청이 성공 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.Focus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Focused
  id: Focused
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Focused
  nameWithType: Control.Focused
  fullName: System.Windows.Forms.Control.Focused
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 입력 포커스가 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following code example disables a <xref:System.Windows.Forms.MenuItem> if a <xref:System.Windows.Forms.TextBox> does not have focus. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TextBox> named `textBox1` and two <xref:System.Windows.Forms.MenuItem> objects named `menuItemEdit` and `menuItemEditInsertCustomerInfo`.  \n  \n [!code-cs[Windows.FOrms.Control Members2#4](~/add/codesnippet/csharp/p-system.windows.forms.c_105_1.cs)]\n [!code-cpp[Windows.FOrms.Control Members2#4](~/add/codesnippet/cpp/p-system.windows.forms.c_105_1.cpp)]\n [!code-vb[Windows.FOrms.Control Members2#4](~/add/codesnippet/visualbasic/p-system.windows.forms.c_105_1.vb)]"
  syntax:
    content: public virtual bool Focused { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤에 포커스가 있으면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.Focused*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Font
  id: Font
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Font
  nameWithType: Control.Font
  fullName: System.Windows.Forms.Control.Font
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 의해 표시 되는 텍스트의 글꼴을 가져오거나 설정 합니다."
  remarks: "Font 속성 앰비언트 속성이입니다. 그렇지 않은 경우, 즉 앰비언트 속성은 컨트롤 속성 설정, 부모 컨트롤에서 검색 됩니다. 예를 들어 한 <xref:System.Windows.Forms.Button>같은 가질 수 <xref:System.Windows.Forms.Control.BackColor%2A>부모로 <xref:System.Windows.Forms.Form>기본적으로.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Control.BackColor%2A> </xref:System.Windows.Forms.Button> 앰비언트 속성에 대 한 자세한 내용은 참조는 <xref:System.Windows.Forms.AmbientProperties>클래스 또는 <xref:System.Windows.Forms.Control>클래스 개요.</xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.AmbientProperties>       때문에 <xref:System.Drawing.Font>는 변경할 수 없습니다 (조정할 수 없는 속성을 의미)를 할당할 수 있습니다 Font 속성에 새 <xref:System.Drawing.Font>.</xref:System.Drawing.Font> </xref:System.Drawing.Font> 그러나 기존 글꼴에 새 글꼴을 만들 수 있습니다.       [Visual Basic, C#]       다음은 기존 글꼴을 굵게를 조정 하는 방법의 예입니다.```c#   myControl.Font = new Font(myControl.Font,        myControl.Font.Style | FontStyle.Bold);   ```      ```vb#   MyControl.Font = New Font(MyControl.Font, _        MyControl.Font.Style Or FontStyle.Bold)   ```"
  example:
  - "The following code example displays a <xref:System.Windows.Forms.FontDialog> to the user and changes the <xref:System.Drawing.Font> of a <xref:System.Windows.Forms.DateTimePicker> control. This example requires that you have a <xref:System.Windows.Forms.Form> with <xref:System.Windows.Forms.Button> and a <xref:System.Windows.Forms.DateTimePicker> on it.  \n  \n [!code-cpp[Control_Font#1](~/add/codesnippet/cpp/p-system.windows.forms.c_116_1.cpp)]\n [!code-cs[Control_Font#1](~/add/codesnippet/csharp/p-system.windows.forms.c_116_1.cs)]\n [!code-vb[Control_Font#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_116_1.vb)]"
  syntax:
    content: public virtual System.Drawing.Font Font { get; set; }
    return:
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;> </xref> 컨트롤에서 표시 되는 텍스트에 적용할 수 있습니다. 기본값은 값의는 <xref:System.Windows.Forms.Control.DefaultFont*>속성.</xref:System.Windows.Forms.Control.DefaultFont*>"
  overload: System.Windows.Forms.Control.Font*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.FontChanged
  id: FontChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: FontChanged
  nameWithType: Control.FontChanged
  fullName: System.Windows.Forms.Control.FontChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우는 <xref:System.Windows.Forms.Control.Font*>속성 값이 변경.</xref:System.Windows.Forms.Control.Font*>"
  remarks: "이 이벤트는 <xref:System.Windows.Forms.Control.Font%2A>속성이 상호 작용을 통해 또는 프로그래밍 방식으로 수정으로 변경 합니다.</xref:System.Windows.Forms.Control.Font%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the FontChanged event.  \n  \n [!code-cs[System.Windows.Forms.Control.FontChanged#1](~/add/codesnippet/csharp/e-system.windows.forms.c_35_1.cs)]\n [!code-vb[System.Windows.Forms.Control.FontChanged#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_35_1.vb)]"
  syntax:
    content: public event EventHandler FontChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.FontHeight
  id: FontHeight
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: FontHeight
  nameWithType: Control.FontHeight
  fullName: System.Windows.Forms.Control.FontHeight
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 글꼴의 높이 가져오거나 설정 합니다."
  remarks: >-
    > [!NOTE]

    >  The FontHeight property should not be set to any value other than the control's <xref:System.Drawing.Font.Height%2A?displayProperty=fullName> value, or -1. Setting FontHeight to -1 has the effect of clearing the cached height value, and the value is recalculated the next time the property is referenced.
  syntax:
    content: protected int FontHeight { get; set; }
    return:
      type: System.Int32
      description: "높이 <xref href=&quot;System.Drawing.Font&quot;> </xref> 픽셀 단위로 제어 합니다."
  overload: System.Windows.Forms.Control.FontHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ForeColor
  id: ForeColor
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ForeColor
  nameWithType: Control.ForeColor
  fullName: System.Windows.Forms.Control.ForeColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 전경색을 가져오거나 설정 합니다."
  remarks: "ForeColor 속성 앰비언트 속성이입니다. 그렇지 않은 경우, 즉 앰비언트 속성은 컨트롤 속성 설정, 부모 컨트롤에서 검색 됩니다. 예를 들어 한 <xref:System.Windows.Forms.Button>같은 가질 수 <xref:System.Windows.Forms.Control.BackColor%2A>부모로 <xref:System.Windows.Forms.Form>기본적으로.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Control.BackColor%2A> </xref:System.Windows.Forms.Button> 앰비언트 속성에 대 한 자세한 내용은 참조는 <xref:System.Windows.Forms.AmbientProperties>클래스 또는 <xref:System.Windows.Forms.Control>클래스 개요.</xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.AmbientProperties>"
  example:
  - "The following code example sets the <xref:System.Windows.Forms.Control.BackColor%2A> and ForeColor of the controls to the default system colors. The code recursively calls itself if the control has any child controls. This code example requires that you have a <xref:System.Windows.Forms.Form> with at least one child control; however, a child container control, like a <xref:System.Windows.Forms.Panel> or <xref:System.Windows.Forms.GroupBox>, with its own child control(s) would better demonstrate the recursion.  \n  \n [!code-cs[Windows.Forms.Control Properties#1](~/add/codesnippet/csharp/p-system.windows.forms.c_23_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties#1](~/add/codesnippet/cpp/p-system.windows.forms.c_23_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_23_1.vb)]"
  syntax:
    content: public virtual System.Drawing.Color ForeColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "전경 <xref href=&quot;System.Drawing.Color&quot;> </xref> 컨트롤의 합니다. 기본값은 값의는 <xref:System.Windows.Forms.Control.DefaultForeColor*>속성.</xref:System.Windows.Forms.Control.DefaultForeColor*>"
  overload: System.Windows.Forms.Control.ForeColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ForeColorChanged
  id: ForeColorChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ForeColorChanged
  nameWithType: Control.ForeColorChanged
  fullName: System.Windows.Forms.Control.ForeColorChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우는 <xref:System.Windows.Forms.Control.ForeColor*>속성 값이 변경.</xref:System.Windows.Forms.Control.ForeColor*>"
  remarks: "이 이벤트는 <xref:System.Windows.Forms.Control.ForeColor%2A>속성이 상호 작용을 통해 또는 프로그래밍 방식으로 수정으로 변경 합니다.</xref:System.Windows.Forms.Control.ForeColor%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.  \n  \n [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_43_1.vb)]\n [!code-cs[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/csharp/e-system.windows.forms.c_43_1.cs)]\n [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/cpp/e-system.windows.forms.c_43_1.cpp)]"
  syntax:
    content: public event EventHandler ForeColorChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.FromChildHandle(System.IntPtr)
  id: FromChildHandle(System.IntPtr)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: FromChildHandle(IntPtr)
  nameWithType: Control.FromChildHandle(IntPtr)
  fullName: System.Windows.Forms.Control.FromChildHandle(IntPtr)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 핸들을 포함 하는 컨트롤을 검색 합니다."
  remarks: "이 메서드는 컨트롤과 연결 된 하는 핸들을 찾을 때까지 창 핸들 부모 체인을 검색 합니다. 이 메서드는 보다 안정적는 <xref:System.Windows.Forms.Control.FromHandle%2A>메서드를 여러 개 핸들을 소유 하는 컨트롤을 반환할 수 있으므로.</xref:System.Windows.Forms.Control.FromHandle%2A>"
  syntax:
    content: public static System.Windows.Forms.Control FromChildHandle (IntPtr handle);
    parameters:
    - id: handle
      type: System.IntPtr
      description: "창 핸들 (<xref uid=&quot;langword_csharp_HWND&quot; name=&quot;HWND&quot; href=&quot;&quot;></xref>)을 찾으려고 합니다."
    return:
      type: System.Windows.Forms.Control
      description: "<xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 지정 된 핸들과 연결 된 컨트롤을 나타내는; 반환 된 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 지정 된 핸들이 있는 컨트롤이 발견 되는 경우."
  overload: System.Windows.Forms.Control.FromChildHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.FromHandle(System.IntPtr)
  id: FromHandle(System.IntPtr)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: FromHandle(IntPtr)
  nameWithType: Control.FromHandle(IntPtr)
  fullName: System.Windows.Forms.Control.FromHandle(IntPtr)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "현재 지정 된 핸들과 연결 된 컨트롤을 반환 합니다."
  remarks: "사용 된 <xref:System.Windows.Forms.Control.FromChildHandle%2A>메서드 둘 이상의 핸들을 소유 하는 컨트롤을 반환 해야 하는 경우.</xref:System.Windows.Forms.Control.FromChildHandle%2A>"
  syntax:
    content: public static System.Windows.Forms.Control FromHandle (IntPtr handle);
    parameters:
    - id: handle
      type: System.IntPtr
      description: "창 핸들 (<xref uid=&quot;langword_csharp_HWND&quot; name=&quot;HWND&quot; href=&quot;&quot;></xref>)을 찾으려고 합니다."
    return:
      type: System.Windows.Forms.Control
      description: "A <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 지정 된 핸들과 연결 된 컨트롤을 나타내는; 반환 된 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 지정 된 핸들이 있는 컨트롤이 발견 되는 경우."
  overload: System.Windows.Forms.Control.FromHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)
  id: GetAccessibilityObjectById(System.Int32)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: GetAccessibilityObjectById(Int32)
  nameWithType: Control.GetAccessibilityObjectById(Int32)
  fullName: System.Windows.Forms.Control.GetAccessibilityObjectById(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정 된 검색 <xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref>합니다."
  syntax:
    content: protected virtual System.Windows.Forms.AccessibleObject GetAccessibilityObjectById (int objectId);
    parameters:
    - id: objectId
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Int32&quot; name=&quot;Int32&quot; href=&quot;&quot;> </xref> 식별 하는 <xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref> 를 검색 합니다."
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "지정 된 <xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.GetAccessibilityObjectById*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.GetAutoSizeMode
  id: GetAutoSizeMode
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: GetAutoSizeMode()
  nameWithType: Control.GetAutoSizeMode()
  fullName: System.Windows.Forms.Control.GetAutoSizeMode()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "어떻게 컨트롤이 동작 하는 시기를 나타내는 값을 검색 해당 <xref:System.Windows.Forms.Control.AutoSize*>속성을 사용할 수 있습니다.</xref:System.Windows.Forms.Control.AutoSize*>"
  syntax:
    content: protected System.Windows.Forms.AutoSizeMode GetAutoSizeMode ();
    parameters: []
    return:
      type: System.Windows.Forms.AutoSizeMode
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.AutoSizeMode&quot;> </xref> 값입니다."
  overload: System.Windows.Forms.Control.GetAutoSizeMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)
  id: GetChildAtPoint(System.Drawing.Point)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: GetChildAtPoint(Point)
  nameWithType: Control.GetChildAtPoint(Point)
  fullName: System.Windows.Forms.Control.GetChildAtPoint(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 좌표에 있는 자식 컨트롤을 검색 합니다."
  remarks: "자식 컨트롤이 지정된 된 지점에, GetChildAtPoint 메서드 반환 `null`합니다."
  syntax:
    content: public System.Windows.Forms.Control GetChildAtPoint (System.Drawing.Point pt);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> 컨트롤에 대 한 보려는 좌표가 들어 있는입니다. 좌표는 컨트롤 클라이언트 영역의 왼쪽 위 모퉁이 기준으로 표시 됩니다."
    return:
      type: System.Windows.Forms.Control
      description: "A <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 지정된 된 지점에 있는 컨트롤을 나타내는입니다."
  overload: System.Windows.Forms.Control.GetChildAtPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)
  id: GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: GetChildAtPoint(Point,GetChildAtPointSkip)
  nameWithType: Control.GetChildAtPoint(Point,GetChildAtPointSkip)
  fullName: System.Windows.Forms.Control.GetChildAtPoint(Point,GetChildAtPointSkip)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "특정 형식의 자식 컨트롤을 무시할지 여부 지정된 된 좌표에 있는 자식 컨트롤을 검색 합니다."
  syntax:
    content: public System.Windows.Forms.Control GetChildAtPoint (System.Drawing.Point pt, System.Windows.Forms.GetChildAtPointSkip skipValue);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> 컨트롤에 대 한 보려는 좌표가 들어 있는입니다. 좌표는 컨트롤 클라이언트 영역의 왼쪽 위 모퉁이 기준으로 표시 됩니다."
    - id: skipValue
      type: System.Windows.Forms.GetChildAtPointSkip
      description: "값 중 하나 <xref href=&quot;System.Windows.Forms.GetChildAtPointSkip&quot;> </xref>, 특정 형식의 자식 컨트롤을 무시할지 여부를 결정 합니다."
    return:
      type: System.Windows.Forms.Control
      description: "자식 <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 지정된 된 좌표에 있습니다."
  overload: System.Windows.Forms.Control.GetChildAtPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.GetContainerControl
  id: GetContainerControl
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: GetContainerControl()
  nameWithType: Control.GetContainerControl()
  fullName: System.Windows.Forms.Control.GetContainerControl()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "다음 반환 <xref href=&quot;System.Windows.Forms.ContainerControl&quot;> </xref> 컨트롤의 부모 컨트롤 체인까지 합니다."
  syntax:
    content: public System.Windows.Forms.IContainerControl GetContainerControl ();
    parameters: []
    return:
      type: System.Windows.Forms.IContainerControl
      description: "<xref href=&quot;System.Windows.Forms.IContainerControl&quot;> </xref>의 부모를 나타내는 <xref href=&quot;System.Windows.Forms.Control&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.GetContainerControl*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)
  id: GetNextControl(System.Windows.Forms.Control,System.Boolean)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: GetNextControl(Control,Boolean)
  nameWithType: Control.GetNextControl(Control,Boolean)
  fullName: System.Windows.Forms.Control.GetNextControl(Control,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "자식 컨트롤의 탭 순서에서 앞으로 또는 뒤로 다음 컨트롤을 검색 합니다."
  remarks: "GetNextControl 메서드 탭 순서에 따라 달라 집니다. 사용 하 여 중첩 된 컨트롤을 포함 하는 양식의 모든 컨트롤을 반복 하는 <xref:System.Windows.Forms.Control.Controls%2A>속성.</xref:System.Windows.Forms.Control.Controls%2A> 가져오거나 설정할 컨테이너 컨트롤의 활성 컨트롤을 사용 하 여는 <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A>속성.</xref:System.Windows.Forms.ContainerControl.ActiveControl%2A>"
  syntax:
    content: public System.Windows.Forms.Control GetNextControl (System.Windows.Forms.Control ctl, bool forward);
    parameters:
    - id: ctl
      type: System.Windows.Forms.Control
      description: "<xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 를 사용 하 여 검색을 시작 합니다."
    - id: forward
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>탭 순서에서 앞으로 검색 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 뒤로 검색 합니다."
    return:
      type: System.Windows.Forms.Control
      description: "다음 <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 탭 순서에서입니다."
  overload: System.Windows.Forms.Control.GetNextControl*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)
  id: GetPreferredSize(System.Drawing.Size)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: GetPreferredSize(Size)
  nameWithType: Control.GetPreferredSize(Size)
  fullName: System.Windows.Forms.Control.GetPreferredSize(Size)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤이 들어갈 수 있는 사각형 영역의 크기를 검색 합니다."
  remarks: "컨트롤에 의해 GetPreferredSize의 동작은 다릅니다. <xref:System.Windows.Forms.Control.LayoutEngine%2A>컨트롤에 반환 되는 크기를 할당할 수 수 있습니다.</xref:System.Windows.Forms.Control.LayoutEngine%2A> 에 표시 된 제약 조건 보다 큰 크기를 반환할 수 있습니다는 `proposedSize` 매개 변수를 있지만 `proposedSize` 감소 하는 제약 조건으로 감소 해야 합니다. 예를 들어 `GetPreferredSize(new Size(100, 0))` 보다 넓은 되어서는 안 `GetPreferredSize(new Size(200, 0))`합니다. 예외는는 `proposedSize` 0 또는 `Size.Empty`, 제약 없이로 정의 됩니다."
  syntax:
    content: public virtual System.Drawing.Size GetPreferredSize (System.Drawing.Size proposedSize);
    parameters:
    - id: proposedSize
      type: System.Drawing.Size
      description: "컨트롤에 대 한 사용자 지정 크기 영역입니다."
    return:
      type: System.Drawing.Size
      description: "형식의 정렬 된 쌍 <xref href=&quot;System.Drawing.Size&quot;> </xref> 사각형의 높이 너비를 나타내는입니다."
  overload: System.Windows.Forms.Control.GetPreferredSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  id: GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  nameWithType: Control.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.Control.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 배율이 조정 되는 범위를 검색 합니다."
  remarks: "이 호출 하는 도우미 메서드입니다 <xref:System.Windows.Forms.Control.ScaleControl%2A>컨트롤의 배율이 조정 되는 범위를 검색할.</xref:System.Windows.Forms.Control.ScaleControl%2A> 다시 사용 하려면이 메서드를 재정의할 수 있습니다는 <xref:System.Windows.Forms.Control.ScaleControl%2A>범위를 직접 제공 해야 하지만 논리를 확장 합니다.</xref:System.Windows.Forms.Control.ScaleControl%2A> 계정에 사용 하는 크기 조정 된 범위를 반환 하는 기본 구현에서 `specified` 범위, 컨트롤이 최상위 수준 인지 여부는 고정 되어 너비 또는 자동 크기 조정 및 컨트롤에 있을 수 있는 장식을 합니다."
  syntax:
    content: protected virtual System.Drawing.Rectangle GetScaledBounds (System.Drawing.Rectangle bounds, System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: bounds
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 디스플레이 범위를 검색할 영역을 지정 하는 합니다."
    - id: factor
      type: System.Drawing.SizeF
      description: "높이 너비 컨트롤의 범위입니다."
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "값 중 하나 <xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;> </xref> 의 크기와 위치를 정의할 때 사용할 컨트롤의 범위를 지정 하는 합니다."
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 컨트롤의 배율이 조정 되는 범위를 나타내는입니다."
  overload: System.Windows.Forms.Control.GetScaledBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)
  id: GetStyle(System.Windows.Forms.ControlStyles)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: GetStyle(ControlStyles)
  nameWithType: Control.GetStyle(ControlStyles)
  fullName: System.Windows.Forms.Control.GetStyle(ControlStyles)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 대 한 지정 된 컨트롤 스타일 비트의 값을 검색합니다."
  remarks: "컨트롤 스타일 비트 플래그는 지원 되는 동작을 분류 하는 데 사용 됩니다. 컨트롤을 호출 하 여 스타일을 사용 하도록 설정할 수는 <xref:System.Windows.Forms.Control.SetStyle%2A>메서드와 적절 한 전달 <xref:System.Windows.Forms.ControlStyles>비트와 비트를 설정 하는 부울 값입니다.</xref:System.Windows.Forms.ControlStyles> </xref:System.Windows.Forms.Control.SetStyle%2A> 에 지정 된 할당 된 값을 결정 하려면 <xref:System.Windows.Forms.ControlStyles>비트 GetStyle 메서드를 사용 하 고 전달 된 <xref:System.Windows.Forms.ControlStyles>평가 하는 멤버.</xref:System.Windows.Forms.ControlStyles> </xref:System.Windows.Forms.ControlStyles>"
  example:
  - "The following code example returns the value of the double-buffering related style bits for a <xref:System.Windows.Forms.Form>. This example returns `true` only if all the style bits are set to `true`.  \n  \n [!code-cpp[Windows.Forms.ControlMembers6#4](~/add/codesnippet/cpp/m-system.windows.forms.c_115_1.cpp)]\n [!code-cs[Windows.Forms.ControlMembers6#4](~/add/codesnippet/csharp/m-system.windows.forms.c_115_1.cs)]\n [!code-vb[Windows.Forms.ControlMembers6#4](~/add/codesnippet/visualbasic/m-system.windows.forms.c_115_1.vb)]"
  syntax:
    content: protected bool GetStyle (System.Windows.Forms.ControlStyles flag);
    parameters:
    - id: flag
      type: System.Windows.Forms.ControlStyles
      description: "<xref href=&quot;System.Windows.Forms.ControlStyles&quot;> </xref> 비트에서 값을 반환 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정 된 컨트롤 스타일 비트가 설정 되 면 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.GetStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.GetTopLevel
  id: GetTopLevel
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: GetTopLevel()
  nameWithType: Control.GetTopLevel()
  fullName: System.Windows.Forms.Control.GetTopLevel()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤이 최상위 컨트롤 인지를 결정 합니다."
  syntax:
    content: protected bool GetTopLevel ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 최상위 컨트롤이 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.GetTopLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.GiveFeedback
  id: GiveFeedback
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: GiveFeedback
  nameWithType: Control.GiveFeedback
  fullName: System.Windows.Forms.Control.GiveFeedback
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "끌기 작업 중에 발생 합니다."
  remarks: "GiveFeedback 이벤트는 끌어서 놓기 작업이 시작 될 때 발생 합니다. GiveFeedback 이벤트와 끌기 이벤트의 소스는 끌어서 놓기 작업 중 사용자의 시각적 피드백을 제공 하기 위해 마우스 포인터의 모양의 수정할 수 있습니다.       다음에서는 끌어서 놓기 작업이 발생 시기와 방법을 설명 합니다.       <xref:System.Windows.Forms.Control.DoDragDrop%2A>메서드는 현재 커서 위치에서 컨트롤을 확인 합니다.</xref:System.Windows.Forms.Control.DoDragDrop%2A> 그런 다음 컨트롤은 유효한 놓기 대상 인지 확인 합니다.       컨트롤이 유효한 놓기 대상일 경우 GiveFeedback 이벤트는 지정 된 끌어서 놓기 효과 함께 발생 합니다. 끌어서 놓기 작업의 목록에 대 한 참조는 <xref:System.Windows.Forms.DragDropEffects>열거형.</xref:System.Windows.Forms.DragDropEffects>       마우스 커서 위치, 키보드 상태 및 마우스 단추 상태의 변경 내용은 추적 합니다.      -사용자가 창의 외부로 이동 하는 경우는 <xref:System.Windows.Forms.Control.DragLeave>이벤트가 발생 합니다.</xref:System.Windows.Forms.Control.DragLeave>      -마우스를 다른 컨트롤로 가져가면 하는 경우는 <xref:System.Windows.Forms.Control.DragEnter>제어 하는 발생에 대 한.</xref:System.Windows.Forms.Control.DragEnter>      -마우스가 이동 하지만 동일한 컨트롤 내에서 경우는 <xref:System.Windows.Forms.Control.DragOver>이벤트가 발생 합니다.</xref:System.Windows.Forms.Control.DragOver>       상태가 키보드 또는 마우스 단추에서 변경 될 경우는 <xref:System.Windows.Forms.Control.QueryContinueDrag>발생 하 고 데이터를 끌기를 계속할지 여부를 결정 하는 이벤트 또는 <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>이벤트의 <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</xref:System.Windows.Forms.QueryContinueDragEventArgs> 속성</xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> 의 값을 기준으로 작업을 취소 하려면</xref:System.Windows.Forms.Control.QueryContinueDrag>      -If 값 <xref:System.Windows.Forms.DragAction>은 `Continue`, <xref:System.Windows.Forms.Control.DragOver>작업을 계속 하려면 이벤트가 발생 하 고 적절 한 시각적 피드백이 설정 될 수 있도록 새로운 효과 함께 GiveFeedback 이벤트가 발생 합니다.</xref:System.Windows.Forms.Control.DragOver> </xref:System.Windows.Forms.DragAction> 유효한 끌어서 놓기 작업 결과의 목록에 대 한 참조는 <xref:System.Windows.Forms.DragDropEffects>열거형.</xref:System.Windows.Forms.DragDropEffects>          > [!NOTE] >는 <xref:System.Windows.Forms.Control.DragOver>GiveFeedback 이벤트는 쌍을 이루고 있어서 마우스가 놓기 대상을 통과할 때 사용자가 제공 대 한 최신 피드백이 게 마우스 위치에 및.</xref:System.Windows.Forms.Control.DragOver>      -If 값 <xref:System.Windows.Forms.DragAction>은 `Drop`, 놓기 효과 값이 원본에 반환, 소스 응용 프로그램이 소스 데이터에 대해 적절 한 작업을 수행할 수 있도록 예를 들어 데이터를 잘라냅니다 해당 작업이 이동 이면.</xref:System.Windows.Forms.DragAction>      -If 값 <xref:System.Windows.Forms.DragAction>은 `Cancel`, <xref:System.Windows.Forms.Control.DragLeave>이벤트가 발생 합니다.</xref:System.Windows.Forms.Control.DragLeave> </xref:System.Windows.Forms.DragAction>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \n  \n The example also demonstrates using custom cursors for the drag-and-drop operation. The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the GiveFeedback event handler.  \n  \n The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox`where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>. Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.  \n  \n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.  \n  \n This code excerpt demonstrates using the GiveFeedback event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \n  \n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/add/codesnippet/cpp/e-system.windows.forms.c_55_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/add/codesnippet/visualbasic/e-system.windows.forms.c_55_1.vb)]\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#3](~/add/codesnippet/csharp/e-system.windows.forms.c_55_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback;
    return:
      type: System.Windows.Forms.GiveFeedbackEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.GotFocus
  id: GotFocus
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: GotFocus
  nameWithType: Control.GotFocus
  fullName: System.Windows.Forms.Control.GotFocus
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤이 포커스를 받을 때 발생 합니다."
  remarks: "When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  GotFocus  \n  \n3.  <xref:System.Windows.Forms.Control.Leave>  \n  \n4.  <xref:System.Windows.Forms.Control.Validating>  \n  \n5.  <xref:System.Windows.Forms.Control.Validated>  \n  \n6.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  GotFocus  \n  \n3.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n4.  <xref:System.Windows.Forms.Control.Leave>  \n  \n5.  <xref:System.Windows.Forms.Control.Validating>  \n  \n6.  <xref:System.Windows.Forms.Control.Validated>  \n  \n If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.  \n  \n **Note** The GotFocus and <xref:System.Windows.Forms.Control.LostFocus> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages. Typically, the GotFocus and <xref:System.Windows.Forms.Control.LostFocus> events are only used when updating <xref:System.Windows.Forms.UICues> or when writing custom controls. Instead the <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events should be used for all controls except the <xref:System.Windows.Forms.Form> class, which uses the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events. For more information about the GotFocus and <xref:System.Windows.Forms.Control.LostFocus> events, see the [WM_SETFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646283\\(v=vs.85\\).aspx)and[WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topics.  \n  \n> [!CAUTION]\n>  Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, GotFocus, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topic.  \n  \n For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the GotFocus event. This report helps you to learn when the event occurs and can assist you in debugging.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the GotFocus event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#47](~/add/codesnippet/csharp/e-system.windows.forms.c_49_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#47](~/add/codesnippet/visualbasic/e-system.windows.forms.c_49_1.vb)]"
  syntax:
    content: public event EventHandler GotFocus;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Handle
  id: Handle
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Handle
  nameWithType: Control.Handle
  fullName: System.Windows.Forms.Control.Handle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 바인딩되는 창 핸들을 가져옵니다."
  remarks: "속성의 값은 Windows `HWND`합니다. 핸들 아직 만들지 않은 경우이 속성을 참조 고쳐집니다 핸들을을 만들 수 있습니다."
  example:
  - "The following code example demonstrates using the <xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A?displayProperty=fullName> and the Handle property. To run the example paste the following code in a form. Add two buttons named `Button1` and `Button2` to the form and ensure all events are connected to their event handlers.  \n  \n [!code-vb[System.Windows.Forms.ControlPaint1#2](~/add/codesnippet/visualbasic/p-system.windows.forms.c_25_1.vb)]\n [!code-cpp[System.Windows.Forms.ControlPaint1#2](~/add/codesnippet/cpp/p-system.windows.forms.c_25_1.cpp)]\n [!code-cs[System.Windows.Forms.ControlPaint1#2](~/add/codesnippet/csharp/p-system.windows.forms.c_25_1.cs)]"
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "<xref:System.IntPtr>창 핸들을 포함 하는 (<xref uid=&quot;langword_csharp_HWND&quot; name=&quot;HWND&quot; href=&quot;&quot;></xref>) 컨트롤의.</xref:System.IntPtr>"
  overload: System.Windows.Forms.Control.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.HandleCreated
  id: HandleCreated
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: HandleCreated
  nameWithType: Control.HandleCreated
  fullName: System.Windows.Forms.Control.HandleCreated
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 대 한 핸들을 만들 때 발생 합니다."
  remarks: "핸들이 생성 됩니다는 <xref:System.Windows.Forms.Control>처음으로 표시 됩니다.</xref:System.Windows.Forms.Control> 예를 들어 경우는 <xref:System.Windows.Forms.Control>만들어집니다가 <xref:System.Windows.Forms.Control.Visible%2A>로 설정 `false`, HandleCreated 이벤트 될 때까지 발생 하지 것입니다 <xref:System.Windows.Forms.Control.Visible%2A>로 설정 된 `true`.</xref:System.Windows.Forms.Control.Visible%2A> </xref:System.Windows.Forms.Control.Visible%2A> </xref:System.Windows.Forms.Control>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조[이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the HandleCreated event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button>or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the HandleCreated event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#37](~/add/codesnippet/csharp/e-system.windows.forms.c_70_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#37](~/add/codesnippet/visualbasic/e-system.windows.forms.c_70_1.vb)]"
  syntax:
    content: public event EventHandler HandleCreated;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.HandleDestroyed
  id: HandleDestroyed
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: HandleDestroyed
  nameWithType: Control.HandleDestroyed
  fullName: System.Windows.Forms.Control.HandleDestroyed
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 핸들이 소멸 될 때 발생 합니다."
  remarks: "HandleDestroyed 이벤트를 사용 하는 동안 컨트롤은 여전히 유효한 Windows 컨트롤 및 <xref:System.Windows.Forms.Control.Handle%2A>호출 하 여 다시 만들 수는 <xref:System.Windows.Forms.Control.RecreateHandle%2A>메서드.</xref:System.Windows.Forms.Control.RecreateHandle%2A> </xref:System.Windows.Forms.Control.Handle%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the HandleDestroyed event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the HandleDestroyed event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#38](~/add/codesnippet/csharp/e-system.windows.forms.c_52_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#38](~/add/codesnippet/visualbasic/e-system.windows.forms.c_52_1.vb)]"
  syntax:
    content: public event EventHandler HandleDestroyed;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.HasChildren
  id: HasChildren
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: HasChildren
  nameWithType: Control.HasChildren
  fullName: System.Windows.Forms.Control.HasChildren
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 하나 이상의 자식 컨트롤이 포함 되어 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "경우는 <xref:System.Windows.Forms.Control.Controls%2A>컬렉션에는 <xref:System.Windows.Forms.Layout.ArrangedElementCollection.Count%2A>속성은 반환 HasChildren&0; 보다 큰 `true`.</xref:System.Windows.Forms.Layout.ArrangedElementCollection.Count%2A> </xref:System.Windows.Forms.Control.Controls%2A> 만들기 표시 하지 않는다 HasChildren 속성에 액세스 한 <xref:System.Windows.Forms.Control.ControlCollection>컨트롤에 자식이 없는 경우이 속성을 참조 하므로 수 성능 이점을 제공 컨트롤의 트리를 탐색 하는 경우.</xref:System.Windows.Forms.Control.ControlCollection>"
  example:
  - "The following code example sets the <xref:System.Windows.Forms.Control.BackColor%2A> and <xref:System.Windows.Forms.Control.ForeColor%2A> of the controls to the default system colors. The code recursively calls itself if the control has any child controls. This code example requires that you have a <xref:System.Windows.Forms.Form> with at least one child control; however, a child container control, like a <xref:System.Windows.Forms.Panel> or <xref:System.Windows.Forms.GroupBox>, with its own child control(s) would better demonstrate the recursion.  \n  \n [!code-cs[Windows.Forms.Control Properties#1](~/add/codesnippet/csharp/p-system.windows.forms.c_113_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties#1](~/add/codesnippet/cpp/p-system.windows.forms.c_113_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_113_1.vb)]"
  syntax:
    content: public bool HasChildren { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤 하나 이상의 자식 컨트롤을 포함 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.HasChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Height
  id: Height
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Height
  nameWithType: Control.Height
  fullName: System.Windows.Forms.Control.Height
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 높이 가져오거나 설정 합니다."
  remarks: "높이를 변경 하 고 <xref:System.Windows.Forms.Control.Top%2A>속성 값은 <xref:System.Windows.Forms.Control.Bottom%2A>변경 하려면 컨트롤의 속성 값.</xref:System.Windows.Forms.Control.Bottom%2A> </xref:System.Windows.Forms.Control.Top%2A>      > [!NOTE] > 파생된 컨트롤에 대 한 최소 높이 <xref:System.Windows.Forms.Splitter>1 픽셀로.</xref:System.Windows.Forms.Splitter> 에 대 한 기본 높이 <xref:System.Windows.Forms.Splitter>컨트롤은 세 가지 픽셀.</xref:System.Windows.Forms.Splitter> 설정의 높이 <xref:System.Windows.Forms.Splitter>기본 높이에 속성 값으로 재설정 됩니다 하나 보다 작은 값으로 제어 합니다.</xref:System.Windows.Forms.Splitter>"
  example:
  - "The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties. This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.  \n  \n [!code-cs[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/csharp/p-system.windows.forms.c_95_1.cs)]\n [!code-cpp[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/cpp/p-system.windows.forms.c_95_1.cpp)]\n [!code-vb[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_95_1.vb)]"
  syntax:
    content: public int Height { get; set; }
    return:
      type: System.Int32
      description: "픽셀 단위로 컨트롤의 높이입니다."
  overload: System.Windows.Forms.Control.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.HelpRequested
  id: HelpRequested
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: HelpRequested
  nameWithType: Control.HelpRequested
  fullName: System.Windows.Forms.Control.HelpRequested
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "사용자 컨트롤에 대 한 도움말을 요청 하면 발생 합니다."
  remarks: "일반적으로 이벤트는 사용자가 F1 키를 누르거나 관련된 상황에 맞는 도움말 단추를 누를 HelpRequested는 클릭 합니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates handling the HelpRequested event to display custom Help content on a form containing four address fields. The HelpRequested event is raised either by pressing the F1 key with the focus in an address field, or by the using the context-sensitive Help button and clicking the Help cursor on an address field. The <xref:System.Windows.Forms.HelpEventArgs.Handled%2A> property is set to true to indicate that the `HelpRequested` event is handled. The example also demonstrates storing the Help text in the <xref:System.Windows.Forms.Control.Tag%2A?displayProperty=fullName> property.  \n  \n [!code-cpp[System.Windows.Forms.HelpEventHandler#1](~/add/codesnippet/cpp/e-system.windows.forms.c_45_1.cpp)]\n [!code-vb[System.Windows.Forms.HelpEventHandler#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_45_1.vb)]\n [!code-cs[System.Windows.Forms.HelpEventHandler#1](~/add/codesnippet/csharp/e-system.windows.forms.c_45_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.HelpEventHandler HelpRequested;
    return:
      type: System.Windows.Forms.HelpEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Hide
  id: Hide
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Hide()
  nameWithType: Control.Hide()
  fullName: System.Windows.Forms.Control.Hide()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "사용자에 게 서 컨트롤을 숨깁니다."
  remarks: "컨트롤을 숨기는 것이 설정에 해당 하는 <xref:System.Windows.Forms.Control.Visible%2A>속성을 `false`.</xref:System.Windows.Forms.Control.Visible%2A> 숨기기 메서드를 호출한 후의 <xref:System.Windows.Forms.Control.Visible%2A>속성의 값을 반환 `false` 될 때까지 <xref:System.Windows.Forms.Control.Show%2A>메서드를 호출 합니다.</xref:System.Windows.Forms.Control.Show%2A> </xref:System.Windows.Forms.Control.Visible%2A>"
  example:
  - "The following code example hides a button if the CTRL key is pressed when the button is clicked. This example requires that you have a <xref:System.Windows.Forms.Button> named `button1` on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cs[Windows.Forms.Control Members4#2](~/add/codesnippet/csharp/m-system.windows.forms.c_42_1.cs)]\n [!code-vb[Windows.Forms.Control Members4#2](~/add/codesnippet/visualbasic/m-system.windows.forms.c_42_1.vb)]\n [!code-cpp[Windows.Forms.Control Members4#2](~/add/codesnippet/cpp/m-system.windows.forms.c_42_1.cpp)]"
  syntax:
    content: public void Hide ();
    parameters: []
  overload: System.Windows.Forms.Control.Hide*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ImeMode
  id: ImeMode
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ImeMode
  nameWithType: Control.ImeMode
  fullName: System.Windows.Forms.Control.ImeMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 Ime (입력기) 모드를 가져오거나 설정 합니다."
  remarks: "IME는 표준 키보드를 사용 하 여 복잡 한 한글 문자나 기호를 입력할 수 있게 하는 프로그램입니다. ImeMode 속성은 대개로 설정 <xref:System.Windows.Forms.ImeMode?displayProperty=fullName>에 대 한는 <xref:System.Windows.Forms.TextBox>컨트롤입니다. 숫자 값만을 입력 합니다.</xref:System.Windows.Forms.TextBox> </xref:System.Windows.Forms.ImeMode?displayProperty=fullName> ImeMode 속성 값이를 <xref:System.Windows.Forms.ImeMode?displayProperty=fullName> <xref:System.Windows.Forms.Form>클래스</xref:System.Windows.Forms.Form> 에 대 한</xref:System.Windows.Forms.ImeMode?displayProperty=fullName> 설정       Input Method Editor 지원 직접적 또는에서 직접 입력을 허용 하지 않는 대부분의 클래스와 <xref:System.Windows.Forms.ImeMode>사이로</xref:System.Windows.Forms.ImeMode> 이 속성의 값을 설정 합니다.      > [!IMPORTANT] > <xref:System.Windows.Forms.ImeMode?displayProperty=fullName>.</xref:System.Windows.Forms.ImeMode?displayProperty=fullName> 프로그래밍 방식으로 설정 하지 않은 경우 사용자는 ImeMode를 대화형으로 변경할 수 이 경우 사용자 입력기를 사용할 수 없습니다.   >> ImeMode 속성은 전역 입력된 모드 적용 될 때 Windows 8에서 무시 됩니다. 자세한 내용은 참조 하십시오.[스위치 텍스트 입력에서에서 변경 Per-thread 사용자 단위로](http://go.microsoft.com/fwlink/?LinkID=256509)합니다."
  syntax:
    content: public System.Windows.Forms.ImeMode ImeMode { get; set; }
    return:
      type: System.Windows.Forms.ImeMode
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.ImeMode&quot;> </xref> 값입니다. 기본값은 <xref href=&quot;System.Windows.Forms.ImeMode&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.ImeMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "할당 된 값이 중 하나는 <xref href=&quot;System.Windows.Forms.ImeMode&quot;> </xref> 열거형 값입니다."
  platform:
  - net462
- uid: System.Windows.Forms.Control.ImeModeBase
  id: ImeModeBase
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ImeModeBase
  nameWithType: Control.ImeModeBase
  fullName: System.Windows.Forms.Control.ImeModeBase
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 IME 모드를 가져오거나 설정 합니다."
  syntax:
    content: protected virtual System.Windows.Forms.ImeMode ImeModeBase { get; set; }
    return:
      type: System.Windows.Forms.ImeMode
      description: "컨트롤의 IME 모드입니다."
  overload: System.Windows.Forms.Control.ImeModeBase*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ImeModeChanged
  id: ImeModeChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ImeModeChanged
  nameWithType: Control.ImeModeChanged
  fullName: System.Windows.Forms.Control.ImeModeChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우는 <xref:System.Windows.Forms.Control.ImeMode*>속성이 변경 되었습니다.</xref:System.Windows.Forms.Control.ImeMode*>"
  remarks: "이 이벤트는 <xref:System.Windows.Forms.Control.ImeMode%2A>속성이 상호 작용을 통해 또는 프로그래밍 방식으로 수정으로 변경 합니다.</xref:System.Windows.Forms.Control.ImeMode%2A>       입력기를 지원 하지 않는 컨트롤이이 이벤트를 발생 하지 않습니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.  \n  \n [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_3_1.vb)]\n [!code-cs[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/csharp/e-system.windows.forms.c_3_1.cs)]\n [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/cpp/e-system.windows.forms.c_3_1.cpp)]"
  syntax:
    content: public event EventHandler ImeModeChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.InitLayout
  id: InitLayout
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: InitLayout()
  nameWithType: Control.InitLayout()
  fullName: System.Windows.Forms.Control.InitLayout()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤을 다른 컨테이너에 추가한 후 호출 됩니다."
  remarks: "InitLayout 메서드는 컨테이너에 컨트롤을 추가한 직후 호출 됩니다. InitLayout 메서드는 해당 컨테이너에 따라 레이아웃 상태로 초기화 하는 컨트롤을 활성화 합니다. 예를 들어, 고정 및 도킹 컨트롤 InitLayout 메서드에 일반적으로 함께 적용 됩니다."
  syntax:
    content: protected virtual void InitLayout ();
    parameters: []
  overload: System.Windows.Forms.Control.InitLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Invalidate
  id: Invalidate
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Invalidate()
  nameWithType: Control.Invalidate()
  fullName: System.Windows.Forms.Control.Invalidate()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 전체 화면을 무효화 하 여 컨트롤을 다시 그려야 합니다."
  remarks: "호출 된 <xref:System.Windows.Forms.Control.Invalidate%2A>메서드 동기식 강제로 적용 하지 않습니다; 동기식을 강제로 표시 하려면 함수를 호출할는 <xref:System.Windows.Forms.Control.Update%2A>메서드를 호출한 후의 <xref:System.Windows.Forms.Control.Invalidate%2A>메서드.</xref:System.Windows.Forms.Control.Invalidate%2A> </xref:System.Windows.Forms.Control.Update%2A> </xref:System.Windows.Forms.Control.Invalidate%2A> 이 메서드는 매개 변수 없이, 전체 클라이언트 영역 업데이트 영역에 추가 됩니다."
  example:
  - "The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped. The <xref:System.Windows.Forms.Control.OnPaint%2A> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting. The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback. The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data. Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=fullName> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=fullName> values are screen coordinates, the example uses the <xref:System.Windows.Forms.Control.PointToClient%2A> method to convert them to client coordinates.  \n  \n [!code-cs[Windows.Forms.Control.DragOperations#1](~/add/codesnippet/csharp/m-system.windows.forms.c_72_1.cs)]\n [!code-cpp[Windows.Forms.Control.DragOperations#1](~/add/codesnippet/cpp/m-system.windows.forms.c_72_1.cpp)]\n [!code-vb[Windows.Forms.Control.DragOperations#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_72_1.vb)]"
  syntax:
    content: public void Invalidate ();
    parameters: []
  overload: System.Windows.Forms.Control.Invalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Invalidate(System.Boolean)
  id: Invalidate(System.Boolean)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Invalidate(Boolean)
  nameWithType: Control.Invalidate(Boolean)
  fullName: System.Windows.Forms.Control.Invalidate(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 특정 영역을 무효화 하 고 그리기 메시지를 컨트롤에 보내도록 합니다. 컨트롤에 할당 된 자식 컨트롤을 무효화 합니다."
  remarks: "호출 된 <xref:System.Windows.Forms.Control.Invalidate%2A>메서드 동기식 강제로 적용 하지 않습니다; 동기식을 강제로 표시 하려면 함수를 호출할는 <xref:System.Windows.Forms.Control.Update%2A>메서드를 호출한 후의 <xref:System.Windows.Forms.Control.Invalidate%2A>메서드.</xref:System.Windows.Forms.Control.Invalidate%2A> </xref:System.Windows.Forms.Control.Update%2A> </xref:System.Windows.Forms.Control.Invalidate%2A> 이 메서드는 매개 변수 없이, 전체 클라이언트 영역 업데이트 영역에 추가 됩니다."
  syntax:
    content: public void Invalidate (bool invalidateChildren);
    parameters:
    - id: invalidateChildren
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤의 자식 컨트롤을 무효화 하 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.Invalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)
  id: Invalidate(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Invalidate(Rectangle)
  nameWithType: Control.Invalidate(Rectangle)
  fullName: System.Windows.Forms.Control.Invalidate(Rectangle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "(이 영역을 다음 그리기 작업에서 다시 그릴 컨트롤의 업데이트 영역에 추가) 컨트롤의 지정된 된 영역을 무효화 하 고 그리기 메시지를 컨트롤에 보내도록 합니다."
  remarks: "호출 된 <xref:System.Windows.Forms.Control.Invalidate%2A>메서드 동기식 강제로 적용 하지 않습니다; 동기식을 강제로 표시 하려면 함수를 호출할는 <xref:System.Windows.Forms.Control.Update%2A>메서드를 호출한 후의 <xref:System.Windows.Forms.Control.Invalidate%2A>메서드.</xref:System.Windows.Forms.Control.Invalidate%2A> </xref:System.Windows.Forms.Control.Update%2A> </xref:System.Windows.Forms.Control.Invalidate%2A> 이 메서드는 매개 변수 없이, 전체 클라이언트 영역 업데이트 영역에 추가 됩니다."
  syntax:
    content: public void Invalidate (System.Drawing.Rectangle rc);
    parameters:
    - id: rc
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 무효화할 영역을 나타내는입니다."
  overload: System.Windows.Forms.Control.Invalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Region)
  id: Invalidate(System.Drawing.Region)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Invalidate(Region)
  nameWithType: Control.Invalidate(Region)
  fullName: System.Windows.Forms.Control.Invalidate(Region)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "(이 영역을 다음 그리기 작업에서 다시 그릴 컨트롤의 업데이트 영역에 추가) 컨트롤의 지정된 된 영역을 무효화 하 고 그리기 메시지를 컨트롤에 보내도록 합니다."
  remarks: "Invalidate 메서드를 호출 해도 동기 페인트; 동기식을 강제로 표시 하려면 호출는 <xref:System.Windows.Forms.Control.Update%2A>Invalidate 메서드를 호출한 후 메서드.</xref:System.Windows.Forms.Control.Update%2A> 이 메서드는 매개 변수 없이, 전체 클라이언트 영역 업데이트 영역에 추가 됩니다."
  syntax:
    content: public void Invalidate (System.Drawing.Region region);
    parameters:
    - id: region
      type: System.Drawing.Region
      description: "<xref href=&quot;System.Drawing.Region&quot;> </xref> 을 무효화 하 합니다."
  overload: System.Windows.Forms.Control.Invalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)
  id: Invalidate(System.Drawing.Rectangle,System.Boolean)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Invalidate(Rectangle,Boolean)
  nameWithType: Control.Invalidate(Rectangle,Boolean)
  fullName: System.Windows.Forms.Control.Invalidate(Rectangle,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "(이 영역을 다음 그리기 작업에서 다시 그릴 컨트롤의 업데이트 영역에 추가) 컨트롤의 지정된 된 영역을 무효화 하 고 그리기 메시지를 컨트롤에 보내도록 합니다. 컨트롤에 할당 된 자식 컨트롤을 무효화 합니다."
  remarks: "호출 된 <xref:System.Windows.Forms.Control.Invalidate%2A>메서드 동기식 강제로 적용 하지 않습니다; 동기식을 강제로 표시 하려면 함수를 호출할는 <xref:System.Windows.Forms.Control.Update%2A>메서드를 호출한 후의 <xref:System.Windows.Forms.Control.Invalidate%2A>메서드.</xref:System.Windows.Forms.Control.Invalidate%2A> </xref:System.Windows.Forms.Control.Update%2A> </xref:System.Windows.Forms.Control.Invalidate%2A> 이 메서드는 매개 변수 없이, 전체 클라이언트 영역 업데이트 영역에 추가 됩니다."
  syntax:
    content: public void Invalidate (System.Drawing.Rectangle rc, bool invalidateChildren);
    parameters:
    - id: rc
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 무효화할 영역을 나타내는입니다."
    - id: invalidateChildren
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤의 자식 컨트롤을 무효화 하 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.Invalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)
  id: Invalidate(System.Drawing.Region,System.Boolean)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Invalidate(Region,Boolean)
  nameWithType: Control.Invalidate(Region,Boolean)
  fullName: System.Windows.Forms.Control.Invalidate(Region,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "(이 영역을 다음 그리기 작업에서 다시 그릴 컨트롤의 업데이트 영역에 추가) 컨트롤의 지정된 된 영역을 무효화 하 고 그리기 메시지를 컨트롤에 보내도록 합니다. 컨트롤에 할당 된 자식 컨트롤을 무효화 합니다."
  remarks: "호출 된 <xref:System.Windows.Forms.Control.Invalidate%2A>메서드 동기식 강제로 적용 하지 않습니다; 동기식을 강제로 표시 하려면 함수를 호출할는 <xref:System.Windows.Forms.Control.Update%2A>메서드를 호출한 후의 <xref:System.Windows.Forms.Control.Invalidate%2A>메서드.</xref:System.Windows.Forms.Control.Invalidate%2A> </xref:System.Windows.Forms.Control.Update%2A> </xref:System.Windows.Forms.Control.Invalidate%2A> 이 메서드는 매개 변수 없이, 전체 클라이언트 영역 업데이트 영역에 추가 됩니다."
  syntax:
    content: public void Invalidate (System.Drawing.Region region, bool invalidateChildren);
    parameters:
    - id: region
      type: System.Drawing.Region
      description: "<xref href=&quot;System.Drawing.Region&quot;> </xref> 을 무효화 하 합니다."
    - id: invalidateChildren
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤의 자식 컨트롤을 무효화 하 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.Invalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Invalidated
  id: Invalidated
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Invalidated
  nameWithType: Control.Invalidated
  fullName: System.Windows.Forms.Control.Invalidated
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 다시 그려야 하는 경우 발생 합니다."
  remarks: "이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Invalidated event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the Invalidated event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#40](~/add/codesnippet/csharp/e-system.windows.forms.c_31_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#40](~/add/codesnippet/visualbasic/e-system.windows.forms.c_31_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.InvalidateEventHandler Invalidated;
    return:
      type: System.Windows.Forms.InvalidateEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Invoke(System.Delegate)
  id: Invoke(System.Delegate)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Invoke(Delegate)
  nameWithType: Control.Invoke(Delegate)
  fullName: System.Windows.Forms.Control.Invoke(Delegate)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 내부 창 핸들이 있는 스레드에서 지정된 된 대리자를 실행 합니다."
  remarks: "대리자는 C 또는 c + + 언어의 함수 포인터와 유사 합니다. 대리자는 대리자 개체를 내부 메서드에 대 한 참조를 캡슐화합니다. 대리자 개체 참조 된 메서드를 호출 하는 코드에 전달 될 수 하 고 컴파일 타임에는 메서드를 호출할 수 있습니다 알 수 없는 키를 누릅니다. C 또는 c + + 함수 포인터와는 달리 대리자는 개체 지향, 형식이 안전한 및 더 안전 합니다.       컨트롤이 나 현재 컨트롤의 내부 창 핸들이 아직 존재 하지 않는 경우 창 핸들이 있는 폼을 찾을 때까지 해당 컨트롤의 부모 체인을 하는 Invoke 메서드를 검색 합니다. 적절 한 핸들을 찾을 수 Invoke 메서드가 예외를 throw 합니다. 호출 하는 동안 발생 하는 예외를 다시 호출자에 게 전파 됩니다.      > [!NOTE] > 외에 <xref:System.Windows.Forms.Control.InvokeRequired%2A>속성에는 스레드로부터 안전 컨트롤에서 네 가지 메서드가 있습니다:를 호출할 <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, 및 <xref:System.Windows.Forms.Control.CreateGraphics%2A>컨트롤에 대 한 핸들 이미 만든 경우.</xref:System.Windows.Forms.Control.CreateGraphics%2A> </xref:System.Windows.Forms.Control.EndInvoke%2A> </xref:System.Windows.Forms.Control.BeginInvoke%2A> </xref:System.Windows.Forms.Control.InvokeRequired%2A> 호출 <xref:System.Windows.Forms.Control.CreateGraphics%2A>컨트롤의 핸들이 백그라운드 스레드에서 생성 되기 전에 잘못 된 크로스 스레드 호출 될 수 있습니다.</xref:System.Windows.Forms.Control.CreateGraphics%2A> 다른 모든 메서드 호출에 대 한 사용할지 invoke 메서드 중 하나를 컨트롤의 스레드에 대 한 호출을 마샬링하 합니다.       대리자 <xref:System.EventHandler>,이 경우 보낸 사람 매개 변수가이 컨트롤 되 고 이벤트 매개 변수는 포함 <xref:System.EventArgs.Empty?displayProperty=fullName>.</xref:System.EventArgs.Empty?displayProperty=fullName> </xref:System.EventHandler> 의 인스턴스 수 있습니다. 대리자의 인스턴스 수도 있습니다 <xref:System.Windows.Forms.MethodInvoker>, 또는 대리자는 void 매개 변수 목록입니다.</xref:System.Windows.Forms.MethodInvoker> 에 대 한 호출은 <xref:System.EventHandler>또는 <xref:System.Windows.Forms.MethodInvoker>대리자 보다 빨리 대리자의 다른 형식으로 호출 됩니다.</xref:System.Windows.Forms.MethodInvoker> </xref:System.EventHandler>      > [!NOTE] > 메시지를 처리 해야 하는 스레드가 더 이상 활성 상태가 예외가 throw 될 수 없습니다."
  example:
  - "The following code example shows controls that contain a delegate. The delegate encapsulates a method that adds items to the list box, and this method is executed on the thread that owns the underlying handle of the form. When the user clicks on the button, `Invoke` runs the delegate.  \n  \n [!code-cpp[Control_Invoke2#1](~/add/codesnippet/cpp/m-system.windows.forms.c_18_1.cpp)]\n [!code-cs[Control_Invoke2#1](~/add/codesnippet/csharp/m-system.windows.forms.c_18_1.cs)]\n [!code-vb[Control_Invoke2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_18_1.vb)]"
  syntax:
    content: public object Invoke (Delegate method);
    parameters:
    - id: method
      type: System.Delegate
      description: "컨트롤의 스레드 컨텍스트에서 호출 될 메서드를 포함 하는 대리자입니다."
    return:
      type: System.Object
      description: "호출 되는 대리자의 반환 값 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> , 대리자에 반환 값이 없는 경우."
  overload: System.Windows.Forms.Control.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])
  id: Invoke(System.Delegate,System.Object[])
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Invoke(Delegate,Object[])
  nameWithType: Control.Invoke(Delegate,Object[])
  fullName: System.Windows.Forms.Control.Invoke(Delegate,Object[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 내부 창 핸들이 인수 목록 사용 하는 스레드에서 지정된 된 대리자를 실행 합니다."
  remarks: "대리자는 C 또는 c + + 언어의 함수 포인터와 유사 합니다. 대리자는 대리자 개체를 내부 메서드에 대 한 참조를 캡슐화합니다. 대리자 개체 참조 된 메서드를 호출 하는 코드에 전달 될 수 하 고 컴파일 타임에는 메서드를 호출할 수 있습니다 알 수 없는 키를 누릅니다. C 또는 c + + 함수 포인터와는 달리 대리자는 개체 지향, 형식이 안전한 및 더 안전 합니다.       컨트롤의 핸들이 아직 존재 하지 않는 경우 창 핸들이 폼 또는 컨트롤을 찾을 때까지이 메서드는 컨트롤의 부모 체인을 검색 합니다. 적절 한 핸들을 찾을 수 있는 경우이 메서드는 예외가 throw 됩니다. 호출 하는 동안 발생 하는 예외를 다시 호출자에 게 전파 됩니다.      > [!NOTE] > 외에 <xref:System.Windows.Forms.Control.InvokeRequired%2A>속성에는 스레드로부터 안전 컨트롤에서 네 가지 메서드가 있습니다: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, 및 <xref:System.Windows.Forms.Control.CreateGraphics%2A>컨트롤에 대 한 핸들 이미 만든 경우.</xref:System.Windows.Forms.Control.CreateGraphics%2A> </xref:System.Windows.Forms.Control.EndInvoke%2A> </xref:System.Windows.Forms.Control.BeginInvoke%2A> </xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control.InvokeRequired%2A> 호출 <xref:System.Windows.Forms.Control.CreateGraphics%2A>컨트롤의 핸들이 백그라운드 스레드에서 생성 되기 전에 잘못 된 크로스 스레드 호출 될 수 있습니다.</xref:System.Windows.Forms.Control.CreateGraphics%2A> 다른 모든 메서드 호출에 대 한 사용할지 invoke 메서드 중 하나를 컨트롤의 스레드에 대 한 호출을 마샬링하 합니다.       대리자 <xref:System.EventHandler>,이 경우 보낸 사람 매개 변수가이 컨트롤 되 고 이벤트 매개 변수는 포함 <xref:System.EventArgs.Empty?displayProperty=fullName>.</xref:System.EventArgs.Empty?displayProperty=fullName> </xref:System.EventHandler> 의 인스턴스 수 있습니다. 대리자의 인스턴스 수도 있습니다 <xref:System.Windows.Forms.MethodInvoker>, 또는 대리자는 void 매개 변수 목록입니다.</xref:System.Windows.Forms.MethodInvoker> 에 대 한 호출은 <xref:System.EventHandler>또는 <xref:System.Windows.Forms.MethodInvoker>대리자 보다 빨리 대리자의 다른 형식으로 호출 됩니다.</xref:System.Windows.Forms.MethodInvoker> </xref:System.EventHandler>      > [!NOTE] > 메시지를 처리 해야 하는 스레드가 더 이상 활성 상태가 예외가 throw 될 수 없습니다."
  example:
  - "The following code example shows controls that contain a delegate. The delegate encapsulates a method that adds items to the list box, and this method is executed on the thread that owns the underlying handle of the form, using the specified arguments. When the user clicks on the button, `Invoke` runs the delegate.  \n  \n [!code-cs[Control_Invoke1#1](~/add/codesnippet/csharp/m-system.windows.forms.c_114_1.cs)]\n [!code-vb[Control_Invoke1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_114_1.vb)]\n [!code-cpp[Control_Invoke1#1](~/add/codesnippet/cpp/m-system.windows.forms.c_114_1.cpp)]"
  syntax:
    content: public object Invoke (Delegate method, object[] args);
    parameters:
    - id: method
      type: System.Delegate
      description: "수 및에 포함 된 형식과 동일한 매개 변수를 사용 하는 메서드에 대리자는 `args` 매개 변수입니다."
    - id: args
      type: System.Object[]
      description: "지정 된 메서드에 인수로 전달 하는 개체의 배열입니다. 이 매개 변수 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 메서드가 인수를 사용 합니다."
    return:
      type: System.Object
      description: "<xref:System.Object>호출 되는 대리자의 반환 값이 포함 된 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> , 대리자에 반환 값이 없는 경우.</xref:System.Object>"
  overload: System.Windows.Forms.Control.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)
  id: InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: InvokeGotFocus(Control,EventArgs)
  nameWithType: Control.InvokeGotFocus(Control,EventArgs)
  fullName: System.Windows.Forms.Control.InvokeGotFocus(Control,EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.GotFocus&quot;> </xref> 지정된 된 컨트롤에 대 한 이벤트입니다."
  syntax:
    content: protected void InvokeGotFocus (System.Windows.Forms.Control toInvoke, EventArgs e);
    parameters:
    - id: toInvoke
      type: System.Windows.Forms.Control
      description: "<xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 이벤트를 할당할 수 있습니다."
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.InvokeGotFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)
  id: InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: InvokeLostFocus(Control,EventArgs)
  nameWithType: Control.InvokeLostFocus(Control,EventArgs)
  fullName: System.Windows.Forms.Control.InvokeLostFocus(Control,EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.LostFocus&quot;> </xref> 지정된 된 컨트롤에 대 한 이벤트입니다."
  syntax:
    content: protected void InvokeLostFocus (System.Windows.Forms.Control toInvoke, EventArgs e);
    parameters:
    - id: toInvoke
      type: System.Windows.Forms.Control
      description: "<xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 이벤트를 할당할 수 있습니다."
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.InvokeLostFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)
  id: InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: InvokeOnClick(Control,EventArgs)
  nameWithType: Control.InvokeOnClick(Control,EventArgs)
  fullName: System.Windows.Forms.Control.InvokeOnClick(Control,EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.Click&quot;> </xref> 지정된 된 컨트롤에 대 한 이벤트입니다."
  syntax:
    content: protected void InvokeOnClick (System.Windows.Forms.Control toInvoke, EventArgs e);
    parameters:
    - id: toInvoke
      type: System.Windows.Forms.Control
      description: "<xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 할당 하는 <xref href=&quot;System.Windows.Forms.Control.Click&quot;> </xref> 이벤트를 합니다."
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.InvokeOnClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  id: InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: InvokePaint(Control,PaintEventArgs)
  nameWithType: Control.InvokePaint(Control,PaintEventArgs)
  fullName: System.Windows.Forms.Control.InvokePaint(Control,PaintEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.Paint&quot;> </xref> 지정된 된 컨트롤에 대 한 이벤트입니다."
  syntax:
    content: protected void InvokePaint (System.Windows.Forms.Control c, System.Windows.Forms.PaintEventArgs e);
    parameters:
    - id: c
      type: System.Windows.Forms.Control
      description: "<xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 할당 하는 <xref href=&quot;System.Windows.Forms.Control.Paint&quot;> </xref> 이벤트를 합니다."
    - id: e
      type: System.Windows.Forms.PaintEventArgs
      description: "<xref href=&quot;System.Windows.Forms.PaintEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.InvokePaint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  id: InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: InvokePaintBackground(Control,PaintEventArgs)
  nameWithType: Control.InvokePaintBackground(Control,PaintEventArgs)
  fullName: System.Windows.Forms.Control.InvokePaintBackground(Control,PaintEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref uid=&quot;langword_csharp_PaintBackground&quot; name=&quot;PaintBackground&quot; href=&quot;&quot;> </xref> 지정된 된 컨트롤에 대 한 이벤트입니다."
  syntax:
    content: protected void InvokePaintBackground (System.Windows.Forms.Control c, System.Windows.Forms.PaintEventArgs e);
    parameters:
    - id: c
      type: System.Windows.Forms.Control
      description: "<xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 할당 하는 <xref href=&quot;System.Windows.Forms.Control.Paint&quot;> </xref> 이벤트를 합니다."
    - id: e
      type: System.Windows.Forms.PaintEventArgs
      description: "<xref href=&quot;System.Windows.Forms.PaintEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.InvokePaintBackground*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.InvokeRequired
  id: InvokeRequired
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: InvokeRequired
  nameWithType: Control.InvokeRequired
  fullName: System.Windows.Forms.Control.InvokeRequired
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 대 한 메서드 호출 있으므로 호출자가 아닌 다른 스레드에서 컨트롤을 만들 때 호출자가 호출 메서드를 호출 해야 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: "Windows Forms에서 컨트롤을 특정 스레드에 바인딩되며는 스레드로부터 안전 하지 않습니다. 따라서 다른 스레드에서 컨트롤의 메서드를 호출 하는 경우 하나를 사용 해야의 컨트롤의 호출을 적절 한 스레드에 마샬링해야 하는 메서드를 호출 합니다. 컨트롤 하는지 알 수 없는 경우에 유용할 수 있는 호출 메서드를 호출 해야 하는 경우를 확인 하려면이 속성을 사용할 수 있습니다.      > [!NOTE] > InvokeRequired 속성 외에 네 가지 메서드가 있습니다 컨트롤에는 스레드로부터 안전 하 게 호출할: <xref:System.Windows.Forms.Control.Invoke%2A>,<xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>및 <xref:System.Windows.Forms.Control.CreateGraphics%2A>컨트롤에 대 한 핸들 이미 만든 경우.</xref:System.Windows.Forms.Control.CreateGraphics%2A> </xref:System.Windows.Forms.Control.EndInvoke%2A> </xref:System.Windows.Forms.Control.BeginInvoke%2A> </xref:System.Windows.Forms.Control.Invoke%2A> 호출 <xref:System.Windows.Forms.Control.CreateGraphics%2A>컨트롤의 핸들이 백그라운드 스레드에서 생성 되기 전에 잘못 된 크로스 스레드 호출 될 수 있습니다.</xref:System.Windows.Forms.Control.CreateGraphics%2A> 다른 모든 메서드 호출에 대해 하나를 사용 해야 이러한 다른 스레드에서 호출 하는 경우 메서드를 호출 합니다.       컨트롤의 핸들이 아직 존재 하지 않는 경우 창 핸들이 폼 또는 컨트롤을 찾을 때까지 InvokeRequired 컨트롤의 부모 체인을 검색 합니다. 경우에 적절 한 핸들을 찾을 수 있습니다, InvokeRequired 메서드 반환 `false`합니다.       즉, InvokeRequiredcan 반환 하는 `false` 경우 <xref:System.Windows.Forms.Control.Invoke%2A>필요 하지 않습니다 (호출이 동일한 스레드에서 발생), 다른 스레드에서 컨트롤 만들어졌지만 컨트롤의 핸들이 아직 만들어지지 않은 경우 또는.</xref:System.Windows.Forms.Control.Invoke%2A>       여기서 컨트롤의 핸들이 아직 만들어지지 않은 경우에 호출 하지 않아야 단순히 속성, 메서드 또는 이벤트 컨트롤에 있습니다. 메시지 펌프 하지 않고 스레드에서 컨트롤을 격리 하 고 고 응용 프로그램이 불안정 백그라운드 스레드에서 만들어질 컨트롤의 핸들이 발생할 수 있습니다.       값을 확인 하 여이 경우 으로부터 보호할 수 있습니다 <xref:System.Windows.Forms.Control.IsHandleCreated%2A>InvokeRequired 반환 하는 경우 `false` 백그라운드 스레드에서.</xref:System.Windows.Forms.Control.IsHandleCreated%2A> <xref:System.Windows.Forms.Control.Invoke%2A>또는 <xref:System.Windows.Forms.Control.BeginInvoke%2A>.</xref:System.Windows.Forms.Control.BeginInvoke%2A> </xref:System.Windows.Forms.Control.Invoke%2A> 를 호출 하기 전에 만든 때까지 기다려야 컨트롤 핸들 아직 만들지 않은 경우 일반적으로 이러한 경우 응용 프로그램에 대 한 기본 폼의 생성자에서 백그라운드 스레드가 생성 됩니다 (에서 같이 `Application.Run(new MainForm())`는 폼이 표시 되기 전에, 또는 `Application.Run` 가 호출 되었습니다.       한 가지 해결 방법은 백그라운드 스레드를 시작 하기 전에 폼의 핸들을 만든 될 때까지 기다려야 합니다. 호출 하 여 핸들 생성을 강제로 <xref:System.Windows.Forms.Control.Handle%2A>속성 또는 때까지 기다려야는 <xref:System.Windows.Forms.Form.Load>백그라운드 프로세스를 시작 하는 이벤트입니다.</xref:System.Windows.Forms.Form.Load> </xref:System.Windows.Forms.Control.Handle%2A>       사용 하는 것 보다 나은 해결책은 `SynchronizationContext` 반환한 <xref:System.Threading.SynchronizationContext>스레드 간 위한 컨트롤 대신.</xref:System.Threading.SynchronizationContext>      > [!NOTE] > 메시지를 처리 해야 하는 스레드가 더 이상 활성 상태가 예외가 throw 될 수 없습니다.       다중 스레드 Windows Forms 컨트롤에 대 한 자세한 내용은 참조 [하는 방법: 파일을 검색 하는 백그라운드 스레드를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [하는 방법: Windows Forms 컨트롤에 스레드로부터 안전한 호출 수행](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public bool InvokeRequired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 컨트롤의 <xref:System.Windows.Forms.Control.Handle*>(호출 메서드를 통해 컨트롤에 대 한 호출을 수행 해야을 나타냄) 호출 스레드가 아닌 다른 스레드에서 만든 못했으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Forms.Control.Handle*>"
  overload: System.Windows.Forms.Control.InvokeRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.IsAccessible
  id: IsAccessible
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: IsAccessible
  nameWithType: Control.IsAccessible
  fullName: System.Windows.Forms.Control.IsAccessible
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤이 내게 필요한 옵션 응용 프로그램에 표시 되는지를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public bool IsAccessible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 내게 필요한 옵션 응용 프로그램에 표시 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.IsAccessible*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.IsDisposed
  id: IsDisposed
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: IsDisposed
  nameWithType: Control.IsDisposed
  fullName: System.Windows.Forms.Control.IsDisposed
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤이 삭제 되었는지 여부를 나타내는 값을 가져옵니다."
  remarks: "이 속성이 반환 하는 경우 `true`, 컨트롤의 삭제 되 고 올바른 Windows 컨트롤로 더 이상 참조할 수 없습니다. 컨트롤의 인스턴스 삭제 하는 경우에 가비지 수집을 통해 메모리에서 제거 될 때까지 메모리에 유지 계속 됩니다. 호출할 수 없습니다 컨트롤이 삭제 될 때 해당 <xref:System.Windows.Forms.Control.RecreateHandle%2A>메서드.</xref:System.Windows.Forms.Control.RecreateHandle%2A>"
  syntax:
    content: public bool IsDisposed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 삭제 되었으면;입니다 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.IsDisposed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.IsHandleCreated
  id: IsHandleCreated
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: IsHandleCreated
  nameWithType: Control.IsHandleCreated
  fullName: System.Windows.Forms.Control.IsHandleCreated
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 연결 된 핸들이 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "IsHandleCreated 속성을 사용 하는지 여부를 <xref:System.Windows.Forms.Control.CreateHandle%2A>호출한.</xref:System.Windows.Forms.Control.CreateHandle%2A>"
  syntax:
    content: public bool IsHandleCreated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤에 핸들이 할당 된 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.IsHandleCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.IsInputChar(System.Char)
  id: IsInputChar(System.Char)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: IsInputChar(Char)
  nameWithType: Control.IsInputChar(Char)
  fullName: System.Windows.Forms.Control.IsInputChar(Char)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "문자가 컨트롤이 인식 하는 입력된 문자 인지를 결정 합니다."
  remarks: "있는지 여부를 지정 된 문자를 확인 하려면 IsInputChar 메서드를 호출 하는 `charCode` 매개 변수는 입력된 문자에 컨트롤이 있습니다. 이 메서드는 지정된 된 입력된 문자를 전처리 되거나 컨트롤에 직접 전송 하는지 확인 하기 위해 창 메시지 전처리 하는 동안 호출 됩니다. IsInputChar 반환 하는 경우 `true`, 지정된 된 문자는 컨트롤에 직접 전송 됩니다. IsInputChar 반환 하는 경우 `false`, 지정된 된 문자를 전처리 되 고 전처리 단계에서 사용 하지 않은 경우에 컨트롤 전송 합니다. 전처리는 문자를 포함 다른 컨트롤의 니모닉 문자 인지 확인 합니다."
  syntax:
    content: protected virtual bool IsInputChar (char charCode);
    parameters:
    - id: charCode
      type: System.Char
      description: "테스트할 문자입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>문자를 전처리 하지 않고 컨트롤에 직접 전송 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.IsInputChar*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)
  id: IsInputKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: IsInputKey(Keys)
  nameWithType: Control.IsInputKey(Keys)
  fullName: System.Windows.Forms.Control.IsInputKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 키가 일반 입력된 키인지 또는 전처리가 필요한 특수 키인지 여부를 결정 합니다."
  remarks: "키에서 지정 되었는지 여부를 확인 하려면 IsInputKey 메서드를 호출 하는 `keyData` 매개 변수 컨트롤이는 입력된 키입니다. 이 메서드는 지정 된 입력된 키인지 전처리 되거나 컨트롤에 직접 전송 하는지 확인 하기 위해 창 메시지 전처리 하는 동안 호출 됩니다. IsInputKey 반환 하는 경우 `true`, 지정된 된 키 컨트롤에 직접 전송 됩니다. IsInputKey 반환 하는 경우 `false`, 지정된 된 키가 전처리 하 고 전처리 단계에서 사용 하지 않은 경우에 컨트롤 전송 합니다. 전처리 하는 키의 탭, 리턴, esc를 누르고 및 위쪽 화살표, 아래쪽 화살표, 왼쪽 화살표 및 오른쪽 화살표 키를 포함 합니다."
  example:
  - "The following code example shows you how to override the IsInputKey method for a <xref:System.Windows.Forms.TextBox> control. In this example, the `TabTextBox` class handles the TAB key. When the `TabTextBox` has the focus and the user presses the TAB key four spaces are added at the text insertion point, replacing any selected text. By default, the <xref:System.Windows.Forms.TextBox> control handles the TAB key by moving the input focus to the next control. In this case, the keypress never reaches the <xref:System.Windows.Forms.Control.OnKeyDown%2A> method override. To prevent this default behavior, the IsInputKey method override returns `true` when the user presses the TAB key. For all other keypresses, the IsInputKey method override returns the result of calling the base-class version of the method.  \n  \n [!code-vb[System.Windows.Forms.Control.IsInputKey#0](~/add/codesnippet/visualbasic/m-system.windows.forms.c_106_1.vb)]\n [!code-cs[System.Windows.Forms.Control.IsInputKey#0](~/add/codesnippet/csharp/m-system.windows.forms.c_106_1.cs)]"
  syntax:
    content: protected virtual bool IsInputKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref> 값입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정된 된 키가 일반 입력된 키; 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.IsInputKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)
  id: IsKeyLocked(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: IsKeyLocked(Keys)
  nameWithType: Control.IsKeyLocked(Keys)
  fullName: System.Windows.Forms.Control.IsKeyLocked(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "CAPS LOCK, NUM LOCK 또는 SCROLL LOCK 키가 유효한 지 여부를 결정 합니다."
  remarks: "IsKeyLocked 속성을 사용 하 여 여부를 개별적으로 또는 함께, CAPS LOCK, NUM LOCK 또는 SCROLL LOCK 키가 있는지 여부를 확인 하 합니다."
  example:
  - "The following code example displays a message box indicating whether the specified key (the Caps Lock key in this case) is in effect.  \n  \n [!code-vb[ControlIsKeyLocked#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_2_1.vb)]\n [!code-cpp[ControlIsKeyLocked#1](~/add/codesnippet/cpp/m-system.windows.forms.c_2_1.cpp)]\n [!code-cs[ControlIsKeyLocked#1](~/add/codesnippet/csharp/m-system.windows.forms.c_2_1.cs)]"
  syntax:
    content: public static bool IsKeyLocked (System.Windows.Forms.Keys keyVal);
    parameters:
    - id: keyVal
      type: System.Windows.Forms.Keys
      description: "CAPS LOCK, NUM LOCK 또는 SCROLL LOCK 멤버는 <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref> 열거 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정 된 키 또는 키; 적용 된 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.IsKeyLocked*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code> keyVal </code> 매개 변수는 CAPS LOCK, NUM LOCK 또는 SCROLL LOCK 키 이외의 키를 참조 합니다."
  platform:
  - net462
- uid: System.Windows.Forms.Control.IsMirrored
  id: IsMirrored
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: IsMirrored
  nameWithType: Control.IsMirrored
  fullName: System.Windows.Forms.Control.IsMirrored
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤이 미러링 되었는지 여부를 나타내는 값을 가져옵니다."
  remarks: '미러링된 컨트롤 레이아웃 및 오른쪽에서 왼쪽으로 텍스트를 모두 표시합니다. 자세한 내용은 참조 [하는 방법: 미러링된 Windows Forms 만들기 및 컨트롤](http://msdn.microsoft.com/en-us/7c5c4ecc-9bfb-4508-8383-753e306719b1)합니다.'
  syntax:
    content: public bool IsMirrored { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 미러링되면; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.IsMirrored*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)
  id: IsMnemonic(System.Char,System.String)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: IsMnemonic(Char,String)
  nameWithType: Control.IsMnemonic(Char,String)
  fullName: System.Windows.Forms.Control.IsMnemonic(Char,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 문자가 지정 된 문자열의 컨트롤에 할당 된 니모닉 문자 인지 여부를 확인 합니다."
  remarks: "니모닉 문자 바로 다음의 &quot;/ /&quot; <xref:System.String>.</xref:System.String> 첫 번째 인스턴스는"
  example:
  - "The following code example demonstrates an extension of the button class that overrides the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method to exhibit custom behavior. The example also demonstrates the use of the <xref:System.Windows.Forms.Control.CanSelect%2A> and IsMnemonic properties. To run this example paste the following code after a form class, in the same file. Add a button of type `MnemonicButton` to the form.  \n  \n [!code-cs[System.Windows.Forms.ProcessMnemonic#1](~/add/codesnippet/csharp/m-system.windows.forms.c_70_1.cs)]\n [!code-cpp[System.Windows.Forms.ProcessMnemonic#1](~/add/codesnippet/cpp/m-system.windows.forms.c_70_1.cpp)]\n [!code-vb[System.Windows.Forms.ProcessMnemonic#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_70_1.vb)]"
  syntax:
    content: public static bool IsMnemonic (char charCode, string text);
    parameters:
    - id: charCode
      type: System.Char
      description: "테스트할 문자입니다."
    - id: text
      type: System.String
      description: "검색할 문자열입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <code> charCode </code> 문자는 컨트롤에 할당 된 니모닉 문자 그렇지 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.IsMnemonic*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.KeyDown
  id: KeyDown
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: KeyDown
  nameWithType: Control.KeyDown
  fullName: System.Windows.Forms.Control.KeyDown
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 포커스가 있을 때 키를 누를 때 발생 합니다."
  remarks: "주요 이벤트는 다음 순서 대로 발생 합니다. 1.  KeyDown 2입니다.  <xref:System.Windows.Forms.Control.KeyPress>3입니다.</xref:System.Windows.Forms.Control.KeyPress>  <xref:System.Windows.Forms.Control.KeyUp>폼 수준 에서만 키보드 이벤트를 처리 하 고 키보드 이벤트를 수신할 다른 컨트롤에서는 설정는 <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName>속성 폼의 <xref:System.Windows.Forms.Control.KeyPress>이벤트 처리 메서드를 `true`.</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName></xref:System.Windows.Forms.Control.KeyUp> 탭, 리턴, ESC, 및 화살표 키 등의 특정 키 컨트롤에서 자동으로 처리 됩니다. KeyDown 이벤트를 발생 하 여 이러한 키가 재정의 해야 합니다는 <xref:System.Windows.Forms.Control.IsInputKey%2A>양식의 각 컨트롤의 메서드.</xref:System.Windows.Forms.Control.IsInputKey%2A> 재정의 위한 코드는 <xref:System.Windows.Forms.Control.IsInputKey%2A>특수 키 중 하나를 누를 경우를 결정 하 고 값을 반환 해야 `true`.</xref:System.Windows.Forms.Control.IsInputKey%2A> 재정의 하는 대신는 <xref:System.Windows.Forms.Control.IsInputKey%2A>메서드를 처리할 수 있습니다는 <xref:System.Windows.Forms.Control.PreviewKeyDown>이벤트 집합과 <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A>속성을 `true`.</xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> </xref:System.Windows.Forms.Control.PreviewKeyDown> </xref:System.Windows.Forms.Control.IsInputKey%2A> 코드 예제를 참조 하십시오.는 <xref:System.Windows.Forms.Control.PreviewKeyDown>이벤트.</xref:System.Windows.Forms.Control.PreviewKeyDown>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example uses the KeyDown event to determine the type of character entered into the control.  \n  \n [!code-vb[Control.KeyDown#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_14_1.vb)]\n [!code-cpp[Control.KeyDown#1](~/add/codesnippet/cpp/e-system.windows.forms.c_14_1.cpp)]\n [!code-cs[Control.KeyDown#1](~/add/codesnippet/csharp/e-system.windows.forms.c_14_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.KeyEventHandler KeyDown;
    return:
      type: System.Windows.Forms.KeyEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.KeyPress
  id: KeyPress
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: KeyPress
  nameWithType: Control.KeyPress
  fullName: System.Windows.Forms.Control.KeyPress
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "문자 때 발생 합니다. 컨트롤에 포커스가 있을 때 공백 또는 백스페이스 키를 누르면 됩니다."
  remarks: "주요 이벤트는 다음 순서 대로 발생 합니다. 1.  <xref:System.Windows.Forms.Control.KeyDown>2입니다.</xref:System.Windows.Forms.Control.KeyDown>  KeyPress 3입니다.  <xref:System.Windows.Forms.Control.KeyUp>KeyPress 이벤트가 공간과 백스페이스; 이외의 문자가 아닌 키를 기준으로 발생 하지 않습니다. 그러나 문자가 아닌 키 발생 마십시오.는 <xref:System.Windows.Forms.Control.KeyDown>및 <xref:System.Windows.Forms.Control.KeyUp>이벤트.</xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyDown></xref:System.Windows.Forms.Control.KeyUp>       사용 하 여는 <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A>샘플 키 입력을 런타임 시를 사용 하거나 공통 키 입력의 하위 집합을 수정 하는 속성.</xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A>       폼 수준 에서만 키보드 이벤트를 처리 하 고 키보드 이벤트를 수신할 다른 컨트롤에서는 설정는 <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName>속성 폼의 KeyPress 이벤트 처리 메서드를 `true`.</xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example uses the KeyPress event to prevent characters from entering the control.  \n  \n [!code-vb[Control.KeyDown#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_4_1.vb)]\n [!code-cpp[Control.KeyDown#1](~/add/codesnippet/cpp/e-system.windows.forms.c_4_1.cpp)]\n [!code-cs[Control.KeyDown#1](~/add/codesnippet/csharp/e-system.windows.forms.c_4_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.KeyPressEventHandler KeyPress;
    return:
      type: System.Windows.Forms.KeyPressEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.KeyUp
  id: KeyUp
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: KeyUp
  nameWithType: Control.KeyUp
  fullName: System.Windows.Forms.Control.KeyUp
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 포커스가 있을 때 키를 놓을 때 발생 합니다."
  remarks: "주요 이벤트는 다음 순서 대로 발생 합니다. 1.  <xref:System.Windows.Forms.Control.KeyDown>2입니다.</xref:System.Windows.Forms.Control.KeyDown>  <xref:System.Windows.Forms.Control.KeyPress>3입니다.</xref:System.Windows.Forms.Control.KeyPress>  폼 수준 에서만 키보드 이벤트를 처리 및 키보드 이벤트를 수신할 다른 컨트롤에서는 KeyUp 설정는 <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName>속성 폼의 <xref:System.Windows.Forms.Control.KeyPress>이벤트 처리 메서드를 `true`.</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName> 탭, 리턴, ESC, 및 화살표 키 등의 특정 키 컨트롤에서 자동으로 처리 됩니다. KeyUp 이벤트를 발생 하 여 이러한 키가 재정의 해야 합니다는 <xref:System.Windows.Forms.Control.IsInputKey%2A>양식의 각 컨트롤의 메서드.</xref:System.Windows.Forms.Control.IsInputKey%2A> 재정의 위한 코드 <xref:System.Windows.Forms.Control.IsInputKey%2A>특수 키 중 하나를 누를 경우를 결정 하 고 값을 반환 해야 `true`.</xref:System.Windows.Forms.Control.IsInputKey%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example uses the KeyUp event with the <xref:System.Windows.Forms.Help> class to display pop-up style help to the user.  \n  \n [!code-cpp[Control.KeyUp#1](~/add/codesnippet/cpp/e-system.windows.forms.c_40_1.cpp)]\n [!code-vb[Control.KeyUp#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_40_1.vb)]\n [!code-cs[Control.KeyUp#1](~/add/codesnippet/csharp/e-system.windows.forms.c_40_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.KeyEventHandler KeyUp;
    return:
      type: System.Windows.Forms.KeyEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Layout
  id: Layout
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Layout
  nameWithType: Control.Layout
  fullName: System.Windows.Forms.Control.Layout
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤 컨트롤은 자식 컨트롤의 위치를 변경 해야 하는 경우 발생 합니다."
  remarks: "레이아웃 이벤트는 자식 컨트롤을 추가 하거나 제거한의 범위 컨트롤 변경 되는 다른 변경 내용이 발생 하면 컨트롤의 레이아웃에 영향을 줄 수 있는 경우 때 발생 합니다. 레이아웃 이벤트를 사용 하 여 보류 될 수 있습니다는 <xref:System.Windows.Forms.Control.SuspendLayout%2A>및 <xref:System.Windows.Forms.Control.ResumeLayout%2A>메서드.</xref:System.Windows.Forms.Control.ResumeLayout%2A> </xref:System.Windows.Forms.Control.SuspendLayout%2A> 레이아웃을 일시 중단을 사용 하면 각 변경에 대 한 레이아웃을 수행 하지 않고도 컨트롤에서 여러 동작을 수행할 수 있습니다. 예를 들어, 크기를 조정 하 고 컨트롤을 이동 하는 경우 각 작업은 레이아웃 이벤트를 발생 합니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example centers a <xref:System.Windows.Forms.Form> on the screen in the Layout event. This will keep the form centered as the user resizes it. This example requires that you have created a <xref:System.Windows.Forms.Form> control.  \n  \n [!code-cs[Control.Layout#1](~/add/codesnippet/csharp/e-system.windows.forms.c_22_1.cs)]\n [!code-vb[Control.Layout#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_22_1.vb)]\n [!code-cpp[Control.Layout#1](~/add/codesnippet/cpp/e-system.windows.forms.c_22_1.cpp)]"
  syntax:
    content: public event System.Windows.Forms.LayoutEventHandler Layout;
    return:
      type: System.Windows.Forms.LayoutEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.LayoutEngine
  id: LayoutEngine
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: LayoutEngine
  nameWithType: Control.LayoutEngine
  fullName: System.Windows.Forms.Control.LayoutEngine
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤 레이아웃 엔진의 캐시 된 인스턴스를 가져옵니다."
  remarks: "LayoutEngine 속성 컨트롤의 자식에 대 한 아닌 컨트롤 자체에 대 한 레이아웃 엔진을 가져옵니다."
  syntax:
    content: public virtual System.Windows.Forms.Layout.LayoutEngine LayoutEngine { get; }
    return:
      type: System.Windows.Forms.Layout.LayoutEngine
      description: "<xref href=&quot;System.Windows.Forms.Layout.LayoutEngine&quot;> </xref> 컨트롤의 내용에 대 한 합니다."
  overload: System.Windows.Forms.Control.LayoutEngine*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Leave
  id: Leave
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Leave
  nameWithType: Control.Leave
  fullName: System.Windows.Forms.Control.Leave
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "입력된 포커스가 컨트롤을 벗어나면 발생 합니다."
  remarks: "When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  Leave  \n  \n4.  <xref:System.Windows.Forms.Control.Validating>  \n  \n5.  <xref:System.Windows.Forms.Control.Validated>  \n  \n6.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n4.  Leave  \n  \n5.  <xref:System.Windows.Forms.Control.Validating>  \n  \n6.  <xref:System.Windows.Forms.Control.Validated>  \n  \n If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.  \n  \n> [!NOTE]\n>  The <xref:System.Windows.Forms.Control.Enter> and Leave events are suppressed by the <xref:System.Windows.Forms.Form> class. The equivalent events in the <xref:System.Windows.Forms.Form> class are the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events. The <xref:System.Windows.Forms.Control.Enter> and Leave events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached. For example, assume you have a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.GroupBox> controls, and each <xref:System.Windows.Forms.GroupBox> control has one <xref:System.Windows.Forms.TextBox> control. When the caret is moved from one <xref:System.Windows.Forms.TextBox> to the other, the Leave event is raised for the <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.GroupBox>, and the <xref:System.Windows.Forms.Control.Enter> event is raised for the other <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TextBox>.  \n  \n> [!CAUTION]\n>  Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, Leave, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topic.  \n  \n For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example uses the Leave event to reset a control to its former state.  \n  \n [!code-cs[Control.Enter#1](~/add/codesnippet/csharp/e-system.windows.forms.c_39_1.cs)]\n [!code-cpp[Control.Enter#1](~/add/codesnippet/cpp/e-system.windows.forms.c_39_1.cpp)]\n [!code-vb[Control.Enter#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_39_1.vb)]"
  syntax:
    content: public event EventHandler Leave;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Left
  id: Left
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Left
  nameWithType: Control.Left
  fullName: System.Windows.Forms.Control.Left
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 왼쪽된 가장자리와 해당 컨테이너 클라이언트 영역의 왼쪽된 가장자리 사이의 픽셀 거리를 가져오거나 설정 합니다."
  remarks: "왼쪽된 속성 값은 해당 하는 <xref:System.Drawing.Point.X%2A?displayProperty=fullName>의 속성은 <xref:System.Windows.Forms.Control.Location%2A>컨트롤의 속성 값.</xref:System.Windows.Forms.Control.Location%2A> </xref:System.Drawing.Point.X%2A?displayProperty=fullName>       변경 내용을 <xref:System.Windows.Forms.Control.Width%2A>Left 속성 값 및는 <xref:System.Windows.Forms.Control.Right%2A>변경 하려면 컨트롤의 속성 값.</xref:System.Windows.Forms.Control.Right%2A> </xref:System.Windows.Forms.Control.Width%2A>"
  example:
  - "The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties. This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.  \n  \n [!code-cs[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/csharp/p-system.windows.forms.c_103_1.cs)]\n [!code-cpp[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/cpp/p-system.windows.forms.c_103_1.cpp)]\n [!code-vb[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_103_1.vb)]"
  syntax:
    content: public int Left { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>(픽셀) 컨트롤의 왼쪽된 가장자리와 해당 컨테이너 클라이언트 영역의 왼쪽된 가장자리 사이의 거리를 나타내는.</xref:System.Int32>"
  overload: System.Windows.Forms.Control.Left*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Location
  id: Location
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Location
  nameWithType: Control.Location
  fullName: System.Windows.Forms.Control.Location
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "해당 컨테이너의 왼쪽 위 모퉁이 기준으로 컨트롤의 왼쪽 위 모퉁이의 좌표를 가져오거나 설정 합니다."
  remarks: "때문에 <xref:System.Drawing.Point>클래스는 값 형식 (`Structure` 에 [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], `struct` 에 [!INCLUDE[csprcs](~/add/includes/csprcs-md.md)]), 컨트롤의 왼쪽 위 지점이의 복사본을 반환 하는 속성에 액세스를 의미 하는 값으로 반환 됩니다.</xref:System.Drawing.Point> 따라서 조정는 <xref:System.Drawing.Point.X%2A>또는 <xref:System.Drawing.Point.Y%2A>의 속성은 <xref:System.Drawing.Point>이에서 반환 된 속성에 영향을 주지 것입니다는 <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Right%2A>, <xref:System.Windows.Forms.Control.Top%2A>, 또는 <xref:System.Windows.Forms.Control.Bottom%2A>컨트롤의 속성 값.</xref:System.Windows.Forms.Control.Bottom%2A> </xref:System.Windows.Forms.Control.Top%2A> </xref:System.Windows.Forms.Control.Right%2A> </xref:System.Windows.Forms.Control.Left%2A> </xref:System.Drawing.Point> </xref:System.Drawing.Point.Y%2A> </xref:System.Drawing.Point.X%2A> 각 속성 값을 개별적으로 설정 하거나에 새 <xref:System.Drawing.Point>.</xref:System.Drawing.Point> Location 속성 설정에 이러한 속성을 조정 하려면       경우는 <xref:System.Windows.Forms.Control>은 <xref:System.Windows.Forms.Form>, 위치 속성 값의 왼쪽 위 모퉁이 나타내는 <xref:System.Windows.Forms.Form>화면 좌표에서.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Control>"
  example:
  - "The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties. The example creates a <xref:System.Windows.Forms.TextBox>and sets its Location within the group box. Next, it sets the <xref:System.Windows.Forms.Control.Text%2A> property of the group box, and docks the group box to the top of the form. Lastly, it disables the group box by setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false`, which causes all controls contained within the group box to be disabled.  \n  \n [!code-cs[Windows.Forms.Control Properties#2](~/add/codesnippet/csharp/p-system.windows.forms.c_94_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties#2](~/add/codesnippet/cpp/p-system.windows.forms.c_94_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties#2](~/add/codesnippet/visualbasic/p-system.windows.forms.c_94_1.vb)]"
  syntax:
    content: public System.Drawing.Point Location { get; set; }
    return:
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;> </xref> 해당 컨테이너의 왼쪽 위 모퉁이 기준으로 컨트롤의 왼쪽 위 모퉁이 나타내는입니다."
  overload: System.Windows.Forms.Control.Location*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.LocationChanged
  id: LocationChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: LocationChanged
  nameWithType: Control.LocationChanged
  fullName: System.Windows.Forms.Control.LocationChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우는 <xref:System.Windows.Forms.Control.Location*>속성 값이 변경.</xref:System.Windows.Forms.Control.Location*>"
  remarks: "이 이벤트는 <xref:System.Windows.Forms.Control.Location%2A>속성이 상호 작용을 통해 또는 프로그래밍 방식으로 수정으로 변경 합니다.</xref:System.Windows.Forms.Control.Location%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example raises the LocationChanged event on a <xref:System.Windows.Forms.StatusStrip> when the form is resized.  \n  \n [!code-cs[System.Windows.Forms.LocationChanged#1](~/add/codesnippet/csharp/e-system.windows.forms.c_69_1.cs)]\n [!code-vb[System.Windows.Forms.LocationChanged#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_69_1.vb)]"
  syntax:
    content: public event EventHandler LocationChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.LostFocus
  id: LostFocus
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: LostFocus
  nameWithType: Control.LostFocus
  fullName: System.Windows.Forms.Control.LostFocus
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤이 포커스를 잃을 때 발생 합니다."
  remarks: "When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  <xref:System.Windows.Forms.Control.Leave>  \n  \n4.  <xref:System.Windows.Forms.Control.Validating>  \n  \n5.  <xref:System.Windows.Forms.Control.Validated>  \n  \n6.  LostFocus  \n  \n When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  LostFocus  \n  \n4.  <xref:System.Windows.Forms.Control.Leave>  \n  \n5.  <xref:System.Windows.Forms.Control.Validating>  \n  \n6.  <xref:System.Windows.Forms.Control.Validated>  \n  \n If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.  \n  \n If the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> is set to `true` in the <xref:System.Windows.Forms.Control.Validating> event delegate, all events that would usually occur after the <xref:System.Windows.Forms.Control.Validating> event are suppressed.  \n  \n> [!NOTE]\n>  The <xref:System.Windows.Forms.Control.GotFocus> and LostFocus events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages. Typically, the <xref:System.Windows.Forms.Control.GotFocus> and LostFocus events are only used when updating <xref:System.Windows.Forms.UICues> or when writing custom controls. Instead the <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events should be used for all controls except the <xref:System.Windows.Forms.Form> class, which uses the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events. For more information about the <xref:System.Windows.Forms.Control.GotFocus> and LostFocus events, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) and [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topics.  \n  \n> [!CAUTION]\n>  Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, LostFocus, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topic.  \n  \n For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates validating the text for TextBox1. It also demonstrates handling the LostFocus event by setting the <xref:System.Windows.Forms.FileDialog.InitialDirectory%2A?displayProperty=fullName> property to the text in TextBox1. The code example used the <xref:System.Windows.Forms.ErrorProvider.GetError%2A?displayProperty=fullName> method to check for an error before opening the file dialog box. To run this example, paste the following code into a form containing a <xref:System.Windows.Forms.TextBox> named `TextBox1`, an <xref:System.Windows.Forms.OpenFileDialog> named `OpenFileDialog1`, a <xref:System.Windows.Forms.Button> named `Button1`, and an <xref:System.Windows.Forms.ErrorProvider> named `ErrorProvider1`. Ensure all events are associated with their event handlers.  \n  \n [!code-cs[System.Windows.Forms.FileDialog#2](~/add/codesnippet/csharp/e-system.windows.forms.c_78_1.cs)]\n [!code-cpp[System.Windows.Forms.FileDialog#2](~/add/codesnippet/cpp/e-system.windows.forms.c_78_1.cpp)]\n [!code-vb[System.Windows.Forms.FileDialog#2](~/add/codesnippet/visualbasic/e-system.windows.forms.c_78_1.vb)]"
  syntax:
    content: public event EventHandler LostFocus;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Margin
  id: Margin
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Margin
  nameWithType: Control.Margin
  fullName: System.Windows.Forms.Control.Margin
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤 사이의 공백을 가져오거나 설정 합니다."
  remarks: "컨트롤은 합리적으로 Windows 사용자 인터페이스 지침 가까이 있는 여백에 대 한 기본값을 받습니다. 약간씩 조정 특정 응용 프로그램에 필요할 수 있습니다.      > [!NOTE] > 컨트롤에서의 거리에 영향을 주지 Margin 속성 도킹된 된 컨트롤에 설정 된 해당 컨테이너의 가장자리입니다."
  syntax:
    content: public System.Windows.Forms.Padding Margin { get; set; }
    return:
      type: System.Windows.Forms.Padding
      description: "A <xref href=&quot;System.Windows.Forms.Padding&quot;> </xref> 컨트롤 사이의 간격을 표시 합니다."
  overload: System.Windows.Forms.Control.Margin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MarginChanged
  id: MarginChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MarginChanged
  nameWithType: Control.MarginChanged
  fullName: System.Windows.Forms.Control.MarginChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 여백이 변경 될 때 발생 합니다."
  remarks: "이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MarginChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the MarginChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#21](~/add/codesnippet/csharp/e-system.windows.forms.c_67_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#21](~/add/codesnippet/visualbasic/e-system.windows.forms.c_67_1.vb)]"
  syntax:
    content: public event EventHandler MarginChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MaximumSize
  id: MaximumSize
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MaximumSize
  nameWithType: Control.MaximumSize
  fullName: System.Windows.Forms.Control.MaximumSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "있는 상한을 나타내는 크기를 가져오거나 설정 합니다. <xref:System.Windows.Forms.Control.GetPreferredSize*>지정할 수 있습니다.</xref:System.Windows.Forms.Control.GetPreferredSize*>"
  syntax:
    content: public virtual System.Drawing.Size MaximumSize { get; set; }
    return:
      type: System.Drawing.Size
      description: "형식의 정렬 된 쌍 <xref href=&quot;System.Drawing.Size&quot;> </xref> 사각형의 높이 너비를 나타내는입니다."
  overload: System.Windows.Forms.Control.MaximumSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MinimumSize
  id: MinimumSize
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MinimumSize
  nameWithType: Control.MinimumSize
  fullName: System.Windows.Forms.Control.MinimumSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "하 한을 나타내는 크기를 가져오거나 설정 합니다. <xref:System.Windows.Forms.Control.GetPreferredSize*>지정할 수 있습니다.</xref:System.Windows.Forms.Control.GetPreferredSize*>"
  syntax:
    content: public virtual System.Drawing.Size MinimumSize { get; set; }
    return:
      type: System.Drawing.Size
      description: "형식의 정렬 된 쌍 <xref href=&quot;System.Drawing.Size&quot;> </xref> 사각형의 높이 너비를 나타내는입니다."
  overload: System.Windows.Forms.Control.MinimumSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ModifierKeys
  id: ModifierKeys
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ModifierKeys
  nameWithType: Control.ModifierKeys
  fullName: System.Windows.Forms.Control.ModifierKeys
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "누른된 상태에 있는 보조키 (SHIFT, CTRL 및 ALT)를 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following code example hides a button when the CTRL key is pressed while the button is clicked. This example requires that you have a <xref:System.Windows.Forms.Button> named `button1` on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cs[Windows.Forms.Control Members4#2](~/add/codesnippet/csharp/p-system.windows.forms.c_1_1.cs)]\n [!code-vb[Windows.Forms.Control Members4#2](~/add/codesnippet/visualbasic/p-system.windows.forms.c_1_1.vb)]\n [!code-cpp[Windows.Forms.Control Members4#2](~/add/codesnippet/cpp/p-system.windows.forms.c_1_1.cpp)]"
  syntax:
    content: public static System.Windows.Forms.Keys ModifierKeys { get; }
    return:
      type: System.Windows.Forms.Keys
      description: "비트 조합 된 <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref> 값입니다. 기본값은 <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.ModifierKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MouseButtons
  id: MouseButtons
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MouseButtons
  nameWithType: Control.MouseButtons
  fullName: System.Windows.Forms.Control.MouseButtons
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "누른된 상태에 있는 마우스 단추를 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.RectangleToScreen%2A>, <xref:System.Windows.Forms.Control.PointToScreen%2A>, MouseButtons, <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=fullName>, and <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=fullName> members. To run the example, paste the following code in a form called Form1 containing several controls. This example requires that the <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseMove>, and <xref:System.Windows.Forms.Control.MouseUp> events are connected to the event handlers defined in the example.  \n  \n [!code-cs[System.Windows.Forms.RectangleToScreen#2](~/add/codesnippet/csharp/p-system.windows.forms.c_50_1.cs)]\n [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/add/codesnippet/cpp/p-system.windows.forms.c_50_1.cpp)]\n [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/add/codesnippet/visualbasic/p-system.windows.forms.c_50_1.vb)]"
  syntax:
    content: public static System.Windows.Forms.MouseButtons MouseButtons { get; }
    return:
      type: System.Windows.Forms.MouseButtons
      description: "비트 조합 된 <xref href=&quot;System.Windows.Forms.MouseButtons&quot;> </xref> 열거형 값입니다. 기본값은 <xref href=&quot;System.Windows.Forms.MouseButtons&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.MouseButtons*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MouseCaptureChanged
  id: MouseCaptureChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MouseCaptureChanged
  nameWithType: Control.MouseCaptureChanged
  fullName: System.Windows.Forms.Control.MouseCaptureChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤이 마우스 캡처를 잃을 때 발생 합니다."
  remarks: "드문 경우 예기치 않은 입력을 검색 해야 합니다. 예를 들어 다음과 같은 시나리오를 고려 합니다.      -마우스 작업을 사용 하는 동안 사용자는 Windows 키 또는 CTRL + ESC를 눌러 시작 메뉴를 엽니다.      -마우스 작업을 사용 하는 동안 사용자가 ALT + TAB을 눌러 다른 프로그램으로 전환 합니다.      -마우스 작업을 사용 하는 동안 다른 프로그램에는 창 또는 현재 응용 프로그램에서 포커스를 사용 하는 메시지 상자가 표시 됩니다.       폼 또는 컨트롤에서 마우스를 누르고 마우스 작업 포함 하거나 수행 마우스 끌기 작업. 컨트롤이 이러한 마우스 캡처를 손실 또는 양식 검색할 수 있는 경우와 관련 된 예기치 않은 시나리오 MouseCaptureChanged 이벤트를 사용할 수 있습니다."
  example:
  - "The following code example demonstrates the MouseCaptureChanged event for a <xref:System.Windows.Forms.Button> control.  \n  \n [!code-cs[System.Windows.Forms.Control.MouseCaptureChanged#1](~/add/codesnippet/csharp/mousecapturechanged/form1.cs#1)]\n [!code-vb[System.Windows.Forms.Control.MouseCaptureChanged#1](~/add/codesnippet/visualbasic/mousecapturechanged/form1.vb#1)]  \n  \n To test this example, run it in the debugger by pressing F5. Open the **Output** window in Visual Studio so that you can see when events are raised. Click the <xref:System.Windows.Forms.Button> and notice the following output.  \n  \n `button1_MouseDown`  \n  \n `button1_MouseUp`  \n  \n `button1_MouseCaptureChanged`  \n  \n Now, click and hold the left mouse button on the <xref:System.Windows.Forms.Button> control. While still clicking the mouse, press ALT+TAB to switch to another program. Notice that the MouseCaptureChanged event is raised enabling you to potentially handle this scenario. Depending on your actions, the <xref:System.Windows.Forms.Control.MouseUp> event might not be raised. You can also try this test with the Windows key or CTRL+ESC.  \n  \n `button1_MouseDown`  \n  \n `button1_MouseCaptureChanged`"
  syntax:
    content: public event EventHandler MouseCaptureChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MouseClick
  id: MouseClick
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MouseClick
  nameWithType: Control.MouseClick
  fullName: System.Windows.Forms.Control.MouseClick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤을 마우스로 클릭할 때 발생 합니다."
  remarks: "다음과 같은 일련의 컨트롤에서 이벤트를 발생 시킵니다 일반적으로 커서가 컨트롤 위에 있을 때 마우스 단추를 누르면: 1입니다.  <xref:System.Windows.Forms.Control.MouseDown>이벤트입니다.</xref:System.Windows.Forms.Control.MouseDown>      2.  <xref:System.Windows.Forms.Control.Click>이벤트입니다.</xref:System.Windows.Forms.Control.Click>      3.  MouseClick 이벤트입니다.      4.  <xref:System.Windows.Forms.Control.MouseUp>이벤트입니다.</xref:System.Windows.Forms.Control.MouseUp>       이 위해서는 컨트롤의 클래스에서 다양 한 이벤트를 해제할 수 없습니다.       두 번 클릭을 시간 내에 사용자의 운영 체제의 마우스 설정에서 결정 된 대로 생성 됩니다 발생 하는 한 <xref:System.Windows.Forms.Control.MouseDoubleClick>두 번째 MouseClick 이벤트 대신 이벤트.</xref:System.Windows.Forms.Control.MouseDoubleClick>      > [!IMPORTANT] > <xref:System.Windows.Forms.Control.Click>이벤트는 컨트롤의 이벤트를 논리적으로 더 높은 수준의.</xref:System.Windows.Forms.Control.Click> 이러한 이벤트는 대개 컨트롤에 포커스가 있을 때 ENTER 키를 누르는 것과 같은 다른 작업에 의해 발생 합니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseClick event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the MouseClick event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#54](~/add/codesnippet/csharp/e-system.windows.forms.c_15_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#54](~/add/codesnippet/visualbasic/e-system.windows.forms.c_15_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.MouseEventHandler MouseClick;
    return:
      type: System.Windows.Forms.MouseEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MouseDoubleClick
  id: MouseDoubleClick
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MouseDoubleClick
  nameWithType: Control.MouseDoubleClick
  fullName: System.Windows.Forms.Control.MouseDoubleClick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤을 두 번 마우스로 클릭할 때 발생 합니다."
  remarks: "MouseDoubleClick 이벤트 커서가 컨트롤 위에 있을 때 두 번 연속적으로에서 마우스 단추를 누를 때 발생 합니다. 시간 간격을 두 번 클릭에서 두 번 클릭을 구분 하는 사용자의 운영 체제의 마우스 설정에서 결정 됩니다.       이러한 사용자 작업이 실행 될 때 다음과 같은 일련의 이벤트는 컨트롤에 의해 발생 합니다. 1.  <xref:System.Windows.Forms.Control.MouseDown>이벤트입니다.</xref:System.Windows.Forms.Control.MouseDown>      2.  <xref:System.Windows.Forms.Control.Click>이벤트입니다.</xref:System.Windows.Forms.Control.Click>      3.  <xref:System.Windows.Forms.Control.MouseClick>이벤트입니다.</xref:System.Windows.Forms.Control.MouseClick>      4.  <xref:System.Windows.Forms.Control.MouseUp>이벤트입니다.</xref:System.Windows.Forms.Control.MouseUp>      5.  <xref:System.Windows.Forms.Control.MouseDown>이벤트입니다.</xref:System.Windows.Forms.Control.MouseDown>      6.  <xref:System.Windows.Forms.Control.DoubleClick>이벤트입니다.</xref:System.Windows.Forms.Control.DoubleClick>      7.  MouseDoubleClick 이벤트입니다.      8.  <xref:System.Windows.Forms.Control.MouseUp>이벤트입니다.</xref:System.Windows.Forms.Control.MouseUp>       이 위해서는 컨트롤의 클래스에서 다양 한 이벤트를 해제할 수 없습니다.      > [!IMPORTANT] > <xref:System.Windows.Forms.Control.DoubleClick>이벤트는 컨트롤의 이벤트를 논리적으로 더 높은 수준의.</xref:System.Windows.Forms.Control.DoubleClick> 이러한 바로 가기 키 조합 등의 다른 사용자 작업에 의해 발생할 수 있습니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseDoubleClick event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the MouseDoubleClick event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#55](~/add/codesnippet/csharp/e-system.windows.forms.c_0_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#55](~/add/codesnippet/visualbasic/e-system.windows.forms.c_0_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.MouseEventHandler MouseDoubleClick;
    return:
      type: System.Windows.Forms.MouseEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MouseDown
  id: MouseDown
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MouseDown
  nameWithType: Control.MouseDown
  fullName: System.Windows.Forms.Control.MouseDown
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "마우스 포인터가 컨트롤 위에 마우스 단추를 누를 때 발생 합니다."
  remarks: "마우스 이벤트는 다음 순서 대로 발생 합니다. 1.  <xref:System.Windows.Forms.Control.MouseEnter>2입니다.</xref:System.Windows.Forms.Control.MouseEnter>  <xref:System.Windows.Forms.Control.MouseMove>3입니다.</xref:System.Windows.Forms.Control.MouseMove>  <xref:System.Windows.Forms.Control.MouseHover>/ MouseDown / <xref:System.Windows.Forms.Control.MouseWheel>4.</xref:System.Windows.Forms.Control.MouseWheel></xref:System.Windows.Forms.Control.MouseHover>  <xref:System.Windows.Forms.Control.MouseUp>5입니다.</xref:System.Windows.Forms.Control.MouseUp>  <xref:System.Windows.Forms.Control.MouseLeave>> [!NOTE] >에 대 한 다음과 같은 이벤트가 발생 하지 않습니다는 <xref:System.Windows.Forms.TabControl>하나 이상 있으면 클래스 <xref:System.Windows.Forms.TabPage>에 <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName>컬렉션: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>MouseDown, <xref:System.Windows.Forms.Control.MouseUp> <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter> <xref:System.Windows.Forms.Control.MouseLeave>및 <xref:System.Windows.Forms.Control.MouseMove>.</xref:System.Windows.Forms.Control.MouseMove> </xref:System.Windows.Forms.Control.MouseLeave> </xref:System.Windows.Forms.Control.MouseEnter> </xref:System.Windows.Forms.Control.MouseHover> </xref:System.Windows.Forms.Control.MouseUp> </xref:System.Windows.Forms.Control.DoubleClick> </xref:System.Windows.Forms.Control.Click> </xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabControl></xref:System.Windows.Forms.Control.MouseLeave> 둘 이상 있는 경우 <xref:System.Windows.Forms.TabPage>컬렉션에서 사용자 탭 컨트롤의 헤더 상호 작용 하 고 (여기서는 <xref:System.Windows.Forms.TabPage>이름이 표시), <xref:System.Windows.Forms.TabControl>적절 한 이벤트를 발생 시킵니다.</xref:System.Windows.Forms.TabControl> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabPage> 그러나 사용자 상호 작용 탭 페이지의 클라이언트 영역 내에 있으면는 <xref:System.Windows.Forms.TabPage>적절 한 이벤트를 발생 시킵니다.</xref:System.Windows.Forms.TabPage>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>. A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and MouseDown events that occur. To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event. In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs. Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well. Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.  \n  \n [!code-cpp[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/cpp/e-system.windows.forms.c_13_1.cpp)]\n [!code-cs[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/csharp/e-system.windows.forms.c_13_1.cs)]\n [!code-vb[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_13_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.MouseEventHandler MouseDown;
    return:
      type: System.Windows.Forms.MouseEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MouseEnter
  id: MouseEnter
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MouseEnter
  nameWithType: Control.MouseEnter
  fullName: System.Windows.Forms.Control.MouseEnter
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "마우스 포인터가 컨트롤에 들어가면 발생 합니다."
  remarks: "마우스 이벤트는 다음 순서 대로 발생 합니다. 1.  MouseEnter 2입니다.  <xref:System.Windows.Forms.Control.MouseMove>3입니다.</xref:System.Windows.Forms.Control.MouseMove>  <xref:System.Windows.Forms.Control.MouseHover>/ <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>      4.</xref:System.Windows.Forms.Control.MouseWheel></xref:System.Windows.Forms.Control.MouseDown></xref:System.Windows.Forms.Control.MouseHover>  <xref:System.Windows.Forms.Control.MouseUp>5입니다.</xref:System.Windows.Forms.Control.MouseUp>  <xref:System.Windows.Forms.Control.MouseLeave>> [!NOTE] >에 대 한 다음과 같은 이벤트가 발생 하지 않습니다는 <xref:System.Windows.Forms.TabControl>하나 이상 있으면 클래스 <xref:System.Windows.Forms.TabPage>에 <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName>컬렉션: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick> <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>MouseEnter <xref:System.Windows.Forms.Control.MouseLeave>및 <xref:System.Windows.Forms.Control.MouseMove>.</xref:System.Windows.Forms.Control.MouseMove> </xref:System.Windows.Forms.Control.MouseLeave> </xref:System.Windows.Forms.Control.MouseHover> </xref:System.Windows.Forms.Control.MouseUp> </xref:System.Windows.Forms.Control.MouseDown> </xref:System.Windows.Forms.Control.DoubleClick> </xref:System.Windows.Forms.Control.Click> </xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabControl></xref:System.Windows.Forms.Control.MouseLeave> 둘 이상 있는 경우 <xref:System.Windows.Forms.TabPage>컬렉션에서 사용자 탭 컨트롤의 헤더 상호 작용 하 고 (여기서는 <xref:System.Windows.Forms.TabPage>이름이 표시), <xref:System.Windows.Forms.TabControl>적절 한 이벤트를 발생 시킵니다.</xref:System.Windows.Forms.TabControl> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabPage> 그러나 사용자 상호 작용 탭 페이지의 클라이언트 영역 내에 있으면는 <xref:System.Windows.Forms.TabPage>적절 한 이벤트를 발생 시킵니다.</xref:System.Windows.Forms.TabPage>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>. A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur. To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event. In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs. Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well. Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.  \n  \n [!code-cpp[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/cpp/e-system.windows.forms.c_2_1.cpp)]\n [!code-cs[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/csharp/e-system.windows.forms.c_2_1.cs)]\n [!code-vb[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_2_1.vb)]"
  syntax:
    content: public event EventHandler MouseEnter;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MouseHover
  id: MouseHover
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MouseHover
  nameWithType: Control.MouseHover
  fullName: System.Windows.Forms.Control.MouseHover
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "마우스 포인터가 컨트롤 위에 있을 때 발생 합니다."
  remarks: "Mousehover 일반적인 사용 (&quot;호버 사각형&quot;)는 컨트롤 주위의 지정된 된 영역 내에서 컨트롤에서 마우스를 놓을 때 도구 설명이 표시 되려고 합니다. 이 이벤트를 발생 하는 데 필요한 일시 중지 하 여 밀리초 단위로 지정 된는 <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A>속성.</xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A>       MouseHover 이벤트 정의 되 고 연결 하 여 검색 된 <xref:System.Windows.Forms.SystemInformation.MouseHoverSize%2A>및 <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A>속성.</xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> </xref:System.Windows.Forms.SystemInformation.MouseHoverSize%2A>       마우스 이벤트는 다음 순서 대로 발생 합니다. 1.  <xref:System.Windows.Forms.Control.MouseEnter>2입니다.</xref:System.Windows.Forms.Control.MouseEnter>  <xref:System.Windows.Forms.Control.MouseMove>3입니다.</xref:System.Windows.Forms.Control.MouseMove>  MouseHover / <xref:System.Windows.Forms.Control.MouseDown>/ <xref:System.Windows.Forms.Control.MouseWheel>4.</xref:System.Windows.Forms.Control.MouseWheel> </xref:System.Windows.Forms.Control.MouseDown>  <xref:System.Windows.Forms.Control.MouseUp>5입니다.</xref:System.Windows.Forms.Control.MouseUp>  <xref:System.Windows.Forms.Control.MouseLeave>> [!NOTE] >에 대 한 다음과 같은 이벤트가 발생 하지 않습니다는 <xref:System.Windows.Forms.TabControl>하나 이상 있으면 클래스 <xref:System.Windows.Forms.TabPage>에 <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName>컬렉션: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick> <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>MouseHover, <xref:System.Windows.Forms.Control.MouseEnter> <xref:System.Windows.Forms.Control.MouseLeave>및 <xref:System.Windows.Forms.Control.MouseMove>.</xref:System.Windows.Forms.Control.MouseMove> </xref:System.Windows.Forms.Control.MouseLeave> </xref:System.Windows.Forms.Control.MouseEnter> </xref:System.Windows.Forms.Control.MouseUp> </xref:System.Windows.Forms.Control.MouseDown> </xref:System.Windows.Forms.Control.DoubleClick> </xref:System.Windows.Forms.Control.Click> </xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabControl></xref:System.Windows.Forms.Control.MouseLeave> 둘 이상 있는 경우 <xref:System.Windows.Forms.TabPage>컬렉션에서 사용자 탭 컨트롤의 헤더 상호 작용 하 고 (여기서는 <xref:System.Windows.Forms.TabPage>이름이 표시), <xref:System.Windows.Forms.TabControl>적절 한 이벤트를 발생 시킵니다.</xref:System.Windows.Forms.TabControl> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabPage> 그러나 사용자 상호 작용 탭 페이지의 클라이언트 영역 내에 있으면는 <xref:System.Windows.Forms.TabPage>적절 한 이벤트를 발생 시킵니다.</xref:System.Windows.Forms.TabPage>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>. A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur. To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event. In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs. Additional mouse events, like MouseHover, are identified on screen as well. Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.  \n  \n [!code-cpp[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/cpp/e-system.windows.forms.c_53_1.cpp)]\n [!code-cs[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/csharp/e-system.windows.forms.c_53_1.cs)]\n [!code-vb[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_53_1.vb)]"
  syntax:
    content: public event EventHandler MouseHover;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MouseLeave
  id: MouseLeave
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MouseLeave
  nameWithType: Control.MouseLeave
  fullName: System.Windows.Forms.Control.MouseLeave
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "마우스 포인터가 컨트롤을 벗어나면 발생 합니다."
  remarks: "마우스 이벤트는 다음 순서 대로 발생 합니다. 1.  <xref:System.Windows.Forms.Control.MouseEnter>2입니다.</xref:System.Windows.Forms.Control.MouseEnter>  <xref:System.Windows.Forms.Control.MouseMove>3입니다.</xref:System.Windows.Forms.Control.MouseMove>  <xref:System.Windows.Forms.Control.MouseHover>/ <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>      4.</xref:System.Windows.Forms.Control.MouseWheel></xref:System.Windows.Forms.Control.MouseDown></xref:System.Windows.Forms.Control.MouseHover>  <xref:System.Windows.Forms.Control.MouseUp>5입니다.</xref:System.Windows.Forms.Control.MouseUp>  MouseLeave > [!NOTE] >에 대 한 다음과 같은 이벤트가 발생 하지 않습니다는 <xref:System.Windows.Forms.TabControl>하나 이상 있으면 클래스 <xref:System.Windows.Forms.TabPage>에 <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName>컬렉션: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick> <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp> <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>MouseLeave 및 <xref:System.Windows.Forms.Control.MouseMove>.</xref:System.Windows.Forms.Control.MouseMove> </xref:System.Windows.Forms.Control.MouseEnter> </xref:System.Windows.Forms.Control.MouseHover> </xref:System.Windows.Forms.Control.MouseUp> </xref:System.Windows.Forms.Control.MouseDown> </xref:System.Windows.Forms.Control.DoubleClick> </xref:System.Windows.Forms.Control.Click> </xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabControl> 둘 이상 있는 경우 <xref:System.Windows.Forms.TabPage>컬렉션에서 사용자 탭 컨트롤의 헤더 상호 작용 하 고 (여기서는 <xref:System.Windows.Forms.TabPage>이름이 표시), <xref:System.Windows.Forms.TabControl>적절 한 이벤트를 발생 시킵니다.</xref:System.Windows.Forms.TabControl> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabPage> 그러나 사용자 상호 작용 탭 페이지의 클라이언트 영역 내에 있으면는 <xref:System.Windows.Forms.TabPage>적절 한 이벤트를 발생 시킵니다.</xref:System.Windows.Forms.TabPage>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>. A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur. To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event. In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs. Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well. Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.  \n  \n [!code-cpp[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/cpp/e-system.windows.forms.c_27_1.cpp)]\n [!code-cs[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/csharp/e-system.windows.forms.c_27_1.cs)]\n [!code-vb[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_27_1.vb)]"
  syntax:
    content: public event EventHandler MouseLeave;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MouseMove
  id: MouseMove
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MouseMove
  nameWithType: Control.MouseMove
  fullName: System.Windows.Forms.Control.MouseMove
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "마우스 포인터가 컨트롤 위로 이동할 때 발생 합니다."
  remarks: "MouseMove의 일반적 사용 범위는 컨트롤의 색을 변경 또는 컨트롤 주위에 나타나는 사각형을 그리는 데입니다.       마우스 이벤트는 다음 순서 대로 발생 합니다. 1.  <xref:System.Windows.Forms.Control.MouseEnter>2입니다.</xref:System.Windows.Forms.Control.MouseEnter>  MouseMove 3입니다.  <xref:System.Windows.Forms.Control.MouseHover>/ <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>      4.</xref:System.Windows.Forms.Control.MouseWheel></xref:System.Windows.Forms.Control.MouseDown></xref:System.Windows.Forms.Control.MouseHover>  <xref:System.Windows.Forms.Control.MouseUp>5입니다.</xref:System.Windows.Forms.Control.MouseUp>  <xref:System.Windows.Forms.Control.MouseLeave>> [!NOTE] >에 대 한 다음과 같은 이벤트가 발생 하지 않습니다는 <xref:System.Windows.Forms.TabControl>하나 이상 있으면 클래스 <xref:System.Windows.Forms.TabPage>에 <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName>컬렉션: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave>및 MouseMove.</xref:System.Windows.Forms.Control.MouseLeave> </xref:System.Windows.Forms.Control.MouseEnter> </xref:System.Windows.Forms.Control.MouseHover> </xref:System.Windows.Forms.Control.MouseUp> </xref:System.Windows.Forms.Control.MouseDown> </xref:System.Windows.Forms.Control.DoubleClick> </xref:System.Windows.Forms.Control.Click> </xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabControl></xref:System.Windows.Forms.Control.MouseLeave> 둘 이상 있는 경우 <xref:System.Windows.Forms.TabPage>컬렉션에서 사용자 탭 컨트롤의 헤더 상호 작용 하 고 (여기서는 <xref:System.Windows.Forms.TabPage>이름이 표시), <xref:System.Windows.Forms.TabControl>적절 한 이벤트를 발생 시킵니다.</xref:System.Windows.Forms.TabControl> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabPage> 그러나 사용자 상호 작용 탭 페이지의 클라이언트 영역 내에 있으면는 <xref:System.Windows.Forms.TabPage>적절 한 이벤트를 발생 시킵니다.</xref:System.Windows.Forms.TabPage>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>. A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each MouseMove and <xref:System.Windows.Forms.Control.MouseDown> events that occur. To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event. In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs. Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well. Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.  \n  \n [!code-cpp[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/cpp/e-system.windows.forms.c_80_1.cpp)]\n [!code-cs[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/csharp/e-system.windows.forms.c_80_1.cs)]\n [!code-vb[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_80_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.MouseEventHandler MouseMove;
    return:
      type: System.Windows.Forms.MouseEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MousePosition
  id: MousePosition
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MousePosition
  nameWithType: Control.MousePosition
  fullName: System.Windows.Forms.Control.MousePosition
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "화면 좌표에서 마우스 커서의 위치를 가져옵니다."
  remarks: "MousePosition 속성은 반환 된 <xref:System.Drawing.Point>은 속성이 참조 하는 시간에 마우스 커서 위치를 나타내는입니다.</xref:System.Drawing.Point> 좌표는 컨트롤을 기준으로 하지 않고 화면에서의 위치와 커서가 컨트롤 위에 위치 하는지 여부에 관계 없이 반환 됩니다. 화면의 왼쪽 위 모퉁이의 좌표는 0, 0입니다.       MousePosition 속성은 동일는 <xref:System.Windows.Forms.Cursor.Position%2A?displayProperty=fullName>속성.</xref:System.Windows.Forms.Cursor.Position%2A?displayProperty=fullName>"
  example:
  - "The following code example puts a <xref:System.Windows.Forms.TreeNode> label into an editable state when the user presses ALT+E while the mouse cursor is over the tree node. After the user is done editing the label, the labels cannot be edited again until the ALT+E key combination is pressed again. This example requires that you have a <xref:System.Windows.Forms.TreeView> on a <xref:System.Windows.Forms.Form>. The tree view should also have at least one <xref:System.Windows.Forms.TreeNode> in its <xref:System.Windows.Forms.TreeView.Nodes%2A> collection.  \n  \n [!code-cs[Windows.Forms.Control Members4#3](~/add/codesnippet/csharp/p-system.windows.forms.c_64_1.cs)]\n [!code-vb[Windows.Forms.Control Members4#3](~/add/codesnippet/visualbasic/p-system.windows.forms.c_64_1.vb)]\n [!code-cpp[Windows.Forms.Control Members4#3](~/add/codesnippet/cpp/p-system.windows.forms.c_64_1.cpp)]"
  syntax:
    content: public static System.Drawing.Point MousePosition { get; }
    return:
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> 화면의 왼쪽 위 모퉁이 기준으로 마우스 커서의 좌표가 들어 있는입니다."
  overload: System.Windows.Forms.Control.MousePosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MouseUp
  id: MouseUp
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MouseUp
  nameWithType: Control.MouseUp
  fullName: System.Windows.Forms.Control.MouseUp
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "마우스 포인터가 컨트롤 위에 있을 때 마우스 단추를 놓으면 발생 합니다."
  remarks: "마우스 이벤트는 다음 순서 대로 발생 합니다. 1.  <xref:System.Windows.Forms.Control.MouseEnter>2입니다.</xref:System.Windows.Forms.Control.MouseEnter>  <xref:System.Windows.Forms.Control.MouseMove>3입니다.</xref:System.Windows.Forms.Control.MouseMove>  <xref:System.Windows.Forms.Control.MouseHover>/ <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>      4.</xref:System.Windows.Forms.Control.MouseWheel></xref:System.Windows.Forms.Control.MouseDown></xref:System.Windows.Forms.Control.MouseHover>  MouseUp 5입니다.  <xref:System.Windows.Forms.Control.MouseLeave>> [!NOTE] >에 대 한 다음과 같은 이벤트가 발생 하지 않습니다는 <xref:System.Windows.Forms.TabControl>하나 이상 있으면 클래스 <xref:System.Windows.Forms.TabPage>에 <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName>컬렉션: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick> <xref:System.Windows.Forms.Control.MouseDown>, MouseUp, <xref:System.Windows.Forms.Control.MouseHover> <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave>및 <xref:System.Windows.Forms.Control.MouseMove>.</xref:System.Windows.Forms.Control.MouseMove> </xref:System.Windows.Forms.Control.MouseLeave> </xref:System.Windows.Forms.Control.MouseEnter> </xref:System.Windows.Forms.Control.MouseHover> </xref:System.Windows.Forms.Control.MouseDown> </xref:System.Windows.Forms.Control.DoubleClick> </xref:System.Windows.Forms.Control.Click> </xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabControl></xref:System.Windows.Forms.Control.MouseLeave> 둘 이상 있는 경우 <xref:System.Windows.Forms.TabPage>컬렉션에서 사용자 탭 컨트롤의 헤더 상호 작용 하 고 (여기서는 <xref:System.Windows.Forms.TabPage>이름이 표시), <xref:System.Windows.Forms.TabControl>적절 한 이벤트를 발생 시킵니다.</xref:System.Windows.Forms.TabControl> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabPage> 그러나 사용자 상호 작용 탭 페이지의 클라이언트 영역 내에 있으면는 <xref:System.Windows.Forms.TabPage>적절 한 이벤트를 발생 시킵니다.</xref:System.Windows.Forms.TabPage>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>. A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur. To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event. In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs. Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well. Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.  \n  \n [!code-cpp[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/cpp/e-system.windows.forms.c_42_1.cpp)]\n [!code-cs[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/csharp/e-system.windows.forms.c_42_1.cs)]\n [!code-vb[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_42_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.MouseEventHandler MouseUp;
    return:
      type: System.Windows.Forms.MouseEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MouseWheel
  id: MouseWheel
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MouseWheel
  nameWithType: Control.MouseWheel
  fullName: System.Windows.Forms.Control.MouseWheel
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 포커스가 있을 때 마우스 휠을 움직이면 발생 합니다."
  remarks: "When handling the MouseWheel event it is important to follow the user interface (UI) standards associated with the mouse wheel. The <xref:System.Windows.Forms.MouseEventArgs.Delta%2A?displayProperty=fullName> property value indicates the amount the mouse wheel has been moved. The UI should scroll when the accumulated delta is plus or minus 120. The UI should scroll the number of logical lines returned by the <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=fullName> property for every delta value reached. You can also scroll more smoothly in smaller that 120 unit increments, however the ratio should remain constant, that is <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=fullName> lines scrolled per 120 delta units of wheel movement.  \n  \n For more information about handling mouse wheel messages, see the[WM_MOUSEWHEEL](http://msdn.microsoft.com/library/windows/desktop/ms645617\\(v=vs.85\\).aspx)topic.  \n  \n Mouse events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.MouseEnter>  \n  \n2.  <xref:System.Windows.Forms.Control.MouseMove>  \n  \n3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / MouseWheel  \n  \n4.  <xref:System.Windows.Forms.Control.MouseUp>  \n  \n5.  <xref:System.Windows.Forms.Control.MouseLeave>  \n  \n For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>. A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur. To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event. In addition, the graphic path is scrolled up or down when the MouseWheel event occurs. Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well. Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.  \n  \n [!code-cpp[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/cpp/e-system.windows.forms.c_38_1.cpp)]\n [!code-cs[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/csharp/e-system.windows.forms.c_38_1.cs)]\n [!code-vb[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_38_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.MouseEventHandler MouseWheel;
    return:
      type: System.Windows.Forms.MouseEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Move
  id: Move
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Move
  nameWithType: Control.Move
  fullName: System.Windows.Forms.Control.Move
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤이 이동 하는 경우 발생 합니다."
  remarks: "이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example uses the Move event to display the location of the form in screen coordinates on the caption bar of the form.  \n  \n [!code-cpp[Control.Move#1](~/add/codesnippet/cpp/e-system.windows.forms.c_23_1.cpp)]\n [!code-vb[Control.Move#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_23_1.vb)]\n [!code-cs[Control.Move#1](~/add/codesnippet/csharp/e-system.windows.forms.c_23_1.cs)]"
  syntax:
    content: public event EventHandler Move;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Name
  id: Name
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Name
  nameWithType: Control.Name
  fullName: System.Windows.Forms.Control.Name
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 이름을 가져오거나 설정 합니다."
  remarks: "Name 속성은 사용할 수 런타임 시 개체를 확인할 이름 보다는 형식 및 프로그래밍 이름입니다. Name 속성을 반환 하기 때문에 <xref:System.String>유형, 대/소문자 스타일 논리 문을에서 확인할 수 있습니다 (`Select` 에 문을 [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], `switch` 에 문을 [!INCLUDE[csprcs](~/add/includes/csprcs-md.md)] 및 [!INCLUDE[vcprvc](~/add/includes/vcprvc-md.md)]).</xref:System.String>"
  example:
  - "The following code example displays the Name of a control in a <xref:System.Windows.Forms.MessageBox> when the control is added or removed from a form.  \n  \n [!code-cpp[Control.ControlRemoved#1](~/add/codesnippet/cpp/p-system.windows.forms.c_14_1.cpp)]\n [!code-vb[Control.ControlRemoved#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_14_1.vb)]\n [!code-cs[Control.ControlRemoved#1](~/add/codesnippet/csharp/p-system.windows.forms.c_14_1.cs)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "컨트롤의 이름입니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Windows.Forms.Control.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)
  id: NotifyInvalidate(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: NotifyInvalidate(Rectangle)
  nameWithType: Control.NotifyInvalidate(Rectangle)
  fullName: System.Windows.Forms.Control.NotifyInvalidate(Rectangle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.Invalidated&quot;> </xref> 무효화할 컨트롤의 지정된 된 영역을 사용 하 여 이벤트입니다."
  syntax:
    content: protected virtual void NotifyInvalidate (System.Drawing.Rectangle invalidatedArea);
    parameters:
    - id: invalidatedArea
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 무효화할 영역을 나타내는입니다."
  overload: System.Windows.Forms.Control.NotifyInvalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)
  id: OnAutoSizeChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnAutoSizeChanged(EventArgs)
  nameWithType: Control.OnAutoSizeChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnAutoSizeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.AutoSizeChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnAutoSizeChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnAutoSizeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnAutoSizeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)
  id: OnBackColorChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnBackColorChanged(EventArgs)
  nameWithType: Control.OnBackColorChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnBackColorChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.BackColorChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnBackColorChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_30_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_30_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_30_1.vb)]"
  syntax:
    content: protected virtual void OnBackColorChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnBackColorChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)
  id: OnBackgroundImageChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnBackgroundImageChanged(EventArgs)
  nameWithType: Control.OnBackgroundImageChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnBackgroundImageChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.BackgroundImageChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnBackgroundImageChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_60_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_60_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_60_1.vb)]"
  syntax:
    content: protected virtual void OnBackgroundImageChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnBackgroundImageChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)
  id: OnBackgroundImageLayoutChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnBackgroundImageLayoutChanged(EventArgs)
  nameWithType: Control.OnBackgroundImageLayoutChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.BackgroundImageLayoutChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnBackgroundImageLayoutChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnBackgroundImageLayoutChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnBackgroundImageLayoutChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)
  id: OnBindingContextChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnBindingContextChanged(EventArgs)
  nameWithType: Control.OnBindingContextChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnBindingContextChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.BindingContextChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnBindingContextChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnBindingContextChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnBindingContextChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)
  id: OnCausesValidationChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnCausesValidationChanged(EventArgs)
  nameWithType: Control.OnCausesValidationChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnCausesValidationChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.CausesValidationChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnCausesValidationChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_17_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_17_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_17_1.vb)]"
  syntax:
    content: protected virtual void OnCausesValidationChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnCausesValidationChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  id: OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnChangeUICues(UICuesEventArgs)
  nameWithType: Control.OnChangeUICues(UICuesEventArgs)
  fullName: System.Windows.Forms.Control.OnChangeUICues(UICuesEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.ChangeUICues&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnChangeUICues 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnChangeUICues (System.Windows.Forms.UICuesEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.UICuesEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.UICuesEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.OnChangeUICues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnClick(System.EventArgs)
  id: OnClick(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnClick(EventArgs)
  nameWithType: Control.OnClick(EventArgs)
  fullName: System.Windows.Forms.Control.OnClick(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.Click&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnClick 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example demonstrates overriding the OnClick method in a derived class. To run the example, paste the following code after a form class, in the same file. Add a textbox of type `SingleClickTextBox` to the form.  \n  \n [!code-cs[System.Windows.Forms.ControlOnClick#1](~/add/codesnippet/csharp/m-system.windows.forms.c_15_1.cs)]\n [!code-vb[System.Windows.Forms.ControlOnClick#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_15_1.vb)]\n [!code-cpp[System.Windows.Forms.ControlOnClick#1](~/add/codesnippet/cpp/m-system.windows.forms.c_15_1.cpp)]  \n  \n The following code example shows one of the many uses of the <xref:System.Windows.Forms.Control.Click> event and event handler.  \n  \n [!code-cpp[Control.FindForm#1](~/add/codesnippet/cpp/m-system.windows.forms.c_15_2.cpp)]\n [!code-vb[Control.FindForm#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_15_2.vb)]\n [!code-cs[Control.FindForm#1](~/add/codesnippet/csharp/m-system.windows.forms.c_15_2.cs)]"
  syntax:
    content: protected virtual void OnClick (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)
  id: OnClientSizeChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnClientSizeChanged(EventArgs)
  nameWithType: Control.OnClientSizeChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnClientSizeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.ClientSizeChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnClientSizeChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnClientSizeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnClientSizeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)
  id: OnContextMenuChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnContextMenuChanged(EventArgs)
  nameWithType: Control.OnContextMenuChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnContextMenuChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.ContextMenuChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnContextMenuChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_6_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_6_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_6_1.vb)]"
  syntax:
    content: protected virtual void OnContextMenuChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnContextMenuChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)
  id: OnContextMenuStripChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnContextMenuStripChanged(EventArgs)
  nameWithType: Control.OnContextMenuStripChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnContextMenuStripChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.ContextMenuStripChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnContextMenuStripChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnContextMenuStripChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnContextMenuStripChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)
  id: OnControlAdded(System.Windows.Forms.ControlEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnControlAdded(ControlEventArgs)
  nameWithType: Control.OnControlAdded(ControlEventArgs)
  fullName: System.Windows.Forms.Control.OnControlAdded(ControlEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.ControlAdded&quot;> </xref> 이벤트입니다."
  remarks: "자식 컨트롤이 컨트롤에 추가 될 때 호출 됩니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnControlAdded 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example uses <xref:System.Windows.Forms.Control.ControlAdded> to add a control to a form and displays the name of the added control in a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-cpp[Control.ControlRemoved#1](~/add/codesnippet/cpp/0fc8c7fb-6974-4f10-8201-_1.cpp)]\n [!code-vb[Control.ControlRemoved#1](~/add/codesnippet/visualbasic/0fc8c7fb-6974-4f10-8201-_1.vb)]\n [!code-cs[Control.ControlRemoved#1](~/add/codesnippet/csharp/0fc8c7fb-6974-4f10-8201-_1.cs)]"
  syntax:
    content: protected virtual void OnControlAdded (System.Windows.Forms.ControlEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.ControlEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.ControlEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.OnControlAdded*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)
  id: OnControlRemoved(System.Windows.Forms.ControlEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnControlRemoved(ControlEventArgs)
  nameWithType: Control.OnControlRemoved(ControlEventArgs)
  fullName: System.Windows.Forms.Control.OnControlRemoved(ControlEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.ControlRemoved&quot;> </xref> 이벤트입니다."
  remarks: "자식 컨트롤이 컨트롤에서 제거 될 때 호출 됩니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnControlRemoved 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example uses <xref:System.Windows.Forms.Control.ControlRemoved> to remove a control from a form and displays the name of the removed control in a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-cpp[Control.ControlRemoved#1](~/add/codesnippet/cpp/ab705c0a-755a-4539-b414-_1.cpp)]\n [!code-vb[Control.ControlRemoved#1](~/add/codesnippet/visualbasic/ab705c0a-755a-4539-b414-_1.vb)]\n [!code-cs[Control.ControlRemoved#1](~/add/codesnippet/csharp/ab705c0a-755a-4539-b414-_1.cs)]"
  syntax:
    content: protected virtual void OnControlRemoved (System.Windows.Forms.ControlEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.ControlEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.ControlEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.OnControlRemoved*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnCreateControl
  id: OnCreateControl
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnCreateControl()
  nameWithType: Control.OnCreateControl()
  fullName: System.Windows.Forms.Control.OnCreateControl()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref:System.Windows.Forms.Control.CreateControl*>메서드.</xref:System.Windows.Forms.Control.CreateControl*>"
  remarks: "OnCreateControl 메서드는 컨트롤을 처음으로 만들어질 때 호출 됩니다.       OnCreateControl 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnCreateControl ();
    parameters: []
  overload: System.Windows.Forms.Control.OnCreateControl*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)
  id: OnCursorChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnCursorChanged(EventArgs)
  nameWithType: Control.OnCursorChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnCursorChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.CursorChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnCursorChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_103_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_103_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_103_1.vb)]"
  syntax:
    content: protected virtual void OnCursorChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnCursorChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnDockChanged(System.EventArgs)
  id: OnDockChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnDockChanged(EventArgs)
  nameWithType: Control.OnDockChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnDockChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.DockChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnDockChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_25_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_25_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_25_1.vb)]"
  syntax:
    content: protected virtual void OnDockChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnDockChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)
  id: OnDoubleClick(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnDoubleClick(EventArgs)
  nameWithType: Control.OnDoubleClick(EventArgs)
  fullName: System.Windows.Forms.Control.OnDoubleClick(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.DoubleClick&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnDoubleClick 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example uses the <xref:System.Windows.Forms.Control.DoubleClick> event of a <xref:System.Windows.Forms.ListBox> to load text files listed in the <xref:System.Windows.Forms.ListBox> into a <xref:System.Windows.Forms.TextBox> control.  \n  \n [!code-cs[Control.DoubleClick#1](~/add/codesnippet/csharp/m-system.windows.forms.c_63_1.cs)]\n [!code-vb[Control.DoubleClick#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_63_1.vb)]\n [!code-cpp[Control.DoubleClick#1](~/add/codesnippet/cpp/m-system.windows.forms.c_63_1.cpp)]"
  syntax:
    content: protected virtual void OnDoubleClick (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnDoubleClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)
  id: OnDragDrop(System.Windows.Forms.DragEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnDragDrop(DragEventArgs)
  nameWithType: Control.OnDragDrop(DragEventArgs)
  fullName: System.Windows.Forms.Control.OnDragDrop(DragEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.DragDrop&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnDragDrop 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnDragDrop (System.Windows.Forms.DragEventArgs drgevent);
    parameters:
    - id: drgevent
      type: System.Windows.Forms.DragEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DragEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.OnDragDrop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)
  id: OnDragEnter(System.Windows.Forms.DragEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnDragEnter(DragEventArgs)
  nameWithType: Control.OnDragEnter(DragEventArgs)
  fullName: System.Windows.Forms.Control.OnDragEnter(DragEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.DragEnter&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnDragEnter 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnDragEnter (System.Windows.Forms.DragEventArgs drgevent);
    parameters:
    - id: drgevent
      type: System.Windows.Forms.DragEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DragEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.OnDragEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnDragLeave(System.EventArgs)
  id: OnDragLeave(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnDragLeave(EventArgs)
  nameWithType: Control.OnDragLeave(EventArgs)
  fullName: System.Windows.Forms.Control.OnDragLeave(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.DragLeave&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnDragLeave 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnDragLeave (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnDragLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)
  id: OnDragOver(System.Windows.Forms.DragEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnDragOver(DragEventArgs)
  nameWithType: Control.OnDragOver(DragEventArgs)
  fullName: System.Windows.Forms.Control.OnDragOver(DragEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.DragOver&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnDragOver 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnDragOver (System.Windows.Forms.DragEventArgs drgevent);
    parameters:
    - id: drgevent
      type: System.Windows.Forms.DragEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DragEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.OnDragOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)
  id: OnEnabledChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnEnabledChanged(EventArgs)
  nameWithType: Control.OnEnabledChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnEnabledChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.EnabledChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnEnabledChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnEnabledChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnEnabledChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnEnter(System.EventArgs)
  id: OnEnter(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnEnter(EventArgs)
  nameWithType: Control.OnEnter(EventArgs)
  fullName: System.Windows.Forms.Control.OnEnter(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.Enter&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnEnter 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example uses the <xref:System.Windows.Forms.Control.Enter> event to change the foreground and background colors of a <xref:System.Windows.Forms.TextBox> under particular conditions.  \n  \n [!code-cs[Control.Enter#1](~/add/codesnippet/csharp/m-system.windows.forms.c_46_1.cs)]\n [!code-cpp[Control.Enter#1](~/add/codesnippet/cpp/m-system.windows.forms.c_46_1.cpp)]\n [!code-vb[Control.Enter#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_46_1.vb)]"
  syntax:
    content: protected virtual void OnEnter (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnFontChanged(System.EventArgs)
  id: OnFontChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnFontChanged(EventArgs)
  nameWithType: Control.OnFontChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnFontChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.FontChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnFontChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_104_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_104_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_104_1.vb)]"
  syntax:
    content: protected virtual void OnFontChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnFontChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)
  id: OnForeColorChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnForeColorChanged(EventArgs)
  nameWithType: Control.OnForeColorChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnForeColorChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.ForeColorChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnForeColorChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_23_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_23_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_23_1.vb)]"
  syntax:
    content: protected virtual void OnForeColorChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnForeColorChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)
  id: OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnGiveFeedback(GiveFeedbackEventArgs)
  nameWithType: Control.OnGiveFeedback(GiveFeedbackEventArgs)
  fullName: System.Windows.Forms.Control.OnGiveFeedback(GiveFeedbackEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.GiveFeedback&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnGiveFeedback 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnGiveFeedback (System.Windows.Forms.GiveFeedbackEventArgs gfbevent);
    parameters:
    - id: gfbevent
      type: System.Windows.Forms.GiveFeedbackEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.GiveFeedbackEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.OnGiveFeedback*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnGotFocus(System.EventArgs)
  id: OnGotFocus(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnGotFocus(EventArgs)
  nameWithType: Control.OnGotFocus(EventArgs)
  fullName: System.Windows.Forms.Control.OnGotFocus(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.GotFocus&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnGotFocus 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnGotFocus (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnGotFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)
  id: OnHandleCreated(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnHandleCreated(EventArgs)
  nameWithType: Control.OnHandleCreated(EventArgs)
  fullName: System.Windows.Forms.Control.OnHandleCreated(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.HandleCreated&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnHandleCreated 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnHandleCreated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnHandleCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)
  id: OnHandleDestroyed(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnHandleDestroyed(EventArgs)
  nameWithType: Control.OnHandleDestroyed(EventArgs)
  fullName: System.Windows.Forms.Control.OnHandleDestroyed(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.HandleDestroyed&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnHandleDestroyed 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnHandleDestroyed (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnHandleDestroyed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)
  id: OnHelpRequested(System.Windows.Forms.HelpEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnHelpRequested(HelpEventArgs)
  nameWithType: Control.OnHelpRequested(HelpEventArgs)
  fullName: System.Windows.Forms.Control.OnHelpRequested(HelpEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.HelpRequested&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnHelpRequested 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnHelpRequested (System.Windows.Forms.HelpEventArgs hevent);
    parameters:
    - id: hevent
      type: System.Windows.Forms.HelpEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.HelpEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.OnHelpRequested*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)
  id: OnImeModeChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnImeModeChanged(EventArgs)
  nameWithType: Control.OnImeModeChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnImeModeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.ImeModeChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnImeModeChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_49_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_49_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_49_1.vb)]"
  syntax:
    content: protected virtual void OnImeModeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnImeModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)
  id: OnInvalidated(System.Windows.Forms.InvalidateEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnInvalidated(InvalidateEventArgs)
  nameWithType: Control.OnInvalidated(InvalidateEventArgs)
  fullName: System.Windows.Forms.Control.OnInvalidated(InvalidateEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.Invalidated&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnInvalidated 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnInvalidated (System.Windows.Forms.InvalidateEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.InvalidateEventArgs
      description: "<xref href=&quot;System.Windows.Forms.InvalidateEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.OnInvalidated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)
  id: OnKeyDown(System.Windows.Forms.KeyEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnKeyDown(KeyEventArgs)
  nameWithType: Control.OnKeyDown(KeyEventArgs)
  fullName: System.Windows.Forms.Control.OnKeyDown(KeyEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.KeyDown&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnKeyDown 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example uses the <xref:System.Windows.Forms.Control.KeyDown> event to determine the type of character entered into the control.  \n  \n [!code-vb[Control.KeyDown#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_108_1.vb)]\n [!code-cpp[Control.KeyDown#1](~/add/codesnippet/cpp/m-system.windows.forms.c_108_1.cpp)]\n [!code-cs[Control.KeyDown#1](~/add/codesnippet/csharp/m-system.windows.forms.c_108_1.cs)]"
  syntax:
    content: protected virtual void OnKeyDown (System.Windows.Forms.KeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.KeyEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.KeyEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.OnKeyDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)
  id: OnKeyPress(System.Windows.Forms.KeyPressEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnKeyPress(KeyPressEventArgs)
  nameWithType: Control.OnKeyPress(KeyPressEventArgs)
  fullName: System.Windows.Forms.Control.OnKeyPress(KeyPressEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.KeyPress&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnKeyPress 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example uses the <xref:System.Windows.Forms.Control.KeyPress> event to prevent characters from entering the control.  \n  \n [!code-vb[Control.KeyDown#1](~/add/codesnippet/visualbasic/5902b2b7-dc18-40a0-9d7e-_1.vb)]\n [!code-cpp[Control.KeyDown#1](~/add/codesnippet/cpp/5902b2b7-dc18-40a0-9d7e-_1.cpp)]\n [!code-cs[Control.KeyDown#1](~/add/codesnippet/csharp/5902b2b7-dc18-40a0-9d7e-_1.cs)]"
  syntax:
    content: protected virtual void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.KeyPressEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.KeyPressEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.OnKeyPress*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)
  id: OnKeyUp(System.Windows.Forms.KeyEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnKeyUp(KeyEventArgs)
  nameWithType: Control.OnKeyUp(KeyEventArgs)
  fullName: System.Windows.Forms.Control.OnKeyUp(KeyEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.KeyUp&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnKeyUp 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example uses the <xref:System.Windows.Forms.Control.KeyUp> event with the <xref:System.Windows.Forms.Help> class to display pop-up style help to the user.  \n  \n [!code-cpp[Control.KeyUp#1](~/add/codesnippet/cpp/m-system.windows.forms.c_112_1.cpp)]\n [!code-vb[Control.KeyUp#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_112_1.vb)]\n [!code-cs[Control.KeyUp#1](~/add/codesnippet/csharp/m-system.windows.forms.c_112_1.cs)]"
  syntax:
    content: protected virtual void OnKeyUp (System.Windows.Forms.KeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.KeyEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.KeyEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.OnKeyUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)
  id: OnLayout(System.Windows.Forms.LayoutEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnLayout(LayoutEventArgs)
  nameWithType: Control.OnLayout(LayoutEventArgs)
  fullName: System.Windows.Forms.Control.OnLayout(LayoutEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.Layout&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnLayout 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnLayout (System.Windows.Forms.LayoutEventArgs levent);
    parameters:
    - id: levent
      type: System.Windows.Forms.LayoutEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.LayoutEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.OnLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnLeave(System.EventArgs)
  id: OnLeave(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnLeave(EventArgs)
  nameWithType: Control.OnLeave(EventArgs)
  fullName: System.Windows.Forms.Control.OnLeave(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.Leave&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnLeave 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example uses the <xref:System.Windows.Forms.Control.Leave> event to reset a control to its former state.  \n  \n [!code-cs[Control.Enter#1](~/add/codesnippet/csharp/m-system.windows.forms.c_21_1.cs)]\n [!code-cpp[Control.Enter#1](~/add/codesnippet/cpp/m-system.windows.forms.c_21_1.cpp)]\n [!code-vb[Control.Enter#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_21_1.vb)]"
  syntax:
    content: protected virtual void OnLeave (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)
  id: OnLocationChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnLocationChanged(EventArgs)
  nameWithType: Control.OnLocationChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnLocationChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.LocationChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnLocationChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName* `Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_36_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_36_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_36_1.vb)]"
  syntax:
    content: protected virtual void OnLocationChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnLocationChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnLostFocus(System.EventArgs)
  id: OnLostFocus(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnLostFocus(EventArgs)
  nameWithType: Control.OnLostFocus(EventArgs)
  fullName: System.Windows.Forms.Control.OnLostFocus(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.LostFocus&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnLostFocus 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnLostFocus (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnLostFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)
  id: OnMarginChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnMarginChanged(EventArgs)
  nameWithType: Control.OnMarginChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnMarginChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.MarginChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnMarginChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnMarginChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "A <xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnMarginChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)
  id: OnMouseCaptureChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnMouseCaptureChanged(EventArgs)
  nameWithType: Control.OnMouseCaptureChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnMouseCaptureChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.MouseCaptureChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       Onmousecapturechanged가 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnMouseCaptureChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnMouseCaptureChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)
  id: OnMouseClick(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnMouseClick(MouseEventArgs)
  nameWithType: Control.OnMouseClick(MouseEventArgs)
  fullName: System.Windows.Forms.Control.OnMouseClick(MouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.MouseClick&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnMouseClick 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnMouseClick (System.Windows.Forms.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.MouseEventArgs
      description: "<xref href=&quot;System.Windows.Forms.MouseEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.OnMouseClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)
  id: OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnMouseDoubleClick(MouseEventArgs)
  nameWithType: Control.OnMouseDoubleClick(MouseEventArgs)
  fullName: System.Windows.Forms.Control.OnMouseDoubleClick(MouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.MouseDoubleClick&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       Onmousedoubleclick이 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnMouseDoubleClick (System.Windows.Forms.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.MouseEventArgs
      description: "<xref href=&quot;System.Windows.Forms.MouseEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.OnMouseDoubleClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)
  id: OnMouseDown(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnMouseDown(MouseEventArgs)
  nameWithType: Control.OnMouseDown(MouseEventArgs)
  fullName: System.Windows.Forms.Control.OnMouseDown(MouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.MouseDown&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnMouseDown 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnMouseDown (System.Windows.Forms.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.MouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.MouseEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.OnMouseDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)
  id: OnMouseEnter(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnMouseEnter(EventArgs)
  nameWithType: Control.OnMouseEnter(EventArgs)
  fullName: System.Windows.Forms.Control.OnMouseEnter(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.MouseEnter&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnMouseEnter 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnMouseEnter (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnMouseEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnMouseHover(System.EventArgs)
  id: OnMouseHover(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnMouseHover(EventArgs)
  nameWithType: Control.OnMouseHover(EventArgs)
  fullName: System.Windows.Forms.Control.OnMouseHover(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.MouseHover&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnMouseHover 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example demonstrates how to override the OnMouseHover and <xref:System.Windows.Forms.Control.OnMouseMove%2A> methods in a derived class. To run the example, paste the following code in a new form and paste this class, forming the same file, after the form. Add a button of type `FunButton` to the form.  \n  \n [!code-cpp[System.Windows.Forms.ControlDefaultProperties#2](~/add/codesnippet/cpp/m-system.windows.forms.c_74_1.cpp)]\n [!code-cs[System.Windows.Forms.ControlDefaultProperties#2](~/add/codesnippet/csharp/m-system.windows.forms.c_74_1.cs)]\n [!code-vb[System.Windows.Forms.ControlDefaultProperties#2](~/add/codesnippet/visualbasic/m-system.windows.forms.c_74_1.vb)]"
  syntax:
    content: protected virtual void OnMouseHover (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnMouseHover*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)
  id: OnMouseLeave(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnMouseLeave(EventArgs)
  nameWithType: Control.OnMouseLeave(EventArgs)
  fullName: System.Windows.Forms.Control.OnMouseLeave(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.MouseLeave&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnMouseLeave 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnMouseLeave (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnMouseLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)
  id: OnMouseMove(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnMouseMove(MouseEventArgs)
  nameWithType: Control.OnMouseMove(MouseEventArgs)
  fullName: System.Windows.Forms.Control.OnMouseMove(MouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.MouseMove&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnMouseMove 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example demonstrates how to override the <xref:System.Windows.Forms.Control.OnMouseHover%2A> and OnMouseMove methods in a derived class. To run the example, paste the following code in a new form and paste this class, forming the same file, after the form. Add a button of type `FunButton` to the form.  \n  \n [!code-cpp[System.Windows.Forms.ControlDefaultProperties#2](~/add/codesnippet/cpp/m-system.windows.forms.c_107_1.cpp)]\n [!code-cs[System.Windows.Forms.ControlDefaultProperties#2](~/add/codesnippet/csharp/m-system.windows.forms.c_107_1.cs)]\n [!code-vb[System.Windows.Forms.ControlDefaultProperties#2](~/add/codesnippet/visualbasic/m-system.windows.forms.c_107_1.vb)]"
  syntax:
    content: protected virtual void OnMouseMove (System.Windows.Forms.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.MouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.MouseEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.OnMouseMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)
  id: OnMouseUp(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnMouseUp(MouseEventArgs)
  nameWithType: Control.OnMouseUp(MouseEventArgs)
  fullName: System.Windows.Forms.Control.OnMouseUp(MouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.MouseUp&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnMouseUp 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnMouseUp (System.Windows.Forms.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.MouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.MouseEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.OnMouseUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)
  id: OnMouseWheel(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnMouseWheel(MouseEventArgs)
  nameWithType: Control.OnMouseWheel(MouseEventArgs)
  fullName: System.Windows.Forms.Control.OnMouseWheel(MouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.MouseWheel&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnMouseWheel 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnMouseWheel (System.Windows.Forms.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.MouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.MouseEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.OnMouseWheel*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnMove(System.EventArgs)
  id: OnMove(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnMove(EventArgs)
  nameWithType: Control.OnMove(EventArgs)
  fullName: System.Windows.Forms.Control.OnMove(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.Move&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnMove 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example uses the <xref:System.Windows.Forms.Control.Move> event to display the location of the form in screen coordinates on the caption bar of the form.  \n  \n [!code-cpp[Control.Move#1](~/add/codesnippet/cpp/m-system.windows.forms.c_73_1.cpp)]\n [!code-vb[Control.Move#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_73_1.vb)]\n [!code-cs[Control.Move#1](~/add/codesnippet/csharp/m-system.windows.forms.c_73_1.cs)]"
  syntax:
    content: protected virtual void OnMove (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)
  id: OnNotifyMessage(System.Windows.Forms.Message)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnNotifyMessage(Message)
  nameWithType: Control.OnNotifyMessage(Message)
  fullName: System.Windows.Forms.Control.OnNotifyMessage(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Windows 메시지의 컨트롤을 알립니다."
  remarks: "OnNotifyMessage 메서드가 호출 하는 경우 컨트롤의 `EnableNotifyMessage` <xref:System.Windows.Forms.ControlStyles>.</xref:System.Windows.Forms.ControlStyles> 에 스타일 비트가 설정 `EnableNotifyMessage` 에 스타일을 <xref:System.Windows.Forms.ControlStyles>컨트롤 될 때 알림을 받으려면을 <xref:System.Windows.Forms.Control.WndProc%2A>메서드는 Windows 메시지를 받습니다.</xref:System.Windows.Forms.Control.WndProc%2A> </xref:System.Windows.Forms.ControlStyles> 이 메서드로 부분적으로 신뢰할 수 있는 컨트롤 메시지를 수정 하려면을 사용 하지 않고 Windows 메시지 수신할 수 있습니다."
  syntax:
    content: protected virtual void OnNotifyMessage (System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "A <xref href=&quot;System.Windows.Forms.Message&quot;> </xref> Windows 메시지를 나타내는입니다."
  overload: System.Windows.Forms.Control.OnNotifyMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)
  id: OnPaddingChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnPaddingChanged(EventArgs)
  nameWithType: Control.OnPaddingChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnPaddingChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.PaddingChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnPaddingChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnPaddingChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "A <xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnPaddingChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)
  id: OnPaint(System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnPaint(PaintEventArgs)
  nameWithType: Control.OnPaint(PaintEventArgs)
  fullName: System.Windows.Forms.Control.OnPaint(PaintEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.Paint&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnPaint 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on which it is dropped. The OnPaint method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting. The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback. The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data. Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=fullName> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=fullName> values are screen coordinates, the example uses the <xref:System.Windows.Forms.Control.PointToClient%2A> method to convert them to client coordinates.  \n  \n [!code-cs[Windows.Forms.Control.DragOperations#1](~/add/codesnippet/csharp/m-system.windows.forms.c_57_1.cs)]\n [!code-cpp[Windows.Forms.Control.DragOperations#1](~/add/codesnippet/cpp/m-system.windows.forms.c_57_1.cpp)]\n [!code-vb[Windows.Forms.Control.DragOperations#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_57_1.vb)]  \n  \n [!code-cs[Control.Paint#1](~/add/codesnippet/csharp/m-system.windows.forms.c_57_2.cs)]\n [!code-cpp[Control.Paint#1](~/add/codesnippet/cpp/m-system.windows.forms.c_57_2.cpp)]\n [!code-vb[Control.Paint#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_57_2.vb)]"
  syntax:
    content: protected virtual void OnPaint (System.Windows.Forms.PaintEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.PaintEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.PaintEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.OnPaint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)
  id: OnPaintBackground(System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnPaintBackground(PaintEventArgs)
  nameWithType: Control.OnPaintBackground(PaintEventArgs)
  fullName: System.Windows.Forms.Control.OnPaintBackground(PaintEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 배경을 그립니다."
  remarks: "OnPaintBackground 메서드 Windows 백그라운드 지우기 요청을 처리 하려면 파생된 클래스를 사용 합니다."
  syntax:
    content: protected virtual void OnPaintBackground (System.Windows.Forms.PaintEventArgs pevent);
    parameters:
    - id: pevent
      type: System.Windows.Forms.PaintEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.PaintEventArgs&quot;> </xref> 그리려는 컨트롤에 대 한 정보가 들어 있는입니다."
  overload: System.Windows.Forms.Control.OnPaintBackground*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)
  id: OnParentBackColorChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnParentBackColorChanged(EventArgs)
  nameWithType: Control.OnParentBackColorChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentBackColorChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.BackColorChanged&quot;> </xref> 이벤트 때는 <xref:System.Windows.Forms.Control.BackColor*>속성의 값이 컨트롤의 컨테이너 변경.</xref:System.Windows.Forms.Control.BackColor*>"
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnParentBackColorChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_5_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_5_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_5_1.vb)]"
  syntax:
    content: protected virtual void OnParentBackColorChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnParentBackColorChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)
  id: OnParentBackgroundImageChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnParentBackgroundImageChanged(EventArgs)
  nameWithType: Control.OnParentBackgroundImageChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentBackgroundImageChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.BackgroundImageChanged&quot;> </xref> 이벤트 때는 <xref:System.Windows.Forms.Control.BackgroundImage*>속성의 값이 컨트롤의 컨테이너 변경.</xref:System.Windows.Forms.Control.BackgroundImage*>"
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnParentBackgroundImageChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed`that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_44_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_44_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_44_1.vb)]"
  syntax:
    content: protected virtual void OnParentBackgroundImageChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnParentBackgroundImageChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)
  id: OnParentBindingContextChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnParentBindingContextChanged(EventArgs)
  nameWithType: Control.OnParentBindingContextChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentBindingContextChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.BindingContextChanged&quot;> </xref> 이벤트 때는 <xref:System.Windows.Forms.Control.BindingContext*>속성의 값이 컨트롤의 컨테이너 변경.</xref:System.Windows.Forms.Control.BindingContext*>"
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnParentBindingContextChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed`that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_26_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_26_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_26_1.vb)]"
  syntax:
    content: protected virtual void OnParentBindingContextChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnParentBindingContextChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnParentChanged(System.EventArgs)
  id: OnParentChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnParentChanged(EventArgs)
  nameWithType: Control.OnParentChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.ParentChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnParentChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_38_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_38_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_38_1.vb)]"
  syntax:
    content: protected virtual void OnParentChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnParentChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)
  id: OnParentCursorChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnParentCursorChanged(EventArgs)
  nameWithType: Control.OnParentCursorChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentCursorChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.CursorChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnParentCursorChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnParentCursorChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnParentCursorChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)
  id: OnParentEnabledChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnParentEnabledChanged(EventArgs)
  nameWithType: Control.OnParentEnabledChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentEnabledChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.EnabledChanged&quot;> </xref> 이벤트 때는 <xref:System.Windows.Forms.Control.Enabled*>속성의 값이 컨트롤의 컨테이너 변경.</xref:System.Windows.Forms.Control.Enabled*>"
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnParentEnabledChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_93_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_93_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_93_1.vb)]"
  syntax:
    content: protected virtual void OnParentEnabledChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnParentEnabledChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)
  id: OnParentFontChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnParentFontChanged(EventArgs)
  nameWithType: Control.OnParentFontChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentFontChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.FontChanged&quot;> </xref> 이벤트 때는 <xref:System.Windows.Forms.Control.Font*>속성의 값이 컨트롤의 컨테이너 변경.</xref:System.Windows.Forms.Control.Font*>"
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnParentFontChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_48_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_48_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_48_1.vb)]"
  syntax:
    content: protected virtual void OnParentFontChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnParentFontChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)
  id: OnParentForeColorChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnParentForeColorChanged(EventArgs)
  nameWithType: Control.OnParentForeColorChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentForeColorChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.ForeColorChanged&quot;> </xref> 이벤트 때는 <xref:System.Windows.Forms.Control.ForeColor*>속성의 값이 컨트롤의 컨테이너 변경.</xref:System.Windows.Forms.Control.ForeColor*>"
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnParentForeColorChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_113_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_113_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_113_1.vb)]"
  syntax:
    content: protected virtual void OnParentForeColorChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnParentForeColorChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)
  id: OnParentRightToLeftChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnParentRightToLeftChanged(EventArgs)
  nameWithType: Control.OnParentRightToLeftChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentRightToLeftChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.RightToLeftChanged&quot;> </xref> 이벤트 때는 <xref:System.Windows.Forms.Control.RightToLeft*>속성의 값이 컨트롤의 컨테이너 변경.</xref:System.Windows.Forms.Control.RightToLeft*>"
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnParentRightToLeftChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_62_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_62_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_62_1.vb)]"
  syntax:
    content: protected virtual void OnParentRightToLeftChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnParentRightToLeftChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)
  id: OnParentVisibleChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnParentVisibleChanged(EventArgs)
  nameWithType: Control.OnParentVisibleChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentVisibleChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.VisibleChanged&quot;> </xref> 이벤트 때는 <xref:System.Windows.Forms.Control.Visible*>속성의 값이 컨트롤의 컨테이너 변경.</xref:System.Windows.Forms.Control.Visible*>"
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnParentVisibleChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_41_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_41_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_41_1.vb)]"
  syntax:
    content: protected virtual void OnParentVisibleChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnParentVisibleChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)
  id: OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnPreviewKeyDown(PreviewKeyDownEventArgs)
  nameWithType: Control.OnPreviewKeyDown(PreviewKeyDownEventArgs)
  fullName: System.Windows.Forms.Control.OnPreviewKeyDown(PreviewKeyDownEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.PreviewKeyDown&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnPreviewKeyDown 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnPreviewKeyDown (System.Windows.Forms.PreviewKeyDownEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.PreviewKeyDownEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.PreviewKeyDownEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.OnPreviewKeyDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)
  id: OnPrint(System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnPrint(PaintEventArgs)
  nameWithType: Control.OnPrint(PaintEventArgs)
  fullName: System.Windows.Forms.Control.OnPrint(PaintEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.Paint&quot;> </xref> 이벤트입니다."
  remarks: "경우는 `UserPaint` 비트의 <xref:System.Windows.Forms.ControlStyles>설정 OnPrint 계층적으로 그릴를 재정의할 수 있습니다.</xref:System.Windows.Forms.ControlStyles> 참조 <xref:System.Windows.Forms.Control.SetStyle%2A>자세한 내용은.</xref:System.Windows.Forms.Control.SetStyle%2A>"
  syntax:
    content: protected virtual void OnPrint (System.Windows.Forms.PaintEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.PaintEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.PaintEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.OnPrint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>e</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)
  id: OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnQueryContinueDrag(QueryContinueDragEventArgs)
  nameWithType: Control.OnQueryContinueDrag(QueryContinueDragEventArgs)
  fullName: System.Windows.Forms.Control.OnQueryContinueDrag(QueryContinueDragEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.QueryContinueDrag&quot;> </xref> 이벤트입니다."
  remarks: "이 메서드는 반복적으로 호출 끌기가 시작 되는 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] 끌기 작업 취소 또는 완료 될 때까지 합니다.      > [!NOTE] > 끌기가 취소 또는 놓기가 발생 시점을 변경 하려는 경우이 메서드를 재정의 합니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnQueryContinueDrag 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnQueryContinueDrag (System.Windows.Forms.QueryContinueDragEventArgs qcdevent);
    parameters:
    - id: qcdevent
      type: System.Windows.Forms.QueryContinueDragEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.QueryContinueDragEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.OnQueryContinueDrag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)
  id: OnRegionChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnRegionChanged(EventArgs)
  nameWithType: Control.OnRegionChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnRegionChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.RegionChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnRegionChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnRegionChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnRegionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnResize(System.EventArgs)
  id: OnResize(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnResize(EventArgs)
  nameWithType: Control.OnResize(EventArgs)
  fullName: System.Windows.Forms.Control.OnResize(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.Resize&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnResize 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnResize (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnResize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)
  id: OnRightToLeftChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnRightToLeftChanged(EventArgs)
  nameWithType: Control.OnRightToLeftChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnRightToLeftChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.RightToLeftChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnRightToLeftChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_52_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_52_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_52_1.vb)]"
  syntax:
    content: protected virtual void OnRightToLeftChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnRightToLeftChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)
  id: OnSizeChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnSizeChanged(EventArgs)
  nameWithType: Control.OnSizeChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnSizeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.SizeChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnSizeChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnSizeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnSizeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)
  id: OnStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnStyleChanged(EventArgs)
  nameWithType: Control.OnStyleChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnStyleChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.StyleChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnStyleChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnStyleChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnStyleChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)
  id: OnSystemColorsChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnSystemColorsChanged(EventArgs)
  nameWithType: Control.OnSystemColorsChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnSystemColorsChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.SystemColorsChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnSystemColorsChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnSystemColorsChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnSystemColorsChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)
  id: OnTabIndexChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnTabIndexChanged(EventArgs)
  nameWithType: Control.OnTabIndexChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnTabIndexChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.TabIndexChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnTabIndexChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnTabIndexChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnTabIndexChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)
  id: OnTabStopChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnTabStopChanged(EventArgs)
  nameWithType: Control.OnTabStopChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnTabStopChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.TabStopChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnTabStopChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_13_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_13_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_13_1.vb)]"
  syntax:
    content: protected virtual void OnTabStopChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnTabStopChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnTextChanged(System.EventArgs)
  id: OnTextChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnTextChanged(EventArgs)
  nameWithType: Control.OnTextChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnTextChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.TextChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnTextChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_88_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_88_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_88_1.vb)]"
  syntax:
    content: protected virtual void OnTextChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnTextChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnValidated(System.EventArgs)
  id: OnValidated(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnValidated(EventArgs)
  nameWithType: Control.OnValidated(EventArgs)
  fullName: System.Windows.Forms.Control.OnValidated(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.Validated&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnValidated 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnValidated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnValidated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)
  id: OnValidating(System.ComponentModel.CancelEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnValidating(CancelEventArgs)
  nameWithType: Control.OnValidating(CancelEventArgs)
  fullName: System.Windows.Forms.Control.OnValidating(CancelEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.Validating&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnValidating 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnValidating (System.ComponentModel.CancelEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.CancelEventArgs
      description: "A <xref:System.ComponentModel.CancelEventArgs>이벤트 데이터를 포함 하는.</xref:System.ComponentModel.CancelEventArgs>"
  overload: System.Windows.Forms.Control.OnValidating*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)
  id: OnVisibleChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnVisibleChanged(EventArgs)
  nameWithType: Control.OnVisibleChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnVisibleChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.VisibleChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnVisibleChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_11_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_11_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_11_1.vb)]"
  syntax:
    content: protected virtual void OnVisibleChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnVisibleChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Padding
  id: Padding
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Padding
  nameWithType: Control.Padding
  fullName: System.Windows.Forms.Control.Padding
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 안쪽을 가져오거나 설정 합니다."
  remarks: "와 같은 컨테이너에 대 한 <xref:System.Windows.Forms.GroupBox>및 <xref:System.Windows.Forms.TabControl>, 안쪽 여백 속성의 해당 설정 하거나 가져옵니다 <xref:System.Windows.Forms.Control.DisplayRectangle%2A>속성.</xref:System.Windows.Forms.Control.DisplayRectangle%2A> </xref:System.Windows.Forms.TabControl> </xref:System.Windows.Forms.GroupBox> <xref:System.Windows.Forms.ScrollableControl.DockPadding%2A?displayProperty=fullName>속성은 해당 안쪽 여백 속성입니다.</xref:System.Windows.Forms.ScrollableControl.DockPadding%2A?displayProperty=fullName>       컨트롤을 패딩 하는 값 Windows 사용자 인터페이스 지침 가까운 합리적으로 기본을 수신 합니다. 약간씩 조정 특정 응용 프로그램에 필요할 수 있습니다.       구현 하는 모든 컨트롤 <xref:System.Windows.Forms.Control.GetPreferredSize%2A>패딩 때의 크기 만큼 확대는 <xref:System.Windows.Forms.Control.AutoSize%2A>은 `true`.</xref:System.Windows.Forms.Control.AutoSize%2A> </xref:System.Windows.Forms.Control.GetPreferredSize%2A>       다음과 같은 컨트롤 안쪽 여백을 사용 하지 않는:-구현 하지 않는 컨트롤 <xref:System.Windows.Forms.Control.AutoSize%2A>통해 <xref:System.Windows.Forms.Control.GetPreferredSize%2A>-에서 직접 상속 하는 사용자 지정 컨트롤 <xref:System.Windows.Forms.Control>- <xref:System.Windows.Forms.AxHost>- <xref:System.Windows.Forms.ComboBox>- <xref:System.Windows.Forms.DataGridView>- <xref:System.Windows.Forms.DateTimePicker>- <xref:System.Windows.Forms.HScrollBar>- <xref:System.Windows.Forms.ListView>- <xref:System.Windows.Forms.MaskedTextBox>- <xref:System.Windows.Forms.MonthCalendar>- <xref:System.Windows.Forms.ProgressBar>- <xref:System.Windows.Forms.PropertyGrid>- <xref:System.Windows.Forms.RichTextBox>- <xref:System.Windows.Forms.SplitContainer>- <xref:System.Windows.Forms.TextBox>- <xref:System.Windows.Forms.TextBoxBase>- <xref:System.Windows.Forms.TreeView>- <xref:System.Windows.Forms.VScrollBar>- <xref:System.Windows.Forms.WebBrowser></xref:System.Windows.Forms.WebBrowser> </xref:System.Windows.Forms.VScrollBar> </xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TextBoxBase> </xref:System.Windows.Forms.TextBox> </xref:System.Windows.Forms.SplitContainer> </xref:System.Windows.Forms.RichTextBox> </xref:System.Windows.Forms.PropertyGrid> </xref:System.Windows.Forms.ProgressBar> </xref:System.Windows.Forms.MonthCalendar> </xref:System.Windows.Forms.MaskedTextBox> </xref:System.Windows.Forms.ListView> </xref:System.Windows.Forms.HScrollBar> </xref:System.Windows.Forms.DateTimePicker> </xref:System.Windows.Forms.DataGridView> </xref:System.Windows.Forms.ComboBox> </xref:System.Windows.Forms.AxHost> </xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Control.GetPreferredSize%2A> </xref:System.Windows.Forms.Control.AutoSize%2A>"
  syntax:
    content: public System.Windows.Forms.Padding Padding { get; set; }
    return:
      type: System.Windows.Forms.Padding
      description: "A <xref href=&quot;System.Windows.Forms.Padding&quot;> </xref> 컨트롤의 내부 간격 특성을 나타내는입니다."
  overload: System.Windows.Forms.Control.Padding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.PaddingChanged
  id: PaddingChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: PaddingChanged
  nameWithType: Control.PaddingChanged
  fullName: System.Windows.Forms.Control.PaddingChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 안쪽 여백이 변경 하면 발생 합니다."
  remarks: "이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the PaddingChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the PaddingChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#41](~/add/codesnippet/csharp/e-system.windows.forms.c_29_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#41](~/add/codesnippet/visualbasic/e-system.windows.forms.c_29_1.vb)]"
  syntax:
    content: public event EventHandler PaddingChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Paint
  id: Paint
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Paint
  nameWithType: Control.Paint
  fullName: System.Windows.Forms.Control.Paint
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤을 다시 그리면 발생 합니다."
  remarks: "Paint 이벤트는 컨트롤을 다시 그리면 발생 합니다. 인스턴스를 전달 <xref:System.Windows.Forms.PaintEventArgs>그리기 이벤트를 처리 하는 메서드에.</xref:System.Windows.Forms.PaintEventArgs>       재정의 하 여 컨트롤을 렌더링 하는 코드를 제공 해야와 모양이 다른 새 사용자 지정 컨트롤 또는 상속된 된 컨트롤을 만들 때의 <xref:System.Windows.Forms.Control.OnPaint%2A>메서드.</xref:System.Windows.Forms.Control.OnPaint%2A> 자세한 내용은 참조 [OnPaint 메서드 재정의](~/add/includes/ajax-current-ext-md.md) 및 [사용자 지정 컨트롤 그리기 및 렌더링](~/add/includes/ajax-current-ext-md.md)합니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example creates a <xref:System.Windows.Forms.PictureBox> control on the form and uses the Paint event to draw to it.  \n  \n [!code-cs[Control.Paint#1](~/add/codesnippet/csharp/e-system.windows.forms.c_26_1.cs)]\n [!code-cpp[Control.Paint#1](~/add/codesnippet/cpp/e-system.windows.forms.c_26_1.cpp)]\n [!code-vb[Control.Paint#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_26_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.PaintEventHandler Paint;
    return:
      type: System.Windows.Forms.PaintEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Parent
  id: Parent
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Parent
  nameWithType: Control.Parent
  fullName: System.Windows.Forms.Control.Parent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 부모 컨테이너를 가져오거나 설정 합니다."
  remarks: "부모 속성 값을 설정 `null` 에서 컨트롤이 제거는 <xref:System.Windows.Forms.Control.ControlCollection>현재 부모 컨트롤의.</xref:System.Windows.Forms.Control.ControlCollection>"
  example:
  - "The following code example uses the Parent property and the <xref:System.Windows.Forms.Control.FindForm%2A> method to set properties on the parent control of a button and its form.  \n  \n [!code-cpp[Control.FindForm#1](~/add/codesnippet/cpp/p-system.windows.forms.c_75_1.cpp)]\n [!code-vb[Control.FindForm#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_75_1.vb)]\n [!code-cs[Control.FindForm#1](~/add/codesnippet/csharp/p-system.windows.forms.c_75_1.cs)]"
  syntax:
    content: public System.Windows.Forms.Control Parent { get; set; }
    return:
      type: System.Windows.Forms.Control
      description: "A <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 컨트롤의 부모 또는 컨테이너 컨트롤을 나타내는입니다."
  overload: System.Windows.Forms.Control.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ParentChanged
  id: ParentChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ParentChanged
  nameWithType: Control.ParentChanged
  fullName: System.Windows.Forms.Control.ParentChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우는 <xref:System.Windows.Forms.Control.Parent*>속성 값이 변경.</xref:System.Windows.Forms.Control.Parent*>"
  remarks: "이 이벤트는 <xref:System.Windows.Forms.Control.Parent%2A>프로그래밍 방식으로 수정 되거나 사용자 상호 작용 하 여 속성이 변경 될.</xref:System.Windows.Forms.Control.Parent%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public event EventHandler ParentChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.PerformLayout
  id: PerformLayout
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: PerformLayout()
  nameWithType: Control.PerformLayout()
  fullName: System.Windows.Forms.Control.PerformLayout()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "모든 자식 컨트롤에 레이아웃 논리를 적용 하도록을 강제 합니다."
  remarks: "경우는 <xref:System.Windows.Forms.Control.SuspendLayout%2A>메서드가 PerformLayout 메서드 호출 하기 전에 <xref:System.Windows.Forms.Control.Layout>이벤트가 발생 하지 않습니다.</xref:System.Windows.Forms.Control.Layout> </xref:System.Windows.Forms.Control.SuspendLayout%2A>       <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A>및 <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A>의 속성은 <xref:System.Windows.Forms.LayoutEventArgs>로 설정 하는 생성 된 `null` 값이 없는 PerformLayout 메서드를 호출할 때 제공 된 경우.</xref:System.Windows.Forms.LayoutEventArgs> </xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A> </xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A>"
  example:
  - "The following code example demonstrates how to use the PerformLayout method. It also demonstrates ways in which the <xref:System.Windows.Forms.Control.Layout> event is raised. In this example, the `Click` event handler for `Button1` explicitly calls PerformLayout. The `Click` event handler for `Button2` implicitly calls PerformLayout. PerformLayout is also called when the form is loaded. `Button3` returns the control to the state it was in when loaded. In each case, the <xref:System.Windows.Forms.Control.Layout> event is raised.  \n  \n This is a complete example. To run the example, paste the following code in a blank form.  \n  \n [!code-cpp[System.Windows.Forms.Control.PerformLayout#1](~/add/codesnippet/cpp/m-system.windows.forms.c_101_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.PerformLayout#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_101_1.vb)]\n [!code-cs[System.Windows.Forms.Control.PerformLayout#1](~/add/codesnippet/csharp/m-system.windows.forms.c_101_1.cs)]"
  syntax:
    content: public void PerformLayout ();
    parameters: []
  overload: System.Windows.Forms.Control.PerformLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)
  id: PerformLayout(System.Windows.Forms.Control,System.String)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: PerformLayout(Control,String)
  nameWithType: Control.PerformLayout(Control,String)
  fullName: System.Windows.Forms.Control.PerformLayout(Control,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "모든 자식 컨트롤에 레이아웃 논리를 적용 하도록을 강제 합니다."
  remarks: "경우는 <xref:System.Windows.Forms.Control.SuspendLayout%2A>메서드가 호출 하기 전에 <xref:System.Windows.Forms.Control.PerformLayout%2A>메서드를는 <xref:System.Windows.Forms.Control.Layout>이벤트가 발생 하지 않습니다.</xref:System.Windows.Forms.Control.Layout> </xref:System.Windows.Forms.Control.PerformLayout%2A> </xref:System.Windows.Forms.Control.SuspendLayout%2A>       `affectedControl` 및 `affectedProperty` 매개 변수 둘 다로 설정할 수 있습니다 `null`합니다. 이렇게 하면는 <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A>및 <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A>의 속성은 <xref:System.Windows.Forms.LayoutEventArgs>로 설정 하기 위해 만든 `null`.</xref:System.Windows.Forms.LayoutEventArgs> </xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A> </xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.PerformLayout%2A> method. It also demonstrates ways in which the <xref:System.Windows.Forms.Control.Layout> event is raised. In this example, the `Click` event handler for `Button1` explicitly calls <xref:System.Windows.Forms.Control.PerformLayout%2A>. The `Click` event handler for `Button2` implicitly calls <xref:System.Windows.Forms.Control.PerformLayout%2A>. <xref:System.Windows.Forms.Control.PerformLayout%2A> is also called when the form is loaded. `Button3` returns the control to the state it was in when loaded. In each case, the <xref:System.Windows.Forms.Control.Layout> event is raised.  \n  \n This is a complete example. To run the example, paste the following code in a blank form.  \n  \n [!code-cpp[System.Windows.Forms.Control.PerformLayout#1](~/add/codesnippet/cpp/dd503f2e-2328-4789-9d52-_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.PerformLayout#1](~/add/codesnippet/visualbasic/dd503f2e-2328-4789-9d52-_1.vb)]\n [!code-cs[System.Windows.Forms.Control.PerformLayout#1](~/add/codesnippet/csharp/dd503f2e-2328-4789-9d52-_1.cs)]"
  syntax:
    content: public void PerformLayout (System.Windows.Forms.Control affectedControl, string affectedProperty);
    parameters:
    - id: affectedControl
      type: System.Windows.Forms.Control
      description: "A <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 나타내는 컨트롤을 가장 최근에 변경 된 합니다."
    - id: affectedProperty
      type: System.String
      description: "컨트롤에서 가장 최근에 변경된 된 속성의 이름입니다."
  overload: System.Windows.Forms.Control.PerformLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.PointToClient(System.Drawing.Point)
  id: PointToClient(System.Drawing.Point)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: PointToClient(Point)
  nameWithType: Control.PointToClient(Point)
  fullName: System.Windows.Forms.Control.PointToClient(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "클라이언트 좌표로 특정된 화면 지점의 위치를 계산 합니다."
  remarks: ''
  example:
  - "The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped. The <xref:System.Windows.Forms.Control.OnPaint%2A> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting. The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback. The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data. Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=fullName> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=fullName> values are screen coordinates, the example uses the PointToClient method to convert them to client coordinates.  \n  \n [!code-cs[Windows.Forms.Control.DragOperations#1](~/add/codesnippet/csharp/m-system.windows.forms.c_84_1.cs)]\n [!code-cpp[Windows.Forms.Control.DragOperations#1](~/add/codesnippet/cpp/m-system.windows.forms.c_84_1.cpp)]\n [!code-vb[Windows.Forms.Control.DragOperations#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_84_1.vb)]"
  syntax:
    content: public System.Drawing.Point PointToClient (System.Drawing.Point p);
    parameters:
    - id: p
      type: System.Drawing.Point
      description: "화면 좌표 <xref href=&quot;System.Drawing.Point&quot;> </xref> 변환 합니다."
    return:
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> 변환 된 나타내는 <xref href=&quot;System.Drawing.Point&quot;> </xref>, <code> p </code>를 클라이언트 좌표로 표시에서 합니다."
  overload: System.Windows.Forms.Control.PointToClient*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)
  id: PointToScreen(System.Drawing.Point)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: PointToScreen(Point)
  nameWithType: Control.PointToScreen(Point)
  fullName: System.Windows.Forms.Control.PointToScreen(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "화면 좌표에 지정 된 클라이언트 지점의 위치를 계산 합니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.RectangleToScreen%2A>, PointToScreen, <xref:System.Windows.Forms.Control.MouseButtons%2A>, <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=fullName>, and <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=fullName> members. To run the example, paste the following code in a form called Form1 containing several controls. This example requires that the <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseMove>, and <xref:System.Windows.Forms.Control.MouseUp> events are connected to the event handlers defined in the example.  \n  \n [!code-cs[System.Windows.Forms.RectangleToScreen#2](~/add/codesnippet/csharp/m-system.windows.forms.c_35_1.cs)]\n [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/add/codesnippet/cpp/m-system.windows.forms.c_35_1.cpp)]\n [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/add/codesnippet/visualbasic/m-system.windows.forms.c_35_1.vb)]"
  syntax:
    content: public System.Drawing.Point PointToScreen (System.Drawing.Point p);
    parameters:
    - id: p
      type: System.Drawing.Point
      description: "클라이언트 좌표 <xref href=&quot;System.Drawing.Point&quot;> </xref> 변환 합니다."
    return:
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> 변환 된 나타내는 <xref href=&quot;System.Drawing.Point&quot;> </xref>, <code> p </code>의 화면 좌표입니다."
  overload: System.Windows.Forms.Control.PointToScreen*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.PreferredSize
  id: PreferredSize
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: PreferredSize
  nameWithType: Control.PreferredSize
  fullName: System.Windows.Forms.Control.PreferredSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤이 들어갈 수 있는 사각형 영역의 크기를 가져옵니다."
  syntax:
    content: public System.Drawing.Size PreferredSize { get; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> 높이 너비를 픽셀 단위로 들어 있는입니다."
  overload: System.Windows.Forms.Control.PreferredSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)
  id: PreProcessControlMessage(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: PreProcessControlMessage(Message)
  nameWithType: Control.PreProcessControlMessage(Message)
  fullName: System.Windows.Forms.Control.PreProcessControlMessage(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "키보드 또는 입력된 메시지는 메시지 루프 내에서 디스패치 되기 전에 전처리 합니다."
  syntax:
    content: public System.Windows.Forms.PreProcessControlState PreProcessControlMessage (ref System.Windows.Forms.Message msg);
    parameters:
    - id: msg
      type: System.Windows.Forms.Message
      description: "A <xref href=&quot;System.Windows.Forms.Message&quot;> </xref> 처리할 메시지를 나타내는입니다."
    return:
      type: System.Windows.Forms.PreProcessControlState
      description: "One of the <xref href=&quot;System.Windows.Forms.PreProcessControlState&quot;></xref> values, depending on whether <>*> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> and whether <>*> or <xref:System.Windows.Forms.Control.IsInputChar*> are <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.Windows.Forms.Control.IsInputChar*>"
  overload: System.Windows.Forms.Control.PreProcessControlMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)
  id: PreProcessMessage(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: PreProcessMessage(Message)
  nameWithType: Control.PreProcessMessage(Message)
  fullName: System.Windows.Forms.Control.PreProcessMessage(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "키보드 또는 입력된 메시지는 메시지 루프 내에서 디스패치 되기 전에 전처리 합니다."
  remarks: "PreProcessMessage 디스패치 되기 전에 입력된 메시지를 전처리 하는 응용 프로그램의 메시지 루프에 의해 호출 됩니다. 에 가능한 값은 `msg` 매개 변수는 WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR 및 wm_syschar입니다.       컨트롤은 반환 PreProcessMessage를 재정의 하는 경우 `true` 메시지 처리 했음을 나타냅니다. 컨트롤의 결과 의해 처리 되지 않은 메시지에 대 한 `base.PreProcessMessage` 반환 되어야 합니다. 컨트롤은 일반적으로 더 특수 한 방법 중 하나와 같은 재정의 <xref:System.Windows.Forms.Control.IsInputChar%2A>, <xref:System.Windows.Forms.Control.IsInputKey%2A>, <xref:System.Windows.Forms.Control.ProcessCmdKey%2A>, <xref:System.Windows.Forms.Control.ProcessDialogChar%2A>, 또는 <xref:System.Windows.Forms.Control.ProcessDialogKey%2A>PreProcessMessage를 재정의 하는 대신.</xref:System.Windows.Forms.Control.ProcessDialogKey%2A> </xref:System.Windows.Forms.Control.ProcessDialogChar%2A> </xref:System.Windows.Forms.Control.ProcessCmdKey%2A> </xref:System.Windows.Forms.Control.IsInputKey%2A> </xref:System.Windows.Forms.Control.IsInputChar%2A>"
  syntax:
    content: public virtual bool PreProcessMessage (ref System.Windows.Forms.Message msg);
    parameters:
    - id: msg
      type: System.Windows.Forms.Message
      description: "A <xref href=&quot;System.Windows.Forms.Message&quot;> </xref>, 처리할 메시지를 나타내는 참조로 전달 합니다. 가능한 값은 WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR 및 wm_syschar입니다 됩니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 메시지를 처리 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.PreProcessMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.PreviewKeyDown
  id: PreviewKeyDown
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: PreviewKeyDown
  nameWithType: Control.PreviewKeyDown
  fullName: System.Windows.Forms.Control.PreviewKeyDown
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "앞에 오는 <xref href=&quot;System.Windows.Forms.Control.KeyDown&quot;> </xref> 이 컨트롤에 포커스가 있을 때 키를 누를 때 이벤트입니다."
  remarks: "입력된 키 누름을 간주 되지 않는 때문에 일부 키 누름 탭, 리턴, esc를 누르고 화살표 키 등은 일반적으로 일부 컨트롤에서 무시 됩니다. 예를 들어 기본적으로 <xref:System.Windows.Controls.Button>제어 화살표 키를 무시 합니다.</xref:System.Windows.Controls.Button> 일반적으로 화살표 키를 누르면 포커스가 이전 또는 다음 컨트롤로 이동 하면 됩니다. 화살표 키에는 탐색 키 간주 되 고 일반적으로 이러한 키를 눌러 <xref:System.Windows.Forms.Control.KeyDown><xref:System.Windows.Controls.Button>.</xref:System.Windows.Controls.Button> 이벤트</xref:System.Windows.Forms.Control.KeyDown> 발생 시 키 지 않습니다. 그러나에 대 한 키의 화살표를 누르면는 <xref:System.Windows.Controls.Button>않습니다 PreviewKeyDown 이벤트를 발생 시킵니다.</xref:System.Windows.Controls.Button> PreviewKeyDown 이벤트에 대 한 처리는 <xref:System.Windows.Controls.Button>설정과 <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A>속성을 `true`를 발생 시킬 수 있습니다는 <xref:System.Windows.Forms.Control.KeyDown>이벤트 화살표 키를 누를 때.</xref:System.Windows.Forms.Control.KeyDown> </xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> </xref:System.Windows.Controls.Button> 그러나 화살표 키를 처리 하는 경우 이전 또는 다음 컨트롤로 포커스가 이동 더 이상 됩니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates a <xref:System.Windows.Forms.Button> that includes a <xref:System.Windows.Forms.ContextMenuStrip>. When the <xref:System.Windows.Forms.Button> has the focus and you press the UP ARROW or DOWN ARROW keys, the <xref:System.Windows.Forms.ContextMenuStrip> appears. The PreviewKeyDown event handler detects when the UP ARROW or DOWN ARROW keys are pressed and sets the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> property to `true`. This raises the <xref:System.Windows.Forms.Control.KeyDown> event so that you can display the <xref:System.Windows.Forms.ContextMenuStrip>. You should not put any logic in the PreviewKeyDown event handler, other than to set the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> property. Instead, you should put your logic in the <xref:System.Windows.Forms.Control.KeyDown> event handler.  \n  \n [!code-cs[System.Windows.Forms.Control.PreviewKeyDown#1](~/add/codesnippet/csharp/e-system.windows.forms.c_64_1.cs)]\n [!code-vb[System.Windows.Forms.Control.PreviewKeyDown#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_64_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.PreviewKeyDownEventHandler PreviewKeyDown;
    return:
      type: System.Windows.Forms.PreviewKeyDownEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  id: ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ProcessCmdKey(Message,Keys)
  nameWithType: Control.ProcessCmdKey(Message,Keys)
  fullName: System.Windows.Forms.Control.ProcessCmdKey(Message,Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "명령 키를 처리 합니다."
  remarks: "이 메서드는 명령 키를 처리 하기 위해 메시지 전처리 하는 동안 호출 됩니다. 명령 키가 일반 입력된 키 보다 항상 우선 하는 키입니다. 명령 키의 예로 액셀러레이터 키 및 바로 가기 메뉴를 들 수 있습니다. 메서드 반환 해야 `true` 명령 키가 처리 되었는지 나타내는 또는 `false` 키 명령 키 임을 나타냅니다. 이 메서드는 컨트롤은 ActiveX 컨트롤 또는 Windows Forms 응용 프로그램에서 호스트 되는 경우에 호출 됩니다.       메서드가 ProcessCmdKey 컨트롤에 있는지 여부를 먼저 확인는 <xref:System.Windows.Forms.ContextMenu>, 그렇다면 수 있도록는 <xref:System.Windows.Forms.ContextMenu>명령 키를 처리 합니다.</xref:System.Windows.Forms.ContextMenu> </xref:System.Windows.Forms.ContextMenu> 명령 키가 메뉴 바로 가기 하는 경우 컨트롤에 부모 키 부모의 ProcessCmdKey 메서드에 전달 됩니다. 한 순수 효과 키 있게 됩니다&quot;컨트롤 계층 구조는 명령입니다. 사용자가 누른 키 뿐만 아니라 키 데이터도 나타냅니다에 누른 보조키 있는 경우 키와 같은 시간입니다. 보조키는 SHIFT, CTRL 및 ALT 키를 포함 합니다."
  syntax:
    content: protected virtual bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);
    parameters:
    - id: msg
      type: System.Windows.Forms.Message
      description: "A <xref href=&quot;System.Windows.Forms.Message&quot;> </xref>, 처리할 창 메시지를 나타내는 참조로 전달 합니다."
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref> 처리할 키를 나타내는 값입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 문자를 처리 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.ProcessCmdKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ProcessDialogChar(System.Char)
  id: ProcessDialogChar(System.Char)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ProcessDialogChar(Char)
  nameWithType: Control.ProcessDialogChar(Char)
  fullName: System.Windows.Forms.Control.ProcessDialogChar(Char)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "대화 상자 문자를 처리합니다."
  remarks: "이 메서드는 메시지를 전처리 컨트롤 니모닉 같은 대화 상자 문자를 처리 하는 동안 호출 됩니다. 이 메서드는 경우에는 <xref:System.Windows.Forms.Control.IsInputChar%2A>메서드는 제어 문자를 처리 하지 않는다는 것을 나타냅니다.</xref:System.Windows.Forms.Control.IsInputChar%2A> ProcessDialogChar 메서드 단순히 문자는 부모의 ProcessDialogChar 메서드를 보내거나 반환 `false` 컨트롤 부모가 없는 경우. <xref:System.Windows.Forms.Form>클래스 대화 상자 문자의 실제 처리를 수행 하려면이 메서드를 재정의 합니다.</xref:System.Windows.Forms.Form> 이 메서드는 컨트롤은 ActiveX 컨트롤 또는 Windows Forms 응용 프로그램에서 호스트 되는 경우에 호출 됩니다."
  syntax:
    content: protected virtual bool ProcessDialogChar (char charCode);
    parameters:
    - id: charCode
      type: System.Char
      description: "처리할 문자입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 문자를 처리 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.ProcessDialogChar*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)
  id: ProcessDialogKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ProcessDialogKey(Keys)
  nameWithType: Control.ProcessDialogKey(Keys)
  fullName: System.Windows.Forms.Control.ProcessDialogKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "대화 상자 키를 처리합니다."
  remarks: "이 메서드는 탭, 리턴, esc를 누르고 화살표 키 등의 대화 상자 문자를 처리 하기 위해 메시지를 전처리 하는 동안 호출 됩니다. 이 메서드는 경우에는 <xref:System.Windows.Forms.Control.IsInputKey%2A>메서드 컨트롤이 키를 처리 하지 않는다는 것을 나타냅니다.</xref:System.Windows.Forms.Control.IsInputKey%2A> 단순히 부모의 메서드가 호출에는 문자 보냅니다 하거나 반환는 관련이 `false`컨트롤 부모가 없는 경우. <xref:System.Windows.Forms.Form>클래스 대화 상자 키의 실제 처리를 수행 하려면이 메서드를 재정의 합니다.</xref:System.Windows.Forms.Form> 이 메서드는 컨트롤은 ActiveX 컨트롤 또는 Windows Forms 응용 프로그램에서 호스트 되는 경우에 호출 됩니다."
  syntax:
    content: protected virtual bool ProcessDialogKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref> 처리할 키를 나타내는 값입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 키를 처리 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.ProcessDialogKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)
  id: ProcessKeyEventArgs(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ProcessKeyEventArgs(Message)
  nameWithType: Control.ProcessKeyEventArgs(Message)
  fullName: System.Windows.Forms.Control.ProcessKeyEventArgs(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "키 메시지를 처리 하 고 적절 한 컨트롤 이벤트를 생성 합니다."
  remarks: "이 메서드는 키보드 메시지를 받을 때 호출 됩니다. 메서드를 호출 하 여 메시지에 대 한 적절 한 키 이벤트를 생성 하는 <xref:System.Windows.Forms.Control.OnKeyPress%2A>, <xref:System.Windows.Forms.Control.OnKeyDown%2A>, 또는 <xref:System.Windows.Forms.Control.OnKeyUp%2A>메서드.</xref:System.Windows.Forms.Control.OnKeyUp%2A> </xref:System.Windows.Forms.Control.OnKeyDown%2A> </xref:System.Windows.Forms.Control.OnKeyPress%2A> `m` 매개 변수를 처리 해야 하는 창 메시지를 포함 합니다. 에 가능한 값은 <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName>속성은 WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, WM_SYSKEYUP, 및 WM_IME_CHAR.</xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual bool ProcessKeyEventArgs (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "A <xref href=&quot;System.Windows.Forms.Message&quot;> </xref>, 처리할 창 메시지를 나타내는 참조로 전달 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 메시지를 처리 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.ProcessKeyEventArgs*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)
  id: ProcessKeyMessage(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ProcessKeyMessage(Message)
  nameWithType: Control.ProcessKeyMessage(Message)
  fullName: System.Windows.Forms.Control.ProcessKeyMessage(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "키보드 메시지를 처리합니다."
  remarks: "이 메서드는 키보드 메시지를 받을 때 호출 됩니다. 메서드는 먼저 컨트롤에 부모; 여부 확인 따라서 부모 항목을 호출 하는 경우 <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A>메서드.</xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> 경우 부모의 <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A>방법은 메시지를 처리 하지 않습니다 하면 <xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A>메서드는 적절 한 키보드 이벤트를 생성 합니다.</xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A> </xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> `m` 매개 변수를 처리 해야 하는 창 메시지를 포함 합니다. 에 가능한 값은 <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName>속성은 WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, 및 WM_SYSKEYUP.</xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual bool ProcessKeyMessage (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "A <xref href=&quot;System.Windows.Forms.Message&quot;> </xref>, 처리할 창 메시지를 나타내는 참조로 전달 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 메시지를 처리 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.ProcessKeyMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)
  id: ProcessKeyPreview(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ProcessKeyPreview(Message)
  nameWithType: Control.ProcessKeyPreview(Message)
  fullName: System.Windows.Forms.Control.ProcessKeyPreview(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "키보드 메시지를 미리 봅니다."
  remarks: "이 메서드는 자식 컨트롤이 키보드 메시지를 수신할 때 자식 컨트롤에 의해 호출 됩니다. 자식 컨트롤의 메시지에 대 한 키보드 이벤트를 생성 하기 전에이 메서드를 호출 합니다. 이 메서드가 반환 하는 경우 `true`, 자식 컨트롤에서 메시지가 처리 및 키보드 이벤트를 생성 하지 않습니다. `m` 매개 변수를 미리 보려면 창 메시지를 포함 합니다. 에 가능한 값은 <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName>속성은 WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, 및 WM_SYSKEYUP.</xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName> ProcessKeyPreview 메서드 단순히 문자는 부모의 ProcessKeyPreview 메서드를 보내거나 반환 `false` 컨트롤 부모가 없는 경우. <xref:System.Windows.Forms.Form>클래스 대화 상자 키의 실제 처리를 수행 하려면이 메서드를 재정의 합니다.</xref:System.Windows.Forms.Form>"
  syntax:
    content: protected virtual bool ProcessKeyPreview (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "A <xref href=&quot;System.Windows.Forms.Message&quot;> </xref>, 처리할 창 메시지를 나타내는 참조로 전달 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 메시지를 처리 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.ProcessKeyPreview*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ProcessMnemonic(System.Char)
  id: ProcessMnemonic(System.Char)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ProcessMnemonic(Char)
  nameWithType: Control.ProcessMnemonic(Char)
  fullName: System.Windows.Forms.Control.ProcessMnemonic(Char)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "니모닉 문자를 처리 합니다."
  remarks: "이 메서드는 컨트롤의 니모닉 문자를 처리할 수 있도록 지정 합니다. 호출 됩니다. 메서드가 결정 해야 컨트롤을 니모닉 처리 하는 상태에 있는지 여부와 지정 된 문자를 니모닉 나타내는지 합니다. 하는 경우,이 메서드는 수행 돌아가 니모닉와 연결 된 동작 `true`합니다. 메서드가 반환 하지, 하면 `false`합니다. 이 메서드의 구현에서는 자주 사용 하 여는 <xref:System.Windows.Forms.Control.IsMnemonic%2A>메서드를 지정 된 문자는 컨트롤의 텍스트에 니모닉과 일치 하는지 확인 합니다.</xref:System.Windows.Forms.Control.IsMnemonic%2A>       예를 들어: ```c#   if (CanSelect && IsMnemonic(charCode, MyControl.Text) {         // Perform action associated with mnemonic.          }   ``` ProcessMnemonic 메서드의 기본 구현은 단순히 반환 `false` 컨트롤에 없는 니모닉 있음을 나타내기 위해."
  example:
  - "The following code example demonstrates an extension of the button class that overrides the ProcessMnemonic method to exhibit custom behavior. The example also demonstrates the use of the <xref:System.Windows.Forms.Control.CanSelect%2A> and <xref:System.Windows.Forms.Control.IsMnemonic%2A> properties. To run this example paste the following code after a form class, in the same file. Add a button of type `MnemonicButton` to the form.  \n  \n [!code-cs[System.Windows.Forms.ProcessMnemonic#1](~/add/codesnippet/csharp/m-system.windows.forms.c_47_1.cs)]\n [!code-cpp[System.Windows.Forms.ProcessMnemonic#1](~/add/codesnippet/cpp/m-system.windows.forms.c_47_1.cpp)]\n [!code-vb[System.Windows.Forms.ProcessMnemonic#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_47_1.vb)]"
  syntax:
    content: protected virtual bool ProcessMnemonic (char charCode);
    parameters:
    - id: charCode
      type: System.Char
      description: "처리할 문자입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 문자를 니모닉으로 처리 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.ProcessMnemonic*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ProductName
  id: ProductName
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ProductName
  nameWithType: Control.ProductName
  fullName: System.Windows.Forms.Control.ProductName
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤을 포함 하는 어셈블리의 제품 이름을 가져옵니다."
  remarks: "ProductName 속성은 읽기 전용 속성입니다. 이 속성의 값을 변경 하려면 <xref:System.Reflection.AssemblyProductAttribute.Product%2A> <xref:System.Reflection.AssemblyProductAttribute>.</xref:System.Reflection.AssemblyProductAttribute> 속성 값</xref:System.Reflection.AssemblyProductAttribute.Product%2A> 설정 C# 코드의 다음 줄 ProductName 속성을 설정합니다.      ```   [assembly: AssemblyProduct(&quot;MyApplication&quot;)]   ```      > [!NOTE]> 하는 것이 좋습니다 회사 이름, 제품 이름 및 제품 버전을 제공 합니다. 이 정보를 제공 사용할 수 있도록 Windows Forms 기능와 같은 <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=fullName>&quot;Certified for Windows&quot; 프로그램 준수 하는 응용 프로그램을 작성할을 보다 쉽게 만들어 주는.</xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=fullName> Certified for Windows 프로그램에 대 한 자세한 내용은 http://msdn.microsoft.com/certification을 참조 합니다."
  example:
  - "The following code example displays information about the application in a <xref:System.Windows.Forms.Label> contained by a <xref:System.Windows.Forms.Form>. This example requires that the <xref:System.Windows.Forms.Control.CompanyName%2A>, ProductName and <xref:System.Windows.Forms.Control.ProductVersion%2A> have been set.  \n  \n [!code-cs[Windows.Forms.Control Properties3#1](~/add/codesnippet/csharp/p-system.windows.forms.c_78_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties3#1](~/add/codesnippet/cpp/p-system.windows.forms.c_78_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties3#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_78_1.vb)]"
  syntax:
    content: public string ProductName { get; }
    return:
      type: System.String
      description: "컨트롤을 포함 하는 어셈블리의 제품 이름입니다."
  overload: System.Windows.Forms.Control.ProductName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ProductVersion
  id: ProductVersion
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ProductVersion
  nameWithType: Control.ProductVersion
  fullName: System.Windows.Forms.Control.ProductVersion
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤을 포함 하는 어셈블리의 버전을 가져옵니다."
  remarks: "ProductVersion 속성은 읽기 전용 속성입니다. 이 속성의 값을 변경 하려면 <xref:System.Reflection.AssemblyVersionAttribute.Version%2A> <xref:System.Reflection.AssemblyVersionAttribute>.</xref:System.Reflection.AssemblyVersionAttribute> 속성 값</xref:System.Reflection.AssemblyVersionAttribute.Version%2A> 설정 C# 코드의 다음 줄 ProductVersion 속성을 설정합니다.      ```   [assembly: AssemblyVersion(&quot;1.0.1&quot;)]   ```      > [!NOTE]> 하는 것이 좋습니다 회사 이름, 제품 이름 및 제품 버전을 제공 합니다. 이 정보를 제공 사용할 수 있도록 Windows Forms 기능와 같은 <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=fullName>&quot;Certified for Windows&quot; 프로그램 준수 하는 응용 프로그램을 작성할을 보다 쉽게 만들어 주는.</xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=fullName> Certified for Windows 프로그램에 대 한 자세한 내용은 http://msdn.microsoft.com/certification을 참조 합니다."
  example:
  - "The following code example displays information about the application in a <xref:System.Windows.Forms.Label> contained by a <xref:System.Windows.Forms.Form>. This example requires that the <xref:System.Windows.Forms.Control.CompanyName%2A>, <xref:System.Windows.Forms.Control.ProductName%2A> and ProductVersion have been set.  \n  \n [!code-cs[Windows.Forms.Control Properties3#1](~/add/codesnippet/csharp/p-system.windows.forms.c_45_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties3#1](~/add/codesnippet/cpp/p-system.windows.forms.c_45_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties3#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_45_1.vb)]"
  syntax:
    content: public string ProductVersion { get; }
    return:
      type: System.String
      description: "컨트롤을 포함 하는 어셈블리의 파일 버전입니다."
  overload: System.Windows.Forms.Control.ProductVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.PropagatingImeMode
  id: PropagatingImeMode
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: PropagatingImeMode
  nameWithType: Control.PropagatingImeMode
  fullName: System.Windows.Forms.Control.PropagatingImeMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "전파 IME 모드를 나타내는 개체를 가져옵니다."
  syntax:
    content: protected static System.Windows.Forms.ImeMode PropagatingImeMode { get; }
    return:
      type: System.Windows.Forms.ImeMode
      description: "전파 IME 모드를 나타내는 개체입니다."
  overload: System.Windows.Forms.Control.PropagatingImeMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.QueryAccessibilityHelp
  id: QueryAccessibilityHelp
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: QueryAccessibilityHelp
  nameWithType: Control.QueryAccessibilityHelp
  fullName: System.Windows.Forms.Control.QueryAccessibilityHelp
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우 <xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref> 액세스 가능성 응용 프로그램에 도움말을 제공 합니다."
  remarks: "사용 해야는 <xref:System.Windows.Forms.HelpProvider>클래스를 사용 하는 사용자가 F1 키를 눌러 액세스 가능한 개체에 대 한 도움말을 호출할 수 있습니다.</xref:System.Windows.Forms.HelpProvider> <xref:System.Windows.Forms.HelpProvider>이렇게 하면 <xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs>.</xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs> 모든 정보가 포함 된</xref:System.Windows.Forms.HelpProvider> 를 사용 하 여 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code excerpt demonstrates handling the QueryAccessibilityHelp event. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#3](~/add/codesnippet/visualbasic/e-system.windows.forms.c_11_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#3](~/add/codesnippet/csharp/e-system.windows.forms.c_11_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#3](~/add/codesnippet/cpp/e-system.windows.forms.c_11_1.cpp)]"
  syntax:
    content: public event System.Windows.Forms.QueryAccessibilityHelpEventHandler QueryAccessibilityHelp;
    return:
      type: System.Windows.Forms.QueryAccessibilityHelpEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.QueryContinueDrag
  id: QueryContinueDrag
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: QueryContinueDrag
  nameWithType: Control.QueryContinueDrag
  fullName: System.Windows.Forms.Control.QueryContinueDrag
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "끌어서 놓기 작업 중에 발생 하 고 끌기 소스가 끌어서 놓기 작업을 취소 해야 할지를 결정 하도록 합니다."
  remarks: "QueryContinueDrag 이벤트는 끌어서 놓기 작업 중 키보드 또는 마우스 단추 상태가 변경 되 면 발생 합니다. QueryContinueDrag 이벤트는 끌기 소스가 끌어서 놓기 작업을 취소 해야 할지를 결정 하도록 수 있습니다.       다음에서는 끌어서 놓기 작업이 발생 시기와 방법을 설명 합니다.       <xref:System.Windows.Forms.Control.DoDragDrop%2A>메서드는 현재 커서 위치에서 컨트롤을 확인 합니다.</xref:System.Windows.Forms.Control.DoDragDrop%2A> 그런 다음 컨트롤은 유효한 놓기 대상 인지 확인 합니다.       컨트롤이 유효한 놓기 대상일 경우는 <xref:System.Windows.Forms.Control.GiveFeedback>이벤트는 지정 된 끌어서 놓기 효과 함께 발생 합니다.</xref:System.Windows.Forms.Control.GiveFeedback> 끌어서 놓기 작업의 목록에 대 한 참조는 <xref:System.Windows.Forms.DragDropEffects>열거형.</xref:System.Windows.Forms.DragDropEffects>       마우스 커서 위치, 키보드 상태 및 마우스 단추 상태의 변경 내용은 추적 합니다.      -사용자가 창의 외부로 이동 하는 경우는 <xref:System.Windows.Forms.Control.DragLeave>이벤트가 발생 합니다.</xref:System.Windows.Forms.Control.DragLeave>      -마우스를 다른 컨트롤로 가져가면 하는 경우는 <xref:System.Windows.Forms.Control.DragEnter>제어 하는 발생에 대 한.</xref:System.Windows.Forms.Control.DragEnter>      -마우스가 이동 하지만 동일한 컨트롤 내에서 경우는 <xref:System.Windows.Forms.Control.DragOver>이벤트가 발생 합니다.</xref:System.Windows.Forms.Control.DragOver>       키보드 또는 마우스 단추 상태가 변경 될, theQueryContinueDrag 이벤트를 발생 시키고 끌기를 계속할지, 데이터를 삭제 하거나 <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>이벤트의 <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</xref:System.Windows.Forms.QueryContinueDragEventArgs> 속성</xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> 의 값에 따라 작업을 취소 하려면 것인지 결정      -If 값 <xref:System.Windows.Forms.DragAction>은 `Continue`, <xref:System.Windows.Forms.Control.DragOver>이벤트 작업을 계속 하려면는 및 <xref:System.Windows.Forms.Control.GiveFeedback>이벤트는 적절 한 시각적 피드백이 설정 될 수 있도록 새로운 효과 함께 발생 합니다.</xref:System.Windows.Forms.Control.GiveFeedback> </xref:System.Windows.Forms.Control.DragOver> </xref:System.Windows.Forms.DragAction> 유효한 끌어서 놓기 작업 결과의 목록에 대 한 참조는 <xref:System.Windows.Forms.DragDropEffects>열거형.</xref:System.Windows.Forms.DragDropEffects>          > [!NOTE] >는 <xref:System.Windows.Forms.Control.DragOver>및 <xref:System.Windows.Forms.Control.GiveFeedback>이벤트는 쌍을 이루고 있어서 마우스가 놓기 대상을 통과할 때 사용자가 제공 대 한 최신 피드백이 게 마우스 위치에.</xref:System.Windows.Forms.Control.GiveFeedback> </xref:System.Windows.Forms.Control.DragOver>      -If 값 <xref:System.Windows.Forms.DragAction>은 `Drop`, 놓기 효과 값이 원본에 반환, 소스 응용 프로그램이 소스 데이터에 대해 적절 한 작업을 수행할 수 있도록 예를 들어 데이터를 잘라냅니다 해당 작업이 이동 이면.</xref:System.Windows.Forms.DragAction>      -If 값 <xref:System.Windows.Forms.DragAction>은 `Cancel`, <xref:System.Windows.Forms.Control.DragLeave>이벤트가 발생 합니다.</xref:System.Windows.Forms.Control.DragLeave> </xref:System.Windows.Forms.DragAction>       기본적으로 끌어서 설정 <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>를 `Cancel` 에 <xref:System.Windows.Forms.DragAction>ESC 키를 누른 설정 하는 경우 <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>를 `Drop` 에 <xref:System.Windows.Forms.DragAction>마우스 왼쪽, 가운데 또는 오른쪽 단추를 누르면.</xref:System.Windows.Forms.DragAction> </xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> </xref:System.Windows.Forms.DragAction> </xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \n  \n The example also demonstrates using custom cursors for the drag-and-drop operation. The example requires that two cursor files,`3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.  \n  \n The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>. Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.  \n  \n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the QueryContinueDrag event handler.  \n  \n This code excerpt demonstrates using the QueryContinueDrag event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \n  \n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/cpp/e-system.windows.forms.c_75_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/visualbasic/e-system.windows.forms.c_75_1.vb)]\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/csharp/e-system.windows.forms.c_75_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag;
    return:
      type: System.Windows.Forms.QueryContinueDragEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)
  id: RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RaiseDragEvent(Object,DragEventArgs)
  nameWithType: Control.RaiseDragEvent(Object,DragEventArgs)
  fullName: System.Windows.Forms.Control.RaiseDragEvent(Object,DragEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "적절 한 끌기 이벤트를 발생 시킵니다."
  syntax:
    content: protected void RaiseDragEvent (object key, System.Windows.Forms.DragEventArgs e);
    parameters:
    - id: key
      type: System.Object
      description: "이벤트 발생입니다."
    - id: e
      type: System.Windows.Forms.DragEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DragEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.RaiseDragEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)
  id: RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RaiseKeyEvent(Object,KeyEventArgs)
  nameWithType: Control.RaiseKeyEvent(Object,KeyEventArgs)
  fullName: System.Windows.Forms.Control.RaiseKeyEvent(Object,KeyEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "적절 한 키 이벤트를 발생 시킵니다."
  syntax:
    content: protected void RaiseKeyEvent (object key, System.Windows.Forms.KeyEventArgs e);
    parameters:
    - id: key
      type: System.Object
      description: "이벤트 발생입니다."
    - id: e
      type: System.Windows.Forms.KeyEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.KeyEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.RaiseKeyEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)
  id: RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RaiseMouseEvent(Object,MouseEventArgs)
  nameWithType: Control.RaiseMouseEvent(Object,MouseEventArgs)
  fullName: System.Windows.Forms.Control.RaiseMouseEvent(Object,MouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "적절 한 마우스 이벤트를 발생 시킵니다."
  syntax:
    content: protected void RaiseMouseEvent (object key, System.Windows.Forms.MouseEventArgs e);
    parameters:
    - id: key
      type: System.Object
      description: "이벤트 발생입니다."
    - id: e
      type: System.Windows.Forms.MouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.MouseEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.RaiseMouseEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)
  id: RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RaisePaintEvent(Object,PaintEventArgs)
  nameWithType: Control.RaisePaintEvent(Object,PaintEventArgs)
  fullName: System.Windows.Forms.Control.RaisePaintEvent(Object,PaintEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "적합 한 paint 이벤트를 발생 시킵니다."
  syntax:
    content: protected void RaisePaintEvent (object key, System.Windows.Forms.PaintEventArgs e);
    parameters:
    - id: key
      type: System.Object
      description: "이벤트 발생입니다."
    - id: e
      type: System.Windows.Forms.PaintEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.PaintEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.RaisePaintEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RecreateHandle
  id: RecreateHandle
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RecreateHandle()
  nameWithType: Control.RecreateHandle()
  fullName: System.Windows.Forms.Control.RecreateHandle()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 대 한 핸들 다시 만들기를 적용 합니다."
  remarks: "RecreateHandle 메서드는 새 컨트롤에 대 한 매개 변수가 필요 하지만 호출에서 사용 하 여 <xref:System.Windows.Forms.Control.UpdateStyles%2A>를 <xref:System.Windows.Forms.Control.CreateParams%2A>충분 하지 않습니다.</xref:System.Windows.Forms.Control.CreateParams%2A> </xref:System.Windows.Forms.Control.UpdateStyles%2A> 이 메서드를 호출 또한 <xref:System.Windows.Forms.Control.DestroyHandle%2A>및<xref:System.Windows.Forms.Control.CreateHandle%2A> 설정 <xref:System.Windows.Forms.Control.RecreatingHandle%2A>를 `true`.</xref:System.Windows.Forms.Control.RecreatingHandle%2A> </xref:System.Windows.Forms.Control.CreateHandle%2A> </xref:System.Windows.Forms.Control.DestroyHandle%2A>"
  syntax:
    content: protected void RecreateHandle ();
    parameters: []
  overload: System.Windows.Forms.Control.RecreateHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RecreatingHandle
  id: RecreatingHandle
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RecreatingHandle
  nameWithType: Control.RecreatingHandle
  fullName: System.Windows.Forms.Control.RecreatingHandle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤이 현재 자신의 핸들을 다시 만들고 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "RecreatingHandle 속성은 반환 `true` 경우는 <xref:System.Windows.Forms.Control.RecreateHandle%2A>메서드 컨트롤에서 계속 실행 됩니다.</xref:System.Windows.Forms.Control.RecreateHandle%2A>"
  syntax:
    content: public bool RecreatingHandle { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 현재 자신의 핸들을 다시 만들고 있으면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.RecreatingHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)
  id: RectangleToClient(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RectangleToClient(Rectangle)
  nameWithType: Control.RectangleToClient(Rectangle)
  fullName: System.Windows.Forms.Control.RectangleToClient(Rectangle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "클라이언트 좌표에서 지정 된 화면 사각형의 위치와 크기를 계산합니다."
  syntax:
    content: public System.Drawing.Rectangle RectangleToClient (System.Drawing.Rectangle r);
    parameters:
    - id: r
      type: System.Drawing.Rectangle
      description: "화면 좌표 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 변환 합니다."
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 변환 된 나타내는 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>, <code> r </code>를 클라이언트 좌표로 표시에서 합니다."
  overload: System.Windows.Forms.Control.RectangleToClient*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)
  id: RectangleToScreen(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RectangleToScreen(Rectangle)
  nameWithType: Control.RectangleToScreen(Rectangle)
  fullName: System.Windows.Forms.Control.RectangleToScreen(Rectangle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "크기와 화면 좌표에서 지정 된 클라이언트 사각형의 위치를 계산 합니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.BackColor%2A>, RectangleToScreen, <xref:System.Windows.Forms.Control.PointToScreen%2A>, <xref:System.Windows.Forms.Control.MouseButtons%2A>, <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=fullName>, and <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=fullName> members. To run the example, paste the following code in a form called **Form1** containing several controls. This example requires that the <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseMove>, and <xref:System.Windows.Forms.Control.MouseUp> events are connected to the event handlers defined in the example.  \n  \n [!code-cs[System.Windows.Forms.RectangleToScreen#2](~/add/codesnippet/csharp/m-system.windows.forms.c_86_1.cs)]\n [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/add/codesnippet/cpp/m-system.windows.forms.c_86_1.cpp)]\n [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/add/codesnippet/visualbasic/m-system.windows.forms.c_86_1.vb)]"
  syntax:
    content: public System.Drawing.Rectangle RectangleToScreen (System.Drawing.Rectangle r);
    parameters:
    - id: r
      type: System.Drawing.Rectangle
      description: "클라이언트 좌표 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 변환 합니다."
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 변환 된 나타내는 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>, <code> p </code>의 화면 좌표입니다."
  overload: System.Windows.Forms.Control.RectangleToScreen*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)
  id: ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ReflectMessage(IntPtr,Message)
  nameWithType: Control.ReflectMessage(IntPtr,Message)
  fullName: System.Windows.Forms.Control.ReflectMessage(IntPtr,Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 핸들에 바인딩된 컨트롤에 지정된 된 메시지를 반영 합니다."
  remarks: "ReflectMessage 메서드는 인프라 메서드이며 이며 일반적으로 코드에서 호출 해야 합니다.       경우는 `hWnd` ReflectMessage 메서드는 반환 매개 변수는 유효한 컨트롤을 나타내지 않습니다, `false`합니다.       Windows 메시지는 최상위 창에 반환 되므로, ReflectMessage 메서드는 메시지를 보낸 컨트롤에 반환 메시지를 전파 하는 데 사용 됩니다."
  syntax:
    content: protected static bool ReflectMessage (IntPtr hWnd, ref System.Windows.Forms.Message m);
    parameters:
    - id: hWnd
      type: System.IntPtr
      description: "<xref:System.IntPtr>메시지를 반영 하기 위해 컨트롤의 핸들을 나타내는.</xref:System.IntPtr>"
    - id: m
      type: System.Windows.Forms.Message
      description: "A <xref href=&quot;System.Windows.Forms.Message&quot;> </xref> 반영 하기 위해 Windows 메시지를 표시 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>메시지가 반영 되었으면; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.ReflectMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Refresh
  id: Refresh
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Refresh()
  nameWithType: Control.Refresh()
  fullName: System.Windows.Forms.Control.Refresh()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 클라이언트 영역을 무효화 하 고 즉시 다시 그리도록 자체와 모든 자식 컨트롤을 강제로 수행 합니다."
  syntax:
    content: public virtual void Refresh ();
    parameters: []
  overload: System.Windows.Forms.Control.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Region
  id: Region
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Region
  nameWithType: Control.Region
  fullName: System.Windows.Forms.Control.Region
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤과 연결 된 창 영역을 가져오거나 설정 합니다."
  remarks: "창 영역은 운영 체제에서 그리기가 허용 하는 창 내의 픽셀의 컬렉션입니다. 운영 체제 창의 창 영역 외부에 있는 모든 부분을 표시 되지 않습니다. 컨트롤의 영역 좌표가 되지 않은 컨트롤의 클라이언트 영역 컨트롤의 왼쪽 위 모퉁이 기준으로 합니다.      > [!NOTE] > 영역과 함께 포함 되는 픽셀 컬렉션 연속 되지 않을 수 있습니다."
  example:
  - "The following code example demonstrates how to use the Region property by creating a round button. To run the example, paste the following code in a form containing a button called `roundButton`. This example requires that the <xref:System.Windows.Forms.Control.Paint> event is connected to the event handler defined in the example.  \n  \n [!code-cs[System.Windows.Forms.Control.Region#1](~/add/codesnippet/csharp/p-system.windows.forms.c_106_1.cs)]\n [!code-cpp[System.Windows.Forms.Control.Region#1](~/add/codesnippet/cpp/p-system.windows.forms.c_106_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.Region#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_106_1.vb)]"
  syntax:
    content: public System.Drawing.Region Region { get; set; }
    return:
      type: System.Drawing.Region
      description: "창 <xref href=&quot;System.Drawing.Region&quot;> </xref> 컨트롤과 연결 된입니다."
  overload: System.Windows.Forms.Control.Region*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RegionChanged
  id: RegionChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RegionChanged
  nameWithType: Control.RegionChanged
  fullName: System.Windows.Forms.Control.RegionChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우의 값은 <xref:System.Windows.Forms.Control.Region*>속성 변경.</xref:System.Windows.Forms.Control.Region*>"
  remarks: "이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RegionChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the RegionChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#22](~/add/codesnippet/csharp/e-system.windows.forms.c_18_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#22](~/add/codesnippet/visualbasic/e-system.windows.forms.c_18_1.vb)]"
  syntax:
    content: public event EventHandler RegionChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RenderRightToLeft
  id: RenderRightToLeft
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RenderRightToLeft
  nameWithType: Control.RenderRightToLeft
  fullName: System.Windows.Forms.Control.RenderRightToLeft
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 속성은 더 이상 사용 되지 않습니다."
  syntax:
    content: protected bool RenderRightToLeft { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 오른쪽에서 왼쪽으로 렌더링 되는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.RenderRightToLeft*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ResetBackColor
  id: ResetBackColor
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ResetBackColor()
  nameWithType: Control.ResetBackColor()
  fullName: System.Windows.Forms.Control.ResetBackColor()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "다시 설정 된 <xref:System.Windows.Forms.Control.BackColor*>속성의 기본값을.</xref:System.Windows.Forms.Control.BackColor*>"
  remarks: "이 메서드는이 클래스와 관련이 없습니다."
  syntax:
    content: public virtual void ResetBackColor ();
    parameters: []
  overload: System.Windows.Forms.Control.ResetBackColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ResetBindings
  id: ResetBindings
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ResetBindings()
  nameWithType: Control.ResetBindings()
  fullName: System.Windows.Forms.Control.ResetBindings()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "에 바인딩된 컨트롤의 <xref href=&quot;System.Windows.Forms.BindingSource&quot;> </xref> 목록의 모든 항목을 다시 읽고을 표시 된 값을 새로 고칩니다."
  remarks: "이 메서드는이 클래스와 관련이 없습니다."
  syntax:
    content: public void ResetBindings ();
    parameters: []
  overload: System.Windows.Forms.Control.ResetBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ResetCursor
  id: ResetCursor
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ResetCursor()
  nameWithType: Control.ResetCursor()
  fullName: System.Windows.Forms.Control.ResetCursor()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "다시 설정 된 <xref:System.Windows.Forms.Control.Cursor*>속성의 기본값을.</xref:System.Windows.Forms.Control.Cursor*>"
  remarks: "이 메서드는이 클래스와 관련이 없습니다."
  syntax:
    content: public virtual void ResetCursor ();
    parameters: []
  overload: System.Windows.Forms.Control.ResetCursor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ResetFont
  id: ResetFont
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ResetFont()
  nameWithType: Control.ResetFont()
  fullName: System.Windows.Forms.Control.ResetFont()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "다시 설정 된 <xref:System.Windows.Forms.Control.Font*>속성의 기본값을.</xref:System.Windows.Forms.Control.Font*>"
  remarks: "이 메서드는이 클래스와 관련이 없습니다."
  syntax:
    content: public virtual void ResetFont ();
    parameters: []
  overload: System.Windows.Forms.Control.ResetFont*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ResetForeColor
  id: ResetForeColor
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ResetForeColor()
  nameWithType: Control.ResetForeColor()
  fullName: System.Windows.Forms.Control.ResetForeColor()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "다시 설정 된 <xref:System.Windows.Forms.Control.ForeColor*>속성의 기본값을.</xref:System.Windows.Forms.Control.ForeColor*>"
  remarks: "이 메서드는이 클래스와 관련이 없습니다."
  syntax:
    content: public virtual void ResetForeColor ();
    parameters: []
  overload: System.Windows.Forms.Control.ResetForeColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ResetImeMode
  id: ResetImeMode
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ResetImeMode()
  nameWithType: Control.ResetImeMode()
  fullName: System.Windows.Forms.Control.ResetImeMode()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "다시 설정 된 <xref:System.Windows.Forms.Control.ImeMode*>속성의 기본값을.</xref:System.Windows.Forms.Control.ImeMode*>"
  remarks: "이 메서드는이 클래스와 관련이 없습니다."
  syntax:
    content: public void ResetImeMode ();
    parameters: []
  overload: System.Windows.Forms.Control.ResetImeMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ResetMouseEventArgs
  id: ResetMouseEventArgs
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ResetMouseEventArgs()
  nameWithType: Control.ResetMouseEventArgs()
  fullName: System.Windows.Forms.Control.ResetMouseEventArgs()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "처리 하는 컨트롤을 다시 설정 된 <xref href=&quot;System.Windows.Forms.Control.MouseLeave&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected void ResetMouseEventArgs ();
    parameters: []
  overload: System.Windows.Forms.Control.ResetMouseEventArgs*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ResetRightToLeft
  id: ResetRightToLeft
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ResetRightToLeft()
  nameWithType: Control.ResetRightToLeft()
  fullName: System.Windows.Forms.Control.ResetRightToLeft()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "다시 설정 된 <xref:System.Windows.Forms.Control.RightToLeft*>속성의 기본값을.</xref:System.Windows.Forms.Control.RightToLeft*>"
  remarks: "이 메서드는이 클래스와 관련이 없습니다."
  syntax:
    content: public virtual void ResetRightToLeft ();
    parameters: []
  overload: System.Windows.Forms.Control.ResetRightToLeft*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ResetText
  id: ResetText
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ResetText()
  nameWithType: Control.ResetText()
  fullName: System.Windows.Forms.Control.ResetText()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "다시 설정 된 <xref:System.Windows.Forms.Control.Text*>속성의 기본값을.</xref:System.Windows.Forms.Control.Text*>"
  remarks: "일반적으로이 방법을 사용 하면 <xref:System.Windows.Forms.Control> <xref:System.Windows.Forms.Control>.</xref:System.Windows.Forms.Control> 통합 제어를 만들어 또는</xref:System.Windows.Forms.Control> 디자이너를 만들거나 하는 경우"
  syntax:
    content: public virtual void ResetText ();
    parameters: []
  overload: System.Windows.Forms.Control.ResetText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Resize
  id: Resize
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Resize
  nameWithType: Control.Resize
  fullName: System.Windows.Forms.Control.Resize
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 크기를 조정 하는 경우 발생 합니다."
  remarks: "확인 하려면는 <xref:System.Windows.Forms.Control.Size%2A>크기가 조정된 된 컨트롤의 캐스팅할 수 있습니다는 `sender` 의 등록 된 매개 변수 <xref:System.Windows.Forms.ControlEventHandler>메서드를 한 <xref:System.Windows.Forms.Control>가져오고, 해당 <xref:System.Windows.Forms.Control.Size%2A>속성 (또는 <xref:System.Windows.Forms.Control.Height%2A>및 <xref:System.Windows.Forms.Control.Width%2A>속성 개별적으로).</xref:System.Windows.Forms.Control.Width%2A> </xref:System.Windows.Forms.Control.Height%2A> </xref:System.Windows.Forms.Control.Size%2A> </xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.ControlEventHandler> </xref:System.Windows.Forms.Control.Size%2A>       사용자 지정 레이아웃을 처리 하려면는 <xref:System.Windows.Forms.Control.Layout>크기 조정 이벤트 대신 이벤트.</xref:System.Windows.Forms.Control.Layout> <xref:System.Windows.Forms.Control.Layout>크기 조정 이벤트에 대 한 응답 하지만 컨트롤의 레이아웃에 영향을 주는 다른 변경 사항에 따라 발생 합니다.</xref:System.Windows.Forms.Control.Layout>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example handles the Resize event of a <xref:System.Windows.Forms.Form>. When the form is resized, the event handler ensures that the form stays square (its <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A> remain equal). To run this example, make sure and associate this event-handling method with the form’s Resize event.  \n  \n [!code-vb[WinForms.Control.Resize#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_12_1.vb)]\n [!code-cpp[WinForms.Control.Resize#1](~/add/codesnippet/cpp/e-system.windows.forms.c_12_1.cpp)]\n [!code-cs[WinForms.Control.Resize#1](~/add/codesnippet/csharp/e-system.windows.forms.c_12_1.cs)]"
  syntax:
    content: public event EventHandler Resize;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ResizeRedraw
  id: ResizeRedraw
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ResizeRedraw
  nameWithType: Control.ResizeRedraw
  fullName: System.Windows.Forms.Control.ResizeRedraw
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤 크기를 조정할 때 자신을 다시 그리면 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "ResizeRedraw 속성 값은 반환 값에 해당 하는 <xref:System.Windows.Forms.Control.GetStyle%2A>전달 하는 경우 메서드는 <xref:System.Windows.Forms.ControlStyles?displayProperty=fullName>값을 매개 변수로.</xref:System.Windows.Forms.ControlStyles?displayProperty=fullName> </xref:System.Windows.Forms.Control.GetStyle%2A>"
  syntax:
    content: protected bool ResizeRedraw { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤의 크기를 조정할 때 자신을 다시 그리면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.ResizeRedraw*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ResumeLayout
  id: ResumeLayout
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ResumeLayout()
  nameWithType: Control.ResumeLayout()
  fullName: System.Windows.Forms.Control.ResumeLayout()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "일반 레이아웃 논리를 다시 시작합니다."
  remarks: "보류 중인 레이아웃 요청이 없는 경우에 즉시 레이아웃을 강제로 ResumeLayout 메서드를 호출 합니다.       <xref:System.Windows.Forms.Control.SuspendLayout%2A>ResumeLayout 메서드는 동시에 표시 하지 않는 데 여러 및 <xref:System.Windows.Forms.Control.Layout>컨트롤의 여러 속성을 조정 하는 동안 이벤트.</xref:System.Windows.Forms.Control.Layout> </xref:System.Windows.Forms.Control.SuspendLayout%2A> 예를 들어 일반적으로 호출 하는 것은 <xref:System.Windows.Forms.Control.SuspendLayout%2A>메서드를 설정 합니다는 <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, 또는 <xref:System.Windows.Forms.Control.Dock%2A>제어 및 변경 내용을 적용 하려면 사용할 수 있도록 ResumeLayout 메서드 호출의 속성입니다.</xref:System.Windows.Forms.Control.Dock%2A> </xref:System.Windows.Forms.Control.Anchor%2A> </xref:System.Windows.Forms.Control.Location%2A> </xref:System.Windows.Forms.Control.Size%2A> </xref:System.Windows.Forms.Control.SuspendLayout%2A>       에 대 한 보류 중인 호출 해야 <xref:System.Windows.Forms.Control.SuspendLayout%2A>ResumeLayout 성공적으로 호출할 수에 대 한.</xref:System.Windows.Forms.Control.SuspendLayout%2A>"
  example:
  - "The following code example adds two buttons to a form. The example transactions the addition of the buttons by using the <xref:System.Windows.Forms.Control.SuspendLayout%2A> and ResumeLayout methods.  \n  \n [!code-cs[Windows.Forms.Control Members2#2](~/add/codesnippet/csharp/m-system.windows.forms.c_34_1.cs)]\n [!code-cpp[Windows.Forms.Control Members2#2](~/add/codesnippet/cpp/m-system.windows.forms.c_34_1.cpp)]\n [!code-vb[Windows.Forms.Control Members2#2](~/add/codesnippet/visualbasic/m-system.windows.forms.c_34_1.vb)]"
  syntax:
    content: public void ResumeLayout ();
    parameters: []
  overload: System.Windows.Forms.Control.ResumeLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ResumeLayout(System.Boolean)
  id: ResumeLayout(System.Boolean)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ResumeLayout(Boolean)
  nameWithType: Control.ResumeLayout(Boolean)
  fullName: System.Windows.Forms.Control.ResumeLayout(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "일반 레이아웃 논리를 필요에 따라 강제로 즉시 레이아웃의 보류 중인 레이아웃 요청을 다시 시작 합니다."
  remarks: "호출 된 <xref:System.Windows.Forms.Control.ResumeLayout%2A>보류 중인 레이아웃 요청 되어 있는 경우 메서드 강제로 즉시 레이아웃 합니다.</xref:System.Windows.Forms.Control.ResumeLayout%2A> 경우는 `performLayout` 로 설정 된 `true`, 즉시 레이아웃 보류 중인 레이아웃 요청 되어 있는 경우에 발생 합니다.       <xref:System.Windows.Forms.Control.SuspendLayout%2A>및 <xref:System.Windows.Forms.Control.ResumeLayout%2A>메서드는 동시에 표시 하지 않는 데 여러 <xref:System.Windows.Forms.Control.Layout>컨트롤의 여러 속성을 조정 하는 동안 이벤트.</xref:System.Windows.Forms.Control.Layout> </xref:System.Windows.Forms.Control.ResumeLayout%2A> </xref:System.Windows.Forms.Control.SuspendLayout%2A> 예를 들어 일반적으로 호출 하는 것은 <xref:System.Windows.Forms.Control.SuspendLayout%2A>메서드를 설정 합니다는 <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, 또는 <xref:System.Windows.Forms.Control.Dock%2A>속성, 컨트롤 및 호출 합니다는 <xref:System.Windows.Forms.Control.ResumeLayout%2A>변경 내용을 적용 하려면 사용할 수 있도록 메서드.</xref:System.Windows.Forms.Control.ResumeLayout%2A> </xref:System.Windows.Forms.Control.Dock%2A> </xref:System.Windows.Forms.Control.Anchor%2A> </xref:System.Windows.Forms.Control.Location%2A> </xref:System.Windows.Forms.Control.Size%2A> </xref:System.Windows.Forms.Control.SuspendLayout%2A>       에 대 한 보류 중인 호출 해야 <xref:System.Windows.Forms.Control.SuspendLayout%2A>에 대 한 <xref:System.Windows.Forms.Control.ResumeLayout%2A>성공적으로 호출할 수 있습니다.</xref:System.Windows.Forms.Control.ResumeLayout%2A> </xref:System.Windows.Forms.Control.SuspendLayout%2A>      > [!NOTE] > 여러 컨트롤에 부모 컨트롤을 추가할 때 것이 좋습니다를 호출 하는 <xref:System.Windows.Forms.Control.SuspendLayout%2A>메서드는 추가할 컨트롤을 초기화 하기 전에.</xref:System.Windows.Forms.Control.SuspendLayout%2A> 부모 컨트롤에 컨트롤을 추가한 후 호출 된 <xref:System.Windows.Forms.Control.ResumeLayout%2A>메서드.</xref:System.Windows.Forms.Control.ResumeLayout%2A> 이렇게 하면 컨트롤이 많은 응용 프로그램의 성능을 늘어납니다."
  syntax:
    content: public void ResumeLayout (bool performLayout);
    parameters:
    - id: performLayout
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>보류 중인 레이아웃 요청; 실행 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.ResumeLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Right
  id: Right
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Right
  nameWithType: Control.Right
  fullName: System.Windows.Forms.Control.Right
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 오른쪽 가장자리와 해당 컨테이너 클라이언트 영역의 왼쪽된 가장자리 사이의 픽셀 거리를 가져옵니다."
  remarks: "오른쪽 속성의 값의 합계와 같은지는 <xref:System.Windows.Forms.Control.Left%2A>속성 값 및 <xref:System.Windows.Forms.Control.Width%2A>속성 값.</xref:System.Windows.Forms.Control.Width%2A> </xref:System.Windows.Forms.Control.Left%2A>       오른쪽 속성은 읽기 전용입니다. 변경할 수 있습니다이 속성 값이 직접의 값을 변경 하 여는 <xref:System.Windows.Forms.Control.Left%2A>또는 <xref:System.Windows.Forms.Control.Width%2A>속성 또는 호출의 <xref:System.Windows.Forms.Control.SetBounds%2A>, <xref:System.Windows.Forms.Control.SetBoundsCore%2A>, <xref:System.Windows.Forms.Control.UpdateBounds%2A>, 또는 <xref:System.Windows.Forms.Control.SetClientSizeCore%2A>메서드.</xref:System.Windows.Forms.Control.SetClientSizeCore%2A> </xref:System.Windows.Forms.Control.UpdateBounds%2A> </xref:System.Windows.Forms.Control.SetBoundsCore%2A> </xref:System.Windows.Forms.Control.SetBounds%2A> </xref:System.Windows.Forms.Control.Width%2A> </xref:System.Windows.Forms.Control.Left%2A>"
  example:
  - "The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties. This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.  \n  \n [!code-cs[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/csharp/p-system.windows.forms.c_70_1.cs)]\n [!code-cpp[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/cpp/p-system.windows.forms.c_70_1.cpp)]\n [!code-vb[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_70_1.vb)]  \n  \n [!code-cpp[Control.KeyUp#1](~/add/codesnippet/cpp/p-system.windows.forms.c_70_2.cpp)]\n [!code-vb[Control.KeyUp#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_70_2.vb)]\n [!code-cs[Control.KeyUp#1](~/add/codesnippet/csharp/p-system.windows.forms.c_70_2.cs)]"
  syntax:
    content: public int Right { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>(픽셀) 컨트롤의 오른쪽 가장자리와 해당 컨테이너 클라이언트 영역의 왼쪽된 가장자리 사이의 거리를 나타내는.</xref:System.Int32>"
  overload: System.Windows.Forms.Control.Right*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RightToLeft
  id: RightToLeft
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RightToLeft
  nameWithType: Control.RightToLeft
  fullName: System.Windows.Forms.Control.RightToLeft
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "오른쪽에서 왼쪽으로 쓰는 글꼴을 사용 하는 로캘을 지원 하도록 컨트롤 요소가 정렬 되어 있는지를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "RightToLeft 속성이 앰비언트 속성이입니다. 그렇지 않은 경우, 즉 앰비언트 속성은 컨트롤 속성 설정, 부모 컨트롤에서 검색 됩니다. 예를 들어 한 <xref:System.Windows.Forms.Button>같은 가질 수 <xref:System.Windows.Forms.Control.BackColor%2A>부모로 <xref:System.Windows.Forms.Form>기본적으로.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Control.BackColor%2A> </xref:System.Windows.Forms.Button> 앰비언트 속성에 대 한 자세한 내용은 참조는 <xref:System.Windows.Forms.AmbientProperties>클래스 또는 <xref:System.Windows.Forms.Control>클래스 개요.</xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.AmbientProperties>       RightToLeft 속성은 오른쪽에서 히브리어나 아랍어와 같이 왼쪽으로 쓰는 국가별 응용 프로그램에 사용 됩니다. 이 속성이로 설정 된 경우 <xref:System.Windows.Forms.RightToLeft?displayProperty=fullName>, 오른쪽에서 왼쪽으로 텍스트를 포함 하는 컨트롤 요소가 표시 됩니다.</xref:System.Windows.Forms.RightToLeft?displayProperty=fullName>      > [!NOTE] > RightToLeft 속성의 값은 런타임에 변경 되 면 서식 없이 원시 텍스트만 보존 됩니다.       다음은 몇 가지 RightToLeft 속성 값에 의해 제어 요소 영향 <xref:System.Windows.Forms.RightToLeft?displayProperty=fullName>:-스크롤 가능한 컨트롤의 오른쪽이 아닌 왼쪽에 세로 스크롤 막대가 표시 됩니다 (예를 들어 <xref:System.Windows.Forms.Form>, <xref:System.Windows.Forms.Panel>여러 줄, <xref:System.Windows.Forms.TextBox>, 및 <xref:System.Windows.Forms.RichTextBox>).</xref:System.Windows.Forms.RichTextBox> </xref:System.Windows.Forms.TextBox> </xref:System.Windows.Forms.Panel> </xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.RightToLeft?displayProperty=fullName>      -가로 스크롤 막대 오른쪽 맞춤 스크롤 상자 (thumb)로 시작 합니다.      에 의해 제어-확인란 요소 맞춤은 `CheckAlign` 에 대 한 속성을 반대로 되어 <xref:System.Windows.Forms.CheckBox>및 <xref:System.Windows.Forms.RadioButton>컨트롤.</xref:System.Windows.Forms.RadioButton> </xref:System.Windows.Forms.CheckBox>      -목록 상자, 콤보 상자 및 up-down 컨트롤의 항목은 오른쪽에 맞춰집니다.      -에 왼쪽 맞춤 됩니다. 위쪽과 아래쪽 단추 <xref:System.Windows.Forms.NumericUpDown>및 <xref:System.Windows.Forms.DomainUpDown>컨트롤.</xref:System.Windows.Forms.DomainUpDown> </xref:System.Windows.Forms.NumericUpDown>      -메뉴 (<xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.MenuItem>, 및 <xref:System.Windows.Forms.ContextMenu>) 오른쪽 맞춤으로 표시 됩니다.</xref:System.Windows.Forms.ContextMenu> </xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.MainMenu>      -맞춤의 도구 모음 단추는 <xref:System.Windows.Forms.ToolBar>컨트롤 또는의 텍스트 맞춤을 <xref:System.Windows.Forms.ToolBarButton>RightToLeft 속성에 의해 영향을 받지 않습니다.</xref:System.Windows.Forms.ToolBarButton> </xref:System.Windows.Forms.ToolBar>      하지만- <xref:System.Windows.Forms.AxHost>오른쪽에서 왼쪽 맞춤; 지 원하는 ActiveX 컨트롤에 미치는 영향 제어 작성자 오른쪽에서 왼쪽으로 표시에 대 한 지원을 구현 하는 범위 내에 의존.</xref:System.Windows.Forms.AxHost>"
  syntax:
    content: public virtual System.Windows.Forms.RightToLeft RightToLeft { get; set; }
    return:
      type: System.Windows.Forms.RightToLeft
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.RightToLeft&quot;> </xref> 값입니다. 기본값은 <xref href=&quot;System.Windows.Forms.RightToLeft&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.RightToLeft*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "할당 된 값 중 하나이 고 <xref href=&quot;System.Windows.Forms.RightToLeft&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Windows.Forms.Control.RightToLeftChanged
  id: RightToLeftChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RightToLeftChanged
  nameWithType: Control.RightToLeftChanged
  fullName: System.Windows.Forms.Control.RightToLeftChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우는 <xref:System.Windows.Forms.Control.RightToLeft*>속성 값이 변경.</xref:System.Windows.Forms.Control.RightToLeft*>"
  remarks: "이 이벤트는 <xref:System.Windows.Forms.Control.RightToLeft%2A>프로그래밍 방식으로 수정 되거나 사용자 상호 작용 하 여 속성이 변경 될.</xref:System.Windows.Forms.Control.RightToLeft%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.  \n  \n [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_63_1.vb)]\n [!code-cs[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/csharp/e-system.windows.forms.c_63_1.cs)]\n [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/cpp/e-system.windows.forms.c_63_1.cpp)]"
  syntax:
    content: public event EventHandler RightToLeftChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)
  id: RtlTranslateAlignment(System.Drawing.ContentAlignment)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RtlTranslateAlignment(ContentAlignment)
  nameWithType: Control.RtlTranslateAlignment(ContentAlignment)
  fullName: System.Windows.Forms.Control.RtlTranslateAlignment(ContentAlignment)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정 된 변환 <xref href=&quot;System.Drawing.ContentAlignment&quot;> </xref> 을 적절 한 <xref href=&quot;System.Drawing.ContentAlignment&quot;> </xref> 를 오른쪽에서 왼쪽으로 쓰는 텍스트를 지원 합니다."
  remarks: "경우는 <xref:System.Windows.Forms.Control.RightToLeft%2A>속성 <xref:System.Windows.Forms.RightToLeft>로 설정 된 `No`, 반환 값이 같지는 `align` 전달 된 매개 변수</xref:System.Windows.Forms.RightToLeft> </xref:System.Windows.Forms.Control.RightToLeft%2A>"
  syntax:
    content: protected System.Drawing.ContentAlignment RtlTranslateAlignment (System.Drawing.ContentAlignment align);
    parameters:
    - id: align
      type: System.Drawing.ContentAlignment
      description: "중 하나는 <xref href=&quot;System.Drawing.ContentAlignment&quot;> </xref> 값입니다."
    return:
      type: System.Drawing.ContentAlignment
      description: "중 하나는 <xref href=&quot;System.Drawing.ContentAlignment&quot;> </xref> 값입니다."
  overload: System.Windows.Forms.Control.RtlTranslateAlignment*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)
  id: RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RtlTranslateAlignment(HorizontalAlignment)
  nameWithType: Control.RtlTranslateAlignment(HorizontalAlignment)
  fullName: System.Windows.Forms.Control.RtlTranslateAlignment(HorizontalAlignment)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정 된 변환 <xref href=&quot;System.Windows.Forms.HorizontalAlignment&quot;> </xref> 을 적절 한 <xref href=&quot;System.Windows.Forms.HorizontalAlignment&quot;> </xref> 를 오른쪽에서 왼쪽으로 쓰는 텍스트를 지원 합니다."
  remarks: "경우는 <xref:System.Windows.Forms.Control.RightToLeft%2A>속성 <xref:System.Windows.Forms.RightToLeft>로 설정 된 `No`, 반환 값이 같지는 `align` 전달 된 매개 변수</xref:System.Windows.Forms.RightToLeft> </xref:System.Windows.Forms.Control.RightToLeft%2A>"
  syntax:
    content: protected System.Windows.Forms.HorizontalAlignment RtlTranslateAlignment (System.Windows.Forms.HorizontalAlignment align);
    parameters:
    - id: align
      type: System.Windows.Forms.HorizontalAlignment
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.HorizontalAlignment&quot;> </xref> 값입니다."
    return:
      type: System.Windows.Forms.HorizontalAlignment
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.HorizontalAlignment&quot;> </xref> 값입니다."
  overload: System.Windows.Forms.Control.RtlTranslateAlignment*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)
  id: RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RtlTranslateAlignment(LeftRightAlignment)
  nameWithType: Control.RtlTranslateAlignment(LeftRightAlignment)
  fullName: System.Windows.Forms.Control.RtlTranslateAlignment(LeftRightAlignment)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정 된 변환 <xref href=&quot;System.Windows.Forms.LeftRightAlignment&quot;> </xref> 을 적절 한 <xref href=&quot;System.Windows.Forms.LeftRightAlignment&quot;> </xref> 를 오른쪽에서 왼쪽으로 쓰는 텍스트를 지원 합니다."
  remarks: "경우는 <xref:System.Windows.Forms.Control.RightToLeft%2A>속성 <xref:System.Windows.Forms.RightToLeft>로 설정 된 `No`, 반환 값이 같지는 `align` 전달 된 매개 변수</xref:System.Windows.Forms.RightToLeft> </xref:System.Windows.Forms.Control.RightToLeft%2A>"
  syntax:
    content: protected System.Windows.Forms.LeftRightAlignment RtlTranslateAlignment (System.Windows.Forms.LeftRightAlignment align);
    parameters:
    - id: align
      type: System.Windows.Forms.LeftRightAlignment
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.LeftRightAlignment&quot;> </xref> 값입니다."
    return:
      type: System.Windows.Forms.LeftRightAlignment
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.LeftRightAlignment&quot;> </xref> 값입니다."
  overload: System.Windows.Forms.Control.RtlTranslateAlignment*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)
  id: RtlTranslateContent(System.Drawing.ContentAlignment)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RtlTranslateContent(ContentAlignment)
  nameWithType: Control.RtlTranslateContent(ContentAlignment)
  fullName: System.Windows.Forms.Control.RtlTranslateContent(ContentAlignment)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정 된 변환 <xref href=&quot;System.Drawing.ContentAlignment&quot;> </xref> 을 적절 한 <xref href=&quot;System.Drawing.ContentAlignment&quot;> </xref> 를 오른쪽에서 왼쪽으로 쓰는 텍스트를 지원 합니다."
  remarks: "경우는 <xref:System.Windows.Forms.Control.RightToLeft%2A>속성 <xref:System.Windows.Forms.RightToLeft>로 설정 된 `No`, 반환 값이 같지는 `align` 전달 된 매개 변수</xref:System.Windows.Forms.RightToLeft> </xref:System.Windows.Forms.Control.RightToLeft%2A>"
  syntax:
    content: protected System.Drawing.ContentAlignment RtlTranslateContent (System.Drawing.ContentAlignment align);
    parameters:
    - id: align
      type: System.Drawing.ContentAlignment
      description: "중 하나는 <xref href=&quot;System.Drawing.ContentAlignment&quot;> </xref> 값입니다."
    return:
      type: System.Drawing.ContentAlignment
      description: "중 하나는 <xref href=&quot;System.Drawing.ContentAlignment&quot;> </xref> 값입니다."
  overload: System.Windows.Forms.Control.RtlTranslateContent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)
  id: RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RtlTranslateHorizontal(HorizontalAlignment)
  nameWithType: Control.RtlTranslateHorizontal(HorizontalAlignment)
  fullName: System.Windows.Forms.Control.RtlTranslateHorizontal(HorizontalAlignment)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정 된 변환 <xref href=&quot;System.Windows.Forms.HorizontalAlignment&quot;> </xref> 을 적절 한 <xref href=&quot;System.Windows.Forms.HorizontalAlignment&quot;> </xref> 를 오른쪽에서 왼쪽으로 쓰는 텍스트를 지원 합니다."
  remarks: "경우는 <xref:System.Windows.Forms.Control.RightToLeft%2A>속성 <xref:System.Windows.Forms.RightToLeft>로 설정 된 `No`, 반환 값이 같지는 `align` 전달 된 매개 변수</xref:System.Windows.Forms.RightToLeft> </xref:System.Windows.Forms.Control.RightToLeft%2A>"
  syntax:
    content: protected System.Windows.Forms.HorizontalAlignment RtlTranslateHorizontal (System.Windows.Forms.HorizontalAlignment align);
    parameters:
    - id: align
      type: System.Windows.Forms.HorizontalAlignment
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.HorizontalAlignment&quot;> </xref> 값입니다."
    return:
      type: System.Windows.Forms.HorizontalAlignment
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.HorizontalAlignment&quot;> </xref> 값입니다."
  overload: System.Windows.Forms.Control.RtlTranslateHorizontal*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)
  id: RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RtlTranslateLeftRight(LeftRightAlignment)
  nameWithType: Control.RtlTranslateLeftRight(LeftRightAlignment)
  fullName: System.Windows.Forms.Control.RtlTranslateLeftRight(LeftRightAlignment)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정 된 변환 <xref href=&quot;System.Windows.Forms.LeftRightAlignment&quot;> </xref> 을 적절 한 <xref href=&quot;System.Windows.Forms.LeftRightAlignment&quot;> </xref> 를 오른쪽에서 왼쪽으로 쓰는 텍스트를 지원 합니다."
  remarks: "경우는 <xref:System.Windows.Forms.Control.RightToLeft%2A>속성 <xref:System.Windows.Forms.RightToLeft>로 설정 된 `No`, 반환 값이 같지는 `align` 전달 된 매개 변수</xref:System.Windows.Forms.RightToLeft> </xref:System.Windows.Forms.Control.RightToLeft%2A>"
  syntax:
    content: protected System.Windows.Forms.LeftRightAlignment RtlTranslateLeftRight (System.Windows.Forms.LeftRightAlignment align);
    parameters:
    - id: align
      type: System.Windows.Forms.LeftRightAlignment
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.LeftRightAlignment&quot;> </xref> 값입니다."
    return:
      type: System.Windows.Forms.LeftRightAlignment
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.LeftRightAlignment&quot;> </xref> 값입니다."
  overload: System.Windows.Forms.Control.RtlTranslateLeftRight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Scale(System.Drawing.SizeF)
  id: Scale(System.Drawing.SizeF)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Scale(SizeF)
  nameWithType: Control.Scale(SizeF)
  fullName: System.Windows.Forms.Control.Scale(SizeF)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정한 배율 인수로 조정 하 여 컨트롤 및 모든 자식 컨트롤을 조정합니다."
  remarks: "Scale 메서드 지정 된 크기 조정 하 여 컨트롤을 확장 `factor`합니다. 이 경우 재귀적으로 모든 자식 컨트롤을 조정 하는 또한는 <xref:System.Windows.Forms.Control.ScaleChildren%2A>속성은 `true`.</xref:System.Windows.Forms.Control.ScaleChildren%2A> 이 메서드를 호출 내부적으로 <xref:System.Windows.Forms.Control.ScaleControl%2A>각 컨트롤의 배율을 조정 합니다.</xref:System.Windows.Forms.Control.ScaleControl%2A>"
  syntax:
    content: public void Scale (System.Drawing.SizeF factor);
    parameters:
    - id: factor
      type: System.Drawing.SizeF
      description: "A <xref href=&quot;System.Drawing.SizeF&quot;> </xref> 가로 및 세로 배율 인수를 포함 합니다."
  overload: System.Windows.Forms.Control.Scale*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Scale(System.Single)
  id: Scale(System.Single)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Scale(Single)
  nameWithType: Control.Scale(Single)
  fullName: System.Windows.Forms.Control.Scale(Single)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤과 모든 자식 컨트롤의 배율을 조정 합니다."
  syntax:
    content: public void Scale (float ratio);
    parameters:
    - id: ratio
      type: System.Single
      description: "크기 조정에 사용할 비율입니다."
  overload: System.Windows.Forms.Control.Scale*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Scale(System.Single,System.Single)
  id: Scale(System.Single,System.Single)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Scale(Single,Single)
  nameWithType: Control.Scale(Single,Single)
  fullName: System.Windows.Forms.Control.Scale(Single,Single)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "전체 컨트롤과 모든 자식 컨트롤의 배율을 조정 합니다."
  syntax:
    content: public void Scale (float dx, float dy);
    parameters:
    - id: dx
      type: System.Single
      description: "가로 배율 인수입니다."
    - id: dy
      type: System.Single
      description: "세로 배율 인수입니다."
  overload: System.Windows.Forms.Control.Scale*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ScaleChildren
  id: ScaleChildren
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ScaleChildren
  nameWithType: Control.ScaleChildren
  fullName: System.Windows.Forms.Control.ScaleChildren
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "자식 컨트롤의 배율을 결정 하는 값을 가져옵니다."
  remarks: "ScaleChildren 속성이 `true`, 하면 <xref:System.Windows.Forms.Control.Scale%2A>메서드 재귀적으로 호출 합니다는 <xref:System.Windows.Forms.Control.ScaleControl%2A>메서드는 해당 자식 컨트롤의 각.</xref:System.Windows.Forms.Control.ScaleControl%2A> </xref:System.Windows.Forms.Control.Scale%2A>       ScaleChildren의 기본 구현에서는 항상 반환 `true`합니다. 파생된 클래스 재정의 반환할 ScaleChildren `false` 크기 조정을 수행 해야 함을 하지 자식 요소에 나타냅니다."
  syntax:
    content: protected virtual bool ScaleChildren { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>자식 컨트롤 배율이 조정 되 면는 <xref:System.Windows.Forms.Control.Scale*>이 컨트롤에서 호출 되지 않았으면, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Forms.Control.Scale*> 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.ScaleChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  id: ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ScaleControl(SizeF,BoundsSpecified)
  nameWithType: Control.ScaleControl(SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.Control.ScaleControl(SizeF,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 위치, 크기, 안쪽 여백 및 여백을 조정합니다."
  remarks: "최상위 컨트롤을 사용 하는 경우 컨트롤의 위치를 조정 하지 않습니다. 자식 또는 자동으로 조정된 된 컨트롤의 크기에는 확장 되지 않습니다. 값을 변경 하 여 임의의 방향으로 확장을 생략할 수 있습니다는 `specified` 매개 변수입니다."
  example:
  - "<xref:System.Windows.Forms.BoundsSpecified>  \n  \n <xref:System.Windows.Forms.Control.Scale%2A>  \n  \n <xref:System.Windows.Forms.Control.GetScaledBounds%2A>  \n  \n <xref:System.Windows.Forms.Control.SetBoundsCore%2A>"
  syntax:
    content: protected virtual void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: factor
      type: System.Drawing.SizeF
      description: "컨트롤의 너비와 높이 크기를 조정 하는 인수."
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "A <xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;> </xref> 의 크기와 위치를 정의할 때 사용할 컨트롤의 범위를 지정 하는 값입니다."
  overload: System.Windows.Forms.Control.ScaleControl*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)
  id: ScaleCore(System.Single,System.Single)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ScaleCore(Single,Single)
  nameWithType: Control.ScaleCore(Single,Single)
  fullName: System.Windows.Forms.Control.ScaleCore(Single,Single)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 메서드는이 클래스와 관련이 없습니다."
  remarks: "이 메서드는이 클래스와 관련이 없습니다."
  syntax:
    content: protected virtual void ScaleCore (float dx, float dy);
    parameters:
    - id: dx
      type: System.Single
      description: "가로 배율 인수입니다."
    - id: dy
      type: System.Single
      description: "세로 배율 인수입니다."
  overload: System.Windows.Forms.Control.ScaleCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Select
  id: Select
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Select()
  nameWithType: Control.Select()
  fullName: System.Windows.Forms.Control.Select()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤을 활성화 합니다."
  remarks: "Select 메서드에 컨트롤을 활성화 하는 경우 컨트롤의 `Selectable` 스타일 비트가 `true` 에 <xref:System.Windows.Forms.ControlStyles>를 다른 컨트롤에 포함 된와 모든 부모 컨트롤이 표시 되 고 사용할.</xref:System.Windows.Forms.ControlStyles>       다음 목록에 Windows Forms 컨트롤은 선택할 수 있습니다. 목록에서 컨트롤에서 파생 된 컨트롤은 또한 선택할 수 없습니다.      - <xref:System.Windows.Forms.Label>- <xref:System.Windows.Forms.Panel>- <xref:System.Windows.Forms.GroupBox>- <xref:System.Windows.Forms.PictureBox>- <xref:System.Windows.Forms.ProgressBar>- <xref:System.Windows.Forms.Splitter>- <xref:System.Windows.Forms.LinkLabel>(이 경우 컨트롤에 링크가)</xref:System.Windows.Forms.LinkLabel> </xref:System.Windows.Forms.Splitter> </xref:System.Windows.Forms.ProgressBar> </xref:System.Windows.Forms.PictureBox> </xref:System.Windows.Forms.GroupBox> </xref:System.Windows.Forms.Panel> </xref:System.Windows.Forms.Label>"
  example:
  - "The following code example selects the specified <xref:System.Windows.Forms.Control>, if it is selectable.  \n  \n [!code-cpp[Windows.Forms.ControlMembers6#2](~/add/codesnippet/cpp/m-system.windows.forms.c_92_1.cpp)]\n [!code-cs[Windows.Forms.ControlMembers6#2](~/add/codesnippet/csharp/m-system.windows.forms.c_92_1.cs)]\n [!code-vb[Windows.Forms.ControlMembers6#2](~/add/codesnippet/visualbasic/m-system.windows.forms.c_92_1.vb)]"
  syntax:
    content: public void Select ();
    parameters: []
  overload: System.Windows.Forms.Control.Select*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)
  id: Select(System.Boolean,System.Boolean)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Select(Boolean,Boolean)
  nameWithType: Control.Select(Boolean,Boolean)
  fullName: System.Windows.Forms.Control.Select(Boolean,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "자식 컨트롤을 활성화 합니다. 필요에 따라 컨트롤을 선택할 탭 순서의 방향을 지정 합니다."
  remarks: "`directed` 및 `forward` 컨테이너 스타일 컨트롤에서 매개 변수를 사용 합니다. 경우는 `directed` 로 설정 된 `true`, `forward` 매개 변수는 선택할 컨트롤을 결정 하도록 평가 됩니다. 때 `forward` 로 설정 된 `true`, 탭 순서의 다음 컨트롤로 확인란이; 때 `false`, 탭 순서의 이전 컨트롤을 선택 합니다.       <xref:System.Windows.Forms.Control.Select%2A>메서드 컨트롤을 활성화 하는 경우 컨트롤의 `Selectable` 스타일 비트가 `true` 에 <xref:System.Windows.Forms.ControlStyles>를 다른 컨트롤에 포함 된와 모든 부모 컨트롤이 표시 되 고 사용할.</xref:System.Windows.Forms.ControlStyles> </xref:System.Windows.Forms.Control.Select%2A>       다음 목록에 Windows Forms 컨트롤은 선택할 수 있습니다. 목록에서 컨트롤에서 파생 된 컨트롤은 또한 선택할 수 없습니다.      - <xref:System.Windows.Forms.Label>- <xref:System.Windows.Forms.Panel>- <xref:System.Windows.Forms.GroupBox>- <xref:System.Windows.Forms.PictureBox>- <xref:System.Windows.Forms.ProgressBar>- <xref:System.Windows.Forms.Splitter>- <xref:System.Windows.Forms.LinkLabel>(이 경우 컨트롤에 링크가)</xref:System.Windows.Forms.LinkLabel> </xref:System.Windows.Forms.Splitter> </xref:System.Windows.Forms.ProgressBar> </xref:System.Windows.Forms.PictureBox> </xref:System.Windows.Forms.GroupBox> </xref:System.Windows.Forms.Panel> </xref:System.Windows.Forms.Label>"
  syntax:
    content: protected virtual void Select (bool directed, bool forward);
    parameters:
    - id: directed
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>선택할 컨트롤의 방향을 지정 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: forward
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>탭 순서에서 앞으로 이동 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 탭 순서에서 뒤로 이동 하려면."
  overload: System.Windows.Forms.Control.Select*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SelectNextControl(Control,Boolean,Boolean,Boolean,Boolean)
  nameWithType: Control.SelectNextControl(Control,Boolean,Boolean,Boolean,Boolean)
  fullName: System.Windows.Forms.Control.SelectNextControl(Control,Boolean,Boolean,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "다음 컨트롤을 활성화 합니다."
  remarks: "SelectNextControl 메서드 탭 순서의 다음 컨트롤로 활성화 하는 경우 컨트롤의 `Selectable` 스타일 비트가 `true` 에 <xref:System.Windows.Forms.ControlStyles>를 다른 컨트롤에 포함 된와 모든 부모 컨트롤이 표시 되 고 사용할.</xref:System.Windows.Forms.ControlStyles>       다음 목록에 Windows Forms 컨트롤은 선택할 수 있습니다. 목록에서 컨트롤에서 파생 된 컨트롤은 또한 선택할 수 없습니다.      - <xref:System.Windows.Forms.Label>- <xref:System.Windows.Forms.Panel>- <xref:System.Windows.Forms.GroupBox>- <xref:System.Windows.Forms.PictureBox>- <xref:System.Windows.Forms.ProgressBar>- <xref:System.Windows.Forms.Splitter>- <xref:System.Windows.Forms.LinkLabel>(컨트롤에 링크가 때) 호출 하 여 키보드 (TAB, SHIFT + TAB 등)를 사용 하 여 포커스를 변경 하면는 <xref:System.Windows.Forms.Control.Select%2A>또는 SelectNextControl 메서드 하거나 설정 하는 <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName>속성을 현재 폼으로 포커스 이벤트가 다음 순서 대로 발생: 1.</xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> </xref:System.Windows.Forms.Control.Select%2A> </xref:System.Windows.Forms.LinkLabel> </xref:System.Windows.Forms.Splitter> </xref:System.Windows.Forms.ProgressBar> </xref:System.Windows.Forms.PictureBox> </xref:System.Windows.Forms.GroupBox> </xref:System.Windows.Forms.Panel> </xref:System.Windows.Forms.Label>  <xref:System.Windows.Forms.Control.Enter>2입니다.</xref:System.Windows.Forms.Control.Enter>  <xref:System.Windows.Forms.Control.GotFocus>3입니다.</xref:System.Windows.Forms.Control.GotFocus>  <xref:System.Windows.Forms.Control.Leave>4입니다.</xref:System.Windows.Forms.Control.Leave>  <xref:System.Windows.Forms.Control.Validating>5입니다.</xref:System.Windows.Forms.Control.Validating>  <xref:System.Windows.Forms.Control.Validated>6입니다.</xref:System.Windows.Forms.Control.Validated>  <xref:System.Windows.Forms.Control.LostFocus>경우는 <xref:System.Windows.Forms.Control.CausesValidation%2A>속성이 `false`, <xref:System.Windows.Forms.Control.Validating>및 <xref:System.Windows.Forms.Control.Validated>이벤트는 표시 되지 않습니다.</xref:System.Windows.Forms.Control.Validated> </xref:System.Windows.Forms.Control.Validating> </xref:System.Windows.Forms.Control.CausesValidation%2A></xref:System.Windows.Forms.Control.LostFocus>"
  example:
  - "The following code exampleshows theSelectNextControl method being used in a form that has some controls. Each time that you click the form, the next control is activated. The <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property gets the currently active control in the container control.  \n  \n [!code-cs[System.Windows.Forms.Control.SelectNextControl#1](~/add/codesnippet/csharp/b0a604e4-0b0f-4d7f-842c-_1.cs)]\n [!code-vb[System.Windows.Forms.Control.SelectNextControl#1](~/add/codesnippet/visualbasic/b0a604e4-0b0f-4d7f-842c-_1.vb)]  \n  \n The following code example shows the SelectNextControl method being used in a form that has a <xref:System.Windows.Forms.Button> and some other controls. When you click the <xref:System.Windows.Forms.Button>, the next control after the <xref:System.Windows.Forms.Button> is activated. Notice that you have to get the parent of the <xref:System.Windows.Forms.Button> control. Since <xref:System.Windows.Forms.Button> is not a container, calling SelectNextControl directly on the <xref:System.Windows.Forms.Button> would not change the activation.  \n  \n [!code-cs[System.Windows.Forms.Control.SelectNextControl#2](~/add/codesnippet/csharp/b0a604e4-0b0f-4d7f-842c-_2.cs)]\n [!code-vb[System.Windows.Forms.Control.SelectNextControl#2](~/add/codesnippet/visualbasic/b0a604e4-0b0f-4d7f-842c-_2.vb)]"
  syntax:
    content: public bool SelectNextControl (System.Windows.Forms.Control ctl, bool forward, bool tabStopOnly, bool nested, bool wrap);
    parameters:
    - id: ctl
      type: System.Windows.Forms.Control
      description: "<xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 검색을 시작할입니다."
    - id: forward
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>탭 순서에서 앞으로 이동 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 탭 순서에서 뒤로 이동 하려면."
    - id: tabStopOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사용 하 여 컨트롤을 무시 하려면는 <xref:System.Windows.Forms.Control.TabStop*>속성이로 설정 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Forms.Control.TabStop*>"
    - id: nested
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤을 포함 시키려면 중첩 된 (자식 컨트롤의 자식) 자식; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: wrap
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>마지막 컨트롤에 도달 하면; 탭 순서에서 첫째 컨트롤부터 검색을 계속 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 활성화 되었습니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.SelectNextControl*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.SendToBack
  id: SendToBack
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SendToBack()
  nameWithType: Control.SendToBack()
  fullName: System.Windows.Forms.Control.SendToBack()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤을 z 순서의 맨 뒤로 보냅니다."
  remarks: "컨트롤을 z 순서의 맨 뒤로 이동 합니다. 다른 컨트롤의 자식 컨트롤을 사용 하는 경우 자식 컨트롤을 z 순서의 맨 뒤로 이동 합니다. 컨트롤이 최상위 컨트롤이 면 컨트롤이 활성화 된 경우가 아니면이 메서드가 제대로 작동 하지 않습니다. 최상위 컨트롤은 컨트롤을와 같은 한 <xref:System.Windows.Forms.Form>, 즉 자식도 아닌 다른 컨트롤의.</xref:System.Windows.Forms.Form> 활성 컨트롤은 표시 컨트롤에 입력 포커스가입니다. 맨 뒤로 보내기 메서드는 비활성 최상위 컨트롤을 사용 하려면 먼저 호출 하는 <xref:System.Windows.Forms.Control.BringToFront%2A>컨트롤 대 메서드.</xref:System.Windows.Forms.Control.BringToFront%2A>"
  syntax:
    content: public void SendToBack ();
    parameters: []
  overload: System.Windows.Forms.Control.SendToBack*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)
  id: SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SetAutoSizeMode(AutoSizeMode)
  nameWithType: Control.SetAutoSizeMode(AutoSizeMode)
  fullName: System.Windows.Forms.Control.SetAutoSizeMode(AutoSizeMode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "어떻게 컨트롤이 동작 하는 시기를 나타내는 값을 설정 해당 <xref:System.Windows.Forms.Control.AutoSize*>속성을 사용할 수 있습니다.</xref:System.Windows.Forms.Control.AutoSize*>"
  syntax:
    content: protected void SetAutoSizeMode (System.Windows.Forms.AutoSizeMode mode);
    parameters:
    - id: mode
      type: System.Windows.Forms.AutoSizeMode
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.AutoSizeMode&quot;> </xref> 값입니다."
  overload: System.Windows.Forms.Control.SetAutoSizeMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  id: SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SetBounds(Int32,Int32,Int32,Int32)
  nameWithType: Control.SetBounds(Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.Control.SetBounds(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정 된 위치와 크기로 컨트롤의 범위를 설정합니다."
  syntax:
    content: public void SetBounds (int x, int y, int width, int height);
    parameters:
    - id: x
      type: System.Int32
      description: "새 <xref:System.Windows.Forms.Control.Left*>컨트롤의 속성 값.</xref:System.Windows.Forms.Control.Left*>"
    - id: y
      type: System.Int32
      description: "새 <xref:System.Windows.Forms.Control.Top*>컨트롤의 속성 값.</xref:System.Windows.Forms.Control.Top*>"
    - id: width
      type: System.Int32
      description: "새 <xref:System.Windows.Forms.Control.Width*>컨트롤의 속성 값.</xref:System.Windows.Forms.Control.Width*>"
    - id: height
      type: System.Int32
      description: "새 <xref:System.Windows.Forms.Control.Height*>컨트롤의 속성 값.</xref:System.Windows.Forms.Control.Height*>"
  overload: System.Windows.Forms.Control.SetBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  id: SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SetBounds(Int32,Int32,Int32,Int32,BoundsSpecified)
  nameWithType: Control.SetBounds(Int32,Int32,Int32,Int32,BoundsSpecified)
  fullName: System.Windows.Forms.Control.SetBounds(Int32,Int32,Int32,Int32,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정 된 위치와 크기로 컨트롤의 지정된 된 범위를 설정 합니다."
  remarks: ''
  example:
  - "The following code example centers a <xref:System.Windows.Forms.Form> on the screen in the <xref:System.Windows.Forms.Control.Layout> event. This will keep the form centered as the user resizes it. This example requires that you have created a <xref:System.Windows.Forms.Form> control.  \n  \n [!code-cs[Control.Layout#1](~/add/codesnippet/csharp/f057e785-da4d-4281-b958-_1.cs)]\n [!code-vb[Control.Layout#1](~/add/codesnippet/visualbasic/f057e785-da4d-4281-b958-_1.vb)]\n [!code-cpp[Control.Layout#1](~/add/codesnippet/cpp/f057e785-da4d-4281-b958-_1.cpp)]"
  syntax:
    content: public void SetBounds (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: x
      type: System.Int32
      description: "새 <xref:System.Windows.Forms.Control.Left*>컨트롤의 속성 값.</xref:System.Windows.Forms.Control.Left*>"
    - id: y
      type: System.Int32
      description: "새 <xref:System.Windows.Forms.Control.Top*>컨트롤의 속성 값.</xref:System.Windows.Forms.Control.Top*>"
    - id: width
      type: System.Int32
      description: "새 <xref:System.Windows.Forms.Control.Width*>컨트롤의 속성 값.</xref:System.Windows.Forms.Control.Width*>"
    - id: height
      type: System.Int32
      description: "새 <xref:System.Windows.Forms.Control.Height*>컨트롤의 속성 값.</xref:System.Windows.Forms.Control.Height*>"
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "비트 조합 된 <xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;> </xref> 값입니다. 지정 되지 않은 모든 매개 변수에 대해 현재 값이 사용 됩니다."
  overload: System.Windows.Forms.Control.SetBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  id: SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  nameWithType: Control.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  fullName: System.Windows.Forms.Control.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 컨트롤의 지정 된 범위를 설정 합니다."
  remarks: "에 포함 되지 범위에 해당 하는 매개 변수 일반적으로 `specified` 매개 변수는 현재 값과 함께 전달 됩니다. 예를 들어는 <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, 또는 <xref:System.Drawing.Point.X%2A>또는 <xref:System.Drawing.Point.Y%2A>의 속성은 <xref:System.Windows.Forms.Control.Location%2A>속성 컨트롤의 현재 인스턴스에 대 한 참조를 사용 하 여 전달 될 수 있습니다.</xref:System.Windows.Forms.Control.Location%2A> </xref:System.Drawing.Point.Y%2A> </xref:System.Drawing.Point.X%2A> </xref:System.Windows.Forms.Control.Width%2A> </xref:System.Windows.Forms.Control.Height%2A> 그러나에 전달 된 모든 값 유지 하 고 컨트롤에 적용 됩니다.       `boundsSpecified` 매개 변수는 컨트롤의 요소를 나타냅니다. <xref:System.Windows.Forms.Control.Bounds%2A>응용 프로그램에서 변경한.</xref:System.Windows.Forms.Control.Bounds%2A> 예를 들어, 변경 하는 경우는 <xref:System.Windows.Forms.Control.Size%2A>컨트롤의는 `boundsSpecified` 매개 변수 값이 고 `Size` <xref:System.Windows.Forms.BoundsSpecified>안내 하십시오.</xref:System.Windows.Forms.BoundsSpecified> 값</xref:System.Windows.Forms.Control.Size%2A> 그러나 경우는 <xref:System.Windows.Forms.Control.Size%2A>대 한 응답으로 조정 되는 <xref:System.Windows.Forms.Control.Dock%2A>속성이 설정 되는 `boundsSpecified` 매개 변수 값이는 `None` <xref:System.Windows.Forms.BoundsSpecified>안내 하십시오.</xref:System.Windows.Forms.BoundsSpecified> 값</xref:System.Windows.Forms.Control.Dock%2A> </xref:System.Windows.Forms.Control.Size%2A>      > [!NOTE] >의 크기, Windows Server 2003에 시스템은 <xref:System.Windows.Forms.Form>최대 픽셀 너비와 높이 모니터에 의해 제한 됩니다.</xref:System.Windows.Forms.Form>"
  example:
  - "The following code example overrides the SetBoundsCore method to ensure that the control remains a fixed size. This example requires that you have a class that is either directly or indirectly derived from the <xref:System.Windows.Forms.Control> class.  \n  \n [!code-cs[Windows.Forms.Control_Methods#1](~/add/codesnippet/csharp/603eafb5-3583-44bd-962b-_1.cs)]\n [!code-cpp[Windows.Forms.Control_Methods#1](~/add/codesnippet/cpp/603eafb5-3583-44bd-962b-_1.cpp)]\n [!code-vb[Windows.Forms.Control_Methods#1](~/add/codesnippet/visualbasic/603eafb5-3583-44bd-962b-_1.vb)]"
  syntax:
    content: protected virtual void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: x
      type: System.Int32
      description: "새 <xref:System.Windows.Forms.Control.Left*>컨트롤의 속성 값.</xref:System.Windows.Forms.Control.Left*>"
    - id: y
      type: System.Int32
      description: "새 <xref:System.Windows.Forms.Control.Top*>컨트롤의 속성 값.</xref:System.Windows.Forms.Control.Top*>"
    - id: width
      type: System.Int32
      description: "새 <xref:System.Windows.Forms.Control.Width*>컨트롤의 속성 값.</xref:System.Windows.Forms.Control.Width*>"
    - id: height
      type: System.Int32
      description: "새 <xref:System.Windows.Forms.Control.Height*>컨트롤의 속성 값.</xref:System.Windows.Forms.Control.Height*>"
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "비트 조합 된 <xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;> </xref> 값입니다."
  overload: System.Windows.Forms.Control.SetBoundsCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)
  id: SetClientSizeCore(System.Int32,System.Int32)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SetClientSizeCore(Int32,Int32)
  nameWithType: Control.SetClientSizeCore(Int32,Int32)
  fullName: System.Windows.Forms.Control.SetClientSizeCore(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 클라이언트 영역 크기를 설정합니다."
  remarks: "클라이언트 영역에서 시작 하는 (0, 0) 위치를 확장 하 고는 (`x`, `y`) 위치입니다.       일반적으로 설정 하면 안 된 <xref:System.Windows.Forms.Control.ClientSize%2A>컨트롤의.</xref:System.Windows.Forms.Control.ClientSize%2A>"
  example:
  - "The following code example overrides the SetClientSizeCore method to ensure that the control remains square. This example requires that you have a class that is either directly or indirectly derived from the <xref:System.Windows.Forms.Control> class.  \n  \n [!code-cs[Windows.Forms.Control_Methods#2](~/add/codesnippet/csharp/m-system.windows.forms.c_54_1.cs)]\n [!code-cpp[Windows.Forms.Control_Methods#2](~/add/codesnippet/cpp/m-system.windows.forms.c_54_1.cpp)]\n [!code-vb[Windows.Forms.Control_Methods#2](~/add/codesnippet/visualbasic/m-system.windows.forms.c_54_1.vb)]"
  syntax:
    content: protected virtual void SetClientSizeCore (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "클라이언트 영역 너비 (픽셀)에서입니다."
    - id: y
      type: System.Int32
      description: "클라이언트 영역 높이 (픽셀)에서입니다."
  overload: System.Windows.Forms.Control.SetClientSizeCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)
  id: SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SetStyle(ControlStyles,Boolean)
  nameWithType: Control.SetStyle(ControlStyles,Boolean)
  fullName: System.Windows.Forms.Control.SetStyle(ControlStyles,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정 된 설정 <xref href=&quot;System.Windows.Forms.ControlStyles&quot;> </xref> 플래그를 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 또는 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "컨트롤 스타일 비트 플래그는 지원 되는 동작을 분류 하는 데 사용 됩니다. 컨트롤 SetStyle 메서드를 호출 하 고 적절 한 전달 하 여 스타일을 사용 하도록 설정할 수 <xref:System.Windows.Forms.ControlStyles>비트 (또는 비트) 및 Boolean 값으로 비트가 설정입니다.</xref:System.Windows.Forms.ControlStyles> 에 지정 된 할당 된 값을 결정 하려면 <xref:System.Windows.Forms.ControlStyles>를 사용 하 여는 <xref:System.Windows.Forms.Control.GetStyle%2A>메서드와 전달은 <xref:System.Windows.Forms.ControlStyles>평가 하는 멤버.</xref:System.Windows.Forms.ControlStyles> </xref:System.Windows.Forms.Control.GetStyle%2A> </xref:System.Windows.Forms.ControlStyles>      > [!CAUTION] > 컨트롤 스타일 비트를 설정 하 고 컨트롤의 동작 충분히 변경할 수 있습니다. 검토는 <xref:System.Windows.Forms.ControlStyles>컨트롤 스타일 비트 SetStyle 메서드를 호출 하기 전에 변경에 따른 영향을 이해 하는 열거형 설명을 참조.</xref:System.Windows.Forms.ControlStyles>"
  example:
  - "The following code example enables double-buffering on a <xref:System.Windows.Forms.Form> and updates the styles to reflect the changes.  \n  \n [!code-cpp[Windows.Forms.ControlMembers6#3](~/add/codesnippet/cpp/2751760d-2ebd-4c65-9243-_1.cpp)]\n [!code-cs[Windows.Forms.ControlMembers6#3](~/add/codesnippet/csharp/2751760d-2ebd-4c65-9243-_1.cs)]\n [!code-vb[Windows.Forms.ControlMembers6#3](~/add/codesnippet/visualbasic/2751760d-2ebd-4c65-9243-_1.vb)]"
  syntax:
    content: protected void SetStyle (System.Windows.Forms.ControlStyles flag, bool value);
    parameters:
    - id: flag
      type: System.Windows.Forms.ControlStyles
      description: "<xref href=&quot;System.Windows.Forms.ControlStyles&quot;> </xref> 비트를 설정 합니다."
    - id: value
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤에 지정된 된 스타일을 적용 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.SetStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.SetTopLevel(System.Boolean)
  id: SetTopLevel(System.Boolean)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SetTopLevel(Boolean)
  nameWithType: Control.SetTopLevel(Boolean)
  fullName: System.Windows.Forms.Control.SetTopLevel(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤을 최상위 컨트롤로 설정합니다."
  remarks: "SetTopLevel 메서드를 호출 하는 경우는 <xref:System.Windows.Forms.Form>의 값을 전달 하 고 `false`의 값을 전달 SetTopLevelagain를 호출할 때까지 폼 표시 되지 것입니다 `true`.</xref:System.Windows.Forms.Form>"
  syntax:
    content: protected void SetTopLevel (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤을 최상위 컨트롤로 설정 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.SetTopLevel*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code> value </code> 로 설정 된 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 컨트롤은 ActiveX 컨트롤입니다."
  - type: System.Exception
    commentId: T:System.Exception
    description: "<> </> *> 반환 값과 같지 않습니다.는 <code> value </code> 매개 변수 및 <> </> *> 속성은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Windows.Forms.Control.SetVisibleCore(System.Boolean)
  id: SetVisibleCore(System.Boolean)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SetVisibleCore(Boolean)
  nameWithType: Control.SetVisibleCore(Boolean)
  fullName: System.Windows.Forms.Control.SetVisibleCore(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤을 지정 된 표시 상태로 설정합니다."
  remarks: "일반적으로이 메서드는 컨트롤의 표시 동작을 변경 하려면 재정의 합니다."
  syntax:
    content: protected virtual void SetVisibleCore (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>볼 수 있도록 하려면 컨트롤; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.SetVisibleCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Show
  id: Show
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Show()
  nameWithType: Control.Show()
  fullName: System.Windows.Forms.Control.Show()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "사용자에 게 컨트롤을 표시합니다."
  remarks: "컨트롤을 표시 설정에 해당 하는 <xref:System.Windows.Forms.Control.Visible%2A>속성을 `true`.</xref:System.Windows.Forms.Control.Visible%2A> Show 메서드를 호출한 후의 <xref:System.Windows.Forms.Control.Visible%2A>속성의 값을 반환 `true` 될 때까지 <xref:System.Windows.Forms.Control.Hide%2A>메서드를 호출 합니다.</xref:System.Windows.Forms.Control.Hide%2A> </xref:System.Windows.Forms.Control.Visible%2A>"
  example:
  - "The following code example displays an about dialog box and temporarily draws a blue square on its surface. This example requires that you have defined a class that derives from <xref:System.Windows.Forms.Form> named `AboutDialog`.  \n  \n [!code-cs[Windows.Forms.Control Members2#1](~/add/codesnippet/csharp/m-system.windows.forms.c_27_1.cs)]\n [!code-cpp[Windows.Forms.Control Members2#1](~/add/codesnippet/cpp/m-system.windows.forms.c_27_1.cpp)]\n [!code-vb[Windows.Forms.Control Members2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_27_1.vb)]"
  syntax:
    content: public void Show ();
    parameters: []
  overload: System.Windows.Forms.Control.Show*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ShowFocusCues
  id: ShowFocusCues
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ShowFocusCues
  nameWithType: Control.ShowFocusCues
  fullName: System.Windows.Forms.Control.ShowFocusCues
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤이 포커스 영역을 표시할지 여부를 나타내는 값을 가져옵니다."
  remarks: "이 기능에 대 한 자세한 내용은 참조는[WM_CHANGEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646342\\(v=vs.85\\).aspx),[WM_QUERYUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646355\\(v=vs.85\\).aspx), 및 [WM_UPDATEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646361\\(v=vs.85\\).aspx)항목입니다."
  syntax:
    content: protected virtual bool ShowFocusCues { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 포커스 영역;을 표시 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.ShowFocusCues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ShowKeyboardCues
  id: ShowKeyboardCues
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ShowKeyboardCues
  nameWithType: Control.ShowKeyboardCues
  fullName: System.Windows.Forms.Control.ShowKeyboardCues
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "사용자 인터페이스를 표시 하거나 숨기려면 키보드 액셀러레이터가 적절 한 상태 인지 여부를 나타내는 값을 가져옵니다."
  remarks: "In controls created in the Windows Forms designer, keyboard accelerators are visible by default.  \n  \n For more information about this feature, see the[WM_CHANGEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646342\\(v=vs.85\\).aspx),[WM_QUERYUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646355\\(v=vs.85\\).aspx), and the [WM_UPDATEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646361\\(v=vs.85\\).aspx)topics."
  syntax:
    content: protected virtual bool ShowKeyboardCues { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>키보드 액셀러레이터 키 표시 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.ShowKeyboardCues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Site
  id: Site
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Site
  nameWithType: Control.Site
  fullName: System.Windows.Forms.Control.Site
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 사이트를 가져오거나 설정 합니다."
  syntax:
    content: public override System.ComponentModel.ISite Site { get; set; }
    return:
      type: System.ComponentModel.ISite
      description: "<xref href=&quot;System.ComponentModel.ISite&quot;> </xref> 연관는 <xref href=&quot;System.Windows.Forms.Control&quot;> </xref>있는 경우."
  overload: System.Windows.Forms.Control.Site*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Size
  id: Size
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Size
  nameWithType: Control.Size
  fullName: System.Windows.Forms.Control.Size
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 너비와 높이 가져오거나 설정 합니다."
  remarks: "때문에 <xref:System.Drawing.Size>클래스는 값 형식 (`Structure` 에 [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], `struct` 에 [!INCLUDE[csprcs](~/add/includes/csprcs-md.md)]), 컨트롤의 크기의 복사본을 반환 하는 속성에 액세스를 의미 하는 값으로 반환 됩니다.</xref:System.Drawing.Size> 따라서 조정는 <xref:System.Drawing.Size.Width%2A>또는 <xref:System.Drawing.Size.Height%2A>의 속성은 <xref:System.Drawing.Size>이에서 반환 된 속성에 영향을 주지 것입니다는 <xref:System.Windows.Forms.Control.Width%2A>또는 <xref:System.Windows.Forms.Control.Height%2A>컨트롤의.</xref:System.Windows.Forms.Control.Height%2A> </xref:System.Windows.Forms.Control.Width%2A> </xref:System.Drawing.Size> </xref:System.Drawing.Size.Height%2A> </xref:System.Drawing.Size.Width%2A> 조정 <xref:System.Windows.Forms.Control.Width%2A>하거나 <xref:System.Windows.Forms.Control.Height%2A>컨트롤의 컨트롤의 <xref:System.Windows.Forms.Control.Width%2A> <xref:System.Windows.Forms.Control.Height%2A>속성 또는 새 <xref:System.Drawing.Size>.</xref:System.Drawing.Size> 크기 속성을 설정</xref:System.Windows.Forms.Control.Height%2A> 또는</xref:System.Windows.Forms.Control.Width%2A> 설정 해야 합니다</xref:System.Windows.Forms.Control.Height%2A> </xref:System.Windows.Forms.Control.Width%2A>      > [!NOTE] > 더 나은 성능을 유지 하기 위해 설정 하지 않으면는 <xref:System.Drawing.Size>생성자에서 컨트롤의.</xref:System.Drawing.Size> 재정의 하는 메서드가 좋습니다는 <xref:System.Windows.Forms.Control.DefaultSize%2A>속성.</xref:System.Windows.Forms.Control.DefaultSize%2A>      > [!NOTE] >의 크기, Windows Server 2003에 시스템은 <xref:System.Windows.Forms.Form>최대 픽셀 너비와 높이 모니터에 의해 제한 됩니다.</xref:System.Windows.Forms.Form>"
  example:
  - "The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties. The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized. Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the<xref:System.Drawing.Image>. The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property. Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button. This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.  \n  \n [!code-cs[Windows.Forms.Control Properties#3](~/add/codesnippet/csharp/p-system.windows.forms.c_76_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties#3](~/add/codesnippet/cpp/p-system.windows.forms.c_76_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties#3](~/add/codesnippet/visualbasic/p-system.windows.forms.c_76_1.vb)]"
  syntax:
    content: public System.Drawing.Size Size { get; set; }
    return:
      type: System.Drawing.Size
      description: "<xref href=&quot;System.Drawing.Size&quot;> </xref> 픽셀에서 컨트롤의 너비와 높이 나타내는입니다."
  overload: System.Windows.Forms.Control.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.SizeChanged
  id: SizeChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SizeChanged
  nameWithType: Control.SizeChanged
  fullName: System.Windows.Forms.Control.SizeChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우는 <xref:System.Windows.Forms.Control.Size*>속성 값이 변경.</xref:System.Windows.Forms.Control.Size*>"
  remarks: "사용 하는 것이 좋습니다는 <xref:System.Windows.Forms.Control.Layout>사용자 지정 레이아웃을 처리 하는 이벤트입니다.</xref:System.Windows.Forms.Control.Layout> <xref:System.Windows.Forms.Control.Layout>대 한 응답으로 이벤트는 <xref:System.Windows.Forms.Control.Resize>레이아웃 적용 해야 할 수는 다른 상황에서 뿐만 아니라 이벤트.</xref:System.Windows.Forms.Control.Resize> </xref:System.Windows.Forms.Control.Layout>       이 이벤트는 <xref:System.Windows.Forms.Control.Size%2A>프로그래밍 방식으로 수정 되거나 사용자 상호 작용 하 여 속성이 변경 될.</xref:System.Windows.Forms.Control.Size%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the SizeChanged event. An instance of a <xref:System.Windows.Forms.Button> control has been provided that can be scaled both horizontally and vertically. A <xref:System.Windows.Forms.NumericUpDown> instance provides the horizontal and vertical scale value. The <xref:System.Windows.Forms.Button> instance named **OK** is used to set the scale values for the <xref:System.Windows.Forms.Button> control instance. Whenever the size of the control changes, the event handler associated with the SizeChanged event of the control is called. This event handler displays a message box indicating that the size of the control has changed.  \n  \n [!code-cs[Control_Scale1#2](~/add/codesnippet/csharp/e-system.windows.forms.c_24_1.cs)]\n [!code-cpp[Control_Scale1#2](~/add/codesnippet/cpp/e-system.windows.forms.c_24_1.cpp)]\n [!code-vb[Control_Scale1#2](~/add/codesnippet/visualbasic/e-system.windows.forms.c_24_1.vb)]"
  syntax:
    content: public event EventHandler SizeChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)
  id: SizeFromClientSize(System.Drawing.Size)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SizeFromClientSize(Size)
  nameWithType: Control.SizeFromClientSize(Size)
  fullName: System.Windows.Forms.Control.SizeFromClientSize(Size)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "높이 전체 컨트롤의 크기와 해당 클라이언트 영역의 너비를 결정합니다."
  syntax:
    content: protected virtual System.Drawing.Size SizeFromClientSize (System.Drawing.Size clientSize);
    parameters:
    - id: clientSize
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> 높이 컨트롤의 클라이언트 영역 너비를 나타내는 값입니다."
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> 전체 컨트롤의 너비와 높이 나타내는 값입니다."
  overload: System.Windows.Forms.Control.SizeFromClientSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.StyleChanged
  id: StyleChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: StyleChanged
  nameWithType: Control.StyleChanged
  fullName: System.Windows.Forms.Control.StyleChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤 스타일이 변경 될 때 발생 합니다."
  remarks: "StyleChanged 이벤트가 발생할 때 <xref:System.Windows.Forms.ControlStyles>플래그 추가 되거나 변경 된.</xref:System.Windows.Forms.ControlStyles>       이 이벤트는 프로그래밍 방식으로 수정 되거나 사용자 상호 작용 하 여 컨트롤 스타일이 변경 되 면 발생 합니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the StyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the StyleChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#68](~/add/codesnippet/csharp/e-system.windows.forms.c_25_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#68](~/add/codesnippet/visualbasic/e-system.windows.forms.c_25_1.vb)]"
  syntax:
    content: public event EventHandler StyleChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.SuspendLayout
  id: SuspendLayout
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SuspendLayout()
  nameWithType: Control.SuspendLayout()
  fullName: System.Windows.Forms.Control.SuspendLayout()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 레이아웃 논리를 일시적으로 중단 합니다."
  remarks: "컨트롤의 레이아웃 논리 될 때까지 일시 중단 되는 <xref:System.Windows.Forms.Control.ResumeLayout%2A>메서드를 호출 합니다.</xref:System.Windows.Forms.Control.ResumeLayout%2A>       SuspendLayout 및 <xref:System.Windows.Forms.Control.ResumeLayout%2A>메서드는 동시에 표시 하지 않는 데 여러 <xref:System.Windows.Forms.Control.Layout>컨트롤의 여러 속성을 조정 하는 동안 이벤트.</xref:System.Windows.Forms.Control.Layout> </xref:System.Windows.Forms.Control.ResumeLayout%2A> 예를 들어 사용자는 일반적으로 SuspendLayout 메서드를 호출 후에 설정는 <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, 또는 <xref:System.Windows.Forms.Control.Dock%2A>호출 고 컨트롤의 속성에서 <xref:System.Windows.Forms.Control.ResumeLayout%2A>변경 내용을 적용 하려면 사용할 수 있도록 메서드.</xref:System.Windows.Forms.Control.ResumeLayout%2A> </xref:System.Windows.Forms.Control.Dock%2A> </xref:System.Windows.Forms.Control.Anchor%2A> </xref:System.Windows.Forms.Control.Location%2A> </xref:System.Windows.Forms.Control.Size%2A>       에 대 한 SuspendLayout에 대 한 보류 중인 호출 해야 <xref:System.Windows.Forms.Control.ResumeLayout%2A>를 성공적으로 호출할 수 있습니다.</xref:System.Windows.Forms.Control.ResumeLayout%2A>      > [!NOTE] > 여러 컨트롤에 부모 컨트롤을 추가할 때 것이 좋습니다 추가할 컨트롤을 초기화 하기 전에 SuspendLayout 메서드를 호출 합니다. 부모 컨트롤에 컨트롤을 추가한 후 호출 된 <xref:System.Windows.Forms.Control.ResumeLayout%2A>메서드.</xref:System.Windows.Forms.Control.ResumeLayout%2A> 이렇게 하면 컨트롤이 많은 응용 프로그램의 성능을 늘어납니다."
  example:
  - "The following code example adds two buttons to a form. The example transactions the addition of the buttons by using the SuspendLayout and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods.  \n  \n [!code-cs[Windows.Forms.Control Members2#2](~/add/codesnippet/csharp/m-system.windows.forms.c_14_1.cs)]\n [!code-cpp[Windows.Forms.Control Members2#2](~/add/codesnippet/cpp/m-system.windows.forms.c_14_1.cpp)]\n [!code-vb[Windows.Forms.Control Members2#2](~/add/codesnippet/visualbasic/m-system.windows.forms.c_14_1.vb)]"
  syntax:
    content: public void SuspendLayout ();
    parameters: []
  overload: System.Windows.Forms.Control.SuspendLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)
  id: System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)
  isEii: true
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: System.Windows.Forms.IDropTarget.OnDragDrop(DragEventArgs)
  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragDrop(DragEventArgs)
  fullName: System.Windows.Forms.Control.System.Windows.Forms.IDropTarget.OnDragDrop(DragEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.DragDrop&quot;> </xref> 이벤트입니다."
  syntax:
    content: void IDropTarget.OnDragDrop (System.Windows.Forms.DragEventArgs drgEvent);
    parameters:
    - id: drgEvent
      type: System.Windows.Forms.DragEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DragEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)
  id: System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)
  isEii: true
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: System.Windows.Forms.IDropTarget.OnDragEnter(DragEventArgs)
  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragEnter(DragEventArgs)
  fullName: System.Windows.Forms.Control.System.Windows.Forms.IDropTarget.OnDragEnter(DragEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.DragEnter&quot;> </xref> 이벤트입니다."
  syntax:
    content: void IDropTarget.OnDragEnter (System.Windows.Forms.DragEventArgs drgEvent);
    parameters:
    - id: drgEvent
      type: System.Windows.Forms.DragEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DragEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)
  id: System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)
  isEii: true
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: System.Windows.Forms.IDropTarget.OnDragLeave(EventArgs)
  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragLeave(EventArgs)
  fullName: System.Windows.Forms.Control.System.Windows.Forms.IDropTarget.OnDragLeave(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.DragLeave&quot;> </xref> 이벤트입니다."
  syntax:
    content: void IDropTarget.OnDragLeave (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "A <xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)
  id: System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)
  isEii: true
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: System.Windows.Forms.IDropTarget.OnDragOver(DragEventArgs)
  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragOver(DragEventArgs)
  fullName: System.Windows.Forms.Control.System.Windows.Forms.IDropTarget.OnDragOver(DragEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.DragOver&quot;> </xref> 이벤트입니다."
  syntax:
    content: void IDropTarget.OnDragOver (System.Windows.Forms.DragEventArgs drgEvent);
    parameters:
    - id: drgEvent
      type: System.Windows.Forms.DragEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DragEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.SystemColorsChanged
  id: SystemColorsChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SystemColorsChanged
  nameWithType: Control.SystemColorsChanged
  fullName: System.Windows.Forms.Control.SystemColorsChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "시스템 색이 변경 될 때 발생 합니다."
  remarks: "이 이벤트는 <xref:System.Drawing.SystemColors>프로그래밍 방식으로 수정 되거나 사용자 상호 작용 하 여 변경 됩니다.</xref:System.Drawing.SystemColors>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the SystemColorsChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the SystemColorsChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#69](~/add/codesnippet/csharp/e-system.windows.forms.c_57_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#69](~/add/codesnippet/visualbasic/e-system.windows.forms.c_57_1.vb)]"
  syntax:
    content: public event EventHandler SystemColorsChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.TabIndex
  id: TabIndex
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: TabIndex
  nameWithType: Control.TabIndex
  fullName: System.Windows.Forms.Control.TabIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "해당 컨테이너 내에서 컨트롤의 탭 순서를 가져오거나 설정 합니다."
  remarks: "탭 순서에서 앞에&0; 개, 더 낮은 숫자 보다 크거나 같은 임의의 유효한 정수 탭 인덱스를 구성할 수 있습니다. 같은 부모 컨트롤에 대 한 개 이상의 컨트롤이 동일한 탭 인덱스 있으면, 컨트롤의 z 순서 컨트롤 전체를 순환 하려면 순서를 결정 합니다.       탭 순서에 포함 되도록 컨트롤에 대 한 해당 <xref:System.Windows.Forms.Control.TabStop%2A>속성으로 설정 되어 있어야 `true`.</xref:System.Windows.Forms.Control.TabStop%2A>"
  example:
  - "The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties. The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized. Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>. The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the TabIndex property. Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button. This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.  \n  \n [!code-cs[Windows.Forms.Control Properties#3](~/add/codesnippet/csharp/p-system.windows.forms.c_102_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties#3](~/add/codesnippet/cpp/p-system.windows.forms.c_102_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties#3](~/add/codesnippet/visualbasic/p-system.windows.forms.c_102_1.vb)]"
  syntax:
    content: public int TabIndex { get; set; }
    return:
      type: System.Int32
      description: "해당 컨테이너 내의 컨트롤 집합 내에서 컨트롤의 인덱스 값입니다. 컨테이너의 컨트롤 탭 순서에 포함 됩니다."
  overload: System.Windows.Forms.Control.TabIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.TabIndexChanged
  id: TabIndexChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: TabIndexChanged
  nameWithType: Control.TabIndexChanged
  fullName: System.Windows.Forms.Control.TabIndexChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우는 <xref:System.Windows.Forms.Control.TabIndex*>속성 값이 변경.</xref:System.Windows.Forms.Control.TabIndex*>"
  remarks: "이 이벤트는 <xref:System.Windows.Forms.Control.TabIndex%2A>프로그래밍 방식으로 수정 되거나 사용자 상호 작용 하 여 속성이 변경 될.</xref:System.Windows.Forms.Control.TabIndex%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the TabIndexChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the TabIndexChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#25](~/add/codesnippet/csharp/e-system.windows.forms.c_79_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#25](~/add/codesnippet/visualbasic/e-system.windows.forms.c_79_1.vb)]"
  syntax:
    content: public event EventHandler TabIndexChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.TabStop
  id: TabStop
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: TabStop
  nameWithType: Control.TabStop
  fullName: System.Windows.Forms.Control.TabStop
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "TAB 키를 사용 하 여이 컨트롤에 포커스를 이동할 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "사용자가 TAB 키를 누르면 입력된 포커스가 탭 순서의 다음 컨트롤로 설정 됩니다. 컨트롤의 TabStop 속성 값과 `false` 탭 순서에 컨트롤의 컬렉션에 포함 되지 않습니다. 탭 순서는 컨트롤을 설정 하 여 조작할 수 <xref:System.Windows.Forms.Control.TabIndex%2A>속성 값.</xref:System.Windows.Forms.Control.TabIndex%2A>"
  example:
  - "The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties. The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized. Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>. The example then sets the TabStop to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property. Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button. This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.  \n  \n [!code-cs[Windows.Forms.Control Properties#3](~/add/codesnippet/csharp/p-system.windows.forms.c_74_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties#3](~/add/codesnippet/cpp/p-system.windows.forms.c_74_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties#3](~/add/codesnippet/visualbasic/p-system.windows.forms.c_74_1.vb)]"
  syntax:
    content: public bool TabStop { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사용자는 TAB 키를 사용 하 여 컨트롤에 포커스를 이동할 수 있으면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다.       <div class=&quot;alert NOTE&quot;>    이 속성은 항상 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 인스턴스의 <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> 클래스입니다.      </div>"
  overload: System.Windows.Forms.Control.TabStop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.TabStopChanged
  id: TabStopChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: TabStopChanged
  nameWithType: Control.TabStopChanged
  fullName: System.Windows.Forms.Control.TabStopChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우는 <xref:System.Windows.Forms.Control.TabStop*>속성 값이 변경.</xref:System.Windows.Forms.Control.TabStop*>"
  remarks: "이 이벤트는 <xref:System.Windows.Forms.Control.TabStop%2A>프로그래밍 방식으로 수정 되거나 사용자 상호 작용 하 여 속성이 변경 될.</xref:System.Windows.Forms.Control.TabStop%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the TabStopChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the TabStopChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#26](~/add/codesnippet/csharp/e-system.windows.forms.c_83_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#26](~/add/codesnippet/visualbasic/e-system.windows.forms.c_83_1.vb)]"
  syntax:
    content: public event EventHandler TabStopChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Tag
  id: Tag
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Tag
  nameWithType: Control.Tag
  fullName: System.Windows.Forms.Control.Tag
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 대 한 데이터를 포함 하는 개체를 가져오거나 설정 합니다."
  remarks: "파생 된 모든 형식에서 <xref:System.Object>클래스는이 속성에 할당할 수 있습니다.</xref:System.Object> 태그 속성을 설정 하 여 Windows Forms 디자이너, 텍스트에만 할당할 수 있습니다.       Tag 속성에 대 한 일반적인 용도 컨트롤과 밀접 하 게 관련 된 데이터를 저장 하는 것입니다. 예를 들어 고객에 대 한 정보를 표시 하는 컨트롤을 사용 하는 경우 저장할 수 있습니다는 <xref:System.Data.DataSet>데이터에 빠르게 액세스할 수 있도록 고객의 주문 기록과 해당 컨트롤의 태그 속성에 들어 있는.</xref:System.Data.DataSet>"
  example:
  - "The following code example displays a form and stores a `Customer` in its Tag property. This example requires that you have defined a class that derives from <xref:System.Windows.Forms.Form> named `CustomerForm` and that you have defined a `Customer`.  \n  \n [!code-cs[Windows.Forms.Control Members2#3](~/add/codesnippet/csharp/p-system.windows.forms.c_59_1.cs)]\n [!code-cpp[Windows.Forms.Control Members2#3](~/add/codesnippet/cpp/p-system.windows.forms.c_59_1.cpp)]\n [!code-vb[Windows.Forms.Control Members2#3](~/add/codesnippet/visualbasic/p-system.windows.forms.c_59_1.vb)]"
  syntax:
    content: public object Tag { get; set; }
    return:
      type: System.Object
      description: "<xref:System.Object>컨트롤에 대 한 데이터가 들어 있는.</xref:System.Object> 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.Tag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Text
  id: Text
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Text
  nameWithType: Control.Text
  fullName: System.Windows.Forms.Control.Text
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 컨트롤과 관련 된 텍스트를 가져오거나 설정 합니다."
  remarks: "컨트롤의 텍스트 속성은 각 파생된 클래스에서 다르게 사용 됩니다. 예를 들어의 Text 속성은 <xref:System.Windows.Forms.Form>폼의 상단에 있는 제목 표시줄에 표시 됩니다, 문자 수가 매우 적고 이며 일반적으로 응용 프로그램이 나 문서 이름이 표시 됩니다.</xref:System.Windows.Forms.Form> 그러나의 Text 속성은 <xref:System.Windows.Forms.RichTextBox>매우 커질 수 있으며 텍스트의 서식을 지정 하는 데 사용 되는 다양 한 표시 되지 않는 문자를 포함할 수 있습니다.</xref:System.Windows.Forms.RichTextBox> 예를 들어 표시 되는 텍스트는 <xref:System.Windows.Forms.RichTextBox>조정 하 여 형식을 지정할 수는 <xref:System.Drawing.Font>속성 또는 공백 또는 탭 문자 텍스트를 추가 하 여.</xref:System.Drawing.Font> </xref:System.Windows.Forms.RichTextBox>"
  example:
  - "The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties. The example creates a <xref:System.Windows.Forms.TextBox> and sets its <xref:System.Windows.Forms.Control.Location%2A> within the group box. Next, it sets the Text property of the group box, and docks the group box to the top of the form. Lastly, it disables the group box by setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false`, which causes all controls contained within the group box to be disabled.  \n  \n [!code-cs[Windows.Forms.Control Properties#2](~/add/codesnippet/csharp/p-system.windows.forms.c_89_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties#2](~/add/codesnippet/cpp/p-system.windows.forms.c_89_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties#2](~/add/codesnippet/visualbasic/p-system.windows.forms.c_89_1.vb)]"
  syntax:
    content: public virtual string Text { get; set; }
    return:
      type: System.String
      description: "이 컨트롤과 관련 된 텍스트입니다."
  overload: System.Windows.Forms.Control.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.TextChanged
  id: TextChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: TextChanged
  nameWithType: Control.TextChanged
  fullName: System.Windows.Forms.Control.TextChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우는 <xref:System.Windows.Forms.Control.Text*>속성 값이 변경.</xref:System.Windows.Forms.Control.Text*>"
  remarks: "이 이벤트는 <xref:System.Windows.Forms.Control.Text%2A>프로그래밍 방식으로 수정 되거나 사용자 상호 작용 하 여 속성이 변경 될.</xref:System.Windows.Forms.Control.Text%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.  \n  \n [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_19_1.vb)]\n [!code-cs[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/csharp/e-system.windows.forms.c_19_1.cs)]\n [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/cpp/e-system.windows.forms.c_19_1.cpp)]"
  syntax:
    content: public event EventHandler TextChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Top
  id: Top
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Top
  nameWithType: Control.Top
  fullName: System.Windows.Forms.Control.Top
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 위쪽 가장자리와 해당 컨테이너 클라이언트 영역의 위쪽 가장자리 사이의 픽셀 거리를 가져오거나 설정 합니다."
  remarks: "Top 속성 값은 해당 하는 <xref:System.Drawing.Point.Y%2A?displayProperty=fullName>의 속성은 <xref:System.Windows.Forms.Control.Location%2A>컨트롤의 속성 값.</xref:System.Windows.Forms.Control.Location%2A> </xref:System.Drawing.Point.Y%2A?displayProperty=fullName>       변경 내용을 <xref:System.Windows.Forms.Control.Height%2A>Top 속성 값을 하면 및에서 <xref:System.Windows.Forms.Control.Bottom%2A>변경 하려면 컨트롤의 속성 값.</xref:System.Windows.Forms.Control.Bottom%2A> </xref:System.Windows.Forms.Control.Height%2A>"
  example:
  - "The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties. This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.  \n  \n [!code-cs[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/csharp/p-system.windows.forms.c_77_1.cs)]\n [!code-cpp[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/cpp/p-system.windows.forms.c_77_1.cpp)]\n [!code-vb[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_77_1.vb)]"
  syntax:
    content: public int Top { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>(픽셀) 컨트롤의 아래쪽 가장자리와 해당 컨테이너 클라이언트 영역의 위쪽 가장자리 사이의 거리를 나타내는.</xref:System.Int32>"
  overload: System.Windows.Forms.Control.Top*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.TopLevelControl
  id: TopLevelControl
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: TopLevelControl
  nameWithType: Control.TopLevelControl
  fullName: System.Windows.Forms.Control.TopLevelControl
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "부모 컨트롤을 자식이 다른 Windows Forms 컨트롤을 가져옵니다. 일반적으로 이것은 가장 바깥쪽 <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> 컨트롤에 포함 됩니다."
  remarks: "부모 컨트롤의 자식이 다른 Windows Forms 컨트롤을 최상위 컨트롤 정의 되어 있습니다. 일반적으로 이것은 가장 바깥쪽 <xref:System.Windows.Forms.Form>컨트롤을 포함</xref:System.Windows.Forms.Form> 예를 들어 컨트롤이 있는 MDI 자식에 <xref:System.Windows.Forms.Form>다음 최상위 컨트롤은 문서 MDI (다중 인터페이스) 부모 <xref:System.Windows.Forms.Form>.</xref:System.Windows.Forms.Form> ,</xref:System.Windows.Forms.Form> 포함 된 경우 에 컨트롤의 부모가 없는 경우는 <xref:System.Windows.Forms.Form>,이 속성은 반환 `null`.</xref:System.Windows.Forms.Form>"
  syntax:
    content: public System.Windows.Forms.Control TopLevelControl { get; }
    return:
      type: System.Windows.Forms.Control
      description: "<xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 현재 컨트롤을 포함 하는 최상위 컨트롤을 나타내는입니다."
  overload: System.Windows.Forms.Control.TopLevelControl*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Update
  id: Update
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Update()
  nameWithType: Control.Update()
  fullName: System.Windows.Forms.Control.Update()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤이 클라이언트 영역 내에서 무효화 된 영역을 다시 그리게 합니다."
  remarks: "Executes any pending requests for painting.  \n  \n There are two ways to repaint a form and its contents:  \n  \n-   You can use one of the overloads of the <xref:System.Windows.Forms.Control.Invalidate%2A> method with the Update method.  \n  \n-   You can call the <xref:System.Windows.Forms.Control.Refresh%2A> method, which forces the control to redraw itself and all its children. This is equivalent to setting the <xref:System.Windows.Forms.Control.Invalidate%2A> method to `true` and using it with Update.  \n  \n The <xref:System.Windows.Forms.Control.Invalidate%2A> method governs what gets painted or repainted. The Update method governs when the painting or repainting occurs. If you use the <xref:System.Windows.Forms.Control.Invalidate%2A> and Update methods together rather than calling <xref:System.Windows.Forms.Control.Refresh%2A>, what gets repainted depends on which overload of <xref:System.Windows.Forms.Control.Invalidate%2A> you use. The Update method just forces the control to be painted immediately, but the <xref:System.Windows.Forms.Control.Invalidate%2A> method governs what gets painted when you call the Update method.  \n  \n For more information, see the[WM_PAINT](http://msdn.microsoft.com/library/dd145213\\(v=vs.85\\).aspx)topic."
  syntax:
    content: public void Update ();
    parameters: []
  overload: System.Windows.Forms.Control.Update*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.UpdateBounds
  id: UpdateBounds
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: UpdateBounds()
  nameWithType: Control.UpdateBounds()
  fullName: System.Windows.Forms.Control.UpdateBounds()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "현재 크기 및 위치와 컨트롤의 범위를 업데이트합니다."
  remarks: "하는 경우 새 <xref:System.Windows.Forms.Control.Size%2A>컨트롤의와 다르면 이전 <xref:System.Drawing.Size>, <xref:System.Windows.Forms.Control.SizeChanged>이벤트가 발생 합니다.</xref:System.Windows.Forms.Control.SizeChanged> </xref:System.Drawing.Size> </xref:System.Windows.Forms.Control.Size%2A> 마찬가지로, 하는 경우는 <xref:System.Windows.Forms.Control.Location%2A>컨트롤 변경는 <xref:System.Windows.Forms.Control.LocationChanged>이벤트가 발생 합니다.</xref:System.Windows.Forms.Control.LocationChanged> </xref:System.Windows.Forms.Control.Location%2A>"
  syntax:
    content: protected void UpdateBounds ();
    parameters: []
  overload: System.Windows.Forms.Control.UpdateBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  id: UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: UpdateBounds(Int32,Int32,Int32,Int32)
  nameWithType: Control.UpdateBounds(Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.Control.UpdateBounds(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정 된 크기 및 위치와 컨트롤의 범위를 업데이트합니다."
  remarks: "하는 경우 새 <xref:System.Windows.Forms.Control.Size%2A>이전와 다른 경우 컨트롤의 <xref:System.Drawing.Size>, <xref:System.Windows.Forms.Control.SizeChanged>이벤트가 발생 합니다.</xref:System.Windows.Forms.Control.SizeChanged> </xref:System.Drawing.Size> </xref:System.Windows.Forms.Control.Size%2A> 마찬가지로,이 <xref:System.Windows.Forms.Control.Location%2A>컨트롤 변경는 <xref:System.Windows.Forms.Control.LocationChanged>이벤트가 발생 합니다.</xref:System.Windows.Forms.Control.LocationChanged> </xref:System.Windows.Forms.Control.Location%2A>"
  syntax:
    content: protected void UpdateBounds (int x, int y, int width, int height);
    parameters:
    - id: x
      type: System.Int32
      description: "<xref:System.Drawing.Point.X*>좌표는 컨트롤입니다.</xref:System.Drawing.Point.X*>"
    - id: y
      type: System.Int32
      description: "<xref:System.Drawing.Point.Y*>좌표는 컨트롤입니다.</xref:System.Drawing.Point.Y*>"
    - id: width
      type: System.Int32
      description: "<xref:System.Drawing.Size.Width*>컨트롤의.</xref:System.Drawing.Size.Width*>"
    - id: height
      type: System.Int32
      description: "<xref:System.Drawing.Size.Height*>컨트롤의.</xref:System.Drawing.Size.Height*>"
  overload: System.Windows.Forms.Control.UpdateBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: UpdateBounds(Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Control.UpdateBounds(Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.Control.UpdateBounds(Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정 된 크기, 위치 및 클라이언트 크기와 컨트롤의 범위를 업데이트합니다."
  remarks: "하는 경우 새 <xref:System.Windows.Forms.Control.Size%2A>컨트롤의와 다르면 이전 <xref:System.Drawing.Size>, <xref:System.Windows.Forms.Control.SizeChanged>이벤트가 발생 합니다.</xref:System.Windows.Forms.Control.SizeChanged> </xref:System.Drawing.Size> </xref:System.Windows.Forms.Control.Size%2A> 마찬가지로, 하는 경우는 <xref:System.Windows.Forms.Control.Location%2A>컨트롤 변경는 <xref:System.Windows.Forms.Control.LocationChanged>이벤트가 발생 합니다.</xref:System.Windows.Forms.Control.LocationChanged> </xref:System.Windows.Forms.Control.Location%2A>"
  syntax:
    content: protected void UpdateBounds (int x, int y, int width, int height, int clientWidth, int clientHeight);
    parameters:
    - id: x
      type: System.Int32
      description: "<xref:System.Drawing.Point.X*>좌표는 컨트롤입니다.</xref:System.Drawing.Point.X*>"
    - id: y
      type: System.Int32
      description: "<xref:System.Drawing.Point.Y*>좌표는 컨트롤입니다.</xref:System.Drawing.Point.Y*>"
    - id: width
      type: System.Int32
      description: "<xref:System.Drawing.Size.Width*>컨트롤의.</xref:System.Drawing.Size.Width*>"
    - id: height
      type: System.Int32
      description: "<xref:System.Drawing.Size.Height*>컨트롤의.</xref:System.Drawing.Size.Height*>"
    - id: clientWidth
      type: System.Int32
      description: "클라이언트 <xref:System.Drawing.Size.Width*>컨트롤의.</xref:System.Drawing.Size.Width*>"
    - id: clientHeight
      type: System.Int32
      description: "클라이언트 <xref:System.Drawing.Size.Height*>컨트롤의.</xref:System.Drawing.Size.Height*>"
  overload: System.Windows.Forms.Control.UpdateBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.UpdateStyles
  id: UpdateStyles
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: UpdateStyles()
  nameWithType: Control.UpdateStyles()
  fullName: System.Windows.Forms.Control.UpdateStyles()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "할당된 된 스타일이 컨트롤에 다시 적용 되도록 합니다."
  remarks: "이 메서드를 호출는 <xref:System.Windows.Forms.Control.CreateParams%2A>메서드를 적용 하기 위해 스타일을 가져옵니다.</xref:System.Windows.Forms.Control.CreateParams%2A> 에 할당 된 스타일의 <xref:System.Windows.Forms.CreateParams.Style%2A>및 <xref:System.Windows.Forms.CreateParams.ExStyle%2A>의 속성은 <xref:System.Windows.Forms.CreateParams>는 컨트롤에 할당 된 <xref:System.Windows.Forms.Control.CreateParams%2A>속성 다시 적용 됩니다.</xref:System.Windows.Forms.Control.CreateParams%2A> </xref:System.Windows.Forms.CreateParams> </xref:System.Windows.Forms.CreateParams.ExStyle%2A> </xref:System.Windows.Forms.CreateParams.Style%2A> 필요한 경우 스타일 변경 내용에 맞게 컨트롤 다시 그려집니다.       UpdateStyles 메서드에서 아무 작업도 경우는 <xref:System.Windows.Forms.Control.IsHandleCreated%2A>속성 값은 `false`.</xref:System.Windows.Forms.Control.IsHandleCreated%2A>"
  example:
  - "The following code example enables double-buffering on a <xref:System.Windows.Forms.Form> and updates the styles to reflect the changes.  \n  \n [!code-cpp[Windows.Forms.ControlMembers6#3](~/add/codesnippet/cpp/m-system.windows.forms.c_39_1.cpp)]\n [!code-cs[Windows.Forms.ControlMembers6#3](~/add/codesnippet/csharp/m-system.windows.forms.c_39_1.cs)]\n [!code-vb[Windows.Forms.ControlMembers6#3](~/add/codesnippet/visualbasic/m-system.windows.forms.c_39_1.vb)]"
  syntax:
    content: protected void UpdateStyles ();
    parameters: []
  overload: System.Windows.Forms.Control.UpdateStyles*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.UpdateZOrder
  id: UpdateZOrder
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: UpdateZOrder()
  nameWithType: Control.UpdateZOrder()
  fullName: System.Windows.Forms.Control.UpdateZOrder()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤 부모의 z 순서를 업데이트합니다."
  remarks: "UpdateZOrder 메서드는 부모 컨트롤의 z 순서에서 컨트롤의 위치를 업데이트합니다. 이 컨트롤은 새로 만든 제어 하는 경우에 예를 들어 추가한는 <xref:System.Windows.Forms.Control.ControlCollection>, z-순서 뒤에 추가 하 고 새 컨트롤으로 업데이트 됩니다.</xref:System.Windows.Forms.Control.ControlCollection>"
  syntax:
    content: protected void UpdateZOrder ();
    parameters: []
  overload: System.Windows.Forms.Control.UpdateZOrder*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.UseWaitCursor
  id: UseWaitCursor
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: UseWaitCursor
  nameWithType: Control.UseWaitCursor
  fullName: System.Windows.Forms.Control.UseWaitCursor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "현재 컨트롤과 모든 자식 컨트롤에 대 한 대기 커서를 사용할지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "시간이 오래 걸리는 작업을 수행할 때마다 대기 커서를 사용 합니다. 그러나 UI 스레드를 차단 하는 작업 acursor 변경도 차단 됩니다 note 합니다. 따라서이 속성은 다른 스레드에서 시간이 많이 걸리는 작업을 수행할 때만 사용 해야 합니다. 즉시 전역적으로 커서를 변경 하려면 참조 하십시오. <xref:System.Windows.Forms.Cursor.Current%2A>속성.</xref:System.Windows.Forms.Cursor.Current%2A>"
  syntax:
    content: public bool UseWaitCursor { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>현재 컨트롤과 모든 자식 컨트롤이;에 대 한 대기 커서를 사용 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.UseWaitCursor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Validated
  id: Validated
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Validated
  nameWithType: Control.Validated
  fullName: System.Windows.Forms.Control.Validated
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤 완료 되 면 발생 유효성을 검사 합니다."
  remarks: "When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  <xref:System.Windows.Forms.Control.Leave>  \n  \n4.  <xref:System.Windows.Forms.Control.Validating>  \n  \n5.  Validated  \n  \n6.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n4.  <xref:System.Windows.Forms.Control.Leave>  \n  \n5.  <xref:System.Windows.Forms.Control.Validating>  \n  \n6.  Validated  \n  \n If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and Validated events are suppressed.  \n  \n If the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> is set to `true` in the <xref:System.Windows.Forms.Control.Validating> event delegate, all events that would usually occur after the <xref:System.Windows.Forms.Control.Validating> event are suppressed.  \n  \n> [!CAUTION]\n>  Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or Validated event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the[WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms632614\\(v=vs.85\\).aspx)topic, and the \"Message Deadlocks\" section of the [About Messages and Message Queues](http://msdn.microsoft.com/library/windows/desktop/ms644927\\(v=vs.85\\).aspx) topic.  \n  \n For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example uses the derived class <xref:System.Windows.Forms.TextBox> and validates an e-mail address that the user enters. If the e-mail address is not in the standard format (containing \"@\" and \".\"), the validation fails, an <xref:System.Windows.Forms.ErrorProvider> icon is displayed, and the event is canceled. This example requires that a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.ErrorProvider> control have been created on a form.  \n  \n [!code-cs[Control.Validating#1](~/add/codesnippet/csharp/e-system.windows.forms.c_81_1.cs)]\n [!code-cpp[Control.Validating#1](~/add/codesnippet/cpp/e-system.windows.forms.c_81_1.cpp)]\n [!code-vb[Control.Validating#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_81_1.vb)]"
  syntax:
    content: public event EventHandler Validated;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Validating
  id: Validating
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Validating
  nameWithType: Control.Validating
  fullName: System.Windows.Forms.Control.Validating
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 유효성을 검사할 때 발생 합니다."
  remarks: "호출 하 여 키보드 (TAB, SHIFT + TAB 등)를 사용 하 여 포커스를 변경 하면는 <xref:System.Windows.Forms.Control.Select%2A>또는 <xref:System.Windows.Forms.Control.SelectNextControl%2A>메서드를 설정 하거나는 <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName>속성을 현재 폼으로 포커스 이벤트가 다음 순서 대로 발생: 1.</xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> </xref:System.Windows.Forms.Control.SelectNextControl%2A> </xref:System.Windows.Forms.Control.Select%2A>  <xref:System.Windows.Forms.Control.Enter>2입니다.</xref:System.Windows.Forms.Control.Enter>  <xref:System.Windows.Forms.Control.GotFocus>3입니다.</xref:System.Windows.Forms.Control.GotFocus>  <xref:System.Windows.Forms.Control.Leave>4입니다.</xref:System.Windows.Forms.Control.Leave>  5 유효성을 검사 합니다.  <xref:System.Windows.Forms.Control.Validated>6입니다.</xref:System.Windows.Forms.Control.Validated>  <xref:System.Windows.Forms.Control.LostFocus>마우스를 사용 하거나 호출 하 여 포커스를 변경 하면는 <xref:System.Windows.Forms.Control.Focus%2A>메서드, 포커스 이벤트가 다음 순서 대로 발생: 1.</xref:System.Windows.Forms.Control.Focus%2A></xref:System.Windows.Forms.Control.LostFocus>  <xref:System.Windows.Forms.Control.Enter>2입니다.</xref:System.Windows.Forms.Control.Enter>  <xref:System.Windows.Forms.Control.GotFocus>3입니다.</xref:System.Windows.Forms.Control.GotFocus>  <xref:System.Windows.Forms.Control.LostFocus>4입니다.</xref:System.Windows.Forms.Control.LostFocus>  <xref:System.Windows.Forms.Control.Leave>5입니다.</xref:System.Windows.Forms.Control.Leave>  6 유효성을 검사 합니다.  <xref:System.Windows.Forms.Control.Validated>경우는 <xref:System.Windows.Forms.Control.CausesValidation%2A>속성이 `false`, 유효성 검사 및 <xref:System.Windows.Forms.Control.Validated>이벤트는 표시 되지 않습니다.</xref:System.Windows.Forms.Control.Validated> </xref:System.Windows.Forms.Control.CausesValidation%2A></xref:System.Windows.Forms.Control.Validated>       경우는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>의 속성은 <xref:System.ComponentModel.CancelEventArgs>로 설정 된 `true` Validating 이벤트 대리자에서 발생 하는 일반적으로 Validating 이벤트 이후의 모든 이벤트는 표시 되지 않습니다.</xref:System.ComponentModel.CancelEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>      > [!CAUTION] > 내에서 포커스를 설정 하지 마십시오는 <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>유효성 검사, 또는 <xref:System.Windows.Forms.Control.Validated>이벤트 처리기.</xref:System.Windows.Forms.Control.Validated> </xref:System.Windows.Forms.Control.LostFocus> </xref:System.Windows.Forms.Control.Leave> </xref:System.Windows.Forms.Control.GotFocus> </xref:System.Windows.Forms.Control.Enter> 이렇게 하면 응용 프로그램 또는 운영 체제 응답 하지 발생할 수 있습니다. 자세한 내용은 참조는 `WM_KILLFOCUS` &quot;키보드 입력 참조&quot; 섹션 및 http://msdn.microsoft.com/library에 MSDN library의 &quot;에 대 한 메시지 및 메시지 큐&quot; 항목의 &quot;메시지 교착 상태&quot; 섹션에 있는 항목입니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example uses the derived class <xref:System.Windows.Forms.TextBox> and validates an e-mail address that the user enters. If the e-mail address is not in the standard format (containing \"@\" and \".\"), the validation fails, an <xref:System.Windows.Forms.ErrorProvider> icon is displayed, and the event is canceled. This example requires that a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.ErrorProvider> control have been created on a form.  \n  \n [!code-cs[Control.Validating#1](~/add/codesnippet/csharp/e-system.windows.forms.c_41_1.cs)]\n [!code-cpp[Control.Validating#1](~/add/codesnippet/cpp/e-system.windows.forms.c_41_1.cpp)]\n [!code-vb[Control.Validating#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_41_1.vb)]"
  syntax:
    content: public event System.ComponentModel.CancelEventHandler Validating;
    return:
      type: System.ComponentModel.CancelEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Visible
  id: Visible
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Visible
  nameWithType: Control.Visible
  fullName: System.Windows.Forms.Control.Visible
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤과 모든 해당 자식 컨트롤이 표시 되는지를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "경우에 해당 `Visible` 로 설정 된 `true`, 다른 컨트롤 뒤에 가려져 경우 컨트롤 사용자에 게 표시 되지 않을 수도 있습니다."
  example:
  - "The following code example uses the derived classes <xref:System.Windows.Forms.VScrollBar> and <xref:System.Windows.Forms.HScrollBar> and sets their Visible property values, based on the size of an <xref:System.Drawing.Image> being displayed in a <xref:System.Windows.Forms.PictureBox> control. This example requires that a <xref:System.Windows.Forms.PictureBox> has been created on a form and that <xref:System.Windows.Forms.HScrollBar> and <xref:System.Windows.Forms.VScrollBar> controls have been created on the <xref:System.Windows.Forms.PictureBox>. This code should be called when the image is loaded into the picture box and by the <xref:System.Windows.Forms.Control.Resize> event of the form.  \n  \n [!code-cpp[Classic Control.Visible Example#1](~/add/codesnippet/cpp/p-system.windows.forms.c_101_1.cpp)]\n [!code-vb[Classic Control.Visible Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_101_1.vb)]\n [!code-cs[Classic Control.Visible Example#1](~/add/codesnippet/csharp/p-system.windows.forms.c_101_1.cs)]"
  syntax:
    content: public bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤과 모든 해당 자식 컨트롤이 표시 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Control.Visible*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.VisibleChanged
  id: VisibleChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: VisibleChanged
  nameWithType: Control.VisibleChanged
  fullName: System.Windows.Forms.Control.VisibleChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우는 <xref:System.Windows.Forms.Control.Visible*>속성 값이 변경.</xref:System.Windows.Forms.Control.Visible*>"
  remarks: "이 이벤트는 <xref:System.Windows.Forms.Control.Visible%2A>프로그래밍 방식으로 수정 되거나 사용자 상호 작용 하 여 속성이 변경 될.</xref:System.Windows.Forms.Control.Visible%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example raises the VisibleChanged event when the <xref:System.Windows.Forms.Control.Visible%2A> property value of the <xref:System.Windows.Forms.Label> control has changed.  \n  \n [!code-vb[Control_VisibleChanged#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_58_1.vb)]\n [!code-cpp[Control_VisibleChanged#1](~/add/codesnippet/cpp/e-system.windows.forms.c_58_1.cpp)]\n [!code-cs[Control_VisibleChanged#1](~/add/codesnippet/csharp/e-system.windows.forms.c_58_1.cs)]"
  syntax:
    content: public event EventHandler VisibleChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Width
  id: Width
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Width
  nameWithType: Control.Width
  fullName: System.Windows.Forms.Control.Width
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 너비를 가져오거나 설정 합니다."
  remarks: "너비를 변경 하 고 <xref:System.Windows.Forms.Control.Left%2A>속성 값은 <xref:System.Windows.Forms.Control.Right%2A>변경 하려면 컨트롤의 속성 값.</xref:System.Windows.Forms.Control.Right%2A> </xref:System.Windows.Forms.Control.Left%2A>"
  example:
  - "The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties. This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.  \n  \n [!code-cs[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/csharp/p-system.windows.forms.c_100_1.cs)]\n [!code-cpp[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/cpp/p-system.windows.forms.c_100_1.cpp)]\n [!code-vb[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_100_1.vb)]"
  syntax:
    content: public int Width { get; set; }
    return:
      type: System.Int32
      description: "픽셀 단위로 컨트롤의 너비입니다."
  overload: System.Windows.Forms.Control.Width*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.WindowTarget
  id: WindowTarget
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: WindowTarget
  nameWithType: Control.WindowTarget
  fullName: System.Windows.Forms.Control.WindowTarget
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 속성은이 클래스와 관련이 없습니다."
  remarks: "이 속성은이 클래스와 관련이 없습니다."
  syntax:
    content: public System.Windows.Forms.IWindowTarget WindowTarget { get; set; }
    return:
      type: System.Windows.Forms.IWindowTarget
      description: "컨트롤에 포함 된 NativeWindow입니다."
  overload: System.Windows.Forms.Control.WindowTarget*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)
  id: WndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: WndProc(Message)
  nameWithType: Control.WndProc(Message)
  fullName: System.Windows.Forms.Control.WndProc(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Windows 메시지를 처리 합니다."
  remarks: "모든 메시지는 WndProc 메서드를 통해 필터링 된 후의 <xref:System.Windows.Forms.Control.PreProcessMessage%2A>메서드.</xref:System.Windows.Forms.Control.PreProcessMessage%2A>       WndProc 메서드는 Windows에 정확 하 게 해당 `WindowProc` 함수입니다. Windows 메시지를 처리 하는 방법에 대 한 자세한 내용은 참조는 [WindowProc 함수](http://go.microsoft.com/fwlink/?LinkId=181565)합니다."
  example:
  - "The following code example demonstrates overriding the WndProc method to handle operating system messages identified in the <xref:System.Windows.Forms.Message> structure. The[WM_ACTIVATEAPP](http://msdn.microsoft.com/en-us/library/windows/desktop/ms632614\\(v=vs.85\\).aspx)operating system message is handled in this example to know when another application is becoming active. See the following topics to understand the available <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Message.LParam%2A?displayProperty=fullName>, and <xref:System.Windows.Forms.Message.WParam%2A?displayProperty=fullName> values. Actual constant values can be found in the Windows.h header file.  \n  \n [!code-cs[System.Windows.Forms.Control.WndProc#1](~/add/codesnippet/csharp/m-system.windows.forms.c_79_1.cs)]\n [!code-vb[System.Windows.Forms.Control.WndProc#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_79_1.vb)]\n [!code-cpp[System.Windows.Forms.Control.WndProc#1](~/add/codesnippet/cpp/m-system.windows.forms.c_79_1.cpp)]"
  syntax:
    content: protected virtual void WndProc (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "Windows <xref href=&quot;System.Windows.Forms.Message&quot;> </xref> 프로세스에 있습니다."
  overload: System.Windows.Forms.Control.WndProc*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Windows.Forms.Control.#ctor
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Control()
  nameWithType: Control.Control()
  fullName: System.Windows.Forms.Control.Control()
- uid: System.Windows.Forms.Control.#ctor(System.String)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Control(String)
  nameWithType: Control.Control(String)
  fullName: System.Windows.Forms.Control.Control(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Control(Control,String)
  nameWithType: Control.Control(Control,String)
  fullName: System.Windows.Forms.Control.Control(Control,String)
- uid: System.Windows.Forms.Control
  parent: System.Windows.Forms
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Windows.Forms.Control
- uid: System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Control(String,Int32,Int32,Int32,Int32)
  nameWithType: Control.Control(String,Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.Control.Control(String,Int32,Int32,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Control(Control,String,Int32,Int32,Int32,Int32)
  nameWithType: Control.Control(Control,String,Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.Control.Control(Control,String,Int32,Int32,Int32,Int32)
- uid: System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AccessibilityNotifyClients(AccessibleEvents,Int32)
  nameWithType: Control.AccessibilityNotifyClients(AccessibleEvents,Int32)
  fullName: System.Windows.Forms.Control.AccessibilityNotifyClients(AccessibleEvents,Int32)
- uid: System.Windows.Forms.AccessibleEvents
  parent: System.Windows.Forms
  isExternal: false
  name: AccessibleEvents
  nameWithType: AccessibleEvents
  fullName: System.Windows.Forms.AccessibleEvents
- uid: System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AccessibilityNotifyClients(AccessibleEvents,Int32,Int32)
  nameWithType: Control.AccessibilityNotifyClients(AccessibleEvents,Int32,Int32)
  fullName: System.Windows.Forms.Control.AccessibilityNotifyClients(AccessibleEvents,Int32,Int32)
- uid: System.Windows.Forms.Control.AccessibilityObject
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AccessibilityObject
  nameWithType: Control.AccessibilityObject
  fullName: System.Windows.Forms.Control.AccessibilityObject
- uid: System.Windows.Forms.AccessibleObject
  parent: System.Windows.Forms
  isExternal: false
  name: AccessibleObject
  nameWithType: AccessibleObject
  fullName: System.Windows.Forms.AccessibleObject
- uid: System.Windows.Forms.Control.AccessibleDefaultActionDescription
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AccessibleDefaultActionDescription
  nameWithType: Control.AccessibleDefaultActionDescription
  fullName: System.Windows.Forms.Control.AccessibleDefaultActionDescription
- uid: System.Windows.Forms.Control.AccessibleDescription
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AccessibleDescription
  nameWithType: Control.AccessibleDescription
  fullName: System.Windows.Forms.Control.AccessibleDescription
- uid: System.Windows.Forms.Control.AccessibleName
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AccessibleName
  nameWithType: Control.AccessibleName
  fullName: System.Windows.Forms.Control.AccessibleName
- uid: System.Windows.Forms.Control.AccessibleRole
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AccessibleRole
  nameWithType: Control.AccessibleRole
  fullName: System.Windows.Forms.Control.AccessibleRole
- uid: System.Windows.Forms.AccessibleRole
  parent: System.Windows.Forms
  isExternal: false
  name: AccessibleRole
  nameWithType: AccessibleRole
  fullName: System.Windows.Forms.AccessibleRole
- uid: System.Windows.Forms.Control.AllowDrop
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AllowDrop
  nameWithType: Control.AllowDrop
  fullName: System.Windows.Forms.Control.AllowDrop
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.Control.Anchor
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Anchor
  nameWithType: Control.Anchor
  fullName: System.Windows.Forms.Control.Anchor
- uid: System.Windows.Forms.AnchorStyles
  parent: System.Windows.Forms
  isExternal: false
  name: AnchorStyles
  nameWithType: AnchorStyles
  fullName: System.Windows.Forms.AnchorStyles
- uid: System.Windows.Forms.Control.AutoScrollOffset
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AutoScrollOffset
  nameWithType: Control.AutoScrollOffset
  fullName: System.Windows.Forms.Control.AutoScrollOffset
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Windows.Forms.Control.AutoSize
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AutoSize
  nameWithType: Control.AutoSize
  fullName: System.Windows.Forms.Control.AutoSize
- uid: System.Windows.Forms.Control.AutoSizeChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AutoSizeChanged
  nameWithType: Control.AutoSizeChanged
  fullName: System.Windows.Forms.Control.AutoSizeChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.Control.BackColor
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BackColor
  nameWithType: Control.BackColor
  fullName: System.Windows.Forms.Control.BackColor
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Windows.Forms.Control.BackColorChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BackColorChanged
  nameWithType: Control.BackColorChanged
  fullName: System.Windows.Forms.Control.BackColorChanged
- uid: System.Windows.Forms.Control.BackgroundImage
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BackgroundImage
  nameWithType: Control.BackgroundImage
  fullName: System.Windows.Forms.Control.BackgroundImage
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.Windows.Forms.Control.BackgroundImageChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BackgroundImageChanged
  nameWithType: Control.BackgroundImageChanged
  fullName: System.Windows.Forms.Control.BackgroundImageChanged
- uid: System.Windows.Forms.Control.BackgroundImageLayout
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BackgroundImageLayout
  nameWithType: Control.BackgroundImageLayout
  fullName: System.Windows.Forms.Control.BackgroundImageLayout
- uid: System.Windows.Forms.ImageLayout
  parent: System.Windows.Forms
  isExternal: false
  name: ImageLayout
  nameWithType: ImageLayout
  fullName: System.Windows.Forms.ImageLayout
- uid: System.Windows.Forms.Control.BackgroundImageLayoutChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BackgroundImageLayoutChanged
  nameWithType: Control.BackgroundImageLayoutChanged
  fullName: System.Windows.Forms.Control.BackgroundImageLayoutChanged
- uid: System.Windows.Forms.Control.BeginInvoke(System.Delegate)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BeginInvoke(Delegate)
  nameWithType: Control.BeginInvoke(Delegate)
  fullName: System.Windows.Forms.Control.BeginInvoke(Delegate)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BeginInvoke(Delegate,Object[])
  nameWithType: Control.BeginInvoke(Delegate,Object[])
  fullName: System.Windows.Forms.Control.BeginInvoke(Delegate,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.Control.BindingContext
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BindingContext
  nameWithType: Control.BindingContext
  fullName: System.Windows.Forms.Control.BindingContext
- uid: System.Windows.Forms.BindingContext
  parent: System.Windows.Forms
  isExternal: false
  name: BindingContext
  nameWithType: BindingContext
  fullName: System.Windows.Forms.BindingContext
- uid: System.Windows.Forms.Control.BindingContextChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BindingContextChanged
  nameWithType: Control.BindingContextChanged
  fullName: System.Windows.Forms.Control.BindingContextChanged
- uid: System.Windows.Forms.Control.Bottom
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Bottom
  nameWithType: Control.Bottom
  fullName: System.Windows.Forms.Control.Bottom
- uid: System.Windows.Forms.Control.Bounds
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Bounds
  nameWithType: Control.Bounds
  fullName: System.Windows.Forms.Control.Bounds
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.Control.BringToFront
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BringToFront()
  nameWithType: Control.BringToFront()
  fullName: System.Windows.Forms.Control.BringToFront()
- uid: System.Windows.Forms.Control.CanEnableIme
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CanEnableIme
  nameWithType: Control.CanEnableIme
  fullName: System.Windows.Forms.Control.CanEnableIme
- uid: System.Windows.Forms.Control.CanFocus
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CanFocus
  nameWithType: Control.CanFocus
  fullName: System.Windows.Forms.Control.CanFocus
- uid: System.Windows.Forms.Control.CanRaiseEvents
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CanRaiseEvents
  nameWithType: Control.CanRaiseEvents
  fullName: System.Windows.Forms.Control.CanRaiseEvents
- uid: System.Windows.Forms.Control.CanSelect
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CanSelect
  nameWithType: Control.CanSelect
  fullName: System.Windows.Forms.Control.CanSelect
- uid: System.Windows.Forms.Control.Capture
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Capture
  nameWithType: Control.Capture
  fullName: System.Windows.Forms.Control.Capture
- uid: System.Windows.Forms.Control.CausesValidation
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CausesValidation
  nameWithType: Control.CausesValidation
  fullName: System.Windows.Forms.Control.CausesValidation
- uid: System.Windows.Forms.Control.CausesValidationChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CausesValidationChanged
  nameWithType: Control.CausesValidationChanged
  fullName: System.Windows.Forms.Control.CausesValidationChanged
- uid: System.Windows.Forms.Control.ChangeUICues
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ChangeUICues
  nameWithType: Control.ChangeUICues
  fullName: System.Windows.Forms.Control.ChangeUICues
- uid: System.Windows.Forms.UICuesEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: UICuesEventHandler
  nameWithType: UICuesEventHandler
  fullName: System.Windows.Forms.UICuesEventHandler
- uid: System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CheckForIllegalCrossThreadCalls
  nameWithType: Control.CheckForIllegalCrossThreadCalls
  fullName: System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls
- uid: System.Windows.Forms.Control.Click
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Click
  nameWithType: Control.Click
  fullName: System.Windows.Forms.Control.Click
- uid: System.Windows.Forms.Control.ClientRectangle
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ClientRectangle
  nameWithType: Control.ClientRectangle
  fullName: System.Windows.Forms.Control.ClientRectangle
- uid: System.Windows.Forms.Control.ClientSize
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ClientSize
  nameWithType: Control.ClientSize
  fullName: System.Windows.Forms.Control.ClientSize
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Windows.Forms.Control.ClientSizeChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ClientSizeChanged
  nameWithType: Control.ClientSizeChanged
  fullName: System.Windows.Forms.Control.ClientSizeChanged
- uid: System.Windows.Forms.Control.CompanyName
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CompanyName
  nameWithType: Control.CompanyName
  fullName: System.Windows.Forms.Control.CompanyName
- uid: System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Contains(Control)
  nameWithType: Control.Contains(Control)
  fullName: System.Windows.Forms.Control.Contains(Control)
- uid: System.Windows.Forms.Control.ContainsFocus
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ContainsFocus
  nameWithType: Control.ContainsFocus
  fullName: System.Windows.Forms.Control.ContainsFocus
- uid: System.Windows.Forms.Control.ContextMenu
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ContextMenu
  nameWithType: Control.ContextMenu
  fullName: System.Windows.Forms.Control.ContextMenu
- uid: System.Windows.Forms.ContextMenu
  parent: System.Windows.Forms
  isExternal: false
  name: ContextMenu
  nameWithType: ContextMenu
  fullName: System.Windows.Forms.ContextMenu
- uid: System.Windows.Forms.Control.ContextMenuChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ContextMenuChanged
  nameWithType: Control.ContextMenuChanged
  fullName: System.Windows.Forms.Control.ContextMenuChanged
- uid: System.Windows.Forms.Control.ContextMenuStrip
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ContextMenuStrip
  nameWithType: Control.ContextMenuStrip
  fullName: System.Windows.Forms.Control.ContextMenuStrip
- uid: System.Windows.Forms.ContextMenuStrip
  parent: System.Windows.Forms
  isExternal: false
  name: ContextMenuStrip
  nameWithType: ContextMenuStrip
  fullName: System.Windows.Forms.ContextMenuStrip
- uid: System.Windows.Forms.Control.ContextMenuStripChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ContextMenuStripChanged
  nameWithType: Control.ContextMenuStripChanged
  fullName: System.Windows.Forms.Control.ContextMenuStripChanged
- uid: System.Windows.Forms.Control.ControlAdded
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ControlAdded
  nameWithType: Control.ControlAdded
  fullName: System.Windows.Forms.Control.ControlAdded
- uid: System.Windows.Forms.ControlEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: ControlEventHandler
  nameWithType: ControlEventHandler
  fullName: System.Windows.Forms.ControlEventHandler
- uid: System.Windows.Forms.Control.ControlRemoved
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ControlRemoved
  nameWithType: Control.ControlRemoved
  fullName: System.Windows.Forms.Control.ControlRemoved
- uid: System.Windows.Forms.Control.Controls
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Controls
  nameWithType: Control.Controls
  fullName: System.Windows.Forms.Control.Controls
- uid: System.Windows.Forms.Control.ControlCollection
  parent: System.Windows.Forms
  isExternal: false
  name: Control+ControlCollection
  nameWithType: Control+ControlCollection
  fullName: System.Windows.Forms.Control+ControlCollection
- uid: System.Windows.Forms.Control.CreateAccessibilityInstance
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CreateAccessibilityInstance()
  nameWithType: Control.CreateAccessibilityInstance()
  fullName: System.Windows.Forms.Control.CreateAccessibilityInstance()
- uid: System.Windows.Forms.Control.CreateControl
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CreateControl()
  nameWithType: Control.CreateControl()
  fullName: System.Windows.Forms.Control.CreateControl()
- uid: System.Windows.Forms.Control.CreateControlsInstance
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CreateControlsInstance()
  nameWithType: Control.CreateControlsInstance()
  fullName: System.Windows.Forms.Control.CreateControlsInstance()
- uid: System.Windows.Forms.Control.Created
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Created
  nameWithType: Control.Created
  fullName: System.Windows.Forms.Control.Created
- uid: System.Windows.Forms.Control.CreateGraphics
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CreateGraphics()
  nameWithType: Control.CreateGraphics()
  fullName: System.Windows.Forms.Control.CreateGraphics()
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Windows.Forms.Control.CreateHandle
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CreateHandle()
  nameWithType: Control.CreateHandle()
  fullName: System.Windows.Forms.Control.CreateHandle()
- uid: System.Windows.Forms.Control.CreateParams
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CreateParams
  nameWithType: Control.CreateParams
  fullName: System.Windows.Forms.Control.CreateParams
- uid: System.Windows.Forms.CreateParams
  parent: System.Windows.Forms
  isExternal: false
  name: CreateParams
  nameWithType: CreateParams
  fullName: System.Windows.Forms.CreateParams
- uid: System.Windows.Forms.Control.Cursor
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Cursor
  nameWithType: Control.Cursor
  fullName: System.Windows.Forms.Control.Cursor
- uid: System.Windows.Forms.Cursor
  parent: System.Windows.Forms
  isExternal: false
  name: Cursor
  nameWithType: Cursor
  fullName: System.Windows.Forms.Cursor
- uid: System.Windows.Forms.Control.CursorChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CursorChanged
  nameWithType: Control.CursorChanged
  fullName: System.Windows.Forms.Control.CursorChanged
- uid: System.Windows.Forms.Control.DataBindings
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DataBindings
  nameWithType: Control.DataBindings
  fullName: System.Windows.Forms.Control.DataBindings
- uid: System.Windows.Forms.ControlBindingsCollection
  parent: System.Windows.Forms
  isExternal: false
  name: ControlBindingsCollection
  nameWithType: ControlBindingsCollection
  fullName: System.Windows.Forms.ControlBindingsCollection
- uid: System.Windows.Forms.Control.DefaultBackColor
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultBackColor
  nameWithType: Control.DefaultBackColor
  fullName: System.Windows.Forms.Control.DefaultBackColor
- uid: System.Windows.Forms.Control.DefaultCursor
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultCursor
  nameWithType: Control.DefaultCursor
  fullName: System.Windows.Forms.Control.DefaultCursor
- uid: System.Windows.Forms.Control.DefaultFont
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultFont
  nameWithType: Control.DefaultFont
  fullName: System.Windows.Forms.Control.DefaultFont
- uid: System.Drawing.Font
  parent: System.Drawing
  isExternal: false
  name: Font
  nameWithType: Font
  fullName: System.Drawing.Font
- uid: System.Windows.Forms.Control.DefaultForeColor
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultForeColor
  nameWithType: Control.DefaultForeColor
  fullName: System.Windows.Forms.Control.DefaultForeColor
- uid: System.Windows.Forms.Control.DefaultImeMode
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultImeMode
  nameWithType: Control.DefaultImeMode
  fullName: System.Windows.Forms.Control.DefaultImeMode
- uid: System.Windows.Forms.ImeMode
  parent: System.Windows.Forms
  isExternal: false
  name: ImeMode
  nameWithType: ImeMode
  fullName: System.Windows.Forms.ImeMode
- uid: System.Windows.Forms.Control.DefaultMargin
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultMargin
  nameWithType: Control.DefaultMargin
  fullName: System.Windows.Forms.Control.DefaultMargin
- uid: System.Windows.Forms.Padding
  parent: System.Windows.Forms
  isExternal: false
  name: Padding
  nameWithType: Padding
  fullName: System.Windows.Forms.Padding
- uid: System.Windows.Forms.Control.DefaultMaximumSize
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultMaximumSize
  nameWithType: Control.DefaultMaximumSize
  fullName: System.Windows.Forms.Control.DefaultMaximumSize
- uid: System.Windows.Forms.Control.DefaultMinimumSize
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultMinimumSize
  nameWithType: Control.DefaultMinimumSize
  fullName: System.Windows.Forms.Control.DefaultMinimumSize
- uid: System.Windows.Forms.Control.DefaultPadding
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultPadding
  nameWithType: Control.DefaultPadding
  fullName: System.Windows.Forms.Control.DefaultPadding
- uid: System.Windows.Forms.Control.DefaultSize
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultSize
  nameWithType: Control.DefaultSize
  fullName: System.Windows.Forms.Control.DefaultSize
- uid: System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefWndProc(Message)
  nameWithType: Control.DefWndProc(Message)
  fullName: System.Windows.Forms.Control.DefWndProc(Message)
- uid: System.Windows.Forms.Message
  parent: System.Windows.Forms
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Windows.Forms.Message
- uid: System.Windows.Forms.Control.DestroyHandle
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DestroyHandle()
  nameWithType: Control.DestroyHandle()
  fullName: System.Windows.Forms.Control.DestroyHandle()
- uid: System.Windows.Forms.Control.DisplayRectangle
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DisplayRectangle
  nameWithType: Control.DisplayRectangle
  fullName: System.Windows.Forms.Control.DisplayRectangle
- uid: System.Windows.Forms.Control.Dispose(System.Boolean)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Control.Dispose(Boolean)
  fullName: System.Windows.Forms.Control.Dispose(Boolean)
- uid: System.Windows.Forms.Control.Disposing
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Disposing
  nameWithType: Control.Disposing
  fullName: System.Windows.Forms.Control.Disposing
- uid: System.Windows.Forms.Control.Dock
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Dock
  nameWithType: Control.Dock
  fullName: System.Windows.Forms.Control.Dock
- uid: System.Windows.Forms.DockStyle
  parent: System.Windows.Forms
  isExternal: false
  name: DockStyle
  nameWithType: DockStyle
  fullName: System.Windows.Forms.DockStyle
- uid: System.Windows.Forms.Control.DockChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DockChanged
  nameWithType: Control.DockChanged
  fullName: System.Windows.Forms.Control.DockChanged
- uid: System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DoDragDrop(Object,DragDropEffects)
  nameWithType: Control.DoDragDrop(Object,DragDropEffects)
  fullName: System.Windows.Forms.Control.DoDragDrop(Object,DragDropEffects)
- uid: System.Windows.Forms.DragDropEffects
  parent: System.Windows.Forms
  isExternal: false
  name: DragDropEffects
  nameWithType: DragDropEffects
  fullName: System.Windows.Forms.DragDropEffects
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.Control.DoubleBuffered
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DoubleBuffered
  nameWithType: Control.DoubleBuffered
  fullName: System.Windows.Forms.Control.DoubleBuffered
- uid: System.Windows.Forms.Control.DoubleClick
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DoubleClick
  nameWithType: Control.DoubleClick
  fullName: System.Windows.Forms.Control.DoubleClick
- uid: System.Windows.Forms.Control.DragDrop
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DragDrop
  nameWithType: Control.DragDrop
  fullName: System.Windows.Forms.Control.DragDrop
- uid: System.Windows.Forms.DragEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DragEventHandler
  nameWithType: DragEventHandler
  fullName: System.Windows.Forms.DragEventHandler
- uid: System.Windows.Forms.Control.DragEnter
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DragEnter
  nameWithType: Control.DragEnter
  fullName: System.Windows.Forms.Control.DragEnter
- uid: System.Windows.Forms.Control.DragLeave
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DragLeave
  nameWithType: Control.DragLeave
  fullName: System.Windows.Forms.Control.DragLeave
- uid: System.Windows.Forms.Control.DragOver
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DragOver
  nameWithType: Control.DragOver
  fullName: System.Windows.Forms.Control.DragOver
- uid: System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DrawToBitmap(Bitmap,Rectangle)
  nameWithType: Control.DrawToBitmap(Bitmap,Rectangle)
  fullName: System.Windows.Forms.Control.DrawToBitmap(Bitmap,Rectangle)
- uid: System.Drawing.Bitmap
  parent: System.Drawing
  isExternal: false
  name: Bitmap
  nameWithType: Bitmap
  fullName: System.Drawing.Bitmap
- uid: System.Windows.Forms.Control.Enabled
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Enabled
  nameWithType: Control.Enabled
  fullName: System.Windows.Forms.Control.Enabled
- uid: System.Windows.Forms.Control.EnabledChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: EnabledChanged
  nameWithType: Control.EnabledChanged
  fullName: System.Windows.Forms.Control.EnabledChanged
- uid: System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: EndInvoke(IAsyncResult)
  nameWithType: Control.EndInvoke(IAsyncResult)
  fullName: System.Windows.Forms.Control.EndInvoke(IAsyncResult)
- uid: System.Windows.Forms.Control.Enter
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Enter
  nameWithType: Control.Enter
  fullName: System.Windows.Forms.Control.Enter
- uid: System.Windows.Forms.Control.FindForm
  parent: System.Windows.Forms.Control
  isExternal: false
  name: FindForm()
  nameWithType: Control.FindForm()
  fullName: System.Windows.Forms.Control.FindForm()
- uid: System.Windows.Forms.Form
  parent: System.Windows.Forms
  isExternal: false
  name: Form
  nameWithType: Form
  fullName: System.Windows.Forms.Form
- uid: System.Windows.Forms.Control.Focus
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Focus()
  nameWithType: Control.Focus()
  fullName: System.Windows.Forms.Control.Focus()
- uid: System.Windows.Forms.Control.Focused
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Focused
  nameWithType: Control.Focused
  fullName: System.Windows.Forms.Control.Focused
- uid: System.Windows.Forms.Control.Font
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Font
  nameWithType: Control.Font
  fullName: System.Windows.Forms.Control.Font
- uid: System.Windows.Forms.Control.FontChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: FontChanged
  nameWithType: Control.FontChanged
  fullName: System.Windows.Forms.Control.FontChanged
- uid: System.Windows.Forms.Control.FontHeight
  parent: System.Windows.Forms.Control
  isExternal: false
  name: FontHeight
  nameWithType: Control.FontHeight
  fullName: System.Windows.Forms.Control.FontHeight
- uid: System.Windows.Forms.Control.ForeColor
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ForeColor
  nameWithType: Control.ForeColor
  fullName: System.Windows.Forms.Control.ForeColor
- uid: System.Windows.Forms.Control.ForeColorChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ForeColorChanged
  nameWithType: Control.ForeColorChanged
  fullName: System.Windows.Forms.Control.ForeColorChanged
- uid: System.Windows.Forms.Control.FromChildHandle(System.IntPtr)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: FromChildHandle(IntPtr)
  nameWithType: Control.FromChildHandle(IntPtr)
  fullName: System.Windows.Forms.Control.FromChildHandle(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Forms.Control.FromHandle(System.IntPtr)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: FromHandle(IntPtr)
  nameWithType: Control.FromHandle(IntPtr)
  fullName: System.Windows.Forms.Control.FromHandle(IntPtr)
- uid: System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetAccessibilityObjectById(Int32)
  nameWithType: Control.GetAccessibilityObjectById(Int32)
  fullName: System.Windows.Forms.Control.GetAccessibilityObjectById(Int32)
- uid: System.Windows.Forms.Control.GetAutoSizeMode
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetAutoSizeMode()
  nameWithType: Control.GetAutoSizeMode()
  fullName: System.Windows.Forms.Control.GetAutoSizeMode()
- uid: System.Windows.Forms.AutoSizeMode
  parent: System.Windows.Forms
  isExternal: false
  name: AutoSizeMode
  nameWithType: AutoSizeMode
  fullName: System.Windows.Forms.AutoSizeMode
- uid: System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetChildAtPoint(Point)
  nameWithType: Control.GetChildAtPoint(Point)
  fullName: System.Windows.Forms.Control.GetChildAtPoint(Point)
- uid: System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetChildAtPoint(Point,GetChildAtPointSkip)
  nameWithType: Control.GetChildAtPoint(Point,GetChildAtPointSkip)
  fullName: System.Windows.Forms.Control.GetChildAtPoint(Point,GetChildAtPointSkip)
- uid: System.Windows.Forms.GetChildAtPointSkip
  parent: System.Windows.Forms
  isExternal: false
  name: GetChildAtPointSkip
  nameWithType: GetChildAtPointSkip
  fullName: System.Windows.Forms.GetChildAtPointSkip
- uid: System.Windows.Forms.Control.GetContainerControl
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetContainerControl()
  nameWithType: Control.GetContainerControl()
  fullName: System.Windows.Forms.Control.GetContainerControl()
- uid: System.Windows.Forms.IContainerControl
  parent: System.Windows.Forms
  isExternal: false
  name: IContainerControl
  nameWithType: IContainerControl
  fullName: System.Windows.Forms.IContainerControl
- uid: System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetNextControl(Control,Boolean)
  nameWithType: Control.GetNextControl(Control,Boolean)
  fullName: System.Windows.Forms.Control.GetNextControl(Control,Boolean)
- uid: System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetPreferredSize(Size)
  nameWithType: Control.GetPreferredSize(Size)
  fullName: System.Windows.Forms.Control.GetPreferredSize(Size)
- uid: System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  nameWithType: Control.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.Control.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Windows.Forms.BoundsSpecified
  parent: System.Windows.Forms
  isExternal: false
  name: BoundsSpecified
  nameWithType: BoundsSpecified
  fullName: System.Windows.Forms.BoundsSpecified
- uid: System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetStyle(ControlStyles)
  nameWithType: Control.GetStyle(ControlStyles)
  fullName: System.Windows.Forms.Control.GetStyle(ControlStyles)
- uid: System.Windows.Forms.ControlStyles
  parent: System.Windows.Forms
  isExternal: false
  name: ControlStyles
  nameWithType: ControlStyles
  fullName: System.Windows.Forms.ControlStyles
- uid: System.Windows.Forms.Control.GetTopLevel
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetTopLevel()
  nameWithType: Control.GetTopLevel()
  fullName: System.Windows.Forms.Control.GetTopLevel()
- uid: System.Windows.Forms.Control.GiveFeedback
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GiveFeedback
  nameWithType: Control.GiveFeedback
  fullName: System.Windows.Forms.Control.GiveFeedback
- uid: System.Windows.Forms.GiveFeedbackEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: GiveFeedbackEventHandler
  nameWithType: GiveFeedbackEventHandler
  fullName: System.Windows.Forms.GiveFeedbackEventHandler
- uid: System.Windows.Forms.Control.GotFocus
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GotFocus
  nameWithType: Control.GotFocus
  fullName: System.Windows.Forms.Control.GotFocus
- uid: System.Windows.Forms.Control.Handle
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Handle
  nameWithType: Control.Handle
  fullName: System.Windows.Forms.Control.Handle
- uid: System.Windows.Forms.Control.HandleCreated
  parent: System.Windows.Forms.Control
  isExternal: false
  name: HandleCreated
  nameWithType: Control.HandleCreated
  fullName: System.Windows.Forms.Control.HandleCreated
- uid: System.Windows.Forms.Control.HandleDestroyed
  parent: System.Windows.Forms.Control
  isExternal: false
  name: HandleDestroyed
  nameWithType: Control.HandleDestroyed
  fullName: System.Windows.Forms.Control.HandleDestroyed
- uid: System.Windows.Forms.Control.HasChildren
  parent: System.Windows.Forms.Control
  isExternal: false
  name: HasChildren
  nameWithType: Control.HasChildren
  fullName: System.Windows.Forms.Control.HasChildren
- uid: System.Windows.Forms.Control.Height
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Height
  nameWithType: Control.Height
  fullName: System.Windows.Forms.Control.Height
- uid: System.Windows.Forms.Control.HelpRequested
  parent: System.Windows.Forms.Control
  isExternal: false
  name: HelpRequested
  nameWithType: Control.HelpRequested
  fullName: System.Windows.Forms.Control.HelpRequested
- uid: System.Windows.Forms.HelpEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: HelpEventHandler
  nameWithType: HelpEventHandler
  fullName: System.Windows.Forms.HelpEventHandler
- uid: System.Windows.Forms.Control.Hide
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Hide()
  nameWithType: Control.Hide()
  fullName: System.Windows.Forms.Control.Hide()
- uid: System.Windows.Forms.Control.ImeMode
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ImeMode
  nameWithType: Control.ImeMode
  fullName: System.Windows.Forms.Control.ImeMode
- uid: System.Windows.Forms.Control.ImeModeBase
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ImeModeBase
  nameWithType: Control.ImeModeBase
  fullName: System.Windows.Forms.Control.ImeModeBase
- uid: System.Windows.Forms.Control.ImeModeChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ImeModeChanged
  nameWithType: Control.ImeModeChanged
  fullName: System.Windows.Forms.Control.ImeModeChanged
- uid: System.Windows.Forms.Control.InitLayout
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InitLayout()
  nameWithType: Control.InitLayout()
  fullName: System.Windows.Forms.Control.InitLayout()
- uid: System.Windows.Forms.Control.Invalidate
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Invalidate()
  nameWithType: Control.Invalidate()
  fullName: System.Windows.Forms.Control.Invalidate()
- uid: System.Windows.Forms.Control.Invalidate(System.Boolean)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Invalidate(Boolean)
  nameWithType: Control.Invalidate(Boolean)
  fullName: System.Windows.Forms.Control.Invalidate(Boolean)
- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Invalidate(Rectangle)
  nameWithType: Control.Invalidate(Rectangle)
  fullName: System.Windows.Forms.Control.Invalidate(Rectangle)
- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Region)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Invalidate(Region)
  nameWithType: Control.Invalidate(Region)
  fullName: System.Windows.Forms.Control.Invalidate(Region)
- uid: System.Drawing.Region
  parent: System.Drawing
  isExternal: false
  name: Region
  nameWithType: Region
  fullName: System.Drawing.Region
- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Invalidate(Rectangle,Boolean)
  nameWithType: Control.Invalidate(Rectangle,Boolean)
  fullName: System.Windows.Forms.Control.Invalidate(Rectangle,Boolean)
- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Invalidate(Region,Boolean)
  nameWithType: Control.Invalidate(Region,Boolean)
  fullName: System.Windows.Forms.Control.Invalidate(Region,Boolean)
- uid: System.Windows.Forms.Control.Invalidated
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Invalidated
  nameWithType: Control.Invalidated
  fullName: System.Windows.Forms.Control.Invalidated
- uid: System.Windows.Forms.InvalidateEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: InvalidateEventHandler
  nameWithType: InvalidateEventHandler
  fullName: System.Windows.Forms.InvalidateEventHandler
- uid: System.Windows.Forms.Control.Invoke(System.Delegate)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Invoke(Delegate)
  nameWithType: Control.Invoke(Delegate)
  fullName: System.Windows.Forms.Control.Invoke(Delegate)
- uid: System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Invoke(Delegate,Object[])
  nameWithType: Control.Invoke(Delegate,Object[])
  fullName: System.Windows.Forms.Control.Invoke(Delegate,Object[])
- uid: System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InvokeGotFocus(Control,EventArgs)
  nameWithType: Control.InvokeGotFocus(Control,EventArgs)
  fullName: System.Windows.Forms.Control.InvokeGotFocus(Control,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InvokeLostFocus(Control,EventArgs)
  nameWithType: Control.InvokeLostFocus(Control,EventArgs)
  fullName: System.Windows.Forms.Control.InvokeLostFocus(Control,EventArgs)
- uid: System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InvokeOnClick(Control,EventArgs)
  nameWithType: Control.InvokeOnClick(Control,EventArgs)
  fullName: System.Windows.Forms.Control.InvokeOnClick(Control,EventArgs)
- uid: System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InvokePaint(Control,PaintEventArgs)
  nameWithType: Control.InvokePaint(Control,PaintEventArgs)
  fullName: System.Windows.Forms.Control.InvokePaint(Control,PaintEventArgs)
- uid: System.Windows.Forms.PaintEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: PaintEventArgs
  nameWithType: PaintEventArgs
  fullName: System.Windows.Forms.PaintEventArgs
- uid: System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InvokePaintBackground(Control,PaintEventArgs)
  nameWithType: Control.InvokePaintBackground(Control,PaintEventArgs)
  fullName: System.Windows.Forms.Control.InvokePaintBackground(Control,PaintEventArgs)
- uid: System.Windows.Forms.Control.InvokeRequired
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InvokeRequired
  nameWithType: Control.InvokeRequired
  fullName: System.Windows.Forms.Control.InvokeRequired
- uid: System.Windows.Forms.Control.IsAccessible
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsAccessible
  nameWithType: Control.IsAccessible
  fullName: System.Windows.Forms.Control.IsAccessible
- uid: System.Windows.Forms.Control.IsDisposed
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsDisposed
  nameWithType: Control.IsDisposed
  fullName: System.Windows.Forms.Control.IsDisposed
- uid: System.Windows.Forms.Control.IsHandleCreated
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsHandleCreated
  nameWithType: Control.IsHandleCreated
  fullName: System.Windows.Forms.Control.IsHandleCreated
- uid: System.Windows.Forms.Control.IsInputChar(System.Char)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsInputChar(Char)
  nameWithType: Control.IsInputChar(Char)
  fullName: System.Windows.Forms.Control.IsInputChar(Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsInputKey(Keys)
  nameWithType: Control.IsInputKey(Keys)
  fullName: System.Windows.Forms.Control.IsInputKey(Keys)
- uid: System.Windows.Forms.Keys
  parent: System.Windows.Forms
  isExternal: false
  name: Keys
  nameWithType: Keys
  fullName: System.Windows.Forms.Keys
- uid: System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsKeyLocked(Keys)
  nameWithType: Control.IsKeyLocked(Keys)
  fullName: System.Windows.Forms.Control.IsKeyLocked(Keys)
- uid: System.Windows.Forms.Control.IsMirrored
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsMirrored
  nameWithType: Control.IsMirrored
  fullName: System.Windows.Forms.Control.IsMirrored
- uid: System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsMnemonic(Char,String)
  nameWithType: Control.IsMnemonic(Char,String)
  fullName: System.Windows.Forms.Control.IsMnemonic(Char,String)
- uid: System.Windows.Forms.Control.KeyDown
  parent: System.Windows.Forms.Control
  isExternal: false
  name: KeyDown
  nameWithType: Control.KeyDown
  fullName: System.Windows.Forms.Control.KeyDown
- uid: System.Windows.Forms.KeyEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: KeyEventHandler
  nameWithType: KeyEventHandler
  fullName: System.Windows.Forms.KeyEventHandler
- uid: System.Windows.Forms.Control.KeyPress
  parent: System.Windows.Forms.Control
  isExternal: false
  name: KeyPress
  nameWithType: Control.KeyPress
  fullName: System.Windows.Forms.Control.KeyPress
- uid: System.Windows.Forms.KeyPressEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: KeyPressEventHandler
  nameWithType: KeyPressEventHandler
  fullName: System.Windows.Forms.KeyPressEventHandler
- uid: System.Windows.Forms.Control.KeyUp
  parent: System.Windows.Forms.Control
  isExternal: false
  name: KeyUp
  nameWithType: Control.KeyUp
  fullName: System.Windows.Forms.Control.KeyUp
- uid: System.Windows.Forms.Control.Layout
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Layout
  nameWithType: Control.Layout
  fullName: System.Windows.Forms.Control.Layout
- uid: System.Windows.Forms.LayoutEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: LayoutEventHandler
  nameWithType: LayoutEventHandler
  fullName: System.Windows.Forms.LayoutEventHandler
- uid: System.Windows.Forms.Control.LayoutEngine
  parent: System.Windows.Forms.Control
  isExternal: false
  name: LayoutEngine
  nameWithType: Control.LayoutEngine
  fullName: System.Windows.Forms.Control.LayoutEngine
- uid: System.Windows.Forms.Layout.LayoutEngine
  parent: System.Windows.Forms.Layout
  isExternal: false
  name: LayoutEngine
  nameWithType: LayoutEngine
  fullName: System.Windows.Forms.Layout.LayoutEngine
- uid: System.Windows.Forms.Control.Leave
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Leave
  nameWithType: Control.Leave
  fullName: System.Windows.Forms.Control.Leave
- uid: System.Windows.Forms.Control.Left
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Left
  nameWithType: Control.Left
  fullName: System.Windows.Forms.Control.Left
- uid: System.Windows.Forms.Control.Location
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Location
  nameWithType: Control.Location
  fullName: System.Windows.Forms.Control.Location
- uid: System.Windows.Forms.Control.LocationChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: LocationChanged
  nameWithType: Control.LocationChanged
  fullName: System.Windows.Forms.Control.LocationChanged
- uid: System.Windows.Forms.Control.LostFocus
  parent: System.Windows.Forms.Control
  isExternal: false
  name: LostFocus
  nameWithType: Control.LostFocus
  fullName: System.Windows.Forms.Control.LostFocus
- uid: System.Windows.Forms.Control.Margin
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Margin
  nameWithType: Control.Margin
  fullName: System.Windows.Forms.Control.Margin
- uid: System.Windows.Forms.Control.MarginChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MarginChanged
  nameWithType: Control.MarginChanged
  fullName: System.Windows.Forms.Control.MarginChanged
- uid: System.Windows.Forms.Control.MaximumSize
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MaximumSize
  nameWithType: Control.MaximumSize
  fullName: System.Windows.Forms.Control.MaximumSize
- uid: System.Windows.Forms.Control.MinimumSize
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MinimumSize
  nameWithType: Control.MinimumSize
  fullName: System.Windows.Forms.Control.MinimumSize
- uid: System.Windows.Forms.Control.ModifierKeys
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ModifierKeys
  nameWithType: Control.ModifierKeys
  fullName: System.Windows.Forms.Control.ModifierKeys
- uid: System.Windows.Forms.Control.MouseButtons
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MouseButtons
  nameWithType: Control.MouseButtons
  fullName: System.Windows.Forms.Control.MouseButtons
- uid: System.Windows.Forms.MouseButtons
  parent: System.Windows.Forms
  isExternal: false
  name: MouseButtons
  nameWithType: MouseButtons
  fullName: System.Windows.Forms.MouseButtons
- uid: System.Windows.Forms.Control.MouseCaptureChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MouseCaptureChanged
  nameWithType: Control.MouseCaptureChanged
  fullName: System.Windows.Forms.Control.MouseCaptureChanged
- uid: System.Windows.Forms.Control.MouseClick
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MouseClick
  nameWithType: Control.MouseClick
  fullName: System.Windows.Forms.Control.MouseClick
- uid: System.Windows.Forms.MouseEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: MouseEventHandler
  nameWithType: MouseEventHandler
  fullName: System.Windows.Forms.MouseEventHandler
- uid: System.Windows.Forms.Control.MouseDoubleClick
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MouseDoubleClick
  nameWithType: Control.MouseDoubleClick
  fullName: System.Windows.Forms.Control.MouseDoubleClick
- uid: System.Windows.Forms.Control.MouseDown
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MouseDown
  nameWithType: Control.MouseDown
  fullName: System.Windows.Forms.Control.MouseDown
- uid: System.Windows.Forms.Control.MouseEnter
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MouseEnter
  nameWithType: Control.MouseEnter
  fullName: System.Windows.Forms.Control.MouseEnter
- uid: System.Windows.Forms.Control.MouseHover
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MouseHover
  nameWithType: Control.MouseHover
  fullName: System.Windows.Forms.Control.MouseHover
- uid: System.Windows.Forms.Control.MouseLeave
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MouseLeave
  nameWithType: Control.MouseLeave
  fullName: System.Windows.Forms.Control.MouseLeave
- uid: System.Windows.Forms.Control.MouseMove
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MouseMove
  nameWithType: Control.MouseMove
  fullName: System.Windows.Forms.Control.MouseMove
- uid: System.Windows.Forms.Control.MousePosition
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MousePosition
  nameWithType: Control.MousePosition
  fullName: System.Windows.Forms.Control.MousePosition
- uid: System.Windows.Forms.Control.MouseUp
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MouseUp
  nameWithType: Control.MouseUp
  fullName: System.Windows.Forms.Control.MouseUp
- uid: System.Windows.Forms.Control.MouseWheel
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MouseWheel
  nameWithType: Control.MouseWheel
  fullName: System.Windows.Forms.Control.MouseWheel
- uid: System.Windows.Forms.Control.Move
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Move
  nameWithType: Control.Move
  fullName: System.Windows.Forms.Control.Move
- uid: System.Windows.Forms.Control.Name
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Name
  nameWithType: Control.Name
  fullName: System.Windows.Forms.Control.Name
- uid: System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: NotifyInvalidate(Rectangle)
  nameWithType: Control.NotifyInvalidate(Rectangle)
  fullName: System.Windows.Forms.Control.NotifyInvalidate(Rectangle)
- uid: System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnAutoSizeChanged(EventArgs)
  nameWithType: Control.OnAutoSizeChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnAutoSizeChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnBackColorChanged(EventArgs)
  nameWithType: Control.OnBackColorChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnBackColorChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnBackgroundImageChanged(EventArgs)
  nameWithType: Control.OnBackgroundImageChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnBackgroundImageChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnBackgroundImageLayoutChanged(EventArgs)
  nameWithType: Control.OnBackgroundImageLayoutChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnBindingContextChanged(EventArgs)
  nameWithType: Control.OnBindingContextChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnBindingContextChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnCausesValidationChanged(EventArgs)
  nameWithType: Control.OnCausesValidationChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnCausesValidationChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnChangeUICues(UICuesEventArgs)
  nameWithType: Control.OnChangeUICues(UICuesEventArgs)
  fullName: System.Windows.Forms.Control.OnChangeUICues(UICuesEventArgs)
- uid: System.Windows.Forms.UICuesEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: UICuesEventArgs
  nameWithType: UICuesEventArgs
  fullName: System.Windows.Forms.UICuesEventArgs
- uid: System.Windows.Forms.Control.OnClick(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnClick(EventArgs)
  nameWithType: Control.OnClick(EventArgs)
  fullName: System.Windows.Forms.Control.OnClick(EventArgs)
- uid: System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnClientSizeChanged(EventArgs)
  nameWithType: Control.OnClientSizeChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnClientSizeChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnContextMenuChanged(EventArgs)
  nameWithType: Control.OnContextMenuChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnContextMenuChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnContextMenuStripChanged(EventArgs)
  nameWithType: Control.OnContextMenuStripChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnContextMenuStripChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnControlAdded(ControlEventArgs)
  nameWithType: Control.OnControlAdded(ControlEventArgs)
  fullName: System.Windows.Forms.Control.OnControlAdded(ControlEventArgs)
- uid: System.Windows.Forms.ControlEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: ControlEventArgs
  nameWithType: ControlEventArgs
  fullName: System.Windows.Forms.ControlEventArgs
- uid: System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnControlRemoved(ControlEventArgs)
  nameWithType: Control.OnControlRemoved(ControlEventArgs)
  fullName: System.Windows.Forms.Control.OnControlRemoved(ControlEventArgs)
- uid: System.Windows.Forms.Control.OnCreateControl
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnCreateControl()
  nameWithType: Control.OnCreateControl()
  fullName: System.Windows.Forms.Control.OnCreateControl()
- uid: System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnCursorChanged(EventArgs)
  nameWithType: Control.OnCursorChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnCursorChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnDockChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnDockChanged(EventArgs)
  nameWithType: Control.OnDockChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnDockChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnDoubleClick(EventArgs)
  nameWithType: Control.OnDoubleClick(EventArgs)
  fullName: System.Windows.Forms.Control.OnDoubleClick(EventArgs)
- uid: System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnDragDrop(DragEventArgs)
  nameWithType: Control.OnDragDrop(DragEventArgs)
  fullName: System.Windows.Forms.Control.OnDragDrop(DragEventArgs)
- uid: System.Windows.Forms.DragEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DragEventArgs
  nameWithType: DragEventArgs
  fullName: System.Windows.Forms.DragEventArgs
- uid: System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnDragEnter(DragEventArgs)
  nameWithType: Control.OnDragEnter(DragEventArgs)
  fullName: System.Windows.Forms.Control.OnDragEnter(DragEventArgs)
- uid: System.Windows.Forms.Control.OnDragLeave(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnDragLeave(EventArgs)
  nameWithType: Control.OnDragLeave(EventArgs)
  fullName: System.Windows.Forms.Control.OnDragLeave(EventArgs)
- uid: System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnDragOver(DragEventArgs)
  nameWithType: Control.OnDragOver(DragEventArgs)
  fullName: System.Windows.Forms.Control.OnDragOver(DragEventArgs)
- uid: System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnEnabledChanged(EventArgs)
  nameWithType: Control.OnEnabledChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnEnabledChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnEnter(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnEnter(EventArgs)
  nameWithType: Control.OnEnter(EventArgs)
  fullName: System.Windows.Forms.Control.OnEnter(EventArgs)
- uid: System.Windows.Forms.Control.OnFontChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnFontChanged(EventArgs)
  nameWithType: Control.OnFontChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnFontChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnForeColorChanged(EventArgs)
  nameWithType: Control.OnForeColorChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnForeColorChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnGiveFeedback(GiveFeedbackEventArgs)
  nameWithType: Control.OnGiveFeedback(GiveFeedbackEventArgs)
  fullName: System.Windows.Forms.Control.OnGiveFeedback(GiveFeedbackEventArgs)
- uid: System.Windows.Forms.GiveFeedbackEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: GiveFeedbackEventArgs
  nameWithType: GiveFeedbackEventArgs
  fullName: System.Windows.Forms.GiveFeedbackEventArgs
- uid: System.Windows.Forms.Control.OnGotFocus(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnGotFocus(EventArgs)
  nameWithType: Control.OnGotFocus(EventArgs)
  fullName: System.Windows.Forms.Control.OnGotFocus(EventArgs)
- uid: System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnHandleCreated(EventArgs)
  nameWithType: Control.OnHandleCreated(EventArgs)
  fullName: System.Windows.Forms.Control.OnHandleCreated(EventArgs)
- uid: System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnHandleDestroyed(EventArgs)
  nameWithType: Control.OnHandleDestroyed(EventArgs)
  fullName: System.Windows.Forms.Control.OnHandleDestroyed(EventArgs)
- uid: System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnHelpRequested(HelpEventArgs)
  nameWithType: Control.OnHelpRequested(HelpEventArgs)
  fullName: System.Windows.Forms.Control.OnHelpRequested(HelpEventArgs)
- uid: System.Windows.Forms.HelpEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: HelpEventArgs
  nameWithType: HelpEventArgs
  fullName: System.Windows.Forms.HelpEventArgs
- uid: System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnImeModeChanged(EventArgs)
  nameWithType: Control.OnImeModeChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnImeModeChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnInvalidated(InvalidateEventArgs)
  nameWithType: Control.OnInvalidated(InvalidateEventArgs)
  fullName: System.Windows.Forms.Control.OnInvalidated(InvalidateEventArgs)
- uid: System.Windows.Forms.InvalidateEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: InvalidateEventArgs
  nameWithType: InvalidateEventArgs
  fullName: System.Windows.Forms.InvalidateEventArgs
- uid: System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnKeyDown(KeyEventArgs)
  nameWithType: Control.OnKeyDown(KeyEventArgs)
  fullName: System.Windows.Forms.Control.OnKeyDown(KeyEventArgs)
- uid: System.Windows.Forms.KeyEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: KeyEventArgs
  nameWithType: KeyEventArgs
  fullName: System.Windows.Forms.KeyEventArgs
- uid: System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnKeyPress(KeyPressEventArgs)
  nameWithType: Control.OnKeyPress(KeyPressEventArgs)
  fullName: System.Windows.Forms.Control.OnKeyPress(KeyPressEventArgs)
- uid: System.Windows.Forms.KeyPressEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: KeyPressEventArgs
  nameWithType: KeyPressEventArgs
  fullName: System.Windows.Forms.KeyPressEventArgs
- uid: System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnKeyUp(KeyEventArgs)
  nameWithType: Control.OnKeyUp(KeyEventArgs)
  fullName: System.Windows.Forms.Control.OnKeyUp(KeyEventArgs)
- uid: System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnLayout(LayoutEventArgs)
  nameWithType: Control.OnLayout(LayoutEventArgs)
  fullName: System.Windows.Forms.Control.OnLayout(LayoutEventArgs)
- uid: System.Windows.Forms.LayoutEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: LayoutEventArgs
  nameWithType: LayoutEventArgs
  fullName: System.Windows.Forms.LayoutEventArgs
- uid: System.Windows.Forms.Control.OnLeave(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnLeave(EventArgs)
  nameWithType: Control.OnLeave(EventArgs)
  fullName: System.Windows.Forms.Control.OnLeave(EventArgs)
- uid: System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnLocationChanged(EventArgs)
  nameWithType: Control.OnLocationChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnLocationChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnLostFocus(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnLostFocus(EventArgs)
  nameWithType: Control.OnLostFocus(EventArgs)
  fullName: System.Windows.Forms.Control.OnLostFocus(EventArgs)
- uid: System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMarginChanged(EventArgs)
  nameWithType: Control.OnMarginChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnMarginChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseCaptureChanged(EventArgs)
  nameWithType: Control.OnMouseCaptureChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnMouseCaptureChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseClick(MouseEventArgs)
  nameWithType: Control.OnMouseClick(MouseEventArgs)
  fullName: System.Windows.Forms.Control.OnMouseClick(MouseEventArgs)
- uid: System.Windows.Forms.MouseEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: MouseEventArgs
  nameWithType: MouseEventArgs
  fullName: System.Windows.Forms.MouseEventArgs
- uid: System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseDoubleClick(MouseEventArgs)
  nameWithType: Control.OnMouseDoubleClick(MouseEventArgs)
  fullName: System.Windows.Forms.Control.OnMouseDoubleClick(MouseEventArgs)
- uid: System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseDown(MouseEventArgs)
  nameWithType: Control.OnMouseDown(MouseEventArgs)
  fullName: System.Windows.Forms.Control.OnMouseDown(MouseEventArgs)
- uid: System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseEnter(EventArgs)
  nameWithType: Control.OnMouseEnter(EventArgs)
  fullName: System.Windows.Forms.Control.OnMouseEnter(EventArgs)
- uid: System.Windows.Forms.Control.OnMouseHover(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseHover(EventArgs)
  nameWithType: Control.OnMouseHover(EventArgs)
  fullName: System.Windows.Forms.Control.OnMouseHover(EventArgs)
- uid: System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseLeave(EventArgs)
  nameWithType: Control.OnMouseLeave(EventArgs)
  fullName: System.Windows.Forms.Control.OnMouseLeave(EventArgs)
- uid: System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseMove(MouseEventArgs)
  nameWithType: Control.OnMouseMove(MouseEventArgs)
  fullName: System.Windows.Forms.Control.OnMouseMove(MouseEventArgs)
- uid: System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseUp(MouseEventArgs)
  nameWithType: Control.OnMouseUp(MouseEventArgs)
  fullName: System.Windows.Forms.Control.OnMouseUp(MouseEventArgs)
- uid: System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseWheel(MouseEventArgs)
  nameWithType: Control.OnMouseWheel(MouseEventArgs)
  fullName: System.Windows.Forms.Control.OnMouseWheel(MouseEventArgs)
- uid: System.Windows.Forms.Control.OnMove(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMove(EventArgs)
  nameWithType: Control.OnMove(EventArgs)
  fullName: System.Windows.Forms.Control.OnMove(EventArgs)
- uid: System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnNotifyMessage(Message)
  nameWithType: Control.OnNotifyMessage(Message)
  fullName: System.Windows.Forms.Control.OnNotifyMessage(Message)
- uid: System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnPaddingChanged(EventArgs)
  nameWithType: Control.OnPaddingChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnPaddingChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnPaint(PaintEventArgs)
  nameWithType: Control.OnPaint(PaintEventArgs)
  fullName: System.Windows.Forms.Control.OnPaint(PaintEventArgs)
- uid: System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnPaintBackground(PaintEventArgs)
  nameWithType: Control.OnPaintBackground(PaintEventArgs)
  fullName: System.Windows.Forms.Control.OnPaintBackground(PaintEventArgs)
- uid: System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentBackColorChanged(EventArgs)
  nameWithType: Control.OnParentBackColorChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentBackColorChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentBackgroundImageChanged(EventArgs)
  nameWithType: Control.OnParentBackgroundImageChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentBackgroundImageChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentBindingContextChanged(EventArgs)
  nameWithType: Control.OnParentBindingContextChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentBindingContextChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnParentChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentChanged(EventArgs)
  nameWithType: Control.OnParentChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentCursorChanged(EventArgs)
  nameWithType: Control.OnParentCursorChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentCursorChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentEnabledChanged(EventArgs)
  nameWithType: Control.OnParentEnabledChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentEnabledChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentFontChanged(EventArgs)
  nameWithType: Control.OnParentFontChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentFontChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentForeColorChanged(EventArgs)
  nameWithType: Control.OnParentForeColorChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentForeColorChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentRightToLeftChanged(EventArgs)
  nameWithType: Control.OnParentRightToLeftChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentRightToLeftChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentVisibleChanged(EventArgs)
  nameWithType: Control.OnParentVisibleChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentVisibleChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnPreviewKeyDown(PreviewKeyDownEventArgs)
  nameWithType: Control.OnPreviewKeyDown(PreviewKeyDownEventArgs)
  fullName: System.Windows.Forms.Control.OnPreviewKeyDown(PreviewKeyDownEventArgs)
- uid: System.Windows.Forms.PreviewKeyDownEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: PreviewKeyDownEventArgs
  nameWithType: PreviewKeyDownEventArgs
  fullName: System.Windows.Forms.PreviewKeyDownEventArgs
- uid: System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnPrint(PaintEventArgs)
  nameWithType: Control.OnPrint(PaintEventArgs)
  fullName: System.Windows.Forms.Control.OnPrint(PaintEventArgs)
- uid: System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnQueryContinueDrag(QueryContinueDragEventArgs)
  nameWithType: Control.OnQueryContinueDrag(QueryContinueDragEventArgs)
  fullName: System.Windows.Forms.Control.OnQueryContinueDrag(QueryContinueDragEventArgs)
- uid: System.Windows.Forms.QueryContinueDragEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: QueryContinueDragEventArgs
  nameWithType: QueryContinueDragEventArgs
  fullName: System.Windows.Forms.QueryContinueDragEventArgs
- uid: System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnRegionChanged(EventArgs)
  nameWithType: Control.OnRegionChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnRegionChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnResize(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnResize(EventArgs)
  nameWithType: Control.OnResize(EventArgs)
  fullName: System.Windows.Forms.Control.OnResize(EventArgs)
- uid: System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnRightToLeftChanged(EventArgs)
  nameWithType: Control.OnRightToLeftChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnRightToLeftChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnSizeChanged(EventArgs)
  nameWithType: Control.OnSizeChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnSizeChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnStyleChanged(EventArgs)
  nameWithType: Control.OnStyleChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnStyleChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnSystemColorsChanged(EventArgs)
  nameWithType: Control.OnSystemColorsChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnSystemColorsChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnTabIndexChanged(EventArgs)
  nameWithType: Control.OnTabIndexChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnTabIndexChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnTabStopChanged(EventArgs)
  nameWithType: Control.OnTabStopChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnTabStopChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnTextChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnTextChanged(EventArgs)
  nameWithType: Control.OnTextChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnTextChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnValidated(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnValidated(EventArgs)
  nameWithType: Control.OnValidated(EventArgs)
  fullName: System.Windows.Forms.Control.OnValidated(EventArgs)
- uid: System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnValidating(CancelEventArgs)
  nameWithType: Control.OnValidating(CancelEventArgs)
  fullName: System.Windows.Forms.Control.OnValidating(CancelEventArgs)
- uid: System.ComponentModel.CancelEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: CancelEventArgs
  nameWithType: CancelEventArgs
  fullName: System.ComponentModel.CancelEventArgs
- uid: System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnVisibleChanged(EventArgs)
  nameWithType: Control.OnVisibleChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnVisibleChanged(EventArgs)
- uid: System.Windows.Forms.Control.Padding
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Padding
  nameWithType: Control.Padding
  fullName: System.Windows.Forms.Control.Padding
- uid: System.Windows.Forms.Control.PaddingChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PaddingChanged
  nameWithType: Control.PaddingChanged
  fullName: System.Windows.Forms.Control.PaddingChanged
- uid: System.Windows.Forms.Control.Paint
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Paint
  nameWithType: Control.Paint
  fullName: System.Windows.Forms.Control.Paint
- uid: System.Windows.Forms.PaintEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: PaintEventHandler
  nameWithType: PaintEventHandler
  fullName: System.Windows.Forms.PaintEventHandler
- uid: System.Windows.Forms.Control.Parent
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Parent
  nameWithType: Control.Parent
  fullName: System.Windows.Forms.Control.Parent
- uid: System.Windows.Forms.Control.ParentChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ParentChanged
  nameWithType: Control.ParentChanged
  fullName: System.Windows.Forms.Control.ParentChanged
- uid: System.Windows.Forms.Control.PerformLayout
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PerformLayout()
  nameWithType: Control.PerformLayout()
  fullName: System.Windows.Forms.Control.PerformLayout()
- uid: System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PerformLayout(Control,String)
  nameWithType: Control.PerformLayout(Control,String)
  fullName: System.Windows.Forms.Control.PerformLayout(Control,String)
- uid: System.Windows.Forms.Control.PointToClient(System.Drawing.Point)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PointToClient(Point)
  nameWithType: Control.PointToClient(Point)
  fullName: System.Windows.Forms.Control.PointToClient(Point)
- uid: System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PointToScreen(Point)
  nameWithType: Control.PointToScreen(Point)
  fullName: System.Windows.Forms.Control.PointToScreen(Point)
- uid: System.Windows.Forms.Control.PreferredSize
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PreferredSize
  nameWithType: Control.PreferredSize
  fullName: System.Windows.Forms.Control.PreferredSize
- uid: System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PreProcessControlMessage(Message)
  nameWithType: Control.PreProcessControlMessage(Message)
  fullName: System.Windows.Forms.Control.PreProcessControlMessage(Message)
- uid: System.Windows.Forms.PreProcessControlState
  parent: System.Windows.Forms
  isExternal: false
  name: PreProcessControlState
  nameWithType: PreProcessControlState
  fullName: System.Windows.Forms.PreProcessControlState
- uid: System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PreProcessMessage(Message)
  nameWithType: Control.PreProcessMessage(Message)
  fullName: System.Windows.Forms.Control.PreProcessMessage(Message)
- uid: System.Windows.Forms.Control.PreviewKeyDown
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PreviewKeyDown
  nameWithType: Control.PreviewKeyDown
  fullName: System.Windows.Forms.Control.PreviewKeyDown
- uid: System.Windows.Forms.PreviewKeyDownEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: PreviewKeyDownEventHandler
  nameWithType: PreviewKeyDownEventHandler
  fullName: System.Windows.Forms.PreviewKeyDownEventHandler
- uid: System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessCmdKey(Message,Keys)
  nameWithType: Control.ProcessCmdKey(Message,Keys)
  fullName: System.Windows.Forms.Control.ProcessCmdKey(Message,Keys)
- uid: System.Windows.Forms.Control.ProcessDialogChar(System.Char)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessDialogChar(Char)
  nameWithType: Control.ProcessDialogChar(Char)
  fullName: System.Windows.Forms.Control.ProcessDialogChar(Char)
- uid: System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessDialogKey(Keys)
  nameWithType: Control.ProcessDialogKey(Keys)
  fullName: System.Windows.Forms.Control.ProcessDialogKey(Keys)
- uid: System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessKeyEventArgs(Message)
  nameWithType: Control.ProcessKeyEventArgs(Message)
  fullName: System.Windows.Forms.Control.ProcessKeyEventArgs(Message)
- uid: System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessKeyMessage(Message)
  nameWithType: Control.ProcessKeyMessage(Message)
  fullName: System.Windows.Forms.Control.ProcessKeyMessage(Message)
- uid: System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessKeyPreview(Message)
  nameWithType: Control.ProcessKeyPreview(Message)
  fullName: System.Windows.Forms.Control.ProcessKeyPreview(Message)
- uid: System.Windows.Forms.Control.ProcessMnemonic(System.Char)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessMnemonic(Char)
  nameWithType: Control.ProcessMnemonic(Char)
  fullName: System.Windows.Forms.Control.ProcessMnemonic(Char)
- uid: System.Windows.Forms.Control.ProductName
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProductName
  nameWithType: Control.ProductName
  fullName: System.Windows.Forms.Control.ProductName
- uid: System.Windows.Forms.Control.ProductVersion
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProductVersion
  nameWithType: Control.ProductVersion
  fullName: System.Windows.Forms.Control.ProductVersion
- uid: System.Windows.Forms.Control.PropagatingImeMode
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PropagatingImeMode
  nameWithType: Control.PropagatingImeMode
  fullName: System.Windows.Forms.Control.PropagatingImeMode
- uid: System.Windows.Forms.Control.QueryAccessibilityHelp
  parent: System.Windows.Forms.Control
  isExternal: false
  name: QueryAccessibilityHelp
  nameWithType: Control.QueryAccessibilityHelp
  fullName: System.Windows.Forms.Control.QueryAccessibilityHelp
- uid: System.Windows.Forms.QueryAccessibilityHelpEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: QueryAccessibilityHelpEventHandler
  nameWithType: QueryAccessibilityHelpEventHandler
  fullName: System.Windows.Forms.QueryAccessibilityHelpEventHandler
- uid: System.Windows.Forms.Control.QueryContinueDrag
  parent: System.Windows.Forms.Control
  isExternal: false
  name: QueryContinueDrag
  nameWithType: Control.QueryContinueDrag
  fullName: System.Windows.Forms.Control.QueryContinueDrag
- uid: System.Windows.Forms.QueryContinueDragEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: QueryContinueDragEventHandler
  nameWithType: QueryContinueDragEventHandler
  fullName: System.Windows.Forms.QueryContinueDragEventHandler
- uid: System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RaiseDragEvent(Object,DragEventArgs)
  nameWithType: Control.RaiseDragEvent(Object,DragEventArgs)
  fullName: System.Windows.Forms.Control.RaiseDragEvent(Object,DragEventArgs)
- uid: System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RaiseKeyEvent(Object,KeyEventArgs)
  nameWithType: Control.RaiseKeyEvent(Object,KeyEventArgs)
  fullName: System.Windows.Forms.Control.RaiseKeyEvent(Object,KeyEventArgs)
- uid: System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RaiseMouseEvent(Object,MouseEventArgs)
  nameWithType: Control.RaiseMouseEvent(Object,MouseEventArgs)
  fullName: System.Windows.Forms.Control.RaiseMouseEvent(Object,MouseEventArgs)
- uid: System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RaisePaintEvent(Object,PaintEventArgs)
  nameWithType: Control.RaisePaintEvent(Object,PaintEventArgs)
  fullName: System.Windows.Forms.Control.RaisePaintEvent(Object,PaintEventArgs)
- uid: System.Windows.Forms.Control.RecreateHandle
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RecreateHandle()
  nameWithType: Control.RecreateHandle()
  fullName: System.Windows.Forms.Control.RecreateHandle()
- uid: System.Windows.Forms.Control.RecreatingHandle
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RecreatingHandle
  nameWithType: Control.RecreatingHandle
  fullName: System.Windows.Forms.Control.RecreatingHandle
- uid: System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RectangleToClient(Rectangle)
  nameWithType: Control.RectangleToClient(Rectangle)
  fullName: System.Windows.Forms.Control.RectangleToClient(Rectangle)
- uid: System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RectangleToScreen(Rectangle)
  nameWithType: Control.RectangleToScreen(Rectangle)
  fullName: System.Windows.Forms.Control.RectangleToScreen(Rectangle)
- uid: System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ReflectMessage(IntPtr,Message)
  nameWithType: Control.ReflectMessage(IntPtr,Message)
  fullName: System.Windows.Forms.Control.ReflectMessage(IntPtr,Message)
- uid: System.Windows.Forms.Control.Refresh
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Refresh()
  nameWithType: Control.Refresh()
  fullName: System.Windows.Forms.Control.Refresh()
- uid: System.Windows.Forms.Control.Region
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Region
  nameWithType: Control.Region
  fullName: System.Windows.Forms.Control.Region
- uid: System.Windows.Forms.Control.RegionChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RegionChanged
  nameWithType: Control.RegionChanged
  fullName: System.Windows.Forms.Control.RegionChanged
- uid: System.Windows.Forms.Control.RenderRightToLeft
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RenderRightToLeft
  nameWithType: Control.RenderRightToLeft
  fullName: System.Windows.Forms.Control.RenderRightToLeft
- uid: System.Windows.Forms.Control.ResetBackColor
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetBackColor()
  nameWithType: Control.ResetBackColor()
  fullName: System.Windows.Forms.Control.ResetBackColor()
- uid: System.Windows.Forms.Control.ResetBindings
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetBindings()
  nameWithType: Control.ResetBindings()
  fullName: System.Windows.Forms.Control.ResetBindings()
- uid: System.Windows.Forms.Control.ResetCursor
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetCursor()
  nameWithType: Control.ResetCursor()
  fullName: System.Windows.Forms.Control.ResetCursor()
- uid: System.Windows.Forms.Control.ResetFont
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetFont()
  nameWithType: Control.ResetFont()
  fullName: System.Windows.Forms.Control.ResetFont()
- uid: System.Windows.Forms.Control.ResetForeColor
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetForeColor()
  nameWithType: Control.ResetForeColor()
  fullName: System.Windows.Forms.Control.ResetForeColor()
- uid: System.Windows.Forms.Control.ResetImeMode
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetImeMode()
  nameWithType: Control.ResetImeMode()
  fullName: System.Windows.Forms.Control.ResetImeMode()
- uid: System.Windows.Forms.Control.ResetMouseEventArgs
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetMouseEventArgs()
  nameWithType: Control.ResetMouseEventArgs()
  fullName: System.Windows.Forms.Control.ResetMouseEventArgs()
- uid: System.Windows.Forms.Control.ResetRightToLeft
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetRightToLeft()
  nameWithType: Control.ResetRightToLeft()
  fullName: System.Windows.Forms.Control.ResetRightToLeft()
- uid: System.Windows.Forms.Control.ResetText
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetText()
  nameWithType: Control.ResetText()
  fullName: System.Windows.Forms.Control.ResetText()
- uid: System.Windows.Forms.Control.Resize
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Resize
  nameWithType: Control.Resize
  fullName: System.Windows.Forms.Control.Resize
- uid: System.Windows.Forms.Control.ResizeRedraw
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResizeRedraw
  nameWithType: Control.ResizeRedraw
  fullName: System.Windows.Forms.Control.ResizeRedraw
- uid: System.Windows.Forms.Control.ResumeLayout
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResumeLayout()
  nameWithType: Control.ResumeLayout()
  fullName: System.Windows.Forms.Control.ResumeLayout()
- uid: System.Windows.Forms.Control.ResumeLayout(System.Boolean)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResumeLayout(Boolean)
  nameWithType: Control.ResumeLayout(Boolean)
  fullName: System.Windows.Forms.Control.ResumeLayout(Boolean)
- uid: System.Windows.Forms.Control.Right
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Right
  nameWithType: Control.Right
  fullName: System.Windows.Forms.Control.Right
- uid: System.Windows.Forms.Control.RightToLeft
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RightToLeft
  nameWithType: Control.RightToLeft
  fullName: System.Windows.Forms.Control.RightToLeft
- uid: System.Windows.Forms.RightToLeft
  parent: System.Windows.Forms
  isExternal: false
  name: RightToLeft
  nameWithType: RightToLeft
  fullName: System.Windows.Forms.RightToLeft
- uid: System.Windows.Forms.Control.RightToLeftChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RightToLeftChanged
  nameWithType: Control.RightToLeftChanged
  fullName: System.Windows.Forms.Control.RightToLeftChanged
- uid: System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RtlTranslateAlignment(ContentAlignment)
  nameWithType: Control.RtlTranslateAlignment(ContentAlignment)
  fullName: System.Windows.Forms.Control.RtlTranslateAlignment(ContentAlignment)
- uid: System.Drawing.ContentAlignment
  parent: System.Drawing
  isExternal: false
  name: ContentAlignment
  nameWithType: ContentAlignment
  fullName: System.Drawing.ContentAlignment
- uid: System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RtlTranslateAlignment(HorizontalAlignment)
  nameWithType: Control.RtlTranslateAlignment(HorizontalAlignment)
  fullName: System.Windows.Forms.Control.RtlTranslateAlignment(HorizontalAlignment)
- uid: System.Windows.Forms.HorizontalAlignment
  parent: System.Windows.Forms
  isExternal: false
  name: HorizontalAlignment
  nameWithType: HorizontalAlignment
  fullName: System.Windows.Forms.HorizontalAlignment
- uid: System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RtlTranslateAlignment(LeftRightAlignment)
  nameWithType: Control.RtlTranslateAlignment(LeftRightAlignment)
  fullName: System.Windows.Forms.Control.RtlTranslateAlignment(LeftRightAlignment)
- uid: System.Windows.Forms.LeftRightAlignment
  parent: System.Windows.Forms
  isExternal: false
  name: LeftRightAlignment
  nameWithType: LeftRightAlignment
  fullName: System.Windows.Forms.LeftRightAlignment
- uid: System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RtlTranslateContent(ContentAlignment)
  nameWithType: Control.RtlTranslateContent(ContentAlignment)
  fullName: System.Windows.Forms.Control.RtlTranslateContent(ContentAlignment)
- uid: System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RtlTranslateHorizontal(HorizontalAlignment)
  nameWithType: Control.RtlTranslateHorizontal(HorizontalAlignment)
  fullName: System.Windows.Forms.Control.RtlTranslateHorizontal(HorizontalAlignment)
- uid: System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RtlTranslateLeftRight(LeftRightAlignment)
  nameWithType: Control.RtlTranslateLeftRight(LeftRightAlignment)
  fullName: System.Windows.Forms.Control.RtlTranslateLeftRight(LeftRightAlignment)
- uid: System.Windows.Forms.Control.Scale(System.Drawing.SizeF)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Scale(SizeF)
  nameWithType: Control.Scale(SizeF)
  fullName: System.Windows.Forms.Control.Scale(SizeF)
- uid: System.Windows.Forms.Control.Scale(System.Single)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Scale(Single)
  nameWithType: Control.Scale(Single)
  fullName: System.Windows.Forms.Control.Scale(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Windows.Forms.Control.Scale(System.Single,System.Single)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Scale(Single,Single)
  nameWithType: Control.Scale(Single,Single)
  fullName: System.Windows.Forms.Control.Scale(Single,Single)
- uid: System.Windows.Forms.Control.ScaleChildren
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ScaleChildren
  nameWithType: Control.ScaleChildren
  fullName: System.Windows.Forms.Control.ScaleChildren
- uid: System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ScaleControl(SizeF,BoundsSpecified)
  nameWithType: Control.ScaleControl(SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.Control.ScaleControl(SizeF,BoundsSpecified)
- uid: System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ScaleCore(Single,Single)
  nameWithType: Control.ScaleCore(Single,Single)
  fullName: System.Windows.Forms.Control.ScaleCore(Single,Single)
- uid: System.Windows.Forms.Control.Select
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Select()
  nameWithType: Control.Select()
  fullName: System.Windows.Forms.Control.Select()
- uid: System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Select(Boolean,Boolean)
  nameWithType: Control.Select(Boolean,Boolean)
  fullName: System.Windows.Forms.Control.Select(Boolean,Boolean)
- uid: System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SelectNextControl(Control,Boolean,Boolean,Boolean,Boolean)
  nameWithType: Control.SelectNextControl(Control,Boolean,Boolean,Boolean,Boolean)
  fullName: System.Windows.Forms.Control.SelectNextControl(Control,Boolean,Boolean,Boolean,Boolean)
- uid: System.Windows.Forms.Control.SendToBack
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SendToBack()
  nameWithType: Control.SendToBack()
  fullName: System.Windows.Forms.Control.SendToBack()
- uid: System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetAutoSizeMode(AutoSizeMode)
  nameWithType: Control.SetAutoSizeMode(AutoSizeMode)
  fullName: System.Windows.Forms.Control.SetAutoSizeMode(AutoSizeMode)
- uid: System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetBounds(Int32,Int32,Int32,Int32)
  nameWithType: Control.SetBounds(Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.Control.SetBounds(Int32,Int32,Int32,Int32)
- uid: System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetBounds(Int32,Int32,Int32,Int32,BoundsSpecified)
  nameWithType: Control.SetBounds(Int32,Int32,Int32,Int32,BoundsSpecified)
  fullName: System.Windows.Forms.Control.SetBounds(Int32,Int32,Int32,Int32,BoundsSpecified)
- uid: System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  nameWithType: Control.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  fullName: System.Windows.Forms.Control.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
- uid: System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetClientSizeCore(Int32,Int32)
  nameWithType: Control.SetClientSizeCore(Int32,Int32)
  fullName: System.Windows.Forms.Control.SetClientSizeCore(Int32,Int32)
- uid: System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetStyle(ControlStyles,Boolean)
  nameWithType: Control.SetStyle(ControlStyles,Boolean)
  fullName: System.Windows.Forms.Control.SetStyle(ControlStyles,Boolean)
- uid: System.Windows.Forms.Control.SetTopLevel(System.Boolean)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetTopLevel(Boolean)
  nameWithType: Control.SetTopLevel(Boolean)
  fullName: System.Windows.Forms.Control.SetTopLevel(Boolean)
- uid: System.Windows.Forms.Control.SetVisibleCore(System.Boolean)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetVisibleCore(Boolean)
  nameWithType: Control.SetVisibleCore(Boolean)
  fullName: System.Windows.Forms.Control.SetVisibleCore(Boolean)
- uid: System.Windows.Forms.Control.Show
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Show()
  nameWithType: Control.Show()
  fullName: System.Windows.Forms.Control.Show()
- uid: System.Windows.Forms.Control.ShowFocusCues
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ShowFocusCues
  nameWithType: Control.ShowFocusCues
  fullName: System.Windows.Forms.Control.ShowFocusCues
- uid: System.Windows.Forms.Control.ShowKeyboardCues
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ShowKeyboardCues
  nameWithType: Control.ShowKeyboardCues
  fullName: System.Windows.Forms.Control.ShowKeyboardCues
- uid: System.Windows.Forms.Control.Site
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Site
  nameWithType: Control.Site
  fullName: System.Windows.Forms.Control.Site
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.Windows.Forms.Control.Size
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Size
  nameWithType: Control.Size
  fullName: System.Windows.Forms.Control.Size
- uid: System.Windows.Forms.Control.SizeChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SizeChanged
  nameWithType: Control.SizeChanged
  fullName: System.Windows.Forms.Control.SizeChanged
- uid: System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SizeFromClientSize(Size)
  nameWithType: Control.SizeFromClientSize(Size)
  fullName: System.Windows.Forms.Control.SizeFromClientSize(Size)
- uid: System.Windows.Forms.Control.StyleChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: StyleChanged
  nameWithType: Control.StyleChanged
  fullName: System.Windows.Forms.Control.StyleChanged
- uid: System.Windows.Forms.Control.SuspendLayout
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SuspendLayout()
  nameWithType: Control.SuspendLayout()
  fullName: System.Windows.Forms.Control.SuspendLayout()
- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: System.Windows.Forms.IDropTarget.OnDragDrop(DragEventArgs)
  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragDrop(DragEventArgs)
  fullName: System.Windows.Forms.Control.System.Windows.Forms.IDropTarget.OnDragDrop(DragEventArgs)
- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: System.Windows.Forms.IDropTarget.OnDragEnter(DragEventArgs)
  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragEnter(DragEventArgs)
  fullName: System.Windows.Forms.Control.System.Windows.Forms.IDropTarget.OnDragEnter(DragEventArgs)
- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: System.Windows.Forms.IDropTarget.OnDragLeave(EventArgs)
  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragLeave(EventArgs)
  fullName: System.Windows.Forms.Control.System.Windows.Forms.IDropTarget.OnDragLeave(EventArgs)
- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: System.Windows.Forms.IDropTarget.OnDragOver(DragEventArgs)
  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragOver(DragEventArgs)
  fullName: System.Windows.Forms.Control.System.Windows.Forms.IDropTarget.OnDragOver(DragEventArgs)
- uid: System.Windows.Forms.Control.SystemColorsChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SystemColorsChanged
  nameWithType: Control.SystemColorsChanged
  fullName: System.Windows.Forms.Control.SystemColorsChanged
- uid: System.Windows.Forms.Control.TabIndex
  parent: System.Windows.Forms.Control
  isExternal: false
  name: TabIndex
  nameWithType: Control.TabIndex
  fullName: System.Windows.Forms.Control.TabIndex
- uid: System.Windows.Forms.Control.TabIndexChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: TabIndexChanged
  nameWithType: Control.TabIndexChanged
  fullName: System.Windows.Forms.Control.TabIndexChanged
- uid: System.Windows.Forms.Control.TabStop
  parent: System.Windows.Forms.Control
  isExternal: false
  name: TabStop
  nameWithType: Control.TabStop
  fullName: System.Windows.Forms.Control.TabStop
- uid: System.Windows.Forms.Control.TabStopChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: TabStopChanged
  nameWithType: Control.TabStopChanged
  fullName: System.Windows.Forms.Control.TabStopChanged
- uid: System.Windows.Forms.Control.Tag
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Tag
  nameWithType: Control.Tag
  fullName: System.Windows.Forms.Control.Tag
- uid: System.Windows.Forms.Control.Text
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Text
  nameWithType: Control.Text
  fullName: System.Windows.Forms.Control.Text
- uid: System.Windows.Forms.Control.TextChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: TextChanged
  nameWithType: Control.TextChanged
  fullName: System.Windows.Forms.Control.TextChanged
- uid: System.Windows.Forms.Control.Top
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Top
  nameWithType: Control.Top
  fullName: System.Windows.Forms.Control.Top
- uid: System.Windows.Forms.Control.TopLevelControl
  parent: System.Windows.Forms.Control
  isExternal: false
  name: TopLevelControl
  nameWithType: Control.TopLevelControl
  fullName: System.Windows.Forms.Control.TopLevelControl
- uid: System.Windows.Forms.Control.Update
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Update()
  nameWithType: Control.Update()
  fullName: System.Windows.Forms.Control.Update()
- uid: System.Windows.Forms.Control.UpdateBounds
  parent: System.Windows.Forms.Control
  isExternal: false
  name: UpdateBounds()
  nameWithType: Control.UpdateBounds()
  fullName: System.Windows.Forms.Control.UpdateBounds()
- uid: System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: UpdateBounds(Int32,Int32,Int32,Int32)
  nameWithType: Control.UpdateBounds(Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.Control.UpdateBounds(Int32,Int32,Int32,Int32)
- uid: System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: UpdateBounds(Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Control.UpdateBounds(Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.Control.UpdateBounds(Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Windows.Forms.Control.UpdateStyles
  parent: System.Windows.Forms.Control
  isExternal: false
  name: UpdateStyles()
  nameWithType: Control.UpdateStyles()
  fullName: System.Windows.Forms.Control.UpdateStyles()
- uid: System.Windows.Forms.Control.UpdateZOrder
  parent: System.Windows.Forms.Control
  isExternal: false
  name: UpdateZOrder()
  nameWithType: Control.UpdateZOrder()
  fullName: System.Windows.Forms.Control.UpdateZOrder()
- uid: System.Windows.Forms.Control.UseWaitCursor
  parent: System.Windows.Forms.Control
  isExternal: false
  name: UseWaitCursor
  nameWithType: Control.UseWaitCursor
  fullName: System.Windows.Forms.Control.UseWaitCursor
- uid: System.Windows.Forms.Control.Validated
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Validated
  nameWithType: Control.Validated
  fullName: System.Windows.Forms.Control.Validated
- uid: System.Windows.Forms.Control.Validating
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Validating
  nameWithType: Control.Validating
  fullName: System.Windows.Forms.Control.Validating
- uid: System.ComponentModel.CancelEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CancelEventHandler
  nameWithType: CancelEventHandler
  fullName: System.ComponentModel.CancelEventHandler
- uid: System.Windows.Forms.Control.Visible
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Visible
  nameWithType: Control.Visible
  fullName: System.Windows.Forms.Control.Visible
- uid: System.Windows.Forms.Control.VisibleChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: VisibleChanged
  nameWithType: Control.VisibleChanged
  fullName: System.Windows.Forms.Control.VisibleChanged
- uid: System.Windows.Forms.Control.Width
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Width
  nameWithType: Control.Width
  fullName: System.Windows.Forms.Control.Width
- uid: System.Windows.Forms.Control.WindowTarget
  parent: System.Windows.Forms.Control
  isExternal: false
  name: WindowTarget
  nameWithType: Control.WindowTarget
  fullName: System.Windows.Forms.Control.WindowTarget
- uid: System.Windows.Forms.IWindowTarget
  parent: System.Windows.Forms
  isExternal: false
  name: IWindowTarget
  nameWithType: IWindowTarget
  fullName: System.Windows.Forms.IWindowTarget
- uid: System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: WndProc(Message)
  nameWithType: Control.WndProc(Message)
  fullName: System.Windows.Forms.Control.WndProc(Message)
- uid: System.Windows.Forms.Control.#ctor*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Control
  nameWithType: Control.Control
- uid: System.Windows.Forms.Control.AccessibilityNotifyClients*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AccessibilityNotifyClients
  nameWithType: Control.AccessibilityNotifyClients
- uid: System.Windows.Forms.Control.AccessibilityObject*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AccessibilityObject
  nameWithType: Control.AccessibilityObject
- uid: System.Windows.Forms.Control.AccessibleDefaultActionDescription*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AccessibleDefaultActionDescription
  nameWithType: Control.AccessibleDefaultActionDescription
- uid: System.Windows.Forms.Control.AccessibleDescription*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AccessibleDescription
  nameWithType: Control.AccessibleDescription
- uid: System.Windows.Forms.Control.AccessibleName*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AccessibleName
  nameWithType: Control.AccessibleName
- uid: System.Windows.Forms.Control.AccessibleRole*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AccessibleRole
  nameWithType: Control.AccessibleRole
- uid: System.Windows.Forms.Control.AllowDrop*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AllowDrop
  nameWithType: Control.AllowDrop
- uid: System.Windows.Forms.Control.Anchor*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Anchor
  nameWithType: Control.Anchor
- uid: System.Windows.Forms.Control.AutoScrollOffset*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AutoScrollOffset
  nameWithType: Control.AutoScrollOffset
- uid: System.Windows.Forms.Control.AutoSize*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AutoSize
  nameWithType: Control.AutoSize
- uid: System.Windows.Forms.Control.BackColor*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BackColor
  nameWithType: Control.BackColor
- uid: System.Windows.Forms.Control.BackgroundImage*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BackgroundImage
  nameWithType: Control.BackgroundImage
- uid: System.Windows.Forms.Control.BackgroundImageLayout*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BackgroundImageLayout
  nameWithType: Control.BackgroundImageLayout
- uid: System.Windows.Forms.Control.BeginInvoke*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BeginInvoke
  nameWithType: Control.BeginInvoke
- uid: System.Windows.Forms.Control.BindingContext*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BindingContext
  nameWithType: Control.BindingContext
- uid: System.Windows.Forms.Control.Bottom*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Bottom
  nameWithType: Control.Bottom
- uid: System.Windows.Forms.Control.Bounds*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Bounds
  nameWithType: Control.Bounds
- uid: System.Windows.Forms.Control.BringToFront*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BringToFront
  nameWithType: Control.BringToFront
- uid: System.Windows.Forms.Control.CanEnableIme*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CanEnableIme
  nameWithType: Control.CanEnableIme
- uid: System.Windows.Forms.Control.CanFocus*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CanFocus
  nameWithType: Control.CanFocus
- uid: System.Windows.Forms.Control.CanRaiseEvents*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CanRaiseEvents
  nameWithType: Control.CanRaiseEvents
- uid: System.Windows.Forms.Control.CanSelect*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CanSelect
  nameWithType: Control.CanSelect
- uid: System.Windows.Forms.Control.Capture*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Capture
  nameWithType: Control.Capture
- uid: System.Windows.Forms.Control.CausesValidation*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CausesValidation
  nameWithType: Control.CausesValidation
- uid: System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CheckForIllegalCrossThreadCalls
  nameWithType: Control.CheckForIllegalCrossThreadCalls
- uid: System.Windows.Forms.Control.ClientRectangle*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ClientRectangle
  nameWithType: Control.ClientRectangle
- uid: System.Windows.Forms.Control.ClientSize*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ClientSize
  nameWithType: Control.ClientSize
- uid: System.Windows.Forms.Control.CompanyName*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CompanyName
  nameWithType: Control.CompanyName
- uid: System.Windows.Forms.Control.Contains*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Contains
  nameWithType: Control.Contains
- uid: System.Windows.Forms.Control.ContainsFocus*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ContainsFocus
  nameWithType: Control.ContainsFocus
- uid: System.Windows.Forms.Control.ContextMenu*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ContextMenu
  nameWithType: Control.ContextMenu
- uid: System.Windows.Forms.Control.ContextMenuStrip*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ContextMenuStrip
  nameWithType: Control.ContextMenuStrip
- uid: System.Windows.Forms.Control.Controls*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Controls
  nameWithType: Control.Controls
- uid: System.Windows.Forms.Control.CreateAccessibilityInstance*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CreateAccessibilityInstance
  nameWithType: Control.CreateAccessibilityInstance
- uid: System.Windows.Forms.Control.CreateControl*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CreateControl
  nameWithType: Control.CreateControl
- uid: System.Windows.Forms.Control.CreateControlsInstance*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CreateControlsInstance
  nameWithType: Control.CreateControlsInstance
- uid: System.Windows.Forms.Control.Created*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Created
  nameWithType: Control.Created
- uid: System.Windows.Forms.Control.CreateGraphics*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CreateGraphics
  nameWithType: Control.CreateGraphics
- uid: System.Windows.Forms.Control.CreateHandle*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CreateHandle
  nameWithType: Control.CreateHandle
- uid: System.Windows.Forms.Control.CreateParams*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CreateParams
  nameWithType: Control.CreateParams
- uid: System.Windows.Forms.Control.Cursor*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Cursor
  nameWithType: Control.Cursor
- uid: System.Windows.Forms.Control.DataBindings*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DataBindings
  nameWithType: Control.DataBindings
- uid: System.Windows.Forms.Control.DefaultBackColor*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultBackColor
  nameWithType: Control.DefaultBackColor
- uid: System.Windows.Forms.Control.DefaultCursor*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultCursor
  nameWithType: Control.DefaultCursor
- uid: System.Windows.Forms.Control.DefaultFont*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultFont
  nameWithType: Control.DefaultFont
- uid: System.Windows.Forms.Control.DefaultForeColor*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultForeColor
  nameWithType: Control.DefaultForeColor
- uid: System.Windows.Forms.Control.DefaultImeMode*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultImeMode
  nameWithType: Control.DefaultImeMode
- uid: System.Windows.Forms.Control.DefaultMargin*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultMargin
  nameWithType: Control.DefaultMargin
- uid: System.Windows.Forms.Control.DefaultMaximumSize*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultMaximumSize
  nameWithType: Control.DefaultMaximumSize
- uid: System.Windows.Forms.Control.DefaultMinimumSize*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultMinimumSize
  nameWithType: Control.DefaultMinimumSize
- uid: System.Windows.Forms.Control.DefaultPadding*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultPadding
  nameWithType: Control.DefaultPadding
- uid: System.Windows.Forms.Control.DefaultSize*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultSize
  nameWithType: Control.DefaultSize
- uid: System.Windows.Forms.Control.DefWndProc*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefWndProc
  nameWithType: Control.DefWndProc
- uid: System.Windows.Forms.Control.DestroyHandle*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DestroyHandle
  nameWithType: Control.DestroyHandle
- uid: System.Windows.Forms.Control.DisplayRectangle*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DisplayRectangle
  nameWithType: Control.DisplayRectangle
- uid: System.Windows.Forms.Control.Dispose*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Dispose
  nameWithType: Control.Dispose
- uid: System.Windows.Forms.Control.Disposing*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Disposing
  nameWithType: Control.Disposing
- uid: System.Windows.Forms.Control.Dock*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Dock
  nameWithType: Control.Dock
- uid: System.Windows.Forms.Control.DoDragDrop*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DoDragDrop
  nameWithType: Control.DoDragDrop
- uid: System.Windows.Forms.Control.DoubleBuffered*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DoubleBuffered
  nameWithType: Control.DoubleBuffered
- uid: System.Windows.Forms.Control.DrawToBitmap*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DrawToBitmap
  nameWithType: Control.DrawToBitmap
- uid: System.Windows.Forms.Control.Enabled*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Enabled
  nameWithType: Control.Enabled
- uid: System.Windows.Forms.Control.EndInvoke*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: EndInvoke
  nameWithType: Control.EndInvoke
- uid: System.Windows.Forms.Control.FindForm*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: FindForm
  nameWithType: Control.FindForm
- uid: System.Windows.Forms.Control.Focus*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Focus
  nameWithType: Control.Focus
- uid: System.Windows.Forms.Control.Focused*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Focused
  nameWithType: Control.Focused
- uid: System.Windows.Forms.Control.Font*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Font
  nameWithType: Control.Font
- uid: System.Windows.Forms.Control.FontHeight*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: FontHeight
  nameWithType: Control.FontHeight
- uid: System.Windows.Forms.Control.ForeColor*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ForeColor
  nameWithType: Control.ForeColor
- uid: System.Windows.Forms.Control.FromChildHandle*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: FromChildHandle
  nameWithType: Control.FromChildHandle
- uid: System.Windows.Forms.Control.FromHandle*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: FromHandle
  nameWithType: Control.FromHandle
- uid: System.Windows.Forms.Control.GetAccessibilityObjectById*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetAccessibilityObjectById
  nameWithType: Control.GetAccessibilityObjectById
- uid: System.Windows.Forms.Control.GetAutoSizeMode*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetAutoSizeMode
  nameWithType: Control.GetAutoSizeMode
- uid: System.Windows.Forms.Control.GetChildAtPoint*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetChildAtPoint
  nameWithType: Control.GetChildAtPoint
- uid: System.Windows.Forms.Control.GetContainerControl*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetContainerControl
  nameWithType: Control.GetContainerControl
- uid: System.Windows.Forms.Control.GetNextControl*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetNextControl
  nameWithType: Control.GetNextControl
- uid: System.Windows.Forms.Control.GetPreferredSize*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetPreferredSize
  nameWithType: Control.GetPreferredSize
- uid: System.Windows.Forms.Control.GetScaledBounds*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetScaledBounds
  nameWithType: Control.GetScaledBounds
- uid: System.Windows.Forms.Control.GetStyle*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetStyle
  nameWithType: Control.GetStyle
- uid: System.Windows.Forms.Control.GetTopLevel*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetTopLevel
  nameWithType: Control.GetTopLevel
- uid: System.Windows.Forms.Control.Handle*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Handle
  nameWithType: Control.Handle
- uid: System.Windows.Forms.Control.HasChildren*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: HasChildren
  nameWithType: Control.HasChildren
- uid: System.Windows.Forms.Control.Height*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Height
  nameWithType: Control.Height
- uid: System.Windows.Forms.Control.Hide*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Hide
  nameWithType: Control.Hide
- uid: System.Windows.Forms.Control.ImeMode*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ImeMode
  nameWithType: Control.ImeMode
- uid: System.Windows.Forms.Control.ImeModeBase*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ImeModeBase
  nameWithType: Control.ImeModeBase
- uid: System.Windows.Forms.Control.InitLayout*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InitLayout
  nameWithType: Control.InitLayout
- uid: System.Windows.Forms.Control.Invalidate*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Invalidate
  nameWithType: Control.Invalidate
- uid: System.Windows.Forms.Control.Invoke*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Invoke
  nameWithType: Control.Invoke
- uid: System.Windows.Forms.Control.InvokeGotFocus*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InvokeGotFocus
  nameWithType: Control.InvokeGotFocus
- uid: System.Windows.Forms.Control.InvokeLostFocus*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InvokeLostFocus
  nameWithType: Control.InvokeLostFocus
- uid: System.Windows.Forms.Control.InvokeOnClick*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InvokeOnClick
  nameWithType: Control.InvokeOnClick
- uid: System.Windows.Forms.Control.InvokePaint*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InvokePaint
  nameWithType: Control.InvokePaint
- uid: System.Windows.Forms.Control.InvokePaintBackground*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InvokePaintBackground
  nameWithType: Control.InvokePaintBackground
- uid: System.Windows.Forms.Control.InvokeRequired*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InvokeRequired
  nameWithType: Control.InvokeRequired
- uid: System.Windows.Forms.Control.IsAccessible*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsAccessible
  nameWithType: Control.IsAccessible
- uid: System.Windows.Forms.Control.IsDisposed*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsDisposed
  nameWithType: Control.IsDisposed
- uid: System.Windows.Forms.Control.IsHandleCreated*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsHandleCreated
  nameWithType: Control.IsHandleCreated
- uid: System.Windows.Forms.Control.IsInputChar*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsInputChar
  nameWithType: Control.IsInputChar
- uid: System.Windows.Forms.Control.IsInputKey*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsInputKey
  nameWithType: Control.IsInputKey
- uid: System.Windows.Forms.Control.IsKeyLocked*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsKeyLocked
  nameWithType: Control.IsKeyLocked
- uid: System.Windows.Forms.Control.IsMirrored*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsMirrored
  nameWithType: Control.IsMirrored
- uid: System.Windows.Forms.Control.IsMnemonic*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsMnemonic
  nameWithType: Control.IsMnemonic
- uid: System.Windows.Forms.Control.LayoutEngine*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: LayoutEngine
  nameWithType: Control.LayoutEngine
- uid: System.Windows.Forms.Control.Left*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Left
  nameWithType: Control.Left
- uid: System.Windows.Forms.Control.Location*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Location
  nameWithType: Control.Location
- uid: System.Windows.Forms.Control.Margin*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Margin
  nameWithType: Control.Margin
- uid: System.Windows.Forms.Control.MaximumSize*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MaximumSize
  nameWithType: Control.MaximumSize
- uid: System.Windows.Forms.Control.MinimumSize*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MinimumSize
  nameWithType: Control.MinimumSize
- uid: System.Windows.Forms.Control.ModifierKeys*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ModifierKeys
  nameWithType: Control.ModifierKeys
- uid: System.Windows.Forms.Control.MouseButtons*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MouseButtons
  nameWithType: Control.MouseButtons
- uid: System.Windows.Forms.Control.MousePosition*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MousePosition
  nameWithType: Control.MousePosition
- uid: System.Windows.Forms.Control.Name*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Name
  nameWithType: Control.Name
- uid: System.Windows.Forms.Control.NotifyInvalidate*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: NotifyInvalidate
  nameWithType: Control.NotifyInvalidate
- uid: System.Windows.Forms.Control.OnAutoSizeChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnAutoSizeChanged
  nameWithType: Control.OnAutoSizeChanged
- uid: System.Windows.Forms.Control.OnBackColorChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnBackColorChanged
  nameWithType: Control.OnBackColorChanged
- uid: System.Windows.Forms.Control.OnBackgroundImageChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnBackgroundImageChanged
  nameWithType: Control.OnBackgroundImageChanged
- uid: System.Windows.Forms.Control.OnBackgroundImageLayoutChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnBackgroundImageLayoutChanged
  nameWithType: Control.OnBackgroundImageLayoutChanged
- uid: System.Windows.Forms.Control.OnBindingContextChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnBindingContextChanged
  nameWithType: Control.OnBindingContextChanged
- uid: System.Windows.Forms.Control.OnCausesValidationChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnCausesValidationChanged
  nameWithType: Control.OnCausesValidationChanged
- uid: System.Windows.Forms.Control.OnChangeUICues*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnChangeUICues
  nameWithType: Control.OnChangeUICues
- uid: System.Windows.Forms.Control.OnClick*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnClick
  nameWithType: Control.OnClick
- uid: System.Windows.Forms.Control.OnClientSizeChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnClientSizeChanged
  nameWithType: Control.OnClientSizeChanged
- uid: System.Windows.Forms.Control.OnContextMenuChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnContextMenuChanged
  nameWithType: Control.OnContextMenuChanged
- uid: System.Windows.Forms.Control.OnContextMenuStripChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnContextMenuStripChanged
  nameWithType: Control.OnContextMenuStripChanged
- uid: System.Windows.Forms.Control.OnControlAdded*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnControlAdded
  nameWithType: Control.OnControlAdded
- uid: System.Windows.Forms.Control.OnControlRemoved*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnControlRemoved
  nameWithType: Control.OnControlRemoved
- uid: System.Windows.Forms.Control.OnCreateControl*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnCreateControl
  nameWithType: Control.OnCreateControl
- uid: System.Windows.Forms.Control.OnCursorChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnCursorChanged
  nameWithType: Control.OnCursorChanged
- uid: System.Windows.Forms.Control.OnDockChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnDockChanged
  nameWithType: Control.OnDockChanged
- uid: System.Windows.Forms.Control.OnDoubleClick*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnDoubleClick
  nameWithType: Control.OnDoubleClick
- uid: System.Windows.Forms.Control.OnDragDrop*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnDragDrop
  nameWithType: Control.OnDragDrop
- uid: System.Windows.Forms.Control.OnDragEnter*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnDragEnter
  nameWithType: Control.OnDragEnter
- uid: System.Windows.Forms.Control.OnDragLeave*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnDragLeave
  nameWithType: Control.OnDragLeave
- uid: System.Windows.Forms.Control.OnDragOver*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnDragOver
  nameWithType: Control.OnDragOver
- uid: System.Windows.Forms.Control.OnEnabledChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnEnabledChanged
  nameWithType: Control.OnEnabledChanged
- uid: System.Windows.Forms.Control.OnEnter*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnEnter
  nameWithType: Control.OnEnter
- uid: System.Windows.Forms.Control.OnFontChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnFontChanged
  nameWithType: Control.OnFontChanged
- uid: System.Windows.Forms.Control.OnForeColorChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnForeColorChanged
  nameWithType: Control.OnForeColorChanged
- uid: System.Windows.Forms.Control.OnGiveFeedback*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnGiveFeedback
  nameWithType: Control.OnGiveFeedback
- uid: System.Windows.Forms.Control.OnGotFocus*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnGotFocus
  nameWithType: Control.OnGotFocus
- uid: System.Windows.Forms.Control.OnHandleCreated*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnHandleCreated
  nameWithType: Control.OnHandleCreated
- uid: System.Windows.Forms.Control.OnHandleDestroyed*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnHandleDestroyed
  nameWithType: Control.OnHandleDestroyed
- uid: System.Windows.Forms.Control.OnHelpRequested*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnHelpRequested
  nameWithType: Control.OnHelpRequested
- uid: System.Windows.Forms.Control.OnImeModeChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnImeModeChanged
  nameWithType: Control.OnImeModeChanged
- uid: System.Windows.Forms.Control.OnInvalidated*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnInvalidated
  nameWithType: Control.OnInvalidated
- uid: System.Windows.Forms.Control.OnKeyDown*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnKeyDown
  nameWithType: Control.OnKeyDown
- uid: System.Windows.Forms.Control.OnKeyPress*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnKeyPress
  nameWithType: Control.OnKeyPress
- uid: System.Windows.Forms.Control.OnKeyUp*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnKeyUp
  nameWithType: Control.OnKeyUp
- uid: System.Windows.Forms.Control.OnLayout*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnLayout
  nameWithType: Control.OnLayout
- uid: System.Windows.Forms.Control.OnLeave*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnLeave
  nameWithType: Control.OnLeave
- uid: System.Windows.Forms.Control.OnLocationChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnLocationChanged
  nameWithType: Control.OnLocationChanged
- uid: System.Windows.Forms.Control.OnLostFocus*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnLostFocus
  nameWithType: Control.OnLostFocus
- uid: System.Windows.Forms.Control.OnMarginChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMarginChanged
  nameWithType: Control.OnMarginChanged
- uid: System.Windows.Forms.Control.OnMouseCaptureChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseCaptureChanged
  nameWithType: Control.OnMouseCaptureChanged
- uid: System.Windows.Forms.Control.OnMouseClick*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseClick
  nameWithType: Control.OnMouseClick
- uid: System.Windows.Forms.Control.OnMouseDoubleClick*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseDoubleClick
  nameWithType: Control.OnMouseDoubleClick
- uid: System.Windows.Forms.Control.OnMouseDown*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseDown
  nameWithType: Control.OnMouseDown
- uid: System.Windows.Forms.Control.OnMouseEnter*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseEnter
  nameWithType: Control.OnMouseEnter
- uid: System.Windows.Forms.Control.OnMouseHover*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseHover
  nameWithType: Control.OnMouseHover
- uid: System.Windows.Forms.Control.OnMouseLeave*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseLeave
  nameWithType: Control.OnMouseLeave
- uid: System.Windows.Forms.Control.OnMouseMove*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseMove
  nameWithType: Control.OnMouseMove
- uid: System.Windows.Forms.Control.OnMouseUp*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseUp
  nameWithType: Control.OnMouseUp
- uid: System.Windows.Forms.Control.OnMouseWheel*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseWheel
  nameWithType: Control.OnMouseWheel
- uid: System.Windows.Forms.Control.OnMove*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMove
  nameWithType: Control.OnMove
- uid: System.Windows.Forms.Control.OnNotifyMessage*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnNotifyMessage
  nameWithType: Control.OnNotifyMessage
- uid: System.Windows.Forms.Control.OnPaddingChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnPaddingChanged
  nameWithType: Control.OnPaddingChanged
- uid: System.Windows.Forms.Control.OnPaint*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnPaint
  nameWithType: Control.OnPaint
- uid: System.Windows.Forms.Control.OnPaintBackground*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnPaintBackground
  nameWithType: Control.OnPaintBackground
- uid: System.Windows.Forms.Control.OnParentBackColorChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentBackColorChanged
  nameWithType: Control.OnParentBackColorChanged
- uid: System.Windows.Forms.Control.OnParentBackgroundImageChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentBackgroundImageChanged
  nameWithType: Control.OnParentBackgroundImageChanged
- uid: System.Windows.Forms.Control.OnParentBindingContextChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentBindingContextChanged
  nameWithType: Control.OnParentBindingContextChanged
- uid: System.Windows.Forms.Control.OnParentChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentChanged
  nameWithType: Control.OnParentChanged
- uid: System.Windows.Forms.Control.OnParentCursorChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentCursorChanged
  nameWithType: Control.OnParentCursorChanged
- uid: System.Windows.Forms.Control.OnParentEnabledChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentEnabledChanged
  nameWithType: Control.OnParentEnabledChanged
- uid: System.Windows.Forms.Control.OnParentFontChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentFontChanged
  nameWithType: Control.OnParentFontChanged
- uid: System.Windows.Forms.Control.OnParentForeColorChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentForeColorChanged
  nameWithType: Control.OnParentForeColorChanged
- uid: System.Windows.Forms.Control.OnParentRightToLeftChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentRightToLeftChanged
  nameWithType: Control.OnParentRightToLeftChanged
- uid: System.Windows.Forms.Control.OnParentVisibleChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentVisibleChanged
  nameWithType: Control.OnParentVisibleChanged
- uid: System.Windows.Forms.Control.OnPreviewKeyDown*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnPreviewKeyDown
  nameWithType: Control.OnPreviewKeyDown
- uid: System.Windows.Forms.Control.OnPrint*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnPrint
  nameWithType: Control.OnPrint
- uid: System.Windows.Forms.Control.OnQueryContinueDrag*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnQueryContinueDrag
  nameWithType: Control.OnQueryContinueDrag
- uid: System.Windows.Forms.Control.OnRegionChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnRegionChanged
  nameWithType: Control.OnRegionChanged
- uid: System.Windows.Forms.Control.OnResize*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnResize
  nameWithType: Control.OnResize
- uid: System.Windows.Forms.Control.OnRightToLeftChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnRightToLeftChanged
  nameWithType: Control.OnRightToLeftChanged
- uid: System.Windows.Forms.Control.OnSizeChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnSizeChanged
  nameWithType: Control.OnSizeChanged
- uid: System.Windows.Forms.Control.OnStyleChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnStyleChanged
  nameWithType: Control.OnStyleChanged
- uid: System.Windows.Forms.Control.OnSystemColorsChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnSystemColorsChanged
  nameWithType: Control.OnSystemColorsChanged
- uid: System.Windows.Forms.Control.OnTabIndexChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnTabIndexChanged
  nameWithType: Control.OnTabIndexChanged
- uid: System.Windows.Forms.Control.OnTabStopChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnTabStopChanged
  nameWithType: Control.OnTabStopChanged
- uid: System.Windows.Forms.Control.OnTextChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnTextChanged
  nameWithType: Control.OnTextChanged
- uid: System.Windows.Forms.Control.OnValidated*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnValidated
  nameWithType: Control.OnValidated
- uid: System.Windows.Forms.Control.OnValidating*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnValidating
  nameWithType: Control.OnValidating
- uid: System.Windows.Forms.Control.OnVisibleChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnVisibleChanged
  nameWithType: Control.OnVisibleChanged
- uid: System.Windows.Forms.Control.Padding*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Padding
  nameWithType: Control.Padding
- uid: System.Windows.Forms.Control.Parent*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Parent
  nameWithType: Control.Parent
- uid: System.Windows.Forms.Control.PerformLayout*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PerformLayout
  nameWithType: Control.PerformLayout
- uid: System.Windows.Forms.Control.PointToClient*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PointToClient
  nameWithType: Control.PointToClient
- uid: System.Windows.Forms.Control.PointToScreen*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PointToScreen
  nameWithType: Control.PointToScreen
- uid: System.Windows.Forms.Control.PreferredSize*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PreferredSize
  nameWithType: Control.PreferredSize
- uid: System.Windows.Forms.Control.PreProcessControlMessage*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PreProcessControlMessage
  nameWithType: Control.PreProcessControlMessage
- uid: System.Windows.Forms.Control.PreProcessMessage*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PreProcessMessage
  nameWithType: Control.PreProcessMessage
- uid: System.Windows.Forms.Control.ProcessCmdKey*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessCmdKey
  nameWithType: Control.ProcessCmdKey
- uid: System.Windows.Forms.Control.ProcessDialogChar*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessDialogChar
  nameWithType: Control.ProcessDialogChar
- uid: System.Windows.Forms.Control.ProcessDialogKey*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessDialogKey
  nameWithType: Control.ProcessDialogKey
- uid: System.Windows.Forms.Control.ProcessKeyEventArgs*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessKeyEventArgs
  nameWithType: Control.ProcessKeyEventArgs
- uid: System.Windows.Forms.Control.ProcessKeyMessage*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessKeyMessage
  nameWithType: Control.ProcessKeyMessage
- uid: System.Windows.Forms.Control.ProcessKeyPreview*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessKeyPreview
  nameWithType: Control.ProcessKeyPreview
- uid: System.Windows.Forms.Control.ProcessMnemonic*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessMnemonic
  nameWithType: Control.ProcessMnemonic
- uid: System.Windows.Forms.Control.ProductName*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProductName
  nameWithType: Control.ProductName
- uid: System.Windows.Forms.Control.ProductVersion*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProductVersion
  nameWithType: Control.ProductVersion
- uid: System.Windows.Forms.Control.PropagatingImeMode*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PropagatingImeMode
  nameWithType: Control.PropagatingImeMode
- uid: System.Windows.Forms.Control.RaiseDragEvent*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RaiseDragEvent
  nameWithType: Control.RaiseDragEvent
- uid: System.Windows.Forms.Control.RaiseKeyEvent*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RaiseKeyEvent
  nameWithType: Control.RaiseKeyEvent
- uid: System.Windows.Forms.Control.RaiseMouseEvent*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RaiseMouseEvent
  nameWithType: Control.RaiseMouseEvent
- uid: System.Windows.Forms.Control.RaisePaintEvent*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RaisePaintEvent
  nameWithType: Control.RaisePaintEvent
- uid: System.Windows.Forms.Control.RecreateHandle*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RecreateHandle
  nameWithType: Control.RecreateHandle
- uid: System.Windows.Forms.Control.RecreatingHandle*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RecreatingHandle
  nameWithType: Control.RecreatingHandle
- uid: System.Windows.Forms.Control.RectangleToClient*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RectangleToClient
  nameWithType: Control.RectangleToClient
- uid: System.Windows.Forms.Control.RectangleToScreen*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RectangleToScreen
  nameWithType: Control.RectangleToScreen
- uid: System.Windows.Forms.Control.ReflectMessage*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ReflectMessage
  nameWithType: Control.ReflectMessage
- uid: System.Windows.Forms.Control.Refresh*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Refresh
  nameWithType: Control.Refresh
- uid: System.Windows.Forms.Control.Region*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Region
  nameWithType: Control.Region
- uid: System.Windows.Forms.Control.RenderRightToLeft*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RenderRightToLeft
  nameWithType: Control.RenderRightToLeft
- uid: System.Windows.Forms.Control.ResetBackColor*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetBackColor
  nameWithType: Control.ResetBackColor
- uid: System.Windows.Forms.Control.ResetBindings*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetBindings
  nameWithType: Control.ResetBindings
- uid: System.Windows.Forms.Control.ResetCursor*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetCursor
  nameWithType: Control.ResetCursor
- uid: System.Windows.Forms.Control.ResetFont*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetFont
  nameWithType: Control.ResetFont
- uid: System.Windows.Forms.Control.ResetForeColor*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetForeColor
  nameWithType: Control.ResetForeColor
- uid: System.Windows.Forms.Control.ResetImeMode*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetImeMode
  nameWithType: Control.ResetImeMode
- uid: System.Windows.Forms.Control.ResetMouseEventArgs*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetMouseEventArgs
  nameWithType: Control.ResetMouseEventArgs
- uid: System.Windows.Forms.Control.ResetRightToLeft*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetRightToLeft
  nameWithType: Control.ResetRightToLeft
- uid: System.Windows.Forms.Control.ResetText*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetText
  nameWithType: Control.ResetText
- uid: System.Windows.Forms.Control.ResizeRedraw*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResizeRedraw
  nameWithType: Control.ResizeRedraw
- uid: System.Windows.Forms.Control.ResumeLayout*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResumeLayout
  nameWithType: Control.ResumeLayout
- uid: System.Windows.Forms.Control.Right*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Right
  nameWithType: Control.Right
- uid: System.Windows.Forms.Control.RightToLeft*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RightToLeft
  nameWithType: Control.RightToLeft
- uid: System.Windows.Forms.Control.RtlTranslateAlignment*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RtlTranslateAlignment
  nameWithType: Control.RtlTranslateAlignment
- uid: System.Windows.Forms.Control.RtlTranslateContent*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RtlTranslateContent
  nameWithType: Control.RtlTranslateContent
- uid: System.Windows.Forms.Control.RtlTranslateHorizontal*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RtlTranslateHorizontal
  nameWithType: Control.RtlTranslateHorizontal
- uid: System.Windows.Forms.Control.RtlTranslateLeftRight*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RtlTranslateLeftRight
  nameWithType: Control.RtlTranslateLeftRight
- uid: System.Windows.Forms.Control.Scale*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Scale
  nameWithType: Control.Scale
- uid: System.Windows.Forms.Control.ScaleChildren*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ScaleChildren
  nameWithType: Control.ScaleChildren
- uid: System.Windows.Forms.Control.ScaleControl*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ScaleControl
  nameWithType: Control.ScaleControl
- uid: System.Windows.Forms.Control.ScaleCore*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ScaleCore
  nameWithType: Control.ScaleCore
- uid: System.Windows.Forms.Control.Select*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Select
  nameWithType: Control.Select
- uid: System.Windows.Forms.Control.SelectNextControl*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SelectNextControl
  nameWithType: Control.SelectNextControl
- uid: System.Windows.Forms.Control.SendToBack*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SendToBack
  nameWithType: Control.SendToBack
- uid: System.Windows.Forms.Control.SetAutoSizeMode*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetAutoSizeMode
  nameWithType: Control.SetAutoSizeMode
- uid: System.Windows.Forms.Control.SetBounds*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetBounds
  nameWithType: Control.SetBounds
- uid: System.Windows.Forms.Control.SetBoundsCore*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetBoundsCore
  nameWithType: Control.SetBoundsCore
- uid: System.Windows.Forms.Control.SetClientSizeCore*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetClientSizeCore
  nameWithType: Control.SetClientSizeCore
- uid: System.Windows.Forms.Control.SetStyle*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetStyle
  nameWithType: Control.SetStyle
- uid: System.Windows.Forms.Control.SetTopLevel*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetTopLevel
  nameWithType: Control.SetTopLevel
- uid: System.Windows.Forms.Control.SetVisibleCore*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetVisibleCore
  nameWithType: Control.SetVisibleCore
- uid: System.Windows.Forms.Control.Show*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Show
  nameWithType: Control.Show
- uid: System.Windows.Forms.Control.ShowFocusCues*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ShowFocusCues
  nameWithType: Control.ShowFocusCues
- uid: System.Windows.Forms.Control.ShowKeyboardCues*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ShowKeyboardCues
  nameWithType: Control.ShowKeyboardCues
- uid: System.Windows.Forms.Control.Site*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Site
  nameWithType: Control.Site
- uid: System.Windows.Forms.Control.Size*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Size
  nameWithType: Control.Size
- uid: System.Windows.Forms.Control.SizeFromClientSize*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SizeFromClientSize
  nameWithType: Control.SizeFromClientSize
- uid: System.Windows.Forms.Control.SuspendLayout*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SuspendLayout
  nameWithType: Control.SuspendLayout
- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: System.Windows.Forms.IDropTarget.OnDragDrop
  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragDrop
- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: System.Windows.Forms.IDropTarget.OnDragEnter
  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragEnter
- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: System.Windows.Forms.IDropTarget.OnDragLeave
  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragLeave
- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: System.Windows.Forms.IDropTarget.OnDragOver
  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragOver
- uid: System.Windows.Forms.Control.TabIndex*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: TabIndex
  nameWithType: Control.TabIndex
- uid: System.Windows.Forms.Control.TabStop*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: TabStop
  nameWithType: Control.TabStop
- uid: System.Windows.Forms.Control.Tag*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Tag
  nameWithType: Control.Tag
- uid: System.Windows.Forms.Control.Text*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Text
  nameWithType: Control.Text
- uid: System.Windows.Forms.Control.Top*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Top
  nameWithType: Control.Top
- uid: System.Windows.Forms.Control.TopLevelControl*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: TopLevelControl
  nameWithType: Control.TopLevelControl
- uid: System.Windows.Forms.Control.Update*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Update
  nameWithType: Control.Update
- uid: System.Windows.Forms.Control.UpdateBounds*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: UpdateBounds
  nameWithType: Control.UpdateBounds
- uid: System.Windows.Forms.Control.UpdateStyles*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: UpdateStyles
  nameWithType: Control.UpdateStyles
- uid: System.Windows.Forms.Control.UpdateZOrder*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: UpdateZOrder
  nameWithType: Control.UpdateZOrder
- uid: System.Windows.Forms.Control.UseWaitCursor*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: UseWaitCursor
  nameWithType: Control.UseWaitCursor
- uid: System.Windows.Forms.Control.Visible*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Visible
  nameWithType: Control.Visible
- uid: System.Windows.Forms.Control.Width*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Width
  nameWithType: Control.Width
- uid: System.Windows.Forms.Control.WindowTarget*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: WindowTarget
  nameWithType: Control.WindowTarget
- uid: System.Windows.Forms.Control.WndProc*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: WndProc
  nameWithType: Control.WndProc
