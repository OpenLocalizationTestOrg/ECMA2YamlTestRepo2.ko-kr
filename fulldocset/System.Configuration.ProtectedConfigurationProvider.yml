### YamlMime:ManagedReference
items:
- uid: System.Configuration.ProtectedConfigurationProvider
  id: ProtectedConfigurationProvider
  children:
  - System.Configuration.ProtectedConfigurationProvider.#ctor
  - System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)
  - System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)
  langs:
  - csharp
  name: ProtectedConfigurationProvider
  nameWithType: ProtectedConfigurationProvider
  fullName: System.Configuration.ProtectedConfigurationProvider
  type: Class
  summary: "공급자를 만드는 보호 되는 구성 데이터 암호화 및 해독에 대 한 기본 클래스가입니다."
  remarks: "응용 프로그램에서 사용 하는 중요 한 정보를 보호 하는 구성 파일의 섹션을 암호화할 수 있습니다. 이 없도록 하 여 무단된 액세스에 대 한 공격자 구성 파일에 액세스 하는 경우에 보안이 향상 됩니다.       .NET Framework 구성 파일의 섹션을 암호화 하는 데 사용할 수 있는 두 명의 보호 되는 구성 공급자가 포함 됩니다. <xref:System.Configuration.RsaProtectedConfigurationProvider>클래스에서 사용 하 여 <xref:System.Security.Cryptography.RSACryptoServiceProvider>구성 섹션을 암호화 하려면.</xref:System.Security.Cryptography.RSACryptoServiceProvider> </xref:System.Configuration.RsaProtectedConfigurationProvider> <xref:System.Configuration.DpapiProtectedConfigurationProvider>클래스 Windows 데이터 보호 API (DPAPI)를 사용 하 여 구성 섹션을 암호화 합니다.</xref:System.Configuration.DpapiProtectedConfigurationProvider>       DPAPI 또는 RSA 공급자가 아닌 알고리즘을 사용 하 여 중요 한 정보를 암호화 하는 요구 사항이 있을 수 있습니다. 이 경우 사용자 지정 보호 되는 구성 공급자를 빌드할 수 있습니다. ProtectedConfigurationProvider 직접 보호 되는 구성 공급자를 만들려면에서 상속 해야 하는 추상 기본 클래스입니다.       으로 구성 되어 있는지 확인 해야 하는 표준 또는 사용자 지정 공급자를 사용 하는지 여부를 `add` 요소에는 `providers` 의 섹션은 `configProtectedData` 구성 섹션입니다. (다음 예제 참조).       자세한 내용은 참조 [보호 구성 공급자를 구현](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > 암호화 된 구성 데이터를 발견 하는 경우 ASP.NET, 투명 하 게 구성 된 공급자를 사용 하 여 암호 해독을 수행 합니다. 필요한 공급자를 구성 하는 확인 이외의 편이 아무 작업도 필요 합니다."
  example:
  - "The following example shows how to implement a custom ProtectedConfigurationProvider.  \n  \n To be able to configure this provider, as shown in the next configuration excerpt, you must install it in the Global Assembly Cache (GAC). Refer to [Implementing a Protected Configuration Provider](../Topic/Implementing%20a%20Protected%20Configuration%20Provider.md) for more information.  \n  \n [!code-cs[System.Configuration.ProtectedConfigurationProvider#1](~/add/codesnippet/csharp/t-system.configuration.p_7_1.cs)]\n [!code-vb[System.Configuration.ProtectedConfigurationProvider#1](~/add/codesnippet/visualbasic/t-system.configuration.p_7_1.vb)]  \n  \n The following example shows how to use the previous custom ProtectedConfigurationProvider.  \n  \n [!code-vb[System.Configuration.UsingProtectedConfigurationProvider#11](~/add/codesnippet/visualbasic/t-system.configuration.p_7_2.vb)]\n [!code-cs[System.Configuration.UsingProtectedConfigurationProvider#11](~/add/codesnippet/csharp/t-system.configuration.p_7_2.cs)]  \n  \n The following is an excerpt of the configuration file used by the above examples.  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<configuration>  \n  \n  <configProtectedData >  \n    <providers>  \n      <clear />  \n      <add keyContainerName=\"pcKey.txt\"   \n        name=\"TripleDESProtectedConfigurationProvider\"  \ntype=\"Samples.Aspnet.TripleDESProtectedConfigurationProvider, protectedconfigurationproviderlib, Version=1.0.0.0, Culture=neutral, PublicKeyToken=79e01ae0f5cfc66f, processorArchitecture=MSIL\" />  \n    </providers>  \n  \n  </configProtectedData >  \n  \n  <connectionStrings>  \n    <add name=\"NorthwindConnectionString\"   \n      connectionString=\"Data Source=webnetue2;Initial Catalog=Northwind;User ID=aspnet_test;Password=test\"  \nproviderName=\"System.Data.SqlClient\" />  \n  </connectionStrings>  \n  \n</configuration>  \n```"
  syntax:
    content: 'public abstract class ProtectedConfigurationProvider : System.Configuration.Provider.ProviderBase'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Configuration.ProtectedConfigurationProvider.#ctor
  id: '#ctor'
  parent: System.Configuration.ProtectedConfigurationProvider
  langs:
  - csharp
  name: ProtectedConfigurationProvider()
  nameWithType: ProtectedConfigurationProvider.ProtectedConfigurationProvider()
  fullName: System.Configuration.ProtectedConfigurationProvider.ProtectedConfigurationProvider()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Configuration.ProtectedConfigurationProvider&quot;> </xref> 클래스 기본 설정을 사용 합니다."
  syntax:
    content: protected ProtectedConfigurationProvider ();
    parameters: []
  overload: System.Configuration.ProtectedConfigurationProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)
  id: Decrypt(System.Xml.XmlNode)
  parent: System.Configuration.ProtectedConfigurationProvider
  langs:
  - csharp
  name: Decrypt(XmlNode)
  nameWithType: ProtectedConfigurationProvider.Decrypt(XmlNode)
  fullName: System.Configuration.ProtectedConfigurationProvider.Decrypt(XmlNode)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "전달 된 암호를 해독 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> 구성 파일에서 개체입니다."
  remarks: ''
  example:
  - "The following example shows how to use Decrypt method to perform custom decryption.  \n  \n [!code-cs[System.Configuration.ProtectedConfigurationProvider#2](~/add/codesnippet/csharp/490b80fa-87ff-462a-bceb-_1.cs)]\n [!code-vb[System.Configuration.ProtectedConfigurationProvider#2](~/add/codesnippet/visualbasic/490b80fa-87ff-462a-bceb-_1.vb)]"
  syntax:
    content: public abstract System.Xml.XmlNode Decrypt (System.Xml.XmlNode encryptedNode);
    parameters:
    - id: encryptedNode
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> 암호를 해독 하는 개체입니다."
    return:
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> 암호 해독 된 데이터가 포함 된 개체입니다."
  overload: System.Configuration.ProtectedConfigurationProvider.Decrypt*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)
  id: Encrypt(System.Xml.XmlNode)
  parent: System.Configuration.ProtectedConfigurationProvider
  langs:
  - csharp
  name: Encrypt(XmlNode)
  nameWithType: ProtectedConfigurationProvider.Encrypt(XmlNode)
  fullName: System.Configuration.ProtectedConfigurationProvider.Encrypt(XmlNode)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "전달 된 암호화 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> 구성 파일에서 개체입니다."
  remarks: ''
  example:
  - "The following example shows how to use Encrypt to perform custom encryption.  \n  \n [!code-cs[System.Configuration.ProtectedConfigurationProvider#3](~/add/codesnippet/csharp/1cc011d4-bc06-4499-99c2-_1.cs)]\n [!code-vb[System.Configuration.ProtectedConfigurationProvider#3](~/add/codesnippet/visualbasic/1cc011d4-bc06-4499-99c2-_1.vb)]"
  syntax:
    content: public abstract System.Xml.XmlNode Encrypt (System.Xml.XmlNode node);
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> 를 암호화 하는 개체입니다."
    return:
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> 암호화 된 데이터를 포함 하는 개체입니다."
  overload: System.Configuration.ProtectedConfigurationProvider.Encrypt*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: System.Configuration.Provider.ProviderBase
- uid: System.Configuration.ProtectedConfigurationProvider.#ctor
  parent: System.Configuration.ProtectedConfigurationProvider
  isExternal: false
  name: ProtectedConfigurationProvider()
  nameWithType: ProtectedConfigurationProvider.ProtectedConfigurationProvider()
  fullName: System.Configuration.ProtectedConfigurationProvider.ProtectedConfigurationProvider()
- uid: System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)
  parent: System.Configuration.ProtectedConfigurationProvider
  isExternal: false
  name: Decrypt(XmlNode)
  nameWithType: ProtectedConfigurationProvider.Decrypt(XmlNode)
  fullName: System.Configuration.ProtectedConfigurationProvider.Decrypt(XmlNode)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)
  parent: System.Configuration.ProtectedConfigurationProvider
  isExternal: false
  name: Encrypt(XmlNode)
  nameWithType: ProtectedConfigurationProvider.Encrypt(XmlNode)
  fullName: System.Configuration.ProtectedConfigurationProvider.Encrypt(XmlNode)
- uid: System.Configuration.ProtectedConfigurationProvider.#ctor*
  parent: System.Configuration.ProtectedConfigurationProvider
  isExternal: false
  name: ProtectedConfigurationProvider
  nameWithType: ProtectedConfigurationProvider.ProtectedConfigurationProvider
- uid: System.Configuration.ProtectedConfigurationProvider.Decrypt*
  parent: System.Configuration.ProtectedConfigurationProvider
  isExternal: false
  name: Decrypt
  nameWithType: ProtectedConfigurationProvider.Decrypt
- uid: System.Configuration.ProtectedConfigurationProvider.Encrypt*
  parent: System.Configuration.ProtectedConfigurationProvider
  isExternal: false
  name: Encrypt
  nameWithType: ProtectedConfigurationProvider.Encrypt
