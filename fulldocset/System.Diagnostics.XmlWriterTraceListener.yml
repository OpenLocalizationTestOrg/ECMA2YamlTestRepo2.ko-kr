### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.XmlWriterTraceListener
  id: XmlWriterTraceListener
  children:
  - System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream)
  - System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter)
  - System.Diagnostics.XmlWriterTraceListener.#ctor(System.String)
  - System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream,System.String)
  - System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter,System.String)
  - System.Diagnostics.XmlWriterTraceListener.#ctor(System.String,System.String)
  - System.Diagnostics.XmlWriterTraceListener.Close
  - System.Diagnostics.XmlWriterTraceListener.Fail(System.String,System.String)
  - System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - System.Diagnostics.XmlWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  - System.Diagnostics.XmlWriterTraceListener.Write(System.String)
  - System.Diagnostics.XmlWriterTraceListener.WriteLine(System.String)
  langs:
  - csharp
  name: XmlWriterTraceListener
  nameWithType: XmlWriterTraceListener
  fullName: System.Diagnostics.XmlWriterTraceListener
  type: Class
  summary: "추적 또는 디버깅 출력을 XML로 인코딩된 데이터를 보냅니다는 <xref:System.IO.TextWriter>또는 <xref:System.IO.Stream>와 같은 한 <xref href=&quot;System.IO.FileStream&quot;> </xref>.</xref:System.IO.Stream> </xref:System.IO.TextWriter>"
  remarks: "> [!NOTE]\n>  You must have unmanaged code permission to create an instance of the XmlWriterTraceListener class.  \n  \n The XmlWriterTraceListener class converts tracing and debugging information into an XML-encoded text stream. The description of the XML output is shown in the tables that follow. You can use the [Service Trace Viewer Tool (SvcTraceViewer.exe)](http://go.microsoft.com/fwlink/p/?LinkId=240129) to display the XML output.  \n  \n You can enable or disable an XmlWriterTraceListener through the application configuration file and then use the configured XmlWriterTraceListener in your application. Alternately, you can create an XmlWriterTraceListener in your code.  \n  \n To configure an XmlWriterTraceListener, edit the configuration file that corresponds to the name of your application. In this file, you can add or remove a listener, set the properties for a listener, or remove listeners. The configuration file should be formatted like the following example.  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <trace autoflush=\"false\" indentsize=\"4\">  \n      <listeners>  \n        <add name=\"xmlListener\"   \n          type=\"System.Diagnostics.XmlWriterTraceListener\"   \n          initializeData=\"xmlOutput.xml\"   \n          traceOutputOptions=\"ProcessId, DateTime\" />  \n        <remove name=\"Default\" />  \n      </listeners>  \n    </trace>  \n  </system.diagnostics>  \n</configuration>  \n```  \n  \n The XmlWriterTraceListener class inherits the <xref:System.Diagnostics.TraceListener.Filter%2A> property from the base class <xref:System.Diagnostics.TraceListener>.  The <xref:System.Diagnostics.TraceListener.Filter%2A> property allows an additional level of trace output filtering at the listener.  If there is a filter present, the `Trace` methods of the trace listener call the <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method of the filter to determine whether to emit the trace.  \n  \n> [!NOTE]\n>  If an attempt is made to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.  \n  \n> [!NOTE]\n>  Listener methods are intended to be called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes.  The listener methods are not intended to be called directly from application code. The XmlWriterTraceListener listener is primarily intended for use by the <xref:System.Diagnostics.TraceSource> class. The <xref:System.Diagnostics.XmlWriterTraceListener.Write%2A> and <xref:System.Diagnostics.XmlWriterTraceListener.WriteLine%2A> methods can be called by the <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> classes, and default values are provided for the XML elements that <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> do not supply values for.  \n  \n The following table describes the elements and attributes of the XML output.  \n  \n|Element|Attributes|Output|Notes|  \n|-------------|----------------|------------|-----------|  \n|`CallStack`|None|Depends on the presence of the <xref:System.Diagnostics.TraceOptions> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|Special characters such as > or < are replaced with escape sequences. See the escaped character translation table that follows.|  \n|`Computer`|None|Always present.|The value of the <xref:System.Environment.MachineName%2A> property.|  \n|`Correlation`|`ActivityID`|Always present|If not specified, the default is an empty GUID.|  \n||`RelatedActivityID`|Depends on the presence of the `relatedActivityId` parameter in the Trace method call.|The `relatedActivityId` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method.|  \n|`DataItem`|None|Depends on the `data` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method.|This element can contain an array of elements or one element, so the values are written as a set of `DataItem` nodes under the `TraceData` element.<br /><br /> The data output uses the `ToString` method of the passed-in data objects.|  \n|`EventID`|None|Always present.|Parameter input (`id`).|  \n|`Execution`|`ProcessName`|Always present.|From the <xref:System.Diagnostics.TraceEventCache>.|  \n||`ProcessID`|Always present.|From the <xref:System.Diagnostics.TraceEventCache>. On Windows 98 and Windows Me operating systems, if `ProcessID` is greater than 2,147,483,647 it is a positive representation of a negative number and should be converted to obtain the correct process identifier.|  \n||`ThreadID`|Always present.|From the <xref:System.Diagnostics.TraceEventCache>.|  \n|`Level`|None|Always present.|Parameter input (the numeric value of `eventType`). Parameter values greater than 255 are output as 255.|  \n|`LogicalOperationStack`|None|Depends on the presence of the <xref:System.Diagnostics.TraceOptions> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|There can be more than one logical operation, so the values are written as `LogicalOperation` nodes under the `LogicalOperationStack` element.|  \n|`Message`|None|Depends on the presence of a message in the Trace method call.|This element is a formatted message if formatting arguments are provided.|  \n|`Source`|`Name`|Always present.|Parameter input.|  \n|`SubType`|`Name`|Always present.|Parameter input.|  \n|`TimeCreated`|`SystemTime`|Always present.|If not present in the <xref:System.Diagnostics.TraceEventCache>, the default is the current time.|  \n|`TimeStamp`|None|Depends on the presence of the <xref:System.Diagnostics.TraceOptions> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|From the <xref:System.Diagnostics.TraceEventCache>.|  \n|`Type`|None|Always present.|Always the value 3.|  \n  \n The following table shows the characters that are escaped in the XML output. Escaping occurs in all the elements and attributes with the exception of the `DataItem` element, which is not escaped if the object passed to the `data` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method is an <xref:System.Xml.XPath.XPathNavigator> object. If an <xref:System.Xml.XPath.XPathNavigator> is used for the data object, the <xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A> method is called and the entire root node is traced as unescaped data.  \n  \n|Escaped character|Value|  \n|-----------------------|-----------|  \n|&|&amp;|  \n|\\<|&lt;|  \n|>|&gt;|  \n|\"|&quot;|  \n|\\|&apos;|  \n|0xD|&\\#xD;|  \n|0xA|&\\#xA;|"
  example:
  - "The following code example shows the use of the XmlWriterTraceListener class to write both escaped and non-escaped data to file logs.  \n  \n [!code-vb[System.Diagnostics.XmlWriterTraceListener#1](~/add/codesnippet/visualbasic/t-system.diagnostics.xml_1.vb)]\n [!code-cs[System.Diagnostics.XmlWriterTraceListener#1](~/add/codesnippet/csharp/t-system.diagnostics.xml_1.cs)]"
  syntax:
    content: 'public class XmlWriterTraceListener : System.Diagnostics.TextWriterTraceListener'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Diagnostics.TraceListener
  - System.Diagnostics.TextWriterTraceListener
  implements: []
  inheritedMembers:
  - System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)
  - System.Diagnostics.TextWriterTraceListener.Flush
  - System.Diagnostics.TextWriterTraceListener.Writer
  - System.Diagnostics.TraceListener.Attributes
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.GetSupportedAttributes
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.IsThreadSafe
  - System.Diagnostics.TraceListener.Name
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: XmlWriterTraceListener(Stream)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(Stream)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(Stream)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Diagnostics.XmlWriterTraceListener&quot;> </xref> 클래스, 디버깅 및 추적 출력의 받는 사람으로 지정된 된 스트림을 사용 합니다."
  remarks: "<xref:System.Diagnostics.TraceListener.Name%2A>속성은 빈 문자열로 초기화 (&quot;&quot;).</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public XmlWriterTraceListener (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>나타내는 스트림 추적 수신기에 씁니다.</xref:System.IO.Stream>"
  overload: System.Diagnostics.XmlWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter)
  id: '#ctor(System.IO.TextWriter)'
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: XmlWriterTraceListener(TextWriter)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(TextWriter)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(TextWriter)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Diagnostics.XmlWriterTraceListener&quot;> </xref> 클래스 디버깅의 받는 사람으로 지정된 된 작성기를 사용 하 여 및 추적 출력 합니다."
  remarks: "<xref:System.Diagnostics.TraceListener.Name%2A>속성은 빈 문자열로 초기화 (&quot;&quot;).</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public XmlWriterTraceListener (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "A <xref:System.IO.TextWriter>추적 수신기에서 출력을 받는.</xref:System.IO.TextWriter>"
  overload: System.Diagnostics.XmlWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: XmlWriterTraceListener(String)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(String)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Diagnostics.XmlWriterTraceListener&quot;> </xref> 클래스, 디버깅 및 추적 출력의 받는 사람으로 지정된 된 파일을 사용 합니다."
  remarks: "이 생성자의 새 인스턴스를 초기화 합니다.는 <xref:System.IO.StreamWriter>지정된 된 경로에 지정된 된 파일에 대 한 클래스를 사용 하 여 <xref:System.Text.Encoding.UTF8%2A>인코딩.</xref:System.Text.Encoding.UTF8%2A> </xref:System.IO.StreamWriter> 파일이 있는 경우에 추가 됩니다. 파일이 없는 경우에 새 파일이 생성 됩니다.      > [!NOTE] > 예외가 발생할 가능성이 줄이기 위해 출력을 무효화할 수 있는 모든 문자 아래 템플릿으로 바뀝니다는 &quot;?&quot; 문자입니다.       <xref:System.Diagnostics.TraceListener.Name%2A>속성은 빈 문자열로 초기화 (&quot;&quot;).</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public XmlWriterTraceListener (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "쓸 파일의 이름입니다."
  overload: System.Diagnostics.XmlWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filename</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream,System.String)
  id: '#ctor(System.IO.Stream,System.String)'
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: XmlWriterTraceListener(Stream,String)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(Stream,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(Stream,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Diagnostics.XmlWriterTraceListener&quot;> </xref> 디버깅의 받는 사람으로 지정된 된 스트림을 사용 하 여 및 추적 출력 지정 된 이름 사용 합니다."
  remarks: "이 생성자는 <xref:System.Diagnostics.TraceListener.Name%2A>속성을는 `name` 매개 변수 값 이나 빈 문자열 (&quot;&quot;) 하는 경우는 `name` 매개 변수는 `null`.</xref:System.Diagnostics.TraceListener.Name%2A> 인덱스의 이름을 사용할 수 있습니다는 <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>컬렉션을 프로그래밍 방식으로 수신기에 대 한 속성을 변경 합니다.</xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> 예를 들어 다음 코드에서는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>의 인스턴스에 대 한 속성 <xref:System.Diagnostics.XmlWriterTraceListener>인 <xref:System.Diagnostics.TraceListener.Name%2A>속성은 &quot;xmllistener 인&quot;.</xref:System.Diagnostics.TraceListener.Name%2A> </xref:System.Diagnostics.XmlWriterTraceListener> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>      ```   ((XmlWriterTraceListener)Trace.Listeners[&quot;xmlListener&quot;]).TraceOutputOptions =        TraceOptions.Timestamp   ```"
  syntax:
    content: public XmlWriterTraceListener (System.IO.Stream stream, string name);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>나타내는 스트림 추적 수신기에 씁니다.</xref:System.IO.Stream>"
    - id: name
      type: System.String
      description: "새 인스턴스의 이름입니다."
  overload: System.Diagnostics.XmlWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter,System.String)
  id: '#ctor(System.IO.TextWriter,System.String)'
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: XmlWriterTraceListener(TextWriter,String)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(TextWriter,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(TextWriter,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Diagnostics.XmlWriterTraceListener&quot;> </xref> 추적 출력 및 디버깅의 받는 사람으로 지정된 된 작성기를 사용 하 여 지정 된 이름 사용 합니다."
  remarks: "이 생성자는 <xref:System.Diagnostics.TraceListener.Name%2A>속성을는 `name` 매개 변수 값 이나 빈 문자열 (&quot;&quot;) 하는 경우는 `name` 매개 변수는 `null`.</xref:System.Diagnostics.TraceListener.Name%2A> 인덱스의 이름을 사용할 수 있습니다는 <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>컬렉션을 프로그래밍 방식으로 수신기에 대 한 속성을 변경 합니다.</xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> 예를 들어 다음 코드에서는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>의 인스턴스에 대 한 속성 <xref:System.Diagnostics.XmlWriterTraceListener>인 <xref:System.Diagnostics.TraceListener.Name%2A>속성은 &quot;xmllistener 인&quot;.</xref:System.Diagnostics.TraceListener.Name%2A> </xref:System.Diagnostics.XmlWriterTraceListener> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>      ```   ((XmlWriterTraceListener)Trace.Listeners[&quot;xmlListener&quot;]).TraceOutputOptions =        TraceOptions.Timestamp.   ```"
  syntax:
    content: public XmlWriterTraceListener (System.IO.TextWriter writer, string name);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "A <xref:System.IO.TextWriter>추적 수신기에서 출력을 받는.</xref:System.IO.TextWriter>"
    - id: name
      type: System.String
      description: "새 인스턴스의 이름입니다."
  overload: System.Diagnostics.XmlWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: XmlWriterTraceListener(String,String)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(String,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Diagnostics.XmlWriterTraceListener&quot;> </xref> 추적 출력 및 디버깅의 받는 사람으로 지정된 된 파일을 사용 하 여 지정 된 이름 사용 합니다."
  remarks: "이 생성자의 새 인스턴스를 초기화 합니다.는 <xref:System.IO.StreamWriter>지정된 된 경로에 지정된 된 파일에 대 한 클래스를 사용 하 여 <xref:System.Text.Encoding.UTF8%2A>인코딩.</xref:System.Text.Encoding.UTF8%2A> </xref:System.IO.StreamWriter> 파일이 있는 경우에 추가 됩니다. 파일이 없는 경우에 새 파일이 생성 됩니다.      > [!NOTE] > 예외가 발생할 가능성이 줄이기 위해 출력을 무효화할 수 있는 모든 문자 아래 템플릿으로 바뀝니다는 &quot;?&quot; 문자입니다.       <xref:System.Diagnostics.TraceListener.Name%2A>속성이로 설정 되는 `name` 매개 변수 값 이나 빈 문자열 (&quot;&quot;) 하는 경우는 `name` 매개 변수는 `null`.</xref:System.Diagnostics.TraceListener.Name%2A> 인덱스의 이름을 사용할 수 있습니다는 <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>컬렉션을 프로그래밍 방식으로 수신기에 대 한 속성을 변경 합니다.</xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> 예를 들어 다음 코드에서는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>의 인스턴스에 대 한 속성 <xref:System.Diagnostics.XmlWriterTraceListener>인 <xref:System.Diagnostics.TraceListener.Name%2A>속성은 &quot;xmllistener 인&quot;.</xref:System.Diagnostics.TraceListener.Name%2A> </xref:System.Diagnostics.XmlWriterTraceListener> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>      ```   ((XmlWriterTraceListener)Trace.Listeners[&quot;xmlListener&quot;]).TraceOutputOptions =       TraceOptions.Timestamp.   ```"
  syntax:
    content: public XmlWriterTraceListener (string filename, string name);
    parameters:
    - id: filename
      type: System.String
      description: "쓸 파일의 이름입니다."
    - id: name
      type: System.String
      description: "새 인스턴스의 이름입니다."
  overload: System.Diagnostics.XmlWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.Close
  id: Close
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: Close()
  nameWithType: XmlWriterTraceListener.Close()
  fullName: System.Diagnostics.XmlWriterTraceListener.Close()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "닫습니다는 <xref:System.Diagnostics.TextWriterTraceListener.Writer*>한다는 더 이상 추적 또는 디버깅 출력을 받지 않도록이 수신기에 대 한.</xref:System.Diagnostics.TextWriterTraceListener.Writer*>"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Diagnostics.XmlWriterTraceListener.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.Fail(System.String,System.String)
  id: Fail(System.String,System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: Fail(String,String)
  nameWithType: XmlWriterTraceListener.Fail(String,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.Fail(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "오류 메시지와 자세한 오류 메시지를 파일이 나 스트림에 포함 한 추적 정보를 씁니다."
  remarks: "기본 동작은 응용 프로그램이 실행 하는 사용자 인터페이스 모드로 때 메시지 상자에 메시지와 자세한 메시지를 표시 하는 <xref:System.Diagnostics.TraceListener>인스턴스에 <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>컬렉션.</xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> </xref:System.Diagnostics.TraceListener> 기본적으로 컬렉션 <xref:System.Diagnostics.DefaultTraceListener>.</xref:System.Diagnostics.DefaultTraceListener> 의 인스턴스를 포함 추가 하거나 제거 하 여이 동작을 사용자 지정할 수 있습니다는 <xref:System.Diagnostics.TraceListener>컬렉션에서.</xref:System.Diagnostics.TraceListener>"
  syntax:
    content: public override void Fail (string message, string detailMessage);
    parameters:
    - id: message
      type: System.String
      description: "쓸 오류 메시지입니다."
    - id: detailMessage
      type: System.String
      description: "오류 메시지에 추가할 자세한 오류 메시지입니다."
  overload: System.Diagnostics.XmlWriterTraceListener.Fail*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: XmlWriterTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "추적 정보, 데이터 개체 및 이벤트 정보를 파일이 나 스트림에 씁니다."
  remarks: "`eventCache`, `source`, `eventType`, 및 `id` 머리글 및 추적의 바닥글에 매개 변수가 사용 됩니다. `id` 매개 변수는 변환 기록 되기 전에 부호 없는 정수 이므로 음수 `id` 큰 양의 정수 값이 기록 됩니다. `data` 매개 변수는로 작성 한 `DataItem` 의 노드는 `TraceData` 요소입니다. `ToString` 데이터 개체의 메서드는 개체를 문자열로 변환 하는 데 사용 됩니다.      > [!IMPORTANT] >이 메서드는 응용 프로그램 코드에서 직접 호출할 수 없습니다.  메서드에 의해 호출 됩니다는 <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, 및 <xref:System.Diagnostics.TraceSource>추적 데이터를 작성 하는 클래스입니다.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> 현재 포함 된 프로세스 ID, 스레드 ID 및 스택 추적 정보가 있습니다."
    - id: source
      type: System.String
      description: "원본 이름입니다."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "중 하나는 <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> 값입니다."
    - id: id
      type: System.Int32
      description: "이벤트에 대 한 숫자 식별자입니다."
    - id: data
      type: System.Object
      description: "내보내는 데 사용 되는 데이터 개체입니다."
  overload: System.Diagnostics.XmlWriterTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: XmlWriterTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "추적 정보, 데이터 개체 및 이벤트 정보를 파일이 나 스트림에 씁니다."
  remarks: "`eventCache`, `source`, `eventType`, 및 `id` 머리글 및 추적의 바닥글에 매개 변수가 사용 됩니다. `id` 매개 변수는 변환 기록 되기 전에 부호 없는 정수 이므로 음수 `id` 큰 양의 정수 값이 기록 됩니다. 개체는 `data` 매개 변수 배열으로 작성 되 `DataItem` 의 노드는 `TraceData` 요소입니다. `ToString` 각 데이터 개체의 메서드는 개체를 문자열로 변환 하는 데 사용 됩니다.      > [!IMPORTANT] >이 메서드는 응용 프로그램 코드에서 직접 호출할 수 없습니다.  메서드에 의해 호출 됩니다는 <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, 및 <xref:System.Diagnostics.TraceSource>추적 데이터를 작성 하는 클래스입니다.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object[] data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> 현재 포함 된 프로세스 ID, 스레드 ID 및 스택 추적 정보가 있습니다."
    - id: source
      type: System.String
      description: "원본 이름입니다."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "중 하나는 <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> 값입니다."
    - id: id
      type: System.Int32
      description: "이벤트에 대 한 숫자 식별자입니다."
    - id: data
      type: System.Object[]
      description: "내보낼 데이터 개체의 배열입니다."
  overload: System.Diagnostics.XmlWriterTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: XmlWriterTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "추적 정보, 메시지 및 이벤트 정보를 파일이 나 스트림에 씁니다."
  remarks: "`eventCache`, `source`, `eventType`, 및 `id` 머리글 및 추적의 바닥글에 매개 변수가 사용 됩니다. `id` 매개 변수는 변환 기록 되기 전에 부호 없는 정수 이므로 음수 `id` 큰 양의 정수 값이 기록 됩니다. `message` 매개 변수는로 작성 된 `Message` 요소입니다.      > [!IMPORTANT] >이 메서드는 응용 프로그램 코드에서 직접 호출할 수 없습니다.  메서드에 의해 호출 됩니다는 <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, 및 <xref:System.Diagnostics.TraceSource>추적 데이터를 작성 하는 클래스입니다.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>"
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> 현재 포함 된 프로세스 ID, 스레드 ID 및 스택 추적 정보가 있습니다."
    - id: source
      type: System.String
      description: "원본 이름입니다."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "중 하나는 <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> 값입니다."
    - id: id
      type: System.Int32
      description: "이벤트에 대 한 숫자 식별자입니다."
    - id: message
      type: System.String
      description: "쓸 메시지입니다."
  overload: System.Diagnostics.XmlWriterTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: XmlWriterTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "추적 정보, 서식이 지정 된 메시지 및 이벤트 정보를 파일이 나 스트림에 씁니다."
  remarks: "The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace. The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer. The [String.Format(String, Object\\[\\])](assetId:///M:System.String.Format(System.String,System.Object[])?qualifyHint=True&autoUpgrade=False) method is called, passing in the `format` string and `args` array as parameters, to format the `args` object array as the `Message` element.  \n  \n> [!IMPORTANT]\n>  This method is not intended to be called directly by application code.  It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data."
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> 현재 포함 된 프로세스 ID, 스레드 ID 및 스택 추적 정보가 있습니다."
    - id: source
      type: System.String
      description: "원본 이름입니다."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "중 하나는 <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> 값입니다."
    - id: id
      type: System.Int32
      description: "이벤트에 대 한 숫자 식별자입니다."
    - id: format
      type: System.String
      description: "개체에 해당 하는&0; 개 이상의 서식 항목이 포함 하는 서식 문자열은 `args` 배열입니다."
    - id: args
      type: System.Object[]
      description: "형식을 지정할 개체가&0; 개 이상 포함 하는 개체 배열입니다."
  overload: System.Diagnostics.XmlWriterTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  id: TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  nameWithType: XmlWriterTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "추적 관련된 활동, 메시지 및 이벤트 정보를 파일이 나 스트림에의 id를 포함 하 여 정보를 씁니다."
  remarks: "TraceTransfer 메서드 관련된 추적의 상관 관계에 사용 됩니다. `eventCache`, `source`, `id`, 및 `relatedActivityId` 머리글 및 추적의 바닥글에 매개 변수가 사용 됩니다. `id` 매개 변수는 변환 기록 되기 전에 부호 없는 정수 이므로 음수 `id` 큰 양의 정수 값이 기록 됩니다. `message` 매개 변수는로 작성 된 `Message` 요소입니다. <xref:System.Guid.ToString%28System.String%29?displayProperty=fullName>메서드는 변환 하는 `relatedActivityId`&quot;B&quot;로 값의 머리글에 표시 된 문자열을 지정 합니다.</xref:System.Guid.ToString%28System.String%29?displayProperty=fullName> `SubTypeName` 바닥글에는 요소에 <xref:System.Diagnostics.TraceEventType>.</xref:System.Diagnostics.TraceEventType> 으로 추적 이벤트 유형 식별      > [!IMPORTANT] > The TraceTransfer 메서드는 응용 프로그램 코드에서 호출할 수 없습니다.  호출을 위한 것은 한 <xref:System.Diagnostics.TraceSource>개체에 대 한 추적 정보를 내보내려면 해당 <xref:System.Diagnostics.TraceSource.TraceTransfer%2A>메서드.</xref:System.Diagnostics.TraceSource.TraceTransfer%2A> </xref:System.Diagnostics.TraceSource>"
  syntax:
    content: public override void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> 현재 포함 된 프로세스 ID, 스레드 ID 및 스택 추적 정보가 있습니다."
    - id: source
      type: System.String
      description: "원본 이름입니다."
    - id: id
      type: System.Int32
      description: "이벤트에 대 한 숫자 식별자입니다."
    - id: message
      type: System.String
      description: "쓸 추적 메시지입니다."
    - id: relatedActivityId
      type: System.Guid
      description: "A <xref:System.Guid>관련된 작업을 식별 하는 구조체.</xref:System.Guid>"
  overload: System.Diagnostics.XmlWriterTraceListener.TraceTransfer*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.Write(System.String)
  id: Write(System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: Write(String)
  nameWithType: XmlWriterTraceListener.Write(String)
  fullName: System.Diagnostics.XmlWriterTraceListener.Write(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "추가 컨텍스트 정보 없이 약어 메시지를 파일이 나 스트림에 씁니다."
  remarks: "사용 하 여는 <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>메서드 로그 출력에 컨텍스트 정보를 포함 하려면.</xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>"
  syntax:
    content: public override void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "쓸 메시지입니다."
  overload: System.Diagnostics.XmlWriterTraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: XmlWriterTraceListener.WriteLine(String)
  fullName: System.Diagnostics.XmlWriterTraceListener.WriteLine(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "파일이 나 스트림에 뒤에 현재 줄 종결자가 추가 컨텍스트 정보 없이 약어 메시지를 씁니다."
  remarks: "사용 하 여는 <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>메서드 로그 출력에 컨텍스트 정보를 포함 하려면.</xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>"
  syntax:
    content: public override void WriteLine (string message);
    parameters:
    - id: message
      type: System.String
      description: "쓸 메시지입니다."
  overload: System.Diagnostics.XmlWriterTraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: System.Diagnostics.TextWriterTraceListener
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: XmlWriterTraceListener(Stream)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(Stream)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: XmlWriterTraceListener(TextWriter)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(TextWriter)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: XmlWriterTraceListener(String)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(String)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream,System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: XmlWriterTraceListener(Stream,String)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(Stream,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(Stream,String)
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter,System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: XmlWriterTraceListener(TextWriter,String)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(TextWriter,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(TextWriter,String)
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.String,System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: XmlWriterTraceListener(String,String)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(String,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(String,String)
- uid: System.Diagnostics.XmlWriterTraceListener.Close
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: Close()
  nameWithType: XmlWriterTraceListener.Close()
  fullName: System.Diagnostics.XmlWriterTraceListener.Close()
- uid: System.Diagnostics.XmlWriterTraceListener.Fail(System.String,System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: Fail(String,String)
  nameWithType: XmlWriterTraceListener.Fail(String,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.Fail(String,String)
- uid: System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: XmlWriterTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
- uid: System.Diagnostics.TraceEventCache
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventCache
  nameWithType: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: XmlWriterTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: XmlWriterTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
- uid: System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: XmlWriterTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
- uid: System.Diagnostics.XmlWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  nameWithType: XmlWriterTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.XmlWriterTraceListener.Write(System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: Write(String)
  nameWithType: XmlWriterTraceListener.Write(String)
  fullName: System.Diagnostics.XmlWriterTraceListener.Write(String)
- uid: System.Diagnostics.XmlWriterTraceListener.WriteLine(System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: WriteLine(String)
  nameWithType: XmlWriterTraceListener.WriteLine(String)
  fullName: System.Diagnostics.XmlWriterTraceListener.WriteLine(String)
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor*
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: XmlWriterTraceListener
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener
- uid: System.Diagnostics.XmlWriterTraceListener.Close*
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: Close
  nameWithType: XmlWriterTraceListener.Close
- uid: System.Diagnostics.XmlWriterTraceListener.Fail*
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: Fail
  nameWithType: XmlWriterTraceListener.Fail
- uid: System.Diagnostics.XmlWriterTraceListener.TraceData*
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: TraceData
  nameWithType: XmlWriterTraceListener.TraceData
- uid: System.Diagnostics.XmlWriterTraceListener.TraceEvent*
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: TraceEvent
  nameWithType: XmlWriterTraceListener.TraceEvent
- uid: System.Diagnostics.XmlWriterTraceListener.TraceTransfer*
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: TraceTransfer
  nameWithType: XmlWriterTraceListener.TraceTransfer
- uid: System.Diagnostics.XmlWriterTraceListener.Write*
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: Write
  nameWithType: XmlWriterTraceListener.Write
- uid: System.Diagnostics.XmlWriterTraceListener.WriteLine*
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: WriteLine
  nameWithType: XmlWriterTraceListener.WriteLine
