### YamlMime:ManagedReference
items:
- uid: System.Drawing.ImageAnimator
  id: ImageAnimator
  children:
  - System.Drawing.ImageAnimator.Animate(System.Drawing.Image,System.EventHandler)
  - System.Drawing.ImageAnimator.CanAnimate(System.Drawing.Image)
  - System.Drawing.ImageAnimator.StopAnimate(System.Drawing.Image,System.EventHandler)
  - System.Drawing.ImageAnimator.UpdateFrames
  - System.Drawing.ImageAnimator.UpdateFrames(System.Drawing.Image)
  langs:
  - csharp
  name: ImageAnimator
  nameWithType: ImageAnimator
  fullName: System.Drawing.ImageAnimator
  type: Class
  summary: "시간 기반 프레임 있는 이미지를 애니메이션 효과 적용 합니다."
  syntax:
    content: public sealed class ImageAnimator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Drawing.ImageAnimator.Animate(System.Drawing.Image,System.EventHandler)
  id: Animate(System.Drawing.Image,System.EventHandler)
  parent: System.Drawing.ImageAnimator
  langs:
  - csharp
  name: Animate(Image,EventHandler)
  nameWithType: ImageAnimator.Animate(Image,EventHandler)
  fullName: System.Drawing.ImageAnimator.Animate(Image,EventHandler)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "애니메이션으로 다중 프레임 이미지를 표시합니다."
  remarks: ''
  example:
  - "This Windows Forms application demonstrates how to draw an animated image to the screen. The image is created from the animated GIF file SampleAnimation.gif located in the same folder as the application.  \n  \n [!code-vb[System.Drawing.ClassicImageAnimator#1](~/add/codesnippet/visualbasic/m-system.drawing.imagean_1.vb)]\n [!code-cs[System.Drawing.ClassicImageAnimator#1](~/add/codesnippet/csharp/m-system.drawing.imagean_1.cs)]\n [!code-cpp[System.Drawing.ClassicImageAnimator#1](~/add/codesnippet/cpp/m-system.drawing.imagean_1.cpp)]"
  syntax:
    content: public static void Animate (System.Drawing.Image image, EventHandler onFrameChangedHandler);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref> 애니메이션 효과를 줄 개체입니다."
    - id: onFrameChangedHandler
      type: System.EventHandler
      description: "<xref uid=&quot;langword_csharp_EventHandler&quot; name=&quot;EventHandler&quot; href=&quot;&quot;> </xref> 애니메이션 프레임이 변경 될 때 호출 되는 방법을 지정 하는 개체입니다."
  overload: System.Drawing.ImageAnimator.Animate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.ImageAnimator.CanAnimate(System.Drawing.Image)
  id: CanAnimate(System.Drawing.Image)
  parent: System.Drawing.ImageAnimator
  langs:
  - csharp
  name: CanAnimate(Image)
  nameWithType: ImageAnimator.CanAnimate(Image)
  fullName: System.Drawing.ImageAnimator.CanAnimate(Image)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "시간 기반 프레임 지정된 된 이미지에 포함 되는지 여부를 나타내는 부울 값을 반환 합니다."
  syntax:
    content: public static bool CanAnimate (System.Drawing.Image image);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref> 테스트할 개체입니다."
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 지정된 된 이미지에는 시간 기반 프레임; 포함 된 경우, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.ImageAnimator.CanAnimate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.ImageAnimator.StopAnimate(System.Drawing.Image,System.EventHandler)
  id: StopAnimate(System.Drawing.Image,System.EventHandler)
  parent: System.Drawing.ImageAnimator
  langs:
  - csharp
  name: StopAnimate(Image,EventHandler)
  nameWithType: ImageAnimator.StopAnimate(Image,EventHandler)
  fullName: System.Drawing.ImageAnimator.StopAnimate(Image,EventHandler)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "실행 중인 애니메이션을 종료합니다."
  syntax:
    content: public static void StopAnimate (System.Drawing.Image image, EventHandler onFrameChangedHandler);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref> 애니메이션 적용을 중지 하도록 합니다."
    - id: onFrameChangedHandler
      type: System.EventHandler
      description: "<xref uid=&quot;langword_csharp_EventHandler&quot; name=&quot;EventHandler&quot; href=&quot;&quot;> </xref> 애니메이션 프레임이 변경 될 때 호출 되는 방법을 지정 하는 개체입니다."
  overload: System.Drawing.ImageAnimator.StopAnimate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.ImageAnimator.UpdateFrames
  id: UpdateFrames
  parent: System.Drawing.ImageAnimator
  langs:
  - csharp
  name: UpdateFrames()
  nameWithType: ImageAnimator.UpdateFrames()
  fullName: System.Drawing.ImageAnimator.UpdateFrames()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "현재 애니메이션 효과가 적용 되는 모든 이미지 프레임을 이동 합니다. 새 프레임에는 다음에 이미지가 렌더링 될 때 그려집니다."
  syntax:
    content: public static void UpdateFrames ();
    parameters: []
  overload: System.Drawing.ImageAnimator.UpdateFrames*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.ImageAnimator.UpdateFrames(System.Drawing.Image)
  id: UpdateFrames(System.Drawing.Image)
  parent: System.Drawing.ImageAnimator
  langs:
  - csharp
  name: UpdateFrames(Image)
  nameWithType: ImageAnimator.UpdateFrames(Image)
  fullName: System.Drawing.ImageAnimator.UpdateFrames(Image)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정된 된 이미지 프레임을 이동 합니다. 새 프레임에는 다음에 이미지가 렌더링 될 때 그려집니다. 이 메서드는 시간 기반 프레임을 사용 하 여 이미지에만 적용 됩니다."
  syntax:
    content: public static void UpdateFrames (System.Drawing.Image image);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref> 개체 프레임을 업데이트할입니다."
  overload: System.Drawing.ImageAnimator.UpdateFrames*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Drawing.ImageAnimator.Animate(System.Drawing.Image,System.EventHandler)
  parent: System.Drawing.ImageAnimator
  isExternal: false
  name: Animate(Image,EventHandler)
  nameWithType: ImageAnimator.Animate(Image,EventHandler)
  fullName: System.Drawing.ImageAnimator.Animate(Image,EventHandler)
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Drawing.ImageAnimator.CanAnimate(System.Drawing.Image)
  parent: System.Drawing.ImageAnimator
  isExternal: false
  name: CanAnimate(Image)
  nameWithType: ImageAnimator.CanAnimate(Image)
  fullName: System.Drawing.ImageAnimator.CanAnimate(Image)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.ImageAnimator.StopAnimate(System.Drawing.Image,System.EventHandler)
  parent: System.Drawing.ImageAnimator
  isExternal: false
  name: StopAnimate(Image,EventHandler)
  nameWithType: ImageAnimator.StopAnimate(Image,EventHandler)
  fullName: System.Drawing.ImageAnimator.StopAnimate(Image,EventHandler)
- uid: System.Drawing.ImageAnimator.UpdateFrames
  parent: System.Drawing.ImageAnimator
  isExternal: false
  name: UpdateFrames()
  nameWithType: ImageAnimator.UpdateFrames()
  fullName: System.Drawing.ImageAnimator.UpdateFrames()
- uid: System.Drawing.ImageAnimator.UpdateFrames(System.Drawing.Image)
  parent: System.Drawing.ImageAnimator
  isExternal: false
  name: UpdateFrames(Image)
  nameWithType: ImageAnimator.UpdateFrames(Image)
  fullName: System.Drawing.ImageAnimator.UpdateFrames(Image)
- uid: System.Drawing.ImageAnimator.Animate*
  parent: System.Drawing.ImageAnimator
  isExternal: false
  name: Animate
  nameWithType: ImageAnimator.Animate
- uid: System.Drawing.ImageAnimator.CanAnimate*
  parent: System.Drawing.ImageAnimator
  isExternal: false
  name: CanAnimate
  nameWithType: ImageAnimator.CanAnimate
- uid: System.Drawing.ImageAnimator.StopAnimate*
  parent: System.Drawing.ImageAnimator
  isExternal: false
  name: StopAnimate
  nameWithType: ImageAnimator.StopAnimate
- uid: System.Drawing.ImageAnimator.UpdateFrames*
  parent: System.Drawing.ImageAnimator
  isExternal: false
  name: UpdateFrames
  nameWithType: ImageAnimator.UpdateFrames
