### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider
  id: SqlColumnEncryptionCertificateStoreProvider
  children:
  - System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.#ctor
  - System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])
  - System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])
  - System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.ProviderName
  langs:
  - csharp
  name: SqlColumnEncryptionCertificateStoreProvider
  nameWithType: SqlColumnEncryptionCertificateStoreProvider
  fullName: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider
  type: Class
  summary: "Windows 인증서 저장소에 대 한 키 저장소 공급자의 구현입니다. 이 클래스는 열 마스터 키로 Windows 인증서 저장소에 저장 된 인증서를 사용할 수 있습니다. 자세한 내용은 참조 [항상 암호화](https://msdn.microsoft.com/library/mt163865.aspx)합니다."
  syntax:
    content: 'public class SqlColumnEncryptionCertificateStoreProvider : System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider'
  inheritance:
  - System.Object
  - System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider
  langs:
  - csharp
  name: SqlColumnEncryptionCertificateStoreProvider()
  nameWithType: SqlColumnEncryptionCertificateStoreProvider.SqlColumnEncryptionCertificateStoreProvider()
  fullName: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.SqlColumnEncryptionCertificateStoreProvider()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Windows 인증서 저장소에 대 한 키 저장소 공급자입니다."
  syntax:
    content: public SqlColumnEncryptionCertificateStoreProvider ();
    parameters: []
  overload: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])
  id: DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])
  parent: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider
  langs:
  - csharp
  name: DecryptColumnEncryptionKey(String,String,Byte[])
  nameWithType: SqlColumnEncryptionCertificateStoreProvider.DecryptColumnEncryptionKey(String,String,Byte[])
  fullName: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.DecryptColumnEncryptionKey(String,String,Byte[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "열 암호화 키의 지정된 된 암호화 값을 해독합니다. 암호화 된 값은 인증서를 사용 하 여 지정 된 키 경로 및 지정된 된 알고리즘을 사용 하 여 암호화 될 예정입니다. 키 경로의 형식은 &quot;Local Machine/My/&lt;certificate_thumbrint&gt;&quot; 또는 &quot;Current User/My/&lt;certificate_thumbprint&gt;&quot;입니다."
  syntax:
    content: public override byte[] DecryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] encryptedColumnEncryptionKey);
    parameters:
    - id: masterKeyPath
      type: System.String
      description: "마스터 키 경로입니다."
    - id: encryptionAlgorithm
      type: System.String
      description: '암호화 알고리즘입니다. 현재 유일 하 게 유효한 값은:`RSA_OAEP`'
    - id: encryptedColumnEncryptionKey
      type: System.Byte[]
      description: "암호화 된 열 암호화 키입니다."
    return:
      type: System.Byte[]
      description: "<xref:System.Byte>입니다.</xref:System.Byte> 반환    암호 해독 된 열 암호화 키입니다."
  overload: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.DecryptColumnEncryptionKey*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])
  id: EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])
  parent: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider
  langs:
  - csharp
  name: EncryptColumnEncryptionKey(String,String,Byte[])
  nameWithType: SqlColumnEncryptionCertificateStoreProvider.EncryptColumnEncryptionKey(String,String,Byte[])
  fullName: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.EncryptColumnEncryptionKey(String,String,Byte[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "인증서를 사용 하 여 지정 된 키 경로 및 지정된 된 알고리즘을 사용 하 여 열 암호화 키를 암호화 합니다. 키 경로의 형식은 &quot;Local Machine/My/&lt;certificate_thumbrint&gt;&quot; 또는 &quot;Current User/My/&lt;certificate_thumbprint&gt;&quot;입니다."
  syntax:
    content: public override byte[] EncryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] columnEncryptionKey);
    parameters:
    - id: masterKeyPath
      type: System.String
      description: "마스터 키 경로입니다."
    - id: encryptionAlgorithm
      type: System.String
      description: '암호화 알고리즘입니다. 현재 유일 하 게 유효한 값은:`RSA_OAEP`'
    - id: columnEncryptionKey
      type: System.Byte[]
      description: "암호화 된 열 암호화 키입니다."
    return:
      type: System.Byte[]
      description: "<xref:System.Byte>입니다.</xref:System.Byte> 반환    암호화 된 열 암호화 키입니다."
  overload: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.EncryptColumnEncryptionKey*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.ProviderName
  id: ProviderName
  parent: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider
  langs:
  - csharp
  name: ProviderName
  nameWithType: SqlColumnEncryptionCertificateStoreProvider.ProviderName
  fullName: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.ProviderName
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "공급자 이름입니다."
  syntax:
    content: public const string ProviderName;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider
  isExternal: false
  name: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider
- uid: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.#ctor
  parent: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider
  isExternal: false
  name: SqlColumnEncryptionCertificateStoreProvider()
  nameWithType: SqlColumnEncryptionCertificateStoreProvider.SqlColumnEncryptionCertificateStoreProvider()
  fullName: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.SqlColumnEncryptionCertificateStoreProvider()
- uid: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])
  parent: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider
  isExternal: false
  name: DecryptColumnEncryptionKey(String,String,Byte[])
  nameWithType: SqlColumnEncryptionCertificateStoreProvider.DecryptColumnEncryptionKey(String,String,Byte[])
  fullName: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.DecryptColumnEncryptionKey(String,String,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])
  parent: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider
  isExternal: false
  name: EncryptColumnEncryptionKey(String,String,Byte[])
  nameWithType: SqlColumnEncryptionCertificateStoreProvider.EncryptColumnEncryptionKey(String,String,Byte[])
  fullName: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.EncryptColumnEncryptionKey(String,String,Byte[])
- uid: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.ProviderName
  parent: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider
  isExternal: false
  name: ProviderName
  nameWithType: SqlColumnEncryptionCertificateStoreProvider.ProviderName
  fullName: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.ProviderName
- uid: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.#ctor*
  parent: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider
  isExternal: false
  name: SqlColumnEncryptionCertificateStoreProvider
  nameWithType: SqlColumnEncryptionCertificateStoreProvider.SqlColumnEncryptionCertificateStoreProvider
- uid: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.DecryptColumnEncryptionKey*
  parent: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider
  isExternal: false
  name: DecryptColumnEncryptionKey
  nameWithType: SqlColumnEncryptionCertificateStoreProvider.DecryptColumnEncryptionKey
- uid: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.EncryptColumnEncryptionKey*
  parent: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider
  isExternal: false
  name: EncryptColumnEncryptionKey
  nameWithType: SqlColumnEncryptionCertificateStoreProvider.EncryptColumnEncryptionKey
