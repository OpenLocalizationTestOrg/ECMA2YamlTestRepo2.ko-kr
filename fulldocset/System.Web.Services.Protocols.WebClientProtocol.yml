### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.WebClientProtocol
  id: WebClientProtocol
  children:
  - System.Web.Services.Protocols.WebClientProtocol.#ctor
  - System.Web.Services.Protocols.WebClientProtocol.Abort
  - System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)
  - System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
  - System.Web.Services.Protocols.WebClientProtocol.Credentials
  - System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)
  - System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)
  - System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)
  - System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  - System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
  - System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
  - System.Web.Services.Protocols.WebClientProtocol.Timeout
  - System.Web.Services.Protocols.WebClientProtocol.Url
  - System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
  langs:
  - csharp
  name: WebClientProtocol
  nameWithType: WebClientProtocol
  fullName: System.Web.Services.Protocols.WebClientProtocol
  type: Class
  summary: "ASP.NET을 사용 하 여 만든 모든 XML 웹 서비스 클라이언트 프록시에 대 한 기본 클래스를 지정 합니다."
  remarks: "XML 웹 서비스 요청 및 응답을 전송 하는 데 사용 되는 전송의 동작을 제어 WebClientProtocol 클래스의 속성이 사용 됩니다. 이 클래스 맵 속성 <xref:System.Net.WebRequest>.</xref:System.Net.WebRequest> 에 대 한 속성 파생 된 클래스의 인스턴스 <xref:System.Net.WebRequest>와 같은 <xref:System.Net.HttpWebRequest>, ASP.NET을 사용 하 여 만든 XML 웹 서비스에 대 한 전송 메커니즘으로 사용 됩니다.</xref:System.Net.HttpWebRequest> </xref:System.Net.WebRequest>       호출 하려는 WebClientProtocol XML 웹 서비스에서 직접 또는 직접 파생 되는 프록시 클래스 만든을 XML 웹 서비스와 통신 하도록 합니다. 프록시 클래스를 수동으로 만들지 않고 지정된 된 XML 웹 서비스의 서비스 설명에 대 한 프록시 클래스를 만드는 Wsdl.exe 도구를 사용할 수 있습니다. WebClientProtocol 클라이언트 프록시에 대 한 기본 클래스 이므로 프록시 클래스에 해당 속성을 찾을 수 있습니다. 이러한 속성은 기본 전송의 요청 동작을 제어 하는 데 유용 합니다. 예를 들어는 <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A>XML 웹 서비스를 인증 하는 호출에 대 한 속성.</xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> 초기화에 사용 되는 WebClientProtocol 속성 중 상당수는 <xref:System.Net.WebRequest>웹 요청을 사용 되는 개체입니다.</xref:System.Net.WebRequest>"
  example:
  - "The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form sets proxy information and client credentials on the proxy class prior to calling the remote XML Web service method.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic WebClientProtocol Example#1](~/add/codesnippet/csharp/t-system.web.services.pr_0_1.aspx)]\n [!code-vb[Classic WebClientProtocol Example#1](~/add/codesnippet/visualbasic/t-system.web.services.pr_0_1.aspx)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class WebClientProtocol : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: WebClientProtocol()
  nameWithType: WebClientProtocol.WebClientProtocol()
  fullName: System.Web.Services.Protocols.WebClientProtocol.WebClientProtocol()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.Services.Protocols.WebClientProtocol&quot;> </xref> 클래스입니다."
  remarks: ''
  example:
  - >-
    [!code-cs[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/add/codesnippet/csharp/m-system.web.services.pr_11_1.cs)]
     [!code-cpp[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/add/codesnippet/cpp/m-system.web.services.pr_11_1.cpp)]
     [!code-vb[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/add/codesnippet/visualbasic/m-system.web.services.pr_11_1.vb)]
  syntax:
    content: protected WebClientProtocol ();
    parameters: []
  overload: System.Web.Services.Protocols.WebClientProtocol.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.Abort
  id: Abort
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: Abort()
  nameWithType: WebClientProtocol.Abort()
  fullName: System.Web.Services.Protocols.WebClientProtocol.Abort()
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "XML 웹 서비스 메서드에 대 한 요청을 취소 합니다."
  syntax:
    content: public virtual void Abort ();
    parameters: []
  overload: System.Web.Services.Protocols.WebClientProtocol.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)
  id: AddToCache(System.Type,System.Object)
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: AddToCache(Type,Object)
  nameWithType: WebClientProtocol.AddToCache(Type,Object)
  fullName: System.Web.Services.Protocols.WebClientProtocol.AddToCache(Type,Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "클라이언트 프로토콜 처리기의 인스턴스를 캐시에 추가 합니다."
  syntax:
    content: protected static void AddToCache (Type type, object value);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>클라이언트 프로토콜 처리기...의</xref:System.Type>"
    - id: value
      type: System.Object
      description: "캐시에 추가 될 클라이언트 프로토콜 처리기."
  overload: System.Web.Services.Protocols.WebClientProtocol.AddToCache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
  id: ConnectionGroupName
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: ConnectionGroupName
  nameWithType: WebClientProtocol.ConnectionGroupName
  fullName: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "요청에 대 한 연결 그룹의 이름을 가져오거나 설정 합니다."
  remarks: "되므로 ConnectionGroupName 속성을 사용 하면 연결 그룹에 대 한 요청을 연결할 수 있습니다. 자세한 내용은 <xref:System.Net.HttpWebRequest.ConnectionGroupName%2A>.</xref:System.Net.HttpWebRequest.ConnectionGroupName%2A> 을 참조 하십시오."
  syntax:
    content: public string ConnectionGroupName { get; set; }
    return:
      type: System.String
      description: "연결 그룹의 이름입니다. 기본값은 <xref:System.String>.</xref:System.String>"
  overload: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.Credentials
  id: Credentials
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: Credentials
  nameWithType: WebClientProtocol.Credentials
  fullName: System.Web.Services.Protocols.WebClientProtocol.Credentials
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "XML 웹 서비스 클라이언트 인증에 대 한 보안 자격 증명을 가져오거나 설정 합니다."
  remarks: "사용 하는 경우는 `Credentials` 속성을 구현 하는 클래스는 XML 웹 서비스 클라이언트를 인스턴스화해야 <xref:System.Net.ICredentials>와 같은 <xref:System.Net.NetworkCredential>, 다음 클라이언트 자격 증명 특정로 설정 하는 인증 메커니즘.</xref:System.Net.NetworkCredential> </xref:System.Net.ICredentials> <xref:System.Net.NetworkCredential>basic을 사용 하 여 인증 자격 증명을 설정 하려면 클래스를 사용할 수 다이제스트, NTLM 및 Kerberos 인증 메커니즘.</xref:System.Net.NetworkCredential>       자격 증명 속성으로 설정 된 경우 <xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName>클라이언트는 서버가 구성 된 방식에 따라 Kerberos 및 NTLM 인증을 수행 하는 서버와 협상 합니다.</xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName>"
  example:
  - "The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form explicitly sets authentication credentials using the `Credentials` property. The user name, password and domain are passed into the constructor for the <xref:System.Net.NetworkCredential> class.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see.  \n  \n [!code-vb[Classic WebClientProtocol.Credentials Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_41_1.aspx)]\n [!code-cs[Classic WebClientProtocol.Credentials Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_41_1.aspx)]"
  syntax:
    content: public System.Net.ICredentials Credentials { get; set; }
    return:
      type: System.Net.ICredentials
      description: "<xref:System.Net.ICredentials>XML 웹 서비스 클라이언트에 대 한.</xref:System.Net.ICredentials>"
  overload: System.Web.Services.Protocols.WebClientProtocol.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)
  id: GetFromCache(System.Type)
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: GetFromCache(Type)
  nameWithType: WebClientProtocol.GetFromCache(Type)
  fullName: System.Web.Services.Protocols.WebClientProtocol.GetFromCache(Type)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "캐시에서 클라이언트 프로토콜 처리기의 인스턴스를 가져옵니다."
  syntax:
    content: protected static object GetFromCache (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>캐시에서 반환 될 클라이언트 프로토콜 처리기.</xref:System.Type>"
    return:
      type: System.Object
      description: "캐시에서 클라이언트 프로토콜 처리기의 인스턴스."
  overload: System.Web.Services.Protocols.WebClientProtocol.GetFromCache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)
  id: GetWebRequest(System.Uri)
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: GetWebRequest(Uri)
  nameWithType: WebClientProtocol.GetWebRequest(Uri)
  fullName: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(Uri)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "만듭니다는 <xref:System.Net.WebRequest>지정 된 인스턴스 <code> uri </code>.</xref:System.Net.WebRequest> 이 보호 된 메서드는 XML 웹 서비스 클라이언트 인프라 새 가져오려는 <xref:System.Net.WebRequest>전송 개체를 XML 웹 서비스 요청을 전송 합니다.</xref:System.Net.WebRequest>"
  remarks: "사용자 지정 하려면이 메서드를 재정의할 수는 <xref:System.Net.WebRequest>XML 웹 서비스 요청 하기 전에 개체.</xref:System.Net.WebRequest> 예를 들어 요청에 사용자 지정 헤더를 추가할 수 있습니다."
  syntax:
    content: protected virtual System.Net.WebRequest GetWebRequest (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "<xref:System.Uri> <xref:System.Net.WebRequest>.</xref:System.Net.WebRequest> 를 만들 때 사용할</xref:System.Uri>"
    return:
      type: System.Net.WebRequest
      description: "<xref:System.Net.WebRequest>인스턴스.</xref:System.Net.WebRequest>"
  overload: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <code>uri</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)
  id: GetWebResponse(System.Net.WebRequest)
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: GetWebResponse(WebRequest)
  nameWithType: WebClientProtocol.GetWebResponse(WebRequest)
  fullName: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(WebRequest)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "XML 웹 서비스 메서드에 동기 요청에서 응답을 반환합니다."
  syntax:
    content: protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);
    parameters:
    - id: request
      type: System.Net.WebRequest
      description: "<xref:System.Net.WebRequest>에서 응답을 가져오는.</xref:System.Net.WebRequest>"
    return:
      type: System.Net.WebResponse
      description: "XML 웹 서비스 메서드에 동기 요청에서 응답입니다."
  overload: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse*
  exceptions:
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "경우 <xref:System.Web.Services.Protocols.WebClientProtocol.Abort*>GetWebResponse를 호출 하기 전에 호출 됩니다.</xref:System.Web.Services.Protocols.WebClientProtocol.Abort*>"
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  id: GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: GetWebResponse(WebRequest,IAsyncResult)
  nameWithType: WebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
  fullName: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "XML 웹 서비스 메서드에 대 한 비동기 요청에서 응답을 반환합니다. 이 보호 된 메서드는 비동기 XML 웹 서비스 요청에서 응답을 가져올 수는 XML 웹 서비스 클라이언트 인프라에서 호출 됩니다."
  syntax:
    content: protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);
    parameters:
    - id: request
      type: System.Net.WebRequest
      description: "<xref:System.Net.WebRequest>에서 응답을 가져오는.</xref:System.Net.WebRequest>"
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>에 전달할 <xref:System.Net.HttpWebRequest.EndGetResponse*>응답 완료 되 면.</xref:System.Net.HttpWebRequest.EndGetResponse*> </xref:System.IAsyncResult>"
    return:
      type: System.Net.WebResponse
      description: "XML 웹 서비스 메서드에 대 한 비동기 요청에서 응답 합니다."
  overload: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse*
  exceptions:
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "경우 <> </> *> 호출 하기 전에 호출 <> </> *> 합니다."
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
  id: PreAuthenticate
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: PreAuthenticate
  nameWithType: WebClientProtocol.PreAuthenticate
  fullName: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "사전 인증을 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "자격 증명을 사용 하지 않고 리소스를 요청 하는 클라이언트, 서버 요청 문제를 제기 하 고 지 원하는 어떤 인증 스키마를 나타냅니다. 클라이언트는 인증 체계를 선택 하 고 적절 한 보냅니다 `WWW-authenticate` 서버에 헤더입니다. PreAuthenticate 다음과 같은 경우 `true`, `WWW-authenticate` 헤더는 모든 후속 요청과 함께 전송 됩니다.       PreAuthenticate 다음과 같은 경우 `false`, 요청이 있는 XML 웹 서비스 메서드를 처음 하지 않고 사용자를 인증 합니다. XML 웹 서비스에서 익명 액세스를 허용 하는 경우 XML 웹 서비스 메서드가 실행 됩니다. 익명 액세스 허용 되지 않는 경우 401 HTTP 반환 코드를 다시 클라이언트에 전송 됩니다. 에 대 한 응답의 <xref:System.Web.Services.Protocols.WebClientProtocol>클래스 웹 서버에 인증 자격 증명을 반환 합니다.</xref:System.Web.Services.Protocols.WebClientProtocol> 클라이언트가 인증 되 고 XML 웹 서비스에 액세스할 수 있는 권한이 이후에, XML 웹 서비스 메서드가 실행 실행 됩니다. 그렇지 않으면 클라이언트는 액세스가 거부 됩니다."
  syntax:
    content: public bool PreAuthenticate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>요청을 사전; 요청 인증 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
  id: RequestEncoding
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: RequestEncoding
  nameWithType: WebClientProtocol.RequestEncoding
  fullName: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "<xref:System.Text.Encoding>XML 웹 서비스 클라이언트 요청을 수행 하는 데 사용 합니다.</xref:System.Text.Encoding>"
  remarks: "RequestEncoding 요청 메시지에 대 한 인코딩을 결정 합니다. <xref:System.Net.WebRequest.ContentType%2A>요청의 인코딩 값으로 주석을 달아야 합니다.</xref:System.Net.WebRequest.ContentType%2A>       파생 된 클래스 <xref:System.Web.Services.Protocols.WebClientProtocol>같은 특정 프로토콜을 지 원하는 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>는 soap의 경우 특정 프로토콜에 대 한 인코딩 요구 사항에 맞게이 속성을 설정 합니다.</xref:System.Web.Services.Protocols.SoapHttpClientProtocol> </xref:System.Web.Services.Protocols.WebClientProtocol> 예를 들어는 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>기본 인코딩을 u t F-8로 설정 합니다.</xref:System.Web.Services.Protocols.SoapHttpClientProtocol>"
  example:
  - "The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form explicitly sets RequestEncoding to UTF-8.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic WebClientProtocol.RequestEncoding Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_59_1.aspx)]\n [!code-cs[Classic WebClientProtocol.RequestEncoding Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_59_1.aspx)]"
  syntax:
    content: public System.Text.Encoding RequestEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "클라이언트 요청에 대 한 문자 인코딩입니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 기본 전송 및 프로토콜에 대 한 기본 인코딩을 사용 하 여 합니다."
  overload: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.Timeout
  id: Timeout
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: Timeout
  nameWithType: WebClientProtocol.Timeout
  fullName: System.Web.Services.Protocols.WebClientProtocol.Timeout
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "XML 웹 서비스 클라이언트 (밀리초)에 도착 하는 동기 XML 웹 서비스 요청에 회신을 기다리는 시간을 나타냅니다."
  remarks: "이 시간 제한 속성을 설정 <xref:System.Threading.Timeout.Infinite?displayProperty=fullName>요청 제한 시간이 초과 되지 않은 것을 나타냅니다.</xref:System.Threading.Timeout.Infinite?displayProperty=fullName> XML 웹 서비스 클라이언트의 Timeout 속성 제한 시간이 초과 되지을 설정할 수 있지만 웹 서버는 서버 쪽에서 요청 제한 시간을 여전히 발생할 수 있습니다."
  example:
  - "The following example sets the `Timeout` value to 15000 (15 seconds) for the synchronous call to the `Add` XML Web service method within the `Math` XML Web service.  \n  \n [!code-cs[Classic WebClientProtocol.Timeout Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_35_1.cs)]\n [!code-cpp[Classic WebClientProtocol.Timeout Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_35_1.cpp)]\n [!code-vb[Classic WebClientProtocol.Timeout Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_35_1.vb)]"
  syntax:
    content: public int Timeout { get; set; }
    return:
      type: System.Int32
      description: "XML 웹 서비스에 대 한 동기 호출에 대 한 밀리초 단위로 시간이 초과 됩니다. 기본값은 100000 밀리초입니다."
  overload: System.Web.Services.Protocols.WebClientProtocol.Timeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.Url
  id: Url
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: Url
  nameWithType: WebClientProtocol.Url
  fullName: System.Web.Services.Protocols.WebClientProtocol.Url
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "XML 웹 서비스 클라이언트의 URL을 요청 하는 자료를 가져오거나 설정 합니다."
  remarks: "Wsdl.exe를 사용 하 여 생성 된 프록시 클래스를 사용 하 여 클라이언트에 대 한 기본 Url 속성을 설정 합니다. 기본 Url 위치 특성을 프록시 클래스가 생성 된 서비스 설명에 따라 결정 됩니다.       파생 클래스와 같은 특정 프로토콜을 지 원하는 <xref:System.Web.Services.Protocols.HttpGetClientProtocol>및 <xref:System.Web.Services.Protocols.HttpPostClientProtocol>XML 웹 서비스 요청을 Url에 추가 정보를 추가할 수 있습니다.</xref:System.Web.Services.Protocols.HttpPostClientProtocol> </xref:System.Web.Services.Protocols.HttpGetClientProtocol>       동일한 서비스 설명에서 생성 된 프록시 클래스를 구현 하는 XML 웹 서비스를 가리키는 Url 속성을 변경할 수 있습니다."
  example:
  - "The following example changes the Url property for the `math` XML Web service to the Web server named `http:// www.contoso.com`.  \n  \n [!code-cs[Classic WebClientProtocol.Url Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_49_1.cs)]\n [!code-vb[Classic WebClientProtocol.Url Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_49_1.vb)]\n [!code-cpp[Classic WebClientProtocol.Url Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_49_1.cpp)]"
  syntax:
    content: public string Url { get; set; }
    return:
      type: System.String
      description: "XML 웹 서비스 클라이언트의 기본 URL를 요청 합니다. 기본값은 <xref:System.String>.</xref:System.String>"
  overload: System.Web.Services.Protocols.WebClientProtocol.Url*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: UseDefaultCredentials
  nameWithType: WebClientProtocol.UseDefaultCredentials
  fullName: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "설정할지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials*>속성의 값으로는 &lt;xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName&gt; 속성.</xref:System.Web.Services.Protocols.WebClientProtocol.Credentials*>"
  syntax:
    content: public bool UseDefaultCredentials { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>자격 증명 속성의 값으로 설정 되 고 &lt;xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName&gt; 속성, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.Web.Services.Protocols.WebClientProtocol.#ctor
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: WebClientProtocol()
  nameWithType: WebClientProtocol.WebClientProtocol()
  fullName: System.Web.Services.Protocols.WebClientProtocol.WebClientProtocol()
- uid: System.Web.Services.Protocols.WebClientProtocol.Abort
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Abort()
  nameWithType: WebClientProtocol.Abort()
  fullName: System.Web.Services.Protocols.WebClientProtocol.Abort()
- uid: System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: AddToCache(Type,Object)
  nameWithType: WebClientProtocol.AddToCache(Type,Object)
  fullName: System.Web.Services.Protocols.WebClientProtocol.AddToCache(Type,Object)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: ConnectionGroupName
  nameWithType: WebClientProtocol.ConnectionGroupName
  fullName: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Services.Protocols.WebClientProtocol.Credentials
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Credentials
  nameWithType: WebClientProtocol.Credentials
  fullName: System.Web.Services.Protocols.WebClientProtocol.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: GetFromCache(Type)
  nameWithType: WebClientProtocol.GetFromCache(Type)
  fullName: System.Web.Services.Protocols.WebClientProtocol.GetFromCache(Type)
- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: GetWebRequest(Uri)
  nameWithType: WebClientProtocol.GetWebRequest(Uri)
  fullName: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(Uri)
- uid: System.Net.WebRequest
  parent: System.Net
  isExternal: true
  name: WebRequest
  nameWithType: WebRequest
  fullName: System.Net.WebRequest
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: GetWebResponse(WebRequest)
  nameWithType: WebClientProtocol.GetWebResponse(WebRequest)
  fullName: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(WebRequest)
- uid: System.Net.WebResponse
  parent: System.Net
  isExternal: true
  name: WebResponse
  nameWithType: WebResponse
  fullName: System.Net.WebResponse
- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: GetWebResponse(WebRequest,IAsyncResult)
  nameWithType: WebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
  fullName: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: PreAuthenticate
  nameWithType: WebClientProtocol.PreAuthenticate
  fullName: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: RequestEncoding
  nameWithType: WebClientProtocol.RequestEncoding
  fullName: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Web.Services.Protocols.WebClientProtocol.Timeout
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Timeout
  nameWithType: WebClientProtocol.Timeout
  fullName: System.Web.Services.Protocols.WebClientProtocol.Timeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Services.Protocols.WebClientProtocol.Url
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Url
  nameWithType: WebClientProtocol.Url
  fullName: System.Web.Services.Protocols.WebClientProtocol.Url
- uid: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: WebClientProtocol.UseDefaultCredentials
  fullName: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
- uid: System.Web.Services.Protocols.WebClientProtocol.#ctor*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: WebClientProtocol
  nameWithType: WebClientProtocol.WebClientProtocol
- uid: System.Web.Services.Protocols.WebClientProtocol.Abort*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Abort
  nameWithType: WebClientProtocol.Abort
- uid: System.Web.Services.Protocols.WebClientProtocol.AddToCache*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: AddToCache
  nameWithType: WebClientProtocol.AddToCache
- uid: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: ConnectionGroupName
  nameWithType: WebClientProtocol.ConnectionGroupName
- uid: System.Web.Services.Protocols.WebClientProtocol.Credentials*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Credentials
  nameWithType: WebClientProtocol.Credentials
- uid: System.Web.Services.Protocols.WebClientProtocol.GetFromCache*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: GetFromCache
  nameWithType: WebClientProtocol.GetFromCache
- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: GetWebRequest
  nameWithType: WebClientProtocol.GetWebRequest
- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: GetWebResponse
  nameWithType: WebClientProtocol.GetWebResponse
- uid: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: PreAuthenticate
  nameWithType: WebClientProtocol.PreAuthenticate
- uid: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: RequestEncoding
  nameWithType: WebClientProtocol.RequestEncoding
- uid: System.Web.Services.Protocols.WebClientProtocol.Timeout*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Timeout
  nameWithType: WebClientProtocol.Timeout
- uid: System.Web.Services.Protocols.WebClientProtocol.Url*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Url
  nameWithType: WebClientProtocol.Url
- uid: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: WebClientProtocol.UseDefaultCredentials
