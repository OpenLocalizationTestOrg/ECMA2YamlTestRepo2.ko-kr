### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlLanguage
  id: XamlLanguage
  children:
  - System.Xaml.XamlLanguage.AllDirectives
  - System.Xaml.XamlLanguage.AllTypes
  - System.Xaml.XamlLanguage.Arguments
  - System.Xaml.XamlLanguage.Array
  - System.Xaml.XamlLanguage.AsyncRecords
  - System.Xaml.XamlLanguage.Base
  - System.Xaml.XamlLanguage.Boolean
  - System.Xaml.XamlLanguage.Byte
  - System.Xaml.XamlLanguage.Char
  - System.Xaml.XamlLanguage.Class
  - System.Xaml.XamlLanguage.ClassAttributes
  - System.Xaml.XamlLanguage.ClassModifier
  - System.Xaml.XamlLanguage.Code
  - System.Xaml.XamlLanguage.ConnectionId
  - System.Xaml.XamlLanguage.Decimal
  - System.Xaml.XamlLanguage.Double
  - System.Xaml.XamlLanguage.FactoryMethod
  - System.Xaml.XamlLanguage.FieldModifier
  - System.Xaml.XamlLanguage.Initialization
  - System.Xaml.XamlLanguage.Int16
  - System.Xaml.XamlLanguage.Int32
  - System.Xaml.XamlLanguage.Int64
  - System.Xaml.XamlLanguage.Items
  - System.Xaml.XamlLanguage.Key
  - System.Xaml.XamlLanguage.Lang
  - System.Xaml.XamlLanguage.Member
  - System.Xaml.XamlLanguage.Members
  - System.Xaml.XamlLanguage.Name
  - System.Xaml.XamlLanguage.Null
  - System.Xaml.XamlLanguage.Object
  - System.Xaml.XamlLanguage.PositionalParameters
  - System.Xaml.XamlLanguage.Property
  - System.Xaml.XamlLanguage.Reference
  - System.Xaml.XamlLanguage.Shared
  - System.Xaml.XamlLanguage.Single
  - System.Xaml.XamlLanguage.Space
  - System.Xaml.XamlLanguage.Static
  - System.Xaml.XamlLanguage.String
  - System.Xaml.XamlLanguage.Subclass
  - System.Xaml.XamlLanguage.SynchronousMode
  - System.Xaml.XamlLanguage.TimeSpan
  - System.Xaml.XamlLanguage.Type
  - System.Xaml.XamlLanguage.TypeArguments
  - System.Xaml.XamlLanguage.Uid
  - System.Xaml.XamlLanguage.UnknownContent
  - System.Xaml.XamlLanguage.Uri
  - System.Xaml.XamlLanguage.Xaml2006Namespace
  - System.Xaml.XamlLanguage.XamlNamespaces
  - System.Xaml.XamlLanguage.XData
  - System.Xaml.XamlLanguage.Xml1998Namespace
  - System.Xaml.XamlLanguage.XmlNamespaces
  langs:
  - csharp
  name: XamlLanguage
  nameWithType: XamlLanguage
  fullName: System.Xaml.XamlLanguage
  type: Class
  summary: "문자열 또는 XAML 형식 프로그래밍 또는 XAML 태그에 대 한 유용한 개체를 제공 하는 상수를 정의 합니다. 이러한 문자열 또는 개체에는.NET Framework XAML 서비스에서 XAML 언어 개념의 구현에 XAML 언어 개념 또는 둘 다에 적용 됩니다."
  remarks: "XamlLanguage API 내부 남아 있는 XAML 스키마 컨텍스트를 기반으로 하는 조회 결과 반환 합니다. 이 스키마 컨텍스트에서 <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>은 `true`.</xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A> 그렇지 않은 경우 기본적으로.NET Framework XAML 서비스 정의 된 XAML 판독기 및 XAML 작성기에 대 한 보고 되는 XAML 스키마 컨텍스트는 기본 설정을 사용 합니다. 미리 정의 된 XAML 판독기 및 XAML 작성기에 사용 되는 XAML 스키마 컨텍스트 기반 전반적으로 동일한 <xref:System.Xaml.XamlSchemaContext>인스턴스를 설정 하는 하거나에 <xref:System.Xaml.XamlSchemaContext>.</xref:System.Xaml.XamlSchemaContext> 를 반환 하는 Api에서 사용할 수 있는 것</xref:System.Xaml.XamlSchemaContext> 으로 .NET Framework XAML 서비스에 대 한 기본 XAML 스키마 컨텍스트 CLR 개념과 리플렉션을 기반으로 합니다. a <xref:System.Xaml.XamlType> <xref:System.Xaml.XamlType.UnderlyingType%2A>.</xref:System.Xaml.XamlType.UnderlyingType%2A> 확인할 때 및</xref:System.Xaml.XamlType> 특정 XamlLanguage 속성을 가져올 때 기본 CLR 지원의 증명 정보를 찾을 수 있습니다. 마찬가지로, <xref:System.Xaml.XamlMember> <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</xref:System.Xaml.XamlMember.UnderlyingMember%2A> CLR 리플렉션 기반 값이 있는</xref:System.Xaml.XamlMember> 있는 XamlLanguage 속성"
  syntax:
    content: public static class XamlLanguage
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.AllDirectives
  id: AllDirectives
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: AllDirectives
  nameWithType: XamlLanguage.AllDirectives
  fullName: System.Xaml.XamlLanguage.AllDirectives
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "각 읽기 전용 제네릭 컬렉션을 가져옵니다 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> .NET Framework XAML 서비스에서 정의 된 식별자입니다."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<System.Xaml.XamlDirective> AllDirectives { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Xaml.XamlDirective}
      description: "각 읽기 전용 제네릭 컬렉션 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> .NET Framework XAML 서비스에서 정의 된 식별자입니다."
  overload: System.Xaml.XamlLanguage.AllDirectives*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.AllTypes
  id: AllTypes
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: AllTypes
  nameWithType: XamlLanguage.AllTypes
  fullName: System.Xaml.XamlLanguage.AllTypes
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "개인의 읽기 전용 제네릭 컬렉션을 가져옵니다 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> , 일치 하는 값 또는 별칭,.NET Framework XAML 서비스에서 정의 된 내장 XAML 언어입니다."
  remarks: "참조 [ \\[MS-XAML\\] 5.2 항](http://go.microsoft.com/fwlink/?LinkId=114525) 내장 XAML 언어 정보 항목의 목록에 대 한 합니다. Note 5.2 하위 섹션으로 나열 된 모든 항목에 <xref:System.Xaml.XamlType>.</xref:System.Xaml.XamlType> 로 구현 됩니다 예를 들어 `x:Code` 형식이 아닙니다."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<System.Xaml.XamlType> AllTypes { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Xaml.XamlType}
      description: "각 읽기 전용 제네릭 컬렉션 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 내장 XAML 언어와 일치 하 합니다."
  overload: System.Xaml.XamlLanguage.AllTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Arguments
  id: Arguments
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Arguments
  nameWithType: XamlLanguage.Arguments
  fullName: System.Xaml.XamlLanguage.Arguments
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Arguments&quot; name=&quot;Arguments&quot; href=&quot;&quot;> </xref> 의 팩터리 메서드 또는 제네릭 사용 합니다."
  remarks: "팩터리 메서드는 [!INCLUDE[xaml2009](~/add/includes/xaml2009-md.md)] 는 XAML 형식의 기본 형식을 구성 하는 다른 방법 식별 하기 위한 기능입니다. `Arguments` 팩터리 메서드가 입력을 지정 하 고 태그에 해당 정보를 지정 하도록 설정 합니다. 기본 기술은 팩터리 메서드가 없는 기본 생성자를 찾으려고 시도 하 고 다음 형식, 멤버 또는 대상 형식에 대 한 식별 된 형식 변환기를 찾으려고 시도 하는 있습니다.       제네릭 사용에 대 한는 `Arguments` 개체 또는 필요에 따라 지정 된 모든 생성 입력의 초기화 텍스트를 래핑하는 `TypeArguments`합니다."
  syntax:
    content: public static System.Xaml.XamlDirective Arguments { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Arguments&quot; name=&quot;Arguments&quot; href=&quot;&quot;> </xref> 의 팩터리 메서드 또는 제네릭 사용 합니다."
  overload: System.Xaml.XamlLanguage.Arguments*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Array
  id: Array
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Array
  nameWithType: XamlLanguage.Array
  fullName: System.Xaml.XamlLanguage.Array
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Array&quot; name=&quot;Array&quot; href=&quot;&quot;> </xref> 내장 XAML 언어입니다."
  remarks: "참조 [ \\[MS-XAML\\] 섹션 5.2.18](http://go.microsoft.com/fwlink/?LinkId=114525)합니다."
  syntax:
    content: public static System.Xaml.XamlType Array { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Array&quot; name=&quot;Array&quot; href=&quot;&quot;> </xref> 내장 XAML 언어입니다."
  overload: System.Xaml.XamlLanguage.Array*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.AsyncRecords
  id: AsyncRecords
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: AsyncRecords
  nameWithType: XamlLanguage.AsyncRecords
  fullName: System.Xaml.XamlLanguage.AsyncRecords
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_AsyncRecords&quot; name=&quot;AsyncRecords&quot; href=&quot;&quot;> </xref> 의사 멤버입니다."
  remarks: "`AsyncRecords` 개념의 일부인 [!INCLUDE[xaml2009](~/add/includes/xaml2009-md.md)]합니다. 참조 [XAML 2009 언어 기능](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public static System.Xaml.XamlDirective AsyncRecords { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_AsyncRecords&quot; name=&quot;AsyncRecords&quot; href=&quot;&quot;> </xref> 의사 멤버입니다."
  overload: System.Xaml.XamlLanguage.AsyncRecords*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Base
  id: Base
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Base
  nameWithType: XamlLanguage.Base
  fullName: System.Xaml.XamlLanguage.Base
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_base&quot; name=&quot;base&quot; href=&quot;&quot;> </xref> XML에서 지시문입니다."
  remarks: "참조 [ \\[MS-XAML\\] 5.3.15 섹션](http://go.microsoft.com/fwlink/?LinkId=114525)합니다."
  syntax:
    content: public static System.Xaml.XamlDirective Base { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_base&quot; name=&quot;base&quot; href=&quot;&quot;> </xref> XML에서 지시문입니다."
  overload: System.Xaml.XamlLanguage.Base*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Boolean
  id: Boolean
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Boolean
  nameWithType: XamlLanguage.Boolean
  fullName: System.Xaml.XamlLanguage.Boolean
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> 내장 XAML 언어입니다."
  remarks: "참조 [ \\[MS-XAML\\] 섹션 5.2.17](http://go.microsoft.com/fwlink/?LinkId=114525)합니다."
  syntax:
    content: public static System.Xaml.XamlType Boolean { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> 내장 XAML 언어입니다."
  overload: System.Xaml.XamlLanguage.Boolean*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Byte
  id: Byte
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Byte
  nameWithType: XamlLanguage.Byte
  fullName: System.Xaml.XamlLanguage.Byte
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Byte&quot; name=&quot;Byte&quot; href=&quot;&quot;> </xref> 내장 XAML 언어입니다."
  remarks: "참조 [ \\[MS-XAML\\] 섹션 5.2.10](http://go.microsoft.com/fwlink/?LinkId=114525)합니다."
  syntax:
    content: public static System.Xaml.XamlType Byte { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Byte&quot; name=&quot;Byte&quot; href=&quot;&quot;> </xref> 내장 XAML 언어입니다."
  overload: System.Xaml.XamlLanguage.Byte*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Char
  id: Char
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Char
  nameWithType: XamlLanguage.Char
  fullName: System.Xaml.XamlLanguage.Char
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> 내장 XAML 언어입니다."
  remarks: "참조 [ \\[MS-XAML\\] 섹션 5.2.7](http://go.microsoft.com/fwlink/?LinkId=114525)합니다."
  syntax:
    content: public static System.Xaml.XamlType Char { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> 내장 XAML 언어입니다."
  overload: System.Xaml.XamlLanguage.Char*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Class
  id: Class
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Class
  nameWithType: XamlLanguage.Class
  fullName: System.Xaml.XamlLanguage.Class
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Class&quot; name=&quot;Class&quot; href=&quot;&quot;> </xref> xaml에서 지시문입니다."
  remarks: "참조 [ \\[MS-XAML\\] 5.3.7 섹션](http://go.microsoft.com/fwlink/?LinkId=114525)합니다."
  syntax:
    content: public static System.Xaml.XamlDirective Class { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Class&quot; name=&quot;Class&quot; href=&quot;&quot;> </xref> xaml에서 지시문입니다."
  overload: System.Xaml.XamlLanguage.Class*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.ClassAttributes
  id: ClassAttributes
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: ClassAttributes
  nameWithType: XamlLanguage.ClassAttributes
  fullName: System.Xaml.XamlLanguage.ClassAttributes
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_ClassAttributes&quot; name=&quot;ClassAttributes&quot; href=&quot;&quot;> </xref> xaml에서 지시문입니다."
  remarks: "이 지시문의 일부인 [!INCLUDE[xaml2009](~/add/includes/xaml2009-md.md)]합니다. 참조 [XAML 2009 언어 기능](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public static System.Xaml.XamlDirective ClassAttributes { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_ClassAttributes&quot; name=&quot;ClassAttributes&quot; href=&quot;&quot;> </xref> xaml에서 지시문입니다."
  overload: System.Xaml.XamlLanguage.ClassAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.ClassModifier
  id: ClassModifier
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: ClassModifier
  nameWithType: XamlLanguage.ClassModifier
  fullName: System.Xaml.XamlLanguage.ClassModifier
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_ClassModifier&quot; name=&quot;ClassModifier&quot; href=&quot;&quot;> </xref> xaml에서 지시문입니다."
  remarks: "참조 [ \\[MS-XAML\\] 5.3.9 섹션](http://go.microsoft.com/fwlink/?LinkId=114525)합니다."
  syntax:
    content: public static System.Xaml.XamlDirective ClassModifier { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_ClassModifier&quot; name=&quot;ClassModifier&quot; href=&quot;&quot;> </xref> xaml에서 지시문입니다."
  overload: System.Xaml.XamlLanguage.ClassModifier*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Code
  id: Code
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Code
  nameWithType: XamlLanguage.Code
  fullName: System.Xaml.XamlLanguage.Code
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한 <xref uid=&quot;langword_csharp_Code&quot; name=&quot;Code&quot; href=&quot;&quot;> </xref> [MS XAML]에 설명 된 대로 합니다."
  remarks: "그러나 참조 [ \\[MS-XAML\\] 섹션 5.2.22](http://go.microsoft.com/fwlink/?LinkId=114525)여기서 `Code` 는 형식으로 표시 됩니다 `Code` 으로 제공 되는 <xref:System.Xaml.XamlDirective>이 API에 의해.</xref:System.Xaml.XamlDirective>"
  syntax:
    content: public static System.Xaml.XamlDirective Code { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한 <xref uid=&quot;langword_csharp_Code&quot; name=&quot;Code&quot; href=&quot;&quot;> </xref> [MS XAML]에 설명 된 대로 합니다."
  overload: System.Xaml.XamlLanguage.Code*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.ConnectionId
  id: ConnectionId
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: ConnectionId
  nameWithType: XamlLanguage.ConnectionId
  fullName: System.Xaml.XamlLanguage.ConnectionId
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 배선 이벤트 처리기에 대 한 연결 지점을 식별 하는 합니다."
  syntax:
    content: public static System.Xaml.XamlDirective ConnectionId { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 배선 이벤트 처리기에 대 한 연결 지점을 식별 하는 합니다."
  overload: System.Xaml.XamlLanguage.ConnectionId*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Decimal
  id: Decimal
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Decimal
  nameWithType: XamlLanguage.Decimal
  fullName: System.Xaml.XamlLanguage.Decimal
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Decimal&quot; name=&quot;Decimal&quot; href=&quot;&quot;> </xref> 내장 XAML 언어입니다."
  remarks: "참조 [ \\[MS-XAML\\] 섹션 5.2.14](http://go.microsoft.com/fwlink/?LinkId=114525)합니다."
  syntax:
    content: public static System.Xaml.XamlType Decimal { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Decimal&quot; name=&quot;Decimal&quot; href=&quot;&quot;> </xref> 내장 XAML 언어입니다."
  overload: System.Xaml.XamlLanguage.Decimal*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Double
  id: Double
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Double
  nameWithType: XamlLanguage.Double
  fullName: System.Xaml.XamlLanguage.Double
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 내장 XAML 언어입니다."
  remarks: "참조 [ \\[MS-XAML\\] 섹션 5.2.9](http://go.microsoft.com/fwlink/?LinkId=114525)합니다."
  syntax:
    content: public static System.Xaml.XamlType Double { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 내장 XAML 언어입니다."
  overload: System.Xaml.XamlLanguage.Double*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.FactoryMethod
  id: FactoryMethod
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: FactoryMethod
  nameWithType: XamlLanguage.FactoryMethod
  fullName: System.Xaml.XamlLanguage.FactoryMethod
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> XAML에 대 한 팩터리 메서드를 식별 하는 합니다."
  remarks: "팩터리 메서드는 [!INCLUDE[xaml2009](~/add/includes/xaml2009-md.md)] 는 XAML 형식의 기본 형식을 구성 하는 다른 방법 식별 하기 위한 기능입니다. 팩터리 메서드를 사용할 수 없는 경우 기본 기술을를 다음 형식, 멤버 또는 대상 형식에 대해 확인 된 형식 변환기를 찾으려고 시도 하 고 기본 생성자를 찾은 경우"
  syntax:
    content: public static System.Xaml.XamlDirective FactoryMethod { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> XAML에 대 한 팩터리 메서드를 식별 하는 합니다."
  overload: System.Xaml.XamlLanguage.FactoryMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.FieldModifier
  id: FieldModifier
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: FieldModifier
  nameWithType: XamlLanguage.FieldModifier
  fullName: System.Xaml.XamlLanguage.FieldModifier
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_FieldModifier&quot; name=&quot;FieldModifier&quot; href=&quot;&quot;> </xref> xaml에서 지시문입니다."
  remarks: "참조 [ \\[MS-XAML\\] 5.3.10 섹션](http://go.microsoft.com/fwlink/?LinkId=114525)합니다."
  syntax:
    content: public static System.Xaml.XamlDirective FieldModifier { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_FieldModifier&quot; name=&quot;FieldModifier&quot; href=&quot;&quot;> </xref> xaml에서 지시문입니다."
  overload: System.Xaml.XamlLanguage.FieldModifier*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Initialization
  id: Initialization
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Initialization
  nameWithType: XamlLanguage.Initialization
  fullName: System.Xaml.XamlLanguage.Initialization
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Initialization&quot; name=&quot;Initialization&quot; href=&quot;&quot;> </xref> xaml에서 지시문입니다."
  remarks: "This directive represents the XAML node or XAML information set representation of initialization text, where a string within an object element supplies the type construction information for the surrounding object element.  \n  \n If you are looking at raw node interpretations or visualizations, `Initialization` is sometimes seen in string form as `_Initialization` (note the leading underscore) and is within the XAML language XAML namespace (as notated by a preceding `Namespace` node). In [MS-XAML], this concept is described under the heading `x:InitializationText`. See [\\[MS-XAML\\] Section 5.3.3](http://go.microsoft.com/fwlink/?LinkId=114525)."
  syntax:
    content: public static System.Xaml.XamlDirective Initialization { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Initialization&quot; name=&quot;Initialization&quot; href=&quot;&quot;> </xref> xaml에서 지시문입니다."
  overload: System.Xaml.XamlLanguage.Initialization*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Int16
  id: Int16
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Int16
  nameWithType: XamlLanguage.Int16
  fullName: System.Xaml.XamlLanguage.Int16
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Int16&quot; name=&quot;Int16&quot; href=&quot;&quot;> </xref> 내장 XAML 언어입니다."
  remarks: "참조 [ \\[MS-XAML\\] 섹션 5.2.11](http://go.microsoft.com/fwlink/?LinkId=114525)합니다."
  syntax:
    content: public static System.Xaml.XamlType Int16 { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Int16&quot; name=&quot;Int16&quot; href=&quot;&quot;> </xref> 내장 XAML 언어입니다."
  overload: System.Xaml.XamlLanguage.Int16*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Int32
  id: Int32
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Int32
  nameWithType: XamlLanguage.Int32
  fullName: System.Xaml.XamlLanguage.Int32
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Int32&quot; name=&quot;Int32&quot; href=&quot;&quot;> </xref> 내장 XAML 언어입니다."
  remarks: "참조 [ \\[MS-XAML\\] 섹션 5.2.12](http://go.microsoft.com/fwlink/?LinkId=114525)합니다."
  syntax:
    content: public static System.Xaml.XamlType Int32 { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Int32&quot; name=&quot;Int32&quot; href=&quot;&quot;> </xref> 내장 XAML 언어입니다."
  overload: System.Xaml.XamlLanguage.Int32*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Int64
  id: Int64
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Int64
  nameWithType: XamlLanguage.Int64
  fullName: System.Xaml.XamlLanguage.Int64
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Int64&quot; name=&quot;Int64&quot; href=&quot;&quot;> </xref> 내장 XAML 언어입니다."
  remarks: "참조 [ \\[MS-XAML\\] 섹션 5.2.13](http://go.microsoft.com/fwlink/?LinkId=114525)합니다."
  syntax:
    content: public static System.Xaml.XamlType Int64 { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Int64&quot; name=&quot;Int64&quot; href=&quot;&quot;> </xref> 내장 XAML 언어입니다."
  overload: System.Xaml.XamlLanguage.Int64*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Items
  id: Items
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Items
  nameWithType: XamlLanguage.Items
  fullName: System.Xaml.XamlLanguage.Items
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Items&quot; name=&quot;Items&quot; href=&quot;&quot;> </xref> xaml에서 지시문입니다."
  remarks: "An `Items` directive is a node representation wrapper around multiple object values within a surrounding object. See [\\[MS-XAML\\] Section 5.3.1](http://go.microsoft.com/fwlink/?LinkId=114525).  \n  \n If you examine raw XAML node stream interpretations or visualizations, `Items` is sometimes seen in string form as `_Items` (note the leading underscore) and is within the XAML language XAML namespace (as notated by a preceding `Namespace` node)."
  syntax:
    content: public static System.Xaml.XamlDirective Items { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Items&quot; name=&quot;Items&quot; href=&quot;&quot;> </xref> xaml에서 지시문입니다."
  overload: System.Xaml.XamlLanguage.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Key
  id: Key
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Key
  nameWithType: XamlLanguage.Key
  fullName: System.Xaml.XamlLanguage.Key
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Key&quot; name=&quot;Key&quot; href=&quot;&quot;> </xref> xaml에서 지시문입니다."
  remarks: "A `Key` 지시문 사전에 있는 개체에 사용 됩니다. 참조 [ \\[MS-XAML\\] 5.3.5 섹션](http://go.microsoft.com/fwlink/?LinkId=114525)합니다."
  syntax:
    content: public static System.Xaml.XamlDirective Key { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Key&quot; name=&quot;Key&quot; href=&quot;&quot;> </xref> xaml에서 지시문입니다."
  overload: System.Xaml.XamlLanguage.Key*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Lang
  id: Lang
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Lang
  nameWithType: XamlLanguage.Lang
  fullName: System.Xaml.XamlLanguage.Lang
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_lang&quot; name=&quot;lang&quot; href=&quot;&quot;> </xref> XML에서 지시문입니다."
  remarks: "참조 [ \\[MS-XAML\\] 5.3.13 섹션](http://go.microsoft.com/fwlink/?LinkId=114525)합니다."
  syntax:
    content: public static System.Xaml.XamlDirective Lang { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_lang&quot; name=&quot;lang&quot; href=&quot;&quot;> </xref> XML에서 지시문입니다."
  overload: System.Xaml.XamlLanguage.Lang*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Member
  id: Member
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Member
  nameWithType: XamlLanguage.Member
  fullName: System.Xaml.XamlLanguage.Member
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> <xref:System.Xaml.XamlLanguage.Members*>안내 하십시오.</xref:System.Xaml.XamlLanguage.Members*> 항목 형식이 형식에 대 한"
  remarks: ".NET Framework XAML 서비스 구현에는 `Member` <xref:System.Xaml.XamlType> <xref:System.Windows.Markup.MemberDefinition?displayProperty=fullName>.</xref:System.Windows.Markup.MemberDefinition?displayProperty=fullName> 받으며</xref:System.Xaml.XamlType>"
  syntax:
    content: public static System.Xaml.XamlType Member { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref> <xref:System.Xaml.XamlLanguage.Members*>안내 하십시오.</xref:System.Xaml.XamlLanguage.Members*> 항목 형식이 형식에 대 한"
  overload: System.Xaml.XamlLanguage.Member*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Members
  id: Members
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Members
  nameWithType: XamlLanguage.Members
  fullName: System.Xaml.XamlLanguage.Members
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Members&quot; name=&quot;Members&quot; href=&quot;&quot;> </xref> XAML의 개념입니다."
  remarks: "`Members` 개념 [MS XAML]에 구체적으로 정의 되지 않았습니다. `Members`지원 형식을 참조 하는 대신 자체를 태그에서 형식의 멤버를 정의 하기 위한 개념입니다. 자세한 내용은 <xref:System.Windows.Markup.PropertyDefinition>.</xref:System.Windows.Markup.PropertyDefinition> 을 참조 하십시오."
  syntax:
    content: public static System.Xaml.XamlDirective Members { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Members&quot; name=&quot;Members&quot; href=&quot;&quot;> </xref> XAML의 개념입니다."
  overload: System.Xaml.XamlLanguage.Members*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Name
  id: Name
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Name
  nameWithType: XamlLanguage.Name
  fullName: System.Xaml.XamlLanguage.Name
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;> </xref> xaml에서 지시문입니다."
  remarks: "A `Name` directive is used for identifiers of objects in markup. See [\\[MS-XAML\\] Section 5.3.4](http://go.microsoft.com/fwlink/?LinkId=114525).  \n  \n Although this concept of `Name` is not completely consistent with the use that is specified in [MS-XAML], you can typically use the `Name` directive or the `Name` attribute to provide a conceptual connection between XAML objects in markup and the run-time representations that are created by XAML processing of the markup. This use depends on how specific frameworks implement their programming models to integrate XAML into their general object models. For more information, see [x:Name Directive](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.Xaml.XamlDirective Name { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;> </xref> xaml에서 지시문입니다."
  overload: System.Xaml.XamlLanguage.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Null
  id: "Null"
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: "Null"
  nameWithType: XamlLanguage.Null
  fullName: System.Xaml.XamlLanguage.Null
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Null&quot; name=&quot;Null&quot; href=&quot;&quot;> </xref> 또는 <xref uid=&quot;langword_csharp_NullExtension&quot; name=&quot;NullExtension&quot; href=&quot;&quot;> </xref> 내장 XAML 언어입니다."
  remarks: "이 XAML 형식 태그에서 개체 값에 대 한 null 값을 제공합니다. XAML 형식 (또는 있어야)에 할당할 수 `MarkupExtension`합니다. 참조 [ \\[MS-XAML\\] 5.2.4 섹션](http://go.microsoft.com/fwlink/?LinkId=114525)합니다."
  syntax:
    content: public static System.Xaml.XamlType Null { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;></xref> for the <xref uid=&quot;langword_csharp_Null&quot; name=&quot;Null&quot; href=&quot;&quot;></xref>/<xref uid=&quot;langword_csharp_NullExtension&quot; name=&quot;NullExtension&quot; href=&quot;&quot;></xref> XAML language intrinsic."
  overload: System.Xaml.XamlLanguage.Null*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Object
  id: Object
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Object
  nameWithType: XamlLanguage.Object
  fullName: System.Xaml.XamlLanguage.Object
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> XAML 언어 개념입니다."
  remarks: "XAML 지정 `x:Object` 특수 언어 개념으로 합니다. 참조 [ \\[MS-XAML\\] 5.2.5 섹션](http://go.microsoft.com/fwlink/?LinkId=114525)합니다."
  syntax:
    content: public static System.Xaml.XamlType Object { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> XAML 언어 개념입니다."
  overload: System.Xaml.XamlLanguage.Object*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.PositionalParameters
  id: PositionalParameters
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: PositionalParameters
  nameWithType: XamlLanguage.PositionalParameters
  fullName: System.Xaml.XamlLanguage.PositionalParameters
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_PositionalParameters&quot; name=&quot;PositionalParameters&quot; href=&quot;&quot;> </xref> xaml에서 지시문입니다."
  remarks: "`PositionalParameters` is a directive that wraps the multiple objects that can be specified as a set of object nodes for input of a markup extension. See [\\[MS-XAML\\] Section 6.6.7](http://go.microsoft.com/fwlink/?LinkId=114525).  \n  \n If you are looking at raw node interpretations or visualizations, `PositionalParameters` is sometimes seen in string form as `_PositionalParameters` (note the leading underscore) and is within the XAML language XAML namespace (as notated by a preceding `Namespace` node)."
  syntax:
    content: public static System.Xaml.XamlDirective PositionalParameters { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_PositionalParameters&quot; name=&quot;PositionalParameters&quot; href=&quot;&quot;> </xref> xaml에서 지시문입니다."
  overload: System.Xaml.XamlLanguage.PositionalParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Property
  id: Property
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Property
  nameWithType: XamlLanguage.Property
  fullName: System.Xaml.XamlLanguage.Property
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Property&quot; name=&quot;Property&quot; href=&quot;&quot;> </xref> XAML의 개념입니다."
  remarks: '`Property`가 특수 한 형태의 <xref:System.Xaml.XamlLanguage.Member%2A>.</xref:System.Xaml.XamlLanguage.Member%2A> 로 식별 되는 XAML 형식'
  syntax:
    content: public static System.Xaml.XamlType Property { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Property&quot; name=&quot;Property&quot; href=&quot;&quot;> </xref> XAML의 개념입니다."
  overload: System.Xaml.XamlLanguage.Property*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Reference
  id: Reference
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Reference
  nameWithType: XamlLanguage.Reference
  fullName: System.Xaml.XamlLanguage.Reference
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 나타내는 <xref uid=&quot;langword_csharp_Reference&quot; name=&quot;Reference&quot; href=&quot;&quot;> </xref> XAML에 대 한 합니다."
  remarks: '`Reference`이 [!INCLUDE[xaml2009](~/add/includes/xaml2009-md.md)] 태그의 다른 개체 노드를 참조 하기 위한 기능입니다. .NET Framework XAML 서비스에 대 한 구현은 <xref:System.Windows.Markup.Reference?displayProperty=fullName>.</xref:System.Windows.Markup.Reference?displayProperty=fullName> 에 있습니다.'
  syntax:
    content: public static System.Xaml.XamlType Reference { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 나타내는 <xref uid=&quot;langword_csharp_Reference&quot; name=&quot;Reference&quot; href=&quot;&quot;> </xref> XAML에 대 한 합니다."
  overload: System.Xaml.XamlLanguage.Reference*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Shared
  id: Shared
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Shared
  nameWithType: XamlLanguage.Shared
  fullName: System.Xaml.XamlLanguage.Shared
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Shared&quot; name=&quot;Shared&quot; href=&quot;&quot;> </xref> XAML에 대 한 지시문입니다."
  remarks: "A `Shared` 지시문 (로 설정 된 경우 `true`) 사전에 항목을 찾으면 개체에 대 한 참조가 항상 반환할지 여부를 단일 새 인스턴스를 대신 지정 합니다. 이 문제는 사전 XAML을 사용 하는 특정 프레임 워크에서 공유 콘텐츠 또는 템플릿 메커니즘에 대 한 원본으로 사용 될 수 있다는 개념 관련이 있습니다. `Shared`[MS XAML]에 지정 되어 있지 않지만의 일부는 `x` WPF 및.NET Framework에 XAML에 대 한 네임 스페이스에서 정의 된 동작 버전 3.0 및 3.5 버전입니다."
  syntax:
    content: public static System.Xaml.XamlDirective Shared { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Shared&quot; name=&quot;Shared&quot; href=&quot;&quot;> </xref> XAML에 대 한 지시문입니다."
  overload: System.Xaml.XamlLanguage.Shared*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Single
  id: Single
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Single
  nameWithType: XamlLanguage.Single
  fullName: System.Xaml.XamlLanguage.Single
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Single&quot; name=&quot;Single&quot; href=&quot;&quot;> </xref> 내장 XAML 언어입니다."
  remarks: "참조 [ \\[MS-XAML\\] 섹션 5.2.8](http://go.microsoft.com/fwlink/?LinkId=114525)합니다."
  syntax:
    content: public static System.Xaml.XamlType Single { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Single&quot; name=&quot;Single&quot; href=&quot;&quot;> </xref> 내장 XAML 언어입니다."
  overload: System.Xaml.XamlLanguage.Single*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Space
  id: Space
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Space
  nameWithType: XamlLanguage.Space
  fullName: System.Xaml.XamlLanguage.Space
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_space&quot; name=&quot;space&quot; href=&quot;&quot;> </xref> XML에서 지시문입니다."
  remarks: "참조 [ \\[MS-XAML\\] 5.3.14 섹션](http://go.microsoft.com/fwlink/?LinkId=114525)합니다."
  syntax:
    content: public static System.Xaml.XamlDirective Space { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_space&quot; name=&quot;space&quot; href=&quot;&quot;> </xref> XML에서 지시문입니다."
  overload: System.Xaml.XamlLanguage.Space*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Static
  id: Static
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Static
  nameWithType: XamlLanguage.Static
  fullName: System.Xaml.XamlLanguage.Static
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Static&quot; name=&quot;Static&quot; href=&quot;&quot;> </xref> / <xref uid=&quot;langword_csharp_StaticExtension&quot; name=&quot;StaticExtension&quot; href=&quot;&quot;> </xref> 내장 XAML 언어입니다."
  remarks: "이 XAML 형식을 지원 멤버가 메서드는 정적 멤버 태그에 대 한 값을 제공 합니다. XAML 형식 (또는 있어야)에 할당할 수 `MarkupExtension`합니다. 참조 [ \\[MS-XAML\\] 5.2.2 섹션](http://go.microsoft.com/fwlink/?LinkId=114525)합니다."
  syntax:
    content: public static System.Xaml.XamlType Static { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;></xref> for the <xref uid=&quot;langword_csharp_Static&quot; name=&quot;Static&quot; href=&quot;&quot;></xref>/<xref uid=&quot;langword_csharp_StaticExtension&quot; name=&quot;StaticExtension&quot; href=&quot;&quot;></xref> XAML language intrinsic."
  overload: System.Xaml.XamlLanguage.Static*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.String
  id: String
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: String
  nameWithType: XamlLanguage.String
  fullName: System.Xaml.XamlLanguage.String
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> 내장 XAML 언어입니다."
  remarks: "참조 [ \\[MS-XAML\\] 섹션 5.2.6](http://go.microsoft.com/fwlink/?LinkId=114525)합니다."
  syntax:
    content: public static System.Xaml.XamlType String { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> 내장 XAML 언어입니다."
  overload: System.Xaml.XamlLanguage.String*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Subclass
  id: Subclass
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Subclass
  nameWithType: XamlLanguage.Subclass
  fullName: System.Xaml.XamlLanguage.Subclass
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Subclass&quot; name=&quot;Subclass&quot; href=&quot;&quot;> </xref> xaml에서 지시문입니다."
  remarks: "참조 [ \\[MS-XAML\\] 5.3.8 섹션](http://go.microsoft.com/fwlink/?LinkId=114525)"
  syntax:
    content: public static System.Xaml.XamlDirective Subclass { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Subclass&quot; name=&quot;Subclass&quot; href=&quot;&quot;> </xref> xaml에서 지시문입니다."
  overload: System.Xaml.XamlLanguage.Subclass*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.SynchronousMode
  id: SynchronousMode
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: SynchronousMode
  nameWithType: XamlLanguage.SynchronousMode
  fullName: System.Xaml.XamlLanguage.SynchronousMode
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> XAML 프로세서에서 해당 모드를 지 원하는 경우 XAML을 비동기적으로 로드할 수 있도록 합니다."
  remarks: "A `SynchronousMode` 지시문 (로 설정 된 경우 `Async`) XAML 파일이 로드 될 때 루트 노드 먼저 처리 되도록 지정 하는 데 사용 됩니다. 해당 콘텐츠를 계속 처리 하는 경우에 결과 개체를 삽입할 수 있습니다. 이 모드에서는 루트로 최하위 노드에서 작업의 기본 XAML 처리 동작을 무시할 수 있습니다. XAML에 대 한 처리 논리가 기본적으로 루트 개체에 대 한 대기 중인 모든 호출자가 전체 구문 분석이 완료 될 때까지 차단 됩니다. `SynchronousMode`[MS XAML]에 지정 되어 있지 않지만의 일부는 `x` .NET Framework 버전 3.5 SP1 (또는 후속 서비스 팩)에서 시작 하는 WPF의에서 XAML에 대 한 네임 스페이스에서 정의 된 동작입니다."
  syntax:
    content: public static System.Xaml.XamlDirective SynchronousMode { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> XAML을 비동기적으로 로드할 수 있도록 합니다."
  overload: System.Xaml.XamlLanguage.SynchronousMode*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.TimeSpan
  id: TimeSpan
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: TimeSpan
  nameWithType: XamlLanguage.TimeSpan
  fullName: System.Xaml.XamlLanguage.TimeSpan
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_TimeSpan&quot; name=&quot;TimeSpan&quot; href=&quot;&quot;> </xref> XAML 언어의 개념입니다."
  remarks: "참조 [ \\[MS-XAML\\] 섹션 5.2.16](http://go.microsoft.com/fwlink/?LinkId=114525)합니다. `TimeSpan`가 true 내장 함수를 하지만 일반적으로 사용 되는 형식이 있기 때문에 XAML 사양에 지정 되었습니다. XAML 사양 작성자 했다고 간주 XAML 표현에서 파생 된 어휘를 표준화 하는 데 유용 합니다. 참고 항목 [일반 XAML 언어 기본 형식에 대 한 기본 제공 형식](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public static System.Xaml.XamlType TimeSpan { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_TimeSpan&quot; name=&quot;TimeSpan&quot; href=&quot;&quot;> </xref> XAML 언어 개념입니다."
  overload: System.Xaml.XamlLanguage.TimeSpan*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Type
  id: Type
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Type
  nameWithType: XamlLanguage.Type
  fullName: System.Xaml.XamlLanguage.Type
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref> / <xref uid=&quot;langword_csharp_TypeExtension&quot; name=&quot;TypeExtension&quot; href=&quot;&quot;> </xref> 내장 XAML 언어입니다."
  remarks: "이 XAML은 <xref:System.Xaml.XamlType>바인딩을 사용 하는 값 및 지원 형식 시스템을 조회 합니다.</xref:System.Xaml.XamlType> XAML 형식 (또는 있어야)에 할당할 수 `MarkupExtension`합니다. 참조 [ \\[MS-XAML\\] 5.2.3 섹션](http://go.microsoft.com/fwlink/?LinkId=114525)합니다."
  syntax:
    content: public static System.Xaml.XamlType Type { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;></xref> for the <xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;></xref>/<xref uid=&quot;langword_csharp_TypeExtension&quot; name=&quot;TypeExtension&quot; href=&quot;&quot;></xref> XAML language intrinsic."
  overload: System.Xaml.XamlLanguage.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.TypeArguments
  id: TypeArguments
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: TypeArguments
  nameWithType: XamlLanguage.TypeArguments
  fullName: System.Xaml.XamlLanguage.TypeArguments
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_TypeArguments&quot; name=&quot;TypeArguments&quot; href=&quot;&quot;> </xref> xaml에서 지시문입니다."
  remarks: "A `TypeArguments` 지시문 제네릭 XAML 개체 변수로 지정 된 경우의 제네릭 형식 제약 조건을 지정 합니다. 참조 [ \\[MS-XAML\\] 5.3.11 섹션](http://go.microsoft.com/fwlink/?LinkId=114525)합니다."
  syntax:
    content: public static System.Xaml.XamlDirective TypeArguments { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_TypeArguments&quot; name=&quot;TypeArguments&quot; href=&quot;&quot;> </xref> xaml에서 지시문입니다."
  overload: System.Xaml.XamlLanguage.TypeArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Uid
  id: Uid
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Uid
  nameWithType: XamlLanguage.Uid
  fullName: System.Xaml.XamlLanguage.Uid
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Uid&quot; name=&quot;Uid&quot; href=&quot;&quot;> </xref> xaml에서 지시문입니다."
  remarks: "A `Uid` 지시문 XAML 태그 요소에 대 한 고유 식별자를 지정 합니다. 엄격히 말해서, XAML 구현 프레임 워크 내에서 여러 목적에 고유 식별자를 적용할 수 있었습니다. `Uid`와 다른 `Name` 한다는 점에서 `Name` 반면 XAML 소스에서 개체 그래프 출력에 존재 하는 식별자를 선언 하기 위한 [MS XAML] 정의에 특정 역할을 `Uid` 특정 역할이 없습니다. 기존 XAML 구현 프레임 워크에서.NET Framework XAML 서비스를 사용 하는 `Uid` 지역화 하는 경우 일반적으로 사용 됩니다. 참조 [ \\[MS-XAML\\] 5.3.6 섹션](http://go.microsoft.com/fwlink/?LinkId=114525)합니다."
  syntax:
    content: public static System.Xaml.XamlDirective Uid { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Uid&quot; name=&quot;Uid&quot; href=&quot;&quot;> </xref> xaml에서 지시문입니다."
  overload: System.Xaml.XamlLanguage.Uid*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.UnknownContent
  id: UnknownContent
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: UnknownContent
  nameWithType: XamlLanguage.UnknownContent
  fullName: System.Xaml.XamlLanguage.UnknownContent
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_UnknownContent&quot; name=&quot;UnknownContent&quot; href=&quot;&quot;> </xref> xaml에서 지시문입니다."
  remarks: "`UnknownContent`XAML 노드는 판독기에서 알 수 없는 값 노드 내용을 발견 하는 경우 집합에 사용할 수 있는 기능 지시문 또는 초기화 텍스트 (변환할 수 있습니다 사용할 수 있는 내장 함수 또는 텍스트 구문 없음)입니다.       원시 노드 또는 시각화를 찾으려는 경우 `UnknownContent` 문자열 형태로 표시 `_UnknownContent` (선행 밑줄 참고) XAML 언어 XAML 네임 스페이스 내 (선행 하는 대로 `Namespace` 노드)."
  syntax:
    content: public static System.Xaml.XamlDirective UnknownContent { get; }
    return:
      type: System.Xaml.XamlDirective
      description: "A <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_UnknownContent&quot; name=&quot;UnknownContent&quot; href=&quot;&quot;> </xref> xaml에서 지시문입니다."
  overload: System.Xaml.XamlLanguage.UnknownContent*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Uri
  id: Uri
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Uri
  nameWithType: XamlLanguage.Uri
  fullName: System.Xaml.XamlLanguage.Uri
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Uri&quot; name=&quot;Uri&quot; href=&quot;&quot;> </xref> XAML 언어 개념입니다."
  remarks: "참조 [ \\[MS-XAML\\] 섹션 5.2.15](http://go.microsoft.com/fwlink/?LinkId=114525)합니다. `Uri`하지 자주 사용 되는 형식이 있기 때문에 true 내장 서로 XAML 사양에 지정 되었습니다. XAML 사양 작성자 했다고 간주 XAML 표현에서 파생 된 어휘를 표준화 하는 데 유용 합니다. 참고 항목 [일반 XAML 언어 기본 형식에 대 한 기본 제공 형식](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public static System.Xaml.XamlType Uri { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_Uri&quot; name=&quot;Uri&quot; href=&quot;&quot;> </xref> XAML 언어 개념입니다."
  overload: System.Xaml.XamlLanguage.Uri*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Xaml2006Namespace
  id: Xaml2006Namespace
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Xaml2006Namespace
  nameWithType: XamlLanguage.Xaml2006Namespace
  fullName: System.Xaml.XamlLanguage.Xaml2006Namespace
  type: Field
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "(2006) 언어 XAML 네임 스페이스를 식별 하는 문자열에 대 한 문자열 값을 가져옵니다. 해당 네임 스페이스에 정의 된 대로 &quot;x&quot; 접두사가 붙은 네임 스페이스는 XAML (2006)에 해당 [ \\[MS-XAML\\] 섹션 5.1.1](http://go.microsoft.com/fwlink/?LinkId=114525)합니다."
  syntax:
    content: public const string Xaml2006Namespace;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.XamlNamespaces
  id: XamlNamespaces
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: XamlNamespaces
  nameWithType: XamlLanguage.XamlNamespaces
  fullName: System.Xaml.XamlLanguage.XamlNamespaces
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "XAML에 대 한 네임 스페이스 식별자의 컬렉션을 가져옵니다."
  remarks: "현재이 컬렉션에만 포함 된 <xref:System.Xaml.XamlLanguage.Xaml2006Namespace>값.</xref:System.Xaml.XamlLanguage.Xaml2006Namespace>"
  syntax:
    content: public static System.Collections.Generic.IList<string> XamlNamespaces { get; }
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "XAML에 대 한 네임 스페이스 식별자의 컬렉션입니다."
  overload: System.Xaml.XamlLanguage.XamlNamespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.XData
  id: XData
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: XData
  nameWithType: XamlLanguage.XData
  fullName: System.Xaml.XamlLanguage.XData
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "가져옵니다는 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 백업 하는 XAML 형식에 대 한 프로그램 <xref uid=&quot;langword_csharp_XData&quot; name=&quot;XData&quot; href=&quot;&quot;> </xref> XAML의 블록입니다."
  syntax:
    content: public static System.Xaml.XamlType XData { get; }
    return:
      type: System.Xaml.XamlType
      description: "<xref href=&quot;System.Xaml.XamlType&quot;> </xref> 백업 하는 XAML 형식에 대 한 프로그램 <xref uid=&quot;langword_csharp_XData&quot; name=&quot;XData&quot; href=&quot;&quot;> </xref> 블록입니다. 참조 [ \\[MS-XAML\\] 5.2.23 섹션](http://go.microsoft.com/fwlink/?LinkId=114525)합니다."
  overload: System.Xaml.XamlLanguage.XData*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.Xml1998Namespace
  id: Xml1998Namespace
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: Xml1998Namespace
  nameWithType: XamlLanguage.Xml1998Namespace
  fullName: System.Xaml.XamlLanguage.Xml1998Namespace
  type: Field
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "XML (1998) 언어 네임 스페이스를 식별 하는 문자열에 대 한 문자열 값을 가져옵니다. 참조 되는 XML 네임 스페이스 접두사가 &quot;xml&quot;에 해당 하는 해당 네임 스페이스 [ \\[MS-XAML\\] 섹션 5.1.2](http://go.microsoft.com/fwlink/?LinkId=114525)합니다."
  syntax:
    content: public const string Xml1998Namespace;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlLanguage.XmlNamespaces
  id: XmlNamespaces
  parent: System.Xaml.XamlLanguage
  langs:
  - csharp
  name: XmlNamespaces
  nameWithType: XamlLanguage.XmlNamespaces
  fullName: System.Xaml.XamlLanguage.XmlNamespaces
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "XML에 대 한 네임 스페이스 식별자의 컬렉션을 가져옵니다."
  remarks: "현재이 컬렉션에만 포함 된 <xref:System.Xaml.XamlLanguage.Xml1998Namespace>값.</xref:System.Xaml.XamlLanguage.Xml1998Namespace>"
  syntax:
    content: public static System.Collections.Generic.IList<string> XmlNamespaces { get; }
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "XML에 대 한 네임 스페이스 식별자의 컬렉션입니다."
  overload: System.Xaml.XamlLanguage.XmlNamespaces*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xaml.XamlLanguage.AllDirectives
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: AllDirectives
  nameWithType: XamlLanguage.AllDirectives
  fullName: System.Xaml.XamlLanguage.AllDirectives
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Xaml.XamlDirective}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<XamlDirective>
  nameWithType: ReadOnlyCollection<XamlDirective>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Xaml.XamlDirective>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Xaml.XamlDirective>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlDirective
    name: XamlDirective
    nameWithType: XamlDirective
    fullName: XamlDirective
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlLanguage.AllTypes
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: AllTypes
  nameWithType: XamlLanguage.AllTypes
  fullName: System.Xaml.XamlLanguage.AllTypes
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Xaml.XamlType}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<XamlType>
  nameWithType: ReadOnlyCollection<XamlType>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Xaml.XamlType>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Xaml.XamlType>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlType
    name: XamlType
    nameWithType: XamlType
    fullName: XamlType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlLanguage.Arguments
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Arguments
  nameWithType: XamlLanguage.Arguments
  fullName: System.Xaml.XamlLanguage.Arguments
- uid: System.Xaml.XamlDirective
  parent: System.Xaml
  isExternal: false
  name: XamlDirective
  nameWithType: XamlDirective
  fullName: System.Xaml.XamlDirective
- uid: System.Xaml.XamlLanguage.Array
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Array
  nameWithType: XamlLanguage.Array
  fullName: System.Xaml.XamlLanguage.Array
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.XamlLanguage.AsyncRecords
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: AsyncRecords
  nameWithType: XamlLanguage.AsyncRecords
  fullName: System.Xaml.XamlLanguage.AsyncRecords
- uid: System.Xaml.XamlLanguage.Base
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Base
  nameWithType: XamlLanguage.Base
  fullName: System.Xaml.XamlLanguage.Base
- uid: System.Xaml.XamlLanguage.Boolean
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Boolean
  nameWithType: XamlLanguage.Boolean
  fullName: System.Xaml.XamlLanguage.Boolean
- uid: System.Xaml.XamlLanguage.Byte
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Byte
  nameWithType: XamlLanguage.Byte
  fullName: System.Xaml.XamlLanguage.Byte
- uid: System.Xaml.XamlLanguage.Char
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Char
  nameWithType: XamlLanguage.Char
  fullName: System.Xaml.XamlLanguage.Char
- uid: System.Xaml.XamlLanguage.Class
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Class
  nameWithType: XamlLanguage.Class
  fullName: System.Xaml.XamlLanguage.Class
- uid: System.Xaml.XamlLanguage.ClassAttributes
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: ClassAttributes
  nameWithType: XamlLanguage.ClassAttributes
  fullName: System.Xaml.XamlLanguage.ClassAttributes
- uid: System.Xaml.XamlLanguage.ClassModifier
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: ClassModifier
  nameWithType: XamlLanguage.ClassModifier
  fullName: System.Xaml.XamlLanguage.ClassModifier
- uid: System.Xaml.XamlLanguage.Code
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Code
  nameWithType: XamlLanguage.Code
  fullName: System.Xaml.XamlLanguage.Code
- uid: System.Xaml.XamlLanguage.ConnectionId
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: ConnectionId
  nameWithType: XamlLanguage.ConnectionId
  fullName: System.Xaml.XamlLanguage.ConnectionId
- uid: System.Xaml.XamlLanguage.Decimal
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Decimal
  nameWithType: XamlLanguage.Decimal
  fullName: System.Xaml.XamlLanguage.Decimal
- uid: System.Xaml.XamlLanguage.Double
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Double
  nameWithType: XamlLanguage.Double
  fullName: System.Xaml.XamlLanguage.Double
- uid: System.Xaml.XamlLanguage.FactoryMethod
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: FactoryMethod
  nameWithType: XamlLanguage.FactoryMethod
  fullName: System.Xaml.XamlLanguage.FactoryMethod
- uid: System.Xaml.XamlLanguage.FieldModifier
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: FieldModifier
  nameWithType: XamlLanguage.FieldModifier
  fullName: System.Xaml.XamlLanguage.FieldModifier
- uid: System.Xaml.XamlLanguage.Initialization
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Initialization
  nameWithType: XamlLanguage.Initialization
  fullName: System.Xaml.XamlLanguage.Initialization
- uid: System.Xaml.XamlLanguage.Int16
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Int16
  nameWithType: XamlLanguage.Int16
  fullName: System.Xaml.XamlLanguage.Int16
- uid: System.Xaml.XamlLanguage.Int32
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Int32
  nameWithType: XamlLanguage.Int32
  fullName: System.Xaml.XamlLanguage.Int32
- uid: System.Xaml.XamlLanguage.Int64
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Int64
  nameWithType: XamlLanguage.Int64
  fullName: System.Xaml.XamlLanguage.Int64
- uid: System.Xaml.XamlLanguage.Items
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Items
  nameWithType: XamlLanguage.Items
  fullName: System.Xaml.XamlLanguage.Items
- uid: System.Xaml.XamlLanguage.Key
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Key
  nameWithType: XamlLanguage.Key
  fullName: System.Xaml.XamlLanguage.Key
- uid: System.Xaml.XamlLanguage.Lang
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Lang
  nameWithType: XamlLanguage.Lang
  fullName: System.Xaml.XamlLanguage.Lang
- uid: System.Xaml.XamlLanguage.Member
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Member
  nameWithType: XamlLanguage.Member
  fullName: System.Xaml.XamlLanguage.Member
- uid: System.Xaml.XamlLanguage.Members
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Members
  nameWithType: XamlLanguage.Members
  fullName: System.Xaml.XamlLanguage.Members
- uid: System.Xaml.XamlLanguage.Name
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Name
  nameWithType: XamlLanguage.Name
  fullName: System.Xaml.XamlLanguage.Name
- uid: System.Xaml.XamlLanguage.Null
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: "Null"
  nameWithType: XamlLanguage.Null
  fullName: System.Xaml.XamlLanguage.Null
- uid: System.Xaml.XamlLanguage.Object
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Object
  nameWithType: XamlLanguage.Object
  fullName: System.Xaml.XamlLanguage.Object
- uid: System.Xaml.XamlLanguage.PositionalParameters
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: PositionalParameters
  nameWithType: XamlLanguage.PositionalParameters
  fullName: System.Xaml.XamlLanguage.PositionalParameters
- uid: System.Xaml.XamlLanguage.Property
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Property
  nameWithType: XamlLanguage.Property
  fullName: System.Xaml.XamlLanguage.Property
- uid: System.Xaml.XamlLanguage.Reference
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Reference
  nameWithType: XamlLanguage.Reference
  fullName: System.Xaml.XamlLanguage.Reference
- uid: System.Xaml.XamlLanguage.Shared
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Shared
  nameWithType: XamlLanguage.Shared
  fullName: System.Xaml.XamlLanguage.Shared
- uid: System.Xaml.XamlLanguage.Single
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Single
  nameWithType: XamlLanguage.Single
  fullName: System.Xaml.XamlLanguage.Single
- uid: System.Xaml.XamlLanguage.Space
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Space
  nameWithType: XamlLanguage.Space
  fullName: System.Xaml.XamlLanguage.Space
- uid: System.Xaml.XamlLanguage.Static
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Static
  nameWithType: XamlLanguage.Static
  fullName: System.Xaml.XamlLanguage.Static
- uid: System.Xaml.XamlLanguage.String
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: String
  nameWithType: XamlLanguage.String
  fullName: System.Xaml.XamlLanguage.String
- uid: System.Xaml.XamlLanguage.Subclass
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Subclass
  nameWithType: XamlLanguage.Subclass
  fullName: System.Xaml.XamlLanguage.Subclass
- uid: System.Xaml.XamlLanguage.SynchronousMode
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: SynchronousMode
  nameWithType: XamlLanguage.SynchronousMode
  fullName: System.Xaml.XamlLanguage.SynchronousMode
- uid: System.Xaml.XamlLanguage.TimeSpan
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: TimeSpan
  nameWithType: XamlLanguage.TimeSpan
  fullName: System.Xaml.XamlLanguage.TimeSpan
- uid: System.Xaml.XamlLanguage.Type
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Type
  nameWithType: XamlLanguage.Type
  fullName: System.Xaml.XamlLanguage.Type
- uid: System.Xaml.XamlLanguage.TypeArguments
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: TypeArguments
  nameWithType: XamlLanguage.TypeArguments
  fullName: System.Xaml.XamlLanguage.TypeArguments
- uid: System.Xaml.XamlLanguage.Uid
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Uid
  nameWithType: XamlLanguage.Uid
  fullName: System.Xaml.XamlLanguage.Uid
- uid: System.Xaml.XamlLanguage.UnknownContent
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: UnknownContent
  nameWithType: XamlLanguage.UnknownContent
  fullName: System.Xaml.XamlLanguage.UnknownContent
- uid: System.Xaml.XamlLanguage.Uri
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Uri
  nameWithType: XamlLanguage.Uri
  fullName: System.Xaml.XamlLanguage.Uri
- uid: System.Xaml.XamlLanguage.Xaml2006Namespace
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Xaml2006Namespace
  nameWithType: XamlLanguage.Xaml2006Namespace
  fullName: System.Xaml.XamlLanguage.Xaml2006Namespace
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xaml.XamlLanguage.XamlNamespaces
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: XamlNamespaces
  nameWithType: XamlLanguage.XamlNamespaces
  fullName: System.Xaml.XamlLanguage.XamlNamespaces
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlLanguage.XData
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: XData
  nameWithType: XamlLanguage.XData
  fullName: System.Xaml.XamlLanguage.XData
- uid: System.Xaml.XamlLanguage.Xml1998Namespace
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Xml1998Namespace
  nameWithType: XamlLanguage.Xml1998Namespace
  fullName: System.Xaml.XamlLanguage.Xml1998Namespace
- uid: System.Xaml.XamlLanguage.XmlNamespaces
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: XmlNamespaces
  nameWithType: XamlLanguage.XmlNamespaces
  fullName: System.Xaml.XamlLanguage.XmlNamespaces
- uid: System.Xaml.XamlLanguage.AllDirectives*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: AllDirectives
  nameWithType: XamlLanguage.AllDirectives
- uid: System.Xaml.XamlLanguage.AllTypes*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: AllTypes
  nameWithType: XamlLanguage.AllTypes
- uid: System.Xaml.XamlLanguage.Arguments*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Arguments
  nameWithType: XamlLanguage.Arguments
- uid: System.Xaml.XamlLanguage.Array*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Array
  nameWithType: XamlLanguage.Array
- uid: System.Xaml.XamlLanguage.AsyncRecords*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: AsyncRecords
  nameWithType: XamlLanguage.AsyncRecords
- uid: System.Xaml.XamlLanguage.Base*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Base
  nameWithType: XamlLanguage.Base
- uid: System.Xaml.XamlLanguage.Boolean*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Boolean
  nameWithType: XamlLanguage.Boolean
- uid: System.Xaml.XamlLanguage.Byte*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Byte
  nameWithType: XamlLanguage.Byte
- uid: System.Xaml.XamlLanguage.Char*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Char
  nameWithType: XamlLanguage.Char
- uid: System.Xaml.XamlLanguage.Class*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Class
  nameWithType: XamlLanguage.Class
- uid: System.Xaml.XamlLanguage.ClassAttributes*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: ClassAttributes
  nameWithType: XamlLanguage.ClassAttributes
- uid: System.Xaml.XamlLanguage.ClassModifier*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: ClassModifier
  nameWithType: XamlLanguage.ClassModifier
- uid: System.Xaml.XamlLanguage.Code*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Code
  nameWithType: XamlLanguage.Code
- uid: System.Xaml.XamlLanguage.ConnectionId*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: ConnectionId
  nameWithType: XamlLanguage.ConnectionId
- uid: System.Xaml.XamlLanguage.Decimal*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Decimal
  nameWithType: XamlLanguage.Decimal
- uid: System.Xaml.XamlLanguage.Double*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Double
  nameWithType: XamlLanguage.Double
- uid: System.Xaml.XamlLanguage.FactoryMethod*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: FactoryMethod
  nameWithType: XamlLanguage.FactoryMethod
- uid: System.Xaml.XamlLanguage.FieldModifier*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: FieldModifier
  nameWithType: XamlLanguage.FieldModifier
- uid: System.Xaml.XamlLanguage.Initialization*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Initialization
  nameWithType: XamlLanguage.Initialization
- uid: System.Xaml.XamlLanguage.Int16*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Int16
  nameWithType: XamlLanguage.Int16
- uid: System.Xaml.XamlLanguage.Int32*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Int32
  nameWithType: XamlLanguage.Int32
- uid: System.Xaml.XamlLanguage.Int64*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Int64
  nameWithType: XamlLanguage.Int64
- uid: System.Xaml.XamlLanguage.Items*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Items
  nameWithType: XamlLanguage.Items
- uid: System.Xaml.XamlLanguage.Key*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Key
  nameWithType: XamlLanguage.Key
- uid: System.Xaml.XamlLanguage.Lang*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Lang
  nameWithType: XamlLanguage.Lang
- uid: System.Xaml.XamlLanguage.Member*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Member
  nameWithType: XamlLanguage.Member
- uid: System.Xaml.XamlLanguage.Members*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Members
  nameWithType: XamlLanguage.Members
- uid: System.Xaml.XamlLanguage.Name*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Name
  nameWithType: XamlLanguage.Name
- uid: System.Xaml.XamlLanguage.Null*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: "Null"
  nameWithType: XamlLanguage.Null
- uid: System.Xaml.XamlLanguage.Object*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Object
  nameWithType: XamlLanguage.Object
- uid: System.Xaml.XamlLanguage.PositionalParameters*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: PositionalParameters
  nameWithType: XamlLanguage.PositionalParameters
- uid: System.Xaml.XamlLanguage.Property*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Property
  nameWithType: XamlLanguage.Property
- uid: System.Xaml.XamlLanguage.Reference*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Reference
  nameWithType: XamlLanguage.Reference
- uid: System.Xaml.XamlLanguage.Shared*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Shared
  nameWithType: XamlLanguage.Shared
- uid: System.Xaml.XamlLanguage.Single*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Single
  nameWithType: XamlLanguage.Single
- uid: System.Xaml.XamlLanguage.Space*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Space
  nameWithType: XamlLanguage.Space
- uid: System.Xaml.XamlLanguage.Static*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Static
  nameWithType: XamlLanguage.Static
- uid: System.Xaml.XamlLanguage.String*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: String
  nameWithType: XamlLanguage.String
- uid: System.Xaml.XamlLanguage.Subclass*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Subclass
  nameWithType: XamlLanguage.Subclass
- uid: System.Xaml.XamlLanguage.SynchronousMode*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: SynchronousMode
  nameWithType: XamlLanguage.SynchronousMode
- uid: System.Xaml.XamlLanguage.TimeSpan*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: TimeSpan
  nameWithType: XamlLanguage.TimeSpan
- uid: System.Xaml.XamlLanguage.Type*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Type
  nameWithType: XamlLanguage.Type
- uid: System.Xaml.XamlLanguage.TypeArguments*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: TypeArguments
  nameWithType: XamlLanguage.TypeArguments
- uid: System.Xaml.XamlLanguage.Uid*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Uid
  nameWithType: XamlLanguage.Uid
- uid: System.Xaml.XamlLanguage.UnknownContent*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: UnknownContent
  nameWithType: XamlLanguage.UnknownContent
- uid: System.Xaml.XamlLanguage.Uri*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: Uri
  nameWithType: XamlLanguage.Uri
- uid: System.Xaml.XamlLanguage.XamlNamespaces*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: XamlNamespaces
  nameWithType: XamlLanguage.XamlNamespaces
- uid: System.Xaml.XamlLanguage.XData*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: XData
  nameWithType: XamlLanguage.XData
- uid: System.Xaml.XamlLanguage.XmlNamespaces*
  parent: System.Xaml.XamlLanguage
  isExternal: false
  name: XmlNamespaces
  nameWithType: XamlLanguage.XmlNamespaces
