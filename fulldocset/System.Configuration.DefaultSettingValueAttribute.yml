### YamlMime:ManagedReference
items:
- uid: System.Configuration.DefaultSettingValueAttribute
  id: DefaultSettingValueAttribute
  children:
  - System.Configuration.DefaultSettingValueAttribute.#ctor(System.String)
  - System.Configuration.DefaultSettingValueAttribute.Value
  langs:
  - csharp
  name: DefaultSettingValueAttribute
  nameWithType: DefaultSettingValueAttribute
  fullName: System.Configuration.DefaultSettingValueAttribute
  type: Class
  summary: "응용 프로그램 설정 속성의 기본값을 지정합니다."
  remarks: "> [!IMPORTANT]> DefaultSettingValueAttribute 개별 설정 속성;에 적용 될 수 있습니다. 이 특성을 전체 응용 프로그램 설정 클래스에 적용 하는 것이 틀립니다.       설정 공급자 마다 한 다른 요구 사항이 나 제한 사항에는 DefaultSettingValueAttribute의 사용. 예를 들어는 <xref:System.Configuration.LocalFileSettingsProvider>이 특성이 필요 하지 않으며 모든 값이 없는 경우이 특성에 의해 제공 된 모든 값을 재정의 합니다-기본 또는 사용자가 수정한-데이터 저장소에 이미 있는.</xref:System.Configuration.LocalFileSettingsProvider>       DefaultSettingValueAttribute 기본 값을 문자열로 표시할 수 있어야 합니다. 결과적으로 XML 직렬화를 사용 하 여 설정을이 특성을 사용 하 여 지정 된 기본값을 사용할 수 없습니다. 일부 공급자 <xref:System.Configuration.SettingsSerializeAsAttribute>.</xref:System.Configuration.SettingsSerializeAsAttribute> 를 사용 하 여 컴파일 타임에 지정할 수 있는 여러 개의 serialization 체계를 지원 하도록 선택할 수 있습니다.      > [!CAUTION] >이 특성에 지정 된 결과 컴파일된.exe 또는.dll 파일에 일반 텍스트로 저장 됩니다. 따라서 이러한 기본 값은 본질적으로 안전 하지 않습니다."
  example:
  - "The following code example demonstrates the use of the DefaultSettingValueAttribute applied to three of the four properties of the `FormSettings` wrapper class, which is derived from the <xref:System.Configuration.ApplicationSettingsBase> class. This class is used to persist the location, size, background color, and text of form. The first three of these form properties have default values associated with them.  \n  \n The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#9](~/add/codesnippet/cpp/t-system.configuration.d_1.cpp)]\n [!code-cs[AppSettingsSample#9](~/add/codesnippet/csharp/t-system.configuration.d_1.cs)]\n [!code-vb[AppSettingsSample#9](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#9)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property)]

      public sealed class DefaultSettingValueAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.DefaultSettingValueAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Configuration.DefaultSettingValueAttribute
  langs:
  - csharp
  name: DefaultSettingValueAttribute(String)
  nameWithType: DefaultSettingValueAttribute.DefaultSettingValueAttribute(String)
  fullName: System.Configuration.DefaultSettingValueAttribute.DefaultSettingValueAttribute(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "인스턴스를 초기화는 <xref href=&quot;System.Configuration.DefaultSettingValueAttribute&quot;> </xref> 클래스입니다."
  remarks: "제공된 된 문자열에는 속성 유형과 관련 된 사용 가능한 직렬화 메커니즘을 호환 되는 값 이어야 합니다. 예를 들어 형식의 속성은 <xref:System.Drawing.Color>는 `value` 의 `&quot;Azure&quot;` 유효 합니다.</xref:System.Drawing.Color>      > [!CAUTION] >이 특성에 지정 된 결과 컴파일된.exe 또는.dll 파일에 일반 텍스트로 저장 됩니다. 따라서 이러한 기본 값은 본질적으로 안전 하지 않습니다."
  syntax:
    content: public DefaultSettingValueAttribute (string value);
    parameters:
    - id: value
      type: System.String
      description: "A <xref:System.String>속성에 대 한 기본 값을 나타내는입니다.</xref:System.String>"
  overload: System.Configuration.DefaultSettingValueAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.DefaultSettingValueAttribute.Value
  id: Value
  parent: System.Configuration.DefaultSettingValueAttribute
  langs:
  - csharp
  name: Value
  nameWithType: DefaultSettingValueAttribute.Value
  fullName: System.Configuration.DefaultSettingValueAttribute.Value
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "응용 프로그램 설정 속성에 대 한 기본값을 가져옵니다."
  remarks: "Value 속성 설정 됩니다는 <xref:System.Configuration.DefaultSettingValueAttribute.%23ctor%2A>생성자.</xref:System.Configuration.DefaultSettingValueAttribute.%23ctor%2A>       설정 공급자 <xref:System.Configuration.SettingsSerializeAsAttribute>.</xref:System.Configuration.SettingsSerializeAsAttribute> 지정할 수 있는 여러 serialization 체계를 지원할 수 있습니다."
  syntax:
    content: public string Value { get; }
    return:
      type: System.String
      description: "A <xref:System.String>속성에 대 한 기본 값을 나타내는입니다.</xref:System.String>"
  overload: System.Configuration.DefaultSettingValueAttribute.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Configuration.DefaultSettingValueAttribute.#ctor(System.String)
  parent: System.Configuration.DefaultSettingValueAttribute
  isExternal: false
  name: DefaultSettingValueAttribute(String)
  nameWithType: DefaultSettingValueAttribute.DefaultSettingValueAttribute(String)
  fullName: System.Configuration.DefaultSettingValueAttribute.DefaultSettingValueAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.DefaultSettingValueAttribute.Value
  parent: System.Configuration.DefaultSettingValueAttribute
  isExternal: false
  name: Value
  nameWithType: DefaultSettingValueAttribute.Value
  fullName: System.Configuration.DefaultSettingValueAttribute.Value
- uid: System.Configuration.DefaultSettingValueAttribute.#ctor*
  parent: System.Configuration.DefaultSettingValueAttribute
  isExternal: false
  name: DefaultSettingValueAttribute
  nameWithType: DefaultSettingValueAttribute.DefaultSettingValueAttribute
- uid: System.Configuration.DefaultSettingValueAttribute.Value*
  parent: System.Configuration.DefaultSettingValueAttribute
  isExternal: false
  name: Value
  nameWithType: DefaultSettingValueAttribute.Value
