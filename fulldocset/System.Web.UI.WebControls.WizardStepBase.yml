### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WizardStepBase
  id: WizardStepBase
  children:
  - System.Web.UI.WebControls.WizardStepBase.#ctor
  - System.Web.UI.WebControls.WizardStepBase.AllowReturn
  - System.Web.UI.WebControls.WizardStepBase.EnableTheming
  - System.Web.UI.WebControls.WizardStepBase.ID
  - System.Web.UI.WebControls.WizardStepBase.LoadViewState(System.Object)
  - System.Web.UI.WebControls.WizardStepBase.Name
  - System.Web.UI.WebControls.WizardStepBase.OnLoad(System.EventArgs)
  - System.Web.UI.WebControls.WizardStepBase.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WizardStepBase.StepType
  - System.Web.UI.WebControls.WizardStepBase.Title
  - System.Web.UI.WebControls.WizardStepBase.Wizard
  langs:
  - csharp
  name: WizardStepBase
  nameWithType: WizardStepBase
  fullName: System.Web.UI.WebControls.WizardStepBase
  type: Class
  summary: "단계에 필요한 기본 기능을 구현 하는 <xref href=&quot;System.Web.UI.WebControls.Wizard&quot;> </xref> 제어 합니다."
  remarks: "WizardStepBase 클래스의 인스턴스를 직접 만들 수 없습니다. 이 클래스는 상속 하는 대신,는 <xref:System.Web.UI.WebControls.WizardStep>클래스 및 <xref:System.Web.UI.WebControls.TemplatedWizardStep>클래스 마법사 역할을 하는 컨트롤의 한 단계에서의 기본 기능을 제공 합니다.</xref:System.Web.UI.WebControls.TemplatedWizardStep> </xref:System.Web.UI.WebControls.WizardStep>       마법사 컨트롤의 고유 단계를 나타내는 사용자 지정 클래스를 만드는 WizardStepBase 클래스에서 파생 될 수 있습니다."
  syntax:
    content: >-
      [System.ComponentModel.Bindable(false)]

      [System.ComponentModel.ToolboxItem(false)]

      [System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.WizardStepControlBuilder))]

      public abstract class WizardStepBase : System.Web.UI.WebControls.View
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.View
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.WebControls.View.Activate
  - System.Web.UI.WebControls.View.Deactivate
  - System.Web.UI.WebControls.View.OnActivate(System.EventArgs)
  - System.Web.UI.WebControls.View.OnDeactivate(System.EventArgs)
  - System.Web.UI.WebControls.View.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: WizardStepBase()
  nameWithType: WizardStepBase.WizardStepBase()
  fullName: System.Web.UI.WebControls.WizardStepBase.WizardStepBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref> 클래스입니다."
  syntax:
    content: protected WizardStepBase ();
    parameters: []
  overload: System.Web.UI.WebControls.WizardStepBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.AllowReturn
  id: AllowReturn
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: AllowReturn
  nameWithType: WizardStepBase.AllowReturn
  fullName: System.Web.UI.WebControls.WizardStepBase.AllowReturn
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "사용자의 이후 단계에서 현재 단계를 반환할 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> 컬렉션입니다."
  remarks: "선형 탐색에 적용할 AllowReturn 속성을 사용할 수는 <xref:System.Web.UI.WebControls.Wizard>컨트롤.</xref:System.Web.UI.WebControls.Wizard> 각 단계에 해당 AllowReturn 속성이로 설정 하는 경우 `false`, 사용자 액세스 한 후 단계로 돌아갈 수 없습니다. 이 기능은 사용할 수 있는 한 가지 시나리오는 완료 된 각 단계도 데이터베이스에 데이터를 유지 하기 때문에 완료 된 후 한 단계로 돌아가려면 사용자 허용 되지 않습니다. 각 단계를 수행한 후 데이터를 저장 하 고 사용자는 단계로 돌아가서 저장 된 후 정보를 변경 하도록 허용 하는 경우에 저장 된 데이터를 손상 될 수 있습니다. AllowReturn 속성을 설정 하 여 `false`, 사용자는 단계 왼쪽, 자신이 됩니다 하 한 값을 변경 하 고으로 돌아갈 수 있습니다.       AllowReturn 속성 방법과 시기를 결정 합니다.는 **이전** 단추가 렌더링 되지 않습니다. 다음 표에서 **이전** 렌더링 동작을 단추입니다.      | 시나리오 | 동작 |   |--------------|--------------|   | 선형: 1 단계에서로 설정 하는 AllowReturn `false` 되 고 사용자 작업이 2 단계로 이동 합니다. | 2 단계 표시 되지 않습니다는 **이전** 단추입니다. |   | 1 단계에서로 설정 하는 AllowReturn 비선형: `false` 되 고 사용자 작업이 3 단계로 이동 합니다. | 3 단계 표시 되지 않습니다는 **이전** 단추입니다. |   | 세로 막대 단추: 2 단계에서로 설정 하는 AllowReturn `false` , <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>로 설정 되어 `true`, 사용자가 세로 막대 단추를 클릭 하 고. | AllowReturn로 설정 된 경우 세로 막대에 단추가 자동으로 비활성화 됩니다 `false`.</xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> 단추를 클릭할 경우 해당 작업이 무시 됩니다. |   | 선형 / / 비선형 사용자 지정 템플릿을 사용 하 여:는 단계에는 사용자 지정 탐색 템플릿입니다. | 아니요 자동 숨기기 또는 표시 AllowReturn로 설정 된 경우에 발생 `false` 탐색을 위한 템플릿을 사용 하면 됩니다. **이전** 단추 서식 파일에서 선택적 요소 여야 합니다. |   | Visual Studio 디자이너 및 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>사용 하 여: 컨트롤에 있는 5 단계 4 단계에서 작업 하는 하 고 페이지를 실행 합니다. | 4 단계가 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>, 하면 **이전** 단추가 렌더링 됩니다.</xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> </xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> **이전** 만 단추에 대 한 <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>로 설정 <xref:System.Web.UI.WebControls.WizardStepType>기록에서 이전 단계 AllowReturn로 설정 하는 경우 `false`.</xref:System.Web.UI.WebControls.WizardStepType> </xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> 4 단계로 먼저 렌더링 되 고는 기록의 단계가 있으므로 **이전** 단추가 숨겨지지 않습니다. |   | 시작 단계 및 비선형 탐색: 3 단계 및 4 단계와 다음 단계 1 <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> <xref:System.Web.UI.WebControls.WizardStepType>로 설정 된 사용자가 방문. | 마법사는 추가 하지 않습니다는 **이전** 단추는 <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>해당 단계를 사용자가 탐색 하는 방법에 관계 없이 <xref:System.Web.UI.WebControls.WizardStepType>로 설정 된 경우. |   | 기록에 동일한 단계: 사용자가 방문 3 단계 여기서 <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>로 설정 된 <xref:System.Web.UI.WebControls.WizardStepType>사용자의 동작을 적용 하지 않는.</xref:System.Web.UI.WebControls.WizardStepType> </xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> </xref:System.Web.UI.WebControls.WizardStepType> </xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> </xref:System.Web.UI.WebControls.WizardStepType> </xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> 3 단계에서 이전 단추를 클릭 합니다. | 마법사 컨트롤 있는지 확인 하는 **이전** 기록에서 사용자가 현재 있는 &quot;동일&quot; 단계입니다. 마법사 컨트롤 검토 이전의 &quot;다른&quot; 단계를 확인 하 고 기록에 및 표시 하는 단계 동일한 경우는 **이전** 단추와 대상을 기록에 있는 &quot;다른 단계&quot;에 따라. |      > [!NOTE] > 때 the AllowReturn 속성이로 설정 되어 `false`, 되지만 <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>의 부모 컨트롤의 속성 <xref:System.Web.UI.WebControls.WizardStepBase>로 설정 된 `true`, 세로 막대의 단추를 클릭 하면 영향을 주지 않습니다.</xref:System.Web.UI.WebControls.WizardStepBase> </xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> 세로 막대 일반적으로 표시 되어 제공 비선형 탐색 않으므로 비선형 탐색 기능을 사용 하지 않는 경우 설정 해야 할 수 있습니다는 <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>속성을 `false`.</xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>       테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following example demonstrates using the AllowReturn property to stop the user from returning to a step in the <xref:System.Web.UI.WebControls.Wizard> control after it has been accessed. In the example, the `Step1` step has its AllowReturn property set to `false`. After the user leaves the `Step1` step, no Previous button appears on the `Step2` step.  \n  \n [!code-cs[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_10_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_10_1.aspx)]"
  syntax:
    content: public virtual bool AllowReturn { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사용자가 현재 단계로 돌아올 수 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.WizardStepBase.AllowReturn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.EnableTheming
  id: EnableTheming
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: EnableTheming
  nameWithType: WizardStepBase.EnableTheming
  fullName: System.Web.UI.WebControls.WizardStepBase.EnableTheming
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 컨트롤에 테마를 적용할지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "EnableTheming 속성에 대 한 테마를 사용할 수 있는지 여부를 나타냅니다.는 <xref:System.Web.UI.WebControls.WizardStepBase>컨트롤.</xref:System.Web.UI.WebControls.WizardStepBase> EnableTheming 속성 controls 컬렉션에 포함 된 컨트롤에 대 한 테마를 사용할 수 있는지 여부를도 적용 됩니다. EnableTheming 속성이 `true`을 적용할 컨트롤 스킨에 대 한 응용 프로그램의 테마 디렉터리를 검색 합니다. 테마 디렉터리에 특정 컨트롤에 대 한 스킨이 스킨 적용 되지 않습니다. EnableTheming 속성이 `false`, 테마 디렉터리 검색 되지 않고의 값은 <xref:System.Web.UI.Control.SkinID%2A>속성이 사용 되지 않습니다.</xref:System.Web.UI.Control.SkinID%2A>       컨트롤이 설정한 부모 컨트롤 또는 포함 하는 페이지 EnableTheming 값을 재정의할 수 있습니다. 예를 들어 경우는 <xref:System.Web.UI.WebControls.WizardStepBase>컨트롤에 EnableTheming로 설정 `false`를 설정 하 여 마법사 단계 내에 포함 된 자식 컨트롤에 테마를 선택적으로 적용할 수는 <xref:System.Web.UI.Control.EnableTheming%2A>속성을 `true` 개별 자식 컨트롤에.</xref:System.Web.UI.Control.EnableTheming%2A> </xref:System.Web.UI.WebControls.WizardStepBase>"
  syntax:
    content: public override bool EnableTheming { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>테마를 사용 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.WizardStepBase.EnableTheming*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.ID
  id: ID
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: ID
  nameWithType: WizardStepBase.ID
  fullName: System.Web.UI.WebControls.WizardStepBase.ID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "서버 컨트롤에 할당 된 프로그래밍 id를 가져오거나 설정 합니다."
  remarks: "ID 속성을 사용 하 여 식별 하 고 Web Forms 페이지에서 특정 마법사 단계 컨트롤을 참조 합니다. ID 값은 페이지의 제어 인스턴스 이름이 이 옵션을 사용 하면 해당 페이지에 대 한 코드의 특정 단계에 쉽게 액세스할 수 있습니다. 예를 들어의 ID 속성을 설정 하는 경우는 <xref:System.Web.UI.WebControls.WizardStepBase>컨트롤 &quot;1&quot;이 단계를 코드와 해당 페이지에서에서 마법사 단계의 자식 컨트롤을 참조할 수 있습니다 `Step1.Controls`.</xref:System.Web.UI.WebControls.WizardStepBase>       <xref:System.Web.UI.WebControls.WizardStepBase>제어 되도록의 각 단계는 <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>단계를 추가 하거나 디자인 타임에 수정할 때 컨트롤에 유효한 고유 식별자입니다.</xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> </xref:System.Web.UI.WebControls.WizardStepBase> 예를 들어 디자인 타임에는 단계에 대 한 ID를 설정 하면 식별자에 포함 된 다른 단계에 대 한 검색할 수 없으며는 <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>일치할 수 없습니다 컨트롤의 <xref:System.Web.UI.Control.ID%2A>포함 하는 대 한 <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>컨트롤.</xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> </xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>"
  example:
  - "The following code example defines three wizard steps for a <xref:System.Web.UI.WebControls.Wizard> control in a Web Forms page. In code for the page, the wizard step instances are named by their ID values, and they can be referenced in the code as `WizardStep1`, `WizardStep2`, and `WizardStep3`.  \n  \n [!code-cs[System.Web.UI.WebControls.WizardActiveStep#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_480_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.WizardActiveStep#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_480_1.aspx)]"
  syntax:
    content: public override string ID { get; set; }
    return:
      type: System.String
      description: "컨트롤에 할당 하는 프로그래밍 id입니다."
  overload: System.Web.UI.WebControls.WizardStepBase.ID*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "속성은 디자인 타임에 잘못 된 식별자 문자열으로 설정 되었습니다.       -또는-는 속성이 포함 하는 동일한 식별자로 설정 된 <> </> *> 디자인 타임에 컨트롤입니다.       -또는-는 속성이 포함 하는 다른 단계와 동일한 식별자로 설정 된 <> </> *> 디자인 타임에 컨트롤입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: WizardStepBase.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.WizardStepBase.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "저장 된 이전 페이지 요청에서 뷰 상태 정보가 복원 되는 <xref:System.Web.UI.WebControls.WebControl.SaveViewState*>메서드.</xref:System.Web.UI.WebControls.WebControl.SaveViewState*>"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "<xref:System.Object>있는지 나타내는 컨트롤 상태를 복원할 수 있습니다.</xref:System.Object>"
  overload: System.Web.UI.WebControls.WizardStepBase.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.Name
  id: Name
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: Name
  nameWithType: WizardStepBase.Name
  fullName: System.Web.UI.WebControls.WizardStepBase.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "마법사 역할을 하는 컨트롤에서 단계와 관련 된 이름을 가져옵니다."
  remarks: "Name 속성은 wizard 컨트롤의 단계를 식별 하는 문자열을 반환 합니다. 에 대 한 값을 지정 하는 경우는 <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>속성인 Name 속성 값을 반환 합니다.</xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> 경우에 대 한 지정 된 값은 <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>속성인 Name 속성의 값을 반환는 <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>속성.</xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> </xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> 에 대 한 값을 지정 하지 않은 경우는 <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>또는 <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>속성인 Name 속성 반환 `null`.</xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> </xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>"
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: "마법사 역할을 하는 컨트롤에서 단계와 관련 된 이름입니다."
  overload: System.Web.UI.WebControls.WizardStepBase.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.OnLoad(System.EventArgs)
  id: OnLoad(System.EventArgs)
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: OnLoad(EventArgs)
  nameWithType: WizardStepBase.OnLoad(EventArgs)
  fullName: System.Web.UI.WebControls.WizardStepBase.OnLoad(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref:System.Web.UI.Control.OnLoad*>이벤트.</xref:System.Web.UI.Control.OnLoad*>"
  syntax:
    content: protected override void OnLoad (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는 개체입니다.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WizardStepBase.OnLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.RenderChildren(System.Web.UI.HtmlTextWriter)
  id: RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: RenderChildren(HtmlTextWriter)
  nameWithType: WizardStepBase.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WizardStepBase.RenderChildren(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "내용을 출력는 <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref> 컨트롤의 자식 컨트롤을 지정 된 <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> 클라이언트에서 렌더링할 콘텐츠를 쓰는 개체입니다."
  syntax:
    content: protected override void RenderChildren (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> HTML 클라이언트에서 콘텐츠를 렌더링 하기 위한 출력 스트림을 나타내는입니다."
  overload: System.Web.UI.WebControls.WizardStepBase.RenderChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.StepType
  id: StepType
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: StepType
  nameWithType: WizardStepBase.StepType
  fullName: System.Web.UI.WebControls.WizardStepBase.StepType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "탐색 UI (사용자 인터페이스) 단계에 대해 표시할 종류를 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.Wizard&quot;> </xref> 제어 합니다."
  remarks: "StepType 속성을 사용 하 여의 단계에 표시 하려면 탐색 단추 유형을 지정 하는 <xref:System.Web.UI.WebControls.Wizard>컨트롤.</xref:System.Web.UI.WebControls.Wizard> 이 속성에 대 한 값을 지정 하는 경우 단계를 수행할 것으로 표시 <xref:System.Web.UI.WebControls.WizardStepType>세로 막대에서 비활성화 된 상태로 표시 됩니다.</xref:System.Web.UI.WebControls.WizardStepType>       이 속성에 대 한 값을 지정 하지 않으면 기본값은 `WizardStepType.Auto`합니다.       다음 표에서 StepType 속성과 단계의 결과 동작에 대 한 사용 가능한 설정: `WizardStepType.Auto` 탐색 UI 렌더링 되는 단계는 단계는 선언 된 순서에 따라 결정 됩니다.       `WizardStepType.Complete`마지막으로 나타나는 단계가입니다. 탐색 단추가 렌더링 됩니다.       `WizardStepType.Finish`마지막 데이터 수집 단계가입니다. 완료 및 이전 단추는 탐색에 대 한 렌더링 됩니다.       `WizardStepType.Start`나타나는 첫 번째 단계가입니다. 이전 단추를 렌더링 되지 않습니다.       `WizardStepType.Step`시작 날짜와 완료 단계 사이의 모든 단계가입니다. 이전 및 다음 단추는 탐색에 대 한 렌더링 됩니다. 이 단계 유형 보다 유용한 재정의 <xref:System.Web.UI.WebControls.WizardStepType>단계 형식이.</xref:System.Web.UI.WebControls.WizardStepType>"
  syntax:
    content: public virtual System.Web.UI.WebControls.WizardStepType StepType { get; set; }
    return:
      type: System.Web.UI.WebControls.WizardStepType
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.WizardStepType&quot;> </xref> 열거형 값입니다. 기본값은 <xref uid=&quot;langword_csharp_WizardStepType.Auto&quot; name=&quot;WizardStepType.Auto&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.WizardStepBase.StepType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "선택한 값 중 하나이 고 <xref href=&quot;System.Web.UI.WebControls.WizardStepType&quot;> </xref> 열거형 값입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.Title
  id: Title
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: Title
  nameWithType: WizardStepBase.Title
  fullName: System.Web.UI.WebControls.WizardStepBase.Title
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "단계에 사용할 제목을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.Wizard&quot;> </xref> 세로 막대 기능을 활성화 한 경우를 제어 합니다."
  remarks: "단계에 대 한 알기 쉬운 제목을 표시 하려면 Title 속성을 사용 하 여 한 <xref:System.Web.UI.WebControls.Wizard>세로 막대 기능을 활성화 한 경우를 제어 합니다.</xref:System.Web.UI.WebControls.Wizard> Title 속성은 설정 되지 않으며 해당 사이드바 기능을 사용 하는 경우의 값은 <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>세로 막대 단추에 대 한 속성이 표시 됩니다.</xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>       이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute>및 [전역화 및 지역화](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates using the Title property to display a user-friendly title for a step in the <xref:System.Web.UI.WebControls.Wizard> control. In the example, `Step1` does not have its Title property set, so it appears in the <xref:System.Web.UI.WebControls.Wizard> control as \"WizardStep1\". `Step2` does have its Title property set, so it appears as \"Step 2\".  \n  \n [!code-cs[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_149_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_149_1.aspx)]"
  syntax:
    content: public virtual string Title { get; set; }
    return:
      type: System.String
      description: "단계에 사용할 제목을 <xref href=&quot;System.Web.UI.WebControls.Wizard&quot;> </xref> 세로 막대 기능을 활성화 한 경우를 제어 합니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WizardStepBase.Title*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.Wizard
  id: Wizard
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: Wizard
  nameWithType: WizardStepBase.Wizard
  fullName: System.Web.UI.WebControls.WizardStepBase.Wizard
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.Wizard&quot;> </xref> 에서 파생 된 개체의 부모 컨트롤 <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>합니다."
  syntax:
    content: public System.Web.UI.WebControls.Wizard Wizard { get; }
    return:
      type: System.Web.UI.WebControls.Wizard
      description: "<xref href=&quot;System.Web.UI.WebControls.Wizard&quot;> </xref> 에서 파생 된 개체의 부모 컨트롤 <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.WizardStepBase.Wizard*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.View
  isExternal: false
  name: System.Web.UI.WebControls.View
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.WebControls.WizardStepBase.#ctor
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: WizardStepBase()
  nameWithType: WizardStepBase.WizardStepBase()
  fullName: System.Web.UI.WebControls.WizardStepBase.WizardStepBase()
- uid: System.Web.UI.WebControls.WizardStepBase.AllowReturn
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: AllowReturn
  nameWithType: WizardStepBase.AllowReturn
  fullName: System.Web.UI.WebControls.WizardStepBase.AllowReturn
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WizardStepBase.EnableTheming
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: EnableTheming
  nameWithType: WizardStepBase.EnableTheming
  fullName: System.Web.UI.WebControls.WizardStepBase.EnableTheming
- uid: System.Web.UI.WebControls.WizardStepBase.ID
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: ID
  nameWithType: WizardStepBase.ID
  fullName: System.Web.UI.WebControls.WizardStepBase.ID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WizardStepBase.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: WizardStepBase.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.WizardStepBase.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.WizardStepBase.Name
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: Name
  nameWithType: WizardStepBase.Name
  fullName: System.Web.UI.WebControls.WizardStepBase.Name
- uid: System.Web.UI.WebControls.WizardStepBase.OnLoad(System.EventArgs)
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: OnLoad(EventArgs)
  nameWithType: WizardStepBase.OnLoad(EventArgs)
  fullName: System.Web.UI.WebControls.WizardStepBase.OnLoad(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.WizardStepBase.RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: RenderChildren(HtmlTextWriter)
  nameWithType: WizardStepBase.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WizardStepBase.RenderChildren(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.WizardStepBase.StepType
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: StepType
  nameWithType: WizardStepBase.StepType
  fullName: System.Web.UI.WebControls.WizardStepBase.StepType
- uid: System.Web.UI.WebControls.WizardStepType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: WizardStepType
  nameWithType: WizardStepType
  fullName: System.Web.UI.WebControls.WizardStepType
- uid: System.Web.UI.WebControls.WizardStepBase.Title
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: Title
  nameWithType: WizardStepBase.Title
  fullName: System.Web.UI.WebControls.WizardStepBase.Title
- uid: System.Web.UI.WebControls.WizardStepBase.Wizard
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: Wizard
  nameWithType: WizardStepBase.Wizard
  fullName: System.Web.UI.WebControls.WizardStepBase.Wizard
- uid: System.Web.UI.WebControls.Wizard
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Wizard
  nameWithType: Wizard
  fullName: System.Web.UI.WebControls.Wizard
- uid: System.Web.UI.WebControls.WizardStepBase.#ctor*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: WizardStepBase
  nameWithType: WizardStepBase.WizardStepBase
- uid: System.Web.UI.WebControls.WizardStepBase.AllowReturn*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: AllowReturn
  nameWithType: WizardStepBase.AllowReturn
- uid: System.Web.UI.WebControls.WizardStepBase.EnableTheming*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: EnableTheming
  nameWithType: WizardStepBase.EnableTheming
- uid: System.Web.UI.WebControls.WizardStepBase.ID*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: ID
  nameWithType: WizardStepBase.ID
- uid: System.Web.UI.WebControls.WizardStepBase.LoadViewState*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: LoadViewState
  nameWithType: WizardStepBase.LoadViewState
- uid: System.Web.UI.WebControls.WizardStepBase.Name*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: Name
  nameWithType: WizardStepBase.Name
- uid: System.Web.UI.WebControls.WizardStepBase.OnLoad*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: OnLoad
  nameWithType: WizardStepBase.OnLoad
- uid: System.Web.UI.WebControls.WizardStepBase.RenderChildren*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: RenderChildren
  nameWithType: WizardStepBase.RenderChildren
- uid: System.Web.UI.WebControls.WizardStepBase.StepType*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: StepType
  nameWithType: WizardStepBase.StepType
- uid: System.Web.UI.WebControls.WizardStepBase.Title*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: Title
  nameWithType: WizardStepBase.Title
- uid: System.Web.UI.WebControls.WizardStepBase.Wizard*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: Wizard
  nameWithType: WizardStepBase.Wizard
