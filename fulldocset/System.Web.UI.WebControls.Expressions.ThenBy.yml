### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Expressions.ThenBy
  id: ThenBy
  children:
  - System.Web.UI.WebControls.Expressions.ThenBy.#ctor
  - System.Web.UI.WebControls.Expressions.ThenBy.DataField
  - System.Web.UI.WebControls.Expressions.ThenBy.Direction
  langs:
  - csharp
  name: ThenBy
  nameWithType: ThenBy
  fullName: System.Web.UI.WebControls.Expressions.ThenBy
  type: Class
  summary: "정렬 식을 적용 하는 방법을 제공는 <xref:System.Linq.IQueryable>후 데이터 원본 개체는 <xref href=&quot;System.Web.UI.WebControls.Expressions.OrderByExpression&quot;> </xref> 식이 적용 됩니다.</xref:System.Linq.IQueryable>"
  remarks: "정렬 한 후 작업을 사용 하 여 수행 됩니다는 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression>식에는 <xref:System.Web.UI.WebControls.QueryExtender>제어 후속 정렬 다른 데이터 필드에 ThenBy 클래스를 사용 하 여 작업을 수행할 수 있습니다.</xref:System.Web.UI.WebControls.QueryExtender> </xref:System.Web.UI.WebControls.Expressions.OrderByExpression>"
  example:
  - "The following example shows how to sort data by the ListPrice field in descending order and then on the ProductID field in ascending order using the ThenBy type. This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:OrderByExpression DataField=\"ListPrice\"   \n    Direction=\"Descending\">  \n  <asp:ThenBy DataField=\"ProductID\" Direction=\"Ascending\"/>  \n</asp:OrderByExpression>  \n```"
  syntax:
    content: public class ThenBy
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.ThenBy.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  langs:
  - csharp
  name: ThenBy()
  nameWithType: ThenBy.ThenBy()
  fullName: System.Web.UI.WebControls.Expressions.ThenBy.ThenBy()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.Expressions.ThenBy&quot;> </xref> 클래스입니다."
  syntax:
    content: public ThenBy ();
    parameters: []
  overload: System.Web.UI.WebControls.Expressions.ThenBy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.ThenBy.DataField
  id: DataField
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  langs:
  - csharp
  name: DataField
  nameWithType: ThenBy.DataField
  fullName: System.Web.UI.WebControls.Expressions.ThenBy.DataField
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "속성을 가져오거나 설정 합니다.는 <xref:System.Linq.IQueryable>적용 하는 <xref href=&quot;System.Web.UI.WebControls.Expressions.ThenBy&quot;> </xref> 식입니다.</xref:System.Linq.IQueryable>"
  remarks: "<xref:System.Web.UI.WebControls.Expressions.OrderByExpression>지정 된 데이터 필드의 데이터를 정렬 합니다.</xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 사용 하 여 다른 데이터 필드에 후속 정렬 작업을 수행할 수 있습니다는 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression>는 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A>컬렉션.</xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> </xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 이 속성에 적용할 데이터 필드 지정는 `ThenBy` 정렬 작업을 합니다."
  example:
  - "The following example shows how to sort data by the ListPrice field in descending order and then on the Product ID field in ascending order. This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:OrderByExpression DataField=\"ListPrice\"   \n    Direction=\"Descending\">  \n  <asp:ThenBy DataField=\"ProductID\" Direction=\"Ascending\"/>  \n</asp:OrderByExpression>  \n```"
  syntax:
    content: public string DataField { get; set; }
    return:
      type: System.String
      description: "속성은 <xref:System.Linq.IQueryable>적용 하는 <xref href=&quot;System.Web.UI.WebControls.Expressions.ThenBy&quot;> </xref> 식입니다.</xref:System.Linq.IQueryable>"
  overload: System.Web.UI.WebControls.Expressions.ThenBy.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.ThenBy.Direction
  id: Direction
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  langs:
  - csharp
  name: Direction
  nameWithType: ThenBy.Direction
  fullName: System.Web.UI.WebControls.Expressions.ThenBy.Direction
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "정렬 방향을 가져오거나 설정 합니다.는 <xref:System.Linq.IQueryable>데이터 원본 개체입니다.</xref:System.Linq.IQueryable>"
  remarks: "<xref:System.Web.UI.WebControls.Expressions.OrderByExpression>에 사용 되는 <xref:System.Web.UI.WebControls.QueryExtender>컨트롤을 데이터를 오름차순 또는 내림차순으로 정렬 합니다.</xref:System.Web.UI.WebControls.QueryExtender> </xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 정렬 작업의 방향을 사용 하 여 지정 된 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A>속성.</xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A>"
  example:
  - "The following example shows how to sort data by the ListPrice field in descending order and on the ProductID field in ascending order by using the Direction property. This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:OrderByExpression DataField=\"ListPrice\"   \n    Direction=\"Descending\">  \n  <asp:ThenBy DataField=\"ProductID\" Direction=\"Ascending\"/>  \n</asp:OrderByExpression>  \n```"
  syntax:
    content: public System.Web.UI.WebControls.SortDirection Direction { get; set; }
    return:
      type: System.Web.UI.WebControls.SortDirection
      description: "정렬 방향은 <xref:System.Linq.IQueryable>데이터 원본 개체입니다.</xref:System.Linq.IQueryable>"
  overload: System.Web.UI.WebControls.Expressions.ThenBy.Direction*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.WebControls.Expressions.ThenBy.#ctor
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  isExternal: false
  name: ThenBy()
  nameWithType: ThenBy.ThenBy()
  fullName: System.Web.UI.WebControls.Expressions.ThenBy.ThenBy()
- uid: System.Web.UI.WebControls.Expressions.ThenBy.DataField
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  isExternal: false
  name: DataField
  nameWithType: ThenBy.DataField
  fullName: System.Web.UI.WebControls.Expressions.ThenBy.DataField
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Expressions.ThenBy.Direction
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  isExternal: false
  name: Direction
  nameWithType: ThenBy.Direction
  fullName: System.Web.UI.WebControls.Expressions.ThenBy.Direction
- uid: System.Web.UI.WebControls.SortDirection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SortDirection
  nameWithType: SortDirection
  fullName: System.Web.UI.WebControls.SortDirection
- uid: System.Web.UI.WebControls.Expressions.ThenBy.#ctor*
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  isExternal: false
  name: ThenBy
  nameWithType: ThenBy.ThenBy
- uid: System.Web.UI.WebControls.Expressions.ThenBy.DataField*
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  isExternal: false
  name: DataField
  nameWithType: ThenBy.DataField
- uid: System.Web.UI.WebControls.Expressions.ThenBy.Direction*
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  isExternal: false
  name: Direction
  nameWithType: ThenBy.Direction
