### YamlMime:ManagedReference
items:
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract
  id: IRemoteTypeContract
  children:
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData
  - System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)
  langs:
  - csharp
  name: IRemoteTypeContract
  nameWithType: IRemoteTypeContract
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract
  type: Interface
  summary: "구성 요소 형식 정보에 액세스 하 고 응용 프로그램 도메인 및 프로세스 경계에서 멤버를 호출 하는 데 사용할 수 있는 계약을 정의 합니다."
  remarks: "구성 요소는 IRemoteTypeContract를 얻기 위해 호출할 수는 <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A>구현 하는 개체의 메서드는 <xref:System.AddIn.Contract.Automation.IRemoteObjectContract>인터페이스.</xref:System.AddIn.Contract.Automation.IRemoteObjectContract> </xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A>       에 개체의 형식에 대 한 정보를 가져올 구성 요소 호출의 <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData%2A>메서드.</xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData%2A>       개체의 멤버에 대 한 정보를 얻으려면 구성 요소는 특정 유형의 멤버에 대 한 정보를 반환 하는 방법 중 하나를 호출 합니다. 예를 들어 개체의 이벤트에 대 한 정보를 얻으려면 구성 요소가 사용할 수는 <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent%2A>또는 <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents%2A>메서드.</xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents%2A> </xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent%2A>       개체의 멤버를 호출 하려면 구성 요소는 다음과 같이 사용 됩니다.는 <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember%2A>메서드.</xref:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember%2A>"
  syntax:
    content: 'public interface IRemoteTypeContract : System.AddIn.Contract.IContract'
  implements:
  - System.AddIn.Contract.IContract
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName
  id: GetCanonicalName
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetCanonicalName()
  nameWithType: IRemoteTypeContract.GetCanonicalName()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "현재의 정식 이름을 반환 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>합니다."
  remarks: "The canonical name is a globally unique name, such as a fully qualified type name. Strings in the format \\<*assembly name*>, \\<*fully qualified type name*> are recommended for managed types. Strings in the format \\<*type library name*>, \\<*type name*> are recommended for COM types.  \n  \n Do not change the canonical name for a type after the type is published. Changing the canonical name for a type in a future version of a component breaks compatibility between the component and clients that are already using the type."
  syntax:
    content: public string GetCanonicalName ();
    parameters: []
    return:
      type: System.String
      description: "현재의 정식 이름을 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>합니다."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)
  id: GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetEvent(String,BindingFlags)
  nameWithType: IRemoteTypeContract.GetEvent(String,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(String,BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "반환 된 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteEventInfoContract&quot;> </xref> 현재 지정된 된 이벤트에 대 한 액세스를 제공 하는 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>합니다."
  syntax:
    content: public System.AddIn.Contract.Automation.IRemoteEventInfoContract GetEvent (string name, System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: name
      type: System.String
      description: "현재 이벤트의 이름 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>합니다."
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "비트 조합 된 <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> 이벤트에 대 한 검색 방법을 지정 하는 값입니다."
    return:
      type: System.AddIn.Contract.Automation.IRemoteEventInfoContract
      description: "<xref href=&quot;System.AddIn.Contract.Automation.IRemoteEventInfoContract&quot;> </xref> 검색 되지 않으면, 지정된 된 이벤트에 대 한 액세스를 제공 하 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)
  id: GetEvents(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetEvents(BindingFlags)
  nameWithType: IRemoteTypeContract.GetEvents(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "컬렉션을 반환 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteEventInfoContract&quot;> </xref> 현재 지정 된 이벤트에 대 한 액세스를 제공 하는 개체 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>합니다."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteEventInfoContract> GetEvents (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "비트 조합 된 <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> 는 이벤트를 검색 하는 방법을 지정 하는 값입니다."
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteEventInfoContract}
      description: "&lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; 의 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteEventInfoContract&quot;> </xref> ; 지정 된 바인딩 제약 조건과 일치 하는 이벤트에 대 한 액세스를 제공 하는 개체, 빈 &lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt;합니다."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)
  id: GetField(System.String,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetField(String,BindingFlags)
  nameWithType: IRemoteTypeContract.GetField(String,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(String,BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "반환 된 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&quot;> </xref> 현재 지정된 된 필드에 대 한 액세스를 제공 하는 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>합니다."
  syntax:
    content: public System.AddIn.Contract.Automation.IRemoteFieldInfoContract GetField (string name, System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: name
      type: System.String
      description: "현재 필드의 이름 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>합니다."
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "비트 조합 된 <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> 필드에 대 한 검색 방법을 지정 하는 값입니다."
    return:
      type: System.AddIn.Contract.Automation.IRemoteFieldInfoContract
      description: "<xref href=&quot;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&quot;> </xref> 검색 되지 않으면, 지정된 된 필드에 대 한 액세스를 제공 하는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)
  id: GetFields(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetFields(BindingFlags)
  nameWithType: IRemoteTypeContract.GetFields(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "컬렉션을 반환 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&quot;> </xref> 현재 지정된 된 필드에 대 한 액세스를 제공 하는 개체 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>합니다."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteFieldInfoContract> GetFields (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "비트 조합 된 <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> 필드에 대 한 검색 방법을 지정 하는 값입니다."
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteFieldInfoContract}
      description: "&lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; 의 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&quot;> </xref> ; 지정 된 바인딩 제약 조건과 일치 하는 필드에 대 한 액세스를 제공 하는 개체, 빈 &lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt;합니다."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)
  id: GetInterface(System.String)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetInterface(String)
  nameWithType: IRemoteTypeContract.GetInterface(String)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(String)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "현재 구현 된 인터페이스를 반환 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>합니다."
  remarks: "A canonical name is a globally unique name, such as a GUID. Strings in the format \\<*assembly name*>, \\<*fully qualified type name*> are recommended for managed types. Strings in the format \\<*type library name*>, \\<*type name*> are recommended for COM types.  \n  \n Do not change the canonical name for a type after the type is published. Changing the canonical name for a type in a future version of a component breaks compatibility between the component and clients that are already using the type."
  syntax:
    content: public System.AddIn.Contract.Automation.IRemoteTypeContract GetInterface (string canonicalName);
    parameters:
    - id: canonicalName
      type: System.String
      description: "현재 구현 된 인터페이스의 정식 이름을 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>합니다."
    return:
      type: System.AddIn.Contract.Automation.IRemoteTypeContract
      description: "<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> 을 나타내는 인터페이스 지정 된 정식 이름을이 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> 구현 합니다. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>이 경우 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> 지정된 된 정식 이름을 사용 하 여 인터페이스를 구현 하지 않습니다."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces
  id: GetInterfaces
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetInterfaces()
  nameWithType: IRemoteTypeContract.GetInterfaces()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "현재 구현 되는 인터페이스를 반환 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>합니다."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract> GetInterfaces ();
    parameters: []
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract}
      description: "&lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; 의 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> 현재에서 구현 되는 모든 인터페이스를 나타내는 개체를 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>합니다."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  id: GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetMember(String,MemberTypes,BindingFlags)
  nameWithType: IRemoteTypeContract.GetMember(String,MemberTypes,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(String,MemberTypes,BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "컬렉션을 반환 <xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref> 현재에서 지정 된 멤버 형식의 지정 된 모든 멤버에 대 한 액세스를 제공 하는 개체 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>, 지정 된 바인딩 제약 조건입니다."
  remarks: "단일 멤버를 확인 하거나 생성자 또는 메서드의 오버 로드와 같은 동일한 이름을 가진 여러 멤버를 가져올이 메서드를 사용할 수 있습니다."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.IContract> GetMember (string name, System.Reflection.MemberTypes memberTypes, System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: name
      type: System.String
      description: "현재 멤버의 이름 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>합니다. 이름이 동일한 이름을 가진 여러 멤버를 나타낼 수 있습니다."
    - id: memberTypes
      type: System.Reflection.MemberTypes
      description: "비트 조합 된 <xref href=&quot;System.Reflection.MemberTypes&quot;> </xref> 검색할 멤버를 지정 하는 값입니다."
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "비트 조합 된 <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> 멤버에 대 한 검색 방법을 지정 하는 값입니다."
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.IContract}
      description: "&lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; 의 <xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref> 현재 멤버를 나타내는 개체를 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> 지정 된 이름이 같고에 지정 된 조건을 충족 하는 <code> memberTypes </code> 및 <code> bindingFlags </code> 매개 변수입니다."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)
  id: GetMembers(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetMembers(BindingFlags)
  nameWithType: IRemoteTypeContract.GetMembers(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "컬렉션을 반환 <xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref> 현재에서 모든 멤버에 대 한 액세스를 제공 하는 개체 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> 지정 된 바인딩 제약 조건과 일치 하 합니다."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.IContract> GetMembers (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "비트 조합 된 <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> 멤버에 대 한 검색 방법을 지정 하는 값입니다."
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.IContract}
      description: "&lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; 의 <xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref> 의 현재 멤버에 대 한 액세스를 제공 하는 개체 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> 지정 된 바인딩 제약 조건과 일치 하는 합니다."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  id: GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  nameWithType: IRemoteTypeContract.GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "반환 된 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&quot;> </xref> 에 현재 지정된 된 메서드에 대 한 액세스를 제공 하는 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>합니다."
  syntax:
    content: public System.AddIn.Contract.Automation.IRemoteMethodInfoContract GetMethod (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract> remoteTypes);
    parameters:
    - id: name
      type: System.String
      description: "현재 메서드의 이름을 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>합니다."
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "비트 조합 된 <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> 메서드에 대 한 검색 방법을 지정 하는 값입니다."
    - id: remoteTypes
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract}
      description: "&lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; 의 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> 가져올 수, 순서 및 메서드에 대 한 매개 변수 유형을 나타내는 개체입니다."
    return:
      type: System.AddIn.Contract.Automation.IRemoteMethodInfoContract
      description: "<xref href=&quot;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&quot;> </xref> 검색 되지 않으면, 지정 된 메서드에 대 한 액세스를 제공 하 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)
  id: GetMethods(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetMethods(BindingFlags)
  nameWithType: IRemoteTypeContract.GetMethods(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "컬렉션을 반환 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&quot;> </xref> 현재 지정 된 메서드에 대 한 액세스를 제공 하는 개체 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>합니다."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteMethodInfoContract> GetMethods (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "비트 조합 된 <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> 메서드에 대 한 검색 방법을 지정 하는 값입니다."
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteMethodInfoContract}
      description: "&lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; 의 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&quot;> </xref> 지정 된 바인딩 제약 조건과 일치 하는 메서드에 대 한 액세스를 제공 하는 개체입니다."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)
  id: GetProperties(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetProperties(BindingFlags)
  nameWithType: IRemoteTypeContract.GetProperties(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "컬렉션을 반환 <xref href=&quot;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&quot;> </xref> 현재 지정된 된 속성에 대 한 액세스를 제공 하는 개체 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>합니다."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemotePropertyInfoContract> GetProperties (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "비트 조합 된 <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> 속성에 대 한 검색 방법을 지정 하는 값입니다."
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemotePropertyInfoContract}
      description: "&lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; 의 <xref href=&quot;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&quot;> </xref> 지정 된 바인딩 제약 조건과 일치 하는 속성에 대 한 액세스를 제공 하는 개체입니다."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  id: GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  nameWithType: IRemoteTypeContract.GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "반환 된 <xref href=&quot;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&quot;> </xref> 현재 지정된 된 속성에 대 한 액세스를 제공 하는 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>합니다."
  syntax:
    content: public System.AddIn.Contract.Automation.IRemotePropertyInfoContract GetProperty (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Automation.IRemoteTypeContract remoteReturnType, System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract> remoteTypes);
    parameters:
    - id: name
      type: System.String
      description: "현재 속성의 이름 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>합니다."
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "비트 조합 된 <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> 메서드에 대 한 검색 방법을 지정 하는 값입니다."
    - id: remoteReturnType
      type: System.AddIn.Contract.Automation.IRemoteTypeContract
      description: "<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> 속성의 반환 형식을 지정 하는 합니다."
    - id: remoteTypes
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract}
      description: "&lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; 의 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> 지정된 된 속성에 대 한 매개 변수를 나타내는 개체입니다."
    return:
      type: System.AddIn.Contract.Automation.IRemotePropertyInfoContract
      description: "<xref href=&quot;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&quot;> </xref> 검색 되지 않으면, 지정된 된 속성에 대 한 액세스를 제공 하는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData
  id: GetTypeData
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetTypeData()
  nameWithType: IRemoteTypeContract.GetTypeData()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "개체에 대 한 형식 정보를 반환 현재 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> 식별 합니다."
  syntax:
    content: public System.AddIn.Contract.Automation.RemoteTypeData GetTypeData ();
    parameters: []
    return:
      type: System.AddIn.Contract.Automation.RemoteTypeData
      description: "A <xref href=&quot;System.AddIn.Contract.Automation.RemoteTypeData&quot;> </xref> 개체에 대 한 정보를 포함 하는 현재 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> 식별 합니다."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  nameWithType: IRemoteTypeContract.InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "현재 지정된 된 멤버 호출 <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>합니다."
  remarks: "`remoteArgModifiers` COM.를 사용 하 여 작성 된 구성에 대 한 매개 변수는 사용 각 값에는 `remoteArgModifiers` 매개 변수를 나타냅니다 여부의 해당 값의 `remoteArgs` 매개 변수는 참조로 전달 됩니다. 길이가 `remoteArgModifiers` 의 길이와 동일 해야 `remoteArgs`합니다.       전달 하는 경우 `null` 에 대 한 `remoteArgModifiers`,이 메서드는 참조로 인수 전달 되는지 여부를 확인 하려면 기본 논리를 사용 합니다."
  syntax:
    content: public System.AddIn.Contract.RemoteArgument InvokeMember (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Automation.IRemoteObjectContract target, System.AddIn.Contract.Collections.IRemoteArgumentArrayContract remoteArgs, bool[] remoteArgModifiers, int localeId);
    parameters:
    - id: name
      type: System.String
      description: "호출할 멤버의 이름입니다."
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "비트 조합 된 <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> 멤버에 대 한 검색 방법을 지정 하는 값입니다."
    - id: target
      type: System.AddIn.Contract.Automation.IRemoteObjectContract
      description: "<xref href=&quot;System.AddIn.Contract.Automation.IRemoteObjectContract&quot;> </xref> 지정된 된 멤버를 호출 하는 합니다."
    - id: remoteArgs
      type: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract
      description: "<xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentArrayContract&quot;> </xref> 호출할 멤버에 전달할 인수를 포함 하 합니다."
    - id: remoteArgModifiers
      type: System.Boolean[]
      description: "나타내는 부울 값의 배열 있는지 여부를 각는 `remoteArgs` 값이 참조로 전달 합니다."
    - id: localeId
      type: System.Int32
      description: "호출 되는 멤버에서 수행할 수 있는 로캘 관련 변환에 대해 사용할 로캘 ID입니다."
    return:
      type: System.AddIn.Contract.RemoteArgument
      description: "A <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> 호출된 된 멤버의 반환 값을 나타내는입니다."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember*
  exceptions: []
  platform:
  - net462
references:
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetCanonicalName()
  nameWithType: IRemoteTypeContract.GetCanonicalName()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetEvent(String,BindingFlags)
  nameWithType: IRemoteTypeContract.GetEvent(String,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(String,BindingFlags)
- uid: System.AddIn.Contract.Automation.IRemoteEventInfoContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteEventInfoContract
  nameWithType: IRemoteEventInfoContract
  fullName: System.AddIn.Contract.Automation.IRemoteEventInfoContract
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetEvents(BindingFlags)
  nameWithType: IRemoteTypeContract.GetEvents(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteEventInfoContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemoteEventInfoContract>
  nameWithType: IArrayContract<IRemoteEventInfoContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteEventInfoContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.Automation.IRemoteEventInfoContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.Automation.IRemoteEventInfoContract
    name: IRemoteEventInfoContract
    nameWithType: IRemoteEventInfoContract
    fullName: IRemoteEventInfoContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetField(String,BindingFlags)
  nameWithType: IRemoteTypeContract.GetField(String,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(String,BindingFlags)
- uid: System.AddIn.Contract.Automation.IRemoteFieldInfoContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteFieldInfoContract
  nameWithType: IRemoteFieldInfoContract
  fullName: System.AddIn.Contract.Automation.IRemoteFieldInfoContract
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetFields(BindingFlags)
  nameWithType: IRemoteTypeContract.GetFields(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteFieldInfoContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemoteFieldInfoContract>
  nameWithType: IArrayContract<IRemoteFieldInfoContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteFieldInfoContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.Automation.IRemoteFieldInfoContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.Automation.IRemoteFieldInfoContract
    name: IRemoteFieldInfoContract
    nameWithType: IRemoteFieldInfoContract
    fullName: IRemoteFieldInfoContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetInterface(String)
  nameWithType: IRemoteTypeContract.GetInterface(String)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(String)
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteTypeContract
  nameWithType: IRemoteTypeContract
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetInterfaces()
  nameWithType: IRemoteTypeContract.GetInterfaces()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces()
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemoteTypeContract>
  nameWithType: IArrayContract<IRemoteTypeContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.Automation.IRemoteTypeContract
    name: IRemoteTypeContract
    nameWithType: IRemoteTypeContract
    fullName: IRemoteTypeContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMember(String,MemberTypes,BindingFlags)
  nameWithType: IRemoteTypeContract.GetMember(String,MemberTypes,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(String,MemberTypes,BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.IContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IContract>
  nameWithType: IArrayContract<IContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.IContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.IContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.IContract
    name: IContract
    nameWithType: IContract
    fullName: IContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMembers(BindingFlags)
  nameWithType: IRemoteTypeContract.GetMembers(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(BindingFlags)
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  nameWithType: IRemoteTypeContract.GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
- uid: System.AddIn.Contract.Automation.IRemoteMethodInfoContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteMethodInfoContract
  nameWithType: IRemoteMethodInfoContract
  fullName: System.AddIn.Contract.Automation.IRemoteMethodInfoContract
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMethods(BindingFlags)
  nameWithType: IRemoteTypeContract.GetMethods(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteMethodInfoContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemoteMethodInfoContract>
  nameWithType: IArrayContract<IRemoteMethodInfoContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteMethodInfoContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.Automation.IRemoteMethodInfoContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.Automation.IRemoteMethodInfoContract
    name: IRemoteMethodInfoContract
    nameWithType: IRemoteMethodInfoContract
    fullName: IRemoteMethodInfoContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetProperties(BindingFlags)
  nameWithType: IRemoteTypeContract.GetProperties(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemotePropertyInfoContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemotePropertyInfoContract>
  nameWithType: IArrayContract<IRemotePropertyInfoContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemotePropertyInfoContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.Automation.IRemotePropertyInfoContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.Automation.IRemotePropertyInfoContract
    name: IRemotePropertyInfoContract
    nameWithType: IRemotePropertyInfoContract
    fullName: IRemotePropertyInfoContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  nameWithType: IRemoteTypeContract.GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
- uid: System.AddIn.Contract.Automation.IRemotePropertyInfoContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemotePropertyInfoContract
  nameWithType: IRemotePropertyInfoContract
  fullName: System.AddIn.Contract.Automation.IRemotePropertyInfoContract
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetTypeData()
  nameWithType: IRemoteTypeContract.GetTypeData()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData()
- uid: System.AddIn.Contract.Automation.RemoteTypeData
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: RemoteTypeData
  nameWithType: RemoteTypeData
  fullName: System.AddIn.Contract.Automation.RemoteTypeData
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  nameWithType: IRemoteTypeContract.InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
- uid: System.AddIn.Contract.RemoteArgument
  parent: System.AddIn.Contract
  isExternal: false
  name: RemoteArgument
  nameWithType: RemoteArgument
  fullName: System.AddIn.Contract.RemoteArgument
- uid: System.AddIn.Contract.Automation.IRemoteObjectContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteObjectContract
  nameWithType: IRemoteObjectContract
  fullName: System.AddIn.Contract.Automation.IRemoteObjectContract
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IRemoteArgumentArrayContract
  nameWithType: IRemoteArgumentArrayContract
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract
- uid: System.Boolean[]
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean[]
  spec.csharp:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetCanonicalName
  nameWithType: IRemoteTypeContract.GetCanonicalName
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetEvent
  nameWithType: IRemoteTypeContract.GetEvent
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetEvents
  nameWithType: IRemoteTypeContract.GetEvents
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetField
  nameWithType: IRemoteTypeContract.GetField
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetFields
  nameWithType: IRemoteTypeContract.GetFields
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetInterface
  nameWithType: IRemoteTypeContract.GetInterface
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetInterfaces
  nameWithType: IRemoteTypeContract.GetInterfaces
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMember
  nameWithType: IRemoteTypeContract.GetMember
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMembers
  nameWithType: IRemoteTypeContract.GetMembers
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMethod
  nameWithType: IRemoteTypeContract.GetMethod
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMethods
  nameWithType: IRemoteTypeContract.GetMethods
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetProperties
  nameWithType: IRemoteTypeContract.GetProperties
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetProperty
  nameWithType: IRemoteTypeContract.GetProperty
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetTypeData
  nameWithType: IRemoteTypeContract.GetTypeData
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: InvokeMember
  nameWithType: IRemoteTypeContract.InvokeMember
