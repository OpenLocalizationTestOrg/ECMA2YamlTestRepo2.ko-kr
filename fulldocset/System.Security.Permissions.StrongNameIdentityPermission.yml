### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.StrongNameIdentityPermission
  id: StrongNameIdentityPermission
  children:
  - System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)
  - System.Security.Permissions.StrongNameIdentityPermission.Copy
  - System.Security.Permissions.StrongNameIdentityPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.StrongNameIdentityPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.StrongNameIdentityPermission.Name
  - System.Security.Permissions.StrongNameIdentityPermission.PublicKey
  - System.Security.Permissions.StrongNameIdentityPermission.ToXml
  - System.Security.Permissions.StrongNameIdentityPermission.Union(System.Security.IPermission)
  - System.Security.Permissions.StrongNameIdentityPermission.Version
  langs:
  - csharp
  name: StrongNameIdentityPermission
  nameWithType: StrongNameIdentityPermission
  fullName: System.Security.Permissions.StrongNameIdentityPermission
  type: Class
  summary: "강력한 이름에 대 한 id 권한을 정의합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "> [!IMPORTANT]>&0;부터 [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], id 권한은 사용 되지 않습니다.   >>.NET Framework 버전 1.0 및 1.1에서는 id 권한을 사용할 수 없습니다는 <xref:System.Security.Permissions.PermissionState>권한 상태 값입니다.</xref:System.Security.Permissions.PermissionState> .NET Framework 버전 2.0 이상 id 권한은 모든 권한 상태 값을 가질 수 있습니다.  즉, 버전 2.0 이상 버전에서 id 권한을 구현 하는 권한의 동일한 동작에서 <xref:System.Security.Permissions.IUnrestrictedPermission>인터페이스.</xref:System.Security.Permissions.IUnrestrictedPermission> 즉, 항상 요청 id에 대 한 성공는 어셈블리의 id에 관계 없이 어셈블리에 완전 신뢰가 부여 합니다.       StrongNameIdentityPermission를 사용 하 여 호출 코드에서 특정 강력한 이름의 코드 어셈블리 인지 확인 합니다. StrongNameIdentityPermission에 대 한 전체 요청이 스택의 모든 어셈블리는 올바른 증명 정보 요청을 만족 한 경우에 성공 합니다. 링크를 사용 하는 요청 된 <xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute>특성 직접 실행 호출자에 게 올바른 증명 하는 경우에 성공 합니다.</xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute>       강력한 이름 id가 필요에 따라 함께 이름 및 특정 어셈블리의 버전 binary large object (BLOB) 라는 암호화 공개 키를 기반으로 합니다. 고유한 네임 스페이스를 정의 하 고 이름을 정품이 이름 정의 해당 개인 키에서 서명 된 어셈블리에 있어야 하기 때문에 강력한 증명 정보를 제공 합니다.       강력한 이름 키의 유효성은 신뢰 관계 또는 키에 대해 필수적으로 발급 되는 인증서에 종속 되지 않습니다. 유의 합니다.       .NET Framework 버전 1.0 및 1.1에 대 한 id 권한 호출 하는 어셈블리는 완전히 신뢰할 수 있는 경우에 적용 됩니다. 즉, 호출 하는 어셈블리에 완전 신뢰, 경우에 어셈블리 요청 된 조건에 맞지 않는 경우 id 권한에 대 한 요청이 실패 합니다. .NET Framework 버전 2.0 이상 id 권한 요청이 호출 하는 어셈블리에 완전 신뢰 된 경우에 유용 하지 않습니다. 이 모든 사용 권한은 일관성을 유지할 수 하 고 특수 한 경우로 id 권한의 처리를 제거 합니다.       설명과 강력한 이름에 대 한 참조는 <xref:System.Security.Policy.StrongName>참조 페이지.</xref:System.Security.Policy.StrongName> 강력한 이름의 어셈블리에 대 한 자세한 내용은 참조 [강력한 이름의 어셈블리](~/add/includes/ajax-current-ext-md.md)합니다.       StrongNameIdentityPermission 클래스 형식의 공용 멤버에 액세스 하기 위한 강력한 이름 요구 사항을 정의에 사용 됩니다. <xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute>특성을 사용 하는 어셈블리 수준에서 강력한 이름 요구 사항을 정의 하 여.</xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute> .NET Framework 버전 2.0 이상에서 사용할 수도 있습니다는 <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>특성을 해당 어셈블리의 모든 public이 아닌 형식을 다른 어셈블리에 표시 되도록 지정 합니다.</xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> 자세한 내용은 참조 [Friend 어셈블리](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class StrongNameIdentityPermission : System.Security.CodeAccessPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements: []
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: StrongNameIdentityPermission(PermissionState)
  nameWithType: StrongNameIdentityPermission.StrongNameIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.StrongNameIdentityPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Permissions.StrongNameIdentityPermission&quot;> </xref> 지정된 된 <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>합니다."
  remarks: "중 하나를 생성 완전히 제한 됨 (`None`) 또는 `Unrestricted` 권한.      > [!NOTE] >.NET Framework 버전 1.0 및 1.1 id 권한을 가질 수 없습니다는 <xref:System.Security.Permissions.PermissionState>권한 상태 값입니다.</xref:System.Security.Permissions.PermissionState> .NET Framework 버전 2.0 이상 id 권한은 모든 권한 상태 값을 가질 수 있습니다.  즉, 버전 2.0 이상 버전에서 id 권한을 구현 하는 권한의 동일한 동작에서 <xref:System.Security.Permissions.IUnrestrictedPermission>인터페이스.</xref:System.Security.Permissions.IUnrestrictedPermission> 즉, 항상 요청 id에 대 한 성공는 어셈블리의 id에 관계 없이 어셈블리에 완전 신뢰가 부여 합니다.       .NET Framework 버전 1.0 및 1.1에서는 호출 어셈블리는 완전히 신뢰할 수 있는 경우에에 대 한 id 권한 적용, 됩니다. 즉, 호출 하는 어셈블리에 완전 신뢰 수준으로 id 권한 요청 어셈블리 요청 된 조건에 맞지 않는 경우 실패 합니다. .NET Framework 버전 2.0 이상 id 권한 요청이 호출 하는 어셈블리에 완전 신뢰 된 경우에 유용 하지 않습니다. 이렇게 하면 특별 한 경우로 id 권한의 처리를 제거 하는 모든 사용 권한에 대 한 일관성 됩니다.       사용 권한 상태 값이이 생성자를 사용 하 여 <xref:System.Security.Permissions.PermissionState>강력한 이름과 일치 하지 하는 id 권한을 만들려는.</xref:System.Security.Permissions.PermissionState> 이후에 설정 하는 경우는 <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A>및 <xref:System.Security.Permissions.StrongNameIdentityPermission.Version%2A>속성을 특정 강력한 이름 id 사용 권한으로 나타낼 수 있습니다.</xref:System.Security.Permissions.StrongNameIdentityPermission.Version%2A> </xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A>"
  example:
  - "The following code example shows the use of the StrongNameIdentityPermission constructor.  \n  \n [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#7](~/add/codesnippet/visualbasic/ecc5c20f-4468-431e-a2f0-_1.vb)]\n [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#7](~/add/codesnippet/cpp/ecc5c20f-4468-431e-a2f0-_1.cpp)]\n [!code-cs[System.Security.Permissions.StrongNameIdentityPermission#7](~/add/codesnippet/csharp/ecc5c20f-4468-431e-a2f0-_1.cs)]"
  syntax:
    content: public StrongNameIdentityPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "중 하나는 <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> 값입니다."
  overload: System.Security.Permissions.StrongNameIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> state </code> 매개 변수의 유효한 값이 아닙니다 <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)
  id: '#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)'
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)
  nameWithType: StrongNameIdentityPermission.StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Permissions.StrongNameIdentityPermission&quot;> </xref> 지정 된 강력한 이름 id에 대 한 클래스입니다."
  remarks: "`name` 및 `version` 매개 변수 수 `null` 공개 키 어셈블리를 식별 사용 되는 경우에 합니다. 빈 문자열 (&quot;&quot;) 대신 사용할 수 없습니다 `null`합니다. 경우 `name` 빈 문자열인는 <xref:System.ArgumentException>throw 됩니다.</xref:System.ArgumentException>       이름 및 어셈블리의 버전 번호에 대 한 자세한 내용은 참조 하십시오. [강력한 이름의 어셈블리](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example shows the use of the StrongNameIdentityPermission constructor.  \n  \n [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#8](~/add/codesnippet/visualbasic/f67888ca-a49f-49ea-a115-_1.vb)]\n [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#8](~/add/codesnippet/cpp/f67888ca-a49f-49ea-a115-_1.cpp)]\n [!code-cs[System.Security.Permissions.StrongNameIdentityPermission#8](~/add/codesnippet/csharp/f67888ca-a49f-49ea-a115-_1.cs)]"
  syntax:
    content: public StrongNameIdentityPermission (System.Security.Permissions.StrongNamePublicKeyBlob blob, string name, Version version);
    parameters:
    - id: blob
      type: System.Security.Permissions.StrongNamePublicKeyBlob
      description: "강력한 이름 id 네임 스페이스를 정의 하는 공개 키입니다."
    - id: name
      type: System.String
      description: "강력한 이름 id의 단순한 이름 부분입니다. 이 어셈블리의 이름에 해당합니다."
    - id: version
      type: System.Version
      description: "Id의 버전 번호입니다."
  overload: System.Security.Permissions.StrongNameIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>blob</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> name </code> 매개 변수는 빈 문자열 (&quot;&quot;)."
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.Copy
  id: Copy
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: StrongNameIdentityPermission.Copy()
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "만들고 현재 사용 권한의 동일한 복사본을 반환 합니다."
  remarks: "사용 권한의 복사본은 원래 사용 권한과 리소스에 동일한 액세스를 권한을 나타냅니다."
  example:
  - "The following code example shows the behavior of the Copy method. This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class. The best use for this example is to build and execute the entire example, and view its output.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#5](~/add/codesnippet/visualbasic/m-system.security.permis_15_1.vb)]\n [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#5](~/add/codesnippet/cpp/m-system.security.permis_15_1.cpp)]\n [!code-cs[System.Security.Permissions.StrongNameIdentityPermission#5](~/add/codesnippet/csharp/m-system.security.permis_15_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "현재 사용 권한의 복사본입니다."
  overload: System.Security.Permissions.StrongNameIdentityPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: StrongNameIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "지정 된 상태의 XML 인코딩을 사용 권한을 다시 만듭니다."
  remarks: "이 메서드는 응용 프로그램 코드에서 사용 되지 않습니다."
  example:
  - "The following code example shows the behavior of the FromXml method. This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class. The best use for this example is to build and execute the entire example, and view its output.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#6](~/add/codesnippet/visualbasic/ed9c932c-08d5-452f-8a11-_1.vb)]\n [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#6](~/add/codesnippet/cpp/ed9c932c-08d5-452f-8a11-_1.cpp)]\n [!code-cs[System.Security.Permissions.StrongNameIdentityPermission#6](~/add/codesnippet/csharp/ed9c932c-08d5-452f-8a11-_1.cs)]"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement e);
    parameters:
    - id: e
      type: System.Security.SecurityElement
      description: "XML 사용 권한을 다시 만드는 데 사용할 인코딩입니다."
  overload: System.Security.Permissions.StrongNameIdentityPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>e</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> e </code> 매개 변수가 올바른 권한 요소가 아닙니다.       -또는- <code> e </code> 매개 변수의 버전 번호가 잘못 되었습니다."
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: StrongNameIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "만들고 있는 현재 사용 권한 및 지정한 사용 권한의 공통 사용 권한을 반환 합니다."
  remarks: "두 사용 권한의 공통 사항에는 모두 공통으로 설명 하는 작업 집합을 설명 하는 권한입니다. 원래 사용 권한을 모두 전달 하는 요구만 교집합에 전달 합니다.       두 개의 동일한 강력한 이름 id 권한의 교집합에는 동일한 권한입니다. 서로 다른 두의 교집합 (하지 와일드 카드) 식에는 빈 권한입니다. 와일드 카드 식과 일치 하는 강력한 이름이의 교집합에 강력한 이름입니다. 일치 하는 두 개의 와일드 카드 식이 교차 하는 시간이 더는 두 식의 보다 구체적인 합니다."
  example:
  - "The following code example shows the results of the use of the Intersect method, not how to use the method. This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class. The best use for this example is to build and execute the entire example, and view its output.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#4](~/add/codesnippet/visualbasic/fc41bc4b-3965-4525-8b6a-_1.vb)]\n [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#4](~/add/codesnippet/cpp/fc41bc4b-3965-4525-8b6a-_1.cpp)]\n [!code-cs[System.Security.Permissions.StrongNameIdentityPermission#4](~/add/codesnippet/csharp/fc41bc4b-3965-4525-8b6a-_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "현재 사용 권한 집합과 교차 하는 사용 권한입니다. 현재 사용 권한과 동일한 형식 이어야 합니다."
    return:
      type: System.Security.IPermission
      description: "현재 사용 권한 및 지정한 사용 권한의의 교차 부분을 나타내는 새 사용 권한 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 교집합이 비어 있는 경우."
  overload: System.Security.Permissions.StrongNameIdentityPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code> 매개 변수가 않습니다 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 아니고 현재 사용 권한과 동일한 형식이 있습니다."
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: StrongNameIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "현재 사용 권한이 지정된 된 사용 권한의 하위 집합 인지 확인 합니다."
  remarks: "현재 권한은 현재 사용 권한이 지정된 된 사용 하 여 완전히 포함 된 작업의 집합을 지정 하는 경우 지정된 된 사용 권한의 하위 집합입니다. 예를 들어 같다고 다른 속성, 사용 하는 id는 <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A>MyCompany.MyDepartment.* 와일드 카드 식을 포함 하는 속성 id와의 하위 집합으로 식별 되는 <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A>같을.</xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> </xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A>"
  example:
  - "The following code example shows the results of the use of the IsSubsetOf method, not how to use the method. This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class. The best use for this example is to build and execute the entire example, and view its output.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#2](~/add/codesnippet/visualbasic/e4452cd4-0b1f-49b1-baf5-_1.vb)]\n [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#2](~/add/codesnippet/cpp/e4452cd4-0b1f-49b1-baf5-_1.cpp)]\n [!code-cs[System.Security.Permissions.StrongNameIdentityPermission#2](~/add/codesnippet/csharp/e4452cd4-0b1f-49b1-baf5-_1.cs)]"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "권한 하위 집합 관계에 대해 테스트 하는 것입니다. 이 사용 권한은 현재 권한과 동일한 형식 이어야 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>현재 사용 권한이 지정 된 사용 권한의 하위 집합이 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code> 매개 변수가 않습니다 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 아니고 현재 사용 권한과 동일한 형식이 있습니다."
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.Name
  id: Name
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: Name
  nameWithType: StrongNameIdentityPermission.Name
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "강력한 이름 id의 단순한 이름 부분을 가져오거나 설정 합니다."
  remarks: "Name 속성의 값 정확한 이름이 될 수 있습니다. 또는 마지막 위치;에 와일드 카드 문자 수정할 수 있습니다. 예를 들어 같을 MyCompany.MyDepartment.*은 유효한 이름입니다. Name 속성을 빈 문자열로 설정 하려고 하면 (&quot;&quot;), <xref:System.ArgumentException>throw 됩니다.</xref:System.ArgumentException>"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Id의 단순한 이름입니다."
  overload: System.Security.Permissions.StrongNameIdentityPermission.Name*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "값은 빈 문자열 (&quot;&quot;)."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "모호한 id를 포함 하기 때문에 속성 값을 검색할 수 없습니다."
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.PublicKey
  id: PublicKey
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: PublicKey
  nameWithType: StrongNameIdentityPermission.PublicKey
  fullName: System.Security.Permissions.StrongNameIdentityPermission.PublicKey
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "강력한 이름 id 네임 스페이스를 정의 하는 공개 키 blob을 가져오거나 설정 합니다."
  syntax:
    content: public System.Security.Permissions.StrongNamePublicKeyBlob PublicKey { get; set; }
    return:
      type: System.Security.Permissions.StrongNamePublicKeyBlob
      description: "A <xref href=&quot;System.Security.Permissions.StrongNamePublicKeyBlob&quot;> </xref> id의 공개 키가 들어 있는 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 키가 없는 경우."
  overload: System.Security.Permissions.StrongNameIdentityPermission.PublicKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "속성 값으로 설정 됩니다 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "모호한 id를 포함 하기 때문에 속성 값을 검색할 수 없습니다."
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: StrongNameIdentityPermission.ToXml()
  fullName: System.Security.Permissions.StrongNameIdentityPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "사용 권한 및 현재 상태의 XML 인코딩을 만듭니다."
  remarks: "이 메서드는 응용 프로그램 코드에서 일반적으로 사용 되지 않습니다."
  example:
  - "The following code example shows the behavior of the ToXml method.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#6](~/add/codesnippet/visualbasic/m-system.security.permis_20_1.vb)]\n [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#6](~/add/codesnippet/cpp/m-system.security.permis_20_1.cpp)]\n [!code-cs[System.Security.Permissions.StrongNameIdentityPermission#6](~/add/codesnippet/csharp/m-system.security.permis_20_1.cs)]"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "모든 상태 정보를 포함 하는 권한의 XML 인코딩입니다."
  overload: System.Security.Permissions.StrongNameIdentityPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: StrongNameIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "현재 사용 권한 및 지정된 된 사용 권한을 합한 사용 권한을 만듭니다."
  remarks: "Union에 대 한 호출의 결과는 현재 사용 권한 및 지정한 사용 권한의 둘 다로 나타나는 모든 작업을 나타내는 권한입니다. 사용 권한 중 하나를 전달 하는 모든 요청의 합집합을 통과 합니다.       합집합 및 `null` 은 권한 없는 `null`합니다. 합집합 및 해당 권한의 하위 집합은 서로 포함 하는 권한입니다. 모든 통합 결과 <xref:System.ArgumentException>예외가 throw 됩니다.</xref:System.ArgumentException>"
  example:
  - "The following code example shows the results of the use of the Union method, not how to use the method. This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class. The best use for this example is to build and execute the entire example, and view its output.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#3](~/add/codesnippet/visualbasic/3b1a04e0-7bea-4a40-8e18-_1.vb)]\n [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#3](~/add/codesnippet/cpp/3b1a04e0-7bea-4a40-8e18-_1.cpp)]\n [!code-cs[System.Security.Permissions.StrongNameIdentityPermission#3](~/add/codesnippet/csharp/3b1a04e0-7bea-4a40-8e18-_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "현재 사용 권한과 결합할 사용 권한 현재 사용 권한과 동일한 형식 이어야 합니다."
    return:
      type: System.Security.IPermission
      description: "현재 사용 권한 및 지정한 사용 권한의 합집합을 나타내는 새 사용 권한."
  overload: System.Security.Permissions.StrongNameIdentityPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code> 매개 변수가 않습니다 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 아니고 현재 사용 권한과 동일한 형식이 있습니다.       -또는-두 사용 권한이 같지 않고 하 고 하나는 다른 하위 집합입니다."
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.Version
  id: Version
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: Version
  nameWithType: StrongNameIdentityPermission.Version
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Version
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Id의 버전 번호를 가져오거나 설정 합니다."
  syntax:
    content: public Version Version { get; set; }
    return:
      type: System.Version
      description: "Id의 버전입니다."
  overload: System.Security.Permissions.StrongNameIdentityPermission.Version*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "모호한 id를 포함 하기 때문에 속성 값을 검색할 수 없습니다."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: StrongNameIdentityPermission(PermissionState)
  nameWithType: StrongNameIdentityPermission.StrongNameIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.StrongNameIdentityPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)
  nameWithType: StrongNameIdentityPermission.StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)
- uid: System.Security.Permissions.StrongNamePublicKeyBlob
  parent: System.Security.Permissions
  isExternal: false
  name: StrongNamePublicKeyBlob
  nameWithType: StrongNamePublicKeyBlob
  fullName: System.Security.Permissions.StrongNamePublicKeyBlob
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Security.Permissions.StrongNameIdentityPermission.Copy
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Copy()
  nameWithType: StrongNameIdentityPermission.Copy()
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.StrongNameIdentityPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: StrongNameIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.StrongNameIdentityPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: StrongNameIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Intersect(IPermission)
- uid: System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: StrongNameIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.StrongNameIdentityPermission.Name
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Name
  nameWithType: StrongNameIdentityPermission.Name
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Name
- uid: System.Security.Permissions.StrongNameIdentityPermission.PublicKey
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: PublicKey
  nameWithType: StrongNameIdentityPermission.PublicKey
  fullName: System.Security.Permissions.StrongNameIdentityPermission.PublicKey
- uid: System.Security.Permissions.StrongNameIdentityPermission.ToXml
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: ToXml()
  nameWithType: StrongNameIdentityPermission.ToXml()
  fullName: System.Security.Permissions.StrongNameIdentityPermission.ToXml()
- uid: System.Security.Permissions.StrongNameIdentityPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: StrongNameIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Union(IPermission)
- uid: System.Security.Permissions.StrongNameIdentityPermission.Version
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Version
  nameWithType: StrongNameIdentityPermission.Version
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Version
- uid: System.Security.Permissions.StrongNameIdentityPermission.#ctor*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: StrongNameIdentityPermission
  nameWithType: StrongNameIdentityPermission.StrongNameIdentityPermission
- uid: System.Security.Permissions.StrongNameIdentityPermission.Copy*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Copy
  nameWithType: StrongNameIdentityPermission.Copy
- uid: System.Security.Permissions.StrongNameIdentityPermission.FromXml*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: FromXml
  nameWithType: StrongNameIdentityPermission.FromXml
- uid: System.Security.Permissions.StrongNameIdentityPermission.Intersect*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Intersect
  nameWithType: StrongNameIdentityPermission.Intersect
- uid: System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: StrongNameIdentityPermission.IsSubsetOf
- uid: System.Security.Permissions.StrongNameIdentityPermission.Name*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Name
  nameWithType: StrongNameIdentityPermission.Name
- uid: System.Security.Permissions.StrongNameIdentityPermission.PublicKey*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: PublicKey
  nameWithType: StrongNameIdentityPermission.PublicKey
- uid: System.Security.Permissions.StrongNameIdentityPermission.ToXml*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: ToXml
  nameWithType: StrongNameIdentityPermission.ToXml
- uid: System.Security.Permissions.StrongNameIdentityPermission.Union*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Union
  nameWithType: StrongNameIdentityPermission.Union
- uid: System.Security.Permissions.StrongNameIdentityPermission.Version*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Version
  nameWithType: StrongNameIdentityPermission.Version
