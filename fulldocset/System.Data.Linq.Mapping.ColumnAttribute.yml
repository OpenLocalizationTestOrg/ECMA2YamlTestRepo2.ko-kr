### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.Mapping.ColumnAttribute
  id: ColumnAttribute
  children:
  - System.Data.Linq.Mapping.ColumnAttribute.#ctor
  - System.Data.Linq.Mapping.ColumnAttribute.AutoSync
  - System.Data.Linq.Mapping.ColumnAttribute.CanBeNull
  - System.Data.Linq.Mapping.ColumnAttribute.DbType
  - System.Data.Linq.Mapping.ColumnAttribute.Expression
  - System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated
  - System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator
  - System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey
  - System.Data.Linq.Mapping.ColumnAttribute.IsVersion
  - System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck
  langs:
  - csharp
  name: ColumnAttribute
  nameWithType: ColumnAttribute
  fullName: System.Data.Linq.Mapping.ColumnAttribute
  type: Class
  summary: "클래스는 데이터베이스 테이블의 열에 연결합니다."
  remarks: "이 특성을 사용 하 여 데이터베이스 테이블의 열을 나타내도록 엔터티 클래스의 멤버를 지정 합니다. 모든 필드 또는 속성에이 특성을 적용할 수 `public`, `private`, 또는 `internal`합니다.       열은 지속형으로 표시 되는 엔터티 클래스 구성원만 때 [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] 변경 내용을 데이터베이스에 저장 합니다.       쉼표를 사용 하 여 특성에 여러 속성을 구분 합니다."
  example:
  - "```vb#  \n<Table(Name:=\"Employees\")>  _  \nPublic Class Employees  \n    Private _LastName As String  \n    ' …  \n    <Column(Storage:=\"_LastName\", DbType:=\"NVarChar(20) NOT NULL\", _  \n        CanBeNull:=false)> _  \n    Public Property LastName() As String  \n        Get  \n            Return Me._LastName  \n        End Get  \n        Set  \n            If ((Me._LastName = value) _  \n                = false) Then  \n                Me.OnPropertyChanging(\"LastName\")  \n                Me._LastName = value  \n                Me.OnPropertyChanged(\"LastName\")  \n            End If  \n        End Set  \n    End Property  \nEnd Class  \n```  \n  \n```c#  \n[Table(Name=\"Employees\")]  \npublic class Employees  \n{  \n    private string _LastName;      \n    // …  \n    [Column(Storage=\"_LastName\", DbType=\"NVarChar(20) NOT NULL\",   \n        CanBeNull=false)]  \n    public string LastName  \n    {  \n        get  \n        {  \n            return this._LastName;  \n        }  \n        set  \n        {  \n            if ((this._LastName != value))  \n            {  \n                this.OnPropertyChanging(\"LastName\");  \n                this._LastName = value;  \n                this.OnPropertyChanged(\"LastName\");  \n            }  \n        }  \n    }  \n}  \n```"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false)]

      public sealed class ColumnAttribute : System.Data.Linq.Mapping.DataAttribute
  inheritance:
  - System.Attribute
  - System.Data.Linq.Mapping.DataAttribute
  implements: []
  inheritedMembers:
  - System.Data.Linq.Mapping.DataAttribute.Name
  - System.Data.Linq.Mapping.DataAttribute.Storage
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.#ctor
  id: '#ctor'
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: ColumnAttribute()
  nameWithType: ColumnAttribute.ColumnAttribute()
  fullName: System.Data.Linq.Mapping.ColumnAttribute.ColumnAttribute()
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Linq.Mapping.ColumnAttribute&quot;> </xref> 클래스입니다."
  syntax:
    content: public ColumnAttribute ();
    parameters: []
  overload: System.Data.Linq.Mapping.ColumnAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.AutoSync
  id: AutoSync
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: AutoSync
  nameWithType: ColumnAttribute.AutoSync
  fullName: System.Data.Linq.Mapping.ColumnAttribute.AutoSync
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "가져오거나는 <xref href=&quot;System.Data.Linq.Mapping.AutoSync&quot;> </xref> 열거 합니다."
  remarks: ''
  example:
  - >-
    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#1](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#1)]
     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#1](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#1)]
  syntax:
    content: public System.Data.Linq.Mapping.AutoSync AutoSync { get; set; }
    return:
      type: System.Data.Linq.Mapping.AutoSync
      description: "<xref href=&quot;System.Data.Linq.Mapping.AutoSync&quot;> </xref> 값입니다."
  overload: System.Data.Linq.Mapping.ColumnAttribute.AutoSync*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.CanBeNull
  id: CanBeNull
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: CanBeNull
  nameWithType: ColumnAttribute.CanBeNull
  fullName: System.Data.Linq.Mapping.ColumnAttribute.CanBeNull
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "열 null 값을 포함할 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "이 값을 설정 하는 경우 `false`, 데이터를 해당 열에는 null이 아닌 것으로 간주 됩니다.      > [!NOTE] >에서이 속성은 복제는 <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>편의 위해 속성.</xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> <xref:System.Data.Linq.DataContext.CreateDatabase%2A>메서드만 사용 하 여는 <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>속성.</xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> </xref:System.Data.Linq.DataContext.CreateDatabase%2A> 열에 null 값을 포함할 수 있는지 여부를 지정 해야 이러한 이유로 <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>속성 또한.</xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>"
  example:
  - >-
    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#2](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#2)]
     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#2](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#2)]
  syntax:
    content: public bool CanBeNull { get; set; }
    return:
      type: System.Boolean
      description: "Default = <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Linq.Mapping.ColumnAttribute.CanBeNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.DbType
  id: DbType
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: DbType
  nameWithType: ColumnAttribute.DbType
  fullName: System.Data.Linq.Mapping.ColumnAttribute.DbType
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "데이터베이스 열의 유형을 가져오거나 설정 합니다."
  remarks: "Transact SQL 테이블 선언에는 열을 정의 하는 정확한 텍스트를 지정 하려면이 속성을 사용 합니다. 사용 하려는 경우에 DbType 속성이 지정 <xref:System.Data.Linq.DataContext.CreateDatabase%2A>데이터베이스의 인스턴스를 만듭니다.</xref:System.Data.Linq.DataContext.CreateDatabase%2A>       DbType의 기본값은 멤버 형식에서 유추 됩니다. 자세한 내용은 참조 [SQL-CLR 형식 매핑](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - >-
    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#4](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#4)]
     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#4](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#4)]
  syntax:
    content: public string DbType { get; set; }
    return:
      type: System.String
      description: "설명 부분을 참조 하십시오."
  overload: System.Data.Linq.Mapping.ColumnAttribute.DbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.Expression
  id: Expression
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: Expression
  nameWithType: ColumnAttribute.Expression
  fullName: System.Data.Linq.Mapping.ColumnAttribute.Expression
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "열에는 데이터베이스에 있는 계산된 열이 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "사용 하는 경우이 속성을 사용 하 여 <xref:System.Data.Linq.DataContext.CreateDatabase%2A>계산 된 값을 포함 한 것으로 열을 정의 하.</xref:System.Data.Linq.DataContext.CreateDatabase%2A>       SQL에 정의 된 열을 만들려는 경우 등 `InventoryVal AS UnitPrice * UnitsInStock`, 다음을 사용 하 여 *식* 문자열: `&quot;UnitPrice * UnitsInStock&quot;`합니다.      > [!NOTE]  >   [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] 기본 키로 계산 된 열을 지원 하지 않습니다."
  example:
  - >-
    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#5](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#5)]
     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#5](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#5)]
  syntax:
    content: public string Expression { get; set; }
    return:
      type: System.String
      description: "기본값은 비어 있습니다."
  overload: System.Data.Linq.Mapping.ColumnAttribute.Expression*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated
  id: IsDbGenerated
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: IsDbGenerated
  nameWithType: ColumnAttribute.IsDbGenerated
  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "열에는 데이터베이스가 자동으로 생성 하는 값이 포함 되어 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "데이터의 행이 삽입 및 멤버는 이후에 사용 가능 IsDbGenerated 멤버 즉시 동기화 됩니다 <xref:System.Data.Linq.DataContext.SubmitChanges%2A>완료 됩니다.</xref:System.Data.Linq.DataContext.SubmitChanges%2A>      > [!NOTE] > 기본 키 값을 보유 하는 열 및 IsDbGenerated로 지정 하는 경우 `true`도 추가 해야는 <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>사용 하 여 속성의 `IDENTITY` 한정자.</xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>"
  example:
  - >-
    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#6](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#6)]
     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#6](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#6)]
  syntax:
    content: public bool IsDbGenerated { get; set; }
    return:
      type: System.Boolean
      description: "Default = <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator
  id: IsDiscriminator
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: IsDiscriminator
  nameWithType: ColumnAttribute.IsDiscriminator
  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "열에 대 한 판별자 값이 포함 되는지 여부를 가져오거나는 [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] 상속 계층 구조입니다."
  remarks: "때 `true`,이 속성은 클래스 멤버가 상속 계층 구조에 대 한 판별자 값을 보유 하는 것으로 식별 합니다.       이 속성 설정할 수 있습니다 `true` no 고 최상위에 속해야 하는 둘 이상의 멤버 클래스 계층 구조에 매핑."
  example:
  - >-
    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#7](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#7)]
     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#7](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#7)]
  syntax:
    content: public bool IsDiscriminator { get; set; }
    return:
      type: System.Boolean
      description: "Default = <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey
  id: IsPrimaryKey
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: IsPrimaryKey
  nameWithType: ColumnAttribute.IsPrimaryKey
  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "이 클래스 멤버가 열은 테이블의 기본 키의 일부 또는 전체를 나타내는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "엔터티 클래스를 가정할 때 구성원을 하나 이상이 특성을 제공 해야 하 고 기본 키 또는 고유 키에 해당 테이블 또는 뷰의에 매핑되어야 합니다. 이 표시 되는이 메시지를 작업에 실패 하면 [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] 데이터베이스에 변경 내용을 전송 하는 것에 대 한 읽기 전용으로 클래스의 인스턴스를 고려해 야 합니다.       이 속성을 사용 하 여 클래스의 여러 멤버를 지정 하는 경우 연결된 된 열의의 복합 키 이라고 합니다.      > [!NOTE]  >   [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] 기본 키로 계산 된 열을 지원 하지 않습니다."
  example:
  - >-
    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#8](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#8)]
     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#8](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#8)]
  syntax:
    content: public bool IsPrimaryKey { get; set; }
    return:
      type: System.Boolean
      description: "Default = <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsVersion
  id: IsVersion
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: IsVersion
  nameWithType: ColumnAttribute.IsVersion
  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsVersion
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "멤버의 열 형식을 데이터베이스 타임 스탬프 또는 버전 번호 인지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "버전 번호가 증가 하 고 타임 스탬프 열에 연결 된 행이 업데이트 될 때마다 업데이트 됩니다. (이 속성은 [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] 새 버전을 표시 하도록 업데이트 해야 하는 열; 업데이트를 변경한 사용자와 같은 정보를 기록으로 다루지는지 않습니다.)       다음에 유의 때 `IsVersion` 가 true:-사용 <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>버전 번호 또는 타임 스탬프 열을 지정 하려면 올바른 한정자를 지정할 수 있습니다.</xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> 지정 하지 않으면 <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>, [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] 올바른 한정자를 유추 합니다.</xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>       버전 번호가 증가 하 고 타임 스탬프 열에 연결 된 행이 업데이트 될 때마다 업데이트 됩니다. 구성원과 `IsVersion=true` 데이터 행이 업데이트 후에 즉시 동기화 됩니다. 새 값이 표시 됩니다 <xref:System.Data.Linq.DataContext.SubmitChanges%2A>완료 합니다.</xref:System.Data.Linq.DataContext.SubmitChanges%2A>"
  example:
  - >-
    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#9](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#9)]
     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#9](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#9)]
  syntax:
    content: public bool IsVersion { get; set; }
    return:
      type: System.Boolean
      description: "기본값 = <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Linq.Mapping.ColumnAttribute.IsVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck
  id: UpdateCheck
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: UpdateCheck
  nameWithType: ColumnAttribute.UpdateCheck
  fullName: System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "가져오거나 방법을 [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] 낙관적 동시성 충돌 감지에 접근 합니다."
  remarks: "이 속성은 세 가지 열거형 중 하나에 사용 하는 경우를 결정 방법을 [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] 동시성 충돌을 감지 합니다.       로 디자인 된 멤버가 없는 경우 `IsVersion=true`, 원래 멤버 값이 현재 데이터베이스 상태와 비교 됩니다.       다음 열거형을 사용할 수 있는:- `Always` 항상 충돌 감지에 대 한이 열을 사용 합니다.      - `Never` 충돌 감지에 대 한이 열을 사용 하지 마십시오.      - `WhenChanged` 멤버 응용 프로그램에 의해 변경 된 경우에이 열을 사용 합니다."
  example:
  - >-
    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#10](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#10)]
     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#10](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#10)]
  syntax:
    content: public System.Data.Linq.Mapping.UpdateCheck UpdateCheck { get; set; }
    return:
      type: System.Data.Linq.Mapping.UpdateCheck
      description: "기본값 = <xref href=&quot;System.Data.Linq.Mapping.UpdateCheck&quot;> </xref>하지 않는 한, <xref:System.Data.Linq.Mapping.ColumnAttribute.IsVersion*>은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 멤버에 대 한.</xref:System.Data.Linq.Mapping.ColumnAttribute.IsVersion*>       다른 값은 <xref href=&quot;System.Data.Linq.Mapping.UpdateCheck&quot;> </xref> 및 <xref href=&quot;System.Data.Linq.Mapping.UpdateCheck&quot;> </xref>합니다."
  overload: System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Linq.Mapping.DataAttribute
  isExternal: false
  name: System.Data.Linq.Mapping.DataAttribute
- uid: System.Data.Linq.Mapping.ColumnAttribute.#ctor
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: ColumnAttribute()
  nameWithType: ColumnAttribute.ColumnAttribute()
  fullName: System.Data.Linq.Mapping.ColumnAttribute.ColumnAttribute()
- uid: System.Data.Linq.Mapping.ColumnAttribute.AutoSync
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: AutoSync
  nameWithType: ColumnAttribute.AutoSync
  fullName: System.Data.Linq.Mapping.ColumnAttribute.AutoSync
- uid: System.Data.Linq.Mapping.AutoSync
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: AutoSync
  nameWithType: AutoSync
  fullName: System.Data.Linq.Mapping.AutoSync
- uid: System.Data.Linq.Mapping.ColumnAttribute.CanBeNull
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: CanBeNull
  nameWithType: ColumnAttribute.CanBeNull
  fullName: System.Data.Linq.Mapping.ColumnAttribute.CanBeNull
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.Mapping.ColumnAttribute.DbType
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: DbType
  nameWithType: ColumnAttribute.DbType
  fullName: System.Data.Linq.Mapping.ColumnAttribute.DbType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Linq.Mapping.ColumnAttribute.Expression
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: Expression
  nameWithType: ColumnAttribute.Expression
  fullName: System.Data.Linq.Mapping.ColumnAttribute.Expression
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: IsDbGenerated
  nameWithType: ColumnAttribute.IsDbGenerated
  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: IsDiscriminator
  nameWithType: ColumnAttribute.IsDiscriminator
  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: IsPrimaryKey
  nameWithType: ColumnAttribute.IsPrimaryKey
  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsVersion
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: IsVersion
  nameWithType: ColumnAttribute.IsVersion
  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsVersion
- uid: System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: UpdateCheck
  nameWithType: ColumnAttribute.UpdateCheck
  fullName: System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck
- uid: System.Data.Linq.Mapping.UpdateCheck
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: UpdateCheck
  nameWithType: UpdateCheck
  fullName: System.Data.Linq.Mapping.UpdateCheck
- uid: System.Data.Linq.Mapping.ColumnAttribute.#ctor*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: ColumnAttribute
  nameWithType: ColumnAttribute.ColumnAttribute
- uid: System.Data.Linq.Mapping.ColumnAttribute.AutoSync*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: AutoSync
  nameWithType: ColumnAttribute.AutoSync
- uid: System.Data.Linq.Mapping.ColumnAttribute.CanBeNull*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: CanBeNull
  nameWithType: ColumnAttribute.CanBeNull
- uid: System.Data.Linq.Mapping.ColumnAttribute.DbType*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: DbType
  nameWithType: ColumnAttribute.DbType
- uid: System.Data.Linq.Mapping.ColumnAttribute.Expression*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: Expression
  nameWithType: ColumnAttribute.Expression
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: IsDbGenerated
  nameWithType: ColumnAttribute.IsDbGenerated
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: IsDiscriminator
  nameWithType: ColumnAttribute.IsDiscriminator
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: IsPrimaryKey
  nameWithType: ColumnAttribute.IsPrimaryKey
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsVersion*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: IsVersion
  nameWithType: ColumnAttribute.IsVersion
- uid: System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: UpdateCheck
  nameWithType: ColumnAttribute.UpdateCheck
