### YamlMime:ManagedReference
items:
- uid: System.Web.UI.TemplateContainerAttribute
  id: TemplateContainerAttribute
  children:
  - System.Web.UI.TemplateContainerAttribute.#ctor(System.Type)
  - System.Web.UI.TemplateContainerAttribute.#ctor(System.Type,System.ComponentModel.BindingDirection)
  - System.Web.UI.TemplateContainerAttribute.BindingDirection
  - System.Web.UI.TemplateContainerAttribute.ContainerType
  langs:
  - csharp
  name: TemplateContainerAttribute
  nameWithType: TemplateContainerAttribute
  fullName: System.Web.UI.TemplateContainerAttribute
  type: Class
  summary: "반환 하는 속성의 컨테이너 컨트롤의 기본 형식을 선언는 <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> 인터페이스 및 TemplateContainerAttribute 특성으로 표시 됩니다. 사용 하 여 컨트롤의 <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> 속성 구현 해야 합니다는 <xref href=&quot;System.Web.UI.INamingContainer&quot;> </xref> 인터페이스입니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "<xref:System.Type>TemplateContainerAttribute 개체의 매개 변수로 전달 되는 개체의 형식으로 파서에서 사용은 <xref:System.ComponentModel.Container>데이터 바인딩 식에 사용 되는 개체입니다.</xref:System.ComponentModel.Container> </xref:System.Type> 속성이 반환 하는 컨트롤은 <xref:System.Web.UI.ITemplate>인터페이스 및는 TemplateContainerAttribute로 표시 되어를 구현 해야 합니다는 <xref:System.Web.UI.INamingContainer>인터페이스.</xref:System.Web.UI.INamingContainer> </xref:System.Web.UI.ITemplate>       특성을 사용 하는 방법에 대 한 자세한 내용은 참조 [특성](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to create a templated control named `TemplatedFirstControl` and associate it with a container named `FirstTemplateContainer`. This allows the creation of custom controls that display the server time when the template is not specified and the template's content when the template is specified.  \n  \n [!code-cs[SystemWebUI_TemplateContainerAttribute#1](~/add/codesnippet/csharp/t-system.web.ui.template_0_1.cs)]\n [!code-vb[SystemWebUI_TemplateContainerAttribute#1](~/add/codesnippet/visualbasic/t-system.web.ui.template_0_1.vb)]  \n  \n The following Web form demonstrates how to use the custom control created in the preceding code example. Two instances of the `TemplatedFirstControl` are placed on the page:  \n  \n-   The first instance includes the template `<FirstTemplate>`.  \n  \n-   The second instance does not include `<FirstTemplate>`; therefore, it shows just the time.  \n  \n [!code-cs[SystemWebUI_TemplateContainerAttribute#2](~/add/codesnippet/csharp/t-system.web.ui.template_0_2.aspx)]\n [!code-vb[SystemWebUI_TemplateContainerAttribute#2](~/add/codesnippet/visualbasic/t-system.web.ui.template_0_2.aspx)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property)]

      public sealed class TemplateContainerAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.TemplateContainerAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Web.UI.TemplateContainerAttribute
  langs:
  - csharp
  name: TemplateContainerAttribute(Type)
  nameWithType: TemplateContainerAttribute.TemplateContainerAttribute(Type)
  fullName: System.Web.UI.TemplateContainerAttribute.TemplateContainerAttribute(Type)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.TemplateContainerAttribute&quot;> </xref> 클래스 지정한 컨테이너 유형은 사용 합니다."
  remarks: ''
  example:
  - "The following code example shows how to create a templated control named `TemplatedFirstControl` and associate it with a container named `FirstTemplateContainer`. This allows the creation of custom controls that display the server time when the template is not specified and the template's content when the template is specified. The <xref:System.Web.UI.TemplateContainerAttribute> class is used for the `FirstTemplate` property.  \n  \n [!code-cs[SystemWebUI_TemplateContainerAttribute#1](~/add/codesnippet/csharp/m-system.web.ui.template_8_1.cs)]\n [!code-vb[SystemWebUI_TemplateContainerAttribute#1](~/add/codesnippet/visualbasic/m-system.web.ui.template_8_1.vb)]"
  syntax:
    content: public TemplateContainerAttribute (Type containerType);
    parameters:
    - id: containerType
      type: System.Type
      description: "<xref:System.Type>컨테이너 컨트롤에 대 한.</xref:System.Type>"
  overload: System.Web.UI.TemplateContainerAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.TemplateContainerAttribute.#ctor(System.Type,System.ComponentModel.BindingDirection)
  id: '#ctor(System.Type,System.ComponentModel.BindingDirection)'
  parent: System.Web.UI.TemplateContainerAttribute
  langs:
  - csharp
  name: TemplateContainerAttribute(Type,BindingDirection)
  nameWithType: TemplateContainerAttribute.TemplateContainerAttribute(Type,BindingDirection)
  fullName: System.Web.UI.TemplateContainerAttribute.TemplateContainerAttribute(Type,BindingDirection)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.TemplateContainerAttribute&quot;> </xref> 지정한 컨테이너 유형은 사용 하 여 클래스 및 <xref:System.Web.UI.TemplateContainerAttribute.BindingDirection*>속성.</xref:System.Web.UI.TemplateContainerAttribute.BindingDirection*>"
  syntax:
    content: public TemplateContainerAttribute (Type containerType, System.ComponentModel.BindingDirection bindingDirection);
    parameters:
    - id: containerType
      type: System.Type
      description: "<xref:System.Type>컨테이너 컨트롤에 대 한.</xref:System.Type>"
    - id: bindingDirection
      type: System.ComponentModel.BindingDirection
      description: "<xref:System.Web.UI.TemplateContainerAttribute.BindingDirection*>컨테이너 컨트롤에 대 한.</xref:System.Web.UI.TemplateContainerAttribute.BindingDirection*>"
  overload: System.Web.UI.TemplateContainerAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.TemplateContainerAttribute.BindingDirection
  id: BindingDirection
  parent: System.Web.UI.TemplateContainerAttribute
  langs:
  - csharp
  name: BindingDirection
  nameWithType: TemplateContainerAttribute.BindingDirection
  fullName: System.Web.UI.TemplateContainerAttribute.BindingDirection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "컨테이너 컨트롤의 바인딩 방향을 가져옵니다."
  remarks: "BindingDirection 속성 일 수는 <xref:System.ComponentModel.BindingDirection>템플릿을 속성 값만을 허용 하는 위치 필드 또는 <xref:System.ComponentModel.BindingDirection>필드 템플릿을 수락 및 속성 값을 노출할 수 있습니다.</xref:System.ComponentModel.BindingDirection> </xref:System.ComponentModel.BindingDirection> 후자의 경우에 데이터 바인딩된 컨트롤이 자동으로 צ ְ ײ update, delete 및 insert 작업을 사용 하 여 데이터 소스는 `Bind` 데이터 바인딩 구문입니다.       데이터 바인딩에 대 한 자세한 내용은 참조 하십시오. [데이터베이스에 바인딩](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742) 및 [데이터 바인딩 식 개요](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to create a templated control named `TemplatedFirstControl` and associate it with a container named `FirstTemplateContainer`. This allows the creation of custom controls that display the server time when the template is not specified and the contents of the template when the template is specified. The <xref:System.Attribute.GetCustomAttribute%2A> method determines the BindingDirection property of the `FirstTemplate` property of the `TemplateFirstControl`.  \n  \n This code example is part of a larger example provided for the <xref:System.Web.UI.TemplateContainerAttribute> class.  \n  \n [!code-cs[SystemWebUI_TemplateContainerAttribute#3](~/add/codesnippet/csharp/p-system.web.ui.template_0_1.aspx)]\n [!code-vb[SystemWebUI_TemplateContainerAttribute#3](~/add/codesnippet/visualbasic/p-system.web.ui.template_0_1.aspx)]"
  syntax:
    content: public System.ComponentModel.BindingDirection BindingDirection { get; }
    return:
      type: System.ComponentModel.BindingDirection
      description: "A <xref href=&quot;System.ComponentModel.BindingDirection&quot;> </xref> 나타내는 컨테이너 컨트롤의 바인딩 방향입니다. 기본값은 <xref href=&quot;System.ComponentModel.BindingDirection&quot;> </xref>합니다."
  overload: System.Web.UI.TemplateContainerAttribute.BindingDirection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.TemplateContainerAttribute.ContainerType
  id: ContainerType
  parent: System.Web.UI.TemplateContainerAttribute
  langs:
  - csharp
  name: ContainerType
  nameWithType: TemplateContainerAttribute.ContainerType
  fullName: System.Web.UI.TemplateContainerAttribute.ContainerType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "컨테이너 컨트롤 형식을 가져옵니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to create a templated control named `TemplatedFirstControl` and associate it with a container named `FirstTemplateContainer`. This allows the creation of custom controls that display the server time when the template is not specified and the template's content when the template is specified. The <xref:System.Web.UI.TemplateContainerAttribute> class is used for the `FirstTemplate` property and for specifying the ContainerType property as `FirstTemplateContainer`.  \n  \n [!code-cs[SystemWebUI_TemplateContainerAttribute#1](~/add/codesnippet/csharp/p-system.web.ui.template_2_1.cs)]\n [!code-vb[SystemWebUI_TemplateContainerAttribute#1](~/add/codesnippet/visualbasic/p-system.web.ui.template_2_1.vb)]"
  syntax:
    content: public Type ContainerType { get; }
    return:
      type: System.Type
      description: "컨테이너 컨트롤 <xref:System.Type>입니다.</xref:System.Type>"
  overload: System.Web.UI.TemplateContainerAttribute.ContainerType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Web.UI.TemplateContainerAttribute.#ctor(System.Type)
  parent: System.Web.UI.TemplateContainerAttribute
  isExternal: false
  name: TemplateContainerAttribute(Type)
  nameWithType: TemplateContainerAttribute.TemplateContainerAttribute(Type)
  fullName: System.Web.UI.TemplateContainerAttribute.TemplateContainerAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.TemplateContainerAttribute.#ctor(System.Type,System.ComponentModel.BindingDirection)
  parent: System.Web.UI.TemplateContainerAttribute
  isExternal: false
  name: TemplateContainerAttribute(Type,BindingDirection)
  nameWithType: TemplateContainerAttribute.TemplateContainerAttribute(Type,BindingDirection)
  fullName: System.Web.UI.TemplateContainerAttribute.TemplateContainerAttribute(Type,BindingDirection)
- uid: System.ComponentModel.BindingDirection
  parent: System.ComponentModel
  isExternal: false
  name: BindingDirection
  nameWithType: BindingDirection
  fullName: System.ComponentModel.BindingDirection
- uid: System.Web.UI.TemplateContainerAttribute.BindingDirection
  parent: System.Web.UI.TemplateContainerAttribute
  isExternal: false
  name: BindingDirection
  nameWithType: TemplateContainerAttribute.BindingDirection
  fullName: System.Web.UI.TemplateContainerAttribute.BindingDirection
- uid: System.Web.UI.TemplateContainerAttribute.ContainerType
  parent: System.Web.UI.TemplateContainerAttribute
  isExternal: false
  name: ContainerType
  nameWithType: TemplateContainerAttribute.ContainerType
  fullName: System.Web.UI.TemplateContainerAttribute.ContainerType
- uid: System.Web.UI.TemplateContainerAttribute.#ctor*
  parent: System.Web.UI.TemplateContainerAttribute
  isExternal: false
  name: TemplateContainerAttribute
  nameWithType: TemplateContainerAttribute.TemplateContainerAttribute
- uid: System.Web.UI.TemplateContainerAttribute.BindingDirection*
  parent: System.Web.UI.TemplateContainerAttribute
  isExternal: false
  name: BindingDirection
  nameWithType: TemplateContainerAttribute.BindingDirection
- uid: System.Web.UI.TemplateContainerAttribute.ContainerType*
  parent: System.Web.UI.TemplateContainerAttribute
  isExternal: false
  name: ContainerType
  nameWithType: TemplateContainerAttribute.ContainerType
