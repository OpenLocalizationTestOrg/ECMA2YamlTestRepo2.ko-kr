### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ServiceReference
  id: ServiceReference
  children:
  - System.Web.UI.ServiceReference.#ctor
  - System.Web.UI.ServiceReference.#ctor(System.String)
  - System.Web.UI.ServiceReference.GetProxyScript(System.Web.UI.ScriptManager,System.Web.UI.Control)
  - System.Web.UI.ServiceReference.GetProxyUrl(System.Web.UI.ScriptManager,System.Web.UI.Control)
  - System.Web.UI.ServiceReference.InlineScript
  - System.Web.UI.ServiceReference.Path
  - System.Web.UI.ServiceReference.ToString
  langs:
  - csharp
  name: ServiceReference
  nameWithType: ServiceReference
  fullName: System.Web.UI.ServiceReference
  type: Class
  summary: "웹 페이지에 사용 하기 위해 웹 서비스를 등록합니다."
  remarks: "ECMAScript (JavaScript)에서 웹 서비스 메서드를 호출 하려면 ASP.NET 페이지에 대 한 서비스 참조를 포함 하며 적용는 <xref:System.Web.Script.Services.ScriptServiceAttribute>웹 서비스 클래스 정의 특성.</xref:System.Web.Script.Services.ScriptServiceAttribute> 웹 서비스에 대 한 서비스 참조를 포함 하는 경우는 <xref:System.Web.UI.ScriptManager>또는 <xref:System.Web.UI.ScriptManagerProxy>ASP.NET 페이지, 개체 브라우저에서 인스턴스화되는 JavaScript 컨트롤입니다.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager>       프록시 개체에서 다음을 수행 하는 데 사용 됩니다.-확인 비동기 요청 JavaScript에서 웹 서비스 메서드를,-서버 데이터 형식에 대 한 특히 프록시의 Initialize 인스턴스 사용 입력된 매개 변수로 웹 메서드를 호출 합니다.      > [!NOTE] > The ServiceReference 컨트롤 같은 도메인 서비스에에서 대해서만 사용할 수 있습니다.       추가 하 여 웹 서비스 위치를 선언적으로 정의할 수는 `<asp:ServiceReference>` 요소를는 `<Services>` 요소 안에 `<asp:ScriptManager>` 요소 페이지에서 다음 설정에 해당 <xref:System.Web.UI.ServiceReference.Path%2A>다음 예제와 같이 특성.</xref:System.Web.UI.ServiceReference.Path%2A>      ```   <asp:ScriptManager runat=&quot;server&quot; ID=&quot;scriptManager&quot;>     <Services>       <asp:ServiceReference Path=&quot;~/WebServices/SimpleWebService.asmx&quot; />     </Services>   </asp:ScriptManager>   ```사용할 수는 <xref:System.Web.UI.ServiceReference.InlineScript%2A>속성이 있는지를 나타내는 프록시 생성 스크립트에 인라인 스크립트 블록으로 페이지에 포함 되므로 별도 요청 하 여 얻습니다.</xref:System.Web.UI.ServiceReference.InlineScript%2A>       또한 프로그래밍 방식으로 통해 <xref:System.Web.UI.ScriptManager.Services%2A?displayProperty=fullName>또는 <xref:System.Web.UI.ScriptManagerProxy.Services%2A?displayProperty=fullName> <xref:System.Collections.ObjectModel.Collection%601.Add%2A> <xref:System.Web.UI.ServiceReferenceCollection>클래스</xref:System.Web.UI.ServiceReferenceCollection> 의 메서드</xref:System.Collections.ObjectModel.Collection%601.Add%2A> 를 사용 하 여 컬렉션</xref:System.Web.UI.ScriptManagerProxy.Services%2A?displayProperty=fullName> </xref:System.Web.UI.ScriptManager.Services%2A?displayProperty=fullName> ServiceReference 개체를 추가할 수 있습니다."
  example:
  - "The following example demonstrates how to add a reference to a Web service in the page markup to call the Web service methods from script.  \n  \n [!code-vb[System.Web.Script.Services.ScriptMethodAttribute#5](~/add/codesnippet/visualbasic/t-system.web.ui.servicer_1.aspx)]\n [!code-cs[System.Web.Script.Services.ScriptMethodAttribute#5](~/add/codesnippet/csharp/t-system.web.ui.servicer_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Path")]

      public class ServiceReference
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.#ctor
  id: '#ctor'
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: ServiceReference()
  nameWithType: ServiceReference.ServiceReference()
  fullName: System.Web.UI.ServiceReference.ServiceReference()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.ServiceReference&quot;> </xref> 클래스입니다."
  syntax:
    content: public ServiceReference ();
    parameters: []
  overload: System.Web.UI.ServiceReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: ServiceReference(String)
  nameWithType: ServiceReference.ServiceReference(String)
  fullName: System.Web.UI.ServiceReference.ServiceReference(String)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.ServiceReference&quot;> </xref> 지정된 된 경로 사용 하 여 클래스입니다."
  syntax:
    content: public ServiceReference (string path);
    parameters:
    - id: path
      type: System.String
      description: "웹 서비스의 위치입니다."
  overload: System.Web.UI.ServiceReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.GetProxyScript(System.Web.UI.ScriptManager,System.Web.UI.Control)
  id: GetProxyScript(System.Web.UI.ScriptManager,System.Web.UI.Control)
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: GetProxyScript(ScriptManager,Control)
  nameWithType: ServiceReference.GetProxyScript(ScriptManager,Control)
  fullName: System.Web.UI.ServiceReference.GetProxyScript(ScriptManager,Control)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "파생 된 프록시 스크립트를 제공 <xref href=&quot;System.Web.UI.ServiceReference&quot;> </xref> 사용자 지정으로 재정의 될 수 있는 개체입니다."
  remarks: "`containingControl` 매개 변수는는 <xref:System.Web.UI.ScriptManager>개체 또는 <xref:System.Web.UI.ScriptManagerProxy>필요한 개체는 <xref:System.Web.UI.ServiceReference>개체 이루어집니다.</xref:System.Web.UI.ServiceReference> </xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> 상대 URL 확인에 대 한 기준으로 사용 해야 합니다."
  syntax:
    content: protected virtual string GetProxyScript (System.Web.UI.ScriptManager scriptManager, System.Web.UI.Control containingControl);
    parameters:
    - id: scriptManager
      type: System.Web.UI.ScriptManager
      description: "<xref href=&quot;System.Web.UI.ScriptManager&quot;> </xref> 페이지에서 제어 합니다."
    - id: containingControl
      type: System.Web.UI.Control
      description: "A <xref href=&quot;System.Web.UI.Control&quot;></xref> object."
    return:
      type: System.String
      description: "프록시 스크립트입니다."
  overload: System.Web.UI.ServiceReference.GetProxyScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.GetProxyUrl(System.Web.UI.ScriptManager,System.Web.UI.Control)
  id: GetProxyUrl(System.Web.UI.ScriptManager,System.Web.UI.Control)
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: GetProxyUrl(ScriptManager,Control)
  nameWithType: ServiceReference.GetProxyUrl(ScriptManager,Control)
  fullName: System.Web.UI.ServiceReference.GetProxyUrl(ScriptManager,Control)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "파생 된 프록시 URL을 제공 <xref href=&quot;System.Web.UI.ServiceReference&quot;> </xref> 개체 사용자 지정으로 재정의할 수 있습니다."
  remarks: "`containingControl` 매개 변수는는 <xref:System.Web.UI.ScriptManager>개체 또는 <xref:System.Web.UI.ScriptManagerProxy>개체를는 <xref:System.Web.UI.ServiceReference>개체 정의 및 URL의 상대 주소 확인에 대 한 기준으로 사용할 수 있습니다.</xref:System.Web.UI.ServiceReference> </xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager>"
  syntax:
    content: protected virtual string GetProxyUrl (System.Web.UI.ScriptManager scriptManager, System.Web.UI.Control containingControl);
    parameters:
    - id: scriptManager
      type: System.Web.UI.ScriptManager
      description: "<xref href=&quot;System.Web.UI.ScriptManager&quot;> </xref> 페이지에서 제어 합니다."
    - id: containingControl
      type: System.Web.UI.Control
      description: "A <xref href=&quot;System.Web.UI.Control&quot;></xref> object."
    return:
      type: System.String
      description: "프록시 URL입니다."
  overload: System.Web.UI.ServiceReference.GetProxyUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.InlineScript
  id: InlineScript
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: InlineScript
  nameWithType: ServiceReference.InlineScript
  fullName: System.Web.UI.ServiceReference.InlineScript
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "프록시 생성 스크립트 인라인 스크립트 블록으로 페이지에 포함 되므로 별도 요청에 의해 가져올지를 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "기본값은 InlineScript 속성 선언 되지 않은 경우 `false`합니다.       InlineScript로 설정 되 면 `false`, ECMAScript (JavaScript) 프록시를 생성 하기 위한 스크립트가 서버에 대 한 추가 요청에서 별도 스크립트 파일로 다운로드 됩니다. 브라우저 캐시를 사용 하는 경우이 옵션은 여러 웹 페이지에 동일한 서비스 참조를 사용 하는 경우에 유용 합니다.       InlineScript로 설정 되 면 `true`, 프록시 생성이 스크립트는 페이지에 인라인 스크립트 블록으로 포함 합니다. 페이지에서 많은 서비스 참조 되는 다른 페이지는 동일한 서비스를 참조 하지 않는 경우에 특히의 네트워크 요청 수를 줄여 서버 성능을 향상 시킬 수 있습니다이 합니다. 또한는 <xref:System.Web.UI.ServiceReference.Path%2A>InlineScript로 설정 된 경우 속성을 상대 경로로 설정 해야 `true`.</xref:System.Web.UI.ServiceReference.Path%2A>"
  syntax:
    content: public virtual bool InlineScript { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>프록시 생성 스크립트를 페이지에 인라인 스크립트 블록으로 포함 하는 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 프록시 생성 스크립트는 별도 요청으로 가져온 경우. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.ServiceReference.InlineScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.Path
  id: Path
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: Path
  nameWithType: ServiceReference.Path
  fullName: System.Web.UI.ServiceReference.Path
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "참조 된 웹 서비스의 경로 가져오거나 설정 합니다."
  remarks: "로컬 웹 서비스에만 Path 속성 가리킬 수 있습니다. 즉,이 속성 AJAX 사용 ASP.NET 웹 응용 프로그램과 동일한 도메인에 웹 서비스에만 지정 합니다. 경로 상대, 응용 프로그램에 상대적인, 도메인 상대 또는 절대 경로 수 있습니다.       경우는 <xref:System.Web.UI.ServiceReference.InlineScript%2A>속성이 `true`를 포함 하는 페이지와 같은 웹 응용 프로그램을 가리키는 상대 경로 사용 해야 합니다는 <xref:System.Web.UI.ServiceReference>인스턴스.</xref:System.Web.UI.ServiceReference> </xref:System.Web.UI.ServiceReference.InlineScript%2A>"
  syntax:
    content: public virtual string Path { get; set; }
    return:
      type: System.String
      description: "참조 된 웹 서비스의 경로입니다."
  overload: System.Web.UI.ServiceReference.Path*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.ToString
  id: ToString
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: ToString()
  nameWithType: ServiceReference.ToString()
  fullName: System.Web.UI.ServiceReference.ToString()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "값을 나타내는 문자열을 반환 된 <xref:System.Web.UI.ServiceReference.Path*>속성 또는 형식 이름.</xref:System.Web.UI.ServiceReference.Path*>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "값은 <> </> *> 속성을 정의 되지 않았으면의 가치는 <> </> *> 클래스의 속성을 합니다."
  overload: System.Web.UI.ServiceReference.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.ServiceReference.#ctor
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: ServiceReference()
  nameWithType: ServiceReference.ServiceReference()
  fullName: System.Web.UI.ServiceReference.ServiceReference()
- uid: System.Web.UI.ServiceReference.#ctor(System.String)
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: ServiceReference(String)
  nameWithType: ServiceReference.ServiceReference(String)
  fullName: System.Web.UI.ServiceReference.ServiceReference(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ServiceReference.GetProxyScript(System.Web.UI.ScriptManager,System.Web.UI.Control)
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: GetProxyScript(ScriptManager,Control)
  nameWithType: ServiceReference.GetProxyScript(ScriptManager,Control)
  fullName: System.Web.UI.ServiceReference.GetProxyScript(ScriptManager,Control)
- uid: System.Web.UI.ScriptManager
  parent: System.Web.UI
  isExternal: false
  name: ScriptManager
  nameWithType: ScriptManager
  fullName: System.Web.UI.ScriptManager
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.ServiceReference.GetProxyUrl(System.Web.UI.ScriptManager,System.Web.UI.Control)
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: GetProxyUrl(ScriptManager,Control)
  nameWithType: ServiceReference.GetProxyUrl(ScriptManager,Control)
  fullName: System.Web.UI.ServiceReference.GetProxyUrl(ScriptManager,Control)
- uid: System.Web.UI.ServiceReference.InlineScript
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: InlineScript
  nameWithType: ServiceReference.InlineScript
  fullName: System.Web.UI.ServiceReference.InlineScript
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ServiceReference.Path
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: Path
  nameWithType: ServiceReference.Path
  fullName: System.Web.UI.ServiceReference.Path
- uid: System.Web.UI.ServiceReference.ToString
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: ToString()
  nameWithType: ServiceReference.ToString()
  fullName: System.Web.UI.ServiceReference.ToString()
- uid: System.Web.UI.ServiceReference.#ctor*
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: ServiceReference
  nameWithType: ServiceReference.ServiceReference
- uid: System.Web.UI.ServiceReference.GetProxyScript*
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: GetProxyScript
  nameWithType: ServiceReference.GetProxyScript
- uid: System.Web.UI.ServiceReference.GetProxyUrl*
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: GetProxyUrl
  nameWithType: ServiceReference.GetProxyUrl
- uid: System.Web.UI.ServiceReference.InlineScript*
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: InlineScript
  nameWithType: ServiceReference.InlineScript
- uid: System.Web.UI.ServiceReference.Path*
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: Path
  nameWithType: ServiceReference.Path
- uid: System.Web.UI.ServiceReference.ToString*
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: ToString
  nameWithType: ServiceReference.ToString
