### YamlMime:ManagedReference
items:
- uid: System.Xaml.Schema.XamlTypeInvoker
  id: XamlTypeInvoker
  children:
  - System.Xaml.Schema.XamlTypeInvoker.#ctor
  - System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)
  - System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)
  - System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)
  - System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])
  - System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)
  - System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod
  - System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)
  - System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler
  - System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler
  - System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker
  langs:
  - csharp
  name: XamlTypeInvoker
  nameWithType: XamlTypeInvoker
  fullName: System.Xaml.Schema.XamlTypeInvoker
  type: Class
  summary: "리플렉션 및 생성자 아닌 다른 기술을 통해 XAML 형식의 인스턴스를 생성할 수 있는 확장 지점을 제공 합니다."
  remarks: "확장 가능한 XAML 형식 시스템, 스키마 및 CLR 특성을 통해 리플렉션 정보 등의 CLR 기능에 완벽 하 게 의존 하지 않는 런타임에 작업을 사용 하도록 설정 하려면 XamlTypeInvoker의 목적은 <xref:System.Type>및 <xref:System.Reflection.MemberInfo>등.</xref:System.Reflection.MemberInfo> </xref:System.Type> XamlTypeInvoker의 서브 클래스는 XAML 스키마 클래스 <xref:System.Xaml.XamlType>.</xref:System.Xaml.XamlType> 등의 다른 생성자에 대 한 입력된 매개 변수로 사용 서브 클래스를 만들 <xref:System.Xaml.XamlType>통해 XamlTypeInvoker 기본 생성자에 전달 합니다.</xref:System.Xaml.XamlType> 생성자에 대 한 XamlTypeInvoker 정의 함께 제공 해야에 대 한 재정의 이상 중 일부는 `Lookup` <xref:System.Xaml.XamlType>안내 하십시오.</xref:System.Xaml.XamlType> 메서드       XamlTypeInvoker는 기본 구현이 있습니다. 기본 구현에서는 XAML 스키마 형식의 기본 구현에는 비슷한 모델을 따릅니다 <xref:System.Xaml.XamlType>및 <xref:System.Xaml.XamlMember>: 인스턴스화, 값 및 CLR 특성을 사용 하는 등, 조회에 대 한 CLR 형식 시스템을 사용 하는 <xref:System.Type>및 <xref:System.Reflection.MemberInfo>등.</xref:System.Reflection.MemberInfo> </xref:System.Type> </xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlType>       XamlTypeInvoker 기본 인스턴스 (<xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>)을 제공 하며 메서드 관련이 있는 형식에 대 한 여기서는 <xref:System.Xaml.XamlType>나타냅니다 컬렉션, 사전 또는 배열 (<xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A>).</xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A></xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A></xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A></xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A></xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A></xref:System.Xaml.XamlType></xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>"
  syntax:
    content: public class XamlTypeInvoker
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.#ctor
  id: '#ctor'
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: XamlTypeInvoker()
  nameWithType: XamlTypeInvoker.XamlTypeInvoker()
  fullName: System.Xaml.Schema.XamlTypeInvoker.XamlTypeInvoker()
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> 클래스입니다."
  remarks: "기본 구현은 비어 있습니다.       <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A>.</xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A> 에 대 한 값을 제공 하려면이 생성자는 내부적으로 호출 에 대 한는 <xref:System.Xaml.Schema.XamlTypeInvoker>하위 클래스 중 하나를 사용 하는 것으로 예상 되는 <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29>생성에 대 한 서명 하거나 호출 하는 재정의 제공 <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29>기반으로 합니다.</xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> </xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> </xref:System.Xaml.Schema.XamlTypeInvoker> 제공 하는 <xref:System.Xaml.XamlType>기본은 구현 패턴 where <xref:System.Xaml.Schema.XamlTypeInvoker>는 변경할 수 없습니다.</xref:System.Xaml.Schema.XamlTypeInvoker> </xref:System.Xaml.XamlType>"
  syntax:
    content: protected XamlTypeInvoker ();
    parameters: []
  overload: System.Xaml.Schema.XamlTypeInvoker.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)
  id: '#ctor(System.Xaml.XamlType)'
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: XamlTypeInvoker(XamlType)
  nameWithType: XamlTypeInvoker.XamlTypeInvoker(XamlType)
  fullName: System.Xaml.Schema.XamlTypeInvoker.XamlTypeInvoker(XamlType)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> 클래스를 기반으로 제공 된 <xref href=&quot;System.Xaml.XamlType&quot;> </xref>합니다."
  remarks: "이 생성자를 기반으로 내부적으로 호출 됩니다는 <xref:System.Xaml.XamlType>여기서는 <xref:System.Xaml.Schema.XamlTypeInvoker>생성에 사용 됩니다.</xref:System.Xaml.Schema.XamlTypeInvoker> </xref:System.Xaml.XamlType> `type` <xref:System.Xaml.Schema.XamlTypeInvoker>.</xref:System.Xaml.Schema.XamlTypeInvoker> 에 대 한 다른 모든 메서드 호출 여기에 관련이 제공"
  syntax:
    content: public XamlTypeInvoker (System.Xaml.XamlType type);
    parameters:
    - id: type
      type: System.Xaml.XamlType
      description: "<xref href=&quot;System.Xaml.XamlType&quot;> </xref> 값이 관련 된 특정 XAML 형식이 <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>합니다."
  overload: System.Xaml.Schema.XamlTypeInvoker.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)
  id: AddToCollection(System.Object,System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: AddToCollection(Object,Object)
  nameWithType: XamlTypeInvoker.AddToCollection(Object,Object)
  fullName: System.Xaml.Schema.XamlTypeInvoker.AddToCollection(Object,Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "이에 관련 된 형식의 인스턴스를 제공된 된 항목 추가 <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>합니다."
  remarks: "에이 메서드를 호출 해야는 <xref:System.Xaml.XamlType>컬렉션을 나타내는.</xref:System.Xaml.XamlType>"
  syntax:
    content: public virtual void AddToCollection (object instance, object item);
    parameters:
    - id: instance
      type: System.Object
      description: "로 지정 된 형식의 인스턴스는 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 이 구성 하는 데 <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>합니다."
    - id: item
      type: System.Object
      description: "추가할 항목입니다."
  overload: System.Xaml.Schema.XamlTypeInvoker.AddToCollection*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "에이 메서드를 호출는 <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> 알 수를 기반으로 하는 <xref href=&quot;System.Xaml.XamlType&quot;> </xref>합니다.       **-또는-** 에이 메서드를 호출는 <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> 관련 형식이 컬렉션이 아닌 합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xaml.XamlSchemaException
    commentId: T:System.Xaml.XamlSchemaException
    description: '&lt;xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A?displayProperty=fullName&gt; 이 <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다.'
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)
  id: AddToDictionary(System.Object,System.Object,System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: AddToDictionary(Object,Object,Object)
  nameWithType: XamlTypeInvoker.AddToDictionary(Object,Object,Object)
  fullName: System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(Object,Object,Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "제공 된 키와 항목 값이 관련 된 형식의 인스턴스를 추가 하는 <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>합니다."
  remarks: "에이 메서드를 호출 해야는 <xref:System.Xaml.XamlType>사전을 나타내는.</xref:System.Xaml.XamlType>"
  syntax:
    content: public virtual void AddToDictionary (object instance, object key, object item);
    parameters:
    - id: instance
      type: System.Object
      description: "로 지정 된 형식의 인스턴스는 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 이 구성 하는 데 <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>합니다."
    - id: key
      type: System.Object
      description: "추가할 항목에 대 한 사전 키입니다."
    - id: item
      type: System.Object
      description: "추가할 항목 값입니다."
  overload: System.Xaml.Schema.XamlTypeInvoker.AddToDictionary*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "에이 메서드를 호출는 <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> 알 수를 기반으로 하는 <xref href=&quot;System.Xaml.XamlType&quot;> </xref>합니다.       **-또는-** 에이 메서드를 호출는 <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> 여기서 관련 형식 사전이 아닙니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xaml.XamlSchemaException
    commentId: T:System.Xaml.XamlSchemaException
    description: '&lt;xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A?displayProperty=fullName&gt; 이 <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다.'
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])
  id: CreateInstance(System.Object[])
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: CreateInstance(Object[])
  nameWithType: XamlTypeInvoker.CreateInstance(Object[])
  fullName: System.Xaml.Schema.XamlTypeInvoker.CreateInstance(Object[])
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "생성자가 시작한에 따라 개체 인스턴스를 만들고 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 이 <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>합니다."
  syntax:
    content: public virtual object CreateInstance (object[] arguments);
    parameters:
    - id: arguments
      type: System.Object[]
      description: "제공 하는 개체의 배열에서 <xref uid=&quot;langword_csharp_x:ConstructorArgs&quot; name=&quot;x:ConstructorArgs&quot; href=&quot;&quot;> </xref> 인스턴스에 대 한 합니다. 되었을 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 요구 또는 사용 하지 않는 형식에 대 한 <xref uid=&quot;langword_csharp_x:ConstructorArgs&quot; name=&quot;x:ConstructorArgs&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Object
      description: "생성된 된 인스턴스 생성자가 시작한 기반 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 이 <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>합니다."
  overload: System.Xaml.Schema.XamlTypeInvoker.CreateInstance*
  exceptions:
  - type: System.MissingMethodException
    commentId: T:System.MissingMethodException
    description: "생성자를 확인할 수 없습니다."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)
  id: GetAddMethod(System.Xaml.XamlType)
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: GetAddMethod(XamlType)
  nameWithType: XamlTypeInvoker.GetAddMethod(XamlType)
  fullName: System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(XamlType)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "관련 반환 <xref uid=&quot;langword_csharp_Add&quot; name=&quot;Add&quot; href=&quot;&quot;> </xref> 에 대 한 메서드는 <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> 하는 컬렉션 또는 사전와 관련이 있습니다."
  remarks: "이 메서드에서 반환 해야 `null` 경우 여기서는 <xref:System.Xaml.XamlType>이 <xref:System.Xaml.Schema.XamlTypeInvoker>쓰기 가능한 컬렉션 또는 사전 아닙니다.</xref:System.Xaml.Schema.XamlTypeInvoker> </xref:System.Xaml.XamlType> 특히 반환 해야 `null` 경우 여기서 <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=fullName>반환 `None`.</xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=fullName>      > [!IMPORTANT] > 완전히 신뢰할 수 있는 XAML 형식 시스템을 액세스 하지 않는 경우이 메서드는 보고서 false로 <xref:System.Reflection.MethodInfo>호출자에 게 정보.</xref:System.Reflection.MethodInfo>"
  syntax:
    content: public virtual System.Reflection.MethodInfo GetAddMethod (System.Xaml.XamlType contentType);
    parameters:
    - id: contentType
      type: System.Xaml.XamlType
      description: "<xref href=&quot;System.Xaml.XamlType&quot;></xref>사용 되는 항목 형식에는 <xref uid=&quot;langword_csharp_Add&quot; name=&quot;Add&quot; href=&quot;&quot;> </xref> 메서드."
    return:
      type: System.Reflection.MethodInfo
      description: "CLR <xref:System.Reflection.MethodInfo>에 대 한 정보는 <xref uid=&quot;langword_csharp_Add&quot; name=&quot;Add&quot; href=&quot;&quot;> </xref> 메서드 또는 null입니다.</xref:System.Reflection.MethodInfo>"
  overload: System.Xaml.Schema.XamlTypeInvoker.GetAddMethod*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contentType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod
  id: GetEnumeratorMethod
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: GetEnumeratorMethod()
  nameWithType: XamlTypeInvoker.GetEnumeratorMethod()
  fullName: System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "항목을 열거할 수 있는 메서드를 나타내는 개체를 반환 합니다."
  remarks: "반환 해야 `null` 경우 여기서 <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=fullName>반환 `None`.</xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=fullName>      > [!IMPORTANT] > 완전히 신뢰할 수 있는 XAML 형식 시스템을 액세스 하지 않는 경우이 메서드는 보고서 false로 <xref:System.Reflection.MethodInfo>호출자에 게 정보.</xref:System.Reflection.MethodInfo>"
  syntax:
    content: public virtual System.Reflection.MethodInfo GetEnumeratorMethod ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "<xref:System.Reflection.MethodInfo>열거자 방법의 경우 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다.</xref:System.Reflection.MethodInfo>"
  overload: System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)
  id: GetItems(System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: GetItems(Object)
  nameWithType: XamlTypeInvoker.GetItems(Object)
  fullName: System.Xaml.Schema.XamlTypeInvoker.GetItems(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "반환 된 <xref:System.Collections.IEnumerator>항목 집합을 나타내는 개체입니다.</xref:System.Collections.IEnumerator>"
  syntax:
    content: public virtual System.Collections.IEnumerator GetItems (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "로 지정 된 형식의 인스턴스는 <xref href=&quot;System.Xaml.XamlType&quot;> </xref> 이 구성 하는 데 <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>합니다."
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> object, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Xaml.Schema.XamlTypeInvoker.GetItems*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "에이 메서드를 호출는 <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> 알 수를 기반으로 하는 <xref href=&quot;System.Xaml.XamlType&quot;> </xref>합니다.       **-또는-** 에이 메서드를 호출는 <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> 관련 형식 하지 않은 컬렉션 또는 사전입니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler
  id: SetMarkupExtensionHandler
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: SetMarkupExtensionHandler
  nameWithType: XamlTypeInvoker.SetMarkupExtensionHandler
  fullName: System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "사용 하는 경우 처리기를 가져옵니다는 <xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref> 구현된 <xref:System.Windows.Markup.MarkupExtension>.</xref:System.Windows.Markup.MarkupExtension> 하 여 호출"
  remarks: "이벤트 처리기는 기반 <xref:System.EventHandler%601>의 제약을 받는 <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs>이벤트 데이터입니다.</xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> </xref:System.EventHandler%601>       호출 반환 되는 값은 <xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A>의 동작은 <xref:System.Xaml.XamlType>하는 <xref:System.Xaml.Schema.XamlTypeInvoker>기반으로 합니다.</xref:System.Xaml.Schema.XamlTypeInvoker> </xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A>       반환 값은 `null` <xref:System.Xaml.Schema.XamlTypeInvoker> <xref:System.Xaml.XamlType>.</xref:System.Xaml.XamlType> 알 수를 기반으로 하는</xref:System.Xaml.Schema.XamlTypeInvoker>"
  syntax:
    content: public EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs> SetMarkupExtensionHandler { get; }
    return:
      type: System.EventHandler{System.Windows.Markup.XamlSetMarkupExtensionEventArgs}
      description: "이 경우를 처리 하는 처리기 구현입니다."
  overload: System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler
  id: SetTypeConverterHandler
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: SetTypeConverterHandler
  nameWithType: XamlTypeInvoker.SetTypeConverterHandler
  fullName: System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "사용 하는 경우 처리기를 가져옵니다는 <xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref> CLR 구현 하 여 호출 <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref>합니다."
  remarks: "이벤트 처리기는 기반 <xref:System.EventHandler%601>의 제약을 받는 <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs>이벤트 데이터입니다.</xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> </xref:System.EventHandler%601>       호출 반환 되는 값은 <xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A>의 동작은 <xref:System.Xaml.XamlType>하는 <xref:System.Xaml.Schema.XamlTypeInvoker>기반으로 합니다.</xref:System.Xaml.Schema.XamlTypeInvoker> </xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A>       반환 값은 `null` <xref:System.Xaml.Schema.XamlTypeInvoker> <xref:System.Xaml.XamlType>.</xref:System.Xaml.XamlType> 알 수를 기반으로 하는</xref:System.Xaml.Schema.XamlTypeInvoker>"
  syntax:
    content: public EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs> SetTypeConverterHandler { get; }
    return:
      type: System.EventHandler{System.Windows.Markup.XamlSetTypeConverterEventArgs}
      description: "이 경우를 처리 하는 처리기 구현입니다."
  overload: System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker
  id: UnknownInvoker
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: UnknownInvoker
  nameWithType: XamlTypeInvoker.UnknownInvoker
  fullName: System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "완전히 구현 되지 않은 알 수를 나타내는 정적 값을 제공 <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>합니다."
  remarks: "이 값을 제공 하는 <xref:System.Xaml.Schema.XamlTypeInvoker>System.Xaml의 매개 변수 정의 API 호출된 된 코드가 예외를 throw 하면 일반적으로.</xref:System.Xaml.Schema.XamlTypeInvoker>"
  syntax:
    content: public static System.Xaml.Schema.XamlTypeInvoker UnknownInvoker { get; }
    return:
      type: System.Xaml.Schema.XamlTypeInvoker
      description: "완전히 구현 되지 않은 알 수를 나타내는 정적 값 <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>합니다."
  overload: System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Xaml.XamlSchemaException
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaException
  nameWithType: XamlSchemaException
  fullName: System.Xaml.XamlSchemaException
- uid: System.MissingMethodException
  isExternal: true
  name: System.MissingMethodException
- uid: System.Xaml.Schema.XamlTypeInvoker.#ctor
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: XamlTypeInvoker()
  nameWithType: XamlTypeInvoker.XamlTypeInvoker()
  fullName: System.Xaml.Schema.XamlTypeInvoker.XamlTypeInvoker()
- uid: System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: XamlTypeInvoker(XamlType)
  nameWithType: XamlTypeInvoker.XamlTypeInvoker(XamlType)
  fullName: System.Xaml.Schema.XamlTypeInvoker.XamlTypeInvoker(XamlType)
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: AddToCollection(Object,Object)
  nameWithType: XamlTypeInvoker.AddToCollection(Object,Object)
  fullName: System.Xaml.Schema.XamlTypeInvoker.AddToCollection(Object,Object)
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: AddToDictionary(Object,Object,Object)
  nameWithType: XamlTypeInvoker.AddToDictionary(Object,Object,Object)
  fullName: System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(Object,Object,Object)
- uid: System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: CreateInstance(Object[])
  nameWithType: XamlTypeInvoker.CreateInstance(Object[])
  fullName: System.Xaml.Schema.XamlTypeInvoker.CreateInstance(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: GetAddMethod(XamlType)
  nameWithType: XamlTypeInvoker.GetAddMethod(XamlType)
  fullName: System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(XamlType)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: GetEnumeratorMethod()
  nameWithType: XamlTypeInvoker.GetEnumeratorMethod()
  fullName: System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod()
- uid: System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: GetItems(Object)
  nameWithType: XamlTypeInvoker.GetItems(Object)
  fullName: System.Xaml.Schema.XamlTypeInvoker.GetItems(Object)
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: SetMarkupExtensionHandler
  nameWithType: XamlTypeInvoker.SetMarkupExtensionHandler
  fullName: System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler
- uid: System.EventHandler{System.Windows.Markup.XamlSetMarkupExtensionEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<XamlSetMarkupExtensionEventArgs>
  nameWithType: EventHandler<XamlSetMarkupExtensionEventArgs>
  fullName: System.EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.XamlSetMarkupExtensionEventArgs
    name: XamlSetMarkupExtensionEventArgs
    nameWithType: XamlSetMarkupExtensionEventArgs
    fullName: XamlSetMarkupExtensionEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: SetTypeConverterHandler
  nameWithType: XamlTypeInvoker.SetTypeConverterHandler
  fullName: System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler
- uid: System.EventHandler{System.Windows.Markup.XamlSetTypeConverterEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<XamlSetTypeConverterEventArgs>
  nameWithType: EventHandler<XamlSetTypeConverterEventArgs>
  fullName: System.EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.XamlSetTypeConverterEventArgs
    name: XamlSetTypeConverterEventArgs
    nameWithType: XamlSetTypeConverterEventArgs
    fullName: XamlSetTypeConverterEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: UnknownInvoker
  nameWithType: XamlTypeInvoker.UnknownInvoker
  fullName: System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker
- uid: System.Xaml.Schema.XamlTypeInvoker
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlTypeInvoker
  nameWithType: XamlTypeInvoker
  fullName: System.Xaml.Schema.XamlTypeInvoker
- uid: System.Xaml.Schema.XamlTypeInvoker.#ctor*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: XamlTypeInvoker
  nameWithType: XamlTypeInvoker.XamlTypeInvoker
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToCollection*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: AddToCollection
  nameWithType: XamlTypeInvoker.AddToCollection
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToDictionary*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: AddToDictionary
  nameWithType: XamlTypeInvoker.AddToDictionary
- uid: System.Xaml.Schema.XamlTypeInvoker.CreateInstance*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: CreateInstance
  nameWithType: XamlTypeInvoker.CreateInstance
- uid: System.Xaml.Schema.XamlTypeInvoker.GetAddMethod*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: GetAddMethod
  nameWithType: XamlTypeInvoker.GetAddMethod
- uid: System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: GetEnumeratorMethod
  nameWithType: XamlTypeInvoker.GetEnumeratorMethod
- uid: System.Xaml.Schema.XamlTypeInvoker.GetItems*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: GetItems
  nameWithType: XamlTypeInvoker.GetItems
- uid: System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: SetMarkupExtensionHandler
  nameWithType: XamlTypeInvoker.SetMarkupExtensionHandler
- uid: System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: SetTypeConverterHandler
  nameWithType: XamlTypeInvoker.SetTypeConverterHandler
- uid: System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: UnknownInvoker
  nameWithType: XamlTypeInvoker.UnknownInvoker
