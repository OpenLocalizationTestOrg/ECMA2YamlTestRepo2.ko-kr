### YamlMime:ManagedReference
items:
- uid: System.Net.WebSockets.WebSocketReceiveResult
  id: WebSocketReceiveResult
  children:
  - System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean)
  - System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)
  - System.Net.WebSockets.WebSocketReceiveResult.CloseStatus
  - System.Net.WebSockets.WebSocketReceiveResult.CloseStatusDescription
  - System.Net.WebSockets.WebSocketReceiveResult.Count
  - System.Net.WebSockets.WebSocketReceiveResult.EndOfMessage
  - System.Net.WebSockets.WebSocketReceiveResult.MessageType
  langs:
  - csharp
  name: WebSocketReceiveResult
  nameWithType: WebSocketReceiveResult
  fullName: System.Net.WebSockets.WebSocketReceiveResult
  type: Class
  summary: "이 클래스의 인스턴스는 WebSocket에서 단일 ReceiveAsync 작업 수행의 결과를 나타냅니다."
  syntax:
    content: public class WebSocketReceiveResult
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean)
  id: '#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean)'
  parent: System.Net.WebSockets.WebSocketReceiveResult
  langs:
  - csharp
  name: WebSocketReceiveResult(Int32,WebSocketMessageType,Boolean)
  nameWithType: WebSocketReceiveResult.WebSocketReceiveResult(Int32,WebSocketMessageType,Boolean)
  fullName: System.Net.WebSockets.WebSocketReceiveResult.WebSocketReceiveResult(Int32,WebSocketMessageType,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.WebSockets
  summary: "인스턴스를 만듭니다는 <xref href=&quot;System.Net.WebSockets.WebSocketReceiveResult&quot;> </xref> 클래스입니다."
  syntax:
    content: public WebSocketReceiveResult (int count, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage);
    parameters:
    - id: count
      type: System.Int32
      description: "받은 바이트 수입니다."
    - id: messageType
      type: System.Net.WebSockets.WebSocketMessageType
      description: "수신 된 메시지의 형식입니다."
    - id: endOfMessage
      type: System.Boolean
      description: "최종 메시지 인지를 나타냅니다."
  overload: System.Net.WebSockets.WebSocketReceiveResult.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)
  id: '#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)'
  parent: System.Net.WebSockets.WebSocketReceiveResult
  langs:
  - csharp
  name: WebSocketReceiveResult(Int32,WebSocketMessageType,Boolean,Nullable<WebSocketCloseStatus>,String)
  nameWithType: WebSocketReceiveResult.WebSocketReceiveResult(Int32,WebSocketMessageType,Boolean,Nullable<WebSocketCloseStatus>,String)
  fullName: System.Net.WebSockets.WebSocketReceiveResult.WebSocketReceiveResult(Int32,WebSocketMessageType,Boolean,Nullable<WebSocketCloseStatus>,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.WebSockets
  summary: "인스턴스를 만듭니다는 <xref href=&quot;System.Net.WebSockets.WebSocketReceiveResult&quot;> </xref> 클래스입니다."
  syntax:
    content: public WebSocketReceiveResult (int count, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, Nullable<System.Net.WebSockets.WebSocketCloseStatus> closeStatus, string closeStatusDescription);
    parameters:
    - id: count
      type: System.Int32
      description: "받은 바이트 수입니다."
    - id: messageType
      type: System.Net.WebSockets.WebSocketMessageType
      description: "수신 된 메시지의 형식입니다."
    - id: endOfMessage
      type: System.Boolean
      description: "최종 메시지 인지를 나타냅니다."
    - id: closeStatus
      type: System.Nullable{System.Net.WebSockets.WebSocketCloseStatus}
      description: "나타냅니다는 <xref href=&quot;System.Net.WebSockets.WebSocketCloseStatus&quot;> </xref> 연결 합니다."
    - id: closeStatusDescription
      type: System.String
      description: "에 대 한 설명을 `closeStatus`합니다."
  overload: System.Net.WebSockets.WebSocketReceiveResult.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebSockets.WebSocketReceiveResult.CloseStatus
  id: CloseStatus
  parent: System.Net.WebSockets.WebSocketReceiveResult
  langs:
  - csharp
  name: CloseStatus
  nameWithType: WebSocketReceiveResult.CloseStatus
  fullName: System.Net.WebSockets.WebSocketReceiveResult.CloseStatus
  type: Property
  assemblies:
  - System
  namespace: System.Net.WebSockets
  summary: "원격 끝점이 close 핸드셰이크를 시작한 이유는 이유를 나타냅니다."
  syntax:
    content: public Nullable<System.Net.WebSockets.WebSocketCloseStatus> CloseStatus { get; }
    return:
      type: System.Nullable{System.Net.WebSockets.WebSocketCloseStatus}
      description: "Returns <xref href=&quot;System.Net.WebSockets.WebSocketCloseStatus&quot;></xref>."
  overload: System.Net.WebSockets.WebSocketReceiveResult.CloseStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebSockets.WebSocketReceiveResult.CloseStatusDescription
  id: CloseStatusDescription
  parent: System.Net.WebSockets.WebSocketReceiveResult
  langs:
  - csharp
  name: CloseStatusDescription
  nameWithType: WebSocketReceiveResult.CloseStatusDescription
  fullName: System.Net.WebSockets.WebSocketReceiveResult.CloseStatusDescription
  type: Property
  assemblies:
  - System
  namespace: System.Net.WebSockets
  summary: "원격 끝점에서 닫기 핸드셰이크를 시작한 이유를 설명 하는 선택적 설명을 반환 합니다."
  syntax:
    content: public string CloseStatusDescription { get; }
    return:
      type: System.String
      description: "<xref:System.String>입니다.</xref:System.String> 반환"
  overload: System.Net.WebSockets.WebSocketReceiveResult.CloseStatusDescription*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebSockets.WebSocketReceiveResult.Count
  id: Count
  parent: System.Net.WebSockets.WebSocketReceiveResult
  langs:
  - csharp
  name: Count
  nameWithType: WebSocketReceiveResult.Count
  fullName: System.Net.WebSockets.WebSocketReceiveResult.Count
  type: Property
  assemblies:
  - System
  namespace: System.Net.WebSockets
  summary: "WebSocket이 받은 바이트 수를 나타냅니다."
  remarks: "카운트는 0에서 2의 경우 일 수: 1입니다.  WebSocket은 빈 메시지를 받았습니다. 이 경우에 <xref:System.Net.WebSockets.WebSocketReceiveResult.CloseStatus%2A>None 속성입니다.</xref:System.Net.WebSockets.WebSocketReceiveResult.CloseStatus%2A>      2.  WebSocket이 받은 마감 시 원격 끝점에서 메시지를 받았습니다. 이 경우에 <xref:System.Net.WebSockets.WebSocketReceiveResult.CloseStatus%2A>속성이 &quot;없음&quot; 이외의 값으로 설정 되어 있습니다.</xref:System.Net.WebSockets.WebSocketReceiveResult.CloseStatus%2A>"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>입니다.</xref:System.Int32> 반환"
  overload: System.Net.WebSockets.WebSocketReceiveResult.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebSockets.WebSocketReceiveResult.EndOfMessage
  id: EndOfMessage
  parent: System.Net.WebSockets.WebSocketReceiveResult
  langs:
  - csharp
  name: EndOfMessage
  nameWithType: WebSocketReceiveResult.EndOfMessage
  fullName: System.Net.WebSockets.WebSocketReceiveResult.EndOfMessage
  type: Property
  assemblies:
  - System
  namespace: System.Net.WebSockets
  summary: "메시지가 완전히 수신 되었는지 여부를 나타냅니다."
  syntax:
    content: public bool EndOfMessage { get; }
    return:
      type: System.Boolean
      description: "<xref:System.Boolean>입니다.</xref:System.Boolean> 반환"
  overload: System.Net.WebSockets.WebSocketReceiveResult.EndOfMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebSockets.WebSocketReceiveResult.MessageType
  id: MessageType
  parent: System.Net.WebSockets.WebSocketReceiveResult
  langs:
  - csharp
  name: MessageType
  nameWithType: WebSocketReceiveResult.MessageType
  fullName: System.Net.WebSockets.WebSocketReceiveResult.MessageType
  type: Property
  assemblies:
  - System
  namespace: System.Net.WebSockets
  summary: "현재 메시지 u t F-8 메시지 또는 이진 메시지 인지를 나타냅니다."
  syntax:
    content: public System.Net.WebSockets.WebSocketMessageType MessageType { get; }
    return:
      type: System.Net.WebSockets.WebSocketMessageType
      description: "Returns <xref href=&quot;System.Net.WebSockets.WebSocketMessageType&quot;></xref>."
  overload: System.Net.WebSockets.WebSocketReceiveResult.MessageType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean)
  parent: System.Net.WebSockets.WebSocketReceiveResult
  isExternal: false
  name: WebSocketReceiveResult(Int32,WebSocketMessageType,Boolean)
  nameWithType: WebSocketReceiveResult.WebSocketReceiveResult(Int32,WebSocketMessageType,Boolean)
  fullName: System.Net.WebSockets.WebSocketReceiveResult.WebSocketReceiveResult(Int32,WebSocketMessageType,Boolean)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.WebSockets.WebSocketMessageType
  parent: System.Net.WebSockets
  isExternal: false
  name: WebSocketMessageType
  nameWithType: WebSocketMessageType
  fullName: System.Net.WebSockets.WebSocketMessageType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)
  parent: System.Net.WebSockets.WebSocketReceiveResult
  isExternal: false
  name: WebSocketReceiveResult(Int32,WebSocketMessageType,Boolean,Nullable<WebSocketCloseStatus>,String)
  nameWithType: WebSocketReceiveResult.WebSocketReceiveResult(Int32,WebSocketMessageType,Boolean,Nullable<WebSocketCloseStatus>,String)
  fullName: System.Net.WebSockets.WebSocketReceiveResult.WebSocketReceiveResult(Int32,WebSocketMessageType,Boolean,Nullable<WebSocketCloseStatus>,String)
- uid: System.Nullable{System.Net.WebSockets.WebSocketCloseStatus}
  parent: System
  isExternal: true
  name: Nullable<WebSocketCloseStatus>
  nameWithType: Nullable<WebSocketCloseStatus>
  fullName: System.Nullable<System.Net.WebSockets.WebSocketCloseStatus>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Net.WebSockets.WebSocketCloseStatus>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.WebSockets.WebSocketCloseStatus
    name: WebSocketCloseStatus
    nameWithType: WebSocketCloseStatus
    fullName: WebSocketCloseStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.WebSockets.WebSocketReceiveResult.CloseStatus
  parent: System.Net.WebSockets.WebSocketReceiveResult
  isExternal: false
  name: CloseStatus
  nameWithType: WebSocketReceiveResult.CloseStatus
  fullName: System.Net.WebSockets.WebSocketReceiveResult.CloseStatus
- uid: System.Net.WebSockets.WebSocketReceiveResult.CloseStatusDescription
  parent: System.Net.WebSockets.WebSocketReceiveResult
  isExternal: false
  name: CloseStatusDescription
  nameWithType: WebSocketReceiveResult.CloseStatusDescription
  fullName: System.Net.WebSockets.WebSocketReceiveResult.CloseStatusDescription
- uid: System.Net.WebSockets.WebSocketReceiveResult.Count
  parent: System.Net.WebSockets.WebSocketReceiveResult
  isExternal: false
  name: Count
  nameWithType: WebSocketReceiveResult.Count
  fullName: System.Net.WebSockets.WebSocketReceiveResult.Count
- uid: System.Net.WebSockets.WebSocketReceiveResult.EndOfMessage
  parent: System.Net.WebSockets.WebSocketReceiveResult
  isExternal: false
  name: EndOfMessage
  nameWithType: WebSocketReceiveResult.EndOfMessage
  fullName: System.Net.WebSockets.WebSocketReceiveResult.EndOfMessage
- uid: System.Net.WebSockets.WebSocketReceiveResult.MessageType
  parent: System.Net.WebSockets.WebSocketReceiveResult
  isExternal: false
  name: MessageType
  nameWithType: WebSocketReceiveResult.MessageType
  fullName: System.Net.WebSockets.WebSocketReceiveResult.MessageType
- uid: System.Net.WebSockets.WebSocketReceiveResult.#ctor*
  parent: System.Net.WebSockets.WebSocketReceiveResult
  isExternal: false
  name: WebSocketReceiveResult
  nameWithType: WebSocketReceiveResult.WebSocketReceiveResult
- uid: System.Net.WebSockets.WebSocketReceiveResult.CloseStatus*
  parent: System.Net.WebSockets.WebSocketReceiveResult
  isExternal: false
  name: CloseStatus
  nameWithType: WebSocketReceiveResult.CloseStatus
- uid: System.Net.WebSockets.WebSocketReceiveResult.CloseStatusDescription*
  parent: System.Net.WebSockets.WebSocketReceiveResult
  isExternal: false
  name: CloseStatusDescription
  nameWithType: WebSocketReceiveResult.CloseStatusDescription
- uid: System.Net.WebSockets.WebSocketReceiveResult.Count*
  parent: System.Net.WebSockets.WebSocketReceiveResult
  isExternal: false
  name: Count
  nameWithType: WebSocketReceiveResult.Count
- uid: System.Net.WebSockets.WebSocketReceiveResult.EndOfMessage*
  parent: System.Net.WebSockets.WebSocketReceiveResult
  isExternal: false
  name: EndOfMessage
  nameWithType: WebSocketReceiveResult.EndOfMessage
- uid: System.Net.WebSockets.WebSocketReceiveResult.MessageType*
  parent: System.Net.WebSockets.WebSocketReceiveResult
  isExternal: false
  name: MessageType
  nameWithType: WebSocketReceiveResult.MessageType
