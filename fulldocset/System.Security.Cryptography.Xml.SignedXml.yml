### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.SignedXml
  id: SignedXml
  children:
  - System.Security.Cryptography.Xml.SignedXml.#ctor
  - System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)
  - System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)
  - System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)
  - System.Security.Cryptography.Xml.SignedXml.CheckSignature
  - System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)
  - System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  - System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)
  - System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)
  - System.Security.Cryptography.Xml.SignedXml.ComputeSignature
  - System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  - System.Security.Cryptography.Xml.SignedXml.EncryptedXml
  - System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)
  - System.Security.Cryptography.Xml.SignedXml.GetPublicKey
  - System.Security.Cryptography.Xml.SignedXml.GetXml
  - System.Security.Cryptography.Xml.SignedXml.KeyInfo
  - System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.SignedXml.m_signature
  - System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
  - System.Security.Cryptography.Xml.SignedXml.Resolver
  - System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
  - System.Security.Cryptography.Xml.SignedXml.Signature
  - System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
  - System.Security.Cryptography.Xml.SignedXml.SignatureLength
  - System.Security.Cryptography.Xml.SignedXml.SignatureMethod
  - System.Security.Cryptography.Xml.SignedXml.SignatureValue
  - System.Security.Cryptography.Xml.SignedXml.SignedInfo
  - System.Security.Cryptography.Xml.SignedXml.SigningKey
  - System.Security.Cryptography.Xml.SignedXml.SigningKeyName
  - System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
  langs:
  - csharp
  name: SignedXml
  nameWithType: SignedXml
  fullName: System.Security.Cryptography.Xml.SignedXml
  type: Class
  summary: "XML 서명 생성을 용이 하 게 핵심 XML 서명 개체에 래퍼를 제공 합니다."
  remarks: "SignedXml 클래스는 World Wide Web Consortium (W3C)의.NET Framework 구현은 [XML 서명 구문 및 처리 사양](http://www.w3.org/TR/xmldsig-core/)XMLDSIG (XML 디지털 서명) 라고도 합니다.  XMLDSIG 방법은, 상호 운용 가능한 표준 방식으로 서명 하 고 전체 또는 일부 XML 문서 또는 다른 데이터 되에서 식별자 URI (Uniform Resource)에 접근할 수를 확인 합니다.       공유 해야 할 때마다 SignedXml 클래스를 사용 하 여 응용 프로그램이 나 조직 간에 XML 데이터는 표준 방법으로 로그인 되어 있습니다.  이 클래스를 사용 하 여 서명 된 모든 데이터에 따라 XMLDSIG W3C 사양 구현 하 여 확인할 수 있습니다.       SignedXml 클래스를 사용 하면 다음과 같은 세 가지 유형의 XML 디지털 서명을 만들 수 있습니다. | 서명 유형 | 설명 |   |--------------------|-----------------|   | 엔벌로프된 서명을 | 서명을 서명 되는 XML 요소에 포함 되어 있습니다. |   | 엔벌로핑 서명을 | 서명 된 XML에 포함 되어는 `Signature`> 요소입니다. |   | 분리 된 내부 서명을 | 서명 및 서명 된 XML은 같은 문서에 있지만 포함 하지 않고 다른. |       네 번째 종류의 서명이 때 서명을 확인 하 고 데이터는 별도 XML 문서에는 외부 분리 된 서명 이라는 이기도 합니다. 외부 분리 된 서명은 SignedXml 클래스에서 지원 되지 않습니다.      ## XML 서명 XMLDSIG의 구조를 만듭니다는 `Signature`> XML 문서 또는 URI에서 주소 지정 가능한 않은 기타 데이터의 디지털 서명을 포함 하는 요소입니다.  `Signature`> 요소는 서명을 확인 하는 키를 찾을 수 있는 위치에 대 한 정보를 선택적으로 포함할 수 있습니다 및 서명에 사용 된 암호화 알고리즘입니다. 기본 구조는 다음과 같습니다: ```xml      <Signature xmlns:ds=&quot;http://www.w3.org/2000/09/xmldsig#&quot;>       <SignedInfo>         <CanonicalizationMethod Algorithm=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;/>         <SignatureMethod Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#rsa-sha1&quot;/>         <Reference URI=&quot;&quot;>           <Transforms>             <Transform Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;/>           </Transforms>           <DigestMethod Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#sha1&quot;/>           <DigestValue>Base64EncodedValue==</DigestValue>         </Reference>       </SignedInfo>       <SignatureValue>AnotherBase64EncodedValue===</SignatureValue>     </Signature>      ``` 이 구조체의 주요 부분은:는 `CanonicalizationMethod`> 다시 작성 하기 위한 규칙을 지정 하는 요소는 `Signature` 요소는 XML/텍스트 서명 유효성 검사에 대 한 바이트에 있습니다. .NET Framework의 기본값은 http://www.w3.org/TR/2001/REC-xml-c14n-20010315 신뢰할 수 있는 알고리즘을 식별 합니다. 이 요소가으로 표시 되는 <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A?displayProperty=fullName>속성.</xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A?displayProperty=fullName>       `SignatureMethod`> 서명 생성 및 유효성 검사에 적용 된에 사용 되는 알고리즘을 지정 하는 요소는 `Signature`> 요소에 값을 생성할 `SignatureValue`>. 위의 예에서 값 http://www.w3.org/2000/09/xmldsig#rsa-sha1 RSA PKCS1 sha-1 서명을 식별합니다. 이 요소가으로 표시 되는 <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A>속성.</xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A>       `SignatureValue`> 요소에 대 한 암호화 서명을 지정는 `Signature`> 요소입니다. 경우이 서명을 확인 하지 않습니다, 다음의 몇 가지 부분에서 `Signature`> 블록 변조 및 문서가 잘못 된 것으로 간주 됩니다. 으로 `CanonicalizationMethod`> 값은 신뢰할 수 있는 경우이 값은 항상 안전 하 게 변조입니다. 이 요소가으로 표시 되는 <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A>속성.</xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A>       `URI` 특성에는 `Reference`> 요소는 URI 참조를 사용 하 여 데이터 개체를 지정 합니다. 이 특성으로 표시 됩니다는 <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName>속성.</xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName>      --지정 하는 `URI` 특성, 즉, 설정는 <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName>속성을 `null`, 수신 응용 프로그램 개체의 id를 아는 예상 됨을 의미 합니다.</xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName> 대부분의 경우에는 `null` URI 예외가 throw 됩니다. 사용 하지 않는 한 `null` URI, 응용 프로그램에서 필요로 하는 프로토콜와 상호 운용 되는 경우가 아니면 합니다.      -설정의 `URI` 는 문서의 루트 요소가 서명 되는 특성을 빈 문자열로 나타냅니다는 형태의 엔벌로프된 서명 합니다.      -If 값 `URI` 특성, #로 시작 하 여 다음 값이 현재 문서에서 요소를 확인 해야 합니다. 지원 되는 서명 형식 (엔벌로프된 서명, 서명 또는 분리 된 내부 서명을 상위)를 사용 하 여이 폼을 사용할 수 있습니다.      -아무 것도 다른 것으로 간주 되어 외부 리소스 서명 분리 SignedXml 클래스에서 지원 되지 않습니다.       `Transforms`> 요소는 정렬 된 목록을 포함 `Transform`> 서명자 가져오는 방법을 데이터 개체를 설명 하는 요소가 digested 되었습니다. Transform 알고리즘은 유사한 다시 작성 하지 않고 정형화 메서드에 `Signature`>로 식별 된 콘텐츠가 다시 쓰기 요소를는 `URI` 특성의는 `Reference`> 요소입니다. `Transforms`> 요소는 <xref:System.Security.Cryptography.Xml.TransformChain>클래스</xref:System.Security.Cryptography.Xml.TransformChain> 표시      -각 변환 알고리즘은 XML (XPath 노드 집합) 또는 (바이트)를 입력으로 사용 하도록 정의 됩니다. 현재 데이터 형식을 변환 입력된 요구 사항와 다른 경우에 변환 규칙이 적용 됩니다.      -각 변환 알고리즘을 XML 또는 바이트 출력으로 생성 하도록 정의 됩니다.      -마지막 변환 알고리즘의 출력 바이트에 정의 되지 않은 (또는 없습니다 변환을 지정 된) 않으면 정형화 메서드 http://www.w3.org/TR/2001/REC-xml-c14n-20010315이 사용 암시적 변환으로 (다른 알고리즘에 지정 된 경우에는 `CanonicalizationMethod`> 요소).      -Http://www.w3.org/2000/09/xmldsig#enveloped-signature 변환 알고리즘에 대 한 값 제거로 해석 되는 규칙을 인코딩하는 `Signature`> 문서에서 요소입니다. 그렇지 않으면, 엔벌로프된 서명 확인자 서명을 포함 하 여 문서를 다이제스트는 있지만 서명자가 있는 digested 문서 서명을 적용 하기 전에 다른 답변을 합니다.       `DigestMethod`>으로 식별 하는 변환 된 내용을 적용 하려면 다이제스트 (암호화 해시) 메서드를 식별 하는 요소는 `URI` 특성에는 `Reference`> 요소입니다. 표시 되는 <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A?displayProperty=fullName>속성.</xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A?displayProperty=fullName>      ## 다른 값을 사용 해야 하는 사양와의 상호 운용 하지 않는 한 정형화 방법을 선택한 값이 http://www.w3.org/TR/2001/REC-xml-c14n-20010315 C14N XML 1.0 알고리즘에는.NET Framework의 기본 정형화 메서드를 사용 하는 권장 합니다. 암시적 최종 변환을 적용 하 고 있기 때문에 특히 XML C14N 1.0 알고리즘 XMLDSIG, 모든 구현에서 지원 되는 데 필요 합니다.       정형화 알고리즘을 유지 하는 주석을 지원의 버전이 있습니다. 주석 유지 정규화 메서드 &quot;기능에 표시 서명&quot; 원칙을 위반 하기 때문에 권장 되지 않습니다. 에 있는 설명은 코드 즉, 한 `Signature`> 서명의 수행 하는 방법에 대 한 요소가 처리 논리를 변경 하지 것입니다, 단순히 어떤 서명 값은입니다. 공격자가 불필요 한 자유를 해시 충돌을 강제로 포함된 제공 되도록 주석을 사용 하는 취약 한 서명 알고리즘을 함께 사용 하면 합법적인 표시 변조 된 문서 수 있도록 합니다.  .NET Framework에서 기본 제공 canonicalizers만 기본적으로 사용할 수 있습니다. 참조 추가 또는 사용자 지정 canonicalizers를 지원 하기 위해는 <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>속성.</xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> 문서에서 표시 되는 컬렉션에 없는 정규화 메서드를 사용 하는 경우는 <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>속성을 하면 <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>메서드는 반환 `false`.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> </xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>      > [!NOTE] >는 매우 안전한 응용 프로그램에서 사용 하는 서명자는 필요 하지 않은 모든 값을 제거할 수는 <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>컬렉션.</xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>      ## 참조 값 변경 위험이?    예,는 `Reference`> 값은 변조 로부터 안전 하 게 합니다.  .NET framework 확인는 `SignatureValue`> 중 하나를 처리 하기 전에 계산은 `Reference`> 값과 관련 된 제품 및 잠재적으로 악의적인 처리 명령을 방지 하기 위해 초기 중단 됩니다.      ## 서명으로 여러 요소 선택의 값을 사용 하는 것이 좋습니다 &quot;&quot;에 대 한는 `URI` 특성 (설정 또는 <xref:System.Security.Cryptography.Xml.Reference.Uri%2A>속성을 빈 문자열), 가능한 경우.</xref:System.Security.Cryptography.Xml.Reference.Uri%2A> 즉, 전체 문서 전체 문서 변조 되지 않도록 보호 되는 다이제스트 계산에 대 한 것으로 간주 됩니다.       참조에 매우 일반적 이기 `URI` 앵커 &quot;foo&quot; ID 속성을 가진 요소를 가리키는 #foo 같은 형식의 값입니다. 그러나이 컨텍스트가 아닌 대상 요소의 내용만 포함 되므로 변조할 수에 대 한 쉽습니다. 이 차이 아무나 XML 서명 래핑 (XSW)로 알려져 있습니다.       응용 프로그램에서는 있다고 간주 의미 체계 되도록 주석 (있는 경우에 일반적으로 해당 되지 처리 하는 XML) 하는 경우 사용 해야 합니다 &quot;#xpointer(/)&quot; 대신 &quot;&quot;, &quot;#foo&quot; 대신 &quot;#xpointer(id(&quot;foo&quot;))&quot; 하 고 있습니다. #Xpointer 버전 shortname 양식 설명을 제외 하 고는 동안 주석을 포함 한로 해석 됩니다.       부분적 으로만 보호 되는 문서를 수락 해야 하 고 동일한 콘텐츠를 읽을 수 있도록 하려는 경우 서명을 보호를 사용 하 여는 <xref:System.Security.Cryptography.Xml.SignedXml.GetIdElement%2A>메서드.</xref:System.Security.Cryptography.Xml.SignedXml.GetIdElement%2A>      ## 선택 사항인 데이터 KeyInfo 요소에 대 한 보안 고려 사항 `KeyInfo`> 요소 (즉,는 <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>속성), 서명의 유효성을 검사 하는 키를 포함 하는 트러스트 해서는 안 됩니다.</xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>       특히 때에서는 <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>완전 RSA, DSA 또는 ECDSA 공개 키를 나타내는 값, 문서와 변조 수 불구 하 고는 <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>메서드 서명이 유효한 지를 보고 합니다.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> </xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>  이 변조만 수행 하는 엔터티에 포함 된 새 키를 생성 하 고 다시 해당 새 키가 있는 변조 된 문서를 서명 때문에 발생할 수 있습니다. 따라서 응용 프로그램를 공개 키가 필요한 값을 확인 하지 않는 한 손상 된 경우에 따라 문서 처리 합니다. 이렇게 하려면 응용 프로그램이 문서 내에 포함 된 공개 키를 검사 하 고 문서 컨텍스트에 대 한 알려진된 값의 목록에 대해 확인 합니다. 예를 들어 문서 수 알려진된 사용자가 발급할 인식 되어야 하는 경우 해당 사용자가 사용 되는 알려진된 키의 목록에 대해 키 되었으면 체크 합니다.       키를 사용 하 여 문서를 처리 한 후 확인할 수 있습니다는 <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey%2A>메서드를 사용 하는 대신는 <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>메서드.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> </xref:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey%2A> 하지만 보안을 최적화에 대 한 키를 미리 확인 해야 합니다.       또는 공개 키, 등록 된 사용자의 시도 하는 것이 좋습니다. 대신에 포함 된 내용 읽기는 `KeyInfo`> 요소입니다.      ## 선택적 X509Data 요소에 대 한 보안 고려 사항 `X509Data`> 요소는 자식은 `KeyInfo`> 요소 포함 하나 이상의 X509 인증서 또는 X509에 대 한 식별자 인증서입니다. 데이터는 `X509Data`> 요소 또한 기본적으로 트러스트 해서는 안 됩니다.       포함된 된 문서를 확인할 때 `X509Data`> 요소를.NET Framework 확인만 데이터 X509 되는지 인증서 유효성을 검사 하 여 문서 서명을 해당 공개 키를 성공적으로 사용할 수 있습니다. 호출 달리는 <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>메서드는 `verifySignatureOnly` 매개 변수 설정 `false`및 체인 트러스트 되지 않은 옵션을 선택 하 고 만료 없이 확인 해지 검사가 수행 되지 않습니다.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> 응용 프로그램 자체 인증서를 추출 하 고에 전달 하는 경우에는 <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>사용 하 여 메서드는 `verifySignatureOnly` 매개 변수 설정 `false`, 즉 한 충분 한 유효성 검사 문서 변조를 방지 계속.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> 인증서를 여전히 서명 중인 문서에 대 한 적절 한 것으로 확인 해야 합니다.       포함 된 서명 인증서를 사용 하 여 유용한 키 회전 전략을 여부 제공할 수에 `X509Data`> 섹션 또는 문서 내용입니다. 응용 프로그램에서 인증서를 수동으로 추출 해야와 비슷한 유효성 검사를 수행이 방법을 사용 하는 경우:-직접 발급 된 인증서 또는 인증 기관 (CA)에서 체인을 통해 해당 공용 인증서 응용 프로그램에 포함 되어 있습니다.           알려진된 주체 이름과 같은 추가 검사 하지 않고 운영 체제에서 제공한 트러스트 목록을 사용 하 여 SignedXml에 무단 변경을 방지 하기에 충분 하지 않습니다.      -인증서가 문서 서명 시 만료 되지 않았는지를 확인 (또는 &quot;현재&quot;에 대 한 실시간 문서 처리 근처).      -수명이 긴가 발급 한 인증서 해지를 지 원하는 CA를 인증서가 해지 되지 않은 확인 합니다.      -인증서 주체는 현재 문서에 적합 한 것으로 확인 됩니다.      ## 지정 된 특정 값 (예: XrML)가 있는 사양으로 작용할 변환 알고리즘의 선택, 다음 해야 사양을 따릅니다.  엔벌로프된 서명이 있는 경우 (예를 들어 전체 문서에 서명), http://www.w3.org/2000/09/xmldsig#enveloped-signature 사용 해야 합니다 (표시는 <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>클래스).</xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> 암시적 XML C14N 변환도 지정할 수 있지만 필요 하지 않습니다.  에 엔벌로핑 또는 분리 된 서명이 없는 변환이 필요 합니다. 암시적 XML C14N 변환 하는 모든 담당합니다.       업데이트에 보안을 사용으로 인해는 [Microsoft 보안 공지 MS16-035](https://technet.microsoft.com/en-us/library/security/ms16-035.aspx),.NET Framework가 변환 되는 수를 제한 발생 하는 신뢰할 수 없는 변환을 사용 하 여 기본적으로 문서 확인에 사용 되는 <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>항상 반환 하도록 `false`.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> 특히, 변환 (XML에서 자식 요소로 지정 됨) 하는 추가 입력이 필요 하는 더 이상 악의적인 사용자가 자신의 한 장애의 영향력 남용의 때문 허용 됩니다. W3C 있다는 두 가지 주요 변환이 이러한 제한의 영향을 받는 인 XPath 및 XSLT 변환을 방지 표시 됩니다.      ## 많은 보안상의 취약점 (서비스 거부, 분산 리플렉션 서비스 거부, 정보 공개, 서명 바이패스 및 원격 코드 실행 문제점 포함)에 대 한 제공 하는 응용 프로그램에서 외부 참조 현재 컨텍스트에 대 한 적절 한 스 러 방법으로 악용 될 수 있는지 확인 되지 경우 외부 참조에 문제가 있습니다. 두 번 로드 되는 리소스의 문제가 남습니다 응용 프로그램 된을 외부 참조 URI의 유효성을 검사 하는 경우에: SignedXml 읽을 때와 응용 프로그램을 읽을 때 한 번씩 합니다. 응용 프로그램 읽기 및 문서 확인 단계는 동일한 콘텐츠를 포함 하도록 보장 되지 않으므로 서명을 신뢰할 수 있는지를 제공 하지 않습니다.       외부 참조의 위험 들어 SignedXml 예외가 throw 됩니다 외부 참조에 오류가 발생 합니다.  이 문제에 대 한 자세한 내용은 참조 [기술 자료 문서 3148821](https://support.microsoft.com/en-us/kb/3148821)합니다."
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/csharp/t-system.security.crypto_96_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/cpp/t-system.security.crypto_96_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/visualbasic/t-system.security.crypto_96_1.vb)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/t-system.security.crypto_96_2.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/t-system.security.crypto_96_2.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/t-system.security.crypto_96_2.vb)]"
  syntax:
    content: public class SignedXml
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignedXml()
  nameWithType: SignedXml.SignedXml()
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> 클래스입니다."
  remarks: ''
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/m-system.security.crypto_88_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_88_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/m-system.security.crypto_88_1.cpp)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/m-system.security.crypto_88_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/m-system.security.crypto_88_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_88_2.vb)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/m-system.security.crypto_88_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/m-system.security.crypto_88_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/m-system.security.crypto_88_3.vb)]"
  syntax:
    content: public SignedXml ();
    parameters: []
  overload: System.Security.Cryptography.Xml.SignedXml.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)
  id: '#ctor(System.Xml.XmlDocument)'
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignedXml(XmlDocument)
  nameWithType: SignedXml.SignedXml(XmlDocument)
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml(XmlDocument)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> 지정된 된 XML 문서에서 클래스입니다."
  remarks: ''
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/m-system.security.crypto_111_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_111_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/m-system.security.crypto_111_1.cpp)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/m-system.security.crypto_111_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/m-system.security.crypto_111_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_111_2.vb)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/m-system.security.crypto_111_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/m-system.security.crypto_111_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/m-system.security.crypto_111_3.vb)]"
  syntax:
    content: public SignedXml (System.Xml.XmlDocument document);
    parameters:
    - id: document
      type: System.Xml.XmlDocument
      description: "<xref href=&quot;System.Xml.XmlDocument&quot;> </xref> 개체의 새 인스턴스를 초기화 하는 데 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref>합니다."
  overload: System.Security.Cryptography.Xml.SignedXml.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>document</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는- <code> document </code> 매개 변수는 null이 포함 된 <xref:System.Xml.XmlDocument.DocumentElement*>속성.</xref:System.Xml.XmlDocument.DocumentElement*>"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)
  id: '#ctor(System.Xml.XmlElement)'
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignedXml(XmlElement)
  nameWithType: SignedXml.SignedXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml(XmlElement)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> 지정 된 위치에서 클래스 <xref href=&quot;System.Xml.XmlElement&quot;> </xref> 개체입니다."
  syntax:
    content: public SignedXml (System.Xml.XmlElement elem);
    parameters:
    - id: elem
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref> 개체의 새 인스턴스를 초기화 하는 데 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref>합니다."
  overload: System.Security.Cryptography.Xml.SignedXml.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>elem</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)
  id: AddObject(System.Security.Cryptography.Xml.DataObject)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: AddObject(DataObject)
  nameWithType: SignedXml.AddObject(DataObject)
  fullName: System.Security.Cryptography.Xml.SignedXml.AddObject(DataObject)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "추가 <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> 서명할 개체의 목록에는 개체입니다."
  remarks: "AddObject 메서드 추가 `Object`> 로그인 할 수 있는 개체를 나타내는 요소는 `Signature`> 요소의 XML 디지털 서명 합니다.       AddObject 메서드를 내부적으로 호출 된 <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A>메서드는 <xref:System.Security.Cryptography.Xml.Signature>개체에 의해 캡슐화는 <xref:System.Security.Cryptography.Xml.SignedXml>개체.</xref:System.Security.Cryptography.Xml.SignedXml> </xref:System.Security.Cryptography.Xml.Signature> </xref:System.Security.Cryptography.Xml.Signature.AddObject%2A>  추가할 수도 있습니다는 <xref:System.Security.Cryptography.Xml.DataObject>직접 호출 하 여 개체는 <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A>에서 메서드는 <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A>속성.</xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> </xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> </xref:System.Security.Cryptography.Xml.DataObject>       XML 디지털 서명 하는 방법에 대 한 자세한 내용은 www.w3.org/TR/xmldsig-core/ //go.microsoft.com/fwlink/ XMLDSIG 사양을 참조 합니다."
  example:
  - "The following code example computes and XML signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/add/codesnippet/csharp/cc2302c9-707b-486f-888b-_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/add/codesnippet/cpp/cc2302c9-707b-486f-888b-_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/add/codesnippet/visualbasic/cc2302c9-707b-486f-888b-_1.vb)]"
  syntax:
    content: public void AddObject (System.Security.Cryptography.Xml.DataObject dataObject);
    parameters:
    - id: dataObject
      type: System.Security.Cryptography.Xml.DataObject
      description: "<xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> 서명할 개체 목록에 추가할 개체입니다."
  overload: System.Security.Cryptography.Xml.SignedXml.AddObject*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)
  id: AddReference(System.Security.Cryptography.Xml.Reference)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: AddReference(Reference)
  nameWithType: SignedXml.AddReference(Reference)
  fullName: System.Security.Cryptography.Xml.SignedXml.AddReference(Reference)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "추가 <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref> 개체는 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> 다이제스트 방법, 다이제스트 값 및 XML 디지털 서명을 만드는 데 사용할 변환을 설명 하는 개체입니다."
  remarks: "AddReference 메서드 추가 `Reference`> 요소는 <xref:System.Security.Cryptography.Xml.SignedXml>다이제스트 방법, 다이제스트 값 및 XML 디지털 서명을 만드는 데 사용할 변환을 설명 하는 개체입니다.</xref:System.Security.Cryptography.Xml.SignedXml>  `Reference`> 요소는 하위 요소는 `SignedInfo`> 요소입니다.       AddReference 메서드를 내부적으로 호출는 <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A>의 메서드는 <xref:System.Security.Cryptography.Xml.SignedInfo>개체에 의해 캡슐화는 <xref:System.Security.Cryptography.Xml.SignedXml>개체입니다.</xref:System.Security.Cryptography.Xml.SignedXml> </xref:System.Security.Cryptography.Xml.SignedInfo> </xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A>  추가할 수도 있습니다는 <xref:System.Security.Cryptography.Xml.Reference>직접 호출 하 여 개체는 <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A>에서 메서드는 <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A>속성.</xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> </xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> </xref:System.Security.Cryptography.Xml.Reference>       XML 디지털 서명 하는 방법에 대 한 자세한 내용은 www.w3.org/TR/xmldsig-core/ //go.microsoft.com/fwlink/ XMLDSIG 사양을 참조 합니다."
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/86d65b61-ebc7-4a08-b833-_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/86d65b61-ebc7-4a08-b833-_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/86d65b61-ebc7-4a08-b833-_1.cpp)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/86d65b61-ebc7-4a08-b833-_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/86d65b61-ebc7-4a08-b833-_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/86d65b61-ebc7-4a08-b833-_2.vb)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/86d65b61-ebc7-4a08-b833-_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/86d65b61-ebc7-4a08-b833-_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/86d65b61-ebc7-4a08-b833-_3.vb)]"
  syntax:
    content: public void AddReference (System.Security.Cryptography.Xml.Reference reference);
    parameters:
    - id: reference
      type: System.Security.Cryptography.Xml.Reference
      description: "<xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref> 다이제스트 방법, 다이제스트 값 및 XML 디지털 서명을 만드는 데 사용할 변환을 설명 하는 개체입니다."
  overload: System.Security.Cryptography.Xml.SignedXml.AddReference*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature
  id: CheckSignature
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignature()
  nameWithType: SignedXml.CheckSignature()
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "결정 여부는 <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>속성이 서명의 공개 키를 사용 하 여 확인 합니다.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: "이 메서드는 또한 서명의 값 및 참조에 대 한 다이제스트를 계산합니다.       XML 문서는 X.509 서명으로 서명 된 CheckSignature 메서드는 확인에 적합 한 인증서에 대 한 &quot;AddressBook&quot; 저장소를 검색 합니다. 예를 들어, 인증서에서 SKI 주체 키 식별자 ()를 참조 하는 경우는 <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>메서드를 선택한 사용해 보십시오. 한 번에 하나씩까지 인증서를 확인할 수 있습니다.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>"
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/csharp/m-system.security.crypto_17_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/cpp/m-system.security.crypto_17_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_17_1.vb)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/cpp/m-system.security.crypto_17_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_17_2.vb)]\n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/csharp/m-system.security.crypto_17_2.cs)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/m-system.security.crypto_17_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/m-system.security.crypto_17_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/m-system.security.crypto_17_3.vb)]"
  syntax:
    content: public bool CheckSignature ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>속성이 확인 됩니다; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<> </> *> 서명의 공개 키의 속성이 일치 하지 않으면는 <> </> *> 속성.       -또는-서명 설명을 만들 수 없습니다.       -또는 해시 알고리즘을 만들 수 없습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)
  id: CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignature(AsymmetricAlgorithm)
  nameWithType: SignedXml.CheckSignature(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(AsymmetricAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "결정 여부는 <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>속성이 지정된 된 키를 확인 합니다.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: ''
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/cpp/3bad083a-16aa-4e4b-9114-_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/visualbasic/3bad083a-16aa-4e4b-9114-_1.vb)]\n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/csharp/3bad083a-16aa-4e4b-9114-_1.cs)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/csharp/3bad083a-16aa-4e4b-9114-_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/cpp/3bad083a-16aa-4e4b-9114-_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/visualbasic/3bad083a-16aa-4e4b-9114-_2.vb)]"
  syntax:
    content: public bool CheckSignature (System.Security.Cryptography.AsymmetricAlgorithm key);
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "구현에서 <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> 속성 확인 하는 데 사용할 키를 보유 하는 <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>속성.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>지정 된 속성을 확인 합니다. 그렇지 않으면 키 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<> </> *>의 속성은 <code> key </code> 매개 변수가 일치 하지 않습니다는 <> </> *> 속성.       -또는-서명 설명을 만들 수 없습니다.       -또는 해시 알고리즘을 만들 수 없습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  id: CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignature(KeyedHashAlgorithm)
  nameWithType: SignedXml.CheckSignature(KeyedHashAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(KeyedHashAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "결정 여부는 <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>속성이 지정 된 메시지 인증 코드 (MAC) 알고리즘에 대 한 확인 합니다.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: ''
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/csharp/90ca4404-0fd2-4d7f-a2b2-_1.cs)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/visualbasic/90ca4404-0fd2-4d7f-a2b2-_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/cpp/90ca4404-0fd2-4d7f-a2b2-_1.cpp)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/csharp/90ca4404-0fd2-4d7f-a2b2-_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/cpp/90ca4404-0fd2-4d7f-a2b2-_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/visualbasic/90ca4404-0fd2-4d7f-a2b2-_2.vb)]"
  syntax:
    content: public bool CheckSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);
    parameters:
    - id: macAlg
      type: System.Security.Cryptography.KeyedHashAlgorithm
      description: "구현 <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> 확인 하는 데 사용할 MAC을 보유 하는 <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>속성.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>; 지정된 된 MAC에 대 한 속성을 확인 합니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>macAlg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<> </> *>는 지정 된 속성 <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> 개체가 유효 하지 않습니다.       -or-       The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는-암호화 서명을 확인 하는 데 사용 변환을 만들 수 없습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)
  id: CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignature(X509Certificate2,Boolean)
  nameWithType: SignedXml.CheckSignature(X509Certificate2,Boolean)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "결정 여부는 <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>속성이 지정 된 확인 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> 개체 하 고, 필요에 따라 인증서가 유효한 지 여부.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: ".NET Framework 버전 1.1에서는 X.509 인증서 확인 되지 않습니다.  버전 2.0 이상에서 X.509 인증서가 확인 됩니다.       버전의.NET Framework 2.0 이상에서는 CheckSignature 메서드는 확인에 적합 한 인증서에 대 한 &quot;AddressBook&quot; 저장소를 검색 합니다. 예를 들어 인증서에서 SKI 주체 키 식별자 ()를 참조 하는 경우 CheckSignature 메서드는를 선택 하 고 사용해 보십시오. 한 번에 하나씩까지 인증서를 확인할 수 있습니다."
  example:
  - "The following code example uses an X.509 certificate from a certificate store to sign and verify an XML document.  \n  \n [!code-vb[Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)#1](~/add/codesnippet/visualbasic/e51a3b72-eabb-4d0b-b51a-_1.vb)]\n [!code-cs[Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)#1](~/add/codesnippet/csharp/e51a3b72-eabb-4d0b-b51a-_1.cs)]"
  syntax:
    content: public bool CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, bool verifySignatureOnly);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> 확인을 사용 하는 개체는 <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>속성.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
    - id: verifySignatureOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>만; 서명을 확인 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 서명 및 인증서를 확인 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>서명이 잘못 되었습니다; 확인 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다.       -또는- <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 서명과 인증서가 유효 하지 않으면, 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>certificate</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "에 대 한 서명 설명을 만들 수 없습니다는 <code> certificate </code> 매개 변수입니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)
  id: CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignatureReturningKey(AsymmetricAlgorithm)
  nameWithType: SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "결정 여부는 <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>속성이 서명의 공개 키를 사용 하 여 확인 합니다.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: ''
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/add/codesnippet/cpp/193181f3-8100-4b63-8720-_1.cpp)]\n [!code-cs[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/add/codesnippet/csharp/193181f3-8100-4b63-8720-_1.cs)]\n [!code-vb[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/add/codesnippet/visualbasic/193181f3-8100-4b63-8720-_1.vb)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/add/codesnippet/cpp/193181f3-8100-4b63-8720-_2.cpp)]\n [!code-cs[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/add/codesnippet/csharp/193181f3-8100-4b63-8720-_2.cs)]\n [!code-vb[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/add/codesnippet/visualbasic/193181f3-8100-4b63-8720-_2.vb)]"
  syntax:
    content: public bool CheckSignatureReturningKey (out System.Security.Cryptography.AsymmetricAlgorithm signingKey);
    parameters:
    - id: signingKey
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "이 메서드가 반환 될 때의 구현이 포함 <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> 서명의 공개 키를 보유 하는 합니다. 이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>속성이 공개를 사용 하 여 확인 고, 그렇지 않으면 키 서명에 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> signingKey </code> 매개 변수가 null입니다."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<> </> *> 서명의 공개 키의 속성이 일치 하지 않으면는 <> </> *> 속성.       -또는-서명 설명을 만들 수 없습니다.       -또는 해시 알고리즘을 만들 수 없습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature
  id: ComputeSignature
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: ComputeSignature()
  nameWithType: SignedXml.ComputeSignature()
  fullName: System.Security.Cryptography.Xml.SignedXml.ComputeSignature()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "XML 디지털 서명을 계산합니다."
  remarks: "ComputeSignature 메서드는 XML 디지털 서명을 하 고 다양 한 필요한 XML 요소를 생성 합니다.       서명할 데이터를 설정 해야 하며 <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A>이 메서드를 호출 하기 전에 속성.</xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A>"
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/m-system.security.crypto_74_1.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_74_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/m-system.security.crypto_74_1.cpp)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/m-system.security.crypto_74_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/m-system.security.crypto_74_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_74_2.vb)]"
  syntax:
    content: public void ComputeSignature ();
    parameters: []
  overload: System.Security.Cryptography.Xml.SignedXml.ComputeSignature*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는- <> </> *> 속성은 한 <xref href=&quot;System.Security.Cryptography.DSA&quot;> </xref> 개체 또는 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> 개체입니다.       -또는-키를 로드할 수 없습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  id: ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: ComputeSignature(KeyedHashAlgorithm)
  nameWithType: SignedXml.ComputeSignature(KeyedHashAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.ComputeSignature(KeyedHashAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "지정 된 메시지 인증 코드 (MAC) 알고리즘을 사용 하 여 XML 디지털 서명을 계산 합니다."
  remarks: "ComputeSignature 메서드는 지정된 된 MAC 알고리즘을 사용 하 여 XML 디지털 서명을 하 고 다양 한 필요한 XML 요소를 생성 합니다.       이 메서드를 호출 하기 전에 서명할 데이터를 설정 해야 합니다."
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/csharp/a3e65477-6e59-4270-bb2f-_1.cs)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/visualbasic/a3e65477-6e59-4270-bb2f-_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/cpp/a3e65477-6e59-4270-bb2f-_1.cpp)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/csharp/a3e65477-6e59-4270-bb2f-_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/cpp/a3e65477-6e59-4270-bb2f-_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/visualbasic/a3e65477-6e59-4270-bb2f-_2.vb)]"
  syntax:
    content: public void ComputeSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);
    parameters:
    - id: macAlg
      type: System.Security.Cryptography.KeyedHashAlgorithm
      description: "A <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> 값을 계산 하는 데 사용할 MAC을 보유 하는 개체는 <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>속성.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.ComputeSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>macAlg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> 로 지정 된 개체는 <code> macAlg </code> 매개 변수의 인스턴스가 아닌 <xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;> </xref>합니다.       -또는- <xref:System.Security.Cryptography.HashAlgorithm.HashSize*>는 지정 된 속성 <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> 개체가 잘못 되었습니다.</xref:System.Security.Cryptography.HashAlgorithm.HashSize*>       -또는-암호화 서명을 확인 하는 데 사용 변환을 만들 수 없습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.EncryptedXml
  id: EncryptedXml
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: EncryptedXml
  nameWithType: SignedXml.EncryptedXml
  fullName: System.Security.Cryptography.Xml.SignedXml.EncryptedXml
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "가져오거나는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml&quot;> </xref> XML 암호화 처리 규칙을 정의 하는 개체입니다."
  syntax:
    content: public System.Security.Cryptography.Xml.EncryptedXml EncryptedXml { get; set; }
    return:
      type: System.Security.Cryptography.Xml.EncryptedXml
      description: "<xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml&quot;> </xref> XML 암호화 처리 규칙을 정의 하는 개체입니다."
  overload: System.Security.Cryptography.Xml.SignedXml.EncryptedXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)
  id: GetIdElement(System.Xml.XmlDocument,System.String)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: GetIdElement(XmlDocument,String)
  nameWithType: SignedXml.GetIdElement(XmlDocument,String)
  fullName: System.Security.Cryptography.Xml.SignedXml.GetIdElement(XmlDocument,String)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "반환 된 <xref href=&quot;System.Xml.XmlElement&quot;> </xref> 지정 된 위치에서 지정한 ID 가진 개체 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> 개체입니다."
  syntax:
    content: public virtual System.Xml.XmlElement GetIdElement (System.Xml.XmlDocument document, string idValue);
    parameters:
    - id: document
      type: System.Xml.XmlDocument
      description: "<xref href=&quot;System.Xml.XmlDocument&quot;> </xref> 검색할 개체의 <xref href=&quot;System.Xml.XmlElement&quot;> </xref> 에서 개체입니다."
    - id: idValue
      type: System.String
      description: "ID는 <xref href=&quot;System.Xml.XmlElement&quot;> </xref> 개체에서 검색 하는 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> 개체입니다."
    return:
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref> 지정 된 위치에서 지정한 ID 가진 개체 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> 개체 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 찾을 수 없는 경우."
  overload: System.Security.Cryptography.Xml.SignedXml.GetIdElement*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.GetPublicKey
  id: GetPublicKey
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: GetPublicKey()
  nameWithType: SignedXml.GetPublicKey()
  fullName: System.Security.Cryptography.Xml.SignedXml.GetPublicKey()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "서명 공개 키를 반환합니다."
  remarks: "GetPublicKey 메서드는 반환 된 <xref:System.Security.Cryptography.AsymmetricAlgorithm>XML 디지털 서명을 확인 하는 데 사용할 수 있는 공개 키가 포함 된 개체입니다.</xref:System.Security.Cryptography.AsymmetricAlgorithm>       키 중 하나 여야 합니다는 <xref:System.Security.Cryptography.DSA>또는 <xref:System.Security.Cryptography.RSA>키.</xref:System.Security.Cryptography.RSA> </xref:System.Security.Cryptography.DSA>"
  syntax:
    content: protected virtual System.Security.Cryptography.AsymmetricAlgorithm GetPublicKey ();
    parameters: []
    return:
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "<xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> 해당 서명의 공개 키가 포함 된 개체 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 키를 찾을 수 없는 경우."
  overload: System.Security.Cryptography.Xml.SignedXml.GetPublicKey*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo*>속성은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo*>"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: GetXml()
  nameWithType: SignedXml.GetXml()
  fullName: System.Security.Cryptography.Xml.SignedXml.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "XML 표현을 반환는 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> 개체입니다."
  syntax:
    content: public System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "XML 표현을 <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.Xml.SignedXml.GetXml*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.KeyInfo
  id: KeyInfo
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: KeyInfo
  nameWithType: SignedXml.KeyInfo
  fullName: System.Security.Cryptography.Xml.SignedXml.KeyInfo
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "가져오거나는 <xref href=&quot;System.Security.Cryptography.Xml.KeyInfo&quot;> </xref> 현재 개체 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> 개체입니다."
  remarks: "KeyInfo 속성이 나타내는 `KeyInfo`> 사용 하 여 XML 디지털 서명을의 요소는 <xref:System.Security.Cryptography.Xml.KeyInfo>속성 내에 포함 된 개체입니다.</xref:System.Security.Cryptography.Xml.KeyInfo>  `KeyInfo`> 요소는 하위 요소는 `Signature`> 요소입니다.       KeyInfo 속성을 사용 하 여 XML 문서 유효성 검사에 필요한 키를 식별 하기 위해 제공 하는 키 관련 정보를 포함 합니다.       에 대 한 자세한 내용은 `<KeyInfo>` 요소인 www.w3.org/TR/xmldsig-core/에서 제공 되는 XMLDSIG 사양을 참조 하십시오."
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfo> object when signing a resource represented by a Universal Resource Identifier (URI).  This example saves the signature in a new file.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/p-system.security.crypto_31_1.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/p-system.security.crypto_31_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/p-system.security.crypto_31_1.cpp)]  \n  \n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfo> object when signing an XML document.  This example saves the signature in a new file.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/p-system.security.crypto_31_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/p-system.security.crypto_31_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/p-system.security.crypto_31_2.vb)]"
  syntax:
    content: public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }
    return:
      type: System.Security.Cryptography.Xml.KeyInfo
      description: "<xref href=&quot;System.Security.Cryptography.Xml.KeyInfo&quot;> </xref> 현재 개체 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.Xml.SignedXml.KeyInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: SignedXml.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.SignedXml.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "로드 한 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> XML 요소에서 상태입니다."
  remarks: ''
  example:
  - "The following code example shows how to use the LoadXml method to verify an XML document.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#3](~/add/codesnippet/csharp/m-system.security.crypto_14_1.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#3](~/add/codesnippet/visualbasic/m-system.security.crypto_14_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#3](~/add/codesnippet/cpp/m-system.security.crypto_14_1.cpp)]"
  syntax:
    content: public void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "로드할 XML 요소는 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> 에서 상태입니다."
  overload: System.Security.Cryptography.Xml.SignedXml.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code> value </code> 매개 변수에 유효한 없는 <> </> *> 속성.       -또는- <code> value </code> 매개 변수에 유효한 없는 <> </> *> 속성."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.m_signature
  id: m_signature
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: m_signature
  nameWithType: SignedXml.m_signature
  fullName: System.Security.Cryptography.Xml.SignedXml.m_signature
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "나타냅니다는 <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;> </xref> 현재 개체 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> 개체입니다."
  syntax:
    content: protected System.Security.Cryptography.Xml.Signature m_signature;
    return:
      type: System.Security.Cryptography.Xml.Signature
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
  id: m_strSigningKeyName
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: m_strSigningKeyName
  nameWithType: SignedXml.m_strSigningKeyName
  fullName: System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "설치 된 서명에 사용할 키의 이름을 나타내는 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> 개체입니다."
  syntax:
    content: protected string m_strSigningKeyName;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.Resolver
  id: Resolver
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: Resolver
  nameWithType: SignedXml.Resolver
  fullName: System.Security.Cryptography.Xml.SignedXml.Resolver
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "에서는 현재 <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 개체입니다."
  remarks: "<xref:System.Xml.XmlResolver>Uniform 리소스 식별자 (URI)로 명명 된 외부 XML 리소스를 확인 하는 클래스입니다.</xref:System.Xml.XmlResolver> XML 파일의 소스를 신뢰 하지 않는 경우 사용 하 여 XML 파일의 URI로 명명 하는 컴퓨터 리소스에 액세스 하지 않을 수 있습니다. 해결 프로그램 속성을 사용 하 여 액세스 하는 XML 파일 컴퓨터 리소스에 다른를 지정 하 여 수준을 제어 <xref:System.Xml.XmlResolver>개체입니다.</xref:System.Xml.XmlResolver> 모든 액세스를 허용 하지 않을 경우이 속성을 설정할 수 있습니다 `null` (`Nothing` Visual basic에서)."
  syntax:
    content: public System.Xml.XmlResolver Resolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "현재 <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 개체입니다. 기본값은 한 <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.Xml.SignedXml.Resolver*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
  id: SafeCanonicalizationMethods
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SafeCanonicalizationMethods
  nameWithType: SignedXml.SafeCanonicalizationMethods
  fullName: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "[.NET Framework 4.5.1 이상 버전에서 지원 됨]       정형화 알고리즘을 명시적으로 허용 되는 메서드의 이름을 가져옵니다."
  remarks: "정형화 메서드는 해당 정규 형식에 XML 문서를 변환합니다. 정식 XML에 대 한 자세한 내용은 참조 [정식 XML](http://www.w3.org/TR/xml-c14n) W3C 웹 사이트에 있습니다."
  syntax:
    content: public System.Collections.ObjectModel.Collection<string> SafeCanonicalizationMethods { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.String}
      description: "안전 하 게 정식 XML을 생성 하는 메서드의 이름의 컬렉션입니다."
  overload: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.Signature
  id: Signature
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: Signature
  nameWithType: SignedXml.Signature
  fullName: System.Security.Cryptography.Xml.SignedXml.Signature
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "가져옵니다는 <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;> </xref> 현재 개체 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> 개체입니다."
  remarks: "서명 속성 나타냅니다는 `Signature`> 사용 하 여 XML 디지털 서명을의 요소는 <xref:System.Security.Cryptography.Xml.Signature>속성 내에 포함 된 개체입니다.</xref:System.Security.Cryptography.Xml.Signature>  `Signature`> 요소는 XML 디지털 서명 생성 및 확인에 사용 되는 루트 요소입니다.       서명 속성을 사용 하 여 검색 하는 <xref:System.Security.Cryptography.Xml.Signature>에서 사용 하는 개체는 <xref:System.Security.Cryptography.Xml.SignedXml>개체입니다.</xref:System.Security.Cryptography.Xml.SignedXml> </xref:System.Security.Cryptography.Xml.Signature>       에 대 한 자세한 내용은 `<Signature>` 요소인 www.w3.org/TR/xmldsig-core/에서 제공 되는 XMLDSIG 사양을 참조 하십시오."
  example:
  - "The following code example uses the Signature property to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/p-system.security.crypto_9_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/p-system.security.crypto_9_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/p-system.security.crypto_9_1.cpp)]  \n  \n The following code example uses the Signature property to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/p-system.security.crypto_9_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/p-system.security.crypto_9_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/p-system.security.crypto_9_2.vb)]"
  syntax:
    content: public System.Security.Cryptography.Xml.Signature Signature { get; }
    return:
      type: System.Security.Cryptography.Xml.Signature
      description: "<xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;> </xref> 현재 개체 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.Xml.SignedXml.Signature*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
  id: SignatureFormatValidator
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignatureFormatValidator
  nameWithType: SignedXml.SignatureFormatValidator
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "XML 서명의 형식 (암호화 보안 아님)의 유효성을 검사 하기 위해 호출할 대리자를 가져옵니다."
  remarks: "특정 변환만 사용 됨 또는 서명이 특정 해시 알고리즘 및 등을 사용 하도록 보장 하기 위해이 메서드를 사용할 수 있습니다.       이 속성을 설정 `null` 에서 모든 서명 형식 유효성 검사가 제거는 <xref:System.Security.Cryptography.Xml.SignedXml>개체입니다.</xref:System.Security.Cryptography.Xml.SignedXml>       원하는 경우 개체의 현재 대리자 및 체인을 읽을 수도 있습니다.       제공 하는 대리자 형식 유효성 검사기를 설정 하는 경우 입력된 매개 변수로 받습니다는 <xref:System.Security.Cryptography.Xml.SignedXml>– 부울 값을 반환 하 고 확인 중인 개체 `true` 형식, 허용 되는 경우 `false` 없으면.</xref:System.Security.Cryptography.Xml.SignedXml> 대리자가 반환 하는 경우 `false` 어떤 이유로 든는 <xref:System.Security.Cryptography.Xml.SignedXml>개체, XML 서명을 올바르지 않음을 보고 합니다.</xref:System.Security.Cryptography.Xml.SignedXml>"
  syntax:
    content: public Func<System.Security.Cryptography.Xml.SignedXml,bool> SignatureFormatValidator { get; set; }
    return:
      type: System.Func{System.Security.Cryptography.Xml.SignedXml,System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>형식은; 허용 되는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureLength
  id: SignatureLength
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignatureLength
  nameWithType: SignedXml.SignatureLength
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureLength
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "현재는 서명의 길이 가져옵니다 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> 개체입니다."
  syntax:
    content: public string SignatureLength { get; }
    return:
      type: System.String
      description: "현재는 서명의 길이 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.Xml.SignedXml.SignatureLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureMethod
  id: SignatureMethod
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignatureMethod
  nameWithType: SignedXml.SignatureMethod
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureMethod
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "현재 서명 메서드를 가져옵니다 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> 개체입니다."
  remarks: "SignatureMethod 속성이 나타내는 `SignatureMethod`> 속성 내에 포함 된 식별자 URI (Uniform Resource) 문자열을 사용 하 여 XML 디지털 서명의 요소입니다. `SignatureMethod`> 요소는 하위 요소는 `SignedInfo`> 요소입니다.       SignatureMethod 속성을 사용 하 여 검색 하는 `SignatureMethod`>에서 사용 하는 URI는 <xref:System.Security.Cryptography.Xml.SignedXml>개체입니다.</xref:System.Security.Cryptography.Xml.SignedXml> 이 속성은 읽기 전용입니다. 프로그래밍 방식으로 대 한 URI를 지정 하는 방법에 대 한 자세한 내용은 `SignatureMethod`> 요소를 참조는 <xref:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod%2A>속성.</xref:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod%2A>       에 대 한 자세한 내용은 `<SignatureMethod>` 요소인 www.w3.org/TR/xmldsig-core/에서 제공 되는 XMLDSIG 사양을 참조 하십시오."
  syntax:
    content: public string SignatureMethod { get; }
    return:
      type: System.String
      description: "현재 서명 방법 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.Xml.SignedXml.SignatureMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureValue
  id: SignatureValue
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignatureValue
  nameWithType: SignedXml.SignatureValue
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureValue
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "현재 서명 값을 가져옵니다 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> 개체입니다."
  remarks: "SignatureValue 속성이 나타내는 `SignatureValue`> 속성 내에 포함 된 바이트 배열을 사용 하 여 XML 디지털 서명의 요소입니다.  `SignatureValue`> 요소는 하위 요소는 `Signature>` 요소입니다.       XML 디지털 서명의 값을 검색 하려면 SignatureValue 속성을 사용 합니다.  이 속성은 성공적으로 호출을 수행 하는 경우는 <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A>메서드.</xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A>       에 대 한 자세한 내용은 `<SignatureValue>` 요소인 www.w3.org/TR/xmldsig-core/에서 제공 되는 XMLDSIG 사양을 참조 하십시오."
  syntax:
    content: public byte[] SignatureValue { get; }
    return:
      type: System.Byte[]
      description: "현재 서명 값을 포함 하는 바이트 배열 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.Xml.SignedXml.SignatureValue*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignedInfo
  id: SignedInfo
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignedInfo
  nameWithType: SignedXml.SignedInfo
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedInfo
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "가져옵니다는 <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> 현재 개체 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> 개체입니다."
  remarks: "SignedInfo 속성이 나타내는 `SignedInfo`> 속성 내에 포함 된 바이트 배열을 사용 하 여 XML 디지털 서명의 요소입니다.  `SignedInfo`> 요소는 하위 요소는 `Signature>` 요소입니다.       SignedInfo 속성을 사용 하 여 검색 하는 <xref:System.Security.Cryptography.Xml.SignedInfo>에서 사용 되는 개체는 <xref:System.Security.Cryptography.Xml.SignedXml>XML 디지털 서명을 만드는 데 개체.</xref:System.Security.Cryptography.Xml.SignedXml> </xref:System.Security.Cryptography.Xml.SignedInfo>       에 대 한 자세한 내용은 `<SignedInfo>` 요소인 www.w3.org/TR/xmldsig-core/에서 제공 되는 XMLDSIG 사양을 참조 하십시오."
  syntax:
    content: public System.Security.Cryptography.Xml.SignedInfo SignedInfo { get; }
    return:
      type: System.Security.Cryptography.Xml.SignedInfo
      description: "<xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> 현재 개체 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.Xml.SignedXml.SignedInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKey
  id: SigningKey
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SigningKey
  nameWithType: SignedXml.SigningKey
  fullName: System.Security.Cryptography.Xml.SignedXml.SigningKey
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "서명에 사용 되는 비대칭 알고리즘 키를 가져오거나 설정 합니다.는 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> 개체입니다."
  remarks: "SigningKey 속성을 사용 하 여 XML 디지털 서명을 만드는 데 사용할 비대칭 키를 지정 합니다."
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/csharp/p-system.security.crypto_40_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/cpp/p-system.security.crypto_40_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/visualbasic/p-system.security.crypto_40_1.vb)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/cpp/p-system.security.crypto_40_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/visualbasic/p-system.security.crypto_40_2.vb)]\n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/csharp/p-system.security.crypto_40_2.cs)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/p-system.security.crypto_40_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/p-system.security.crypto_40_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/p-system.security.crypto_40_3.vb)]"
  syntax:
    content: public System.Security.Cryptography.AsymmetricAlgorithm SigningKey { get; set; }
    return:
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "비대칭 알고리즘 키 서명에 사용 되는 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.Xml.SignedXml.SigningKey*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKeyName
  id: SigningKeyName
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SigningKeyName
  nameWithType: SignedXml.SigningKeyName
  fullName: System.Security.Cryptography.Xml.SignedXml.SigningKeyName
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "설치 된 서명에 사용할 키의 이름을 가져오거나 설정 합니다.는 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> 개체입니다."
  syntax:
    content: public string SigningKeyName { get; set; }
    return:
      type: System.String
      description: "설치 된 서명에 사용할 키의 이름에서 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.Xml.SignedXml.SigningKeyName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
  id: XmlDecryptionTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDecryptionTransformUrl
  nameWithType: SignedXml.XmlDecryptionTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "식별자 URI (Uniform Resource) XML 모드 암호 해독 변환에 대 한을 나타냅니다. 이 필드는 상수입니다."
  remarks: "XmlDecryptionTransformUrl 필드의 값은 &quot;http://www.w3.org/2002/07/decrypt#XML&quot;.       이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.       자세한 내용은 http://www.w3.org/2002/07/decrypt#XML에서 World Wide Web Consortium (W3C) 사양을 참조 합니다."
  syntax:
    content: public const string XmlDecryptionTransformUrl;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
  id: XmlDsigBase64TransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigBase64TransformUrl
  nameWithType: SignedXml.XmlDsigBase64TransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "식별자 URI (Uniform Resource) base 64 변환에 대 한을 나타냅니다. 이 필드는 상수입니다."
  remarks: "XmlDsigBase64TransformUrl 필드의 값은 &quot;http://www.w3.org/2000/09/xmldsig#base64&quot;.       이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.       <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform>클래스 구현 XmlDsigBase64TransformUrl 필드에서 설명 된 변환을.</xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform>       자세한 내용은 http://www.w3.org/2000/09/xmldsig#base64에서 World Wide Web Consortium (W3C) 사양을 참조 합니다."
  example:
  - "The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> class.  \n  \n [!code-cs[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/add/codesnippet/csharp/f-system.security.crypto_0_1.cs)]\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/add/codesnippet/visualbasic/f-system.security.crypto_0_1.vb)]\n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/add/codesnippet/cpp/f-system.security.crypto_0_1.cpp)]"
  syntax:
    content: public const string XmlDsigBase64TransformUrl;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
  id: XmlDsigC14NTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigC14NTransformUrl
  nameWithType: SignedXml.XmlDsigC14NTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "식별자 URI (Uniform Resource)에 대 한 정식 XML 변환 나타냅니다. 이 필드는 상수입니다."
  remarks: "XmlDsigC14NTransformUrl 필드의 값은 &quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;.       이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.       <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>클래스 구현 XmlDsigC14NTransformUrl 필드에서 설명 된 변환을.</xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>       자세한 내용은 http://www.w3.org/TR/2001/REC-xml-c14n-20010315에서 World Wide Web Consortium (W3C) 사양을 참조 합니다.       이 필드에 동일한 값으로는 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl>필드.</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl>"
  example:
  - "The following code example demonstrates how to call members of the <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class.  \n  \n [!code-cpp[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/add/codesnippet/cpp/f-system.security.crypto_4_1.cpp)]\n [!code-cs[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/add/codesnippet/csharp/f-system.security.crypto_4_1.cs)]\n [!code-vb[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/add/codesnippet/visualbasic/f-system.security.crypto_4_1.vb)]"
  syntax:
    content: public const string XmlDsigC14NTransformUrl;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
  id: XmlDsigC14NWithCommentsTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigC14NWithCommentsTransformUrl
  nameWithType: SignedXml.XmlDsigC14NWithCommentsTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "식별자 URI (Uniform Resource) 주석 사용 하 여 정식 XML 변환에 대 한을 나타냅니다. 이 필드는 상수입니다."
  remarks: "XmlDsigC14NWithCommentsTransformUrl 필드의 값은 &quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments&quot;.       이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.       <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>클래스 구현 XmlDsigC14NWithCommentsTransformUrl 필드에서 설명 된 변환을.</xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>       자세한 내용은 http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments에서 World Wide Web Consortium (W3C) 사양을 참조 합니다.       이 필드에 동일한 값으로는 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl>필드.</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl>"
  syntax:
    content: public const string XmlDsigC14NWithCommentsTransformUrl;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
  id: XmlDsigCanonicalizationUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigCanonicalizationUrl
  nameWithType: SignedXml.XmlDsigCanonicalizationUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "식별자 URI (Uniform Resource) XML 디지털 서명 위한 표준 정형화 알고리즘에 대 한을 나타냅니다. 이 필드는 상수입니다."
  remarks: "XmlDsigCanonicalizationUrl 필드의 값은 &quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;.       이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.       <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>클래스 구현 XmlDsigCanonicalizationUrl 필드에서 설명 된 변환을.</xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>       자세한 내용은 http://www.w3.org/TR/2001/REC-xml-c14n-20010315에서 World Wide Web Consortium (W3C) 사양을 참조 합니다.       이 필드에 동일한 값으로는 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>필드.</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>"
  syntax:
    content: public const string XmlDsigCanonicalizationUrl;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  id: XmlDsigCanonicalizationWithCommentsUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigCanonicalizationWithCommentsUrl
  nameWithType: SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "식별자 URI (Uniform Resource) XML 디지털 서명 위한 표준 정형화 알고리즘에 대 한 나타내며 설명을 포함 합니다. 이 필드는 상수입니다."
  remarks: "XmlDsigCanonicalizationWithCommentsUrl 필드의 값은 &quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments&quot;.       이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.       <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>클래스 구현 XmlDsigCanonicalizationWithCommentsUrl 필드에서 설명 된 변환을.</xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>       자세한 내용은 http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments에서 World Wide Web Consortium (W3C) 사양을 참조 합니다.       이 필드에 동일한 값으로는 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl>필드.</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl>"
  syntax:
    content: public const string XmlDsigCanonicalizationWithCommentsUrl;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
  id: XmlDsigDSAUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigDSAUrl
  nameWithType: SignedXml.XmlDsigDSAUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "식별자 URI (Uniform Resource) 표준에 대 한 나타냅니다 <xref href=&quot;System.Security.Cryptography.DSA&quot;> </xref> XML 디지털 서명 위한 합니다. 이 필드는 상수입니다."
  remarks: "XmlDsigDSAUrl 필드의 값은 &quot;http://www.w3.org/2000/09/xmldsig#dsa-sha1&quot;.       이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.       자세한 내용은 http://www.w3.org/2000/09/xmldsig#dsa-sha1에서 World Wide Web Consortium (W3C) 사양을 참조 합니다."
  syntax:
    content: public const string XmlDsigDSAUrl;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  id: XmlDsigEnvelopedSignatureTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigEnvelopedSignatureTransformUrl
  nameWithType: SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "식별자 URI (Uniform Resource) 서명 엔벌로프된 변환에 대 한을 나타냅니다. 이 필드는 상수입니다."
  remarks: "XmlDsigEnvelopedSignatureTransformUrl 필드의 값은 &quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;.       이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.       <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>클래스 구현 XmlDsigEnvelopedSignatureTransformUrl 필드에서 설명 된 변환을.</xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>       자세한 내용은 http://www.w3.org/2000/09/xmldsig#enveloped-signature에서 World Wide Web Consortium (W3C) 사양을 참조 합니다."
  example:
  - "The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class.  \n  \n [!code-cs[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/add/codesnippet/csharp/62dc9f7e-cdc8-4569-bf73-_1.cs)]\n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/add/codesnippet/cpp/62dc9f7e-cdc8-4569-bf73-_1.cpp)]\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/add/codesnippet/visualbasic/62dc9f7e-cdc8-4569-bf73-_1.vb)]"
  syntax:
    content: public const string XmlDsigEnvelopedSignatureTransformUrl;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
  id: XmlDsigExcC14NTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigExcC14NTransformUrl
  nameWithType: SignedXml.XmlDsigExcC14NTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "식별자 URI (Uniform Resource)에 대 한 배타적 XML 정형화를 나타냅니다. 이 필드는 상수입니다."
  remarks: "XmlDsigExcC14NTransformUrl 필드의 값은 &quot;http://www.w3.org/2001/10/xml-exc-c14n#&quot;.       이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.       <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>클래스 구현 XmlDsigExcC14NTransformUrl 필드에서 설명 된 변환을.</xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>       자세한 내용은 http://www.w3.org/2001/10/xml-exc-c14n#에서 World Wide Web Consortium (W3C) 사양을 참조 합니다."
  example:
  - "The following code example shows how to sign and verify an XML document using the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class.  This sample creates an envelope signature.  \n  \n [!code-cs[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/add/codesnippet/csharp/f-system.security.crypto_9_1.cs)]\n [!code-cpp[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/add/codesnippet/cpp/f-system.security.crypto_9_1.cpp)]\n [!code-vb[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/add/codesnippet/visualbasic/f-system.security.crypto_9_1.vb)]"
  syntax:
    content: public const string XmlDsigExcC14NTransformUrl;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  id: XmlDsigExcC14NWithCommentsTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigExcC14NWithCommentsTransformUrl
  nameWithType: SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "식별자 URI (Uniform Resource)에 대 한 주석이 있는 배타적 XML 정형화를 나타냅니다. 이 필드는 상수입니다."
  remarks: "XmlDsigExcC14NWithCommentsTransformUrl 필드의 값은 &quot;http://www.w3.org/2001/10/xml-exc-c14n#WithComments&quot;.       이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.       <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform>클래스 구현 XmlDsigExcC14NWithCommentsTransformUrl 필드에서 설명 된 변환을.</xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform>       자세한 내용은 http://www.w3.org/2001/10/xml-exc-c14n#WithComments에서 World Wide Web Consortium (W3C) 사양을 참조 합니다."
  example:
  - "The following code example shows how to sign and verify an XML document using the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class.  This sample creates an envelope signature.  \n  \n [!code-cs[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/add/codesnippet/csharp/15045a8f-c740-45e0-8c9c-_1.cs)]\n [!code-cpp[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/add/codesnippet/cpp/15045a8f-c740-45e0-8c9c-_1.cpp)]\n [!code-vb[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/add/codesnippet/visualbasic/15045a8f-c740-45e0-8c9c-_1.vb)]"
  syntax:
    content: public const string XmlDsigExcC14NWithCommentsTransformUrl;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
  id: XmlDsigHMACSHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigHMACSHA1Url
  nameWithType: SignedXml.XmlDsigHMACSHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "식별자 URI (Uniform Resource) 표준에 대 한 나타냅니다 <xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;> </xref> XML 디지털 서명 위한 합니다. 이 필드는 상수입니다."
  remarks: "XmlDsigHMACSHA1Url 필드의 값은 &quot;http://www.w3.org/2000/09/xmldsig#hmac-sha1&quot;.       이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.       자세한 내용은 http://www.w3.org/2000/09/xmldsig#hmac-sha1에서 World Wide Web Consortium (W3C) 사양을 참조 합니다."
  syntax:
    content: public const string XmlDsigHMACSHA1Url;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
  id: XmlDsigMinimalCanonicalizationUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigMinimalCanonicalizationUrl
  nameWithType: SignedXml.XmlDsigMinimalCanonicalizationUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "식별자 URI (Uniform Resource) XML 디지털 서명 위한 표준 최소 정형화 알고리즘에 대 한을 나타냅니다. 이 필드는 상수입니다."
  remarks: "XmlDsigMinimalCanonicalizationUrl 필드의 값은 &quot;http://www.w3.org/2000/09/xmldsig#minimal&quot;.       이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.       자세한 내용은 http://www.w3.org/2000/09/xmldsig#minimal에서 World Wide Web Consortium (W3C) 사양을 참조 합니다."
  syntax:
    content: public const string XmlDsigMinimalCanonicalizationUrl;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
  id: XmlDsigNamespaceUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigNamespaceUrl
  nameWithType: SignedXml.XmlDsigNamespaceUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "식별자 URI (Uniform Resource) XML 디지털 서명 위한 표준 네임 스페이스를 나타냅니다. 이 필드는 상수입니다."
  remarks: "XmlDsigNamespaceUrl 필드의 값은 &quot;http://www.w3.org/2000/09/xmldsig#&quot;.       이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.       자세한 내용은 http://www.w3.org/2000/09/xmldsig#에서 World Wide Web Consortium (W3C) 사양을 참조 합니다."
  syntax:
    content: public const string XmlDsigNamespaceUrl;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
  id: XmlDsigRSASHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigRSASHA1Url
  nameWithType: SignedXml.XmlDsigRSASHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "식별자 URI (Uniform Resource) 표준에 대 한 나타냅니다 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> XML 디지털 서명 위한 서명 방법입니다. 이 필드는 상수입니다."
  remarks: "XmlDsigRSASHA1Url 필드의 값은 &quot;http://www.w3.org/2000/09/xmldsig#rsa-sha1&quot;.       이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.       자세한 내용은 http://www.w3.org/2000/09/xmldsig#rsa-sha1에서 World Wide Web Consortium (W3C) 사양을 참조 합니다."
  syntax:
    content: public const string XmlDsigRSASHA1Url;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
  id: XmlDsigRSASHA256Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigRSASHA256Url
  nameWithType: SignedXml.XmlDsigRSASHA256Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "식별자 URI (Uniform Resource)에 대 한 나타냅니다는 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> XML 디지털 서명 위한 s h A-256 서명 메서드 변형 합니다. 이 필드는 상수입니다."
  remarks: "XmlDsigRSASHA256Url 필드의 값은 &quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha256&quot;.       이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.       자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 [http://www.w3.org/2001/04/xmldsig-more#rsa-sha256](http://www.w3.org/2001/04/xmldsig-more)합니다."
  syntax:
    content: public const string XmlDsigRSASHA256Url;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
  id: XmlDsigRSASHA384Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigRSASHA384Url
  nameWithType: SignedXml.XmlDsigRSASHA384Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "식별자 URI (Uniform Resource)에 대 한 나타냅니다는 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> XML 디지털 서명 위한 s h A-384 서명 메서드 변형 합니다. 이 필드는 상수입니다."
  remarks: "XmlDsigRSASHA384Url 필드의 값은 &quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha384&quot;.       이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.       자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 [http://www.w3.org/2001/04/xmldsig-more#rsa-sha384](http://www.w3.org/2001/04/xmldsig-more#rsa-sha384)합니다."
  syntax:
    content: public const string XmlDsigRSASHA384Url;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
  id: XmlDsigRSASHA512Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigRSASHA512Url
  nameWithType: SignedXml.XmlDsigRSASHA512Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "식별자 URI (Uniform Resource)에 대 한 나타냅니다는 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> XML 디지털 서명 위한 sha-512 서명 메서드 변형 합니다. 이 필드는 상수입니다."
  remarks: "XmlDsigRSASHA512Url 필드의 값은 &quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha512&quot;.       이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.       자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 [http://www.w3.org/2001/04/xmldsig-more#rsa-sha512](http://www.w3.org/2001/04/xmldsig-more#rsa-sha512)합니다."
  syntax:
    content: public const string XmlDsigRSASHA512Url;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
  id: XmlDsigSHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigSHA1Url
  nameWithType: SignedXml.XmlDsigSHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "식별자 URI (Uniform Resource) 표준에 대 한 나타냅니다 <xref href=&quot;System.Security.Cryptography.SHA1&quot;> </xref> 다이제스트 XML 디지털 서명 위한 방법입니다. 이 필드는 상수입니다."
  remarks: "XmlDsigSHA1Url 필드의 값은 &quot;http://www.w3.org/2000/09/xmldsig#sha1&quot;.       이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.       자세한 내용은 http://www.w3.org/2000/09/xmldsig#sha1에서 World Wide Web Consortium (W3C) 사양을 참조 합니다."
  syntax:
    content: public const string XmlDsigSHA1Url;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
  id: XmlDsigSHA256Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigSHA256Url
  nameWithType: SignedXml.XmlDsigSHA256Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "식별자 URI (Uniform Resource) 표준에 대 한 나타냅니다 <xref href=&quot;System.Security.Cryptography.SHA256&quot;> </xref> 다이제스트 XML 디지털 서명 위한 방법입니다. 이 필드는 상수입니다."
  remarks: "XmlDsigSHA256Url 필드의 값은 &quot;http://www.w3.org/2001/04/xmlenc#sha256&quot;.       이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.       자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 [http://www.w3.org/2001/04/xmlenc#sha256](http://www.w3.org/2001/04/xmlenc#sha256)합니다."
  syntax:
    content: public const string XmlDsigSHA256Url;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
  id: XmlDsigSHA384Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigSHA384Url
  nameWithType: SignedXml.XmlDsigSHA384Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "식별자 URI (Uniform Resource) 표준에 대 한 나타냅니다 <xref href=&quot;System.Security.Cryptography.SHA384&quot;> </xref> 다이제스트 XML 디지털 서명 위한 방법입니다. 이 필드는 상수입니다."
  remarks: "XmlDsigSHA384Url 필드의 값은 &quot;http://www.w3.org/2001/04/xmldsig-more#sha384&quot;.       이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.       자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 [http://www.w3.org/2001/04/xmldsig-more#sha384](http://www.w3.org/2001/04/xmldsig-more#sha384)합니다."
  syntax:
    content: public const string XmlDsigSHA384Url;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
  id: XmlDsigSHA512Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigSHA512Url
  nameWithType: SignedXml.XmlDsigSHA512Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "식별자 URI (Uniform Resource) 표준에 대 한 나타냅니다 <xref href=&quot;System.Security.Cryptography.SHA512&quot;> </xref> 다이제스트 XML 디지털 서명 위한 방법입니다. 이 필드는 상수입니다."
  remarks: "XmlDsigSHA512Url 필드의 값은 &quot;http://www.w3.org/2001/04/xmlenc#sha512&quot;.       이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.       자세한 내용은에서 World Wide Web Consortium (W3C) 사양을 참조 [http://www.w3.org/2001/04/xmlenc#sha512](http://www.w3.org/2001/04/xmlenc#sha512)합니다."
  syntax:
    content: public const string XmlDsigSHA512Url;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
  id: XmlDsigXPathTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigXPathTransformUrl
  nameWithType: SignedXml.XmlDsigXPathTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "XML 경로 언어 (XPath)에 대 한 Uniform Resource Identifier를 (URI)를 나타냅니다. 이 필드는 상수입니다."
  remarks: "XmlDsigXPathTransformUrl 필드의 값은 &quot;http://www.w3.org/TR/1999/REC-xpath-19991116&quot;.       이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.       <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform>클래스 구현 XmlDsigXPathTransformUrl 필드에서 설명 된 변환을.</xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform>       자세한 내용은 http://www.w3.org/TR/1999/REC-xpath-19991116에서 World Wide Web Consortium (W3C) 사양을 참조 합니다."
  example:
  - "The following code example demonstrates how to call members of the <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> class.  \n  \n [!code-vb[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/add/codesnippet/visualbasic/f-system.security.crypto_1_1.vb)]\n [!code-cs[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/add/codesnippet/csharp/f-system.security.crypto_1_1.cs)]"
  syntax:
    content: public const string XmlDsigXPathTransformUrl;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
  id: XmlDsigXsltTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigXsltTransformUrl
  nameWithType: SignedXml.XmlDsigXsltTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "식별자 URI (Uniform Resource) XSLT 변형에 나타냅니다. 이 필드는 상수입니다."
  remarks: "XmlDsigXsltTransformUrl 필드의 값은 &quot;http://www.w3.org/TR/1999/REC-xslt-19991116&quot;.       이 필드를 사용 하 여 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 합니다.       <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>클래스 구현 XmlDsigXsltTransformUrl 필드에서 설명 된 변환을.</xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>       자세한 내용은 http://www.w3.org/TR/1999/REC-xslt-19991116에서 World Wide Web Consortium (W3C) 사양을 참조 합니다."
  example:
  - "The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> class.  \n  \n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/add/codesnippet/cpp/f-system.security.crypto_3_1.cpp)]\n [!code-cs[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/add/codesnippet/csharp/f-system.security.crypto_3_1.cs)]\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/add/codesnippet/visualbasic/f-system.security.crypto_3_1.vb)]"
  syntax:
    content: public const string XmlDsigXsltTransformUrl;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
  id: XmlLicenseTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlLicenseTransformUrl
  nameWithType: SignedXml.XmlLicenseTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "식별자 URI (Uniform Resource) 서명 위한 XrML 라이센스를 정규화 하는 데는 라이센스 변환 알고리즘에 대 한을 나타냅니다."
  remarks: "XmlLicenseTransformUrl 필드의 값은 &quot;urn: mpeg:mpeg21:2003:01-REL-R-NS:licenseTransform&quot; 편리 하 게 XMLDSIG에 사용 되는 요소의 URI 특성 중 하나에 값을 제공 하려면이 필드를 사용 합니다.       <xref:System.Security.Cryptography.Xml.XmlLicenseTransform>클래스 구현 XmlLicenseTransformUrl 필드에서 설명 된 변환을.</xref:System.Security.Cryptography.Xml.XmlLicenseTransform>"
  syntax:
    content: public const string XmlLicenseTransformUrl;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedXml()
  nameWithType: SignedXml.SignedXml()
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml()
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedXml(XmlDocument)
  nameWithType: SignedXml.SignedXml(XmlDocument)
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml(XmlDocument)
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedXml(XmlElement)
  nameWithType: SignedXml.SignedXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml(XmlElement)
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: AddObject(DataObject)
  nameWithType: SignedXml.AddObject(DataObject)
  fullName: System.Security.Cryptography.Xml.SignedXml.AddObject(DataObject)
- uid: System.Security.Cryptography.Xml.DataObject
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: DataObject
  nameWithType: DataObject
  fullName: System.Security.Cryptography.Xml.DataObject
- uid: System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: AddReference(Reference)
  nameWithType: SignedXml.AddReference(Reference)
  fullName: System.Security.Cryptography.Xml.SignedXml.AddReference(Reference)
- uid: System.Security.Cryptography.Xml.Reference
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: Reference
  nameWithType: Reference
  fullName: System.Security.Cryptography.Xml.Reference
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature()
  nameWithType: SignedXml.CheckSignature()
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature(AsymmetricAlgorithm)
  nameWithType: SignedXml.CheckSignature(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature(KeyedHashAlgorithm)
  nameWithType: SignedXml.CheckSignature(KeyedHashAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(KeyedHashAlgorithm)
- uid: System.Security.Cryptography.KeyedHashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: KeyedHashAlgorithm
  nameWithType: KeyedHashAlgorithm
  fullName: System.Security.Cryptography.KeyedHashAlgorithm
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature(X509Certificate2,Boolean)
  nameWithType: SignedXml.CheckSignature(X509Certificate2,Boolean)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignatureReturningKey(AsymmetricAlgorithm)
  nameWithType: SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: ComputeSignature()
  nameWithType: SignedXml.ComputeSignature()
  fullName: System.Security.Cryptography.Xml.SignedXml.ComputeSignature()
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: ComputeSignature(KeyedHashAlgorithm)
  nameWithType: SignedXml.ComputeSignature(KeyedHashAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.ComputeSignature(KeyedHashAlgorithm)
- uid: System.Security.Cryptography.Xml.SignedXml.EncryptedXml
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: EncryptedXml
  nameWithType: SignedXml.EncryptedXml
  fullName: System.Security.Cryptography.Xml.SignedXml.EncryptedXml
- uid: System.Security.Cryptography.Xml.EncryptedXml
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: EncryptedXml
  nameWithType: EncryptedXml
  fullName: System.Security.Cryptography.Xml.EncryptedXml
- uid: System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetIdElement(XmlDocument,String)
  nameWithType: SignedXml.GetIdElement(XmlDocument,String)
  fullName: System.Security.Cryptography.Xml.SignedXml.GetIdElement(XmlDocument,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.SignedXml.GetPublicKey
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetPublicKey()
  nameWithType: SignedXml.GetPublicKey()
  fullName: System.Security.Cryptography.Xml.SignedXml.GetPublicKey()
- uid: System.Security.Cryptography.Xml.SignedXml.GetXml
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetXml()
  nameWithType: SignedXml.GetXml()
  fullName: System.Security.Cryptography.Xml.SignedXml.GetXml()
- uid: System.Security.Cryptography.Xml.SignedXml.KeyInfo
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: KeyInfo
  nameWithType: SignedXml.KeyInfo
  fullName: System.Security.Cryptography.Xml.SignedXml.KeyInfo
- uid: System.Security.Cryptography.Xml.KeyInfo
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: KeyInfo
  nameWithType: KeyInfo
  fullName: System.Security.Cryptography.Xml.KeyInfo
- uid: System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: SignedXml.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.SignedXml.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.SignedXml.m_signature
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: m_signature
  nameWithType: SignedXml.m_signature
  fullName: System.Security.Cryptography.Xml.SignedXml.m_signature
- uid: System.Security.Cryptography.Xml.Signature
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: Signature
  nameWithType: Signature
  fullName: System.Security.Cryptography.Xml.Signature
- uid: System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: m_strSigningKeyName
  nameWithType: SignedXml.m_strSigningKeyName
  fullName: System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
- uid: System.Security.Cryptography.Xml.SignedXml.Resolver
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: Resolver
  nameWithType: SignedXml.Resolver
  fullName: System.Security.Cryptography.Xml.SignedXml.Resolver
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SafeCanonicalizationMethods
  nameWithType: SignedXml.SafeCanonicalizationMethods
  fullName: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
- uid: System.Collections.ObjectModel.Collection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<String>
  nameWithType: Collection<String>
  fullName: System.Collections.ObjectModel.Collection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Cryptography.Xml.SignedXml.Signature
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: Signature
  nameWithType: SignedXml.Signature
  fullName: System.Security.Cryptography.Xml.SignedXml.Signature
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureFormatValidator
  nameWithType: SignedXml.SignatureFormatValidator
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
- uid: System.Func{System.Security.Cryptography.Xml.SignedXml,System.Boolean}
  parent: System
  isExternal: true
  name: Func<SignedXml,Boolean>
  nameWithType: Func<SignedXml,Boolean>
  fullName: System.Func<System.Security.Cryptography.Xml.SignedXml,System.Boolean>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Security.Cryptography.Xml.SignedXml,System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Cryptography.Xml.SignedXml
    name: SignedXml
    nameWithType: SignedXml
    fullName: SignedXml
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureLength
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureLength
  nameWithType: SignedXml.SignatureLength
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureLength
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureMethod
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureMethod
  nameWithType: SignedXml.SignatureMethod
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureMethod
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureValue
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureValue
  nameWithType: SignedXml.SignatureValue
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureValue
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Xml.SignedXml.SignedInfo
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedInfo
  nameWithType: SignedXml.SignedInfo
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedInfo
- uid: System.Security.Cryptography.Xml.SignedInfo
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: SignedInfo
  nameWithType: SignedInfo
  fullName: System.Security.Cryptography.Xml.SignedInfo
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKey
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SigningKey
  nameWithType: SignedXml.SigningKey
  fullName: System.Security.Cryptography.Xml.SignedXml.SigningKey
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKeyName
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SigningKeyName
  nameWithType: SignedXml.SigningKeyName
  fullName: System.Security.Cryptography.Xml.SignedXml.SigningKeyName
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDecryptionTransformUrl
  nameWithType: SignedXml.XmlDecryptionTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigBase64TransformUrl
  nameWithType: SignedXml.XmlDsigBase64TransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigC14NTransformUrl
  nameWithType: SignedXml.XmlDsigC14NTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigC14NWithCommentsTransformUrl
  nameWithType: SignedXml.XmlDsigC14NWithCommentsTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigCanonicalizationUrl
  nameWithType: SignedXml.XmlDsigCanonicalizationUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigCanonicalizationWithCommentsUrl
  nameWithType: SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigDSAUrl
  nameWithType: SignedXml.XmlDsigDSAUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigEnvelopedSignatureTransformUrl
  nameWithType: SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigExcC14NTransformUrl
  nameWithType: SignedXml.XmlDsigExcC14NTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigExcC14NWithCommentsTransformUrl
  nameWithType: SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigHMACSHA1Url
  nameWithType: SignedXml.XmlDsigHMACSHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigMinimalCanonicalizationUrl
  nameWithType: SignedXml.XmlDsigMinimalCanonicalizationUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigNamespaceUrl
  nameWithType: SignedXml.XmlDsigNamespaceUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigRSASHA1Url
  nameWithType: SignedXml.XmlDsigRSASHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigRSASHA256Url
  nameWithType: SignedXml.XmlDsigRSASHA256Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigRSASHA384Url
  nameWithType: SignedXml.XmlDsigRSASHA384Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigRSASHA512Url
  nameWithType: SignedXml.XmlDsigRSASHA512Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigSHA1Url
  nameWithType: SignedXml.XmlDsigSHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigSHA256Url
  nameWithType: SignedXml.XmlDsigSHA256Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigSHA384Url
  nameWithType: SignedXml.XmlDsigSHA384Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigSHA512Url
  nameWithType: SignedXml.XmlDsigSHA512Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigXPathTransformUrl
  nameWithType: SignedXml.XmlDsigXPathTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigXsltTransformUrl
  nameWithType: SignedXml.XmlDsigXsltTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlLicenseTransformUrl
  nameWithType: SignedXml.XmlLicenseTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedXml
  nameWithType: SignedXml.SignedXml
- uid: System.Security.Cryptography.Xml.SignedXml.AddObject*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: AddObject
  nameWithType: SignedXml.AddObject
- uid: System.Security.Cryptography.Xml.SignedXml.AddReference*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: AddReference
  nameWithType: SignedXml.AddReference
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature
  nameWithType: SignedXml.CheckSignature
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignatureReturningKey
  nameWithType: SignedXml.CheckSignatureReturningKey
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: ComputeSignature
  nameWithType: SignedXml.ComputeSignature
- uid: System.Security.Cryptography.Xml.SignedXml.EncryptedXml*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: EncryptedXml
  nameWithType: SignedXml.EncryptedXml
- uid: System.Security.Cryptography.Xml.SignedXml.GetIdElement*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetIdElement
  nameWithType: SignedXml.GetIdElement
- uid: System.Security.Cryptography.Xml.SignedXml.GetPublicKey*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetPublicKey
  nameWithType: SignedXml.GetPublicKey
- uid: System.Security.Cryptography.Xml.SignedXml.GetXml*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetXml
  nameWithType: SignedXml.GetXml
- uid: System.Security.Cryptography.Xml.SignedXml.KeyInfo*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: KeyInfo
  nameWithType: SignedXml.KeyInfo
- uid: System.Security.Cryptography.Xml.SignedXml.LoadXml*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: LoadXml
  nameWithType: SignedXml.LoadXml
- uid: System.Security.Cryptography.Xml.SignedXml.Resolver*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: Resolver
  nameWithType: SignedXml.Resolver
- uid: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SafeCanonicalizationMethods
  nameWithType: SignedXml.SafeCanonicalizationMethods
- uid: System.Security.Cryptography.Xml.SignedXml.Signature*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: Signature
  nameWithType: SignedXml.Signature
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureFormatValidator
  nameWithType: SignedXml.SignatureFormatValidator
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureLength*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureLength
  nameWithType: SignedXml.SignatureLength
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureMethod*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureMethod
  nameWithType: SignedXml.SignatureMethod
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureValue*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureValue
  nameWithType: SignedXml.SignatureValue
- uid: System.Security.Cryptography.Xml.SignedXml.SignedInfo*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedInfo
  nameWithType: SignedXml.SignedInfo
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKey*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SigningKey
  nameWithType: SignedXml.SigningKey
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKeyName*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SigningKeyName
  nameWithType: SignedXml.SigningKeyName
