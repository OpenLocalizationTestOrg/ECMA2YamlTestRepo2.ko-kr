### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Visual
  id: Visual
  children:
  - System.Windows.Media.Visual.#ctor
  - System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.GetVisualChild(System.Int32)
  - System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)
  - System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)
  - System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)
  - System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)
  - System.Windows.Media.Visual.PointToScreen(System.Windows.Point)
  - System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)
  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.VisualBitmapEffect
  - System.Windows.Media.Visual.VisualBitmapEffectInput
  - System.Windows.Media.Visual.VisualBitmapScalingMode
  - System.Windows.Media.Visual.VisualCacheMode
  - System.Windows.Media.Visual.VisualChildrenCount
  - System.Windows.Media.Visual.VisualClearTypeHint
  - System.Windows.Media.Visual.VisualClip
  - System.Windows.Media.Visual.VisualEdgeMode
  - System.Windows.Media.Visual.VisualEffect
  - System.Windows.Media.Visual.VisualOffset
  - System.Windows.Media.Visual.VisualOpacity
  - System.Windows.Media.Visual.VisualOpacityMask
  - System.Windows.Media.Visual.VisualParent
  - System.Windows.Media.Visual.VisualScrollableAreaClip
  - System.Windows.Media.Visual.VisualTextHintingMode
  - System.Windows.Media.Visual.VisualTextRenderingMode
  - System.Windows.Media.Visual.VisualTransform
  - System.Windows.Media.Visual.VisualXSnappingGuidelines
  - System.Windows.Media.Visual.VisualYSnappingGuidelines
  langs:
  - csharp
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual
  type: Class
  summary: "렌더링 지원을 제공 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)], 포함 된 적중 테스트, 좌표 변환, 및 경계 상자 계산 합니다."
  remarks: "시각적 클래스의 기본 추상화입니다는 모든 <xref:System.Windows.FrameworkElement>개체에서 파생 됩니다.</xref:System.Windows.FrameworkElement> 새 컨트롤을 작성 하는 것에 대 한 진입점으로도 사용 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)], 여러 가지 방법으로 일종의 창 핸들 (HWND)의 해당에서 및는 [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] 응용 프로그램 모델입니다.       시각적 개체는 주요 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 주 역할이 렌더링 지원을 제공 하는 개체입니다. 와 같은 사용자 인터페이스 컨트롤 <xref:System.Windows.Controls.Button>및 <xref:System.Windows.Controls.TextBox>Visual 클래스에서 파생 하 고 렌더링 데이터를 유지 하는 것에 대 한 시각적 정의 된 속성을 사용 합니다.</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.Button> 시각적 개체는 다음에 대 한 지원을 제공:-출력 표시: 그리기 내용을 시각적 개체의 serialize 된 지속형를 렌더링 합니다.      -변환: 시각적 변환을 수행 합니다.      -클리핑: 시각적 개체에 대 한 클리핑 영역 지원을 제공 합니다.      -적중 테스트:에 지정 된 좌표 (포인트) 또는 기 하 도형 시각적 개체의 범위 내에 포함 되어 있는지 여부를 확인 합니다.      경계 상자 계산: 시각적 개체의 경계 사각형을 확인 합니다.       아키텍처 측면에서 시각적 개체는 다른 응용 프로그램 개발 요구 사항에 대 한 지원을 / [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 즉시 다음과 같은 렌더링과 관련 되지 않은 기능:--레이아웃을 처리 하는 이벤트 데이터 바인딩-스타일 전역화 Visual 공용 추상 클래스는 추가 클래스 파생 될 수로 제공 됩니다. 다음 그림에 정의 된 기존 시각적 개체의 계층 구조를 보여 줍니다.는 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 아키텍처.       ![시각적 개체에서 파생 된 클래스의 다이어그램](~/add/media/visualclass01.png &quot;시각적 개체에서 파생 된 클래스의 다이어그램&quot;) 경우에 따라 시각적 개체에서 보호 된 상태로 정의 된 멤버 표시 클래스 계층 구조는 파생된 <xref:System.Windows.UIElement>클래스</xref:System.Windows.UIElement> 에 이름이 비슷한 쉽게 액세스할 수 있는 멤버로 노출 되       자세한 내용은 참조 [WPF 그래픽 렌더링 개요](~/add/includes/ajax-current-ext-md.md)합니다.       시각적 개체에 제한 된 수의 수준에 있습니다. .NET Framework의 이전 버전에서는이 최대 깊이 255 였습니다. 이 한도 시각적 트리에 여러 수준이 있는 일부 레이아웃에 적합 하지 않습니다.       [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], 시각적 개체의 최대 깊이 2047 시각적 트리를 더욱 심층적 할 수 있게 합니다. 대부분의 응용 프로그램에 공간이 충분 한 스택 많은 수준을 통과 하 고 결과는 <xref:System.StackOverflowException>레이아웃 하는 동안.</xref:System.StackOverflowException> 기본 스택 크기에 대 한이 예외는 대개 throw 트리 깊이 약 800 중첩 190 약에 해당 하는 경우 <xref:System.Windows.Controls.TreeViewItem>개체입니다.</xref:System.Windows.Controls.TreeViewItem>       응용 프로그램에서이 예외는 throw 깊은 시각적 트리 있어야 하는 경우에 응용 프로그램의 스택 크기를 늘릴 수 있습니다. 컴파일 타임에 /STACK 옵션을 사용 하 여 또는 EDITBIN 유틸리티를 사용 하 여 스택 크기를 늘릴 수 있습니다. 스택 크기를 늘리면 응용 프로그램의 성능에 영향을 줄 수 있습니다. 자세한 내용은 참조 [스택 할당](http://go.microsoft.com/fwlink/?LinkId=165510) 및 [EDITBIN 옵션](http://go.microsoft.com/fwlink/?LinkId=165511)합니다."
  syntax:
    content: 'public abstract class Visual : System.Windows.DependencyObject'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Visual.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: Visual()
  nameWithType: Visual.Visual()
  fullName: System.Windows.Media.Visual.Visual()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "파생 된 개체에 대 한 기본 초기화를 제공는 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 클래스입니다."
  syntax:
    content: protected Visual ();
    parameters: []
  overload: System.Windows.Media.Visual.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)
  id: AddVisualChild(System.Windows.Media.Visual)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: AddVisualChild(Visual)
  nameWithType: Visual.AddVisualChild(Visual)
  fullName: System.Windows.Media.Visual.AddVisualChild(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "두 개의 시각적 개체 간의 부모-자식 관계를 정의합니다."
  remarks: "AddVisualChild 메서드 두 시각적 개체 간의 부모-자식 관계를 설정합니다. 시각적 자식 개체의 기본 저장소 구현에 대 한 하위 수준 제어 강화 해야 하는 경우이 메서드를 사용 해야 합니다. <xref:System.Windows.Media.VisualCollection>자식 개체를 저장 하기 위한 기본 구현으로 사용할 수 있습니다.</xref:System.Windows.Media.VisualCollection>"
  example:
  - "The following example shows how to define custom storage requirements for a visual child. The example uses the AddVisualChild and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods to sets up the parent-child relationship between the parent visual and `child`. In order for the visual tree to be enumerated correctly, the example provides overridden implementations of the <xref:System.Windows.Media.Visual.GetVisualChild%2A> method and <xref:System.Windows.Media.Visual.VisualChildrenCount%2A> property.  \n  \n> [!NOTE]\n>  Although it is possible to use <xref:System.Windows.Media.VisualCollection> to create parent-child relationships between visual objects, it is more efficient to provide your own custom storage implementation when only one child is linked to a parent.  \n  \n [!code-cs[AddVisualChild#AddVisualChild01](~/add/codesnippet/csharp/AddVisualChild/Window1.xaml.cs#addvisualchild01)]\n [!code-vb[AddVisualChild#AddVisualChild01](~/add/codesnippet/visualbasic/addvisualchild/window1.xaml.vb#addvisualchild01)]"
  syntax:
    content: protected void AddVisualChild (System.Windows.Media.Visual child);
    parameters:
    - id: child
      type: System.Windows.Media.Visual
      description: "부모 visual에 추가할 자식 시각적 개체입니다."
  overload: System.Windows.Media.Visual.AddVisualChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)
  id: FindCommonVisualAncestor(System.Windows.DependencyObject)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: FindCommonVisualAncestor(DependencyObject)
  nameWithType: Visual.FindCommonVisualAncestor(DependencyObject)
  fullName: System.Windows.Media.Visual.FindCommonVisualAncestor(DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "두 시각적 개체의 공통 상위 항목을 반환합니다."
  remarks: "2D 및 3D 개체 이므로 전달할 수 시각적 공통 상위 항목이 있을 수 있습니다는 <xref:System.Windows.Media.Media3D.Visual3D>에 대 한 `otherVisual`.</xref:System.Windows.Media.Media3D.Visual3D>"
  syntax:
    content: public System.Windows.DependencyObject FindCommonVisualAncestor (System.Windows.DependencyObject otherVisual);
    parameters:
    - id: otherVisual
      type: System.Windows.DependencyObject
      description: "시각적 개체 형식의 <xref href=&quot;System.Windows.DependencyObject&quot;> </xref>합니다."
    return:
      type: System.Windows.DependencyObject
      description: "시각적 개체의 공통 상위 항목 및 <code> otherVisual </code> ; 있는 경우 이렇게 하지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.Visual.FindCommonVisualAncestor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.GetVisualChild(System.Int32)
  id: GetVisualChild(System.Int32)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: GetVisualChild(Int32)
  nameWithType: Visual.GetVisualChild(Int32)
  fullName: System.Windows.Media.Visual.GetVisualChild(Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "지정 된 반환 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 부모에서 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>합니다."
  remarks: "기본적으로는 <xref:System.Windows.Media.Visual>자식이 없습니다.</xref:System.Windows.Media.Visual> 따라서 기본 구현에서는 항상 throw <xref:System.ArgumentOutOfRangeException>.</xref:System.ArgumentOutOfRangeException>"
  example:
  - "The following example defines an overridden implementation of GetVisualChild.  \n  \n [!code-cs[DrawingVisualSample#102b](~/add/codesnippet/csharp/DrawingVisual/Window1.xaml.cs#102b)]\n [!code-vb[DrawingVisualSample#102b](~/add/codesnippet/visualbasic/drawingvisual/window1.xaml.vb#102b)]"
  syntax:
    content: protected virtual System.Windows.Media.Visual GetVisualChild (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "시각적 개체의 인덱스는 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>합니다."
    return:
      type: System.Windows.Media.Visual
      description: "에 있는 자식은 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> 지정 된 위치에서 <code> index </code> 값입니다."
  overload: System.Windows.Media.Visual.GetVisualChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)
  id: HitTestCore(System.Windows.Media.GeometryHitTestParameters)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: HitTestCore(GeometryHitTestParameters)
  nameWithType: Visual.HitTestCore(GeometryHitTestParameters)
  fullName: System.Windows.Media.Visual.HitTestCore(GeometryHitTestParameters)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "기하학 값이 시각적 개체의 범위 내에 있는지 확인 합니다."
  remarks: "재정의 하 여 시각적 개체에 대 한 지원을 테스트 하는 기본 적중 재정의할 수 있습니다는 <xref:System.Windows.Media.Visual.HitTestCore%2A>메서드.</xref:System.Windows.Media.Visual.HitTestCore%2A> 즉, 호출 하는 경우는 <xref:System.Windows.Media.VisualTreeHelper.HitTest%2A>메서드를 재정의 된 구현 <xref:System.Windows.Media.Visual.HitTestCore%2A>호출 됩니다.</xref:System.Windows.Media.Visual.HitTestCore%2A> </xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> 재정의 된 메서드는 좌표가 시각적 개체의 기 하 도형을 밖에 있는 경우에이 시각적 개체의 경계 사각형 내에 적중 횟수 테스트 하는 경우 호출 됩니다."
  example:
  - "The following example shows how to override the HitTestCore method. One reason you might want to override this method is to provide additional functionality during the hit testing process.  \n  \n [!code-vb[HitTestingOverview#HitTestingOverviewSnippet13](~/add/codesnippet/visualbasic/hittestingoverview/geometryhittest.vb#hittestingoverviewsnippet13)]\n [!code-cs[HitTestingOverview#HitTestingOverviewSnippet13](~/add/codesnippet/csharp/HitTestingOverview/GeometryHitTest.cs#hittestingoverviewsnippet13)]"
  syntax:
    content: protected virtual System.Windows.Media.GeometryHitTestResult HitTestCore (System.Windows.Media.GeometryHitTestParameters hitTestParameters);
    parameters:
    - id: hitTestParameters
      type: System.Windows.Media.GeometryHitTestParameters
      description: "A <xref href=&quot;System.Windows.Media.GeometryHitTestParameters&quot;> </xref> 지정 하는 개체는 <xref href=&quot;System.Windows.Media.Geometry&quot;> </xref> 적중 테스트를 수행할 합니다."
    return:
      type: System.Windows.Media.GeometryHitTestResult
      description: "A <xref href=&quot;System.Windows.Media.GeometryHitTestResult&quot;> </xref> 적중 횟수 테스트의 결과 나타내는입니다."
  overload: System.Windows.Media.Visual.HitTestCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)
  id: HitTestCore(System.Windows.Media.PointHitTestParameters)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: HitTestCore(PointHitTestParameters)
  nameWithType: Visual.HitTestCore(PointHitTestParameters)
  fullName: System.Windows.Media.Visual.HitTestCore(PointHitTestParameters)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "점 좌표 값이 시각적 개체의 범위 내에 있는지 확인 합니다."
  remarks: "기본 적중 시각적 개체에 대 한 지원 재정의 하 여 테스트를 재정의할 수 있습니다는 <xref:System.Windows.Media.Visual.HitTestCore%2A>메서드.</xref:System.Windows.Media.Visual.HitTestCore%2A> 즉, 호출 하는 경우는 <xref:System.Windows.Media.VisualTreeHelper.HitTest%2A>메서드를 재정의 된 구현 <xref:System.Windows.Media.Visual.HitTestCore%2A>호출 됩니다.</xref:System.Windows.Media.Visual.HitTestCore%2A> </xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> 재정의 된 메서드는 좌표가 시각적 개체의 기 하 도형을 밖에 있는 경우에이 시각적 개체의 경계 사각형 내에 적중 횟수 테스트 하는 경우 호출 됩니다."
  example:
  - "The following example shows how to override the HitTestCore method. One reason you might want to override this method is to provide additional functionality during the hit testing process.  \n  \n [!code-cs[HitTestingOverview#107](~/add/codesnippet/csharp/HitTestingOverview/Window1.xaml.cs#107)]\n [!code-vb[HitTestingOverview#107](~/add/codesnippet/visualbasic/hittestingoverview/window1.xaml.vb#107)]"
  syntax:
    content: protected virtual System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParameters);
    parameters:
    - id: hitTestParameters
      type: System.Windows.Media.PointHitTestParameters
      description: "A <xref href=&quot;System.Windows.Media.PointHitTestParameters&quot;> </xref> 지정 하는 개체는 <xref href=&quot;System.Windows.Point&quot;> </xref> 적중 테스트를 수행할 합니다."
    return:
      type: System.Windows.Media.HitTestResult
      description: "A <xref href=&quot;System.Windows.Media.HitTestResult&quot;> </xref> 나타내는 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 적중 횟수 테스트에서 반환 되는 합니다."
  overload: System.Windows.Media.Visual.HitTestCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)
  id: IsAncestorOf(System.Windows.DependencyObject)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: IsAncestorOf(DependencyObject)
  nameWithType: Visual.IsAncestorOf(DependencyObject)
  fullName: System.Windows.Media.Visual.IsAncestorOf(DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "하위 시각적 개체의 상위 항목 인지 여부를 결정 합니다."
  syntax:
    content: public bool IsAncestorOf (System.Windows.DependencyObject descendant);
    parameters:
    - id: descendant
      type: System.Windows.DependencyObject
      description: "형식의 값 <xref href=&quot;System.Windows.DependencyObject&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>시각적 개체의 상위 항목이 면 <code> descendant </code>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.Visual.IsAncestorOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)
  id: IsDescendantOf(System.Windows.DependencyObject)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: IsDescendantOf(DependencyObject)
  nameWithType: Visual.IsDescendantOf(DependencyObject)
  fullName: System.Windows.Media.Visual.IsDescendantOf(DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "상위 시각적 개체의 하위 항목 인지 여부를 결정 합니다."
  syntax:
    content: public bool IsDescendantOf (System.Windows.DependencyObject ancestor);
    parameters:
    - id: ancestor
      type: System.Windows.DependencyObject
      description: "형식의 값 <xref href=&quot;System.Windows.DependencyObject&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>시각적 개체의 하위 항목이 있으면 <code> ancestor </code>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.Visual.IsDescendantOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)
  id: OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: OnDpiChanged(DpiScale,DpiScale)
  nameWithType: Visual.OnDpiChanged(DpiScale,DpiScale)
  fullName: System.Windows.Media.Visual.OnDpiChanged(DpiScale,DpiScale)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "될 때 호출 된 렌더링 되어 변경 내용을 DPI입니다."
  syntax:
    content: protected virtual void OnDpiChanged (System.Windows.DpiScale oldDpi, System.Windows.DpiScale newDpi);
    parameters:
    - id: oldDpi
      type: System.Windows.DpiScale
      description: "이전 DPI 설정 소수 자릿수입니다."
    - id: newDpi
      type: System.Windows.DpiScale
      description: "설정 하는 새 DPI 배율입니다."
  overload: System.Windows.Media.Visual.OnDpiChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  id: OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: OnVisualChildrenChanged(DependencyObject,DependencyObject)
  nameWithType: Visual.OnVisualChildrenChanged(DependencyObject,DependencyObject)
  fullName: System.Windows.Media.Visual.OnVisualChildrenChanged(DependencyObject,DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "될 때 호출 된 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> 시각적 개체의 수정 됩니다."
  syntax:
    content: protected virtual void OnVisualChildrenChanged (System.Windows.DependencyObject visualAdded, System.Windows.DependencyObject visualRemoved);
    parameters:
    - id: visualAdded
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 컬렉션에 추가 된"
    - id: visualRemoved
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 컬렉션에서 제거 하는"
  overload: System.Windows.Media.Visual.OnVisualChildrenChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)
  id: OnVisualParentChanged(System.Windows.DependencyObject)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: OnVisualParentChanged(DependencyObject)
  nameWithType: Visual.OnVisualParentChanged(DependencyObject)
  fullName: System.Windows.Media.Visual.OnVisualParentChanged(DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "시각적 개체의 부모가 변경 될 때 호출 됩니다."
  remarks: "파생 되는 클래스 <xref:System.Windows.Media.Visual>이 메서드를 재정의 하도록 선택할 수 있습니다.</xref:System.Windows.Media.Visual>       이벤트는 없습니다 &quot;VisualParentChanged&quot; 인스턴스에이 변경을 보고를 제공 합니다. 따라서 알림 시나리오를 처리 하 고 시나리오에 포함 된 경우 알림 메시지의 인스턴스 버전을 제공 하려면이 메서드를 재정의 해야 합니다."
  example:
  - "The following example defines an overridden implementation of OnVisualParentChanged.  \n  \n [!code-vb[VisualSnippets#VisualSnippet10](~/add/codesnippet/visualbasic/visualsnippets/window1.xaml.vb#visualsnippet10)]\n [!code-cs[VisualSnippets#VisualSnippet10](~/add/codesnippet/csharp/VisualSnippets/Window1.xaml.cs#visualsnippet10)]"
  syntax:
    content: protected virtual void OnVisualParentChanged (System.Windows.DependencyObject oldParent);
    parameters:
    - id: oldParent
      type: System.Windows.DependencyObject
      description: "형식의 값 <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> 의 이전 부모를 나타내는 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 개체입니다. 경우는 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 개체 이전 부모가 없는, 매개 변수의 값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.Visual.OnVisualParentChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)
  id: PointFromScreen(System.Windows.Point)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: PointFromScreen(Point)
  nameWithType: Visual.PointFromScreen(Point)
  fullName: System.Windows.Media.Visual.PointFromScreen(Point)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "변환 된 <xref href=&quot;System.Windows.Point&quot;> </xref> 화면 좌표에는 <xref href=&quot;System.Windows.Point&quot;> </xref> 의 현재 좌표 시스템을 나타내는 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>합니다."
  remarks: "사용 하 여는 <xref:System.Windows.Media.Visual.PointToScreen%2A>변환 하는 메서드는 <xref:System.Windows.Point>의 현재 좌표 시스템을 나타내는 <xref:System.Windows.Media.Visual>에 <xref:System.Windows.Point>화면 좌표에서.</xref:System.Windows.Point> </xref:System.Windows.Media.Visual> </xref:System.Windows.Point> </xref:System.Windows.Media.Visual.PointToScreen%2A>"
  syntax:
    content: public System.Windows.Point PointFromScreen (System.Windows.Point point);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "<xref href=&quot;System.Windows.Point&quot;> </xref> 화면 좌표에 있습니다."
    return:
      type: System.Windows.Point
      description: "변환 된 <xref href=&quot;System.Windows.Point&quot;> </xref> 의 현재 좌표 시스템을 나타내는 값은 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>합니다."
  overload: System.Windows.Media.Visual.PointFromScreen*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.PointToScreen(System.Windows.Point)
  id: PointToScreen(System.Windows.Point)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: PointToScreen(Point)
  nameWithType: Visual.PointToScreen(Point)
  fullName: System.Windows.Media.Visual.PointToScreen(Point)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "변환는 <xref href=&quot;System.Windows.Point&quot;> </xref> 의 현재 좌표 시스템을 나타내는 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 에 <xref href=&quot;System.Windows.Point&quot;> </xref> 화면 좌표에서입니다."
  remarks: "<xref:System.Windows.Media.Visual.PointFromScreen%2A> <xref:System.Windows.Point>화면 좌표로 <xref:System.Windows.Point>나타내는 <xref:System.Windows.Media.Visual>.</xref:System.Windows.Media.Visual> 현재 좌표계</xref:System.Windows.Point> 로</xref:System.Windows.Point> 변환 하는 메서드</xref:System.Windows.Media.Visual.PointFromScreen%2A> 를 사용 하 여"
  syntax:
    content: public System.Windows.Point PointToScreen (System.Windows.Point point);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "<xref href=&quot;System.Windows.Point&quot;> </xref> 의 현재 좌표 시스템을 나타내는 값은 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>합니다."
    return:
      type: System.Windows.Point
      description: "변환 된 <xref href=&quot;System.Windows.Point&quot;> </xref> 화면 좌표에 있습니다."
  overload: System.Windows.Media.Visual.PointToScreen*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)
  id: RemoveVisualChild(System.Windows.Media.Visual)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: RemoveVisualChild(Visual)
  nameWithType: Visual.RemoveVisualChild(Visual)
  fullName: System.Windows.Media.Visual.RemoveVisualChild(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "두 개의 시각적 개체 간의 부모-자식 관계를 제거합니다."
  remarks: "RemoveVisualChild 메서드 두 시각적 개체 간의 부모-자식 관계를 제거합니다. 이 메서드를 함께 <xref:System.Windows.Media.Visual.AddVisualChild%2A>시각적 자식 개체의 기본 저장소 구현 큰 하위 수준 제어 해야 할 때 메서드를 사용 해야 합니다.</xref:System.Windows.Media.Visual.AddVisualChild%2A> <xref:System.Windows.Media.VisualCollection>자식 개체를 저장 하기 위한 기본 구현으로 사용할 수 있습니다.</xref:System.Windows.Media.VisualCollection>"
  example:
  - "The following example shows how to define custom storage requirements for a visual child. The example uses the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and RemoveVisualChild methods to sets up the parent-child relationship between the parent visual and `child`. In order for the visual tree to be enumerated correctly, the example provides overridden implementations of the <xref:System.Windows.Media.Visual.GetVisualChild%2A> method and <xref:System.Windows.Media.Visual.VisualChildrenCount%2A> property.  \n  \n> [!NOTE]\n>  Although it is possible to use <xref:System.Windows.Media.VisualCollection> to create parent-child relationships between visual objects, it is more efficient to provide your own custom storage implementation when only one child is linked to a parent.  \n  \n [!code-cs[AddVisualChild#AddVisualChild01](~/add/codesnippet/csharp/AddVisualChild/Window1.xaml.cs#addvisualchild01)]\n [!code-vb[AddVisualChild#AddVisualChild01](~/add/codesnippet/visualbasic/addvisualchild/window1.xaml.vb#addvisualchild01)]"
  syntax:
    content: protected void RemoveVisualChild (System.Windows.Media.Visual child);
    parameters:
    - id: child
      type: System.Windows.Media.Visual
      description: "부모 visual에서 제거할 자식 시각적 개체입니다."
  overload: System.Windows.Media.Visual.RemoveVisualChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)
  id: TransformToAncestor(System.Windows.Media.Media3D.Visual3D)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: TransformToAncestor(Visual3D)
  nameWithType: Visual.TransformToAncestor(Visual3D)
  fullName: System.Windows.Media.Visual.TransformToAncestor(Visual3D)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "좌표 변환에 사용할 수 있는 변환을 반환 된 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 지정 된 <xref href=&quot;System.Windows.Media.Media3D.Visual3D&quot;> </xref> 시각적 개체의 상위 항목입니다."
  syntax:
    content: public System.Windows.Media.Media3D.GeneralTransform2DTo3D TransformToAncestor (System.Windows.Media.Media3D.Visual3D ancestor);
    parameters:
    - id: ancestor
      type: System.Windows.Media.Media3D.Visual3D
      description: "<xref href=&quot;System.Windows.Media.Media3D.Visual3D&quot;> </xref> 좌표 변환 됩니다."
    return:
      type: System.Windows.Media.Media3D.GeneralTransform2DTo3D
      description: "좌표 변환에 사용할 수 있는 변환을 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 지정 된 <xref href=&quot;System.Windows.Media.Media3D.Visual3D&quot;> </xref> 시각적 개체의 상위 항목입니다."
  overload: System.Windows.Media.Visual.TransformToAncestor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)
  id: TransformToAncestor(System.Windows.Media.Visual)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: TransformToAncestor(Visual)
  nameWithType: Visual.TransformToAncestor(Visual)
  fullName: System.Windows.Media.Visual.TransformToAncestor(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "좌표 변환에 사용할 수 있는 변환을 반환 된 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 지정 된 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 시각적 개체의 상위 항목입니다."
  remarks: "사용할 수 있습니다는 <xref:System.Windows.Media.VisualTreeHelper.GetOffset%2A?displayProperty=fullName>부모를 기준으로 시각적 개체의 오프셋을 검색 하는 메서드입니다.</xref:System.Windows.Media.VisualTreeHelper.GetOffset%2A?displayProperty=fullName> 오프셋된 값이 포함 되어 반환 된 <xref:System.Windows.Vector>값.</xref:System.Windows.Vector>       [!code-vb[VisualSnippets #VisualSnippet2](~/add/codesnippet/visualbasic/visualsnippets/window1.xaml.vb#visualsnippet2)][!code-cs[VisualSnippets #VisualSnippet2  ](~/add/codesnippet/csharp/VisualSnippets/Window1.xaml.cs#visualsnippet2)]"
  example:
  - "The following markup example shows a <xref:System.Windows.Controls.TextBlock> that is nested within two <xref:System.Windows.Controls.StackPanel> objects.  \n  \n [!code-xml[VisualSnippets#VisualSnippet7](~/add/codesnippet/xaml/VisualSnippets/Window2.xaml#visualsnippet7)]  \n  \n The following code example shows how to use the TransformToAncestor method to retrieve the offset of the <xref:System.Windows.Controls.TextBlock> relative to the containing <xref:System.Windows.Window>. The offset values are contained in the returned <xref:System.Windows.Media.GeneralTransform>.  \n  \n [!code-vb[VisualSnippets#VisualSnippet5](~/add/codesnippet/visualbasic/visualsnippets/window1.xaml.vb#visualsnippet5)]\n [!code-cs[VisualSnippets#VisualSnippet5](~/add/codesnippet/csharp/VisualSnippets/Window1.xaml.cs#visualsnippet5)]  \n  \n The offset takes into account the <xref:System.Windows.FrameworkElement.Margin%2A> values for all objects within the containing <xref:System.Windows.Window>. In this case, <xref:System.Windows.Vector.X%2A> is 28, and <xref:System.Windows.Vector.Y%2A> is 28."
  syntax:
    content: public System.Windows.Media.GeneralTransform TransformToAncestor (System.Windows.Media.Visual ancestor);
    parameters:
    - id: ancestor
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 좌표 변환 됩니다."
    return:
      type: System.Windows.Media.GeneralTransform
      description: "형식의 값 <xref href=&quot;System.Windows.Media.GeneralTransform&quot;> </xref>합니다."
  overload: System.Windows.Media.Visual.TransformToAncestor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ancestor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ancestor</code>시각적 개체의 상위 항목이 아닙니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "시각적 개체는 관련이 없습니다."
  platform:
  - net462
- uid: System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)
  id: TransformToDescendant(System.Windows.Media.Visual)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: TransformToDescendant(Visual)
  nameWithType: Visual.TransformToDescendant(Visual)
  fullName: System.Windows.Media.Visual.TransformToDescendant(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "좌표 변환에 사용할 수 있는 변환을 반환 된 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 시각적 개체를 지정 된 하위 항목으로 합니다."
  remarks: ''
  example:
  - "The following markup example shows a <xref:System.Windows.Controls.TextBlock> that is contained within a <xref:System.Windows.Controls.StackPanel> object.  \n  \n [!code-xml[VisualSnippets#VisualSnippet4](~/add/codesnippet/xaml/VisualSnippets/Window1.xaml#visualsnippet4)]  \n  \n The following code example shows how to use the TransformToDescendant method to retrieve the offset of the <xref:System.Windows.Controls.StackPanel> relative to its child <xref:System.Windows.Controls.TextBlock>. The offset values are contained within the returned <xref:System.Windows.Media.GeneralTransform> value.  \n  \n [!code-vb[VisualSnippets#VisualSnippet9](~/add/codesnippet/visualbasic/visualsnippets/window1.xaml.vb#visualsnippet9)]\n [!code-cs[VisualSnippets#VisualSnippet9](~/add/codesnippet/csharp/VisualSnippets/Window1.xaml.cs#visualsnippet9)]  \n  \n The offset takes into account the <xref:System.Windows.FrameworkElement.Margin%2A> values for all objects. In this case, <xref:System.Windows.Vector.X%2A> is -4, and <xref:System.Windows.Vector.Y%2A> is -4. The offset values are negative values because the parent object is negatively offset relative to its child object."
  syntax:
    content: public System.Windows.Media.GeneralTransform TransformToDescendant (System.Windows.Media.Visual descendant);
    parameters:
    - id: descendant
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 좌표 변환 됩니다."
    return:
      type: System.Windows.Media.GeneralTransform
      description: "형식의 값 <xref href=&quot;System.Windows.Media.GeneralTransform&quot;> </xref>합니다."
  overload: System.Windows.Media.Visual.TransformToDescendant*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>descendant</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "시각적 개체의 상위가 아닙니다.는 <code> descendant </code> visual 합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "시각적 개체는 관련이 없습니다."
  platform:
  - net462
- uid: System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)
  id: TransformToVisual(System.Windows.Media.Visual)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: TransformToVisual(Visual)
  nameWithType: Visual.TransformToVisual(Visual)
  fullName: System.Windows.Media.Visual.TransformToVisual(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "좌표 변환에 사용할 수 있는 변환을 반환 된 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 지정된 된 시각적 개체에 있습니다."
  remarks: "<xref:System.Windows.Media.Visual.TransformToAncestor%2A>및 <xref:System.Windows.Media.Visual.TransformToDescendant%2A>시각적 개체에 대 한 변환을 반환할 방법을 사용할 수도 있습니다.</xref:System.Windows.Media.Visual.TransformToDescendant%2A> </xref:System.Windows.Media.Visual.TransformToAncestor%2A>"
  example:
  - "The following markup example shows a <xref:System.Windows.Controls.TextBlock> that is contained within a <xref:System.Windows.Controls.StackPanel> object.  \n  \n [!code-xml[VisualSnippets#VisualSnippet4](~/add/codesnippet/xaml/VisualSnippets/Window1.xaml#visualsnippet4)]  \n  \n The following code example shows how to use the TransformToVisual method to retrieve the offset of the <xref:System.Windows.Controls.StackPanel> relative to its child <xref:System.Windows.Controls.TextBlock>. The offset values are contained within the returned <xref:System.Windows.Media.GeneralTransform> value.  \n  \n [!code-vb[VisualSnippets#VisualSnippet8](~/add/codesnippet/visualbasic/visualsnippets/window1.xaml.vb#visualsnippet8)]\n [!code-cs[VisualSnippets#VisualSnippet8](~/add/codesnippet/csharp/VisualSnippets/Window1.xaml.cs#visualsnippet8)]  \n  \n The offset takes into account the <xref:System.Windows.FrameworkElement.Margin%2A> values for all objects. In this case, <xref:System.Windows.Vector.X%2A> is -4, and <xref:System.Windows.Vector.Y%2A> is -4. The offset values are negative values because the parent object is negatively offset relative to its child object."
  syntax:
    content: public System.Windows.Media.GeneralTransform TransformToVisual (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 좌표 변환 됩니다."
    return:
      type: System.Windows.Media.GeneralTransform
      description: "형식의 값 <xref href=&quot;System.Windows.Media.GeneralTransform&quot;> </xref>합니다."
  overload: System.Windows.Media.Visual.TransformToVisual*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>visual</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "시각적 개체는 관련이 없습니다."
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualBitmapEffect
  id: VisualBitmapEffect
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualBitmapEffect
  nameWithType: Visual.VisualBitmapEffect
  fullName: System.Windows.Media.Visual.VisualBitmapEffect
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "가져오거나는 <xref href=&quot;System.Windows.Media.Effects.BitmapEffect&quot;> </xref> 에 대 한 값은 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>합니다."
  syntax:
    content: protected System.Windows.Media.Effects.BitmapEffect VisualBitmapEffect { get; set; }
    return:
      type: System.Windows.Media.Effects.BitmapEffect
      description: "이 시각적 개체에 대 한 비트맵 효과입니다."
  overload: System.Windows.Media.Visual.VisualBitmapEffect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualBitmapEffectInput
  id: VisualBitmapEffectInput
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualBitmapEffectInput
  nameWithType: Visual.VisualBitmapEffectInput
  fullName: System.Windows.Media.Visual.VisualBitmapEffectInput
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "가져오거나는 <xref href=&quot;System.Windows.Media.Effects.BitmapEffectInput&quot;> </xref> 에 대 한 값은 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>합니다."
  syntax:
    content: protected System.Windows.Media.Effects.BitmapEffectInput VisualBitmapEffectInput { get; set; }
    return:
      type: System.Windows.Media.Effects.BitmapEffectInput
      description: "비트맵 효과이 시각적 개체에 대 한 값을 입력 합니다."
  overload: System.Windows.Media.Visual.VisualBitmapEffectInput*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualBitmapScalingMode
  id: VisualBitmapScalingMode
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualBitmapScalingMode
  nameWithType: Visual.VisualBitmapScalingMode
  fullName: System.Windows.Media.Visual.VisualBitmapScalingMode
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "가져오거나는 <xref href=&quot;System.Windows.Media.BitmapScalingMode&quot;> </xref> 에 대 한는 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>합니다."
  syntax:
    content: protected System.Windows.Media.BitmapScalingMode VisualBitmapScalingMode { get; set; }
    return:
      type: System.Windows.Media.BitmapScalingMode
      description: "The <xref href=&quot;System.Windows.Media.BitmapScalingMode&quot;></xref> value for the <xref href=&quot;System.Windows.Media.Visual&quot;></xref>."
  overload: System.Windows.Media.Visual.VisualBitmapScalingMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualCacheMode
  id: VisualCacheMode
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualCacheMode
  nameWithType: Visual.VisualCacheMode
  fullName: System.Windows.Media.Visual.VisualCacheMode
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "캐시 된 표현을 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>합니다."
  remarks: "렌더링 하는 데 많은 시간이 소요 되는 콘텐츠에 대 한 성능 향상을 위해 필요한 경우 VisualCacheMode 속성을 설정 합니다. 자세한 내용은 <xref:System.Windows.Media.BitmapCache>.</xref:System.Windows.Media.BitmapCache> 을 참조 하십시오."
  syntax:
    content: protected System.Windows.Media.CacheMode VisualCacheMode { get; set; }
    return:
      type: System.Windows.Media.CacheMode
      description: "A <xref href=&quot;System.Windows.Media.CacheMode&quot;> </xref> 의 캐시 된 표현을 보유 하는 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>합니다."
  overload: System.Windows.Media.Visual.VisualCacheMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualChildrenCount
  id: VisualChildrenCount
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualChildrenCount
  nameWithType: Visual.VisualChildrenCount
  fullName: System.Windows.Media.Visual.VisualChildrenCount
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "자식 요소 수를 가져옵니다는 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>합니다."
  remarks: "기본적으로는 <xref:System.Windows.Media.Visual>자식이 없습니다.</xref:System.Windows.Media.Visual> 따라서 기본 구현에서는 항상 0을 반환합니다."
  example:
  - "The following example defines an overridden implementation of VisualChildrenCount.  \n  \n [!code-cs[DrawingVisualSample#102a](~/add/codesnippet/csharp/DrawingVisual/Window1.xaml.cs#102a)]\n [!code-vb[DrawingVisualSample#102a](~/add/codesnippet/visualbasic/drawingvisual/window1.xaml.vb#102a)]"
  syntax:
    content: protected virtual int VisualChildrenCount { get; }
    return:
      type: System.Int32
      description: "자식 요소의 수입니다."
  overload: System.Windows.Media.Visual.VisualChildrenCount*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualClearTypeHint
  id: VisualClearTypeHint
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualClearTypeHint
  nameWithType: Visual.VisualClearTypeHint
  fullName: System.Windows.Media.Visual.VisualClearTypeHint
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "가져오거나는 <xref href=&quot;System.Windows.Media.ClearTypeHint&quot;> </xref> ClearType에 렌더링 되는 방법을 결정 하는 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>합니다."
  syntax:
    content: protected System.Windows.Media.ClearTypeHint VisualClearTypeHint { get; set; }
    return:
      type: System.Windows.Media.ClearTypeHint
      description: "A <xref href=&quot;System.Windows.Media.ClearTypeHint&quot;></xref> of the <xref href=&quot;System.Windows.Media.Visual&quot;></xref>."
  overload: System.Windows.Media.Visual.VisualClearTypeHint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualClip
  id: VisualClip
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualClip
  nameWithType: Visual.VisualClip
  fullName: System.Windows.Media.Visual.VisualClip
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "클립 영역을 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 로 <xref href=&quot;System.Windows.Media.Geometry&quot;> </xref> 값입니다."
  syntax:
    content: protected System.Windows.Media.Geometry VisualClip { get; set; }
    return:
      type: System.Windows.Media.Geometry
      description: "클립 영역 값으로 시각적 개체의 한 <xref href=&quot;System.Windows.Media.Geometry&quot;> </xref> 유형입니다."
  overload: System.Windows.Media.Visual.VisualClip*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualEdgeMode
  id: VisualEdgeMode
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualEdgeMode
  nameWithType: Visual.VisualEdgeMode
  fullName: System.Windows.Media.Visual.VisualEdgeMode
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "가장자리 모드를 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 로 <xref href=&quot;System.Windows.Media.EdgeMode&quot;> </xref> 값입니다."
  syntax:
    content: protected System.Windows.Media.EdgeMode VisualEdgeMode { get; set; }
    return:
      type: System.Windows.Media.EdgeMode
      description: "<xref href=&quot;System.Windows.Media.EdgeMode&quot;> </xref> 시각적 개체의 값입니다."
  overload: System.Windows.Media.Visual.VisualEdgeMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualEffect
  id: VisualEffect
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualEffect
  nameWithType: Visual.VisualEffect
  fullName: System.Windows.Media.Visual.VisualEffect
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "에 적용할 비트맵 효과 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>합니다."
  syntax:
    content: protected System.Windows.Media.Effects.Effect VisualEffect { get; set; }
    return:
      type: System.Windows.Media.Effects.Effect
      description: "<xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref> 비트맵 효과 나타내는입니다."
  overload: System.Windows.Media.Visual.VisualEffect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualOffset
  id: VisualOffset
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualOffset
  nameWithType: Visual.VisualOffset
  fullName: System.Windows.Media.Visual.VisualOffset
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "시각적 개체의 오프셋된 값을 가져오거나 설정 합니다."
  syntax:
    content: protected System.Windows.Vector VisualOffset { get; set; }
    return:
      type: System.Windows.Vector
      description: "A <xref href=&quot;System.Windows.Vector&quot;> </xref> 오프셋된 값을 지정 하는 합니다."
  overload: System.Windows.Media.Visual.VisualOffset*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualOpacity
  id: VisualOpacity
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualOpacity
  nameWithType: Visual.VisualOpacity
  fullName: System.Windows.Media.Visual.VisualOpacity
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "불투명도 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>합니다."
  remarks: "불투명도 값은 <xref:System.Windows.Media.Visual>은 0과 1 사이의 값으로 표현 됩니다.</xref:System.Windows.Media.Visual> 값이 0 값이 1 이면 요소는 완전히 불투명 반면 요소가 완전히 투명 임을 나타냅니다. 값이 0.5 요소 50% 불투명 임을 나타냅니다. 0 보다 작은 값은 0으로 처리 됩니다. 1 보다 큰 값을 1로 처리 됩니다."
  syntax:
    content: protected double VisualOpacity { get; set; }
    return:
      type: System.Double
      description: "시각적 개체의 불투명도 값입니다."
  overload: System.Windows.Media.Visual.VisualOpacity*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualOpacityMask
  id: VisualOpacityMask
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualOpacityMask
  nameWithType: Visual.VisualOpacityMask
  fullName: System.Windows.Media.Visual.VisualOpacityMask
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "가져오거나는 <xref href=&quot;System.Windows.Media.Brush&quot;> </xref> 의 불투명 마스크를 나타내는 값은 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>합니다."
  remarks: "불투명 마스크는는 <xref:System.Windows.Media.Brush>이 시각적 개체의 렌더링 된 콘텐츠에 대 한 모든 알파 채널 마스킹에 적용 되는.</xref:System.Windows.Media.Brush>"
  syntax:
    content: protected System.Windows.Media.Brush VisualOpacityMask { get; set; }
    return:
      type: System.Windows.Media.Brush
      description: "A <xref href=&quot;System.Windows.Media.Brush&quot;> </xref> 시각적 개체의 불투명도 마스크 값을 나타내는입니다."
  overload: System.Windows.Media.Visual.VisualOpacityMask*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualParent
  id: VisualParent
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualParent
  nameWithType: Visual.VisualParent
  fullName: System.Windows.Media.Visual.VisualParent
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "시각적 개체의 시각적 트리 부모를 가져옵니다."
  syntax:
    content: protected System.Windows.DependencyObject VisualParent { get; }
    return:
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 부모입니다."
  overload: System.Windows.Media.Visual.VisualParent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualScrollableAreaClip
  id: VisualScrollableAreaClip
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualScrollableAreaClip
  nameWithType: Visual.VisualScrollableAreaClip
  fullName: System.Windows.Media.Visual.VisualScrollableAreaClip
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "에 대 한 잘린된 스크롤 가능한 영역을 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>합니다."
  remarks: "가속 스크롤 소프트웨어에서 렌더링할 때 사용할 수 있도록 VisualScrollableAreaClip 속성을 설정 합니다. 원격 데스크톱을 통해를 실행 하거나 가상 컴퓨터에서 실행 되는 원격 렌더링 시나리오에 유용 합니다. 자식 스크롤되는 부모 요소에이 속성을 설정 합니다. 다음과 같은 렌더링 되는 하드웨어 가속에 VisualScrollableAreaClip 속성을 설정 하면 효과가 없습니다.       VisualScrollableAreaClip 속성 특정 고급 시나리오를 활성화합니다. 다음 목록에서는 VisualScrollableAreaClip 속성을 사용할 때 적용 되는 주의 사항을 보여 줍니다.      -스크롤 영역의 배경을 불투명 이거나 합니다.      -VisualScrollableAreaClip 속성 WPF 소프트웨어에서 렌더링 되는 경우에 스크롤 가속화 됩니다. 예를 들어 응용 프로그램이 가상 컴퓨터에서 로컬로 실행 중이거나 원격 데스크톱을 통해 실행 중인 경우이 상황이 발생 합니다.      -하드웨어에서 렌더링할 때는 스크롤 동작을 변경 되지 않습니다. 스크롤 동작의 차이 방지 하려면 VisualScrollableAreaClip 속성을 하드웨어와 소프트웨어에 대 한 사용을 유지 해야 합니다.      -회전 및 기울이기 변환을 가속 스크롤 사용 하지 않도록 설정 합니다. 배율 변형 및 스크롤된 영역 위에 수평 또는 수직 번역 제대로 작동 하 고 스크롤 가속을 해제 하지 않습니다.      -하위 트리를 변경 하거나 애니메이션 통해 다시 그리기 위해 스크롤 가능한 영역의 일부를 트리거하면 예상 대로 동작 있지만 다시 그려야 영역에 대 한 가속 스크롤의 이점을 잃게. 같은 프레임 동안 스크롤된 영역을 무효화 하는 애니메이션은 스크롤이 최적화의 장점을 제거 발생 합니다.      -VisualScrollableAreaClip 사각형 픽셀 안쪽으로 맞춥니다. 따라서 스크롤 사각형의 기본 크기는 항상 설정한 크기 보다 작거나 합니다.      -오프셋을 아래로 맞춥니다. 즉, 이전의 차이 모눈 오프셋 현재 맞춰진된 오프셋은 항상 정수 픽셀 수 있습니다.      -적중된 테스트는 픽셀까지 여 해제할 수 있습니다.      -레이아웃 반올림를 설정 해야, 스크롤 가능한 영역 및 경계 창의 클라이언트 영역 가장자리 모눈 올바르게 정렬 픽셀 경계도 있기 때문에 있습니다.      스크롤 가속 계층된 창에서 작동 하지 않습니다. 즉, windows는 AllowTransparency에 = = true 이면 window.windowstyle = = none, 등에.      스크롤 가속 전체 창이 렌더링 하는 동안 발생 하지 않습니다.      -가속 스크롤 창의 두 모니터를 분명 하는 경우 작동 하지 않습니다.      스크롤 가속 있는 중간 렌더링 대상 스크롤 요소의 부모 체인에서 작동 하지 않습니다. 다음 목록에서는이 중 일부를 중간 렌더링 대상 보여 줍니다.          -자릅니다-효과-DrawingBrushes-VisualBrushes-OpacityMasks를-불투명도-프레임 마다 하나의 가속된 스크롤 발생할 수 있습니다. 여러 개 가속된 스크롤 영역에 있을 수 있지만 그 중 하나만 프레임 동안 가속된 스크롤을 수행할 수 있습니다. 어떤 영역으로 스크롤 되는 결정 되지 않습니다.      스크롤 가속 콘텐츠의 나머지 스크롤되지 않는 (z-순서) 대로 스크롤 영역 위에 콘텐츠를 지원 합니다. 시스템 필요한 모든 변경 영역을 계산 하 고 가속화 스크롤을 완료 하지만 화면에 올바른 위치로 이동 하 고 의도 하지 않게 스크롤된 부분 위해 네트워크를 통해 몇 가지 추가 비트맵 다시 보냅니다."
  syntax:
    content: protected Nullable<System.Windows.Rect> VisualScrollableAreaClip { get; set; }
    return:
      type: System.Nullable{System.Windows.Rect}
      description: "A <xref href=&quot;System.Windows.Rect&quot;> </xref> 스크롤 가능한 클립 영역을 나타내는 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 클리핑 영역은 없는 할당 된 경우."
  overload: System.Windows.Media.Visual.VisualScrollableAreaClip*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualTextHintingMode
  id: VisualTextHintingMode
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualTextHintingMode
  nameWithType: Visual.VisualTextHintingMode
  fullName: System.Windows.Media.Visual.VisualTextHintingMode
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "가져오거나는 <xref href=&quot;System.Windows.Media.TextHintingMode&quot;> </xref> 의 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>합니다."
  syntax:
    content: protected System.Windows.Media.TextHintingMode VisualTextHintingMode { get; set; }
    return:
      type: System.Windows.Media.TextHintingMode
      description: "The <xref href=&quot;System.Windows.Media.TextHintingMode&quot;></xref> applied to the <xref href=&quot;System.Windows.Media.Visual&quot;></xref>."
  overload: System.Windows.Media.Visual.VisualTextHintingMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualTextRenderingMode
  id: VisualTextRenderingMode
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualTextRenderingMode
  nameWithType: Visual.VisualTextRenderingMode
  fullName: System.Windows.Media.Visual.VisualTextRenderingMode
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "가져오거나는 <xref href=&quot;System.Windows.Media.TextRenderingMode&quot;> </xref> 의 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>합니다."
  syntax:
    content: protected System.Windows.Media.TextRenderingMode VisualTextRenderingMode { get; set; }
    return:
      type: System.Windows.Media.TextRenderingMode
      description: "The <xref href=&quot;System.Windows.Media.TextRenderingMode&quot;></xref> applied to the <xref href=&quot;System.Windows.Media.Visual&quot;></xref>."
  overload: System.Windows.Media.Visual.VisualTextRenderingMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualTransform
  id: VisualTransform
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualTransform
  nameWithType: Visual.VisualTransform
  fullName: System.Windows.Media.Visual.VisualTransform
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "가져오거나는 <xref href=&quot;System.Windows.Media.Transform&quot;> </xref> 에 대 한 값은 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>합니다."
  syntax:
    content: protected System.Windows.Media.Transform VisualTransform { get; set; }
    return:
      type: System.Windows.Media.Transform
      description: "시각적 개체의 변환 값입니다."
  overload: System.Windows.Media.Visual.VisualTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualXSnappingGuidelines
  id: VisualXSnappingGuidelines
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualXSnappingGuidelines
  nameWithType: Visual.VisualXSnappingGuidelines
  fullName: System.Windows.Media.Visual.VisualXSnappingGuidelines
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "X-좌표 (세로) 안내선 컬렉션을 가져오거나 설정 합니다."
  remarks: "픽셀 맞추기 개체 가장자리 장치 관련 픽셀에 렌더링 되도록 콘텐츠 레이아웃을 고정 하는 프로세스는 합니다. [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 그래픽 시스템에서는 장치 독립적 단위를 독립성 해상도 및 장치를 사용 합니다. 각 장치 독립적 픽셀 시스템의 자동으로 조정 [!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)] 설정 합니다. 이로써 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 응용 프로그램 적절 한 크기 조정에 대 한 다른 [!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)] 설정을 응용 프로그램으로 자동으로 만듭니다 [!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]-인식 합니다.       그러나이 [!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)] 독립성 앤티앨리어싱 인해 불규칙 한 가장자리 렌더링을 만들 수 있습니다. 흐린 또는 &quot;소프트&quot; 가장자리 표시 되는 이러한 아티팩트는 가장자리의 위치가 (장치 픽셀) 사이 있지 않고 장치 픽셀 중간에 있을 때 발생할 수 있습니다. 이 문제를 해결 하기 위해 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] &quot;맞춤선&quot; 장치 픽셀에 앤티앨리어싱에서 생성 된 부드러운 가장자리를 제거 하는 시각적 트리를 위해 방법을 제공 합니다."
  syntax:
    content: protected System.Windows.Media.DoubleCollection VisualXSnappingGuidelines { get; set; }
    return:
      type: System.Windows.Media.DoubleCollection
      description: "시각적 개체의 x 좌표 안내선 컬렉션입니다."
  overload: System.Windows.Media.Visual.VisualXSnappingGuidelines*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualYSnappingGuidelines
  id: VisualYSnappingGuidelines
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualYSnappingGuidelines
  nameWithType: Visual.VisualYSnappingGuidelines
  fullName: System.Windows.Media.Visual.VisualYSnappingGuidelines
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Y-좌표 (가로) 안내선 컬렉션을 가져오거나 설정 합니다."
  remarks: "픽셀 맞추기 개체 가장자리 장치 관련 픽셀에 렌더링 되도록 콘텐츠 레이아웃을 고정 하는 프로세스는 합니다. [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 그래픽 시스템에서는 장치 독립적 단위를 독립성 해상도 및 장치를 사용 합니다. 각 장치 독립적 픽셀 시스템의 자동으로 조정 [!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)] 설정 합니다. 이로써 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 응용 프로그램 적절 한 크기 조정에 대 한 다른 [!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)] 설정을 응용 프로그램으로 자동으로 만듭니다 [!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]-인식 합니다.       그러나이 [!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)] 독립성 앤티앨리어싱 인해 불규칙 한 가장자리 렌더링을 만들 수 있습니다. 흐린, 또는 &quot;소프트&quot; 가장자리 표시 되는 이러한 아티팩트는 가장자리의 위치가 (장치 픽셀) 사이 있지 않고 장치 픽셀 중간에 있을 때 발생할 수 있습니다. 이 문제를 해결 하기 위해 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] &quot;맞춤선&quot; 장치 픽셀에 앤티앨리어싱에서 생성 된 부드러운 가장자리를 제거 하는 시각적 트리를 위해 방법을 제공 합니다."
  syntax:
    content: protected System.Windows.Media.DoubleCollection VisualYSnappingGuidelines { get; set; }
    return:
      type: System.Windows.Media.DoubleCollection
      description: "시각적 개체의 y 좌표 지침 컬렉션입니다."
  overload: System.Windows.Media.Visual.VisualYSnappingGuidelines*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DependencyObject
  isExternal: false
  name: System.Windows.DependencyObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Media.Visual.#ctor
  parent: System.Windows.Media.Visual
  isExternal: false
  name: Visual()
  nameWithType: Visual.Visual()
  fullName: System.Windows.Media.Visual.Visual()
- uid: System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: AddVisualChild(Visual)
  nameWithType: Visual.AddVisualChild(Visual)
  fullName: System.Windows.Media.Visual.AddVisualChild(Visual)
- uid: System.Windows.Media.Visual
  parent: System.Windows.Media
  isExternal: false
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual
- uid: System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: FindCommonVisualAncestor(DependencyObject)
  nameWithType: Visual.FindCommonVisualAncestor(DependencyObject)
  fullName: System.Windows.Media.Visual.FindCommonVisualAncestor(DependencyObject)
- uid: System.Windows.Media.Visual.GetVisualChild(System.Int32)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: GetVisualChild(Int32)
  nameWithType: Visual.GetVisualChild(Int32)
  fullName: System.Windows.Media.Visual.GetVisualChild(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: HitTestCore(GeometryHitTestParameters)
  nameWithType: Visual.HitTestCore(GeometryHitTestParameters)
  fullName: System.Windows.Media.Visual.HitTestCore(GeometryHitTestParameters)
- uid: System.Windows.Media.GeometryHitTestResult
  parent: System.Windows.Media
  isExternal: false
  name: GeometryHitTestResult
  nameWithType: GeometryHitTestResult
  fullName: System.Windows.Media.GeometryHitTestResult
- uid: System.Windows.Media.GeometryHitTestParameters
  parent: System.Windows.Media
  isExternal: false
  name: GeometryHitTestParameters
  nameWithType: GeometryHitTestParameters
  fullName: System.Windows.Media.GeometryHitTestParameters
- uid: System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: HitTestCore(PointHitTestParameters)
  nameWithType: Visual.HitTestCore(PointHitTestParameters)
  fullName: System.Windows.Media.Visual.HitTestCore(PointHitTestParameters)
- uid: System.Windows.Media.HitTestResult
  parent: System.Windows.Media
  isExternal: false
  name: HitTestResult
  nameWithType: HitTestResult
  fullName: System.Windows.Media.HitTestResult
- uid: System.Windows.Media.PointHitTestParameters
  parent: System.Windows.Media
  isExternal: false
  name: PointHitTestParameters
  nameWithType: PointHitTestParameters
  fullName: System.Windows.Media.PointHitTestParameters
- uid: System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: IsAncestorOf(DependencyObject)
  nameWithType: Visual.IsAncestorOf(DependencyObject)
  fullName: System.Windows.Media.Visual.IsAncestorOf(DependencyObject)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: IsDescendantOf(DependencyObject)
  nameWithType: Visual.IsDescendantOf(DependencyObject)
  fullName: System.Windows.Media.Visual.IsDescendantOf(DependencyObject)
- uid: System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: OnDpiChanged(DpiScale,DpiScale)
  nameWithType: Visual.OnDpiChanged(DpiScale,DpiScale)
  fullName: System.Windows.Media.Visual.OnDpiChanged(DpiScale,DpiScale)
- uid: System.Windows.DpiScale
  parent: System.Windows
  isExternal: false
  name: DpiScale
  nameWithType: DpiScale
  fullName: System.Windows.DpiScale
- uid: System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: OnVisualChildrenChanged(DependencyObject,DependencyObject)
  nameWithType: Visual.OnVisualChildrenChanged(DependencyObject,DependencyObject)
  fullName: System.Windows.Media.Visual.OnVisualChildrenChanged(DependencyObject,DependencyObject)
- uid: System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: OnVisualParentChanged(DependencyObject)
  nameWithType: Visual.OnVisualParentChanged(DependencyObject)
  fullName: System.Windows.Media.Visual.OnVisualParentChanged(DependencyObject)
- uid: System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: PointFromScreen(Point)
  nameWithType: Visual.PointFromScreen(Point)
  fullName: System.Windows.Media.Visual.PointFromScreen(Point)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Media.Visual.PointToScreen(System.Windows.Point)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: PointToScreen(Point)
  nameWithType: Visual.PointToScreen(Point)
  fullName: System.Windows.Media.Visual.PointToScreen(Point)
- uid: System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: RemoveVisualChild(Visual)
  nameWithType: Visual.RemoveVisualChild(Visual)
  fullName: System.Windows.Media.Visual.RemoveVisualChild(Visual)
- uid: System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: TransformToAncestor(Visual3D)
  nameWithType: Visual.TransformToAncestor(Visual3D)
  fullName: System.Windows.Media.Visual.TransformToAncestor(Visual3D)
- uid: System.Windows.Media.Media3D.GeneralTransform2DTo3D
  parent: System.Windows.Media.Media3D
  isExternal: false
  name: GeneralTransform2DTo3D
  nameWithType: GeneralTransform2DTo3D
  fullName: System.Windows.Media.Media3D.GeneralTransform2DTo3D
- uid: System.Windows.Media.Media3D.Visual3D
  parent: System.Windows.Media.Media3D
  isExternal: false
  name: Visual3D
  nameWithType: Visual3D
  fullName: System.Windows.Media.Media3D.Visual3D
- uid: System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: TransformToAncestor(Visual)
  nameWithType: Visual.TransformToAncestor(Visual)
  fullName: System.Windows.Media.Visual.TransformToAncestor(Visual)
- uid: System.Windows.Media.GeneralTransform
  parent: System.Windows.Media
  isExternal: false
  name: GeneralTransform
  nameWithType: GeneralTransform
  fullName: System.Windows.Media.GeneralTransform
- uid: System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: TransformToDescendant(Visual)
  nameWithType: Visual.TransformToDescendant(Visual)
  fullName: System.Windows.Media.Visual.TransformToDescendant(Visual)
- uid: System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: TransformToVisual(Visual)
  nameWithType: Visual.TransformToVisual(Visual)
  fullName: System.Windows.Media.Visual.TransformToVisual(Visual)
- uid: System.Windows.Media.Visual.VisualBitmapEffect
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualBitmapEffect
  nameWithType: Visual.VisualBitmapEffect
  fullName: System.Windows.Media.Visual.VisualBitmapEffect
- uid: System.Windows.Media.Effects.BitmapEffect
  parent: System.Windows.Media.Effects
  isExternal: false
  name: BitmapEffect
  nameWithType: BitmapEffect
  fullName: System.Windows.Media.Effects.BitmapEffect
- uid: System.Windows.Media.Visual.VisualBitmapEffectInput
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualBitmapEffectInput
  nameWithType: Visual.VisualBitmapEffectInput
  fullName: System.Windows.Media.Visual.VisualBitmapEffectInput
- uid: System.Windows.Media.Effects.BitmapEffectInput
  parent: System.Windows.Media.Effects
  isExternal: false
  name: BitmapEffectInput
  nameWithType: BitmapEffectInput
  fullName: System.Windows.Media.Effects.BitmapEffectInput
- uid: System.Windows.Media.Visual.VisualBitmapScalingMode
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualBitmapScalingMode
  nameWithType: Visual.VisualBitmapScalingMode
  fullName: System.Windows.Media.Visual.VisualBitmapScalingMode
- uid: System.Windows.Media.BitmapScalingMode
  parent: System.Windows.Media
  isExternal: false
  name: BitmapScalingMode
  nameWithType: BitmapScalingMode
  fullName: System.Windows.Media.BitmapScalingMode
- uid: System.Windows.Media.Visual.VisualCacheMode
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualCacheMode
  nameWithType: Visual.VisualCacheMode
  fullName: System.Windows.Media.Visual.VisualCacheMode
- uid: System.Windows.Media.CacheMode
  parent: System.Windows.Media
  isExternal: false
  name: CacheMode
  nameWithType: CacheMode
  fullName: System.Windows.Media.CacheMode
- uid: System.Windows.Media.Visual.VisualChildrenCount
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualChildrenCount
  nameWithType: Visual.VisualChildrenCount
  fullName: System.Windows.Media.Visual.VisualChildrenCount
- uid: System.Windows.Media.Visual.VisualClearTypeHint
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualClearTypeHint
  nameWithType: Visual.VisualClearTypeHint
  fullName: System.Windows.Media.Visual.VisualClearTypeHint
- uid: System.Windows.Media.ClearTypeHint
  parent: System.Windows.Media
  isExternal: false
  name: ClearTypeHint
  nameWithType: ClearTypeHint
  fullName: System.Windows.Media.ClearTypeHint
- uid: System.Windows.Media.Visual.VisualClip
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualClip
  nameWithType: Visual.VisualClip
  fullName: System.Windows.Media.Visual.VisualClip
- uid: System.Windows.Media.Geometry
  parent: System.Windows.Media
  isExternal: false
  name: Geometry
  nameWithType: Geometry
  fullName: System.Windows.Media.Geometry
- uid: System.Windows.Media.Visual.VisualEdgeMode
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualEdgeMode
  nameWithType: Visual.VisualEdgeMode
  fullName: System.Windows.Media.Visual.VisualEdgeMode
- uid: System.Windows.Media.EdgeMode
  parent: System.Windows.Media
  isExternal: false
  name: EdgeMode
  nameWithType: EdgeMode
  fullName: System.Windows.Media.EdgeMode
- uid: System.Windows.Media.Visual.VisualEffect
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualEffect
  nameWithType: Visual.VisualEffect
  fullName: System.Windows.Media.Visual.VisualEffect
- uid: System.Windows.Media.Effects.Effect
  parent: System.Windows.Media.Effects
  isExternal: false
  name: Effect
  nameWithType: Effect
  fullName: System.Windows.Media.Effects.Effect
- uid: System.Windows.Media.Visual.VisualOffset
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualOffset
  nameWithType: Visual.VisualOffset
  fullName: System.Windows.Media.Visual.VisualOffset
- uid: System.Windows.Vector
  parent: System.Windows
  isExternal: false
  name: Vector
  nameWithType: Vector
  fullName: System.Windows.Vector
- uid: System.Windows.Media.Visual.VisualOpacity
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualOpacity
  nameWithType: Visual.VisualOpacity
  fullName: System.Windows.Media.Visual.VisualOpacity
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Visual.VisualOpacityMask
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualOpacityMask
  nameWithType: Visual.VisualOpacityMask
  fullName: System.Windows.Media.Visual.VisualOpacityMask
- uid: System.Windows.Media.Brush
  parent: System.Windows.Media
  isExternal: false
  name: Brush
  nameWithType: Brush
  fullName: System.Windows.Media.Brush
- uid: System.Windows.Media.Visual.VisualParent
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualParent
  nameWithType: Visual.VisualParent
  fullName: System.Windows.Media.Visual.VisualParent
- uid: System.Windows.Media.Visual.VisualScrollableAreaClip
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualScrollableAreaClip
  nameWithType: Visual.VisualScrollableAreaClip
  fullName: System.Windows.Media.Visual.VisualScrollableAreaClip
- uid: System.Nullable{System.Windows.Rect}
  parent: System
  isExternal: true
  name: Nullable<Rect>
  nameWithType: Nullable<Rect>
  fullName: System.Nullable<System.Windows.Rect>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Windows.Rect>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Rect
    name: Rect
    nameWithType: Rect
    fullName: Rect
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.Visual.VisualTextHintingMode
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualTextHintingMode
  nameWithType: Visual.VisualTextHintingMode
  fullName: System.Windows.Media.Visual.VisualTextHintingMode
- uid: System.Windows.Media.TextHintingMode
  parent: System.Windows.Media
  isExternal: false
  name: TextHintingMode
  nameWithType: TextHintingMode
  fullName: System.Windows.Media.TextHintingMode
- uid: System.Windows.Media.Visual.VisualTextRenderingMode
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualTextRenderingMode
  nameWithType: Visual.VisualTextRenderingMode
  fullName: System.Windows.Media.Visual.VisualTextRenderingMode
- uid: System.Windows.Media.TextRenderingMode
  parent: System.Windows.Media
  isExternal: false
  name: TextRenderingMode
  nameWithType: TextRenderingMode
  fullName: System.Windows.Media.TextRenderingMode
- uid: System.Windows.Media.Visual.VisualTransform
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualTransform
  nameWithType: Visual.VisualTransform
  fullName: System.Windows.Media.Visual.VisualTransform
- uid: System.Windows.Media.Transform
  parent: System.Windows.Media
  isExternal: false
  name: Transform
  nameWithType: Transform
  fullName: System.Windows.Media.Transform
- uid: System.Windows.Media.Visual.VisualXSnappingGuidelines
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualXSnappingGuidelines
  nameWithType: Visual.VisualXSnappingGuidelines
  fullName: System.Windows.Media.Visual.VisualXSnappingGuidelines
- uid: System.Windows.Media.DoubleCollection
  parent: System.Windows.Media
  isExternal: false
  name: DoubleCollection
  nameWithType: DoubleCollection
  fullName: System.Windows.Media.DoubleCollection
- uid: System.Windows.Media.Visual.VisualYSnappingGuidelines
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualYSnappingGuidelines
  nameWithType: Visual.VisualYSnappingGuidelines
  fullName: System.Windows.Media.Visual.VisualYSnappingGuidelines
- uid: System.Windows.Media.Visual.#ctor*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: Visual
  nameWithType: Visual.Visual
- uid: System.Windows.Media.Visual.AddVisualChild*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: AddVisualChild
  nameWithType: Visual.AddVisualChild
- uid: System.Windows.Media.Visual.FindCommonVisualAncestor*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: FindCommonVisualAncestor
  nameWithType: Visual.FindCommonVisualAncestor
- uid: System.Windows.Media.Visual.GetVisualChild*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: GetVisualChild
  nameWithType: Visual.GetVisualChild
- uid: System.Windows.Media.Visual.HitTestCore*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: HitTestCore
  nameWithType: Visual.HitTestCore
- uid: System.Windows.Media.Visual.IsAncestorOf*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: IsAncestorOf
  nameWithType: Visual.IsAncestorOf
- uid: System.Windows.Media.Visual.IsDescendantOf*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: IsDescendantOf
  nameWithType: Visual.IsDescendantOf
- uid: System.Windows.Media.Visual.OnDpiChanged*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: OnDpiChanged
  nameWithType: Visual.OnDpiChanged
- uid: System.Windows.Media.Visual.OnVisualChildrenChanged*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: OnVisualChildrenChanged
  nameWithType: Visual.OnVisualChildrenChanged
- uid: System.Windows.Media.Visual.OnVisualParentChanged*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: OnVisualParentChanged
  nameWithType: Visual.OnVisualParentChanged
- uid: System.Windows.Media.Visual.PointFromScreen*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: PointFromScreen
  nameWithType: Visual.PointFromScreen
- uid: System.Windows.Media.Visual.PointToScreen*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: PointToScreen
  nameWithType: Visual.PointToScreen
- uid: System.Windows.Media.Visual.RemoveVisualChild*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: RemoveVisualChild
  nameWithType: Visual.RemoveVisualChild
- uid: System.Windows.Media.Visual.TransformToAncestor*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: TransformToAncestor
  nameWithType: Visual.TransformToAncestor
- uid: System.Windows.Media.Visual.TransformToDescendant*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: TransformToDescendant
  nameWithType: Visual.TransformToDescendant
- uid: System.Windows.Media.Visual.TransformToVisual*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: TransformToVisual
  nameWithType: Visual.TransformToVisual
- uid: System.Windows.Media.Visual.VisualBitmapEffect*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualBitmapEffect
  nameWithType: Visual.VisualBitmapEffect
- uid: System.Windows.Media.Visual.VisualBitmapEffectInput*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualBitmapEffectInput
  nameWithType: Visual.VisualBitmapEffectInput
- uid: System.Windows.Media.Visual.VisualBitmapScalingMode*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualBitmapScalingMode
  nameWithType: Visual.VisualBitmapScalingMode
- uid: System.Windows.Media.Visual.VisualCacheMode*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualCacheMode
  nameWithType: Visual.VisualCacheMode
- uid: System.Windows.Media.Visual.VisualChildrenCount*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualChildrenCount
  nameWithType: Visual.VisualChildrenCount
- uid: System.Windows.Media.Visual.VisualClearTypeHint*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualClearTypeHint
  nameWithType: Visual.VisualClearTypeHint
- uid: System.Windows.Media.Visual.VisualClip*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualClip
  nameWithType: Visual.VisualClip
- uid: System.Windows.Media.Visual.VisualEdgeMode*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualEdgeMode
  nameWithType: Visual.VisualEdgeMode
- uid: System.Windows.Media.Visual.VisualEffect*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualEffect
  nameWithType: Visual.VisualEffect
- uid: System.Windows.Media.Visual.VisualOffset*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualOffset
  nameWithType: Visual.VisualOffset
- uid: System.Windows.Media.Visual.VisualOpacity*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualOpacity
  nameWithType: Visual.VisualOpacity
- uid: System.Windows.Media.Visual.VisualOpacityMask*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualOpacityMask
  nameWithType: Visual.VisualOpacityMask
- uid: System.Windows.Media.Visual.VisualParent*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualParent
  nameWithType: Visual.VisualParent
- uid: System.Windows.Media.Visual.VisualScrollableAreaClip*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualScrollableAreaClip
  nameWithType: Visual.VisualScrollableAreaClip
- uid: System.Windows.Media.Visual.VisualTextHintingMode*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualTextHintingMode
  nameWithType: Visual.VisualTextHintingMode
- uid: System.Windows.Media.Visual.VisualTextRenderingMode*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualTextRenderingMode
  nameWithType: Visual.VisualTextRenderingMode
- uid: System.Windows.Media.Visual.VisualTransform*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualTransform
  nameWithType: Visual.VisualTransform
- uid: System.Windows.Media.Visual.VisualXSnappingGuidelines*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualXSnappingGuidelines
  nameWithType: Visual.VisualXSnappingGuidelines
- uid: System.Windows.Media.Visual.VisualYSnappingGuidelines*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualYSnappingGuidelines
  nameWithType: Visual.VisualYSnappingGuidelines
