### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.Clock
  id: Clock
  children:
  - System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)
  - System.Windows.Media.Animation.Clock.Completed
  - System.Windows.Media.Animation.Clock.Controller
  - System.Windows.Media.Animation.Clock.CurrentGlobalSpeed
  - System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated
  - System.Windows.Media.Animation.Clock.CurrentGlobalTime
  - System.Windows.Media.Animation.Clock.CurrentIteration
  - System.Windows.Media.Animation.Clock.CurrentProgress
  - System.Windows.Media.Animation.Clock.CurrentState
  - System.Windows.Media.Animation.Clock.CurrentStateInvalidated
  - System.Windows.Media.Animation.Clock.CurrentTime
  - System.Windows.Media.Animation.Clock.CurrentTimeInvalidated
  - System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement
  - System.Windows.Media.Animation.Clock.GetCanSlip
  - System.Windows.Media.Animation.Clock.GetCurrentTimeCore
  - System.Windows.Media.Animation.Clock.HasControllableRoot
  - System.Windows.Media.Animation.Clock.IsPaused
  - System.Windows.Media.Animation.Clock.NaturalDuration
  - System.Windows.Media.Animation.Clock.Parent
  - System.Windows.Media.Animation.Clock.RemoveRequested
  - System.Windows.Media.Animation.Clock.SpeedChanged
  - System.Windows.Media.Animation.Clock.Stopped
  - System.Windows.Media.Animation.Clock.Timeline
  langs:
  - csharp
  name: Clock
  nameWithType: Clock
  fullName: System.Windows.Media.Animation.Clock
  type: Class
  summary: "런타임 타이밍 상태를 유지 관리는 <xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>합니다."
  remarks: "A <xref:System.Windows.Media.Animation.Timeline>, 자체적으로 실제로 아무런 작업도 하지 않습니다 아닌 다른 시간 세그먼트에 설명 합니다.</xref:System.Windows.Media.Animation.Timeline> 실제 작업을 수행 하는 타임 라인의 클록 개체가: 시간 표시 막대에 대 한 타이밍 관련 런타임 상태를 유지 관리 합니다.       대부분의 경우 클록 일정에 대 한 자동으로 생성 됩니다. 사용 하 여 애니메이션 효과 줄 경우는 <xref:System.Windows.Media.Animation.Storyboard>또는 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>메서드, 클록 자동으로 타임 라인 및 애니메이션에 대해 생성 되어 해당 대상된 속성에 적용 된.</xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> </xref:System.Windows.Media.Animation.Storyboard> 예제를 보려면 [하는 방법: 스토리 보드를 사용 하 여 속성에 애니메이션 효과](~/add/includes/ajax-current-ext-md.md) 및 [하는 방법: 속성 하지 않고 사용 하는 스토리 보드 애니메이션 효과 줄](~/add/includes/ajax-current-ext-md.md)합니다.       사용 하 여 클록을 명시적으로 만들 수도 있습니다는 <xref:System.Windows.Media.Animation.Timeline.CreateClock%2A>메서드.</xref:System.Windows.Media.Animation.Timeline.CreateClock%2A> 많은 수의 유사한 개체에 애니메이션을 적용 하는 등의 성능이 시나리오에서 사용자 고유의 클록 사용 관리 성능상의 이점을 제공할 수 있습니다.       클록의 구조와 일치 하는 트리로 정렬 되는 <xref:System.Windows.Media.Animation.Timeline>에서 생성 된 개체 트리.</xref:System.Windows.Media.Animation.Timeline> 이러한 시간 트리의 루트 클록 대화형으로 조작할 수 (일시 중지, 재개 된, 중지, 및 등)의 <xref:System.Windows.Media.Animation.Clock.Controller%2A>.</xref:System.Windows.Media.Animation.Clock.Controller%2A> 를 검색 하 여 루트가 아닌 클록을 직접 제어할 수 없습니다.       일단 만든 클록을 수정할 수 없습니다 (그러나 조작할 수 있습니다).      ## 연결 된 이벤트 처리기가 하는 경우에 타이머는 타임 라인의 클록 진행 되는 대로 타임 라인을 사용 하 여 또는 (의 경우에 <xref:System.Windows.Media.Animation.AnimationClock>개체) 속성에 연결 됩니다.</xref:System.Windows.Media.Animation.AnimationClock> 이 따라서 (및 다른 사용자)는 것을 사용 하는 한 <xref:System.Windows.Media.Animation.Timeline>를 타이머.</xref:System.Windows.Media.Animation.Timeline>"
  syntax:
    content: 'public class Clock : System.Windows.Threading.DispatcherObject'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)
  id: '#ctor(System.Windows.Media.Animation.Timeline)'
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: Clock(Timeline)
  nameWithType: Clock.Clock(Timeline)
  fullName: System.Windows.Media.Animation.Clock.Clock(Timeline)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref> 클래스를 사용 하 여 지정 된 <xref:System.Windows.Media.Animation.Clock.Timeline*>템플릿으로.</xref:System.Windows.Media.Animation.Clock.Timeline*> 새 <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref> 개체에 따르면 자식이 없습니다."
  syntax:
    content: protected Clock (System.Windows.Media.Animation.Timeline timeline);
    parameters:
    - id: timeline
      type: System.Windows.Media.Animation.Timeline
      description: "<> </> *>에서이 시계를 생성 합니다. 모든 자식에 대 한 clock은 만들어지지 않습니다 <> </> *> 개체, 존재 합니다."
  overload: System.Windows.Media.Animation.Clock.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.Completed
  id: Completed
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: Completed
  nameWithType: Clock.Completed
  fullName: System.Windows.Media.Animation.Clock.Completed
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "이 클록이 완전히 재생이 끝나면 때 발생 합니다."
  remarks: "이 클록이 클록 트리 루트 클록 이면 (반복을 포함) 해당 활성 기간의 끝에 도달 하 고 모든 자식 활성 기간의 끝에 도달한 후 재생이 완료 되었습니다. 이 클록이 자식 클록 이면 량에 도달 속해 있는 클록 트리 루트 클록의 활성 기간 및 모든 해당 자식 clock의 끝이 완료 되 면 재생 재생를 완전히 완료으로 간주 됩니다.       클록 중지 트리거하지 해당 완료 이벤트를 지원 하지만 채우기 기간에 도달지 않습니다."
  syntax:
    content: public event EventHandler Completed;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.Controller
  id: Controller
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: Controller
  nameWithType: Clock.Controller
  fullName: System.Windows.Media.Animation.Clock.Controller
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "가져옵니다는 <xref href=&quot;System.Windows.Media.Animation.ClockController&quot;> </xref> 시작, 일시 중지, 다시 시작, 검색, 건너뛰기, 중지, 또는이 줄을 제거를 사용할 수 있는 <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref>합니다."
  remarks: "루트 클록만을 대화형으로 제어할 수 있습니다."
  syntax:
    content: public System.Windows.Media.Animation.ClockController Controller { get; }
    return:
      type: System.Windows.Media.Animation.ClockController
      description: "A <xref href=&quot;System.Windows.Media.Animation.ClockController&quot;> </xref> 이것이 루트 클록; 그렇지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.Animation.Clock.Controller*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed
  id: CurrentGlobalSpeed
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentGlobalSpeed
  nameWithType: Clock.CurrentGlobalSpeed
  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "실제 시간과 비교 하는 클록의 시간이 현재 진행 되는 속도를 가져옵니다."
  syntax:
    content: public Nullable<double> CurrentGlobalSpeed { get; }
    return:
      type: System.Nullable{System.Double}
      description: "속도는이 클록의이 시간이 현재 진행 되 실제 시간과 비교 합니다. 이 속성을 반환 하는 경우는 클록이 중지 되 면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated
  id: CurrentGlobalSpeedInvalidated
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentGlobalSpeedInvalidated
  nameWithType: Clock.CurrentGlobalSpeedInvalidated
  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "클록의 속도가 업데이트 될 때 발생 합니다."
  remarks: "일시 중지, 재개, 반전, 가속, 감속, 검색, 중지, 또는 클록 변경의 대화형 속도 사용 하는 <xref:System.Windows.Media.Animation.ClockController>이 이벤트를 트리거합니다.</xref:System.Windows.Media.Animation.ClockController>       이 이벤트 발생 하지만 때는 <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>속성 없게 되 면 속성 변경 반드시 의미입니다.</xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>"
  syntax:
    content: public event EventHandler CurrentGlobalSpeedInvalidated;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalTime
  id: CurrentGlobalTime
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentGlobalTime
  nameWithType: Clock.CurrentGlobalTime
  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalTime
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "설정 된 대로 현재 글로벌 시간과 가져옵니다는 [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] 타이밍 시스템입니다."
  syntax:
    content: protected TimeSpan CurrentGlobalTime { get; }
    return:
      type: System.TimeSpan
      description: "에 대 한 현재 글로벌 시간과 [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] 타이밍 시스템입니다."
  overload: System.Windows.Media.Animation.Clock.CurrentGlobalTime*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentIteration
  id: CurrentIteration
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentIteration
  nameWithType: Clock.CurrentIteration
  fullName: System.Windows.Media.Animation.Clock.CurrentIteration
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "이 클록의 현재 반복을 가져옵니다."
  remarks: "클록의 첫 번째 반복의 값은 1입니다.       이 클록의 시간 표시이 막대에는 <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>설정인 `true`, 전체 반복 반대의 정방향 쌍으로 구성 되며, 이러한 세그먼트 중 하나가 아니라.</xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>       현재 반복에 관계 없이 검색 클록 1로 현재 반복을 반환 합니다. 현재 반복이 1로 반환도 시계를 다시 실행 합니다."
  syntax:
    content: public Nullable<int> CurrentIteration { get; }
    return:
      type: System.Nullable{System.Int32}
      description: "현재 활성 기간 내에서이 클록의 현재 반복 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이 클록이 중지 된 경우."
  overload: System.Windows.Media.Animation.Clock.CurrentIteration*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentProgress
  id: CurrentProgress
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentProgress
  nameWithType: Clock.CurrentProgress
  fullName: System.Windows.Media.Animation.Clock.CurrentProgress
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "이 현재 진행률을 가져옵니다 <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref> 현재 반복 내에서."
  remarks: "이 속성의 값은 <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A>여는 <xref:System.Windows.Media.Animation.Timeline.Duration%2A>이 클록의 <xref:System.Windows.Media.Animation.Clock.Timeline%2A>.</xref:System.Windows.Media.Animation.Clock.Timeline%2A> 의</xref:System.Windows.Media.Animation.Timeline.Duration%2A> 정규화 된</xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> 나타냅니다.       클록 <xref:System.Windows.Media.Animation.ClockState>1.0 CurrentProgress 했습니다.</xref:System.Windows.Media.Animation.ClockState>      ## 연결 된 이벤트 처리기는 때에 타이머는 타임 라인의 클록 진행 되는 대로 타임 라인을 사용 하 여 또는 (의 경우에 <xref:System.Windows.Media.Animation.AnimationClock>개체) 속성에 연결 됩니다.</xref:System.Windows.Media.Animation.AnimationClock> 이 따라서 (및 다른 사용자)는 것을 사용 하는 한 <xref:System.Windows.Media.Animation.Timeline>를 타이머.</xref:System.Windows.Media.Animation.Timeline>"
  syntax:
    content: public Nullable<double> CurrentProgress { get; }
    return:
      type: System.Nullable{System.Double}
      description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>이 클록이 <xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>, 또는 0.0이 클록이 실행 중인 경우 및 해당 <> </> *>에 <> </> *>의 <xref:System.Windows.Duration.Forever*>, 그렇지 않으면 0.0과 1.0 현재 반복 내에서이 클록의 현재 진행률을 나타내는 사이의 값입니다.</xref:System.Windows.Duration.Forever*> 값이 0.0 진행 상황이 없는 나타내고 값이 1.0 클록이 현재 반복의 끝에 있는지를 나타냅니다."
  overload: System.Windows.Media.Animation.Clock.CurrentProgress*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentState
  id: CurrentState
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentState
  nameWithType: Clock.CurrentState
  fullName: System.Windows.Media.Animation.Clock.CurrentState
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "클록이 현재 있는지 여부를 나타내는 값을 가져옵니다 <xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>, <xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>, 또는 <xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>합니다."
  remarks: "클록의 CurrentState 속성이 알 수 없는 일시 여부 note 합니다. 클록 일시 중지 되어 있는지 여부를 확인 하려면는 <xref:System.Windows.Media.Animation.Clock.IsPaused%2A>속성.</xref:System.Windows.Media.Animation.Clock.IsPaused%2A>       <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated>이 속성의 값이 변경 될 때마다 발생 합니다.</xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated>"
  syntax:
    content: public System.Windows.Media.Animation.ClockState CurrentState { get; }
    return:
      type: System.Windows.Media.Animation.ClockState
      description: '클록의 현재 상태: <xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>, <xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>, 또는 <xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>합니다.'
  overload: System.Windows.Media.Animation.Clock.CurrentState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentStateInvalidated
  id: CurrentStateInvalidated
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentStateInvalidated
  nameWithType: Clock.CurrentStateInvalidated
  fullName: System.Windows.Media.Animation.Clock.CurrentStateInvalidated
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "발생 경우 클록의 <xref:System.Windows.Media.Animation.Clock.CurrentState*>속성이 업데이트 됩니다.</xref:System.Windows.Media.Animation.Clock.CurrentState*>"
  remarks: "사용 하 여는 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>클록이 시작 되 면 알림이 표시 하려면 이벤트 중지 하거나, 채워질.</xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> <xref:System.Object>의 매개 변수는 <xref:System.EventHandler>이벤트 처리기는 <xref:System.Windows.Media.Animation.Clock>상태가 무효화 되었습니다.</xref:System.Windows.Media.Animation.Clock> </xref:System.EventHandler> </xref:System.Object>       <xref:System.Windows.Media.Animation.Clock>해당 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A>.</xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 바뀌지 않으면</xref:System.Windows.Media.Animation.Clock> 일시 중지 클록이 일시 중지 하는 경우 알림을 받을 수를 사용 하 여는 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>이벤트.</xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>       이 이벤트 발생 하지만 때는 <xref:System.Windows.Media.Animation.ClockState>없게 되 면 반드시 의미 하는 <xref:System.Windows.Media.Animation.ClockState>변경:는 <xref:System.Windows.Media.Animation.Clock>에서 전환 되는 <xref:System.Windows.Media.Animation.ClockState>를 <xref:System.Windows.Media.Animation.ClockState>다시 <xref:System.Windows.Media.Animation.ClockState>같은 눈금에는이 이벤트를 발생 시킨 수행 되지 것입니다 했지만 해당 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A>속성 실제로 변경 되지 않습니다.</xref:System.Windows.Media.Animation.Clock.CurrentState%2A> </xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.Clock> </xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.ClockState>"
  syntax:
    content: public event EventHandler CurrentStateInvalidated;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentTime
  id: CurrentTime
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentTime
  nameWithType: Clock.CurrentTime
  fullName: System.Windows.Media.Animation.Clock.CurrentTime
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "가져옵니다이 클록의 현재 현재 반복 내에서 시간입니다."
  remarks: "## 연결 된 이벤트 처리기는 때에 타이머는 타임 라인의 클록 진행 되는 대로 타임 라인을 사용 하 여 또는 (의 경우에 <xref:System.Windows.Media.Animation.AnimationClock>개체) 속성에 연결 됩니다.</xref:System.Windows.Media.Animation.AnimationClock> 이 따라서 (및 다른 사용자)는 것을 사용 하는 한 <xref:System.Windows.Media.Animation.Timeline>를 타이머.</xref:System.Windows.Media.Animation.Timeline>"
  syntax:
    content: public Nullable<TimeSpan> CurrentTime { get; }
    return:
      type: System.Nullable{System.TimeSpan}
      description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>이 클록이 <xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>, 그렇지 않으면이 클록의 현재 시간입니다."
  overload: System.Windows.Media.Animation.Clock.CurrentTime*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentTimeInvalidated
  id: CurrentTimeInvalidated
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentTimeInvalidated
  nameWithType: Clock.CurrentTimeInvalidated
  fullName: System.Windows.Media.Animation.Clock.CurrentTimeInvalidated
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "발생 경우이 클록의 <xref:System.Windows.Media.Animation.Clock.CurrentTime*>무효화 됩니다.</xref:System.Windows.Media.Animation.Clock.CurrentTime*>"
  remarks: 'A clock''s <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> becomes invalid when the clock progresses. The following interactive operations also trigger the CurrentTimeInvalidated event: <xref:System.Windows.Media.Animation.ClockController.Begin%2A>, <xref:System.Windows.Media.Animation.ClockController.SkipToFill%2A>, <xref:System.Windows.Media.Animation.ClockController.Seek%2A>, <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>, and <xref:System.Windows.Media.Animation.ClockController.Stop%2A>.'
  syntax:
    content: public event EventHandler CurrentTimeInvalidated;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement
  id: DiscontinuousTimeMovement
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: DiscontinuousTimeMovement()
  nameWithType: Clock.DiscontinuousTimeMovement()
  fullName: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "파생된 클래스에서 구현 된 경우 클록 반복를 입력 하지 또는 검색 (seek) 될 때마다 호출 됩니다."
  syntax:
    content: protected virtual void DiscontinuousTimeMovement ();
    parameters: []
  overload: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.GetCanSlip
  id: GetCanSlip
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: GetCanSlip()
  nameWithType: Clock.GetCanSlip()
  fullName: System.Windows.Media.Animation.Clock.GetCanSlip()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "반환 여부는 <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref> 에 고유한 외부 시간 원본과, 타이밍 시스템와 동기화 해야 할 수도 있습니다."
  remarks: "미디어를 <xref:System.Windows.Media.MediaTimeline> <xref:System.Windows.Media.Animation.Storyboard> <xref:System.Windows.Media.Animation.Clock>다른 타임 라인과 <xref:System.Windows.Media.Animation.Storyboard>.</xref:System.Windows.Media.Animation.Storyboard> 내에서 동기화 할 수 있습니다 (예: 비디오 클립) 외부 시간 원본이 있는</xref:System.Windows.Media.Animation.Clock> 만드는 예는</xref:System.Windows.Media.Animation.Storyboard> 내에서</xref:System.Windows.Media.MediaTimeline> 사용 하 여 재생 되 고 참조 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>자세한 내용은.</xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>"
  syntax:
    content: protected virtual bool GetCanSlip ();
    parameters: []
    return:
      type: System.Boolean
      description: "반환 **true** 경우는 <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref> 타이밍 시스템과 동기화 필요할 수 있는 시간에 대 한 외부 소스에 이렇게 하지 않으면 **false**합니다."
  overload: System.Windows.Media.Animation.Clock.GetCanSlip*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.GetCurrentTimeCore
  id: GetCurrentTimeCore
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: GetCurrentTimeCore()
  nameWithType: Clock.GetCurrentTimeCore()
  fullName: System.Windows.Media.Animation.Clock.GetCurrentTimeCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "가져옵니다이 클록의 현재 현재 반복 내에서 시간입니다."
  remarks: "이 메서드는의 구현에 사용 된 <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A>메서드 이며 사용자 코드에서 직접 호출할 수 없습니다.</xref:System.Windows.Media.Animation.Clock.CurrentTime%2A>"
  syntax:
    content: protected virtual TimeSpan GetCurrentTimeCore ();
    parameters: []
    return:
      type: System.TimeSpan
      description: "활성 또는 채우기; 상태 이면이 클록의 현재 시간 그렇지 않으면 <xref:System.TimeSpan>.</xref:System.TimeSpan>"
  overload: System.Windows.Media.Animation.Clock.GetCurrentTimeCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.HasControllableRoot
  id: HasControllableRoot
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: HasControllableRoot
  nameWithType: Clock.HasControllableRoot
  fullName: System.Windows.Media.Animation.Clock.HasControllableRoot
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "나타내는 값을 가져옵니다 여부이 <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref> 제어할 수 있는 시계 트리의 일부입니다."
  syntax:
    content: public bool HasControllableRoot { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>제어할 수 있는 루트 클록이 클록 클록 트리 속해 있거나이 클록 자체가 경우 제어할 수 있는 루트입니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.Animation.Clock.HasControllableRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.IsPaused
  id: IsPaused
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: IsPaused
  nameWithType: Clock.IsPaused
  fullName: System.Windows.Media.Animation.Clock.IsPaused
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "나타내는 값을 가져옵니다 여부를이 <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref>, 또는 부모, 일시 중지 됩니다."
  syntax:
    content: public bool IsPaused { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 경우 <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref> 부모 일시 중지 된, 되지 않았으면 또는 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.Animation.Clock.IsPaused*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.NaturalDuration
  id: NaturalDuration
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: NaturalDuration
  nameWithType: Clock.NaturalDuration
  fullName: System.Windows.Media.Animation.Clock.NaturalDuration
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "이 클록의 <xref:System.Windows.Media.Animation.Clock.Timeline*>.</xref:System.Windows.Media.Animation.Clock.Timeline*> 의 자연 지속 시간이 가져옵니다."
  remarks: "기본 재생 시간에 대 한 자세한 내용은 참조는 <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A?displayProperty=fullName>메서드.</xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Duration NaturalDuration { get; }
    return:
      type: System.Windows.Duration
      description: "해당 <xref:System.Windows.Media.Animation.Clock.Timeline*>.</xref:System.Windows.Media.Animation.Clock.Timeline*> 기준으로이 클록의 자연 지속 시간이"
  overload: System.Windows.Media.Animation.Clock.NaturalDuration*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.Parent
  id: Parent
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: Parent
  nameWithType: Clock.Parent
  fullName: System.Windows.Media.Animation.Clock.Parent
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "클록을이 클록의 부모를 가져옵니다."
  syntax:
    content: public System.Windows.Media.Animation.Clock Parent { get; }
    return:
      type: System.Windows.Media.Animation.Clock
      description: "이 클록의 부모 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이 클록이 루트 경우."
  overload: System.Windows.Media.Animation.Clock.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.RemoveRequested
  id: RemoveRequested
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: RemoveRequested
  nameWithType: Clock.RemoveRequested
  fullName: System.Windows.Media.Animation.Clock.RemoveRequested
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "발생 경우는 <xref:System.Windows.Media.Animation.ClockController.Remove*>이 메서드는 <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref> 또는 부모 clock 중 하나입니다.</xref:System.Windows.Media.Animation.ClockController.Remove*>"
  syntax:
    content: public event EventHandler RemoveRequested;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.SpeedChanged
  id: SpeedChanged
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: SpeedChanged()
  nameWithType: Clock.SpeedChanged()
  fullName: System.Windows.Media.Animation.Clock.SpeedChanged()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "파생된 클래스에서 구현 되는 클록 될 때마다 호출 될 경우 시작, 건너뜁니다, 일시 중지, 재개 또는 때 클록의 <xref:System.Windows.Media.Animation.ClockController.SpeedRatio*>수정 됩니다.</xref:System.Windows.Media.Animation.ClockController.SpeedRatio*>"
  syntax:
    content: protected virtual void SpeedChanged ();
    parameters: []
  overload: System.Windows.Media.Animation.Clock.SpeedChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.Stopped
  id: Stopped
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: Stopped()
  nameWithType: Clock.Stopped()
  fullName: System.Windows.Media.Animation.Clock.Stopped()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "파생된 클래스에서 구현 된 경우 호출 될 때마다 사용 하 여 클록이 중지 된 <xref:System.Windows.Media.Animation.ClockController.Stop*>메서드.</xref:System.Windows.Media.Animation.ClockController.Stop*>"
  syntax:
    content: protected virtual void Stopped ();
    parameters: []
  overload: System.Windows.Media.Animation.Clock.Stopped*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.Timeline
  id: Timeline
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: Timeline
  nameWithType: Clock.Timeline
  fullName: System.Windows.Media.Animation.Clock.Timeline
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "이 타임 라인 가져옵니다 <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref> 만들었습니다."
  remarks: "클록의 수정 <xref:System.Windows.Media.MediaTimeline>클록; 업데이트 되지 않는 수정된 <xref:System.Windows.Media.Animation.Timeline>.</xref:System.Windows.Media.Animation.Timeline> 에서 새 클록 만들어야</xref:System.Windows.Media.MediaTimeline>"
  syntax:
    content: public System.Windows.Media.Animation.Timeline Timeline { get; }
    return:
      type: System.Windows.Media.Animation.Timeline
      description: "이 타임 라인 <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref> 만들었습니다."
  overload: System.Windows.Media.Animation.Clock.Timeline*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: System.Windows.Threading.DispatcherObject
- uid: System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Clock(Timeline)
  nameWithType: Clock.Clock(Timeline)
  fullName: System.Windows.Media.Animation.Clock.Clock(Timeline)
- uid: System.Windows.Media.Animation.Timeline
  parent: System.Windows.Media.Animation
  isExternal: false
  name: Timeline
  nameWithType: Timeline
  fullName: System.Windows.Media.Animation.Timeline
- uid: System.Windows.Media.Animation.Clock.Completed
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Completed
  nameWithType: Clock.Completed
  fullName: System.Windows.Media.Animation.Clock.Completed
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Media.Animation.Clock.Controller
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Controller
  nameWithType: Clock.Controller
  fullName: System.Windows.Media.Animation.Clock.Controller
- uid: System.Windows.Media.Animation.ClockController
  parent: System.Windows.Media.Animation
  isExternal: false
  name: ClockController
  nameWithType: ClockController
  fullName: System.Windows.Media.Animation.ClockController
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentGlobalSpeed
  nameWithType: Clock.CurrentGlobalSpeed
  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed
- uid: System.Nullable{System.Double}
  parent: System
  isExternal: true
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Double>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentGlobalSpeedInvalidated
  nameWithType: Clock.CurrentGlobalSpeedInvalidated
  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalTime
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentGlobalTime
  nameWithType: Clock.CurrentGlobalTime
  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalTime
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Windows.Media.Animation.Clock.CurrentIteration
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentIteration
  nameWithType: Clock.CurrentIteration
  fullName: System.Windows.Media.Animation.Clock.CurrentIteration
- uid: System.Nullable{System.Int32}
  parent: System
  isExternal: true
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.Animation.Clock.CurrentProgress
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentProgress
  nameWithType: Clock.CurrentProgress
  fullName: System.Windows.Media.Animation.Clock.CurrentProgress
- uid: System.Windows.Media.Animation.Clock.CurrentState
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentState
  nameWithType: Clock.CurrentState
  fullName: System.Windows.Media.Animation.Clock.CurrentState
- uid: System.Windows.Media.Animation.ClockState
  parent: System.Windows.Media.Animation
  isExternal: false
  name: ClockState
  nameWithType: ClockState
  fullName: System.Windows.Media.Animation.ClockState
- uid: System.Windows.Media.Animation.Clock.CurrentStateInvalidated
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentStateInvalidated
  nameWithType: Clock.CurrentStateInvalidated
  fullName: System.Windows.Media.Animation.Clock.CurrentStateInvalidated
- uid: System.Windows.Media.Animation.Clock.CurrentTime
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentTime
  nameWithType: Clock.CurrentTime
  fullName: System.Windows.Media.Animation.Clock.CurrentTime
- uid: System.Nullable{System.TimeSpan}
  parent: System
  isExternal: true
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.TimeSpan>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.Animation.Clock.CurrentTimeInvalidated
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentTimeInvalidated
  nameWithType: Clock.CurrentTimeInvalidated
  fullName: System.Windows.Media.Animation.Clock.CurrentTimeInvalidated
- uid: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: DiscontinuousTimeMovement()
  nameWithType: Clock.DiscontinuousTimeMovement()
  fullName: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement()
- uid: System.Windows.Media.Animation.Clock.GetCanSlip
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: GetCanSlip()
  nameWithType: Clock.GetCanSlip()
  fullName: System.Windows.Media.Animation.Clock.GetCanSlip()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Animation.Clock.GetCurrentTimeCore
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: GetCurrentTimeCore()
  nameWithType: Clock.GetCurrentTimeCore()
  fullName: System.Windows.Media.Animation.Clock.GetCurrentTimeCore()
- uid: System.Windows.Media.Animation.Clock.HasControllableRoot
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: HasControllableRoot
  nameWithType: Clock.HasControllableRoot
  fullName: System.Windows.Media.Animation.Clock.HasControllableRoot
- uid: System.Windows.Media.Animation.Clock.IsPaused
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: IsPaused
  nameWithType: Clock.IsPaused
  fullName: System.Windows.Media.Animation.Clock.IsPaused
- uid: System.Windows.Media.Animation.Clock.NaturalDuration
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: NaturalDuration
  nameWithType: Clock.NaturalDuration
  fullName: System.Windows.Media.Animation.Clock.NaturalDuration
- uid: System.Windows.Duration
  parent: System.Windows
  isExternal: false
  name: Duration
  nameWithType: Duration
  fullName: System.Windows.Duration
- uid: System.Windows.Media.Animation.Clock.Parent
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Parent
  nameWithType: Clock.Parent
  fullName: System.Windows.Media.Animation.Clock.Parent
- uid: System.Windows.Media.Animation.Clock
  parent: System.Windows.Media.Animation
  isExternal: false
  name: Clock
  nameWithType: Clock
  fullName: System.Windows.Media.Animation.Clock
- uid: System.Windows.Media.Animation.Clock.RemoveRequested
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: RemoveRequested
  nameWithType: Clock.RemoveRequested
  fullName: System.Windows.Media.Animation.Clock.RemoveRequested
- uid: System.Windows.Media.Animation.Clock.SpeedChanged
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: SpeedChanged()
  nameWithType: Clock.SpeedChanged()
  fullName: System.Windows.Media.Animation.Clock.SpeedChanged()
- uid: System.Windows.Media.Animation.Clock.Stopped
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Stopped()
  nameWithType: Clock.Stopped()
  fullName: System.Windows.Media.Animation.Clock.Stopped()
- uid: System.Windows.Media.Animation.Clock.Timeline
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Timeline
  nameWithType: Clock.Timeline
  fullName: System.Windows.Media.Animation.Clock.Timeline
- uid: System.Windows.Media.Animation.Clock.#ctor*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Clock
  nameWithType: Clock.Clock
- uid: System.Windows.Media.Animation.Clock.Controller*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Controller
  nameWithType: Clock.Controller
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentGlobalSpeed
  nameWithType: Clock.CurrentGlobalSpeed
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalTime*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentGlobalTime
  nameWithType: Clock.CurrentGlobalTime
- uid: System.Windows.Media.Animation.Clock.CurrentIteration*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentIteration
  nameWithType: Clock.CurrentIteration
- uid: System.Windows.Media.Animation.Clock.CurrentProgress*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentProgress
  nameWithType: Clock.CurrentProgress
- uid: System.Windows.Media.Animation.Clock.CurrentState*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentState
  nameWithType: Clock.CurrentState
- uid: System.Windows.Media.Animation.Clock.CurrentTime*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentTime
  nameWithType: Clock.CurrentTime
- uid: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: DiscontinuousTimeMovement
  nameWithType: Clock.DiscontinuousTimeMovement
- uid: System.Windows.Media.Animation.Clock.GetCanSlip*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: GetCanSlip
  nameWithType: Clock.GetCanSlip
- uid: System.Windows.Media.Animation.Clock.GetCurrentTimeCore*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: GetCurrentTimeCore
  nameWithType: Clock.GetCurrentTimeCore
- uid: System.Windows.Media.Animation.Clock.HasControllableRoot*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: HasControllableRoot
  nameWithType: Clock.HasControllableRoot
- uid: System.Windows.Media.Animation.Clock.IsPaused*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: IsPaused
  nameWithType: Clock.IsPaused
- uid: System.Windows.Media.Animation.Clock.NaturalDuration*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: NaturalDuration
  nameWithType: Clock.NaturalDuration
- uid: System.Windows.Media.Animation.Clock.Parent*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Parent
  nameWithType: Clock.Parent
- uid: System.Windows.Media.Animation.Clock.SpeedChanged*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: SpeedChanged
  nameWithType: Clock.SpeedChanged
- uid: System.Windows.Media.Animation.Clock.Stopped*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Stopped
  nameWithType: Clock.Stopped
- uid: System.Windows.Media.Animation.Clock.Timeline*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Timeline
  nameWithType: Clock.Timeline
