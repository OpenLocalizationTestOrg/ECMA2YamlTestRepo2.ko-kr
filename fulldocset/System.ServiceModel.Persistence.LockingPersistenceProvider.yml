### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider
  id: LockingPersistenceProvider
  children:
  - System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)
  langs:
  - csharp
  name: LockingPersistenceProvider
  nameWithType: LockingPersistenceProvider
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider
  type: Class
  summary: "잠금을 구현 하는 모든 영 속 서비스 지 속성 공급자는 파생 된 추상 기본 클래스입니다."
  remarks: "지 속성 뿐만 아니라 LockingPersistenceProvider 클래스는 서비스 상태 데이터 레코드 잠금을 구현 합니다. 저장 된 데이터와 상호 작용 하는 메서드 (같은 `Load` 메서드) 선택적 매개 변수 (`lockInstance`) 문제의 데이터에 대 한 잠금을 해제할지 아니면 유지 여부를 정의 하는 합니다."
  syntax:
    content: >-
      [System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")]

      public abstract class LockingPersistenceProvider : System.ServiceModel.Persistence.PersistenceProvider
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.Persistence.PersistenceProvider
  implements: []
  inheritedMembers:
  - System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.PersistenceProvider.Delete(System.Object,System.TimeSpan)
  - System.ServiceModel.Persistence.PersistenceProvider.EndCreate(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.EndDelete(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.EndLoad(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(System.IAsyncResult,System.Object@)
  - System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.Id
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)
  id: '#ctor(System.Guid)'
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: LockingPersistenceProvider(Guid)
  nameWithType: LockingPersistenceProvider.LockingPersistenceProvider(Guid)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.LockingPersistenceProvider(Guid)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "파생된 클래스에서 구현 된 경우의 새 인스턴스를 만듭니다는 <xref href=&quot;System.ServiceModel.Persistence.LockingPersistenceProvider&quot;> </xref> 클래스를 지정된 된 id 값을 사용 하 여 구성 합니다."
  syntax:
    content: protected LockingPersistenceProvider (Guid id);
    parameters:
    - id: id
      type: System.Guid
      description: "이 지 속성 제공자 인스턴스의 연결 되도록 고유 식별자입니다."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "매개 변수를 사용 하 여 지 속성 저장소에 인스턴스 상태 정보를 만드는 비동기 작업을 시작 합니다. 상태 정보를 저장 한 후이 메서드는 인스턴스 잠금 해제 하지 않습니다."
  remarks: "이 메서드를 호출 하는 <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate%2A>메서드는 인스턴스 잠금 되는지 확인 하려면 추가 매개 변수를 사용 합니다.</xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate%2A> 이 메서드는 전달 `false` 호출 하는 메서드로이 매개 변수를 값으로."
  syntax:
    content: public override IAsyncResult BeginCreate (object instance, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: "해당 상태 정보가 지 속성 저장소에 저장 되는 인스턴스."
    - id: timeout
      type: System.TimeSpan
      description: "작업 시간이 초과 되기 전에 완료 해야 하는 간격입니다."
    - id: callback
      type: System.AsyncCallback
      description: "작업이 완료 되 면 알림을 수신 하는 대리자입니다."
    - id: state
      type: System.Object
      description: "비동기 작업과 연결 된 상태 정보입니다."
    return:
      type: System.IAsyncResult
      description: "비동기 작업의 상태입니다."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginCreate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginCreate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "매개 변수를 사용 하 여 지 속성 저장소에 인스턴스 상태 정보를 만드는 비동기 작업을 시작 합니다. 이 메서드는 경우 인스턴스 상태를 저장 한 후에 인스턴스 잠금을 해제의 값은 <code> unlockInstance </code> 매개 변수는 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  syntax:
    content: public abstract IAsyncResult BeginCreate (object instance, TimeSpan timeout, bool unlockInstance, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: "해당 상태 정보가 지 속성 저장소에 저장 되는 인스턴스."
    - id: timeout
      type: System.TimeSpan
      description: "작업 시간이 초과 되기 전에 완료 해야 하는 간격입니다."
    - id: unlockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>인스턴스가 잠금 해제 되어야 합니다; 지 속성 저장소의 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: callback
      type: System.AsyncCallback
      description: "작업이 완료 되 면 알림을 수신 하는 대리자입니다."
    - id: state
      type: System.Object
      description: "비동기 작업과 연결 된 상태 정보입니다."
    return:
      type: System.IAsyncResult
      description: "비동기 작업의 상태입니다."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginLoad(TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoad(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "매개 변수를 사용 하 여 지 속성 저장소에서 상태 정보를 기반으로 인스턴스를 로드 하기 위한 비동기 작업을 시작 합니다. 이 메서드는 인스턴스를 잠그지 않습니다."
  remarks: "이 메서드를 호출는 <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad%2A>, 지 속성 저장소에서 인스턴스를 잠가야 하는지 여부를 지정 하는 추가 매개 변수 사용입니다.</xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad%2A> 이 메서드는 전달 `false` 호출 하는 메서드로이 매개 변수를 값으로."
  syntax:
    content: public override IAsyncResult BeginLoad (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "작업 시간이 초과 되기 전에 완료 해야 하는 간격입니다."
    - id: callback
      type: System.AsyncCallback
      description: "작업이 완료 되 면 알림을 수신 하는 대리자입니다."
    - id: state
      type: System.Object
      description: "비동기 작업과 연결 된 상태 정보입니다."
    return:
      type: System.IAsyncResult
      description: "비동기 작업의 상태입니다."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginLoad(TimeSpan,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoad(TimeSpan,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(TimeSpan,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "매개 변수를 사용 하 여 지 속성 저장소에서 상태 정보를 기반으로 인스턴스를 로드 하기 위한 비동기 작업을 시작 합니다. 이 메서드는 인스턴스 경우 인스턴스 상태를 로드 한 후 잠급니다의 값은 <code> lockInstance </code> 매개 변수는 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  syntax:
    content: public abstract IAsyncResult BeginLoad (TimeSpan timeout, bool lockInstance, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "작업 시간이 초과 되기 전에 완료 해야 하는 간격입니다."
    - id: lockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>인스턴스를 잠가야; 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: callback
      type: System.AsyncCallback
      description: "작업이 완료 되 면 알림을 수신 하는 대리자입니다."
    - id: state
      type: System.Object
      description: "비동기 작업과 연결 된 상태 정보입니다."
    return:
      type: System.IAsyncResult
      description: "비동기 작업의 상태입니다."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  id: BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "파생된 클래스에서 구현 하는 경우 LoadIfChanged 단계의 시작을 나타냅니다. LoadIfChanged 단계는 상태 데이터가 지 속성 저장소에서 변경 된 상태 데이터가 지 속성 저장소에서 지 속성 제공자로 로드 될 때 발생 합니다. 이 메서드 호출은 지 속성 저장소에서 인스턴스를 잠그지 않습니다."
  syntax:
    content: public override IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "지 속성 공급자는이 작업을 중단 하는 시간 기간입니다."
    - id: instanceToken
      type: System.Object
      description: "이전에서 반환 된 토큰 <xref uid=&quot;langword_csharp_Create&quot; name=&quot;Create&quot; href=&quot;&quot;> </xref> 또는 <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref> 현재 상태를 나타내는 메서드를 호출자가 보유 합니다."
    - id: callback
      type: System.AsyncCallback
      description: "작업이 완료 될 때 호출 될 메서드."
    - id: state
      type: System.Object
      description: "이 특정 비동기 작업을 다른 작업과 구별 하는 사용자 제공 개체입니다."
    return:
      type: System.IAsyncResult
      description: "비동기 작업의 상태입니다."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginLoadIfChanged(TimeSpan,Object,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "파생된 클래스에서 구현 하는 경우 LoadIfChanged 단계의 시작을 나타냅니다. LoadIfChanged 단계는 상태 데이터가 지 속성 저장소에서 변경 된 상태 데이터가 지 속성 저장소에서 지 속성 제공자로 로드 될 때 발생 합니다. 이 메서드 호출은 지 속성 저장소에서 인스턴스를 잠글지 여부를 지정할 수 있습니다."
  syntax:
    content: public virtual IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, bool lockInstance, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "지 속성 공급자는이 작업을 중단 하는 시간 기간입니다."
    - id: instanceToken
      type: System.Object
      description: "이전에서 반환 된 토큰 <xref uid=&quot;langword_csharp_Create&quot; name=&quot;Create&quot; href=&quot;&quot;> </xref> 또는 <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref> 현재 상태를 나타내는 메서드를 호출자가 보유 합니다."
    - id: lockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>인스턴스 지 속성 저장소에서 잠긴 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: callback
      type: System.AsyncCallback
      description: "작업이 완료 될 때 호출 될 메서드."
    - id: state
      type: System.Object
      description: "이 특정 비동기 작업을 다른 작업과 구별 하는 사용자 제공 개체입니다."
    return:
      type: System.IAsyncResult
      description: "비동기 작업의 상태입니다."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginUnlock(TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginUnlock(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "지 속성 저장소에서 인스턴스 잠금을 해제 하는 비동기 작업을 시작 합니다."
  syntax:
    content: public abstract IAsyncResult BeginUnlock (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "작업 시간이 초과 되기 전에 완료 해야 하는 간격입니다."
    - id: callback
      type: System.AsyncCallback
      description: "작업이 완료 되 면 알림을 수신 하는 대리자입니다."
    - id: state
      type: System.Object
      description: "비동기 작업과 연결 된 상태 정보입니다."
    return:
      type: System.IAsyncResult
      description: "비동기 작업의 상태입니다."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "전달 된 매개 변수를 사용 하 여 지 속성 저장소에서 인스턴스 상태 정보를 업데이트 하기 위한 비동기 작업을 시작 합니다. 이 작업 인스턴스 저장소에서 인스턴스 잠금 해제 하지 않습니다."
  remarks: "이 메서드를 호출는 <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate%2A>메서드와 전달은 `false` 에 대 한 값은 `unlockInstance` 매개 변수.</xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate%2A>"
  syntax:
    content: public override IAsyncResult BeginUpdate (object instance, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: "지 속성 저장소에서 해당 상태 정보가 업데이트 중인 인스턴스."
    - id: timeout
      type: System.TimeSpan
      description: "작업 시간이 초과 되기 전에 완료 해야 하는 간격입니다."
    - id: callback
      type: System.AsyncCallback
      description: "작업이 완료 되 면 알림을 수신 하는 대리자입니다."
    - id: state
      type: System.Object
      description: "비동기 작업에 대 한 상태 정보입니다."
    return:
      type: System.IAsyncResult
      description: "비동기 작업의 상태입니다."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginUpdate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "전달 된 매개 변수를 사용 하 여 지 속성 저장소에서 인스턴스 상태 정보를 업데이트 하기 위한 비동기 작업을 시작 합니다. 이 작업 하는 경우 지 속성 저장소에서 인스턴스를 잠금 값은 <code> unlockInstance </code> 매개 변수는 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  syntax:
    content: public abstract IAsyncResult BeginUpdate (object instance, TimeSpan timeout, bool unlockInstance, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: "지 속성 저장소에서 해당 상태 정보가 업데이트 중인 인스턴스."
    - id: timeout
      type: System.TimeSpan
      description: "작업 시간이 초과 되기 전에 완료 해야 하는 간격입니다."
    - id: unlockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지 속성 저장소에서 인스턴스 상태를 업데이트 한 후 인스턴스를 잠가야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: callback
      type: System.AsyncCallback
      description: "작업이 완료 되 면 알림을 수신 하는 대리자입니다."
    - id: state
      type: System.Object
      description: "비동기 작업에 대 한 상태 정보입니다."
    return:
      type: System.IAsyncResult
      description: "비동기 작업의 상태입니다."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)
  id: Create(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Create(Object,TimeSpan)
  nameWithType: LockingPersistenceProvider.Create(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(Object,TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "메서드에 전달 된 매개 변수를 사용 하 여 지 속성 저장소에 인스턴스 상태 정보를 만듭니다. 인스턴스 상태를 저장 한 후이 메서드는 지 속성 저장소에서 인스턴스 잠금 해제 하지 않습니다."
  syntax:
    content: public override object Create (object instance, TimeSpan timeout);
    parameters:
    - id: instance
      type: System.Object
      description: "해당 상태 정보가 지 속성 저장소에 저장 해야 하는 인스턴스 개체입니다."
    - id: timeout
      type: System.TimeSpan
      description: "작업 시간이 초과 되기 전에 완료 해야 하는 간격입니다."
    return:
      type: System.Object
      description: "상태 정보입니다."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Create*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)
  id: Create(System.Object,System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Create(Object,TimeSpan,Boolean)
  nameWithType: LockingPersistenceProvider.Create(Object,TimeSpan,Boolean)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(Object,TimeSpan,Boolean)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "이 메서드는 메서드에 전달 된 매개 변수를 사용 하 여 지 속성 저장소에서 인스턴스 상태 정보를 만듭니다. 메서드는 경우 인스턴스 저장소에서 인스턴스를 잠금 해제의 값은 <code> unlockInstance </code> 매개 변수는 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  syntax:
    content: public abstract object Create (object instance, TimeSpan timeout, bool unlockInstance);
    parameters:
    - id: instance
      type: System.Object
      description: "해당 상태 정보가 지 속성 저장소에 저장 되는 인스턴스 개체입니다."
    - id: timeout
      type: System.TimeSpan
      description: "작업 시간이 초과 되기 전에 완료 해야 하는 간격입니다."
    - id: unlockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>인스턴스가 잠금 해제 되어야 합니다; 지 속성 저장소의 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Object
      description: "상태 정보입니다."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Create*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)
  id: EndUnlock(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: EndUnlock(IAsyncResult)
  nameWithType: LockingPersistenceProvider.EndUnlock(IAsyncResult)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(IAsyncResult)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "지 속성 저장소에서 인스턴스 잠금을 해제 하는 비동기 작업을 끝냅니다."
  syntax:
    content: public abstract void EndUnlock (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "잠금 해제 작업에서 반환 된 결과입니다."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)
  id: Load(System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Load(TimeSpan)
  nameWithType: LockingPersistenceProvider.Load(TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "인스턴스를 잠그지 않고 서비스 지 속성 저장소에서 상태 정보를 로드 합니다."
  remarks: "이 메서드 호출의 <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Load%2A>메서드를 `lockInstance` 매개 변수 설정 `false`.</xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Load%2A>"
  syntax:
    content: public override object Load (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "기간을 지 속성 공급자는이 시도 중단입니다."
    return:
      type: System.Object
      description: "서비스 상태 정보입니다."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Load*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)
  id: Load(System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Load(TimeSpan,Boolean)
  nameWithType: LockingPersistenceProvider.Load(TimeSpan,Boolean)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(TimeSpan,Boolean)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "상태 인스턴스를 잠근 후 지 속성 저장소에서 정보를 로드 합니다."
  syntax:
    content: public abstract object Load (TimeSpan timeout, bool lockInstance);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "지 속성 공급자는이 작업을 중단 하는 기간입니다."
    - id: lockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>인스턴스를 잠가야; 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Object
      description: "상태 정보입니다."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Load*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  id: LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: LoadIfChanged(TimeSpan,Object,Object)
  nameWithType: LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "상태 정보를 마지막으로 호출자에 의해 로드 된 이후 변경 된 경우 지 속성 저장소에서 인스턴스 상태 정보를 로드 합니다. 이 메서드는 지 속성 저장소에서 인스턴스를 잠그지 않습니다."
  syntax:
    content: public override bool LoadIfChanged (TimeSpan timeout, object instanceToken, out object instance);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "지 속성 공급자는이 작업을 중단 하는 시간 기간입니다."
    - id: instanceToken
      type: System.Object
      description: "이전에 반환 된 토큰 <xref uid=&quot;langword_csharp_Create&quot; name=&quot;Create&quot; href=&quot;&quot;> </xref> 또는 <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref> 메서드 호출 호출자가 보유 한 현재 상태를 나타냅니다."
    - id: instance
      type: System.Object
      description: "실제 인스턴스 상태 정보입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 작업의 끝에 지 속성 저장소에서 인스턴스를 잠가야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)
  id: LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: LoadIfChanged(TimeSpan,Object,Boolean,Object)
  nameWithType: LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Boolean,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Boolean,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "상태 정보를 마지막으로 호출자에 의해 로드 된 이후 변경 된 경우 지 속성 저장소에서 인스턴스 상태 정보를 로드 합니다. 또한이 메서드는 호출자가 지 속성 저장소에서 인스턴스를 잠글지 여부를 지정할 수 있습니다."
  syntax:
    content: public virtual bool LoadIfChanged (TimeSpan timeout, object instanceToken, bool lockInstance, out object instance);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "지 속성 공급자는이 작업을 중단 하는 시간 기간입니다."
    - id: instanceToken
      type: System.Object
      description: "호출자가 보유 한 현재 상태를 나타내는 이전 Create 또는 Update 메서드 호출에서 반환 되는 토큰입니다."
    - id: lockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 작업의 끝에 지 속성 저장소에서 인스턴스를 잠가야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: instance
      type: System.Object
      description: "인스턴스 상태 정보입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 작업의 끝에 지 속성 저장소에서 인스턴스를 잠가야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)
  id: Unlock(System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Unlock(TimeSpan)
  nameWithType: LockingPersistenceProvider.Unlock(TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "생성할 때 ID를 가진 지정 된 인스턴스 잠금을 해제는 <xref href=&quot;System.ServiceModel.Persistence.LockingPersistenceProvider&quot;> </xref> 지 속성 저장소에서 개체입니다."
  syntax:
    content: public abstract void Unlock (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "지 속성 공급자는 작업을 중단 하는 시간 기간입니다."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)
  id: Update(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Update(Object,TimeSpan)
  nameWithType: LockingPersistenceProvider.Update(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(Object,TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "파생된 클래스에서 구현 된 경우 지 속성 저장소에서 인스턴스 상태 정보를 업데이트 합니다. 지 속성 저장소에서 인스턴스 상태 정보를 업데이트 한 후이 메서드는 인스턴스 잠금 해제 하지 않습니다."
  syntax:
    content: public override object Update (object instance, TimeSpan timeout);
    parameters:
    - id: instance
      type: System.Object
      description: "인스턴스 상태 정보입니다."
    - id: timeout
      type: System.TimeSpan
      description: "지 속성 공급자는 작업을 중단 하는 시간 기간입니다."
    return:
      type: System.Object
      description: "인스턴스 상태 정보입니다."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Update*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)
  id: Update(System.Object,System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Update(Object,TimeSpan,Boolean)
  nameWithType: LockingPersistenceProvider.Update(Object,TimeSpan,Boolean)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(Object,TimeSpan,Boolean)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "파생된 클래스에서 구현 된 경우 지 속성 저장소에서 인스턴스 상태 정보를 업데이트 합니다. 지 속성 저장소에서 인스턴스 상태 정보를 업데이트 한 후이 메서드는 인스턴스 잠금 해제 하지 않습니다."
  syntax:
    content: public abstract object Update (object instance, TimeSpan timeout, bool unlockInstance);
    parameters:
    - id: instance
      type: System.Object
      description: "인스턴스 상태 정보입니다."
    - id: timeout
      type: System.TimeSpan
      description: "지 속성 공급자는 작업을 중단 하는 시간 기간입니다."
    - id: unlockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>인스턴스 상태 정보를 업데이트; 인스턴스가 잠금 해제 된 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Object
      description: "인스턴스 상태 정보입니다."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Update*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: System.ServiceModel.Persistence.PersistenceProvider
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: LockingPersistenceProvider(Guid)
  nameWithType: LockingPersistenceProvider.LockingPersistenceProvider(Guid)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.LockingPersistenceProvider(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(Object,TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginCreate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginCreate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(Object,TimeSpan,Boolean,AsyncCallback,Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoad(TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoad(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoad(TimeSpan,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoad(TimeSpan,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(TimeSpan,Boolean,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoadIfChanged(TimeSpan,Object,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,Boolean,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginUnlock(TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginUnlock(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginUpdate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,Boolean,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Create(Object,TimeSpan)
  nameWithType: LockingPersistenceProvider.Create(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(Object,TimeSpan)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Create(Object,TimeSpan,Boolean)
  nameWithType: LockingPersistenceProvider.Create(Object,TimeSpan,Boolean)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(Object,TimeSpan,Boolean)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: EndUnlock(IAsyncResult)
  nameWithType: LockingPersistenceProvider.EndUnlock(IAsyncResult)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(IAsyncResult)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Load(TimeSpan)
  nameWithType: LockingPersistenceProvider.Load(TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(TimeSpan)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Load(TimeSpan,Boolean)
  nameWithType: LockingPersistenceProvider.Load(TimeSpan,Boolean)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(TimeSpan,Boolean)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: LoadIfChanged(TimeSpan,Object,Object)
  nameWithType: LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: LoadIfChanged(TimeSpan,Object,Boolean,Object)
  nameWithType: LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Boolean,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Boolean,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Unlock(TimeSpan)
  nameWithType: LockingPersistenceProvider.Unlock(TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(TimeSpan)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Update(Object,TimeSpan)
  nameWithType: LockingPersistenceProvider.Update(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(Object,TimeSpan)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Update(Object,TimeSpan,Boolean)
  nameWithType: LockingPersistenceProvider.Update(Object,TimeSpan,Boolean)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(Object,TimeSpan,Boolean)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: LockingPersistenceProvider
  nameWithType: LockingPersistenceProvider.LockingPersistenceProvider
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginCreate
  nameWithType: LockingPersistenceProvider.BeginCreate
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoad
  nameWithType: LockingPersistenceProvider.BeginLoad
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoadIfChanged
  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginUnlock
  nameWithType: LockingPersistenceProvider.BeginUnlock
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginUpdate
  nameWithType: LockingPersistenceProvider.BeginUpdate
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Create
  nameWithType: LockingPersistenceProvider.Create
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: EndUnlock
  nameWithType: LockingPersistenceProvider.EndUnlock
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Load
  nameWithType: LockingPersistenceProvider.Load
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: LoadIfChanged
  nameWithType: LockingPersistenceProvider.LoadIfChanged
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Unlock
  nameWithType: LockingPersistenceProvider.Unlock
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Update
  nameWithType: LockingPersistenceProvider.Update
