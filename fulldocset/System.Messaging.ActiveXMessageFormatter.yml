### YamlMime:ManagedReference
items:
- uid: System.Messaging.ActiveXMessageFormatter
  id: ActiveXMessageFormatter
  children:
  - System.Messaging.ActiveXMessageFormatter.#ctor
  - System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)
  - System.Messaging.ActiveXMessageFormatter.Clone
  - System.Messaging.ActiveXMessageFormatter.InitStreamedObject(System.Object)
  - System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)
  - System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)
  langs:
  - csharp
  name: ActiveXMessageFormatter
  nameWithType: ActiveXMessageFormatter
  fullName: System.Messaging.ActiveXMessageFormatter
  type: Class
  summary: "직렬화 또는 기본 데이터 형식 및 MSMQ ActiveX 구성 요소와 호환 되는 형식을 사용 하 여 메시지 큐 메시지의 본문에서 다른 개체를 역직렬화 합니다."
  remarks: "ActiveXMessageFormatter MSMQ COM 컨트롤을 사용 하는 응용 프로그램과 상호 운용 메시지 큐 COM 구성 요소를 사용 하 여 보낸 메시지와 호환 됩니다.       ActiveXMessageFormatter 대부분 기본 형식으로 구현 하는 개체를 serialize 할 수는 `IPersistStream` OLE 인터페이스입니다. 동일한 집합 기본 형식 역직렬화 할 수 있는 구현 하는 COM 개체 (예를 들어 Visual Basic 6.0을 사용 하 여 만든 개체)를 역직렬화 하는 동안 작업이 더 이상 필요 하지만 `IPersistStream`합니다. 역직렬화 할 개체를 가져와서 첫 번째 개체를.NET Framework 응용 프로그램에 메모리에 있어야 합니다.       응용 프로그램의 인스턴스를 사용 하 여 큐에 메시지를 보낼 때는 <xref:System.Messaging.MessageQueue>포맷터 클래스 개체를 스트림으로 serialize 하 고 메시지 본문에 삽입 합니다.</xref:System.Messaging.MessageQueue> 을 사용 하는 <xref:System.Messaging.MessageQueue>포맷터는 메시지 데이터 <xref:System.Messaging.Message.Body%2A> <xref:System.Messaging.Message>.</xref:System.Messaging.Message> 의 속성</xref:System.Messaging.Message.Body%2A> 으로,</xref:System.Messaging.MessageQueue> 큐에서 읽을 때       ActiveX serialization이 ActiveXMessageFormatter에서 사용 하 여 수 있게 해줍니다 매우 간결 하 고 MSMQ COM serialization 매우 빠른 방법을 제어 합니다."
  syntax:
    content: 'public class ActiveXMessageFormatter : ICloneable, System.Messaging.IMessageFormatter'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.Messaging.IMessageFormatter
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.ActiveXMessageFormatter.#ctor
  id: '#ctor'
  parent: System.Messaging.ActiveXMessageFormatter
  langs:
  - csharp
  name: ActiveXMessageFormatter()
  nameWithType: ActiveXMessageFormatter.ActiveXMessageFormatter()
  fullName: System.Messaging.ActiveXMessageFormatter.ActiveXMessageFormatter()
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Messaging.ActiveXMessageFormatter&quot;> </xref> 클래스입니다."
  syntax:
    content: public ActiveXMessageFormatter ();
    parameters: []
  overload: System.Messaging.ActiveXMessageFormatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)
  id: CanRead(System.Messaging.Message)
  parent: System.Messaging.ActiveXMessageFormatter
  langs:
  - csharp
  name: CanRead(Message)
  nameWithType: ActiveXMessageFormatter.CanRead(Message)
  fullName: System.Messaging.ActiveXMessageFormatter.CanRead(Message)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "포맷터는 메시지의 콘텐츠를 deserialize 할 수 있는지 여부를 결정 합니다."
  remarks: "CanRead 반환 `false` 메시지 본문은 메시지 큐 ActiveX 컨트롤을 deserialize 할 수 있는 기본 형식 또는 구현 하지 않는 경우는 `IPersistStream` 인터페이스입니다."
  syntax:
    content: public bool CanRead (System.Messaging.Message message);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "<xref href=&quot;System.Messaging.Message&quot;> </xref> 를 검토 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Messaging.ActiveXMessageFormatter&quot;> </xref> 메시지를 deserialize 할 수 있는, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Messaging.ActiveXMessageFormatter.CanRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.ActiveXMessageFormatter.Clone
  id: Clone
  parent: System.Messaging.ActiveXMessageFormatter
  langs:
  - csharp
  name: Clone()
  nameWithType: ActiveXMessageFormatter.Clone()
  fullName: System.Messaging.ActiveXMessageFormatter.Clone()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "인스턴스를 만듭니다는 <xref href=&quot;System.Messaging.ActiveXMessageFormatter&quot;> </xref> 현재와 동일한 <xref href=&quot;System.Messaging.ActiveXMessageFormatter&quot;> </xref>합니다."
  remarks: "이 메서드를 사용 하 여는 <xref:System.Messaging.MessageQueue>클래스 (예를 들어 응용 프로그램 받는 경우 비동기적으로) 한 번에 여러 메시지를 수신 하려면.</xref:System.Messaging.MessageQueue> 일반적으로 응용 프로그램 코드에서이 메서드를 호출할 필요가 없습니다."
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "이 동일한 속성을 가진 개체 <xref href=&quot;System.Messaging.ActiveXMessageFormatter&quot;> </xref>합니다."
  overload: System.Messaging.ActiveXMessageFormatter.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.ActiveXMessageFormatter.InitStreamedObject(System.Object)
  id: InitStreamedObject(System.Object)
  parent: System.Messaging.ActiveXMessageFormatter
  langs:
  - csharp
  name: InitStreamedObject(Object)
  nameWithType: ActiveXMessageFormatter.InitStreamedObject(Object)
  fullName: System.Messaging.ActiveXMessageFormatter.InitStreamedObject(Object)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "유틸리티 COM serialize를 구현 하는 개체를 제공 <xref uid=&quot;langword_csharp_IPersistStream&quot; name=&quot;IPersistStream&quot; href=&quot;&quot;> </xref> 필요 <xref uid=&quot;langword_csharp_IPersistStreamInit&quot; name=&quot;IPersistStreamInit&quot; href=&quot;&quot;> </xref> 를 호출할 수 있습니다."
  syntax:
    content: public static void InitStreamedObject (object streamedObject);
    parameters:
    - id: streamedObject
      type: System.Object
      description: "구현 하는 OLE 개체 <xref uid=&quot;langword_csharp_IPersistStreamInit&quot; name=&quot;IPersistStreamInit&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Messaging.ActiveXMessageFormatter.InitStreamedObject*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)
  id: Read(System.Messaging.Message)
  parent: System.Messaging.ActiveXMessageFormatter
  langs:
  - csharp
  name: Read(Message)
  nameWithType: ActiveXMessageFormatter.Read(Message)
  fullName: System.Messaging.ActiveXMessageFormatter.Read(Message)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "지정된 된 메시지의 콘텐츠를 읽고 deserialize 된 메시지를 포함 하는 개체를 만듭니다."
  remarks: "메시지의 본문 기본 형식을 나타냅니다, 메시지의 <xref:System.Messaging.Message.BodyType%2A>속성 다음 표에 관리 되는 형식 중 하나 여야 합니다.</xref:System.Messaging.Message.BodyType%2A>      | BodyType 값 | 관리 되는 형식 |   |--------------------|------------------|   | VT_LPSTR | <xref:System.Char>배열 (ASCII 인코딩을 사용 하 여 역직렬화) |   | VT_BSTR, VT_LPWSTR | <xref:System.String>(유니코드 인코딩을 사용 하 여 역직렬화) |   | VT_VECTOR | VT_UI1 | <xref:System.Byte>배열 |   | VT_BOOL | <xref:System.Boolean>|   | VT_CLSID | <xref:System.Guid>|   | VT_CY | <xref:System.Decimal>|   | VT_DATE | <xref:System.DateTime>|   | VT_I1, VT_UI1 | <xref:System.Byte>|   | VT_I2 | <xref:System.Int16>|   | VT_UI2 | <xref:System.UInt16>|   | VT_I4 | <xref:System.Int32>|   | VT_UI4 | <xref:System.UInt32>|   | VT_I8 | <xref:System.Int64>|   | VT_UI8 | <xref:System.UInt64>|   | VT_R4 | <xref:System.Single>|   | VT_R8 | <xref:System.Double>|   | VT_NULL | `null`|   | VT_STREAMED_OBJECT | <xref:System.Object>|</xref:System.Object></xref:System.Double></xref:System.Single></xref:System.UInt64></xref:System.Int64></xref:System.UInt32></xref:System.Int32></xref:System.UInt16></xref:System.Int16></xref:System.Byte></xref:System.DateTime></xref:System.Decimal></xref:System.Guid></xref:System.Boolean></xref:System.Byte></xref:System.String></xref:System.Char>"
  syntax:
    content: public object Read (System.Messaging.Message message);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "<xref href=&quot;System.Messaging.Message&quot;> </xref>, MSMQ ActiveX 컨트롤 형식으로 deserialize 하는 데 있습니다."
    return:
      type: System.Object
      description: "Deserialize 된 메시지입니다."
  overload: System.Messaging.ActiveXMessageFormatter.Read*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Messaging.Message.BodyType*>의 속성은 <code> message </code> 전달 된 매개 변수는 기본 형식에 매핑할 수 없습니다 및 스트리밍된 개체를 나타냅니다.</xref:System.Messaging.Message.BodyType*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "본문은 저장 된 개체를 나타냅니다. <xref href=&quot;System.Messaging.ActiveXMessageFormatter&quot;> </xref> 저장 된 개체의 deserialization을 지원 하지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)
  id: Write(System.Messaging.Message,System.Object)
  parent: System.Messaging.ActiveXMessageFormatter
  langs:
  - csharp
  name: Write(Message,Object)
  nameWithType: ActiveXMessageFormatter.Write(Message,Object)
  fullName: System.Messaging.ActiveXMessageFormatter.Write(Message,Object)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "메시지의 본문으로 개체를 serialize합니다."
  remarks: "다음 표에서 관리 되는 형식 간의 관계를 보여 줍니다. 및 <xref:System.Messaging.Message.BodyType%2A>속성.</xref:System.Messaging.Message.BodyType%2A> 개체를 serialize 하면 이러한 관리 되는 형식 중 하나 여야 하거나 구현 해야 OLE `IPersistStream` 인터페이스입니다.      | BodyType 값 | 관리 되는 형식 |   |--------------------|------------------|   | VT_LPSTR | <xref:System.Char>|   | VT_BSTR, VT_LPWSTR | <xref:System.String>|   | VT_VECTOR | VT_UI1 | <xref:System.Byte>|   | VT_BOOL | <xref:System.Boolean>|   | VT_CLSID | <xref:System.Guid>|   | VT_CY | <xref:System.Decimal>|   | VT_DATE | <xref:System.DateTime>|   | VT_I1, VT_UI1 | <xref:System.Byte>|   | VT_I2 | <xref:System.Int16>|   | VT_UI2 | <xref:System.UInt16>|   | VT_I4 | <xref:System.Int32>|   | VT_UI4 | <xref:System.UInt32>|   | VT_I8 | <xref:System.Int64>|   | VT_UI8 | <xref:System.UInt64>|   | VT_R4 | <xref:System.Single>|   | VT_R8 | <xref:System.Double>|   | VT_NULL | `null`|   | VT_STREAMED_OBJECT | `IPersistStream` (OLE) <xref:System.Object>|</xref:System.Object></xref:System.Double></xref:System.Single></xref:System.UInt64></xref:System.Int64></xref:System.UInt32></xref:System.Int32></xref:System.UInt16></xref:System.Int16></xref:System.Byte></xref:System.DateTime></xref:System.Decimal></xref:System.Guid></xref:System.Boolean></xref:System.Byte></xref:System.String></xref:System.Char>"
  syntax:
    content: public void Write (System.Messaging.Message message, object obj);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "<xref href=&quot;System.Messaging.Message&quot;> </xref> 인 <xref:System.Messaging.Message.Body*>속성은 직렬화 된 개체를 포함 합니다.</xref:System.Messaging.Message.Body*>"
    - id: obj
      type: System.Object
      description: "메시지 본문으로 serialize 할 개체입니다."
  overload: System.Messaging.ActiveXMessageFormatter.Write*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Serialize 할 개체도 기본 형식이 아니고 OLE를 구현 하는 스트리밍된 개체 <xref uid=&quot;langword_csharp_IPersistStream&quot; name=&quot;IPersistStream&quot; href=&quot;&quot;> </xref> 인터페이스입니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Messaging.ActiveXMessageFormatter.#ctor
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: ActiveXMessageFormatter()
  nameWithType: ActiveXMessageFormatter.ActiveXMessageFormatter()
  fullName: System.Messaging.ActiveXMessageFormatter.ActiveXMessageFormatter()
- uid: System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: CanRead(Message)
  nameWithType: ActiveXMessageFormatter.CanRead(Message)
  fullName: System.Messaging.ActiveXMessageFormatter.CanRead(Message)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Messaging.Message
  parent: System.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Messaging.Message
- uid: System.Messaging.ActiveXMessageFormatter.Clone
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: Clone()
  nameWithType: ActiveXMessageFormatter.Clone()
  fullName: System.Messaging.ActiveXMessageFormatter.Clone()
- uid: System.Messaging.ActiveXMessageFormatter.InitStreamedObject(System.Object)
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: InitStreamedObject(Object)
  nameWithType: ActiveXMessageFormatter.InitStreamedObject(Object)
  fullName: System.Messaging.ActiveXMessageFormatter.InitStreamedObject(Object)
- uid: System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: Read(Message)
  nameWithType: ActiveXMessageFormatter.Read(Message)
  fullName: System.Messaging.ActiveXMessageFormatter.Read(Message)
- uid: System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: Write(Message,Object)
  nameWithType: ActiveXMessageFormatter.Write(Message,Object)
  fullName: System.Messaging.ActiveXMessageFormatter.Write(Message,Object)
- uid: System.Messaging.ActiveXMessageFormatter.#ctor*
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: ActiveXMessageFormatter
  nameWithType: ActiveXMessageFormatter.ActiveXMessageFormatter
- uid: System.Messaging.ActiveXMessageFormatter.CanRead*
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: CanRead
  nameWithType: ActiveXMessageFormatter.CanRead
- uid: System.Messaging.ActiveXMessageFormatter.Clone*
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: Clone
  nameWithType: ActiveXMessageFormatter.Clone
- uid: System.Messaging.ActiveXMessageFormatter.InitStreamedObject*
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: InitStreamedObject
  nameWithType: ActiveXMessageFormatter.InitStreamedObject
- uid: System.Messaging.ActiveXMessageFormatter.Read*
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: Read
  nameWithType: ActiveXMessageFormatter.Read
- uid: System.Messaging.ActiveXMessageFormatter.Write*
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: Write
  nameWithType: ActiveXMessageFormatter.Write
