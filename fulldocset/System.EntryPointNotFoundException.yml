### YamlMime:ManagedReference
items:
- uid: System.EntryPointNotFoundException
  id: EntryPointNotFoundException
  children:
  - System.EntryPointNotFoundException.#ctor
  - System.EntryPointNotFoundException.#ctor(System.String)
  - System.EntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.EntryPointNotFoundException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: EntryPointNotFoundException
  nameWithType: EntryPointNotFoundException
  fullName: System.EntryPointNotFoundException
  type: Class
  summary: "진입 메서드가 없어서 클래스를 로드 시도가 실패 한 경우 throw 되는 예외입니다."
  remarks: "EntryPointNotFoundException 예외는 공용 언어 런타임에서 어셈블리의 진입점을 식별할 수 없는 어셈블리를 로드할 수 없는 경우 throw 됩니다.  다음과 같은 경우이 예외가 throw 될 수 있습니다:-공용 언어 런타임 응용 프로그램 진입점을 찾을 수 없으면 (일반적으로 `Main` 메서드)에서 실행 가능한 어셈블리. 응용 프로그램 진입점이 전역 여야 합니다 또는 `static` 메서드 매개 변수 없이 또는 유일한 매개 변수로 문자열 배열입니다. 진입점을 반환할 수 있습니다 `void`를 반환할 수 있습니다는 <xref:System.Int32>또는 <xref:System.UInt32>종료 코드.</xref:System.UInt32> </xref:System.Int32> 응용 프로그램 어셈블리에는 둘 이상의 진입점을 정의할 수 없습니다.      -함수를 찾을 수 없으므로 Windows DLL에서 함수 호출을 확인할 수 없습니다. 다음 예에서 EntryPointNotFoundException 예외가 User32.dll 라는 함수가 포함 되어 있지 않으므로 `GetMyNumber`합니다.           [!code-cs[System.EntryPointNotFoundException.Class#1](~/add/codesnippet/csharp/t-system.entrypointnotfo_1.cs)][!code-vb[System.EntryPointNotFoundException.Class#1](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_1.vb) ] -메서드 호출에 사용 된 어셈블리의 이름이 일치 하지 않으므로 Windows DLL의 함수 호출에 확인할 수 없습니다.       대부분의 경우이 때문에 발생는 <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling?displayProperty=fullName>필드를로 암시적 또는 명시적으로 설정 `true`, 호출된 된 메서드가 하나 이상의 문자열 매개 변수를 포함 한 ANSI 및 유니코드 버전 하 고 메서드 호출에 사용 된이 ANSI 또는 유니코드 버전의 이름과 일치 하지 않습니다.</xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling?displayProperty=fullName> 다음 예제에서는 Windows 호출을 시도 하 여 그림을 제공 `MessageBox` User32.dll의 함수입니다. 첫 번째 메서드 정의 지정 하기 때문에 <xref:System.Runtime.InteropServices.CharSet?displayProperty=fullName>문자열 마샬링에 함수의 와이드 문자 버전에 대 한 공용 언어 찾습니다 `MessageBoxW`, 메서드 호출에 사용 되는 이름 대신 `MessageBox`.</xref:System.Runtime.InteropServices.CharSet?displayProperty=fullName>  호출 하 여이 문제를 해결 하는 두 번째 메서드 정의 `MessageBoxW` 대신는 `MessageBox` 함수입니다.           [!code-vb[System.EntryPointNotFoundException.Class#2](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_2.vb)][!code-cs[System.EntryPointNotFoundException.Class#2](~/add/codesnippet/csharp/t-system.entrypointnotfo_2.cs) ] -트 데코 레이 된 이름이 아닌 간단한 이름은 동적 연결 라이브러리에는 함수를 호출 하려고 합니다.       일반적으로 c + + 컴파일러는 DLL 함수에 대 한 데코 레이트 된 이름을 생성합니다. 다음 c + + 코드 라는 함수를 정의 하는 예를 들어 `Double` TestDll.dll 라는 라이브러리에 있습니다.           [!code-cpp[System.EntryPointNotFoundException.Class#6](~/add/codesnippet/cpp/testdll/testdll.cpp#6) ] 다음 예제에서 코드에 함수를 호출 하려고 EntryPointNotFoundException 예외가 발생 하기 때문에 `Double` 함수를 찾을 수 없습니다.           [!code-cs[그러나 System.EntryPointNotFoundException.Class#7](~/add/codesnippet/csharp/t-system.entrypointnotfo_4.cs)][!code-vb[System.EntryPointNotFoundException.Class#7](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_4.vb) ] 함수가 데코 레이트 된 이름을 사용 하 여 호출 되는 경우 (이 경우 `?Double@@YAHH@Z`), 다음 예제와 같이 함수 호출이 성공 합니다.                 [!code-cs[System.EntryPointNotFoundException.Class#8](~/add/codesnippet/csharp/t-system.entrypointnotfo_5.cs)][!code-vb[System.EntryPointNotFoundException.Class#8](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_5.vb) ] Dumpbin.exe와 같은 유틸리티를 사용 하 여 DLL에서 내보내기 함수의 데코 레이트 된 이름을 찾을 수 있습니다.            -관리 되지 않는 동적 연결 라이브러리 처럼 관리 되는 어셈블리의 메서드를 호출 하려고 합니다. 예를 보려면, StringUtilities.dll 이라는 어셈블리를 다음 예제를 컴파일하십시오.           [!code-cs[System.EntryPointNotFoundException.Class#3](~/add/codesnippet/csharp/t-system.entrypointnotfo_6.cs)][!code-vb[System.EntryPointNotFoundException.Class#3](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_6.vb) ] 컴파일하고 호출 하려고 하는 다음 예제를 실행 한 다음는 `StringUtilities.SayGoodMorning` StringUtilities.dll 동적 연결 라이브러리에서 메서드가 마치 비관리 코드 처럼 합니다.       결과는 EntryPointNotFoundException 예외입니다.           [!code-cs[System.EntryPointNotFoundException.Class#4](~/add/codesnippet/csharp/t-system.entrypointnotfo_7.cs)][!code-vb[System.EntryPointNotFoundException.Class#4](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_7.vb) ] 예외를 제거 하려면 관리 되는 어셈블리 및 액세스에 대 한 참조를 추가 `StringUtilities.SayGoodMorning` 메서드 다음 예제에서는 마찬가지로 관리 코드에서 다른 메서드 액세스와 같은 방법으로 합니다.                 [!code-cs[System.EntryPointNotFoundException.Class#5](~/add/codesnippet/csharp/t-system.entrypointnotfo_8.cs)][!code-vb[System.EntryPointNotFoundException.Class#5](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_8.vb) ] -마치 Windows DLL 것 처럼 COM DLL의 메서드를 호출 하려고 합니다.       COM DLL에 액세스 하려면는 **참조 추가** 프로젝트에 대 한 참조를 추가 하 고 다음에서 형식 라이브러리를 선택 하려면 Visual Studio의 옵션은 **COM** 탭 합니다.       목록이 EntryPointNotFoundException의 인스턴스에 대 한 초기 속성 값에 대 한 참조는 <xref:System.EntryPointNotFoundException.%23ctor%2A>생성자.</xref:System.EntryPointNotFoundException.%23ctor%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class EntryPointNotFoundException : TypeLoadException
  inheritance:
  - System.TypeLoadException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EntryPointNotFoundException.#ctor
  id: '#ctor'
  parent: System.EntryPointNotFoundException
  langs:
  - csharp
  name: EntryPointNotFoundException()
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException()
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.EntryPointNotFoundException&quot;> </xref> 클래스입니다."
  remarks: "이 생성자에는 <xref:System.Exception.Message%2A>속성의 새 인스턴스를 &quot;입력이 지점을 찾지 못했습니다.&quot; 오류를 설명 하는 시스템 제공 메시지로</xref:System.Exception.Message%2A> 초기화합니다. 이 메시지는 현재 시스템 문화권을 고려 합니다.       다음 표에서 <xref:System.EntryPointNotFoundException>안내 하십시오.</xref:System.EntryPointNotFoundException> 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 값 |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| Null 참조 (`Nothing` Visual basic에서). |   | <xref:System.TypeLoadException.Message%2A>| 지역화 된 오류 메시지 문자열입니다. |</xref:System.TypeLoadException.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public EntryPointNotFoundException ();
    parameters: []
  overload: System.EntryPointNotFoundException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EntryPointNotFoundException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.EntryPointNotFoundException
  langs:
  - csharp
  name: EntryPointNotFoundException(String)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(String)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.EntryPointNotFoundException&quot;> </xref> 지정된 된 오류 메시지를 사용 하 여 클래스입니다."
  remarks: "내용을 `message` 사람이 이해할 수 있도록 합니다. 이 생성자의 호출자는이 문자열이 현재 시스템 문화권에 맞게 지역화 되었는지 확인 해야 합니다.       다음 표에서 <xref:System.EntryPointNotFoundException>안내 하십시오.</xref:System.EntryPointNotFoundException> 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 값 |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| Null 참조 (`Nothing` Visual basic에서). |   | <xref:System.TypeLoadException.Message%2A>| 오류 메시지 문자열입니다. |</xref:System.TypeLoadException.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public EntryPointNotFoundException (string message);
    parameters:
    - id: message
      type: System.String
      description: "예외에 대 한 이유를 설명 하는 오류 메시지입니다."
  overload: System.EntryPointNotFoundException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.EntryPointNotFoundException
  langs:
  - csharp
  name: EntryPointNotFoundException(SerializationInfo,StreamingContext)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(SerializationInfo,StreamingContext)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.EntryPointNotFoundException&quot;> </xref> serialize 된 데이터 클래스입니다."
  remarks: "이 생성자는 스트림을 통해 전송 된 예외 개체를 다시 구성 하기 위해 역직렬화 하는 동안 호출 됩니다."
  syntax:
    content: protected EntryPointNotFoundException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "직렬화 된 개체 데이터를 보유 하는 개체입니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "소스 또는 대상에 대 한 컨텍스트 정보입니다."
  overload: System.EntryPointNotFoundException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EntryPointNotFoundException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.EntryPointNotFoundException
  langs:
  - csharp
  name: EntryPointNotFoundException(String,Exception)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(String,Exception)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.EntryPointNotFoundException&quot;> </xref> 지정된 된 오류 메시지와 해당 예외의 원인인 내부 예외에 대 한 참조를 사용 하 여 클래스입니다."
  remarks: "이전 예외의 직접적인 결과에 이전 예외에 대 한 참조가 들어 있어야 throw 되는 예외는 <xref:System.Exception.InnerException%2A>속성.</xref:System.Exception.InnerException%2A> <xref:System.Exception.InnerException%2A>생성자 또는 null 참조로 전달 되는 동일한 값을 반환 하는 속성 (`Nothing` Visual basic에서) 하는 경우는 <xref:System.Exception.InnerException%2A>생성자에 내부 예외 값을 제공 하지 않는.</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>       다음 표에서 <xref:System.EntryPointNotFoundException>안내 하십시오.</xref:System.EntryPointNotFoundException> 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 값 |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| 내부 예외를 참조 합니다. |   | <xref:System.TypeLoadException.Message%2A>| 오류 메시지 문자열입니다. |</xref:System.TypeLoadException.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public EntryPointNotFoundException (string message, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: "예외에 대 한 이유를 설명 하는 오류 메시지입니다."
    - id: inner
      type: System.Exception
      description: "현재 예외의 원인인 예외입니다. 경우는 `inner` 매개 변수가 null 참조 하지 않습니다. (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)에서 현재 예외가 발생 한 <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref> 내부 예외를 처리 하는 블록."
  overload: System.EntryPointNotFoundException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.TypeLoadException
  isExternal: false
  name: System.TypeLoadException
- uid: System.EntryPointNotFoundException.#ctor
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException()
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException()
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException()
- uid: System.EntryPointNotFoundException.#ctor(System.String)
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException(String)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(String)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException(SerializationInfo,StreamingContext)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(SerializationInfo,StreamingContext)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.EntryPointNotFoundException.#ctor(System.String,System.Exception)
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException(String,Exception)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(String,Exception)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.EntryPointNotFoundException.#ctor*
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException
