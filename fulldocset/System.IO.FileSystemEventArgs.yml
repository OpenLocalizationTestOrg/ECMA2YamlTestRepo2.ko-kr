### YamlMime:ManagedReference
items:
- uid: System.IO.FileSystemEventArgs
  id: FileSystemEventArgs
  children:
  - System.IO.FileSystemEventArgs.#ctor(System.IO.WatcherChangeTypes,System.String,System.String)
  - System.IO.FileSystemEventArgs.ChangeType
  - System.IO.FileSystemEventArgs.FullPath
  - System.IO.FileSystemEventArgs.Name
  langs:
  - csharp
  name: FileSystemEventArgs
  nameWithType: FileSystemEventArgs
  fullName: System.IO.FileSystemEventArgs
  type: Class
  summary: '디렉터리 이벤트에 대 한 데이터를 제공: <xref href=&quot;System.IO.FileSystemWatcher.Changed&quot;> </xref>, <xref href=&quot;System.IO.FileSystemWatcher.Created&quot;> </xref>, <xref href=&quot;System.IO.FileSystemWatcher.Deleted&quot;> </xref>합니다.'
  remarks: "FileSystemEventArgs 클래스는 이러한 이벤트에 대 한 이벤트 처리기에 매개 변수로 전달 됩니다: <xref:System.IO.FileSystemWatcher.Changed>크기를 변경 하면 오류가 발생 시스템 특성을 마지막으로 쓴 시간, 마지막 액세스 시간 또는 파일 또는 디렉터리의 지정 된 <xref:System.IO.FileSystemWatcher.Path%2A> <xref:System.IO.FileSystemWatcher>.</xref:System.IO.FileSystemWatcher> </xref:System.IO.FileSystemWatcher.Path%2A> 의 보안 권한</xref:System.IO.FileSystemWatcher.Changed>       <xref:System.IO.FileSystemWatcher.Created>파일 또는 디렉터리에서 지정 된 경우이 이벤트 발생 <xref:System.IO.FileSystemWatcher.Path%2A>의 <xref:System.IO.FileSystemWatcher>만들어집니다.</xref:System.IO.FileSystemWatcher> </xref:System.IO.FileSystemWatcher.Path%2A> </xref:System.IO.FileSystemWatcher.Created>       <xref:System.IO.FileSystemWatcher.Deleted>파일 또는 디렉터리에서 지정 된 경우이 이벤트 발생 <xref:System.IO.FileSystemWatcher.Path%2A>의 <xref:System.IO.FileSystemWatcher>삭제 됩니다.</xref:System.IO.FileSystemWatcher> </xref:System.IO.FileSystemWatcher.Path%2A> </xref:System.IO.FileSystemWatcher.Deleted> 자세한 내용은 <xref:System.IO.FileSystemWatcher>.</xref:System.IO.FileSystemWatcher> 을 참조 하십시오."
  example:
  - "The following example shows how to create a <xref:System.IO.FileSystemWatcher> to monitor file changes (creates, deletes, renames, changes) occurring on a disk drive. The example also shows how to properly receive error notifications.  \n  \n [!code-cs[FileSystemWatcher#1](~/add/codesnippet/csharp/t-system.io.filesystemev_1_1.cs)]\n [!code-vb[FileSystemWatcher#1](~/add/codesnippet/visualbasic/t-system.io.filesystemev_1_1.vb)]"
  syntax:
    content: 'public class FileSystemEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.FileSystemEventArgs.#ctor(System.IO.WatcherChangeTypes,System.String,System.String)
  id: '#ctor(System.IO.WatcherChangeTypes,System.String,System.String)'
  parent: System.IO.FileSystemEventArgs
  langs:
  - csharp
  name: FileSystemEventArgs(WatcherChangeTypes,String,String)
  nameWithType: FileSystemEventArgs.FileSystemEventArgs(WatcherChangeTypes,String,String)
  fullName: System.IO.FileSystemEventArgs.FileSystemEventArgs(WatcherChangeTypes,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.FileSystemEventArgs&quot;> </xref> 클래스입니다."
  syntax:
    content: public FileSystemEventArgs (System.IO.WatcherChangeTypes changeType, string directory, string name);
    parameters:
    - id: changeType
      type: System.IO.WatcherChangeTypes
      description: "중 하나는 <xref href=&quot;System.IO.WatcherChangeTypes&quot;> </xref> 파일 시스템에서 발견 된 변경의 종류를 나타내는 값입니다."
    - id: directory
      type: System.String
      description: "영향을 받는 파일 또는 디렉터리의 루트 디렉터리입니다."
    - id: name
      type: System.String
      description: "영향을 받는 파일 또는 디렉터리의 이름입니다."
  overload: System.IO.FileSystemEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileSystemEventArgs.ChangeType
  id: ChangeType
  parent: System.IO.FileSystemEventArgs
  langs:
  - csharp
  name: ChangeType
  nameWithType: FileSystemEventArgs.ChangeType
  fullName: System.IO.FileSystemEventArgs.ChangeType
  type: Property
  assemblies:
  - System
  namespace: System.IO
  summary: "발생 한 디렉터리 이벤트의 유형을 가져옵니다."
  remarks: ''
  example:
  - "The following example demonstrates the ChangeType property. This code example is part of a larger example provided for the <xref:System.IO.FileSystemEventArgs> class.  \n  \n [!code-cs[FileSystemWatcher#7](~/add/codesnippet/csharp/p-system.io.filesystemev_1_1.cs)]\n [!code-vb[FileSystemWatcher#7](~/add/codesnippet/visualbasic/p-system.io.filesystemev_1_1.vb)]"
  syntax:
    content: public System.IO.WatcherChangeTypes ChangeType { get; }
    return:
      type: System.IO.WatcherChangeTypes
      description: "중 하나는 <xref href=&quot;System.IO.WatcherChangeTypes&quot;> </xref> 파일 시스템에서 발견 된 변경의 종류를 나타내는 값입니다."
  overload: System.IO.FileSystemEventArgs.ChangeType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileSystemEventArgs.FullPath
  id: FullPath
  parent: System.IO.FileSystemEventArgs
  langs:
  - csharp
  name: FullPath
  nameWithType: FileSystemEventArgs.FullPath
  fullName: System.IO.FileSystemEventArgs.FullPath
  type: Property
  assemblies:
  - System
  namespace: System.IO
  summary: "정규화 된 경로를 영향을 받는 파일 또는 디렉터리를 가져옵니다."
  remarks: ''
  example:
  - "The following example demonstrates the FullPath property. This code example is part of a larger example provided for the <xref:System.IO.FileSystemEventArgs> class.  \n  \n [!code-cs[FileSystemWatcher#7](~/add/codesnippet/csharp/p-system.io.filesystemev_0_1.cs)]\n [!code-vb[FileSystemWatcher#7](~/add/codesnippet/visualbasic/p-system.io.filesystemev_0_1.vb)]"
  syntax:
    content: public string FullPath { get; }
    return:
      type: System.String
      description: "영향을 받는 파일 또는 디렉터리의 경로입니다."
  overload: System.IO.FileSystemEventArgs.FullPath*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileSystemEventArgs.Name
  id: Name
  parent: System.IO.FileSystemEventArgs
  langs:
  - csharp
  name: Name
  nameWithType: FileSystemEventArgs.Name
  fullName: System.IO.FileSystemEventArgs.Name
  type: Property
  assemblies:
  - System
  namespace: System.IO
  summary: "영향을 받는 파일 또는 디렉터리의 이름을 가져옵니다."
  remarks: "Name 속성에서 반환 되는 영향을 받는 파일 또는 조사 중인 디렉터리를 기준으로 디렉터리의 상대 경로입니다. 예를 들어 경우는 <xref:System.IO.FileSystemWatcher>&quot;C:\\temp&quot; 디렉터리 및 파일 &quot;C:\\temp\\test\\file.txt&quot; 변경 사항에 개체를 감시 하는, Name 속성은 &quot;test\\file.txt&quot;를 반환 합니다.</xref:System.IO.FileSystemWatcher>"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "영향을 받는 파일 또는 디렉터리의 이름입니다."
  overload: System.IO.FileSystemEventArgs.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.IO.FileSystemEventArgs.#ctor(System.IO.WatcherChangeTypes,System.String,System.String)
  parent: System.IO.FileSystemEventArgs
  isExternal: false
  name: FileSystemEventArgs(WatcherChangeTypes,String,String)
  nameWithType: FileSystemEventArgs.FileSystemEventArgs(WatcherChangeTypes,String,String)
  fullName: System.IO.FileSystemEventArgs.FileSystemEventArgs(WatcherChangeTypes,String,String)
- uid: System.IO.WatcherChangeTypes
  parent: System.IO
  isExternal: false
  name: WatcherChangeTypes
  nameWithType: WatcherChangeTypes
  fullName: System.IO.WatcherChangeTypes
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.FileSystemEventArgs.ChangeType
  parent: System.IO.FileSystemEventArgs
  isExternal: false
  name: ChangeType
  nameWithType: FileSystemEventArgs.ChangeType
  fullName: System.IO.FileSystemEventArgs.ChangeType
- uid: System.IO.FileSystemEventArgs.FullPath
  parent: System.IO.FileSystemEventArgs
  isExternal: false
  name: FullPath
  nameWithType: FileSystemEventArgs.FullPath
  fullName: System.IO.FileSystemEventArgs.FullPath
- uid: System.IO.FileSystemEventArgs.Name
  parent: System.IO.FileSystemEventArgs
  isExternal: false
  name: Name
  nameWithType: FileSystemEventArgs.Name
  fullName: System.IO.FileSystemEventArgs.Name
- uid: System.IO.FileSystemEventArgs.#ctor*
  parent: System.IO.FileSystemEventArgs
  isExternal: false
  name: FileSystemEventArgs
  nameWithType: FileSystemEventArgs.FileSystemEventArgs
- uid: System.IO.FileSystemEventArgs.ChangeType*
  parent: System.IO.FileSystemEventArgs
  isExternal: false
  name: ChangeType
  nameWithType: FileSystemEventArgs.ChangeType
- uid: System.IO.FileSystemEventArgs.FullPath*
  parent: System.IO.FileSystemEventArgs
  isExternal: false
  name: FullPath
  nameWithType: FileSystemEventArgs.FullPath
- uid: System.IO.FileSystemEventArgs.Name*
  parent: System.IO.FileSystemEventArgs
  isExternal: false
  name: Name
  nameWithType: FileSystemEventArgs.Name
