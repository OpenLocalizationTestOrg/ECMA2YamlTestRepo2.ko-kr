### YamlMime:ManagedReference
items:
- uid: System.Net.WebProxy
  id: WebProxy
  children:
  - System.Net.WebProxy.#ctor
  - System.Net.WebProxy.#ctor(System.String)
  - System.Net.WebProxy.#ctor(System.Uri)
  - System.Net.WebProxy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.WebProxy.#ctor(System.String,System.Boolean)
  - System.Net.WebProxy.#ctor(System.String,System.Int32)
  - System.Net.WebProxy.#ctor(System.Uri,System.Boolean)
  - System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[])
  - System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[])
  - System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)
  - System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)
  - System.Net.WebProxy.Address
  - System.Net.WebProxy.BypassArrayList
  - System.Net.WebProxy.BypassList
  - System.Net.WebProxy.BypassProxyOnLocal
  - System.Net.WebProxy.Credentials
  - System.Net.WebProxy.GetDefaultProxy
  - System.Net.WebProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.WebProxy.GetProxy(System.Uri)
  - System.Net.WebProxy.IsBypassed(System.Uri)
  - System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.WebProxy.UseDefaultCredentials
  langs:
  - csharp
  name: WebProxy
  nameWithType: WebProxy
  fullName: System.Net.WebProxy
  type: Class
  summary: "<xref:System.Net.WebRequest>클래스</xref:System.Net.WebRequest> 에 대 한 HTTP 프록시 설정을 포함합니다."
  remarks: "웹 프록시 클래스를 사용 하는 프록시 설정을 포함 하는 <xref:System.Net.WebRequest>인스턴스 사용 하 여 웹 프록시 요청을 보내는 사용 되 고 있는지 확인 합니다.</xref:System.Net.WebRequest> 전역 웹 프록시 설정은 컴퓨터 및 응용 프로그램 구성 파일 및 응용 프로그램에서 지정할 수 있습니다 웹 프록시 클래스의 인스턴스 사용 웹 프록시 사용을 사용자 지정할 수 있습니다. 웹 프록시 클래스의 기본 구현인는 <xref:System.Net.IWebProxy>인터페이스.</xref:System.Net.IWebProxy>       웹 프록시 클래스의 인스턴스를 가져오려면 다음 메서드 중 아무 메서드나 사용할 수 있습니다.- <xref:System.Net.WebProxy.%23ctor%2A>생성자.</xref:System.Net.WebProxy.%23ctor%2A>      - <xref:System.Net.WebProxy.GetDefaultProxy%2A>메서드.</xref:System.Net.WebProxy.GetDefaultProxy%2A>      - <xref:System.Net.GlobalProxySelection.Select%2A>메서드.</xref:System.Net.GlobalProxySelection.Select%2A>       이러한 메서드는 각각 제공 하는 WebProxy 인스턴스를 추가로 사용자 지정할 수 있습니다. 값이 서로 다르면 응용 프로그램에 반환 하기 전에 인스턴스는 초기화 하는 방법입니다. <xref:System.Net.WebProxy.%23ctor%2A>된 웹 프록시 클래스의 인스턴스를 반환 하는 생성자는 <xref:System.Net.WebProxy.Address%2A>속성이로 설정 `null`.</xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy.%23ctor%2A> WebProxy 인스턴스를 사용 하 여이 상태는 요청을 프록시가 요청을 보내는 데 사용 됩니다.       <xref:System.Net.WebProxy.GetDefaultProxy%2A>된 웹 프록시 클래스의 인스턴스를 반환 하는 메서드는 <xref:System.Net.WebProxy.Address%2A>, <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>, 및 <xref:System.Net.WebProxy.BypassList%2A>속성이 사용 되는 Internet Explorer 5.5 이상 값으로 설정 합니다.</xref:System.Net.WebProxy.BypassList%2A> </xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy.GetDefaultProxy%2A>       <xref:System.Net.GlobalProxySelection.Select%2A>메서드 속성이 Internet Explorer 및 구성 파일 설정의 조합에 따라 설정 된 웹 프록시 클래스의 인스턴스를 반환 합니다.</xref:System.Net.GlobalProxySelection.Select%2A>       웹 프록시 클래스를 사용 하는 자동 검색 및 프록시 구성 스크립트의 실행을 지원합니다. 이 기능은 웹 프록시 자동 검색 (WPAD)이 라고도 합니다. 자동 프록시 구성을 사용 하는 경우 일반적으로 Wpad.dat, 명명 된, 구성 스크립트 해야 수 있는, 다운로드, 컴파일되고 실행 됩니다. 이러한 작업은 성공, 스크립트 요청에 대해 사용할 수 있는 프록시를 반환 합니다."
  example:
  - "The following code example assigns a WebProxy instance to a <xref:System.Net.WebRequest> instance. The <xref:System.Net.WebRequest> instance uses the proxy to connect to external Internet resources. (For an example that demonstrates using the WPAD feature, see the documentation for the <xref:System.Net.IWebProxyScript> class.)  \n  \n [!code-cpp[Classic WebProxy Example#1](~/add/codesnippet/cpp/t-system.net.webproxy_1.cpp)]\n [!code-vb[Classic WebProxy Example#1](~/add/codesnippet/visualbasic/t-system.net.webproxy_1.vb)]\n [!code-cs[Classic WebProxy Example#1](~/add/codesnippet/csharp/t-system.net.webproxy_1.cs)]"
  syntax:
    content: 'public class WebProxy : System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor
  id: '#ctor'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy()
  nameWithType: WebProxy.WebProxy()
  fullName: System.Net.WebProxy.WebProxy()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "빈 인스턴스를 초기화는 <xref href=&quot;System.Net.WebProxy&quot;> </xref> 클래스입니다."
  remarks: "기본 생성자의 빈 인스턴스를 초기화 합니다.는 <xref:System.Net.WebProxy>클래스와 <xref:System.Net.WebProxy.Address%2A>속성이로 설정 `null`.</xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>       경우는 <xref:System.Net.WebProxy.Address%2A>속성은 `null`, <xref:System.Net.WebProxy.IsBypassed%2A>메서드 반환 `true` 및 <xref:System.Net.WebProxy.GetProxy%2A>메서드 대상 주소를 반환 합니다.</xref:System.Net.WebProxy.GetProxy%2A> </xref:System.Net.WebProxy.IsBypassed%2A> </xref:System.Net.WebProxy.Address%2A>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#1](~/add/codesnippet/cpp/m-system.net.webproxy.sh_3_1.cpp)]\n [!code-cs[NCLWebProxy#1](~/add/codesnippet/csharp/m-system.net.webproxy.sh_3_1.cs)]"
  syntax:
    content: public WebProxy ();
    parameters: []
  overload: System.Net.WebProxy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(String)
  nameWithType: WebProxy.WebProxy(String)
  fullName: System.Net.WebProxy.WebProxy(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.WebProxy&quot;> </xref> URI가 지정된 된 클래스입니다."
  remarks: "<xref:System.Net.WebProxy>이 <xref:System.Net.WebProxy.Address%2A>속성이로 설정 된 <xref:System.Uri>인스턴스를 포함 하 `Address`.</xref:System.Uri> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#6](~/add/codesnippet/cpp/m-system.net.webproxy.sh_1_1.cpp)]\n [!code-cs[NCLWebProxy#6](~/add/codesnippet/csharp/m-system.net.webproxy.sh_1_1.cs)]"
  syntax:
    content: public WebProxy (string Address);
    parameters:
    - id: Address
      type: System.String
      description: "프록시 서버의 URI입니다."
  overload: System.Net.WebProxy.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>Address</code> 잘못 된 URI입니다."
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(Uri)
  nameWithType: WebProxy.WebProxy(Uri)
  fullName: System.Net.WebProxy.WebProxy(Uri)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.WebProxy&quot;> </xref> 클래스 지정 된 위치에서 <xref:System.Uri>인스턴스.</xref:System.Uri>"
  remarks: "<xref:System.Net.WebProxy>이 <xref:System.Net.WebProxy.Address%2A>속성이로 설정 된 `Address` 매개 변수.</xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#2](~/add/codesnippet/cpp/m-system.net.webproxy.sh_0_1.cpp)]\n [!code-cs[NCLWebProxy#2](~/add/codesnippet/csharp/m-system.net.webproxy.sh_0_1.cs)]"
  syntax:
    content: public WebProxy (Uri Address);
    parameters:
    - id: Address
      type: System.Uri
      description: "A <xref:System.Uri>프록시 서버의 주소를 포함 하는 인스턴스.</xref:System.Uri>"
  overload: System.Net.WebProxy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(SerializationInfo,StreamingContext)
  nameWithType: WebProxy.WebProxy(SerializationInfo,StreamingContext)
  fullName: System.Net.WebProxy.WebProxy(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "인스턴스를 초기화는 <xref href=&quot;System.Net.WebProxy&quot;> </xref> 클래스 이전에 직렬화 된 콘텐츠를 사용 합니다."
  remarks: "이 메서드는 시스템에서 a <xref:System.Net.WebProxy>인스턴스; 응용 프로그램 호출 합니다.</xref:System.Net.WebProxy>"
  syntax:
    content: protected WebProxy (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "Serialization 데이터입니다."
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: "Serialize 된 데이터에 대 한 컨텍스트입니다."
  overload: System.Net.WebProxy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(String,Boolean)
  nameWithType: WebProxy.WebProxy(String,Boolean)
  fullName: System.Net.WebProxy.WebProxy(String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.WebProxy&quot;> </xref> 된 지정된 된 URI 및 설정을 무시 합니다."
  remarks: "<xref:System.Net.WebProxy>인스턴스를 초기화할는 <xref:System.Net.WebProxy.Address%2A>속성이로 설정 된 <xref:System.Uri>포함 된 인스턴스 `Address` 및 <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>속성이로 설정 `BypassOnLocal`.</xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Uri> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#7](~/add/codesnippet/cpp/m-system.net.webproxy.sh_4_1.cpp)]\n [!code-cs[NCLWebProxy#7](~/add/codesnippet/csharp/m-system.net.webproxy.sh_4_1.cs)]"
  syntax:
    content: public WebProxy (string Address, bool BypassOnLocal);
    parameters:
    - id: Address
      type: System.String
      description: "프록시 서버의 URI입니다."
    - id: BypassOnLocal
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>로컬 주소;에 대 한 프록시를 무시 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.WebProxy.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>Address</code> 잘못 된 URI입니다."
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(String,Int32)
  nameWithType: WebProxy.WebProxy(String,Int32)
  fullName: System.Net.WebProxy.WebProxy(String,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.WebProxy&quot;> </xref> 된 지정 된 호스트 및 포트 번호입니다."
  remarks: '<xref:System.Net.WebProxy>이 <xref:System.Net.WebProxy.Address%2A>속성이로 설정 된 <xref:System.Uri>http://의 인스턴스 `Host` : `Port`.</xref:System.Uri> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>'
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#5](~/add/codesnippet/cpp/m-system.net.webproxy.sh_6_1.cpp)]\n [!code-cs[NCLWebProxy#5](~/add/codesnippet/csharp/m-system.net.webproxy.sh_6_1.cs)]"
  syntax:
    content: public WebProxy (string Host, int Port);
    parameters:
    - id: Host
      type: System.String
      description: "프록시 호스트의 이름입니다."
    - id: Port
      type: System.Int32
      description: "에 포트 번호 `Host` 사용 하도록 합니다."
  overload: System.Net.WebProxy.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "결합 하 여 만든 URI <code> Host </code> 및 <code> Port </code> 유효한 URI가 아닙니다."
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.Uri,System.Boolean)
  id: '#ctor(System.Uri,System.Boolean)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(Uri,Boolean)
  nameWithType: WebProxy.WebProxy(Uri,Boolean)
  fullName: System.Net.WebProxy.WebProxy(Uri,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.WebProxy&quot;> </xref> 클래스와 <xref:System.Uri>인스턴스 및 설정을 무시 합니다.</xref:System.Uri>"
  remarks: "<xref:System.Net.WebProxy>인스턴스가 초기화 되는 <xref:System.Net.WebProxy.Address%2A>속성이로 설정 `Address` 와 <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>속성이로 설정 `BypassOnLocal`.</xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#3](~/add/codesnippet/cpp/m-system.net.webproxy.sh_7_1.cpp)]\n [!code-cs[NCLWebProxy#3](~/add/codesnippet/csharp/m-system.net.webproxy.sh_7_1.cs)]"
  syntax:
    content: public WebProxy (Uri Address, bool BypassOnLocal);
    parameters:
    - id: Address
      type: System.Uri
      description: "A <xref:System.Uri>프록시 서버의 주소를 포함 하는 인스턴스.</xref:System.Uri>"
    - id: BypassOnLocal
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>로컬 주소;에 대 한 프록시를 무시 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.WebProxy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[])
  id: '#ctor(System.String,System.Boolean,System.String[])'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(String,Boolean,String[])
  nameWithType: WebProxy.WebProxy(String,Boolean,String[])
  fullName: System.Net.WebProxy.WebProxy(String,Boolean,String[])
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.WebProxy&quot;> </xref> 된 지정 된 URI, 사용 안 함, 설정 및 사용 하지 않으려면 Uri 목록입니다."
  remarks: "<xref:System.Net.WebProxy>인스턴스가 초기화 되는 <xref:System.Net.WebProxy.Address%2A>속성이로 설정는 <xref:System.Uri>포함 된 인스턴스 `Address`, <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>속성이로 설정 `BypassOnLocal`, 및 <xref:System.Net.WebProxy.BypassList%2A>속성이로 설정 `BypassList`.</xref:System.Net.WebProxy.BypassList%2A> </xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Uri> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#8](~/add/codesnippet/cpp/m-system.net.webproxy.sh_2_1.cpp)]\n [!code-cs[NCLWebProxy#8](~/add/codesnippet/csharp/m-system.net.webproxy.sh_2_1.cs)]"
  syntax:
    content: public WebProxy (string Address, bool BypassOnLocal, string[] BypassList);
    parameters:
    - id: Address
      type: System.String
      description: "프록시 서버의 URI입니다."
    - id: BypassOnLocal
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>로컬 주소;에 대 한 프록시를 무시 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: BypassList
      type: System.String[]
      description: "사용 하지 않을 서버의 Uri를 포함 하는 정규식 문자열의 배열입니다."
  overload: System.Net.WebProxy.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>Address</code> 잘못 된 URI입니다."
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[])
  id: '#ctor(System.Uri,System.Boolean,System.String[])'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(Uri,Boolean,String[])
  nameWithType: WebProxy.WebProxy(Uri,Boolean,String[])
  fullName: System.Net.WebProxy.WebProxy(Uri,Boolean,String[])
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.WebProxy&quot;> </xref> 지정된 된 <xref:System.Uri>인스턴스, 사용 안 함, 설정 및 사용 하지 않으려면 Uri 목록입니다.</xref:System.Uri>"
  remarks: "<xref:System.Net.WebProxy>인스턴스가 초기화 되는 <xref:System.Net.WebProxy.Address%2A>속성이로 설정 `Address`, <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>속성이로 설정 `BypassOnLocal`, 및 <xref:System.Net.WebProxy.BypassList%2A>속성이로 설정 `BypassList`.</xref:System.Net.WebProxy.BypassList%2A> </xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#4](~/add/codesnippet/cpp/m-system.net.webproxy.sh_5_1.cpp)]\n [!code-cs[NCLWebProxy#4](~/add/codesnippet/csharp/m-system.net.webproxy.sh_5_1.cs)]"
  syntax:
    content: public WebProxy (Uri Address, bool BypassOnLocal, string[] BypassList);
    parameters:
    - id: Address
      type: System.Uri
      description: "A <xref:System.Uri>프록시 서버의 주소를 포함 하는 인스턴스.</xref:System.Uri>"
    - id: BypassOnLocal
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>로컬 주소;에 대 한 프록시를 무시 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: BypassList
      type: System.String[]
      description: "사용 하지 않을 서버 Uri가 포함 된 정규식 문자열의 배열입니다."
  overload: System.Net.WebProxy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)
  id: '#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(String,Boolean,String[],ICredentials)
  nameWithType: WebProxy.WebProxy(String,Boolean,String[],ICredentials)
  fullName: System.Net.WebProxy.WebProxy(String,Boolean,String[],ICredentials)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.WebProxy&quot;> </xref> URI가 지정된 된 클래스, 바이패스 목록 Uri 및 자격 증명을 설정 합니다."
  remarks: "<xref:System.Net.WebProxy>인스턴스가 초기화 되는 <xref:System.Net.WebProxy.Address%2A>속성이로 설정는 <xref:System.Uri>포함 된 인스턴스 `Address`, <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>속성이로 설정 `BypassOnLocal`, <xref:System.Net.WebProxy.BypassList%2A>속성이로 설정 `BypassList`, 및 <xref:System.Net.WebProxy.Credentials%2A>속성이로 설정 `Credentials`.</xref:System.Net.WebProxy.Credentials%2A> </xref:System.Net.WebProxy.BypassList%2A> </xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Uri> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#9](~/add/codesnippet/cpp/25929c39-89a2-4ac3-bf8d-_1.cpp)]\n [!code-cs[NCLWebProxy#9](~/add/codesnippet/csharp/25929c39-89a2-4ac3-bf8d-_1.cs)]"
  syntax:
    content: public WebProxy (string Address, bool BypassOnLocal, string[] BypassList, System.Net.ICredentials Credentials);
    parameters:
    - id: Address
      type: System.String
      description: "프록시 서버의 URI입니다."
    - id: BypassOnLocal
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>로컬 주소;에 대 한 프록시를 무시 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: BypassList
      type: System.String[]
      description: "사용 하지 않을 서버 Uri가 포함 된 정규식 문자열의 배열입니다."
    - id: Credentials
      type: System.Net.ICredentials
      description: "<xref:System.Net.ICredentials>인증을 위해 프록시 서버에 제출할.</xref:System.Net.ICredentials>"
  overload: System.Net.WebProxy.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>Address</code> 잘못 된 URI입니다."
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)
  id: '#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(Uri,Boolean,String[],ICredentials)
  nameWithType: WebProxy.WebProxy(Uri,Boolean,String[],ICredentials)
  fullName: System.Net.WebProxy.WebProxy(Uri,Boolean,String[],ICredentials)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.WebProxy&quot;> </xref> 지정된 된 <xref:System.Uri>인스턴스, 바이패스 목록 Uri 및 자격 증명을 설정 합니다.</xref:System.Uri>"
  remarks: "<xref:System.Net.WebProxy>인스턴스가 초기화 되는 <xref:System.Net.WebProxy.Address%2A>속성이로 설정 `Address`, <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>속성이로 설정 `BypassOnLocal`, <xref:System.Net.WebProxy.BypassList%2A>속성이로 설정 `BypassList`, 및 <xref:System.Net.WebProxy.Credentials%2A>속성이로 설정 `Credentials`.</xref:System.Net.WebProxy.Credentials%2A> </xref:System.Net.WebProxy.BypassList%2A> </xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#13](~/add/codesnippet/cpp/35b6ace3-e60e-4d11-a417-_1.cpp)]\n [!code-cs[NCLWebProxy#13](~/add/codesnippet/csharp/35b6ace3-e60e-4d11-a417-_1.cs)]"
  syntax:
    content: public WebProxy (Uri Address, bool BypassOnLocal, string[] BypassList, System.Net.ICredentials Credentials);
    parameters:
    - id: Address
      type: System.Uri
      description: "A <xref:System.Uri>프록시 서버의 주소를 포함 하는 인스턴스.</xref:System.Uri>"
    - id: BypassOnLocal
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>로컬 주소;에 대 한 프록시를 무시 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: BypassList
      type: System.String[]
      description: "사용 하지 않을 서버 Uri가 포함 된 정규식 문자열의 배열입니다."
    - id: Credentials
      type: System.Net.ICredentials
      description: "<xref:System.Net.ICredentials>인증을 위해 프록시 서버에 제출할.</xref:System.Net.ICredentials>"
  overload: System.Net.WebProxy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.Address
  id: Address
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: Address
  nameWithType: WebProxy.Address
  fullName: System.Net.WebProxy.Address
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "프록시 서버의 주소를 가져오거나 설정 합니다."
  remarks: "Address 속성에서 프록시 서버 주소를 포함합니다. 프록시 자동 검색을 사용 하지 않는 자동 구성 스크립트가 지정 된 시점과, Address 속성 및 <xref:System.Net.WebProxy.BypassList%2A>요청에 사용 되는 프록시를 결정 합니다.</xref:System.Net.WebProxy.BypassList%2A>       주소 속성이 `null`, 요청이 프록시를 우회 하 고 대상 호스트에 직접 연결 합니다."
  example:
  - "The following code example displays the properties of a <xref:System.Net.WebProxy> object, including its Address.  \n  \n [!code-cs[NCLAutoProxy#1](~/add/codesnippet/csharp/p-system.net.webproxy.ad_1.cs)]\n [!code-cpp[NCLAutoProxy#1](~/add/codesnippet/cpp/p-system.net.webproxy.ad_1.cpp)]"
  syntax:
    content: public Uri Address { get; set; }
    return:
      type: System.Uri
      description: "A <xref:System.Uri>프록시 서버의 주소를 포함 하는 인스턴스.</xref:System.Uri>"
  overload: System.Net.WebProxy.Address*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.BypassArrayList
  id: BypassArrayList
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: BypassArrayList
  nameWithType: WebProxy.BypassArrayList
  fullName: System.Net.WebProxy.BypassArrayList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "프록시 서버를 사용 하지 않는 주소의 목록을 가져옵니다."
  remarks: "<xref:System.Net.WebProxy.BypassList%2A>Uri를 설명 하는 정규식 문자열의 배열 목록입니다는 <xref:System.Net.WebRequest>인스턴스 프록시 서버를 통해 대신 직접 액세스 합니다.</xref:System.Net.WebRequest> </xref:System.Net.WebProxy.BypassList%2A>"
  syntax:
    content: public System.Collections.ArrayList BypassArrayList { get; }
    return:
      type: System.Collections.ArrayList
      description: "<xref href=&quot;System.Collections.ArrayList&quot;> </xref> 의 목록이 들어 있는 <xref:System.Net.WebProxy.BypassList*>액세스할 때 프록시 서버를 사용 하지 않는 Uri를 나타내는 배열입니다.</xref:System.Net.WebProxy.BypassList*>"
  overload: System.Net.WebProxy.BypassArrayList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.BypassList
  id: BypassList
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: BypassList
  nameWithType: WebProxy.BypassList
  fullName: System.Net.WebProxy.BypassList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "프록시 서버를 사용 하지 않는 주소의 배열을 가져오거나 설정 합니다."
  remarks: "BypassList 속성 Uri를 설명 하는 정규식의 배열을 포함 하는 <xref:System.Net.WebRequest>인스턴스 프록시 서버를 통해 대신 직접 액세스 합니다.</xref:System.Net.WebRequest>"
  example:
  - "The following code example displays the properties of a <xref:System.Net.WebProxy> object, including its BypassList property.  \n  \n [!code-cs[NCLAutoProxy#1](~/add/codesnippet/csharp/p-system.net.webproxy.by_0_1.cs)]\n [!code-cpp[NCLAutoProxy#1](~/add/codesnippet/cpp/p-system.net.webproxy.by_0_1.cpp)]"
  syntax:
    content: public string[] BypassList { get; set; }
    return:
      type: System.String[]
      description: "에 액세스할 때 프록시 서버를 사용 하지 않는 Uri에 설명 하는 일반 식의 목록을 포함 하는 배열입니다."
  overload: System.Net.WebProxy.BypassList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.BypassProxyOnLocal
  id: BypassProxyOnLocal
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: BypassProxyOnLocal
  nameWithType: WebProxy.BypassProxyOnLocal
  fullName: System.Net.WebProxy.BypassProxyOnLocal
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "로컬 주소에 프록시 서버를 무시할지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "BypassProxyOnLocal 속성 설정은 결정 여부 <xref:System.Net.WebRequest>인스턴스 로컬 인터넷 리소스에 액세스할 때 프록시 서버를 사용 합니다.</xref:System.Net.WebRequest>       BypassProxyOnLocal 이면 `true`, 로컬 인터넷 리소스에는 요청이 프록시 서버를 사용 하지 않습니다. 로컬 요청 http://webserver/, 에서처럼 URI에 마침표 (.)으로 식별 하거나 http://localhost, http://loopback, 또는 http://127.0.0.1를 포함 하 여 로컬 서버에 액세스 합니다. BypassProxyOnLocal 다음과 같은 경우 `false`, 모든 인터넷 요청이 프록시 서버를 통해 이루어집니다.      > [!NOTE] > 요청을 로컬 호스트 URI와 마침표를 포함 하는 프록시를 사용 합니다. 이러한 경우에는 프록시를 사용 하 여 사용 하지 않으려면 <xref:System.Net.WebProxy.BypassList%2A>.</xref:System.Net.WebProxy.BypassList%2A> 호스트에 대 한 항목을 만듭니다"
  example:
  - "The following code example demonstrates calling a constructor that sets this property and getting the value of this property.  \n  \n [!code-cpp[NCLWebProxy#7](~/add/codesnippet/cpp/p-system.net.webproxy.by_1_1.cpp)]\n [!code-cs[NCLWebProxy#7](~/add/codesnippet/csharp/p-system.net.webproxy.by_1_1.cs)]"
  syntax:
    content: public bool BypassProxyOnLocal { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>로컬 주소;에 대해 프록시 서버를 무시 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.WebProxy.BypassProxyOnLocal*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.Credentials
  id: Credentials
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: Credentials
  nameWithType: WebProxy.Credentials
  fullName: System.Net.WebProxy.Credentials
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "인증을 위해 프록시 서버에 제출 하는 데 사용할 자격 증명을 가져오거나 설정 합니다."
  remarks: "자격 증명 속성에서 프록시 서버는 HTTP 407 (프록시 인증) 상태 코드에 대 한 응답에서에 보낼 인증 자격 증명을 포함 합니다. 대부분의 클라이언트 시나리오에서 사용 해야는 <xref:System.Net.CredentialCache.DefaultCredentials%2A>, 현재 로그온된 한 사용자의 자격 증명.</xref:System.Net.CredentialCache.DefaultCredentials%2A> 이 위해 설정 된 <xref:System.Net.WebProxy.UseDefaultCredentials%2A>속성을 `true` 이 속성을 설정 하는 대신.</xref:System.Net.WebProxy.UseDefaultCredentials%2A>      > [!NOTE] > 이외의 다른 자격 증명을 자격 증명 속성을 설정 하는 경우는 <xref:System.Net.CredentialCache.DefaultCredentials%2A>설정는 <xref:System.Net.WebProxy.UseDefaultCredentials%2A>속성을 `true` <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> 하면</xref:System.Net.WebProxy.UseDefaultCredentials%2A> </xref:System.Net.CredentialCache.DefaultCredentials%2A> 이 방지 하려면 자격 증명 속성을 설정 해야 하면 `null` 설정 하기 전에 <xref:System.Net.WebProxy.UseDefaultCredentials%2A>속성을 `true`.</xref:System.Net.WebProxy.UseDefaultCredentials%2A> 이 속성을 설정할 수 없습니다 마찬가지로, 값으로 <xref:System.Net.WebProxy.UseDefaultCredentials%2A>은 `true`.</xref:System.Net.WebProxy.UseDefaultCredentials%2A>"
  syntax:
    content: public System.Net.ICredentials Credentials { get; set; }
    return:
      type: System.Net.ICredentials
      description: "<xref:System.Net.ICredentials>인증에 대 한 프록시 서버에 제출할 자격 증명이 포함 된 인스턴스.</xref:System.Net.ICredentials>"
  overload: System.Net.WebProxy.Credentials*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 속성을 설정 하려고 한 경우는 <xref:System.Net.WebProxy.UseDefaultCredentials*>속성이로 설정 된 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Net.WebProxy.UseDefaultCredentials*>"
  platform:
  - net462
- uid: System.Net.WebProxy.GetDefaultProxy
  id: GetDefaultProxy
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: GetDefaultProxy()
  nameWithType: WebProxy.GetDefaultProxy()
  fullName: System.Net.WebProxy.GetDefaultProxy()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Internet Explorer nondynamic 프록시 설정을 읽습니다."
  remarks: "GetDefaultProxy 메서드 여 Internet Explorer 5.5 이상에서 저장 된 nondynamic 프록시 설정을 읽고 만듭니다는 <xref:System.Net.WebProxy>이러한 설정 사용 하 여 인스턴스.</xref:System.Net.WebProxy>       Internet Explorer에서 실행 하는 스크립트, 자동 구성 항목 또는 DHCP 또는 DNS 조회에서 생성 되는 모든 동적 설정을 GetDefaultProxy 메서드 적용 되지 않습니다.       응용 프로그램을 사용할지는 <xref:System.Net.WebRequest.DefaultWebProxy%2A?displayProperty=fullName>속성 및 <xref:System.Net.WebRequest.GetSystemWebProxy%2A?displayProperty=fullName>GetDefaultProxy 메서드 대신 메서드.</xref:System.Net.WebRequest.GetSystemWebProxy%2A?displayProperty=fullName> </xref:System.Net.WebRequest.DefaultWebProxy%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cpp[NCLWebProxy#11](~/add/codesnippet/cpp/m-system.net.webproxy.ge_0_1.cpp)]\n [!code-cs[NCLWebProxy#11](~/add/codesnippet/csharp/m-system.net.webproxy.ge_0_1.cs)]"
  syntax:
    content: public static System.Net.WebProxy GetDefaultProxy ();
    parameters: []
    return:
      type: System.Net.WebProxy
      description: "A <xref href=&quot;System.Net.WebProxy&quot;> </xref> 에서 Internet Explorer 5.5 이상 nondynamic 프록시 설정이 포함 된 인스턴스."
  overload: System.Net.WebProxy.GetDefaultProxy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: WebProxy.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.WebProxy.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "정보를 표시 한 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 대상 개체를 직렬화 하는 데 필요한 데이터를 사용 합니다."
  remarks: "에 포함 된 모든 개체는 <xref:System.Runtime.Serialization.SerializationInfo>자동으로 추적 되 고 직렬화 포맷터에 의해.</xref:System.Runtime.Serialization.SerializationInfo>"
  syntax:
    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 데이터로 채울 합니다."
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: "A <xref:System.Runtime.Serialization.StreamingContext>이 직렬화의 대상을 지정 하는.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Net.WebProxy.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.GetProxy(System.Uri)
  id: GetProxy(System.Uri)
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: GetProxy(Uri)
  nameWithType: WebProxy.GetProxy(Uri)
  fullName: System.Net.WebProxy.GetProxy(Uri)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "요청에 대 한 프록시 URI를 반환합니다."
  remarks: "GetProxy 메서드 URI를 반환 하는 <xref:System.Net.WebRequest>인스턴스 인터넷 리소스에 액세스를 사용 하 여.</xref:System.Net.WebRequest>       GetProxy 비교 `destination` 의 내용으로 <xref:System.Net.WebProxy.BypassList%2A>를 사용 하 여는 <xref:System.Net.WebProxy.IsBypassed%2A>메서드.</xref:System.Net.WebProxy.IsBypassed%2A> </xref:System.Net.WebProxy.BypassList%2A> 경우 <xref:System.Net.WebProxy.IsBypassed%2A>반환 `true`, GetProxy 반환 `destination` 및 <xref:System.Net.WebRequest>인스턴스가 프록시 서버를 사용 하지 않습니다.</xref:System.Net.WebRequest> </xref:System.Net.WebProxy.IsBypassed%2A>       경우 `destination` 에 속하지 않는 <xref:System.Net.WebProxy.BypassList%2A>, <xref:System.Net.WebRequest>프록시 서버를 사용 하는 인스턴스 및 <xref:System.Net.WebProxy.Address%2A>속성이 반환 됩니다.</xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebRequest> </xref:System.Net.WebProxy.BypassList%2A>"
  example:
  - "The following code example creates a <xref:System.Net.WebProxy> object and calls this method to get the proxy that is selected for a resource.  \n  \n [!code-cs[NCLAutoProxy#2](~/add/codesnippet/csharp/m-system.net.webproxy.ge_1_1.cs)]\n [!code-cpp[NCLAutoProxy#2](~/add/codesnippet/cpp/m-system.net.webproxy.ge_1_1.cpp)]"
  syntax:
    content: public Uri GetProxy (Uri destination);
    parameters:
    - id: destination
      type: System.Uri
      description: "<xref:System.Uri>요청된 된 인터넷 리소스의 인스턴스.</xref:System.Uri>"
    return:
      type: System.Uri
      description: "<xref:System.Uri>리소스가; 무시 목록에 있으면 인터넷 리소스의 인스턴스,는 <xref:System.Uri>프록시의 인스턴스.</xref:System.Uri> </xref:System.Uri>"
  overload: System.Net.WebProxy.GetProxy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destination</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebProxy.IsBypassed(System.Uri)
  id: IsBypassed(System.Uri)
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: IsBypassed(Uri)
  nameWithType: WebProxy.IsBypassed(Uri)
  fullName: System.Net.WebProxy.IsBypassed(Uri)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "지정된 된 호스트에 대 한 프록시 서버를 사용할지 여부를 나타냅니다."
  remarks: "인터넷 리소스에 액세스할 때 프록시 서버를 사용 하지 않을 것인지 결정 IsBypassed 메서드가 사용 됩니다.       <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>및 <xref:System.Net.WebProxy.BypassList%2A>IsBypassed 메서드의 반환 값을 제어 하는 속성.</xref:System.Net.WebProxy.BypassList%2A> </xref:System.Net.WebProxy.BypassProxyOnLocal%2A>       IsBypassed 반환 `true` 다음 조건에서:-경우 <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>은 `true` 및 `host` 로컬 URI입니다.</xref:System.Net.WebProxy.BypassProxyOnLocal%2A> 로컬 요청 uri에서 &quot;http://webserver/&quot;와 같이 마침표 (.)으로 식별 됩니다.      -If `host` <xref:System.Net.WebProxy.BypassList%2A>.</xref:System.Net.WebProxy.BypassList%2A> 정규식과 일치      -   If <xref:System.Net.WebProxy.Address%2A> is `null`.</xref:System.Net.WebProxy.Address%2A>       다른 모든 경우 `false`합니다."
  example:
  - "The following code example creates a <xref:System.Net.WebProxy> object and calls this method to check whether the bypass list is properly set.  \n  \n [!code-cpp[NCLWebProxy#12](~/add/codesnippet/cpp/m-system.net.webproxy.is_1.cpp)]\n [!code-cs[NCLWebProxy#12](~/add/codesnippet/csharp/m-system.net.webproxy.is_1.cs)]"
  syntax:
    content: public bool IsBypassed (Uri host);
    parameters:
    - id: host
      type: System.Uri
      description: "<xref:System.Uri>프록시 사용을 확인할 호스트의 인스턴스가.</xref:System.Uri>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>에 대 한 프록시 서버를 사용할 수 해야 하는 경우 <code> host </code>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.WebProxy.IsBypassed*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>host</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: WebProxy.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.WebProxy.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Serialization 데이터와 시스템에서 직렬화 하는 데 사용 되는 컨텍스트를 만듭니다는 <xref href=&quot;System.Net.WebProxy&quot;> </xref> 개체입니다."
  remarks: "시스템; 개체를 직렬화 하는 데이 메서드를 호출 합니다. 응용 프로그램 직접 호출 하지 않습니다 것입니다."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 데이터로 채울 개체입니다."
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: "A <xref:System.Runtime.Serialization.StreamingContext>이 직렬화의 대상을 나타내는 구조.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: UseDefaultCredentials
  nameWithType: WebProxy.UseDefaultCredentials
  fullName: System.Net.WebProxy.UseDefaultCredentials
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "가져오거나는 <xref:System.Boolean>여부를 제어 하 값은 <xref:System.Net.CredentialCache.DefaultCredentials*>요청과 함께 전송 됩니다.</xref:System.Net.CredentialCache.DefaultCredentials*> </xref:System.Boolean>"
  remarks: "이 속성을 설정 `true` 받았습니다 보내는 요청 <xref:System.Net.WebProxy>개체, 서버에 의해 요청 된 경우 인증 해야 현재 로그온된 한 사용자의 자격 증명을 사용 하 여.</xref:System.Net.WebProxy> 이 클라이언트 응용 프로그램에 대 한 대부분의 시나리오에서 원하는 동작 합니다. 이 속성을 사용 하는 대신 ASP.NET 응용 프로그램과 같은 중간 계층 응용 프로그램에 대 한 일반적으로 설정한는 <xref:System.Net.WebProxy.Credentials%2A>속성 대신 요청 클라이언트의 자격 증명을.</xref:System.Net.WebProxy.Credentials%2A>       다음 표에의 값에 따라 UseDefaultCredentials 값을 설정할 때의 효과 <xref:System.Net.WebProxy.Credentials%2A>속성.</xref:System.Net.WebProxy.Credentials%2A>      | <xref:System.Net.WebProxy.Credentials%2A>값 | UseDefaultCredentials 값 | 효과 |   |----------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|   | <xref:System.Net.CredentialCache.DefaultCredentials%2A>| `true`| 영향을 주지 않습니다. |   | <xref:System.Net.CredentialCache.DefaultCredentials%2A>| `false`| 로 설정 된 <xref:System.Net.WebProxy.Credentials%2A> `null`. |   | `null`|`true`|<xref:System.Net.WebProxy.Credentials%2A> is set to <xref:System.Net.CredentialCache.DefaultCredentials%2A>.|   | <xref:System.Net.CredentialCache.DefaultCredentials%2A>아닌 모든 값 또는 `null` | `true` 또는 `false`| 예외를 throw UseDefaultCredentials를 설정 합니다. |       UseDefaultCredentials 이면 `false`를 변경할 수는 <xref:System.Net.WebProxy.Credentials%2A>속성 자격 증명을.</xref:System.Net.WebProxy.Credentials%2A> </xref:System.Net.CredentialCache.DefaultCredentials%2A> </xref:System.Net.CredentialCache.DefaultCredentials%2A> </xref:System.Net.WebProxy.Credentials%2A> </xref:System.Net.WebProxy.Credentials%2A> </xref:System.Net.CredentialCache.DefaultCredentials%2A> </xref:System.Net.CredentialCache.DefaultCredentials%2A> </xref:System.Net.WebProxy.Credentials%2A> UseDefaultCredentials 이면 `true`변경는 <xref:System.Net.WebProxy.Credentials%2A>속성 <xref:System.Net.CredentialCache.DefaultCredentials%2A>(UseDefaultCredentials 속성이로 설정 된 경우 설정 된 값 `true`) 예외를 throw 합니다.</xref:System.Net.CredentialCache.DefaultCredentials%2A> </xref:System.Net.WebProxy.Credentials%2A>"
  syntax:
    content: public bool UseDefaultCredentials { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>기본 자격 증명; 사용 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.WebProxy.UseDefaultCredentials*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 속성을 설정 하려고 한 경우는 <xref:System.Net.WebProxy.Credentials*>기본 자격 증명이 아닌 다른 자격 증명을 포함 하는 속성.</xref:System.Net.WebProxy.Credentials*> 자세한 내용은 설명 섹션을 참조 합니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.WebProxy.#ctor
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy()
  nameWithType: WebProxy.WebProxy()
  fullName: System.Net.WebProxy.WebProxy()
- uid: System.Net.WebProxy.#ctor(System.String)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(String)
  nameWithType: WebProxy.WebProxy(String)
  fullName: System.Net.WebProxy.WebProxy(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.WebProxy.#ctor(System.Uri)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(Uri)
  nameWithType: WebProxy.WebProxy(Uri)
  fullName: System.Net.WebProxy.WebProxy(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.WebProxy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(SerializationInfo,StreamingContext)
  nameWithType: WebProxy.WebProxy(SerializationInfo,StreamingContext)
  fullName: System.Net.WebProxy.WebProxy(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Net.WebProxy.#ctor(System.String,System.Boolean)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(String,Boolean)
  nameWithType: WebProxy.WebProxy(String,Boolean)
  fullName: System.Net.WebProxy.WebProxy(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.WebProxy.#ctor(System.String,System.Int32)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(String,Int32)
  nameWithType: WebProxy.WebProxy(String,Int32)
  fullName: System.Net.WebProxy.WebProxy(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.WebProxy.#ctor(System.Uri,System.Boolean)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(Uri,Boolean)
  nameWithType: WebProxy.WebProxy(Uri,Boolean)
  fullName: System.Net.WebProxy.WebProxy(Uri,Boolean)
- uid: System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[])
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(String,Boolean,String[])
  nameWithType: WebProxy.WebProxy(String,Boolean,String[])
  fullName: System.Net.WebProxy.WebProxy(String,Boolean,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[])
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(Uri,Boolean,String[])
  nameWithType: WebProxy.WebProxy(Uri,Boolean,String[])
  fullName: System.Net.WebProxy.WebProxy(Uri,Boolean,String[])
- uid: System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(String,Boolean,String[],ICredentials)
  nameWithType: WebProxy.WebProxy(String,Boolean,String[],ICredentials)
  fullName: System.Net.WebProxy.WebProxy(String,Boolean,String[],ICredentials)
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(Uri,Boolean,String[],ICredentials)
  nameWithType: WebProxy.WebProxy(Uri,Boolean,String[],ICredentials)
  fullName: System.Net.WebProxy.WebProxy(Uri,Boolean,String[],ICredentials)
- uid: System.Net.WebProxy.Address
  parent: System.Net.WebProxy
  isExternal: false
  name: Address
  nameWithType: WebProxy.Address
  fullName: System.Net.WebProxy.Address
- uid: System.Net.WebProxy.BypassArrayList
  parent: System.Net.WebProxy
  isExternal: false
  name: BypassArrayList
  nameWithType: WebProxy.BypassArrayList
  fullName: System.Net.WebProxy.BypassArrayList
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Net.WebProxy.BypassList
  parent: System.Net.WebProxy
  isExternal: false
  name: BypassList
  nameWithType: WebProxy.BypassList
  fullName: System.Net.WebProxy.BypassList
- uid: System.Net.WebProxy.BypassProxyOnLocal
  parent: System.Net.WebProxy
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WebProxy.BypassProxyOnLocal
  fullName: System.Net.WebProxy.BypassProxyOnLocal
- uid: System.Net.WebProxy.Credentials
  parent: System.Net.WebProxy
  isExternal: false
  name: Credentials
  nameWithType: WebProxy.Credentials
  fullName: System.Net.WebProxy.Credentials
- uid: System.Net.WebProxy.GetDefaultProxy
  parent: System.Net.WebProxy
  isExternal: false
  name: GetDefaultProxy()
  nameWithType: WebProxy.GetDefaultProxy()
  fullName: System.Net.WebProxy.GetDefaultProxy()
- uid: System.Net.WebProxy
  parent: System.Net
  isExternal: false
  name: WebProxy
  nameWithType: WebProxy
  fullName: System.Net.WebProxy
- uid: System.Net.WebProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.WebProxy
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: WebProxy.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.WebProxy.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.WebProxy.GetProxy(System.Uri)
  parent: System.Net.WebProxy
  isExternal: false
  name: GetProxy(Uri)
  nameWithType: WebProxy.GetProxy(Uri)
  fullName: System.Net.WebProxy.GetProxy(Uri)
- uid: System.Net.WebProxy.IsBypassed(System.Uri)
  parent: System.Net.WebProxy
  isExternal: false
  name: IsBypassed(Uri)
  nameWithType: WebProxy.IsBypassed(Uri)
  fullName: System.Net.WebProxy.IsBypassed(Uri)
- uid: System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.WebProxy
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: WebProxy.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.WebProxy.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.WebProxy.UseDefaultCredentials
  parent: System.Net.WebProxy
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: WebProxy.UseDefaultCredentials
  fullName: System.Net.WebProxy.UseDefaultCredentials
- uid: System.Net.WebProxy.#ctor*
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy
  nameWithType: WebProxy.WebProxy
- uid: System.Net.WebProxy.Address*
  parent: System.Net.WebProxy
  isExternal: false
  name: Address
  nameWithType: WebProxy.Address
- uid: System.Net.WebProxy.BypassArrayList*
  parent: System.Net.WebProxy
  isExternal: false
  name: BypassArrayList
  nameWithType: WebProxy.BypassArrayList
- uid: System.Net.WebProxy.BypassList*
  parent: System.Net.WebProxy
  isExternal: false
  name: BypassList
  nameWithType: WebProxy.BypassList
- uid: System.Net.WebProxy.BypassProxyOnLocal*
  parent: System.Net.WebProxy
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WebProxy.BypassProxyOnLocal
- uid: System.Net.WebProxy.Credentials*
  parent: System.Net.WebProxy
  isExternal: false
  name: Credentials
  nameWithType: WebProxy.Credentials
- uid: System.Net.WebProxy.GetDefaultProxy*
  parent: System.Net.WebProxy
  isExternal: false
  name: GetDefaultProxy
  nameWithType: WebProxy.GetDefaultProxy
- uid: System.Net.WebProxy.GetObjectData*
  parent: System.Net.WebProxy
  isExternal: false
  name: GetObjectData
  nameWithType: WebProxy.GetObjectData
- uid: System.Net.WebProxy.GetProxy*
  parent: System.Net.WebProxy
  isExternal: false
  name: GetProxy
  nameWithType: WebProxy.GetProxy
- uid: System.Net.WebProxy.IsBypassed*
  parent: System.Net.WebProxy
  isExternal: false
  name: IsBypassed
  nameWithType: WebProxy.IsBypassed
- uid: System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Net.WebProxy
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: WebProxy.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Net.WebProxy.UseDefaultCredentials*
  parent: System.Net.WebProxy
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: WebProxy.UseDefaultCredentials
