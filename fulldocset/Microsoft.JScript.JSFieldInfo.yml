### YamlMime:ManagedReference
items:
- uid: Microsoft.JScript.JSFieldInfo
  id: JSFieldInfo
  children:
  - Microsoft.JScript.JSFieldInfo.Attributes
  - Microsoft.JScript.JSFieldInfo.DeclaringType
  - Microsoft.JScript.JSFieldInfo.FieldHandle
  - Microsoft.JScript.JSFieldInfo.FieldType
  - Microsoft.JScript.JSFieldInfo.GetCustomAttributes(System.Boolean)
  - Microsoft.JScript.JSFieldInfo.GetCustomAttributes(System.Type,System.Boolean)
  - Microsoft.JScript.JSFieldInfo.GetValue(System.Object)
  - Microsoft.JScript.JSFieldInfo.IsDefined(System.Type,System.Boolean)
  - Microsoft.JScript.JSFieldInfo.MemberType
  - Microsoft.JScript.JSFieldInfo.Name
  - Microsoft.JScript.JSFieldInfo.ReflectedType
  - Microsoft.JScript.JSFieldInfo.SetValue(System.Object,System.Object)
  - Microsoft.JScript.JSFieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)
  langs:
  - csharp
  name: JSFieldInfo
  nameWithType: JSFieldInfo
  fullName: Microsoft.JScript.JSFieldInfo
  type: Class
  summary: "래핑하는 <xref:System.Reflection.FieldInfo>개체입니다.</xref:System.Reflection.FieldInfo>"
  syntax:
    content: 'public sealed class JSFieldInfo : System.Reflection.FieldInfo'
  inheritance:
  - System.Reflection.FieldInfo
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.JScript.JSFieldInfo.Attributes
  id: Attributes
  parent: Microsoft.JScript.JSFieldInfo
  langs:
  - csharp
  name: Attributes
  nameWithType: JSFieldInfo.Attributes
  fullName: Microsoft.JScript.JSFieldInfo.Attributes
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "이 필드와 연결 된 특성을 가져옵니다."
  syntax:
    content: public override System.Reflection.FieldAttributes Attributes { get; }
    return:
      type: System.Reflection.FieldAttributes
      description: "열거형 값의 비트 조합입니다."
  overload: Microsoft.JScript.JSFieldInfo.Attributes*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.JSFieldInfo.DeclaringType
  id: DeclaringType
  parent: Microsoft.JScript.JSFieldInfo
  langs:
  - csharp
  name: DeclaringType
  nameWithType: JSFieldInfo.DeclaringType
  fullName: Microsoft.JScript.JSFieldInfo.DeclaringType
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "이 필드를 선언 하는 형식을 가져옵니다."
  syntax:
    content: public override Type DeclaringType { get; }
    return:
      type: System.Type
      description: "<xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref> 이 멤버를 선언 하는 클래스에 대 한 개체입니다."
  overload: Microsoft.JScript.JSFieldInfo.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.JSFieldInfo.FieldHandle
  id: FieldHandle
  parent: Microsoft.JScript.JSFieldInfo
  langs:
  - csharp
  name: FieldHandle
  nameWithType: JSFieldInfo.FieldHandle
  fullName: Microsoft.JScript.JSFieldInfo.FieldHandle
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "이 필드의 내부 메타 데이터 표현에 대 한 핸들을 가져옵니다."
  syntax:
    content: public override RuntimeFieldHandle FieldHandle { get; }
    return:
      type: System.RuntimeFieldHandle
      description: "이 필드의 내부 메타 데이터 표현에 대 한 핸들입니다."
  overload: Microsoft.JScript.JSFieldInfo.FieldHandle*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.JSFieldInfo.FieldType
  id: FieldType
  parent: Microsoft.JScript.JSFieldInfo
  langs:
  - csharp
  name: FieldType
  nameWithType: JSFieldInfo.FieldType
  fullName: Microsoft.JScript.JSFieldInfo.FieldType
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "이 필드의 형식을 가져옵니다."
  syntax:
    content: public override Type FieldType { get; }
    return:
      type: System.Type
      description: "이 필드의 형식입니다."
  overload: Microsoft.JScript.JSFieldInfo.FieldType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.JSFieldInfo.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: Microsoft.JScript.JSFieldInfo
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: JSFieldInfo.GetCustomAttributes(Boolean)
  fullName: Microsoft.JScript.JSFieldInfo.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "이 필드에 연결 되어 있는 사용자 지정 특성이 포함 된 배열을 반환 합니다."
  syntax:
    content: public override object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>특성을 찾기 위해이 멤버의 상속 계층 구조를 검색 합니다."
    return:
      type: System.Object[]
      description: "배열을 <xref:System.Reflection.FieldInfo>요소가 없는 개체.</xref:System.Reflection.FieldInfo>"
  overload: Microsoft.JScript.JSFieldInfo.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.JSFieldInfo.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: Microsoft.JScript.JSFieldInfo
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: JSFieldInfo.GetCustomAttributes(Type,Boolean)
  fullName: Microsoft.JScript.JSFieldInfo.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "지정 된 형식의 특성에 대해서만 검색 합니다.이 필드에 연결 되어 있는 사용자 지정 특성이 포함 된 배열을 반환 합니다."
  syntax:
    content: public override object[] GetCustomAttributes (Type t, bool inherit);
    parameters:
    - id: t
      type: System.Type
      description: "검색할 특성의 형식입니다."
    - id: inherit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>특성을 찾기 위해이 멤버의 상속 계층 구조를 검색 합니다."
    return:
      type: System.Object[]
      description: "배열을 <xref:System.Reflection.FieldInfo>요소가 없는 개체.</xref:System.Reflection.FieldInfo>"
  overload: Microsoft.JScript.JSFieldInfo.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.JSFieldInfo.GetValue(System.Object)
  id: GetValue(System.Object)
  parent: Microsoft.JScript.JSFieldInfo
  langs:
  - csharp
  name: GetValue(Object)
  nameWithType: JSFieldInfo.GetValue(Object)
  fullName: Microsoft.JScript.JSFieldInfo.GetValue(Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "필드의 값을 가져옵니다."
  syntax:
    content: public override object GetValue (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "해당 필드 값이 반환 될 개체입니다."
    return:
      type: System.Object
      description: "필드의 값입니다."
  overload: Microsoft.JScript.JSFieldInfo.GetValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.JSFieldInfo.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: Microsoft.JScript.JSFieldInfo
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: JSFieldInfo.IsDefined(Type,Boolean)
  fullName: Microsoft.JScript.JSFieldInfo.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "이 필드에 지정된 된 특성 유형이 연결 되었는지 여부를 결정 합니다."
  syntax:
    content: public override bool IsDefined (Type type, bool inherit);
    parameters:
    - id: type
      type: System.Type
      description: "검색할 특성 유형입니다."
    - id: inherit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>특성을 찾기 위해이 멤버의 상속 계층 구조를 검색 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>모든 경우"
  overload: Microsoft.JScript.JSFieldInfo.IsDefined*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.JSFieldInfo.MemberType
  id: MemberType
  parent: Microsoft.JScript.JSFieldInfo
  langs:
  - csharp
  name: MemberType
  nameWithType: JSFieldInfo.MemberType
  fullName: Microsoft.JScript.JSFieldInfo.MemberType
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "이 필드는 멤버의 유형을 가져옵니다. 파생 된 클래스의 형식을 식별 <xref:System.Reflection.MemberInfo>이 클래스에서 파생 되는.</xref:System.Reflection.MemberInfo>"
  syntax:
    content: public override System.Reflection.MemberTypes MemberType { get; }
    return:
      type: System.Reflection.MemberTypes
      description: "<xref href=&quot;System.Reflection.MemberTypes&quot;></xref>을이 클래스는 <xref:System.Reflection.FieldInfo>.</xref:System.Reflection.FieldInfo> 에서 파생 되기 때문에"
  overload: Microsoft.JScript.JSFieldInfo.MemberType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.JSFieldInfo.Name
  id: Name
  parent: Microsoft.JScript.JSFieldInfo
  langs:
  - csharp
  name: Name
  nameWithType: JSFieldInfo.Name
  fullName: Microsoft.JScript.JSFieldInfo.Name
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "이 필드의 이름을 가져옵니다."
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: "이 필드의 이름입니다."
  overload: Microsoft.JScript.JSFieldInfo.Name*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.JSFieldInfo.ReflectedType
  id: ReflectedType
  parent: Microsoft.JScript.JSFieldInfo
  langs:
  - csharp
  name: ReflectedType
  nameWithType: JSFieldInfo.ReflectedType
  fullName: Microsoft.JScript.JSFieldInfo.ReflectedType
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "리플렉션을 통해이 인스턴스를 얻는 데 사용 된 클래스 개체를 가져옵니다."
  syntax:
    content: public override Type ReflectedType { get; }
    return:
      type: System.Type
      description: "<xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref> 이 메서드를 얻는 데 사용 된 개체입니다."
  overload: Microsoft.JScript.JSFieldInfo.ReflectedType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.JSFieldInfo.SetValue(System.Object,System.Object)
  id: SetValue(System.Object,System.Object)
  parent: Microsoft.JScript.JSFieldInfo
  langs:
  - csharp
  name: SetValue(Object,Object)
  nameWithType: JSFieldInfo.SetValue(Object,Object)
  fullName: Microsoft.JScript.JSFieldInfo.SetValue(Object,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "지정된 된 값을 사용 하 여 필드의 값을 설정 합니다."
  syntax:
    content: public void SetValue (object obj, object value);
    parameters:
    - id: obj
      type: System.Object
      description: "해당 필드 값이 설정 될 개체입니다."
    - id: value
      type: System.Object
      description: "필드에 할당할 값입니다."
  overload: Microsoft.JScript.JSFieldInfo.SetValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.JSFieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)
  id: SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)
  parent: Microsoft.JScript.JSFieldInfo
  langs:
  - csharp
  name: SetValue(Object,Object,BindingFlags,Binder,CultureInfo)
  nameWithType: JSFieldInfo.SetValue(Object,Object,BindingFlags,Binder,CultureInfo)
  fullName: Microsoft.JScript.JSFieldInfo.SetValue(Object,Object,BindingFlags,Binder,CultureInfo)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "지정 된 값, culture 및 바인딩 정보를 사용 하 여 필드의 값을 설정 합니다."
  syntax:
    content: public override void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: "해당 필드 값이 설정 될 개체입니다."
    - id: value
      type: System.Object
      description: "필드에 할당할 값입니다."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "바인딩을 제어 하는 열거형 값의 비트 조합입니다."
    - id: binder
      type: System.Reflection.Binder
      description: "바인딩, 인수 형식의 강제 변환 및 멤버 리플렉션을 통해 호출 하는 속성 집합이 있습니다."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "특정 문화권 또는 로캘이 대 한 정보를 제공합니다. 숫자, 날짜, 및 문자열의 형식을 올바르게 지정 하는 데 사용 합니다."
  overload: Microsoft.JScript.JSFieldInfo.SetValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Reflection.FieldInfo
  isExternal: false
  name: System.Reflection.FieldInfo
- uid: Microsoft.JScript.JSFieldInfo.Attributes
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: Attributes
  nameWithType: JSFieldInfo.Attributes
  fullName: Microsoft.JScript.JSFieldInfo.Attributes
- uid: System.Reflection.FieldAttributes
  parent: System.Reflection
  isExternal: true
  name: FieldAttributes
  nameWithType: FieldAttributes
  fullName: System.Reflection.FieldAttributes
- uid: Microsoft.JScript.JSFieldInfo.DeclaringType
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: DeclaringType
  nameWithType: JSFieldInfo.DeclaringType
  fullName: Microsoft.JScript.JSFieldInfo.DeclaringType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.JScript.JSFieldInfo.FieldHandle
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: FieldHandle
  nameWithType: JSFieldInfo.FieldHandle
  fullName: Microsoft.JScript.JSFieldInfo.FieldHandle
- uid: System.RuntimeFieldHandle
  parent: System
  isExternal: true
  name: RuntimeFieldHandle
  nameWithType: RuntimeFieldHandle
  fullName: System.RuntimeFieldHandle
- uid: Microsoft.JScript.JSFieldInfo.FieldType
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: FieldType
  nameWithType: JSFieldInfo.FieldType
  fullName: Microsoft.JScript.JSFieldInfo.FieldType
- uid: Microsoft.JScript.JSFieldInfo.GetCustomAttributes(System.Boolean)
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: JSFieldInfo.GetCustomAttributes(Boolean)
  fullName: Microsoft.JScript.JSFieldInfo.GetCustomAttributes(Boolean)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.JScript.JSFieldInfo.GetCustomAttributes(System.Type,System.Boolean)
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: JSFieldInfo.GetCustomAttributes(Type,Boolean)
  fullName: Microsoft.JScript.JSFieldInfo.GetCustomAttributes(Type,Boolean)
- uid: Microsoft.JScript.JSFieldInfo.GetValue(System.Object)
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: GetValue(Object)
  nameWithType: JSFieldInfo.GetValue(Object)
  fullName: Microsoft.JScript.JSFieldInfo.GetValue(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.JScript.JSFieldInfo.IsDefined(System.Type,System.Boolean)
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: JSFieldInfo.IsDefined(Type,Boolean)
  fullName: Microsoft.JScript.JSFieldInfo.IsDefined(Type,Boolean)
- uid: Microsoft.JScript.JSFieldInfo.MemberType
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: MemberType
  nameWithType: JSFieldInfo.MemberType
  fullName: Microsoft.JScript.JSFieldInfo.MemberType
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: Microsoft.JScript.JSFieldInfo.Name
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: Name
  nameWithType: JSFieldInfo.Name
  fullName: Microsoft.JScript.JSFieldInfo.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.JScript.JSFieldInfo.ReflectedType
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: ReflectedType
  nameWithType: JSFieldInfo.ReflectedType
  fullName: Microsoft.JScript.JSFieldInfo.ReflectedType
- uid: Microsoft.JScript.JSFieldInfo.SetValue(System.Object,System.Object)
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: SetValue(Object,Object)
  nameWithType: JSFieldInfo.SetValue(Object,Object)
  fullName: Microsoft.JScript.JSFieldInfo.SetValue(Object,Object)
- uid: Microsoft.JScript.JSFieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: SetValue(Object,Object,BindingFlags,Binder,CultureInfo)
  nameWithType: JSFieldInfo.SetValue(Object,Object,BindingFlags,Binder,CultureInfo)
  fullName: Microsoft.JScript.JSFieldInfo.SetValue(Object,Object,BindingFlags,Binder,CultureInfo)
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: Microsoft.JScript.JSFieldInfo.Attributes*
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: Attributes
  nameWithType: JSFieldInfo.Attributes
- uid: Microsoft.JScript.JSFieldInfo.DeclaringType*
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: DeclaringType
  nameWithType: JSFieldInfo.DeclaringType
- uid: Microsoft.JScript.JSFieldInfo.FieldHandle*
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: FieldHandle
  nameWithType: JSFieldInfo.FieldHandle
- uid: Microsoft.JScript.JSFieldInfo.FieldType*
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: FieldType
  nameWithType: JSFieldInfo.FieldType
- uid: Microsoft.JScript.JSFieldInfo.GetCustomAttributes*
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: GetCustomAttributes
  nameWithType: JSFieldInfo.GetCustomAttributes
- uid: Microsoft.JScript.JSFieldInfo.GetValue*
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: GetValue
  nameWithType: JSFieldInfo.GetValue
- uid: Microsoft.JScript.JSFieldInfo.IsDefined*
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: IsDefined
  nameWithType: JSFieldInfo.IsDefined
- uid: Microsoft.JScript.JSFieldInfo.MemberType*
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: MemberType
  nameWithType: JSFieldInfo.MemberType
- uid: Microsoft.JScript.JSFieldInfo.Name*
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: Name
  nameWithType: JSFieldInfo.Name
- uid: Microsoft.JScript.JSFieldInfo.ReflectedType*
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: ReflectedType
  nameWithType: JSFieldInfo.ReflectedType
- uid: Microsoft.JScript.JSFieldInfo.SetValue*
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: SetValue
  nameWithType: JSFieldInfo.SetValue
