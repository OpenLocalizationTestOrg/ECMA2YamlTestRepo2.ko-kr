### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ServiceBehaviorAttribute
  id: ServiceBehaviorAttribute
  children:
  - System.ServiceModel.ServiceBehaviorAttribute.#ctor
  - System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode
  - System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown
  - System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode
  - System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName
  - System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch
  - System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton
  - System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject
  - System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  - System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode
  - System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph
  - System.ServiceModel.ServiceBehaviorAttribute.Name
  - System.ServiceModel.ServiceBehaviorAttribute.Namespace
  - System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  - System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)
  - System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName
  - System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete
  - System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose
  - System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel
  - System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout
  - System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  - System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel
  - System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout
  - System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext
  - System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand
  langs:
  - csharp
  name: ServiceBehaviorAttribute
  nameWithType: ServiceBehaviorAttribute
  fullName: System.ServiceModel.ServiceBehaviorAttribute
  type: Class
  summary: "서비스 계약 구현의 내부 실행 동작을 지정합니다."
  remarks: "서비스 전체 실행 동작을 지정 하는 서비스 구현에 ServiceBehaviorAttribute 특성을 적용 합니다. (메서드 수준에서 실행 동작을 지정 하려면 사용 된 <xref:System.ServiceModel.OperationBehaviorAttribute>특성입니다.)</xref:System.ServiceModel.OperationBehaviorAttribute> 이 특성은 서비스 구현에만 적용할 수 있습니다. 작업 예제를 보려면을 참조 하십시오.는 [서비스 동작 샘플](http://msdn.microsoft.com/en-us/4e3c6513-a7ff-4b35-8dcf-b5506c6f39a7)합니다.       ServiceBehaviorAttribute 속성은 한 [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] 프로그래밍 모델 기능으로는 개발자가 구현 해야 하는 일반적인 기능입니다. 이러한 오류 코드 및 기타 동작에 대 한 자세한 내용은 참조 [서비스 런타임 동작 지정](~/add/includes/ajax-current-ext-md.md)합니다. 기본 런타임 속성에 대 한 자세한 내용은 참조는 다음 속성 집합의 일부는 [확장 ServiceHost 및 서비스 모델 계층](~/add/includes/ajax-current-ext-md.md)합니다.      - <xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A>속성은 디스패처 시스템이 요청을 처리 하는 끝점을 찾기 위해 사용 하는 필터의 유형을 지정 합니다.</xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A>      - <xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A>속성 때는 채널이 닫히고 서비스가 나머지 메시지 처리를 완료 하는 세션을 자동으로 닫힙니다.</xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A>      - <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>속성은 내부 스레딩 모델을 제어 재진입 콜백 개체나 다중 스레드 서비스에 대 한 지원을 사용 하도록 설정 합니다.</xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>      - <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>속성에 사용할 이름을 선언을 사용 하는 `name` 특성에는 `<service>` 구성 파일의 요소.</xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>      - <xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A>속성을 사용 하면 메시지를 처리할 필요 없는 추가 serialization 정보를 무시 하는 실행된 시간.</xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A>      - <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A>속성은 서비스에서 처리 되지 않은 예외가 SOAP 오류로 반환 되는지 여부를 지정 합니다.</xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> 이것은 디버깅 목적 으로만 사용 됩니다.      - <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>속성 서비스와 데이터베이스의 서비스 개체와의 클라이언트를 교환 하는 동안 재생 해야 하는 여부와 시기를 지정 합니다.</xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>      - <xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A>속성을 serialize 되는 개체 그래프에 있는 항목의 수를 제한 합니다.</xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A>      - <xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A>및 <xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A>속성 이름 및 서비스 요소의 WSDL 식에 대 한 네임 스페이스를 제어 합니다.</xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A> </xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A>      - <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>속성은 트랜잭션이 완료 되 면 서비스 개체를 재활용할 지 여부를 지정 합니다.</xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>      - <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A>속성 세션이 닫힐 때 보류 중인 트랜잭션이 완료 되는지 여부를 지정 합니다.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A>      - <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A>속성은 계약이 지 원하는 트랜잭션 격리 수준을 지정 합니다.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A>      - <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A>속성은 트랜잭션 완료가 이루어지지 않으면 중단 하는 기간을 지정 합니다.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A>      - <xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A>속성은 인바운드 메서드 호출을 사용자 인터페이스 스레드와 자동으로 동기화 여부를 나타냅니다.</xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A>      - <xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A>속성 시스템에 알려 줍니다로 표시 된 SOAP 헤더가 확인 해야 하는지 여부를 `MustUnderstand` 실제로 인식 합니다.</xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A>       <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A>응용 프로그램 구성 파일을 사용 하 여 속성 설정할 수도 있습니다.</xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> 자세한 내용은 참조 <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A>.</xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A>"
  example:
  - "The following code example demonstrates the ServiceBehaviorAttribute properties. The `BehaviorService` class uses the ServiceBehaviorAttribute attribute to indicate that:  \n  \n-   The service object is recycled when the transaction completes.  \n  \n-   There is one service object for each session.  \n  \n-   The service is single-threaded and does not support reentrant calls.  \n  \n Furthermore, at the operation level, the <xref:System.ServiceModel.OperationBehaviorAttribute> values indicate that the `TxWork` method automatically enlists in flowed transactions or creates a new transaction to do the work, and that the transaction is committed automatically if an unhandled exception does not occur.  \n  \n [!code-cs[OperationBehaviorAttribute1#2](~/add/codesnippet/csharp/operationbehaviorattribute1.client/services.cs#2)]\n [!code-vb[OperationBehaviorAttribute1#2](~/add/codesnippet/visualbasic/operationbehaviorattribute1.client/services.vb#2)]  \n  \n The underlying binding must support flowed transactions for the following code example to execute properly. To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file. The following code example shows the configuration file for the preceding sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class)]

      public sealed class ServiceBehaviorAttribute : Attribute, System.ServiceModel.Description.IServiceBehavior
  inheritance:
  - System.Attribute
  implements:
  - System.ServiceModel.Description.IServiceBehavior
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.#ctor
  id: '#ctor'
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ServiceBehaviorAttribute()
  nameWithType: ServiceBehaviorAttribute.ServiceBehaviorAttribute()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ServiceBehaviorAttribute()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.ServiceBehaviorAttribute&quot;> </xref> 클래스입니다."
  remarks: "기본값을 <xref:System.ServiceModel.ServiceBehaviorAttribute>됩니다:- <xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A>를 <xref:System.ServiceModel.AddressFilterMode>.</xref:System.ServiceModel.AddressFilterMode> </xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A> </xref:System.ServiceModel.ServiceBehaviorAttribute>      - <xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A>속성은 `true`.</xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A>      <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> <xref:System.ServiceModel.ConcurrencyMode>.</xref:System.ServiceModel.ConcurrencyMode> </xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> -      - <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>속성은 어셈블리 정보가 없는 형식의 정규화 된 네임 스페이스 이름.</xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>      - <xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A>속성은 `false`.</xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A>      - <xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A>속성을 64KB로 설정 합니다.</xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A>      - <xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A>속성은 네임 스페이스 또는 어셈블리 정보가 없는, 서비스 형식 이름.</xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A>      - <xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A>속성은 &quot;http://tempuri.org&quot;.</xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A>      - <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>속성은 `true`.</xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>      -   <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> is `false`.</xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A>      -   <xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A> is `true`.</xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A>      - <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A>속성은 `false`.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A>      <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A>속성은 <xref:System.Transactions.IsolationLevel>.</xref:System.Transactions.IsolationLevel> </xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A> -      - <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A> <xref:System.TimeSpan.Zero>.</xref:System.TimeSpan.Zero> 속성</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A>      - <xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A>속성은 `true`.</xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A>"
  syntax:
    content: public ServiceBehaviorAttribute ();
    parameters: []
  overload: System.ServiceModel.ServiceBehaviorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode
  id: AddressFilterMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: AddressFilterMode
  nameWithType: ServiceBehaviorAttribute.AddressFilterMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "가져오거나는 <xref href=&quot;System.ServiceModel.AddressFilterMode&quot;> </xref> 데 사용 되는 발송자에서 올바른 끝점으로 들어오는 메시지를 라우팅합니다."
  syntax:
    content: public System.ServiceModel.AddressFilterMode AddressFilterMode { get; set; }
    return:
      type: System.ServiceModel.AddressFilterMode
      description: "<xref href=&quot;System.ServiceModel.AddressFilterMode&quot;> </xref> 들어오는 메시지를 올바른 끝점으로 라우팅하는 발송자에서 사용 되는 개체입니다."
  overload: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "값 중 하나이 고 <xref href=&quot;System.ServiceModel.AddressFilterMode&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown
  id: AutomaticSessionShutdown
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: AutomaticSessionShutdown
  nameWithType: ServiceBehaviorAttribute.AutomaticSessionShutdown
  fullName: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "자동으로 클라이언트가 출력 세션을 닫을 때 세션을 닫을지 여부를 지정 합니다."
  remarks: "기본적으로 클라이언트가 출력 세션을 닫고 서비스에서 나머지 메시지 처리를 완료 하는 경우 서버 세션을 닫습니다. AutomaticSessionShutdown 설정 `false` 는 서버에서 자동으로 세션을 닫는 못하고 세션 수명의 사용자 지정 컨트롤이 활성화 합니다."
  syntax:
    content: public bool AutomaticSessionShutdown { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>서비스는 자동으로 클라이언트가 출력 세션; 닫을 때 세션을 닫으면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode
  id: ConcurrencyMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ConcurrencyMode
  nameWithType: ServiceBehaviorAttribute.ConcurrencyMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "서비스가 하나의 스레드, 여러 개의 스레드 또는 재진입 호출을 지원할지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "이 속성을 지정 하는 서비스의 인스턴스는 하나의 스레드 또는 동시에 실행 되는 여러 스레드 처리할 수 있는지 여부 경우 단일 스레드인 경우 재진입이 지원 되는지 합니다.      > [!NOTE] > The ConcurrencyMode 속성 다른 설정과 상호 작용 합니다. 예를 들어 경우 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>값이 <xref:System.ServiceModel.InstanceContextMode>결과 서비스와 <xref:System.ServiceModel.ConcurrencyMode>사이로</xref:System.ServiceModel.ConcurrencyMode> ConcurrencyMode 값을 설정 하지 않으면 한 번에 하나의 메시지만 처리할만 수</xref:System.ServiceModel.InstanceContextMode> 로 설정</xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 이 속성에도 함께 동작 생성는 <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName>속성.</xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName> 자세한 내용은 참조 [세션과 Instancing, 동시성](~/add/includes/ajax-current-ext-md.md)합니다.       설정 <xref:System.ServiceModel.ConcurrencyMode>를 <xref:System.ServiceModel.ConcurrencyMode>실행 스레딩 문제를 처리 하므로 한 번에 하나의 스레드를 서비스의 인스턴스를 제한 하려면 시스템에 지시 합니다.</xref:System.ServiceModel.ConcurrencyMode> </xref:System.ServiceModel.ConcurrencyMode> 값이 <xref:System.ServiceModel.ConcurrencyMode>한 번에 여러 스레드가 서비스 개체 즉을 실행할 수 있습니다.</xref:System.ServiceModel.ConcurrencyMode> 이 경우 스레드 안전성을 확인 해야 합니다.       <xref:System.ServiceModel.ConcurrencyMode>또한; 한 번에 스레드 하나에 액세스를 제한 작업을 처리 하는 동안 다른 메시지가 작업을 입력할 수 있습니다.</xref:System.ServiceModel.ConcurrencyMode> 작업 중에 다른 서비스 호출이 발생 하면 현재 메시지는 다른 메시지를 처리할 수 있는 작업은 잠금을 손실 됩니다. 서비스 호출이 반환, 잠금 다시 설정 하 고 원본 메시지의 결론에 또는 작업을 한 다른 호출이 발생할 때까지 처리를 계속할 수 있습니다.      > [!IMPORTANT] >도 <xref:System.ServiceModel.ConcurrencyMode>인스턴스 제한에 서비스 실행 한 번에 하나의 스레드를 설정 해야 <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A>순서가의 메시지가 보장 하려면 1로.</xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A> </xref:System.ServiceModel.ConcurrencyMode>   >> 또한을 설명선 전에 일관성 있는 개체 상태를 유지 되며 후 작업-로컬 데이터가 유효한 지 확인 해야 합니다. 서비스 인스턴스를 통해 다른 서비스를 호출 하 여만 잠금 해제 됩니다는 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 채널입니다. 이 경우 호출된 된 서비스는 콜백을 통해 첫 번째 서비스에 재진입할 수 있습니다. 첫 번째 서비스가 재진입이 아닌 경우 호출 시퀀스 교착 상태가 발생 합니다. 자세한 내용은 참조 <xref:System.ServiceModel.ConcurrencyMode>.</xref:System.ServiceModel.ConcurrencyMode>       처리 작업에서 아웃 바운드 호출을 하는 동안 작업에 속하지 않은 데이터를 수정할 수 있습니다. (로컬 상태 데이터 원본 메시지 처리를 다시 시작 하는 경우 유효한 것으로 보장 됩니다.) 따라서 아웃 바운드 호출 하기 전에 확인 해야 로컬이 아닌 데이터가 다른 들어오는 호출에 대해 유효한 및 아웃 바운드 호출 반환 후 로컬이 아닌 데이터의 유효성을 다시 검사 합니다.       다음 의사 코드에서는 성공적인 재진입 지원에 필요한 패턴을 보여 줍니다.      ```c#   public void MyMethod()   {     this.SomeNonLocalDataState;     // Here you need to clean nonlocal state for other users     OutboundProxy proxy = new OutboundProxy();     int returnValue = proxy.CallOutOfOperation();     // Ensure that this.SomeNonLocalDataState is valid for continued use.     this.ModifyNonLocalState;     return returnValue;   }      ```ConcurrencyMode 때 아웃 바운드 호출에 대 한 Begin/End 비동기 호출 패턴을 사용 하 여 <xref:System.ServiceModel.ConcurrencyMode>하면 예외가 트리거됩니다.</xref:System.ServiceModel.ConcurrencyMode> 비동기 아웃 바운드 호출 ConcurrencyMode 인 작업을 수행 해야 <xref:System.ServiceModel.ConcurrencyMode>,이 경우 동기화 문제를 처리 해야 합니다.</xref:System.ServiceModel.ConcurrencyMode>       일반적으로 동시성 모드를 위반 하는 인스턴스에 대 한 메시지가 도착 하는 경우 메시지 인스턴스를 사용할 수 되거나 시간이 초과 될 때까지 대기 합니다.       또한 경우는 <xref:System.ServiceModel.ConcurrencyMode>로 설정 된 <xref:System.ServiceModel.ConcurrencyMode>및 인스턴스가 해제 될 때까지 기다리는 동안 재진입 호출이 차단 되, 시스템은 교착 상태를 감지 하 고 예외를 throw 합니다.</xref:System.ServiceModel.ConcurrencyMode> </xref:System.ServiceModel.ConcurrencyMode>      > [!NOTE] > A <xref:System.InvalidOperationException>없으면 런타임 시 예외가 <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>은 `true` ConcurrencyMode 속성 <xref:System.ServiceModel.ConcurrencyMode>.</xref:System.ServiceModel.ConcurrencyMode> 로 설정 된 경우</xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> </xref:System.InvalidOperationException>       명시적으로 설정 해야 하는 <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>를 `false` 가 포함 된 작업이 없는 경우 <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=fullName>로 설정 true 설정 ConcurrencyMode <xref:System.ServiceModel.ConcurrencyMode>.</xref:System.ServiceModel.ConcurrencyMode> </xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=fullName> </xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> 그렇지 않으면 때문에 유효성 검사 예외가 throw 됩니다 기본값인 <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>은 `true`.</xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>       ConcurrencyMode 및 런타임 동작을 변경할 수 있는 다른 속성의 상호 작용이 있어서 합니다. 이러한 상호 작용 설명과 참조 [세션과 Instancing, 동시성](../Topic/Sessions,%20Instancing,%20and%20Concurrency.md)합니다."
  example:
  - "The following code example demonstrates the different between using <xref:System.ServiceModel.ConcurrencyMode>, <xref:System.ServiceModel.ConcurrencyMode>, and <xref:System.ServiceModel.ConcurrencyMode>. This sample does not compile without a real implementation behind it, but does demonstrate the kind of threading guarantees that [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] makes and what that means for your operation code.  \n  \n [!code-cs[C_BestPractices-Concurrency#1](~/add/codesnippet/csharp/reentrantandmultiple/reentrantandmultiple.cs#1)]"
  syntax:
    content: public System.ServiceModel.ConcurrencyMode ConcurrencyMode { get; set; }
    return:
      type: System.ServiceModel.ConcurrencyMode
      description: "중 하나는 <xref href=&quot;System.ServiceModel.ConcurrencyMode&quot;> </xref> 값; 기본값은 <xref href=&quot;System.ServiceModel.ConcurrencyMode&quot;> </xref>합니다."
  overload: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "값 중 하나이 고 <xref href=&quot;System.ServiceModel.ConcurrencyMode&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName
  id: ConfigurationName
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ConfigurationName
  nameWithType: ServiceBehaviorAttribute.ConfigurationName
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "응용 프로그램 구성 파일에서 서비스 요소를 찾는 데 사용 하는 값을 가져오거나 설정 합니다."
  remarks: "구성 파일에서 특정 서비스를 지정 하려면이 값을 사용 합니다."
  syntax:
    content: public string ConfigurationName { get; set; }
    return:
      type: System.String
      description: "구성 파일에서 찾을 값입니다. 기본값은 어셈블리 정보가 없는, 정규화 된 형식 이름입니다."
  overload: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "값이 null입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "값은 빈 문자열입니다."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch
  id: EnsureOrderedDispatch
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: EnsureOrderedDispatch
  nameWithType: ServiceBehaviorAttribute.EnsureOrderedDispatch
  fullName: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "서비스에서 주문한 디스패치는 보장 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public bool EnsureOrderedDispatch { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>서비스에서 주문한 디스패치 하는 경우이 보장 됩니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton
  id: GetWellKnownSingleton
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: GetWellKnownSingleton()
  nameWithType: ServiceBehaviorAttribute.GetWellKnownSingleton()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "서비스를 구현 하 고 서비스의 단일 인스턴스로 사용 되는 개체를 검색 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 단일 인스턴스가 없는 경우."
  remarks: "비-`null` 값은 서비스에 주소가 지정 된 모든 메시지 발송 될 서비스 인스턴스를 제공 합니다."
  syntax:
    content: public object GetWellKnownSingleton ();
    parameters: []
    return:
      type: System.Object
      description: "서비스의 구현입니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject
  id: IgnoreExtensionDataObject
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: IgnoreExtensionDataObject
  nameWithType: ServiceBehaviorAttribute.IgnoreExtensionDataObject
  fullName: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "알 수 없는 serialization 데이터를 보낼지 여부를 지정 하는 값을 가져오거나 설정 합니다."
  remarks: "If a type implements the <xref:System.Runtime.Serialization.IExtensibleDataObject> interface, it stores any extra data it doesn’t know about that comes over the wire when deserializing into that type. For example, if a type `Person` has members `FirstName` and `LastName`, and an element called `PhoneNumber` comes in, it is stored. When later serializing the type, `PhoneNumber` will be re-emitted. The problem is that the schema for `Person` exported by that service only has `FirstName` and `LastName`, so [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] generates a schema-invalid instance! If strict schema compliance is important, you can set IgnoreExtensionDataObject to `true` to turn this re-emitting behavior off.  \n  \n Regardless IgnoreExtensionDataObject setting, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] always processes known data (both in and out) and does not throw exceptions when extra data comes in. You can also set this property using the [\\&lt;dataContractSerializer\\&gt;](../Topic/%3CdataContractSerializer%3E.md) element in an application configuration file."
  example:
  - "The following example shows the use of IgnoreExtensionDataObject and an implementation of <xref:System.Runtime.Serialization.IExtensibleDataObject>. In this sample, with IgnoreExtensionDataObject set to `false`, the extra data that the client knows about is round-tripped back to the client.  \n  \n [!code-cs[DCAContainerNoValidation#1](~/add/codesnippet/csharp/dcacontainernovalidation.client/services.cs#1)]"
  syntax:
    content: public bool IgnoreExtensionDataObject { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>알 수 없는 serialization 데이터를 전송 되지 않습니다; 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  id: IncludeExceptionDetailInFaults
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: IncludeExceptionDetailInFaults
  nameWithType: ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  fullName: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "일반적인 처리 되지 않은 실행 예외 쉽게 변환할 수를 지정 하는 값을 가져오거나 설정 합니다.는 &lt;xref:System.ServiceModel.FaultException%601?displayProperty=fullName&gt; 형식의 &lt;xref:System.ServiceModel.ExceptionDetail?displayProperty=fullName&gt; 고 오류 메시지로 전송 합니다. 이 속성을 설정 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 서비스 문제를 해결 하는 개발 중에 합니다."
  remarks: "Set IncludeExceptionDetailInFaults to `true` to enable exception information to flow to clients for debugging purposes. This property requires a binding that supports either request-response or duplex messaging.  \n  \n In all managed applications, processing errors are represented by <xref:System.Exception> objects. In SOAP-based applications such as [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] applications, methods that implement service operations communicate error information using SOAP fault messages. Because [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] applications execute under both types of error systems, any managed exception information that needs to be sent to the client must be converted from exceptions into SOAP faults. For more information, see [Specifying and Handling Faults in Contracts and Services](~/add/includes/ajax-current-ext-md.md).  \n  \n During development, you may want your service to also send other exceptions back to the client to assist you in debugging. This is a development-only feature and should not be employed in deployed services.  \n  \n To facilitate debugging development, set the IncludeExceptionDetailInFaults to `true` either in code or using an application configuration file.  \n  \n When enabled, the service automatically returns safer exception information to the caller. These faults appear to the client as <xref:System.ServiceModel.FaultException%601> objects of type <xref:System.ServiceModel.ExceptionDetail>.  \n  \n> [!IMPORTANT]\n>  Setting IncludeExceptionDetailInFaultsto `true` enables clients to obtain information about internal service method exceptions; it is only recommended as a way of temporarily debugging a service application. In addition, the WSDL for a method that returns unhandled managed exceptions in this way does not contain the contract for the <xref:System.ServiceModel.FaultException%601> of type <xref:System.ServiceModel.ExceptionDetail>. Clients must expect the possibility of an unknown SOAP fault to obtain the debugging information properly.  \n  \n Setting this property to `true` can also be done using an application configuration file and the [\\&lt;serviceDebug\\&gt;](../Topic/%3CserviceDebug%3E.md) element, as the following code example shows.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  example:
  - "The following code example demonstrates the <xref:System.ServiceModel.ServiceBehaviorAttribute> properties. The `BehaviorService` class uses the <xref:System.ServiceModel.ServiceBehaviorAttribute> attribute to indicate that:  \n  \n-   Implementation methods are invoked on the UI thread.  \n  \n-   There is one service object for each session.  \n  \n-   The service is single-threaded and does not support reentrant calls.  \n  \n Furthermore, at the operation level, the <xref:System.ServiceModel.OperationBehaviorAttribute> values indicate that the `TxWork` method automatically enlists in flowed transactions or creates a new transaction to do the work, and that the transaction is committed automatically if an unhandled exception does not occur.  \n  \n [!code-cs[OperationBehaviorAttribute1#2](~/add/codesnippet/csharp/operationbehaviorattribute1.client/services.cs#2)]\n [!code-vb[OperationBehaviorAttribute1#2](~/add/codesnippet/visualbasic/operationbehaviorattribute1.client/services.vb#2)]  \n  \n The underlying binding must support flowed transactions for the following code example to execute properly. To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file. The following code example shows the configuration file for the preceding sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool IncludeExceptionDetailInFaults { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>처리 되지 않은 예외가 SOAP 오류로; 반환 될 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode
  id: InstanceContextMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: InstanceContextMode
  nameWithType: ServiceBehaviorAttribute.InstanceContextMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "새 서비스 개체 생성 시점을 나타내는 값을 가져오거나 설정 합니다."
  remarks: "사용 하 여는 <xref:System.ServiceModel.InstanceContextMode>속성을 새 서비스 개체 생성 시점을 지정 합니다.</xref:System.ServiceModel.InstanceContextMode> 서비스 개체가 통신 채널과 직접 연결 되지 않은 때문에 서비스 개체의 수명은 클라이언트와 서비스 응용 프로그램 사이의 채널이 가지는 수명과 관계가입니다. 기본 값, <xref:System.ServiceModel.InstanceContextMode>, 클라이언트와 서비스 응용 프로그램 간에 새 통신 세션이 설정 되 면 새 서비스 개체를 만들려는 서비스 응용 프로그램에 지시 합니다.</xref:System.ServiceModel.InstanceContextMode> 동일한 세션 내의 후속 호출은 동일한 개체에 의해 처리 됩니다.       <xref:System.ServiceModel.InstanceContextMode>각 서비스 개체가 하나의 클라이언트 채널에서 요청 처리 했음을 나타냅니다.</xref:System.ServiceModel.InstanceContextMode>      > [!NOTE] > The InstanceContextMode 속성이 다른 설정과 상호 작용 합니다. 예를 들어, InstanceContextMode 값 <xref:System.ServiceModel.InstanceContextMode> <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> <xref:System.ServiceModel.ConcurrencyMode>.</xref:System.ServiceModel.ConcurrencyMode> 값</xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> 도 설정 하지 않으면 서비스에 한 번에 메시지를 처리 한만 수 있는 결과는</xref:System.ServiceModel.InstanceContextMode> 에 설정 된 경우 이 속성에도 함께 동작 생성는 <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName>속성.</xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName> 자세한 내용은 참조 [세션과 Instancing, 동시성](~/add/includes/ajax-current-ext-md.md)합니다.       Singleton 수명 동작에 대 한 (호스트 응용 프로그램을 호출 하는 경우에 예를 들어는 <xref:System.ServiceModel.ServiceHost.%23ctor%2A>생성자 하 고 서비스로 사용할 개체를 전달), 서비스 클래스 InstanceContextMode를 설정 해야 `Single`, 또는 런타임에 예외가 throw 됩니다.</xref:System.ServiceModel.ServiceHost.%23ctor%2A>"
  example:
  - "The following code example demonstrates the <xref:System.ServiceModel.ServiceBehaviorAttribute> properties. The `BehaviorService` class uses the <xref:System.ServiceModel.ServiceBehaviorAttribute> attribute to indicate that:  \n  \n-   Implementation methods are invoked on the UI thread.  \n  \n-   There is one service object for each session.  \n  \n-   The service is single-threaded and does not support reentrant calls.  \n  \n Furthermore, at the operation level, the <xref:System.ServiceModel.OperationBehaviorAttribute> values indicate that the `TxWork` method automatically enlists in flowed transactions or creates a new transaction to do the work, and that the transaction is committed automatically if an unhandled exception does not occur.  \n  \n [!code-cs[OperationBehaviorAttribute1#2](~/add/codesnippet/csharp/operationbehaviorattribute1.client/services.cs#2)]\n [!code-vb[OperationBehaviorAttribute1#2](~/add/codesnippet/visualbasic/operationbehaviorattribute1.client/services.vb#2)]  \n  \n The underlying binding must support flowed transactions for the following code example to execute properly. To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file. The following code example shows the configuration file for the preceding sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.ServiceModel.InstanceContextMode InstanceContextMode { get; set; }
    return:
      type: System.ServiceModel.InstanceContextMode
      description: "중 하나는 <xref href=&quot;System.ServiceModel.InstanceContextMode&quot;> </xref> 값; 기본값은 <xref href=&quot;System.ServiceModel.InstanceContextMode&quot;> </xref>합니다."
  overload: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "값 중 하나이 고 <xref href=&quot;System.ServiceModel.InstanceContextMode&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph
  id: MaxItemsInObjectGraph
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: MaxItemsInObjectGraph
  nameWithType: ServiceBehaviorAttribute.MaxItemsInObjectGraph
  fullName: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Serialize 된 개체에 허용 되는 항목의 최대 수를 가져오거나 설정 합니다."
  remarks: "속성은 개체 그래프에서 serialize 되는 항목의 수에 제한을 설정 MaxItemsInObjectGraph를 사용 합니다. 사용 하 여이 속성을 설정할 수도 있습니다는 [ \\&lt; dataContractSerializer\\&gt;](../Topic/%3CdataContractSerializer%3E.md) 응용 프로그램 구성 파일의 요소입니다."
  syntax:
    content: public int MaxItemsInObjectGraph { get; set; }
    return:
      type: System.Int32
      description: "개체에 허용 되는 항목의 최대 수입니다. 기본값은 65536 바이트 (64KB)입니다."
  overload: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.Name
  id: Name
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: Name
  nameWithType: ServiceBehaviorAttribute.Name
  fullName: System.ServiceModel.ServiceBehaviorAttribute.Name
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "웹 서비스 설명 언어 (WSDL)에서 서비스 요소의 이름 특성의 값을 가져오거나 설정 합니다."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "이름 특성의 값은 <xref uid=&quot;langword_csharp_&lt;wsdl:service&gt;&quot; name=&quot;&lt;wsdl:service&gt;&quot; href=&quot;&quot;> </xref> 내보낼 때 요소입니다."
  overload: System.ServiceModel.ServiceBehaviorAttribute.Name*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.Namespace
  id: Namespace
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: Namespace
  nameWithType: ServiceBehaviorAttribute.Namespace
  fullName: System.ServiceModel.ServiceBehaviorAttribute.Namespace
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "웹 서비스 설명 언어 (WSDL) 서비스에 대 한 대상 네임 스페이스의 값을 가져오거나 설정 합니다."
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "값은 <xref uid=&quot;langword_csharp_targetNamespace&quot; name=&quot;targetNamespace&quot; href=&quot;&quot;> </xref> 특성에 대 한는 <xref uid=&quot;langword_csharp_&lt;wsdl:definitions&gt;&quot; name=&quot;&lt;wsdl:definitions&gt;&quot; href=&quot;&quot;> </xref> 요소를 포함 하는 <xref uid=&quot;langword_csharp_&lt;wsdl:service&gt;&quot; name=&quot;&lt;wsdl:service&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  overload: System.ServiceModel.ServiceBehaviorAttribute.Namespace*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  id: ReleaseServiceInstanceOnTransactionComplete
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ReleaseServiceInstanceOnTransactionComplete
  nameWithType: ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "현재 트랜잭션이 완료 되 면 서비스 개체를 해제 하는지 여부를 지정 하는 값을 가져오거나 설정 합니다."
  remarks: "Note that you must explicitly set ReleaseServiceInstanceOnTransactionComplete to `false` if there is an operation with <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=fullName> set to true and you set <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> to <xref:System.ServiceModel.ConcurrencyMode>. Otherwise a validation exception is thrown because the default value of ReleaseServiceInstanceOnTransactionComplete is `true`.  \n  \n In addition, it is important to realize that if the service is created by passing a service object to the [ServiceHost.ServiceHost(Object, Uri\\[\\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=True&autoUpgrade=False) constructor, the value of this property is treated as if it were `false`."
  example:
  - "The following code example sets the transaction isolation level to <xref:System.Transactions.IsolationLevel>, disables support for concurrent transactions, requires a flowed transaction from the operation call, and commits the transaction on the service automatically if no unhandled exception occurs.  \n  \n [!code-vb[SBA.Transactions#2](~/add/codesnippet/visualbasic/sba.transactions.client/services.vb#2)]\n [!code-cs[SBA.Transactions#2](~/add/codesnippet/csharp/sba.transactions.client/services.cs#2)]  \n  \n The underlying binding must support flowed transactions for the following code example to execute properly. To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file. The following code example shows a configuration file for the preceding sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool ReleaseServiceInstanceOnTransactionComplete { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>서비스 개체가 해제 될; 이면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)
  id: SetWellKnownSingleton(System.Object)
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: SetWellKnownSingleton(Object)
  nameWithType: ServiceBehaviorAttribute.SetWellKnownSingleton(Object)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "서비스를 구현 하 고 서비스의 단일 인스턴스로 사용 되는 개체를 지정 합니다."
  remarks: "이 서비스에 주소가 지정 된 모든 메시지 발송 될 서비스 인스턴스를 제공 합니다.       SetWellKnownSingleton 이외로 설정 되어 있으면`null` 값 하면 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>으로 설정 되어 있어야 <xref:System.ServiceModel.InstanceContextMode>또는 <xref:System.InvalidOperationException>throw 됩니다.</xref:System.InvalidOperationException> </xref:System.ServiceModel.InstanceContextMode> </xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>"
  syntax:
    content: public void SetWellKnownSingleton (object value);
    parameters:
    - id: value
      type: System.Object
      description: "서비스의 단일 인스턴스입니다."
  overload: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "값 집합이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName
  id: ShouldSerializeConfigurationName
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ShouldSerializeConfigurationName()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeConfigurationName()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "나타내는 값을 반환 여부는 <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*>속성 값이 기본값에서 변경 되었으며 serialize 해야 합니다.</xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*>"
  syntax:
    content: public bool ShouldSerializeConfigurationName ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*>고, 그렇지 않으면 직렬화 된 속성 값은 여야 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*>"
  overload: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete
  id: ShouldSerializeReleaseServiceInstanceOnTransactionComplete
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "나타내는 값을 반환 여부는 <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*>속성 값이 기본값에서 변경 되었으며 serialize 해야 합니다.</xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*>"
  syntax:
    content: public bool ShouldSerializeReleaseServiceInstanceOnTransactionComplete ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*>고, 그렇지 않으면 직렬화 된 속성 값은 여야 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*>"
  overload: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose
  id: ShouldSerializeTransactionAutoCompleteOnSessionClose
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ShouldSerializeTransactionAutoCompleteOnSessionClose()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "나타내는 값을 반환 여부는 <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*>속성 값이 기본값에서 변경 되었으며 serialize 해야 합니다.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*>"
  syntax:
    content: public bool ShouldSerializeTransactionAutoCompleteOnSessionClose ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*>고, 그렇지 않으면 직렬화 된 속성 값은 여야 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*>"
  overload: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel
  id: ShouldSerializeTransactionIsolationLevel
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ShouldSerializeTransactionIsolationLevel()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "나타내는 값을 반환 여부는 <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*>속성 값이 기본값에서 변경 되었으며 serialize 해야 합니다.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*>"
  syntax:
    content: public bool ShouldSerializeTransactionIsolationLevel ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*>고, 그렇지 않으면 직렬화 된 속성 값은 여야 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*>"
  overload: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout
  id: ShouldSerializeTransactionTimeout
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ShouldSerializeTransactionTimeout()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "나타내는 값을 반환 여부는 <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*>속성 값이 기본값에서 변경 되었으며 serialize 해야 합니다.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*>"
  syntax:
    content: public bool ShouldSerializeTransactionTimeout ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*>고, 그렇지 않으면 직렬화 된 속성 값은 여야 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*>"
  overload: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  id: System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  isEii: true
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "사용자 지정 데이터 개체를 동작 속성을 지 원하는 바인딩에 전달 합니다."
  syntax:
    content: void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint> endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);
    parameters:
    - id: description
      type: System.ServiceModel.Description.ServiceDescription
      description: "서비스 설명입니다."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "서비스 호스트입니다."
    - id: endpoints
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
      description: "서비스 끝점입니다."
    - id: parameters
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: "바인딩에서 동작을 지 원하는 데 필요한 데이터 개체입니다."
  overload: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  id: System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  isEii: true
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "서비스 런타임 동작 속성을 지원 하기 위해 사용자 지정 합니다."
  syntax:
    content: void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);
    parameters:
    - id: description
      type: System.ServiceModel.Description.ServiceDescription
      description: "서비스 설명입니다."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "서비스 호스트입니다."
  overload: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  id: System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  isEii: true
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "서비스 설명 및 서비스 호스트가 동작을 지원할 수 있음을 확인 합니다."
  syntax:
    content: void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);
    parameters:
    - id: description
      type: System.ServiceModel.Description.ServiceDescription
      description: "서비스 설명입니다."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "서비스 호스트입니다."
  overload: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  id: TransactionAutoCompleteOnSessionClose
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: TransactionAutoCompleteOnSessionClose
  nameWithType: ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "보류 중인 트랜잭션을 완료할 것인지 여부를 현재 세션이 오류 없이 닫힐 때 지정 하는 값을 가져오거나 설정 합니다."
  syntax:
    content: public bool TransactionAutoCompleteOnSessionClose { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>현재 세션이 오류 없이 닫힐 때 완료 해야 할 트랜잭션을 보류 중인 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel
  id: TransactionIsolationLevel
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: TransactionIsolationLevel
  nameWithType: ServiceBehaviorAttribute.TransactionIsolationLevel
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "서비스 내부에서 만든 새 트랜잭션의 트랜잭션 격리 수준 및 클라이언트로부터 들어오는 트랜잭션의 flowed 지정 합니다."
  remarks: "트랜잭션이 실행 되는 변경 될 때 데이터를 처리를 결정 하는 격리 수준에서 다른 트랜잭션이 처리 방법을 사용자의 트랜잭션이 잠금을 보유 해야 이러한 변경 으로부터 보호 하 고 있습니다. 예를 들어, 기본값인 <xref:System.Transactions.IsolationLevel>, 트랜잭션이 완료 될 때까지 어떠한 업데이트나 삽입 발생할 수를 지정 합니다.</xref:System.Transactions.IsolationLevel>       이 속성이 제한 하는 격리를 사용할 수도 있습니다는 클라이언트로부터 들어오는 트랜잭션의 수준을 이동 합니다."
  example:
  - "The following code example sets the transaction isolation level to <xref:System.Transactions.IsolationLevel>, does not support concurrent transactions, requires a flowed transaction from the method call, and commits the transaction automatically if no unhandled exception occurs.  \n  \n [!code-vb[SBA.Transactions#2](~/add/codesnippet/visualbasic/sba.transactions.client/services.vb#2)]\n [!code-cs[SBA.Transactions#2](~/add/codesnippet/csharp/sba.transactions.client/services.cs#2)]  \n  \n The underlying binding must support flowed transactions for the following code example to execute properly. To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file. The following code example shows a configuration file for the preceding sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Transactions.IsolationLevel TransactionIsolationLevel { get; set; }
    return:
      type: System.Transactions.IsolationLevel
      description: "A <xref href=&quot;System.Transactions.IsolationLevel&quot;> </xref> 트랜잭션 격리 수준을 지정 하는 값입니다. 기본값은 <xref href=&quot;System.Transactions.IsolationLevel&quot;> </xref>합니다."
  overload: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "값 중 하나이 고 <xref href=&quot;System.Transactions.IsolationLevel&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout
  id: TransactionTimeout
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: TransactionTimeout
  nameWithType: ServiceBehaviorAttribute.TransactionTimeout
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "트랜잭션을 완료 해야 기간을 가져오거나 설정 합니다."
  remarks: "이 값이 설정의 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout%2A?displayProperty=fullName>속성.</xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout%2A?displayProperty=fullName> 사용 하 여이 속성을 설정할 수도 있습니다는 [ \\&lt; serviceTimeouts\\&gt;](../Topic/%3CserviceTimeouts%3E.md) 응용 프로그램 구성 파일의 요소입니다."
  example:
  - "The following configuration file specifies a transaction timeout period of three minutes.  \n  \n [!code-cs[SBA.TransactionTimeout#2](~/add/codesnippet/csharp/sba.transactiontimeout.client/services.cs#2)]\n [!code-vb[SBA.TransactionTimeout#2](~/add/codesnippet/visualbasic/sba.transactiontimeout.client/services.vb#2)]"
  syntax:
    content: public string TransactionTimeout { get; set; }
    return:
      type: System.String
      description: "A <xref:System.TimeSpan>는 트랜잭션이 완료 되어야 하거나 자동으로 중단 시간을 나타내는 개체입니다.</xref:System.TimeSpan>"
  overload: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "값이 null입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "값은 보다 작은 &lt;xref:System.TimeSpan.Zero?displayProperty=fullName&gt; 보다 큰 &lt;xref:System.TimeSpan.MaxValue?displayProperty=fullName&gt;합니다."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext
  id: UseSynchronizationContext
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: UseSynchronizationContext
  nameWithType: ServiceBehaviorAttribute.UseSynchronizationContext
  fullName: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "현재 동기화 컨텍스트를 사용 하 여 스레드 실행을 선택할지 여부를 지정 하는 값을 가져오거나 설정 합니다."
  remarks: "일부 응용 프로그램에서 필요로 하는 사용자 인터페이스 스레드 선호도 제공 하려면이 속성을 사용 합니다. 예를 들어 Windows Forms 응용 프로그램 singleton 서비스 개체로 등록 될 수 있습니다. 이 경우 서비스에 대 한 모든 호출이 Windows Forms 스레드에서 실행 해야 합니다. 기본적으로, UseSynchronizationContext를 설정 되어 있는 `true`, <xref:System.Threading.SynchronizationContext?displayProperty=fullName>.</xref:System.Threading.SynchronizationContext?displayProperty=fullName> 캡처한 스레드에서 실행 되도록 서비스에 대 한 모든 호출을 동기화 합니다."
  syntax:
    content: public bool UseSynchronizationContext { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>서비스에 대 한 모든 호출에서 지정한 스레드에서 실행 되어야 하는 경우는 <xref:System.Threading.SynchronizationContext>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Threading.SynchronizationContext> 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand
  id: ValidateMustUnderstand
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ValidateMustUnderstand
  nameWithType: ServiceBehaviorAttribute.ValidateMustUnderstand
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "시스템 또는 응용 프로그램에서 SOAP을 적용할지 여부를 지정 하는 값을 가져오거나 설정 합니다. <xref uid=&quot;langword_csharp_MustUnderstand&quot; name=&quot;MustUnderstand&quot; href=&quot;&quot;> </xref> 헤더 처리 합니다."
  remarks: "도착 하는 메시지 헤더의 적용된 유효성 검사를 해제 하려면 ValidateMustUnderstand 속성을 사용 합니다. 정상적인 실행에서는 메시지 헤더와 비교는 <xref:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders%2A>도착 하는 헤더는 서비스에 의해 명시적으로 처리를 확인 하는 속성.</xref:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders%2A> 이 속성을 설정 `false` 이 검사 하지 않으려면입니다. 로 설정 하면 `false`, 응용 프로그램이 MustUnderstand로 표시 된 헤더를 확인 해야 = &quot;true&quot; 및 그 중 하나 이상이 인식 되지 않은 경우 오류를 반환 합니다. 응용 프로그램 (예:를 사용 하 여이 형식화 된 또는 형식화 되지 않은 메시지) 들어오는 SOAP 메시지를 수락 하 고 사용자 지정 헤더 처리를 수행 해야 할 때 유용 합니다."
  syntax:
    content: public bool ValidateMustUnderstand { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>시스템 SOAP 헤더를 수행 하는 경우 <xref uid=&quot;langword_csharp_MustUnderstand&quot; name=&quot;MustUnderstand&quot; href=&quot;&quot;> </xref> 처리 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, 응용 프로그램에서이 처리를 나타냅니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.ServiceBehaviorAttribute.#ctor
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ServiceBehaviorAttribute()
  nameWithType: ServiceBehaviorAttribute.ServiceBehaviorAttribute()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ServiceBehaviorAttribute()
- uid: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: AddressFilterMode
  nameWithType: ServiceBehaviorAttribute.AddressFilterMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode
- uid: System.ServiceModel.AddressFilterMode
  parent: System.ServiceModel
  isExternal: false
  name: AddressFilterMode
  nameWithType: AddressFilterMode
  fullName: System.ServiceModel.AddressFilterMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: AutomaticSessionShutdown
  nameWithType: ServiceBehaviorAttribute.AutomaticSessionShutdown
  fullName: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ConcurrencyMode
  nameWithType: ServiceBehaviorAttribute.ConcurrencyMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode
- uid: System.ServiceModel.ConcurrencyMode
  parent: System.ServiceModel
  isExternal: false
  name: ConcurrencyMode
  nameWithType: ConcurrencyMode
  fullName: System.ServiceModel.ConcurrencyMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ConfigurationName
  nameWithType: ServiceBehaviorAttribute.ConfigurationName
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: EnsureOrderedDispatch
  nameWithType: ServiceBehaviorAttribute.EnsureOrderedDispatch
  fullName: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch
- uid: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: GetWellKnownSingleton()
  nameWithType: ServiceBehaviorAttribute.GetWellKnownSingleton()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: IgnoreExtensionDataObject
  nameWithType: ServiceBehaviorAttribute.IgnoreExtensionDataObject
  fullName: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject
- uid: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: IncludeExceptionDetailInFaults
  nameWithType: ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  fullName: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
- uid: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: InstanceContextMode
  nameWithType: ServiceBehaviorAttribute.InstanceContextMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode
- uid: System.ServiceModel.InstanceContextMode
  parent: System.ServiceModel
  isExternal: false
  name: InstanceContextMode
  nameWithType: InstanceContextMode
  fullName: System.ServiceModel.InstanceContextMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: MaxItemsInObjectGraph
  nameWithType: ServiceBehaviorAttribute.MaxItemsInObjectGraph
  fullName: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.ServiceBehaviorAttribute.Name
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: Name
  nameWithType: ServiceBehaviorAttribute.Name
  fullName: System.ServiceModel.ServiceBehaviorAttribute.Name
- uid: System.ServiceModel.ServiceBehaviorAttribute.Namespace
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: Namespace
  nameWithType: ServiceBehaviorAttribute.Namespace
  fullName: System.ServiceModel.ServiceBehaviorAttribute.Namespace
- uid: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ReleaseServiceInstanceOnTransactionComplete
  nameWithType: ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
- uid: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: SetWellKnownSingleton(Object)
  nameWithType: ServiceBehaviorAttribute.SetWellKnownSingleton(Object)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(Object)
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeConfigurationName()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeConfigurationName()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName()
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionAutoCompleteOnSessionClose()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose()
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionIsolationLevel()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel()
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionTimeout()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout()
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
- uid: System.ServiceModel.Description.ServiceDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.ServiceModel.Description.ServiceDescription
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ServiceEndpoint>
  nameWithType: Collection<ServiceEndpoint>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.ServiceModel.Description.ServiceEndpoint>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ServiceEndpoint
    name: ServiceEndpoint
    nameWithType: ServiceEndpoint
    fullName: ServiceEndpoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.BindingParameterCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingParameterCollection
  nameWithType: BindingParameterCollection
  fullName: System.ServiceModel.Channels.BindingParameterCollection
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionAutoCompleteOnSessionClose
  nameWithType: ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionIsolationLevel
  nameWithType: ServiceBehaviorAttribute.TransactionIsolationLevel
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel
- uid: System.Transactions.IsolationLevel
  parent: System.Transactions
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Transactions.IsolationLevel
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionTimeout
  nameWithType: ServiceBehaviorAttribute.TransactionTimeout
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout
- uid: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: UseSynchronizationContext
  nameWithType: ServiceBehaviorAttribute.UseSynchronizationContext
  fullName: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext
- uid: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ValidateMustUnderstand
  nameWithType: ServiceBehaviorAttribute.ValidateMustUnderstand
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand
- uid: System.ServiceModel.ServiceBehaviorAttribute.#ctor*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ServiceBehaviorAttribute
  nameWithType: ServiceBehaviorAttribute.ServiceBehaviorAttribute
- uid: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: AddressFilterMode
  nameWithType: ServiceBehaviorAttribute.AddressFilterMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: AutomaticSessionShutdown
  nameWithType: ServiceBehaviorAttribute.AutomaticSessionShutdown
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ConcurrencyMode
  nameWithType: ServiceBehaviorAttribute.ConcurrencyMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ConfigurationName
  nameWithType: ServiceBehaviorAttribute.ConfigurationName
- uid: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: EnsureOrderedDispatch
  nameWithType: ServiceBehaviorAttribute.EnsureOrderedDispatch
- uid: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: GetWellKnownSingleton
  nameWithType: ServiceBehaviorAttribute.GetWellKnownSingleton
- uid: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: IgnoreExtensionDataObject
  nameWithType: ServiceBehaviorAttribute.IgnoreExtensionDataObject
- uid: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: IncludeExceptionDetailInFaults
  nameWithType: ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
- uid: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: InstanceContextMode
  nameWithType: ServiceBehaviorAttribute.InstanceContextMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: MaxItemsInObjectGraph
  nameWithType: ServiceBehaviorAttribute.MaxItemsInObjectGraph
- uid: System.ServiceModel.ServiceBehaviorAttribute.Name*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: Name
  nameWithType: ServiceBehaviorAttribute.Name
- uid: System.ServiceModel.ServiceBehaviorAttribute.Namespace*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: Namespace
  nameWithType: ServiceBehaviorAttribute.Namespace
- uid: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ReleaseServiceInstanceOnTransactionComplete
  nameWithType: ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
- uid: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: SetWellKnownSingleton
  nameWithType: ServiceBehaviorAttribute.SetWellKnownSingleton
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeConfigurationName
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeConfigurationName
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeReleaseServiceInstanceOnTransactionComplete
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionAutoCompleteOnSessionClose
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionIsolationLevel
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionTimeout
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.Validate
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.Validate
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionAutoCompleteOnSessionClose
  nameWithType: ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionIsolationLevel
  nameWithType: ServiceBehaviorAttribute.TransactionIsolationLevel
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionTimeout
  nameWithType: ServiceBehaviorAttribute.TransactionTimeout
- uid: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: UseSynchronizationContext
  nameWithType: ServiceBehaviorAttribute.UseSynchronizationContext
- uid: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ValidateMustUnderstand
  nameWithType: ServiceBehaviorAttribute.ValidateMustUnderstand
