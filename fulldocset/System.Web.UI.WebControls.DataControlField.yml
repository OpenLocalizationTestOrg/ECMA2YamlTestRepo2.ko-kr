### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.DataControlField
  id: DataControlField
  children:
  - System.Web.UI.WebControls.DataControlField.#ctor
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.DataControlField.CreateField
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.HeaderText
  - System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.DataControlField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.ShowHeader
  - System.Web.UI.WebControls.DataControlField.SortExpression
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ValidateRequestMode
  - System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  langs:
  - csharp
  name: DataControlField
  nameWithType: DataControlField
  fullName: System.Web.UI.WebControls.DataControlField
  type: Class
  summary: "형식에 대 한 모든 데이터 컨트롤 필드를 같은 데이터를 테이블 형식 데이터 바인딩된 컨트롤에 열을 나타내는 기본 클래스 역할을 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 및 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref>합니다."
  remarks: "DataControlField 클래스 컨트롤 필드 형식의 모든 데이터에 대 한 기본 클래스로 사용 됩니다. 데이터 컨트롤 필드는 데이터 바인딩된 컨트롤에서 방법과 유사 데이터의 필드를 나타내는 데 사용 됩니다는 <xref:System.Web.UI.WebControls.DataGridColumn>개체의 열 형식을 나타냅니다는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGridColumn>       DataControlField는 필드의 데이터 <xref:System.Web.UI.WebControls.DetailsView>나 <xref:System.Web.UI.WebControls.GridView>.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView> 와 같은 데이터 바인딩된 컨트롤에 표시 되는 방식을 제어 하에서 파생 된 클래스를 사용 하 여 다음 표에서 ASP.NET에서 제공 하는 다른 데이터 컨트롤 필드 형식을 나열 합니다.      | 열 필드 형식 | 설명 |   |-----------------------|-----------------|   | <xref:System.Web.UI.WebControls.BoundField>| 텍스트로 데이터 원본에는 필드의 값을 표시 합니다. |   | <xref:System.Web.UI.WebControls.ButtonField>| 데이터 바인딩된 컨트롤에 명령 단추를 표시 합니다.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.BoundField> 컨트롤에 따라 이렇게 하면 행 또는 같은 프로그램 추가 / 제거 단추를 사용 하는 사용자 지정 단추 컨트롤을 지정 된 열을 표시할 수 있습니다. |   | <xref:System.Web.UI.WebControls.CheckBoxField>| 데이터 바인딩된 컨트롤에서 확인란을 표시 합니다.</xref:System.Web.UI.WebControls.CheckBoxField> 이 데이터 컨트롤 필드 형식은 부울 값을 사용 하는 필드를 표시 하는 데 주로 사용 됩니다. |   | <xref:System.Web.UI.WebControls.CommandField>| 기본 제공 명령 표시 편집을 수행 하는 단추 삽입 또는 데이터 바인딩된 컨트롤에서 작업을 삭제 합니다. |   | <xref:System.Web.UI.WebControls.HyperLinkField>| 하이퍼링크는 데이터 원본에서 필드의 값을 표시 합니다.</xref:System.Web.UI.WebControls.HyperLinkField> </xref:System.Web.UI.WebControls.CommandField> 이 데이터 컨트롤 필드 형식을 하이퍼링크의 URL로 두 번째 필드를 바인딩할 수 있습니다. |   | <xref:System.Web.UI.WebControls.ImageField>| 데이터 바인딩된 컨트롤에서 이미지를 표시 합니다. |   | <xref:System.Web.UI.WebControls.TemplateField>| 지정된 된 템플릿에 따라 데이터 바인딩된 컨트롤에 사용자 지정 콘텐츠를 표시 합니다. |       DataControlField을 확장할 수 있습니다 및 <xref:System.Web.UI.WebControls.BoundField>클래스 자체 데이터 컨트롤 필드 형식을 만들 수 있습니다.</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.ImageField>       DataControlField 클래스는 사용자 인터페이스 (UI) 요소는 데이터 바인딩된 컨트롤에 표시 되는 방식을 결정 하는 많은 속성을 제공 합니다. 모든 컨트롤 UI를 렌더링 하는 경우 모든 사용 가능한 데이터 컨트롤 필드 속성을 사용 합니다. 예를 들어는 <xref:System.Web.UI.WebControls.DetailsView>데이터 컨트롤 필드를 행으로 표시 되는 제어 각 데이터 컨트롤 필드에 대 한 헤더 항목이 있지만 바닥글 항목이 포함 됩니다.</xref:System.Web.UI.WebControls.DetailsView> 따라서는 <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>및 <xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>속성이 무시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> 하지만 <xref:System.Web.UI.WebControls.GridView>사용 제어는 <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>및 <xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>속성 경우는 <xref:System.Web.UI.WebControls.GridView.ShowFooter%2A>속성이 `true`.</xref:System.Web.UI.WebControls.GridView.ShowFooter%2A> </xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> </xref:System.Web.UI.WebControls.GridView> 마찬가지로, 데이터 컨트롤 필드 속성에는 어떤 요소 인지에 따라 UI 요소에 대 한 표현을 영향을 줍니다. <xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>속성 필드에 항상 적용 됩니다.</xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A> DataControlField에서와 같이 컨트롤을 포함 형식에서 파생 된 경우는 <xref:System.Web.UI.WebControls.ButtonField>또는 <xref:System.Web.UI.WebControls.CheckBoxField>클래스는 <xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>속성 필드에 적용 됩니다.</xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A> </xref:System.Web.UI.WebControls.CheckBoxField> </xref:System.Web.UI.WebControls.ButtonField>"
  example:
  - "The following code example demonstrates how to use <xref:System.Web.UI.WebControls.BoundField> and <xref:System.Web.UI.WebControls.ButtonField> objects, which are derived from DataControlField, to display rows in a <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.DetailsView> control has the <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> property set to `false`, which enables it to display a subset of the data returned by the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property.  \n  \n [!code-vb[System.Web.UI.WebControls.DataControlField_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_222_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.DataControlField_1#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_222_1.aspx)]  \n  \n The following code example demonstrates how to extend the <xref:System.Web.UI.WebControls.BoundField> class to create a custom bound field that can be used in a <xref:System.Web.UI.WebControls.GridView> control. Similar to the <xref:System.Web.UI.WebControls.CheckBoxField> class, the `RadioButtonField` class represents a column of `true` or `false` data. However, although the data that the <xref:System.Web.UI.WebControls.CheckBoxField> class is bound to can be any set of `true` or `false` values, the set of data that the `RadioButtonField` class is bound to can have only one `true` value at any given time. This example demonstrates how to implement the <xref:System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell%2A> and <xref:System.Web.UI.WebControls.DataControlField.InitializeCell%2A> methods, two important methods of all classes derived from DataControlField.  \n  \n [!code-vb[Samples.AspNet.RadioButtonField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_222_2.vb)]\n [!code-cs[Samples.AspNet.RadioButtonField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_222_2.cs)]  \n  \n The following code example demonstrates how to use the `RadioButtonField` class, which is provided in the previous example, in a <xref:System.Web.UI.WebControls.GridView> control. In this example, the <xref:System.Web.UI.WebControls.GridView> control displays data for a sports team. The player data is maintained in a data table that includes an ID column, columns for the player names, and a true or false column that identifies the captain of the team. The `RadioButtonField` class is used to display which team member is the current team captain. The <xref:System.Web.UI.WebControls.GridView> control can be edited to choose a new team captain or to change other player information.  \n  \n [!code-cs[System.Web.UI.WebControls.DataControlField_4#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_222_3.aspx)]\n [!code-vb[System.Web.UI.WebControls.DataControlField_4#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_222_3.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("HeaderText")]

      [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))]

      public abstract class DataControlField : System.Web.UI.IDataSourceViewSchemaAccessor, System.Web.UI.IStateManager
  inheritance:
  - System.Object
  implements:
  - System.Web.UI.IDataSourceViewSchemaAccessor
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: DataControlField()
  nameWithType: DataControlField.DataControlField()
  fullName: System.Web.UI.WebControls.DataControlField.DataControlField()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 클래스입니다."
  remarks: "때문에 <xref:System.Web.UI.WebControls.DataControlField>클래스는 추상 클래스를 만들 수 없습니다는 <xref:System.Web.UI.WebControls.DataControlField>개체를 직접.</xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.DataControlField> 이 생성자는 <xref:System.Web.UI.WebControls.DataControlField>클래스</xref:System.Web.UI.WebControls.DataControlField> 에 정의 된 속성을 초기화 하기 위해 파생된 클래스의 생성자에서 호출 일반적으로"
  syntax:
    content: protected DataControlField ();
    parameters: []
  overload: System.Web.UI.WebControls.DataControlField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  id: AccessibleHeaderText
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: AccessibleHeaderText
  nameWithType: DataControlField.AccessibleHeaderText
  fullName: System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "렌더링 되는 텍스트를 가져오거나 설정 합니다.는 <xref uid=&quot;langword_csharp_AbbreviatedText&quot; name=&quot;AbbreviatedText&quot; href=&quot;&quot;> </xref> 일부 컨트롤의 속성 값입니다."
  remarks: "<xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>메서드는 AccessibleHeaderText 속성이 설정 된 경우 상태 변경 이벤트를 발생 시킵니다.</xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>       속성은 AccessibleHeaderText 값 뷰 상태에 저장 합니다.       이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute>및 [전역화 및 지역화](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  syntax:
    content: public virtual string AccessibleHeaderText { get; set; }
    return:
      type: System.String
      description: "화면 판독기가 읽은 약식된 텍스트를 나타내는 문자열입니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.DataControlField.AccessibleHeaderText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.CloneField
  id: CloneField
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: CloneField()
  nameWithType: DataControlField.CloneField()
  fullName: System.Web.UI.WebControls.DataControlField.CloneField()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재의 중복 복사본을 만듭니다 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>-파생 된 개체입니다."
  remarks: "CloneField 메서드는에서 사용 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.DataControlFieldCollection.CloneFields%2A>현재의 복사본을 만드는 메서드를 <xref:System.Web.UI.WebControls.DataControlField>-파생 개체입니다.</xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.DataControlFieldCollection.CloneFields%2A>"
  syntax:
    content: protected System.Web.UI.WebControls.DataControlField CloneField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "현재의 중복 복사본 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataControlField.CloneField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.Control
  id: Control
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: Control
  nameWithType: DataControlField.Control
  fullName: System.Web.UI.WebControls.DataControlField.Control
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 컨트롤에 대 한 참조를 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 개체가 연결 되어 있습니다."
  remarks: "컨트롤 참조가 설정 됩니다는 <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A>메서드를 호출 합니다.</xref:System.Web.UI.WebControls.DataControlField.Initialize%2A>"
  syntax:
    content: protected System.Web.UI.Control Control { get; }
    return:
      type: System.Web.UI.Control
      description: "소유 하는 데이터 컨트롤은 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataControlField.Control*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.ControlStyle
  id: ControlStyle
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: ControlStyle
  nameWithType: DataControlField.ControlStyle
  fullName: System.Web.UI.WebControls.DataControlField.ControlStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "포함 된 모든 웹 서버 컨트롤의 스타일을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 개체입니다."
  remarks: "ControlStyle 속성 <xref:System.Web.UI.WebControls.DataControlField>.</xref:System.Web.UI.WebControls.DataControlField> 에서 파생 된 형식에 포함 된 모든 웹 서버 컨트롤의 모양을 결정합니다       이 속성 모든 파생된 형식에는 영향을 주지 않습니다. <xref:System.Web.UI.WebControls.BoundField>일반적으로 텍스트 데이터를 표시 하 고만 포함 되어 있는 컨트롤 <xref:System.Web.UI.WebControls.TextBox>제어만 영향을 받는 ControlStyle 속성 때 <xref:System.Web.UI.WebControls.DataControlRowState>상태.</xref:System.Web.UI.WebControls.DataControlRowState> </xref:System.Web.UI.WebControls.TextBox> </xref:System.Web.UI.WebControls.BoundField> 같은 웹 서버 컨트롤 <xref:System.Web.UI.WebControls.ButtonField>및 <xref:System.Web.UI.WebControls.CheckBoxField>ControlStyle 속성 필드에 포함 된 컨트롤 개체 인스턴스 특정 구성에 따라 영향을 받을 수 있습니다.</xref:System.Web.UI.WebControls.CheckBoxField> </xref:System.Web.UI.WebControls.ButtonField> 예를 들어는 <xref:System.Web.UI.WebControls.ButtonField>컨트롤이로 렌더링 될 수는 <xref:System.Web.UI.WebControls.LinkButton>, <xref:System.Web.UI.WebControls.ImageButton>, 또는 <xref:System.Web.UI.WebControls.Button>개체입니다.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.ButtonField> 하지만 <xref:System.Web.UI.WebControls.LinkButton>을 `font` 의 특성을 <xref:System.Web.UI.WebControls.Style>개체는 <xref:System.Web.UI.WebControls.Button>컨트롤이 아닙니다.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Style> </xref:System.Web.UI.WebControls.LinkButton>"
  example:
  - "The following code example demonstrates how to use <xref:System.Web.UI.WebControls.BoundField> and <xref:System.Web.UI.WebControls.ButtonField> objects, which are derived from <xref:System.Web.UI.WebControls.DataControlField>, to display rows in a <xref:System.Web.UI.WebControls.DetailsView> control. The ControlStyle property of the <xref:System.Web.UI.WebControls.ButtonField> object is set and governs how the <xref:System.Web.UI.WebControls.LinkButton> control contained by the field is displayed.  \n  \n [!code-vb[System.Web.UI.WebControls.DataControlField_2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_323_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.DataControlField_2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_323_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.Style ControlStyle { get; }
    return:
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> 필드에 포함 된 웹 서버 컨트롤의 모양을 결정 합니다."
  overload: System.Web.UI.WebControls.DataControlField.ControlStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: DataControlField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재의 속성을 복사 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>-파생 된 개체를 지정 된 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 개체입니다."
  remarks: "CopyProperties 메서드는에서 사용 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>현재 속성 복사 하려면 <xref:System.Web.UI.WebControls.DataControlField>-파생 개체는 <xref:System.Web.UI.WebControls.DataControlField>메서드에서 만든 개체입니다.</xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>"
  syntax:
    content: protected virtual void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 현재의 속성을 복사할 대상 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataControlField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.CreateField
  id: CreateField
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: CreateField()
  nameWithType: DataControlField.CreateField()
  fullName: System.Web.UI.WebControls.DataControlField.CreateField()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "파생된 클래스에서 재정의 되 면 빈 만듭니다 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>-파생 된 개체입니다."
  remarks: "CreateField 메서드는에서 사용 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>빈 만드는 메서드를 <xref:System.Web.UI.WebControls.DataControlField>-파생 된 개체의 현재 속성을 복사 하도록 <xref:System.Web.UI.WebControls.DataControlField>-파생 개체를.</xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>"
  syntax:
    content: protected abstract System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "빈 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>-파생 된 개체입니다."
  overload: System.Web.UI.WebControls.DataControlField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.DesignMode
  id: DesignMode
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: DesignMode
  nameWithType: DataControlField.DesignMode
  fullName: System.Web.UI.WebControls.DataControlField.DesignMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 컨트롤 필드를 디자인 타임 환경에서 현재 보고 하 고 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "서 속성 노출 된 <xref:System.Web.UI.Control.DesignMode%2A?displayProperty=fullName>속성.</xref:System.Web.UI.Control.DesignMode%2A?displayProperty=fullName> <xref:System.Web.UI.Control>에 전달 되는 인스턴스는 <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A>메서드를 사용 합니다.</xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> </xref:System.Web.UI.Control>"
  syntax:
    content: protected bool DesignMode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 현재 디자인 타임 환경에서 표시, 되지 않았으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataControlField.DesignMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  id: ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: DataControlField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재 표 셀에서 데이터 컨트롤 필드의 값을 추출 하 고 지정 된 값을 추가 <xref:System.Collections.IDictionary>컬렉션.</xref:System.Collections.IDictionary>"
  remarks: "ExtractValuesFromCell 메서드는 파생 형식에서 구현 <xref:System.Web.UI.WebControls.DataControlField>에 해당 하는 경우 현재 필드 값을 연결할.</xref:System.Web.UI.WebControls.DataControlField> 필드/값 쌍에 저장 됩니다는 `dictionary` 메서드에 전달 되는 컬렉션입니다. ExtractValuesFromCell 메서드에 의해 호출 됩니다는 `ExtractRowValues` 등 <xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.GridView>.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView> 데이터 컨트롤의 메서드       사용 하는 컨트롤을 데이터 바인딩된 사용자 지정을 작성 하는 경우이 메서드는 호출 하 여 <xref:System.Web.UI.WebControls.DataControlFieldCell>을 셀과 연결 된 값의 집합을 조합 하는 개체입니다.</xref:System.Web.UI.WebControls.DataControlFieldCell> 파생 된 클래스를 작성 하는 경우이 메서드를 구현 <xref:System.Web.UI.WebControls.DataControlField>사용자 데이터 또는 데이터 바인딩된 데이터를 표시 하는.</xref:System.Web.UI.WebControls.DataControlField> 사용자 데이터를 표시 하는 모든 필드가 있으므로 ExtractValuesFromCell 메서드를 구현 하는 모든 파생된 형식입니다. 예를 들어는 <xref:System.Web.UI.WebControls.ButtonField>컨트롤의 단추를 표시 및 사용자 데이터가 없습니다.</xref:System.Web.UI.WebControls.ButtonField>"
  example:
  - "The following code example demonstrates how to implement the ExtractValuesFromCell method for a control that derives from the <xref:System.Web.UI.WebControls.DataControlField> class. The `RadioButtonField` class renders a data-bound radio button for every row in a <xref:System.Web.UI.WebControls.GridView> control. When the ExtractValuesFromCell method is called, the method attempts to determine whether the current value of the <xref:System.Web.UI.WebControls.RadioButton> object contained in the cell is selected or cleared, and adds the value to the <xref:System.Collections.IDictionary> collection. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.DataControlField> class.  \n  \n [!code-vb[Samples.AspNet.RadioButtonField#2](~/add/codesnippet/visualbasic/2be9d6dc-be8d-4f63-afd4-_1.vb)]\n [!code-cs[Samples.AspNet.RadioButtonField#2](~/add/codesnippet/csharp/2be9d6dc-be8d-4f63-afd4-_1.cs)]"
  syntax:
    content: public virtual void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);
    parameters:
    - id: dictionary
      type: System.Collections.Specialized.IOrderedDictionary
      description: "An <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;></xref>."
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref> 텍스트 또는 컨트롤을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>합니다."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> 값입니다."
    - id: includeReadOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>읽기 전용 필드의 값에 포함 되어 있는지를 나타내는 데는 `dictionary` 컬렉션, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.FooterStyle
  id: FooterStyle
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: FooterStyle
  nameWithType: DataControlField.FooterStyle
  fullName: System.Web.UI.WebControls.DataControlField.FooterStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 컨트롤 필드의 바닥글의 스타일을 가져오거나 설정 합니다."
  remarks: "FooterStyle 속성 <xref:System.Web.UI.WebControls.DataControlField>.</xref:System.Web.UI.WebControls.DataControlField> 에서 파생 된 형식의 바닥글 항목에 표시 되는 텍스트의 모양을 결정합니다      > [!NOTE] > 일부 데이터 바인딩된 컨트롤에 데이터 컨트롤 필드에 대 한 바닥글 항목 렌더링 되지 않습니다. 예를 들어는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤 데이터 컨트롤 필드를 행으로 표시 합니다.</xref:System.Web.UI.WebControls.DetailsView> 바닥글 항목 렌더링 되지 않습니다 이러한 데이터에 대 한 컨트롤 필드. 이러한 컨트롤 FooterStyle 속성은 무시 됩니다."
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 의 바닥글 항목의 모양을 결정 하는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataControlField.FooterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.FooterText
  id: FooterText
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: FooterText
  nameWithType: DataControlField.FooterText
  fullName: System.Web.UI.WebControls.DataControlField.FooterText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 컨트롤 필드의 바닥글 항목에 표시 되는 텍스트를 가져오거나 설정 합니다."
  remarks: "데이터 컨트롤 필드 또는 필드와 관련 된 기타 데이터에 대 한 메모 또는 설명을 추가 하려면 FooterText 속성을 사용 합니다.      > [!NOTE] > 일부 데이터 바인딩된 컨트롤에 데이터 컨트롤 필드에 대 한 바닥글 항목 렌더링 되지 않습니다. 예를 들어는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤 데이터 컨트롤 필드를 행으로 표시 합니다.</xref:System.Web.UI.WebControls.DetailsView> 바닥글 항목 렌더링 되지 않습니다 이러한 데이터에 대 한 컨트롤 필드. <xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>이러한 컨트롤의 속성은 무시 됩니다.</xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>       이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute>및 [전역화 및 지역화](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  syntax:
    content: public virtual string FooterText { get; set; }
    return:
      type: System.String
      description: "바닥글 항목에 표시 되는 문자열은 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataControlField.FooterText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  id: HeaderImageUrl
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: HeaderImageUrl
  nameWithType: DataControlField.HeaderImageUrl
  fullName: System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 컨트롤 필드의 헤더 항목에 표시 되는 이미지의 URL을 가져오거나 설정 합니다."
  remarks: "머리글 텍스트 대신 데이터 컨트롤의 헤더 항목에 표시 되는 이미지를 원하는 때 HeaderImageUrl 속성을 설정 합니다.      > [!NOTE] > 둘 다는 <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>및 HeaderImageUrl 속성 설정, HeaderImageUrl 속성이 우선 합니다.</xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>"
  example:
  - "The following code example demonstrates how to declaratively set the HeaderImageUrl property of a <xref:System.Web.UI.WebControls.ButtonField> column, which displays an image in the <xref:System.Web.UI.WebControls.GridView> control's column header instead of header text.  \n  \n [!code-cs[System.Web.UI.WebControls.DataControlField_3#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_179_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.DataControlField_3#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_179_1.aspx)]"
  syntax:
    content: public virtual string HeaderImageUrl { get; set; }
    return:
      type: System.String
      description: "헤더 항목에 표시 되는 이미지에 완벽 하 게 정규화 된 또는 상대 URL을 나타내는 문자열의 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataControlField.HeaderImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.HeaderStyle
  id: HeaderStyle
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: HeaderStyle
  nameWithType: DataControlField.HeaderStyle
  fullName: System.Web.UI.WebControls.DataControlField.HeaderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 컨트롤 필드의 머리글의 스타일을 가져오거나 설정 합니다."
  remarks: "HeaderStyle 속성 <xref:System.Web.UI.WebControls.DataControlField>.</xref:System.Web.UI.WebControls.DataControlField> 에서 파생 되는 형식의 헤더 항목에 표시 되는 텍스트의 모양을 결정합니다 HeaderStyle 속성의 가장 일반적인 응용 프로그램의 열 머리글 스타일을 변경 하는 것을 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>"
  example:
  - "The following code example demonstrates how to declaratively set the HeaderStyle property of a <xref:System.Web.UI.WebControls.HyperLinkField> column, which displays a yellow background color for the column header in the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[System.Web.UI.WebControls.DataControlField_3#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1182_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.DataControlField_3#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1182_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 의 모양을 제어 하는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 헤더 항목입니다."
  overload: System.Web.UI.WebControls.DataControlField.HeaderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.HeaderText
  id: HeaderText
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: HeaderText
  nameWithType: DataControlField.HeaderText
  fullName: System.Web.UI.WebControls.DataControlField.HeaderText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 컨트롤 필드의 헤더 항목에 표시 되는 텍스트를 가져오거나 설정 합니다."
  remarks: "HeaderText 속성 데이터 컨트롤의에서 필드 이름으로 식별을 사용 합니다. HeaderText 속성의 가장 일반적인 응용 프로그램은 데이터 바인딩된 필드에 대 한 의미 있는 열 이름을 제공 하는 <xref:System.Web.UI.WebControls.GridView>또는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 경우 모두의 HeaderText 및 <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>속성이 설정 되는 <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>속성이 우선.</xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>       이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute>및 [전역화 및 지역화](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to declaratively set the HeaderText properties of <xref:System.Web.UI.WebControls.BoundField> columns to display text in the column headers of a <xref:System.Web.UI.WebControls.GridView> control. This code example demonstrates a master-details scenario in which a <xref:System.Web.UI.WebControls.GridView> control is used to display a subset of data while the <xref:System.Web.UI.WebControls.DetailsView> control is used to display a larger set of data and insert new records. The example uses two <xref:System.Web.UI.WebControls.SqlDataSource> controls: one to populate the <xref:System.Web.UI.WebControls.GridView> control and one to populate the <xref:System.Web.UI.WebControls.DetailsView> control and insert data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_194_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_194_1.aspx)]"
  syntax:
    content: public virtual string HeaderText { get; set; }
    return:
      type: System.String
      description: "헤더 항목에 표시 되는 문자열은 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataControlField.HeaderText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)
  id: Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: Initialize(Boolean,Control)
  nameWithType: DataControlField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.DataControlField.Initialize(Boolean,Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 컨트롤 필드에 대 한 기본 인스턴스 초기화를 수행합니다."
  remarks: "컨트롤 하는 <xref:System.Web.UI.WebControls.DataControlField>개체 호출 하기 전에 필드를 초기화 한 Initialize 메서드에서 행 컬렉션에 추가 될 연관 된.</xref:System.Web.UI.WebControls.DataControlField> 데이터와 같은 컨트롤 <xref:System.Web.UI.WebControls.DetailsView>및 <xref:System.Web.UI.WebControls.GridView>에서 Initialize 메서드를 호출 합니다. 자신의 `CreateChildControls` 와 같은 다른 메서드를 호출 하기 전에 `CreateRow` 데이터를 사용 하 여 특정 행을 만들려면.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView>       사용 하는 컨트롤을 데이터 바인딩된 사용자 지정을 작성 하는 경우이 메서드는 호출 하 여 <xref:System.Web.UI.WebControls.DataControlFieldCell>개체에 대 한 기본 초기화를 수행 하도록 <xref:System.Web.UI.WebControls.DataControlField>개체.</xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.DataControlFieldCell> 파생된 형식 전에 개체를 초기화 해야 하는 경우이 메서드를 구현 <xref:System.Web.UI.WebControls.DataControlFieldCell>개체를 데이터 나 컨트롤에 <xref:System.Web.UI.WebControls.DataControlField.InitializeCell%2A>메서드.</xref:System.Web.UI.WebControls.DataControlField.InitializeCell%2A> </xref:System.Web.UI.WebControls.DataControlFieldCell>"
  syntax:
    content: public virtual bool Initialize (bool sortingEnabled, System.Web.UI.Control control);
    parameters:
    - id: sortingEnabled
      type: System.Boolean
      description: "컨트롤에서 데이터의 열 정렬을 지원 하는지를 나타내는 값입니다."
    - id: control
      type: System.Web.UI.Control
      description: "소유 하는 데이터 컨트롤은 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "항상 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataControlField.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: DataControlField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.DataControlField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "셀의 controls 컬렉션에 텍스트 또는 컨트롤을 추가합니다."
  remarks: "파생 된 형식은 <xref:System.Web.UI.WebControls.DataControlField>텍스트 및 컨트롤을 추가 하려면 InitializeCell 메서드를 구현 하는 <xref:System.Web.UI.WebControls.DataControlFieldCell>테이블을 사용 하 여 사용자 인터페이스 (UI)를 표시 하는 데이터 컨트롤에 속하는 개체로 서.</xref:System.Web.UI.WebControls.DataControlFieldCell> </xref:System.Web.UI.WebControls.DataControlField> 이러한 데이터 컨트롤 구조를 만들 전체 테이블 행 단위로 경우 각각의 해당 `CreateChildControls` 메서드가 호출 됩니다. InitializeCell 메서드에 의해 호출 됩니다는 `InitializeRow` 등 <xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.GridView>.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView> 데이터 컨트롤의 메서드       사용 하는 컨트롤을 데이터 바인딩된 사용자 지정을 작성 하는 경우이 메서드는 호출 하 여 <xref:System.Web.UI.WebControls.DataControlFieldCell>개체는 테이블 구조 데이터 나 컨트롤의 셀을 초기화 합니다.</xref:System.Web.UI.WebControls.DataControlFieldCell> <xref:System.Web.UI.WebControls.DataControlField>.</xref:System.Web.UI.WebControls.DataControlField> 에서 파생 된 클래스를 작성 하는 경우이 메서드를 구현 합니다."
  example:
  - "The following code example demonstrates how to implement the InitializeCell method for a control that derives from the <xref:System.Web.UI.WebControls.DataControlField> class. The `RadioButtonField` class renders a data-bound radio button for every row in a <xref:System.Web.UI.WebControls.GridView> control. When the row is displaying data to a user and is not in edit mode, the <xref:System.Web.UI.WebControls.RadioButton> control is disabled. When the row is in edit mode, for example when the user chooses to update a row in the <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.RadioButton> control is rendered as enabled so that it can be clicked. This example uses bitwise AND operators, because the row state might be a combination of one or more <xref:System.Web.UI.WebControls.DataControlRowState> values.  \n  \n [!code-vb[Samples.AspNet.RadioButtonField#3](~/add/codesnippet/visualbasic/cb634f4d-ad7d-4bb0-a118-_1.vb)]\n [!code-cs[Samples.AspNet.RadioButtonField#3](~/add/codesnippet/csharp/cb634f4d-ad7d-4bb0-a118-_1.cs)]"
  syntax:
    content: public virtual void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref> 텍스트 또는 컨트롤을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>합니다."
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.DataControlCellType&quot;> </xref> 값입니다."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> 값을 포함 하는 행의 상태를 지정 하는 <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref>합니다."
    - id: rowIndex
      type: System.Int32
      description: "행의 인덱스는는 <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref> 에 포함 되어 있습니다."
  overload: System.Web.UI.WebControls.DataControlField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.InsertVisible
  id: InsertVisible
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: InsertVisible
  nameWithType: DataControlField.InsertVisible
  fullName: System.Web.UI.WebControls.DataControlField.InsertVisible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 개체는 부모 데이터 바인딩된 컨트롤이 삽입 모드에 있을 때 표시 됩니다."
  remarks: "현재 표시 행의 상태가 <xref:System.Web.UI.WebControls.DataControlRowState?displayProperty=fullName>.</xref:System.Web.UI.WebControls.DataControlRowState?displayProperty=fullName> 삽입 모드에는 데이터 바인딩된 컨트롤       <xref:System.Web.UI.WebControls.DetailsView>제어 필드의 집합을 렌더링 하기 전에이 속성의 값을 확인 합니다.</xref:System.Web.UI.WebControls.DetailsView> InsertVisible 속성이 `false`, <xref:System.Web.UI.Control.Visible%2A>속성은 <xref:System.Web.UI.WebControls.DetailsViewRow>개체로 설정 되어 `false`.</xref:System.Web.UI.WebControls.DetailsViewRow> </xref:System.Web.UI.Control.Visible%2A>       속성은 InsertVisible 값 뷰 상태에 저장 합니다."
  syntax:
    content: public virtual bool InsertVisible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>삽입 모드; 부모 데이터 바인딩된 컨트롤에서 렌더링 될 때 해당 필드가 표시 됩니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataControlField.InsertVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  id: IsTrackingViewState
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: IsTrackingViewState
  nameWithType: DataControlField.IsTrackingViewState
  fullName: System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 개체가 해당 뷰 상태의 변경 내용을 저장 합니다."
  syntax:
    content: protected bool IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>데이터 원본 뷰에서 해당 상태를 저장 하도록 표시 되어 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataControlField.IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.ItemStyle
  id: ItemStyle
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: ItemStyle
  nameWithType: DataControlField.ItemStyle
  fullName: System.Web.UI.WebControls.DataControlField.ItemStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 컨트롤 필드에서 표시 하는 텍스트 기반 콘텐츠 스타일을 가져옵니다."
  remarks: "ItemStyle 속성 <xref:System.Web.UI.WebControls.DataControlField>.</xref:System.Web.UI.WebControls.DataControlField> 에서 파생 되는 형식으로 표시 되는 모든 텍스트 데이터의 모양을 결정합니다 예를 들어 바인딩하는 경우는 <xref:System.Web.UI.WebControls.BoundField>컨트롤을 텍스트 데이터에 표시 되는 텍스트의 모양을 변경 하는 ItemStyle 속성을 사용할 수 있습니다.</xref:System.Web.UI.WebControls.BoundField>"
  example:
  - "The following code example demonstrates how to declaratively set the ItemStyle property on the <xref:System.Web.UI.WebControls.BoundField> objects used to display `FirstName` and `LastName` data in a <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.DetailsView> control has the <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> property set to `false`, which enables it to display a subset of the data returned by the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property.  \n  \n [!code-vb[System.Web.UI.WebControls.DataControlField_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_820_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.DataControlField_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_820_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle ItemStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 에 표시 된 텍스트의 모양을 결정 하는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataControlField.ItemStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: DataControlField.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.DataControlField.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이전에 저장 된 데이터 원본 뷰의 뷰 상태를 복원 합니다."
  remarks: "이 메서드는.NET Framework 인프라에서 주로 사용 하 고 사용자 코드에서 직접 사용할 수 없습니다. 그러나 컨트롤 개발자가 사용자 지정 서버 컨트롤에서 해당 뷰 상태를 복원 하는 방법을 지정 하려면이 메서드를 재정의할 수 있습니다. 자세한 내용은 참조 [ASP.NET 상태 관리 개요](~/add/includes/ajax-current-ext-md.md)합니다.       이 메서드가 복원에 대 한 뷰 상태 정보는 <xref:System.Web.UI.WebControls.DataControlField>에서 저장 된 이전 페이지 요청에서 개체는 <xref:System.Web.UI.WebControls.DataControlField.SaveViewState%2A>메서드.</xref:System.Web.UI.WebControls.DataControlField.SaveViewState%2A> </xref:System.Web.UI.WebControls.DataControlField>"
  syntax:
    content: protected virtual void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "나타내는 개체는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 상태를 복원 합니다."
  overload: System.Web.UI.WebControls.DataControlField.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.OnFieldChanged
  id: OnFieldChanged
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: OnFieldChanged()
  nameWithType: DataControlField.OnFieldChanged()
  fullName: System.Web.UI.WebControls.DataControlField.OnFieldChanged()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref uid=&quot;langword_csharp_FieldChanged&quot; name=&quot;FieldChanged&quot; href=&quot;&quot;> </xref> 이벤트입니다."
  remarks: "OnFieldChanged 메서드 이벤트가 발생 하는 신호는 <xref:System.Web.UI.WebControls.DataControlField>개체의 상태가 변경 되었습니다.</xref:System.Web.UI.WebControls.DataControlField> 다음 속성 변경이이 이벤트를 발생: <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>, <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>, <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>, <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>, <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A>, 및 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A>.</xref:System.Web.UI.WebControls.DataControlField.Visible%2A> </xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> </xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> </xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> 파생 된 형식의 속성에는 또한 상태가 변경 되 면이 이벤트가 발생 합니다. 같은 웹 서버 컨트롤 <xref:System.Web.UI.WebControls.DetailsView>및 <xref:System.Web.UI.WebControls.GridView>일반적으로 호출 하는 `DataBind` 필드에 대 한 응답 메서드 변경 이벤트.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnFieldChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnFieldChanged ();
    parameters: []
  overload: System.Web.UI.WebControls.DataControlField.OnFieldChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: DataControlField.SaveViewState()
  fullName: System.Web.UI.WebControls.DataControlField.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "변경 내용을 저장 하는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 페이지가 서버에 다시 게시 된 이후로 뷰 상태입니다."
  remarks: "이 메서드는 주로 컨트롤 개발자가 사용 됩니다.       뷰 상태는 서버 컨트롤의 속성 값의 누적 합니다. 이러한 값이 서버 컨트롤의 <xref:System.Web.UI.Control.ViewState%2A>속성을 <xref:System.Web.UI.StateBag>클래스</xref:System.Web.UI.StateBag> 의 인스턴스인</xref:System.Web.UI.Control.ViewState%2A> 에 자동으로 포함 됩니다. 그런 다음이 속성의이 값은 저장 상태 서버 컨트롤 수명 주기 단계 후 문자열 개체에 유지 됩니다.       HTML에 저장 된 변수로 문자열로 클라이언트에 반환 뷰 상태가 저장 되 면 `hidden` 요소입니다. 사용자 지정 서버 컨트롤을 만들 때이 메서드를 재정의 하 고 서버 컨트롤의 수정 하 여 효율성을 개선 <xref:System.Web.UI.Control.ViewState%2A>속성.</xref:System.Web.UI.Control.ViewState%2A> 자세한 내용은 참조 [ASP.NET 뷰 상태 개요](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: protected virtual object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "변경 내용을 포함 하는 개체는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 뷰 상태입니다. 개체에 연결 된 뷰 상태가 없으면이 메서드가 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataControlField.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.ShowHeader
  id: ShowHeader
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: ShowHeader
  nameWithType: DataControlField.ShowHeader
  fullName: System.Web.UI.WebControls.DataControlField.ShowHeader
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 컨트롤 필드의 헤더 항목 렌더링 되는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "ShowHeader 속성을 사용 하 여 헤더 항목에 표시 되는지 여부를 지정 하는 <xref:System.Web.UI.WebControls.DataControlField>개체입니다.</xref:System.Web.UI.WebControls.DataControlField>"
  syntax:
    content: public virtual bool ShowHeader { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우의 헤더 항목의 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 렌더링 되 고, 그러지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataControlField.ShowHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.SortExpression
  id: SortExpression
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: SortExpression
  nameWithType: DataControlField.SortExpression
  fullName: System.Web.UI.WebControls.DataControlField.SortExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터를 정렬 하려면 데이터 소스 제어에서 사용 되는 정렬 식을 가져오거나 설정 합니다."
  remarks: "<xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>메서드는 SortExpression 속성이 설정 된 경우 상태 변경 이벤트를 발생 시킵니다.</xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>       속성은 SortExpression 값 뷰 상태에 저장 합니다."
  example:
  - "The following code example demonstrates how to use the SortExpression property to assign a sort expression to a data control field.  \n  \n [!code-vb[System.Web.UI.WebControls.DataControlField_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_407_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.DataControlField_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_407_1.aspx)]"
  syntax:
    content: public virtual string SortExpression { get; set; }
    return:
      type: System.String
      description: "데이터를 정렬 하려면 데이터 소스 제어에서 사용 되는 정렬 식입니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.DataControlField.SortExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  id: System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  isEii: true
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  nameWithType: DataControlField.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  fullName: System.Web.UI.WebControls.DataControlField.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 연결 된 스키마를 가져오거나 설정 합니다. <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 개체입니다."
  syntax:
    content: object System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema { get; set; }
    return:
      type: System.Object
      description: "이 연결 된 스키마 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: DataControlField.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.DataControlField.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 개체가 해당 뷰 상태의 변경 내용을 저장 합니다."
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>해당는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 보기로 변경 내용을 저장 상태가 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: DataControlField.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.DataControlField.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 컨트롤 필드 이전에 저장 된 뷰 상태를 복원 합니다."
  syntax:
    content: void IStateManager.LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "<xref:System.Object>컨트롤에 대 한 저장 된 뷰 상태 값이 들어 있는.</xref:System.Object>"
  overload: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: DataControlField.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.DataControlField.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "변경 내용을 저장 하는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 페이지가 서버에 다시 게시 된 이후로 뷰 상태입니다."
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>컨트롤에 대 한 저장 된 뷰 상태 값이 들어 있는.</xref:System.Object>"
  overload: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: DataControlField.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.DataControlField.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "로 인해는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 컨트롤의 저장할 수 있도록 해당 뷰 상태의 변경 내용을 추적 하는 개체 <xref:System.Web.UI.WebControls.DataControlField.ViewState*>속성과 같은 페이지에 대 한 전체 지속형된 요청 합니다.</xref:System.Web.UI.WebControls.DataControlField.ViewState*>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.ToString
  id: ToString
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: ToString()
  nameWithType: DataControlField.ToString()
  fullName: System.Web.UI.WebControls.DataControlField.ToString()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 나타내는 문자열을 반환 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 개체입니다."
  remarks: "값을 반환 하도록이 메서드는 구현에서 <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>속성, 속성을 설정 하는 경우.</xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> 그렇지 않으면이 메서드는 단순히 데이터 컨트롤 필드 (예: &quot;BoundField&quot;)의 유형을 나타내는 문자열을 반환 합니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "이 나타내는 문자열을 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataControlField.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: DataControlField.TrackViewState()
  fullName: System.Web.UI.WebControls.DataControlField.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "로 인해는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 컨트롤의 저장할 수 있도록 해당 뷰 상태의 변경 내용을 추적 하는 개체 <xref:System.Web.UI.WebControls.DataControlField.ViewState*>속성과 같은 페이지에 대 한 전체 지속형된 요청 합니다.</xref:System.Web.UI.WebControls.DataControlField.ViewState*>"
  syntax:
    content: protected virtual void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.DataControlField.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: DataControlField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.DataControlField.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤에서 클라이언트 입력의 유효성을 검사 하는지 여부를 지정 하는 값을 가져오거나 설정 합니다."
  syntax:
    content: protected virtual System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤 클라이언트 입력의 유효성을 검사 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataControlField.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback
  id: ValidateSupportsCallback
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: ValidateSupportsCallback()
  nameWithType: DataControlField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "파생된 클래스에서 재정의 되 면 필드 컨트롤에 포함 된 신호 콜백을 지원 합니다."
  remarks: "ValidateSupportsCallback 메서드는 컨트롤에 있는지 여부를 확인 하는 데 사용 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.DataControlField>콜백이 지원 개체입니다.</xref:System.Web.UI.WebControls.DataControlField> 이 메서드의 기본 구현을 throw 하도록 구현 되었습니다는 <xref:System.NotSupportedException>예외를 나타내는 콜백을 지원 하지 않습니다.</xref:System.NotSupportedException>      > [!NOTE] >이 메서드는 주로 컨트롤 개발자가 사용 됩니다."
  syntax:
    content: public virtual void ValidateSupportsCallback ();
    parameters: []
  overload: System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "메서드는의 기본 인스턴스에서 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 클래스입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.ViewState
  id: ViewState
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: ViewState
  nameWithType: DataControlField.ViewState
  fullName: System.Web.UI.WebControls.DataControlField.ViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "상태 정보 저장 하 고의 뷰 상태를 복원할 수 있는의 사전을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 동일한 페이지에 대 한 여러 요청에 대해 개체입니다."
  remarks: "데이터 필드의 뷰 상태는 모든 속성 값의 누적 된 것을 제어 합니다. ASP.NET 서버 컨트롤을 HTTP 요청을 통해 이러한 값을 유지 하려면이 속성을 인스턴스를 사용의 <xref:System.Web.UI.StateBag>클래스 속성 값을 저장 합니다.</xref:System.Web.UI.StateBag> 그런 다음이 값은 다음 요청이 처리 될 때 HTML 숨겨진된 input 요소를 변수로 전달 됩니다. 서버 컨트롤 뷰 상태를 저장 하는 방법에 대 한 자세한 내용은 참조 [ASP.NET 뷰 상태 개요](~/add/includes/ajax-current-ext-md.md)합니다.       뷰 상태는 기본적으로 모든 서버 컨트롤에 대 한 사용 하지만 사용 하지 않도록 하려는 경우 경우도 있습니다. 자세한 내용은 참조 [ASP.NET 성능 개요](~/add/includes/ajax-current-ext-md.md)합니다.       사전 및 사용 하는 방법에 대 한 자세한 내용은 참조 [컬렉션 및 데이터 구조](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: protected System.Web.UI.StateBag ViewState { get; }
    return:
      type: System.Web.UI.StateBag
      description: "인스턴스 <xref href=&quot;System.Web.UI.StateBag&quot;> </xref> 를 포함 하는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 뷰 상태 정보입니다."
  overload: System.Web.UI.WebControls.DataControlField.ViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataControlField.Visible
  id: Visible
  parent: System.Web.UI.WebControls.DataControlField
  langs:
  - csharp
  name: Visible
  nameWithType: DataControlField.Visible
  fullName: System.Web.UI.WebControls.DataControlField.Visible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 컨트롤 필드 렌더링 되는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "Visible 속성을 사용 하 여 표시 하거나 숨기려면 <xref:System.Web.UI.WebControls.DataControlField>데이터 바인딩된 컨트롤에 있는 개체입니다.</xref:System.Web.UI.WebControls.DataControlField>       경우는 Visible 속성은 `false`, 데이터 값 표시 되지 않으며 클라이언트에 대 한 왕복을 만들지 마십시오. 원하는 왕복 하는 데 데이터를 검색 하는 필드에 대 한 경우에 필드 이름을 추가 `DataKeyNames` 데이터 바인딩된 컨트롤의 속성입니다."
  example:
  - "The following code example demonstrates how to use <xref:System.Web.UI.WebControls.BoundField> and <xref:System.Web.UI.WebControls.ButtonField> objects, which are derived from <xref:System.Web.UI.WebControls.DataControlField>, to display rows in a <xref:System.Web.UI.WebControls.DetailsView> control. The Visible property of the <xref:System.Web.UI.WebControls.BoundField> object that displays the `EmployeeID` column is set to `false`, and the column is not rendered by the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[System.Web.UI.WebControls.DataControlField_2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_987_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.DataControlField_2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_987_1.aspx)]"
  syntax:
    content: public bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 렌더링 되 고, 그러지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataControlField.Visible*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.WebControls.DataControlField.#ctor
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: DataControlField()
  nameWithType: DataControlField.DataControlField()
  fullName: System.Web.UI.WebControls.DataControlField.DataControlField()
- uid: System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: AccessibleHeaderText
  nameWithType: DataControlField.AccessibleHeaderText
  fullName: System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.DataControlField.CloneField
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: CloneField()
  nameWithType: DataControlField.CloneField()
  fullName: System.Web.UI.WebControls.DataControlField.CloneField()
- uid: System.Web.UI.WebControls.DataControlField
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlField
  nameWithType: DataControlField
  fullName: System.Web.UI.WebControls.DataControlField
- uid: System.Web.UI.WebControls.DataControlField.Control
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: Control
  nameWithType: DataControlField.Control
  fullName: System.Web.UI.WebControls.DataControlField.Control
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.DataControlField.ControlStyle
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ControlStyle
  nameWithType: DataControlField.ControlStyle
  fullName: System.Web.UI.WebControls.DataControlField.ControlStyle
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.DataControlField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: DataControlField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.DataControlField.CopyProperties(DataControlField)
- uid: System.Web.UI.WebControls.DataControlField.CreateField
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: CreateField()
  nameWithType: DataControlField.CreateField()
  fullName: System.Web.UI.WebControls.DataControlField.CreateField()
- uid: System.Web.UI.WebControls.DataControlField.DesignMode
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: DesignMode
  nameWithType: DataControlField.DesignMode
  fullName: System.Web.UI.WebControls.DataControlField.DesignMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: DataControlField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.DataControlField.FooterStyle
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: FooterStyle
  nameWithType: DataControlField.FooterStyle
  fullName: System.Web.UI.WebControls.DataControlField.FooterStyle
- uid: System.Web.UI.WebControls.TableItemStyle
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableItemStyle
  nameWithType: TableItemStyle
  fullName: System.Web.UI.WebControls.TableItemStyle
- uid: System.Web.UI.WebControls.DataControlField.FooterText
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: FooterText
  nameWithType: DataControlField.FooterText
  fullName: System.Web.UI.WebControls.DataControlField.FooterText
- uid: System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: HeaderImageUrl
  nameWithType: DataControlField.HeaderImageUrl
  fullName: System.Web.UI.WebControls.DataControlField.HeaderImageUrl
- uid: System.Web.UI.WebControls.DataControlField.HeaderStyle
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: HeaderStyle
  nameWithType: DataControlField.HeaderStyle
  fullName: System.Web.UI.WebControls.DataControlField.HeaderStyle
- uid: System.Web.UI.WebControls.DataControlField.HeaderText
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: HeaderText
  nameWithType: DataControlField.HeaderText
  fullName: System.Web.UI.WebControls.DataControlField.HeaderText
- uid: System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: Initialize(Boolean,Control)
  nameWithType: DataControlField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.DataControlField.Initialize(Boolean,Control)
- uid: System.Web.UI.WebControls.DataControlField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: DataControlField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.DataControlField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.DataControlField.InsertVisible
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: InsertVisible
  nameWithType: DataControlField.InsertVisible
  fullName: System.Web.UI.WebControls.DataControlField.InsertVisible
- uid: System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: IsTrackingViewState
  nameWithType: DataControlField.IsTrackingViewState
  fullName: System.Web.UI.WebControls.DataControlField.IsTrackingViewState
- uid: System.Web.UI.WebControls.DataControlField.ItemStyle
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ItemStyle
  nameWithType: DataControlField.ItemStyle
  fullName: System.Web.UI.WebControls.DataControlField.ItemStyle
- uid: System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: DataControlField.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.DataControlField.LoadViewState(Object)
- uid: System.Web.UI.WebControls.DataControlField.OnFieldChanged
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: OnFieldChanged()
  nameWithType: DataControlField.OnFieldChanged()
  fullName: System.Web.UI.WebControls.DataControlField.OnFieldChanged()
- uid: System.Web.UI.WebControls.DataControlField.SaveViewState
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: SaveViewState()
  nameWithType: DataControlField.SaveViewState()
  fullName: System.Web.UI.WebControls.DataControlField.SaveViewState()
- uid: System.Web.UI.WebControls.DataControlField.ShowHeader
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ShowHeader
  nameWithType: DataControlField.ShowHeader
  fullName: System.Web.UI.WebControls.DataControlField.ShowHeader
- uid: System.Web.UI.WebControls.DataControlField.SortExpression
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: SortExpression
  nameWithType: DataControlField.SortExpression
  fullName: System.Web.UI.WebControls.DataControlField.SortExpression
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  nameWithType: DataControlField.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  fullName: System.Web.UI.WebControls.DataControlField.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: DataControlField.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.DataControlField.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: DataControlField.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.DataControlField.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: DataControlField.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.DataControlField.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: DataControlField.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.DataControlField.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.DataControlField.ToString
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ToString()
  nameWithType: DataControlField.ToString()
  fullName: System.Web.UI.WebControls.DataControlField.ToString()
- uid: System.Web.UI.WebControls.DataControlField.TrackViewState
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: TrackViewState()
  nameWithType: DataControlField.TrackViewState()
  fullName: System.Web.UI.WebControls.DataControlField.TrackViewState()
- uid: System.Web.UI.WebControls.DataControlField.ValidateRequestMode
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: DataControlField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.DataControlField.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ValidateSupportsCallback()
  nameWithType: DataControlField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback()
- uid: System.Web.UI.WebControls.DataControlField.ViewState
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ViewState
  nameWithType: DataControlField.ViewState
  fullName: System.Web.UI.WebControls.DataControlField.ViewState
- uid: System.Web.UI.StateBag
  parent: System.Web.UI
  isExternal: false
  name: StateBag
  nameWithType: StateBag
  fullName: System.Web.UI.StateBag
- uid: System.Web.UI.WebControls.DataControlField.Visible
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: Visible
  nameWithType: DataControlField.Visible
  fullName: System.Web.UI.WebControls.DataControlField.Visible
- uid: System.Web.UI.WebControls.DataControlField.#ctor*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: DataControlField
  nameWithType: DataControlField.DataControlField
- uid: System.Web.UI.WebControls.DataControlField.AccessibleHeaderText*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: AccessibleHeaderText
  nameWithType: DataControlField.AccessibleHeaderText
- uid: System.Web.UI.WebControls.DataControlField.CloneField*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: CloneField
  nameWithType: DataControlField.CloneField
- uid: System.Web.UI.WebControls.DataControlField.Control*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: Control
  nameWithType: DataControlField.Control
- uid: System.Web.UI.WebControls.DataControlField.ControlStyle*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ControlStyle
  nameWithType: DataControlField.ControlStyle
- uid: System.Web.UI.WebControls.DataControlField.CopyProperties*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: CopyProperties
  nameWithType: DataControlField.CopyProperties
- uid: System.Web.UI.WebControls.DataControlField.CreateField*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: CreateField
  nameWithType: DataControlField.CreateField
- uid: System.Web.UI.WebControls.DataControlField.DesignMode*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: DesignMode
  nameWithType: DataControlField.DesignMode
- uid: System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ExtractValuesFromCell
  nameWithType: DataControlField.ExtractValuesFromCell
- uid: System.Web.UI.WebControls.DataControlField.FooterStyle*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: FooterStyle
  nameWithType: DataControlField.FooterStyle
- uid: System.Web.UI.WebControls.DataControlField.FooterText*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: FooterText
  nameWithType: DataControlField.FooterText
- uid: System.Web.UI.WebControls.DataControlField.HeaderImageUrl*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: HeaderImageUrl
  nameWithType: DataControlField.HeaderImageUrl
- uid: System.Web.UI.WebControls.DataControlField.HeaderStyle*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: HeaderStyle
  nameWithType: DataControlField.HeaderStyle
- uid: System.Web.UI.WebControls.DataControlField.HeaderText*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: HeaderText
  nameWithType: DataControlField.HeaderText
- uid: System.Web.UI.WebControls.DataControlField.Initialize*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: Initialize
  nameWithType: DataControlField.Initialize
- uid: System.Web.UI.WebControls.DataControlField.InitializeCell*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: InitializeCell
  nameWithType: DataControlField.InitializeCell
- uid: System.Web.UI.WebControls.DataControlField.InsertVisible*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: InsertVisible
  nameWithType: DataControlField.InsertVisible
- uid: System.Web.UI.WebControls.DataControlField.IsTrackingViewState*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: IsTrackingViewState
  nameWithType: DataControlField.IsTrackingViewState
- uid: System.Web.UI.WebControls.DataControlField.ItemStyle*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ItemStyle
  nameWithType: DataControlField.ItemStyle
- uid: System.Web.UI.WebControls.DataControlField.LoadViewState*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: LoadViewState
  nameWithType: DataControlField.LoadViewState
- uid: System.Web.UI.WebControls.DataControlField.OnFieldChanged*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: OnFieldChanged
  nameWithType: DataControlField.OnFieldChanged
- uid: System.Web.UI.WebControls.DataControlField.SaveViewState*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: SaveViewState
  nameWithType: DataControlField.SaveViewState
- uid: System.Web.UI.WebControls.DataControlField.ShowHeader*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ShowHeader
  nameWithType: DataControlField.ShowHeader
- uid: System.Web.UI.WebControls.DataControlField.SortExpression*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: SortExpression
  nameWithType: DataControlField.SortExpression
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  nameWithType: DataControlField.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: DataControlField.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: DataControlField.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: DataControlField.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: DataControlField.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.DataControlField.ToString*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ToString
  nameWithType: DataControlField.ToString
- uid: System.Web.UI.WebControls.DataControlField.TrackViewState*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: TrackViewState
  nameWithType: DataControlField.TrackViewState
- uid: System.Web.UI.WebControls.DataControlField.ValidateRequestMode*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: DataControlField.ValidateRequestMode
- uid: System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ValidateSupportsCallback
  nameWithType: DataControlField.ValidateSupportsCallback
- uid: System.Web.UI.WebControls.DataControlField.ViewState*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ViewState
  nameWithType: DataControlField.ViewState
- uid: System.Web.UI.WebControls.DataControlField.Visible*
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: Visible
  nameWithType: DataControlField.Visible
