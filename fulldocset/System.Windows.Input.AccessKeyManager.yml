### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.AccessKeyManager
  id: AccessKeyManager
  children:
  - System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent
  - System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  - System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)
  - System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)
  - System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)
  - System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  - System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)
  langs:
  - csharp
  name: AccessKeyManager
  nameWithType: AccessKeyManager
  fullName: System.Windows.Input.AccessKeyManager
  type: Class
  summary: "모든 선택 키의 등록 및 간 interop 키보드 명령 처리를 유지 관리 [!INCLUDE[TLA#tla_winforms](~/add/includes/ajax-current-ext-md.md)], [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)], 및 [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]합니다."
  remarks: "AccessKeyManager 개체 <xref:System.Windows.Threading.Dispatcher>.</xref:System.Windows.Threading.Dispatcher> 당 하나를 사용 하 여 요청에 만들어집니다.       AccessKeyManager에 대 한 이벤트 처리기로 연결 되며 <xref:System.Windows.Input.InputManager.PostProcessInput>에 메서드를 노출 하 고 <xref:System.Windows.Input.AccessKeyManager.Register%2A>및 <xref:System.Windows.Input.AccessKeyManager.Unregister%2A>액세스 키입니다.</xref:System.Windows.Input.AccessKeyManager.Unregister%2A> </xref:System.Windows.Input.AccessKeyManager.Register%2A> </xref:System.Windows.Input.InputManager.PostProcessInput>       등록된 된 선택 키를 누를 때, AccessKeyManager 호출은 <xref:System.Windows.UIElement.OnAccessKey%2A>대상 요소의 메서드.</xref:System.Windows.UIElement.OnAccessKey%2A>       요소는 선택 키 개수에 관계 없이 연결할 수 있습니다."
  syntax:
    content: public sealed class AccessKeyManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent
  id: AccessKeyPressedEvent
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: AccessKeyPressedEvent
  nameWithType: AccessKeyManager.AccessKeyPressedEvent
  fullName: System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "식별 된 <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed>라우트된 이벤트.</xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent AccessKeyPressedEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  id: AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  nameWithType: AccessKeyManager.AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  fullName: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "에 대 한 처리기는 <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed>연결 된 이벤트입니다.</xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed>"
  syntax:
    content: public static void AddAccessKeyPressedHandler (System.Windows.DependencyObject element, System.Windows.Input.AccessKeyPressedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref> 또는 <xref href=&quot;System.Windows.ContentElement&quot;> </xref> 을이 이벤트를 수신 대기 합니다."
    - id: handler
      type: System.Windows.Input.AccessKeyPressedEventHandler
      description: "추가할 이벤트 처리기입니다."
  overload: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)
  id: IsKeyRegistered(System.Object,System.String)
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: IsKeyRegistered(Object,String)
  nameWithType: AccessKeyManager.IsKeyRegistered(Object,String)
  fullName: System.Windows.Input.AccessKeyManager.IsKeyRegistered(Object,String)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "지정된 된 키 지정된 된 범위에서 선택키로 등록 되었는지 여부를 나타냅니다."
  syntax:
    content: public static bool IsKeyRegistered (object scope, string key);
    parameters:
    - id: scope
      type: System.Object
      description: "쿼리할 프레젠테이션 소스 `key`합니다."
    - id: key
      type: System.String
      description: "쿼리 키입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>키 등록 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Input.AccessKeyManager.IsKeyRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)
  id: ProcessKey(System.Object,System.String,System.Boolean)
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: ProcessKey(Object,String,Boolean)
  nameWithType: AccessKeyManager.ProcessKey(Object,String,Boolean)
  fullName: System.Windows.Input.AccessKeyManager.ProcessKey(Object,String,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "지정된 된 선택 키를 처리 처럼는 <xref href=&quot;System.Windows.UIElement.KeyDown&quot;> </xref> 에 전달 된 키에 대 한 이벤트는 <xref href=&quot;System.Windows.Input.AccessKeyManager&quot;> </xref>합니다."
  syntax:
    content: public static bool ProcessKey (object scope, string key, bool isMultiple);
    parameters:
    - id: scope
      type: System.Object
      description: "선택 키에 대 한 범위입니다."
    - id: key
      type: System.String
      description: "선택 키입니다."
    - id: isMultiple
      type: System.Boolean
      description: "이면 `key` 여러 명의 일치 하는가 됩니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>키가 더; 일치 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Input.AccessKeyManager.ProcessKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)
  id: Register(System.String,System.Windows.IInputElement)
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: Register(String,IInputElement)
  nameWithType: AccessKeyManager.Register(String,IInputElement)
  fullName: System.Windows.Input.AccessKeyManager.Register(String,IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "지정된 된 요소와 지정된 된 선택 키를 연결합니다."
  remarks: "선택 키를 누르면는 <xref:System.Windows.UIElement.OnAccessKey%2A>방식의 `element` 호출 됩니다.</xref:System.Windows.UIElement.OnAccessKey%2A>       요소는 선택 키 개수에 관계 없이 연결할 수 있습니다."
  syntax:
    content: public static void Register (string key, System.Windows.IInputElement element);
    parameters:
    - id: key
      type: System.String
      description: "선택 키입니다."
    - id: element
      type: System.Windows.IInputElement
      description: "요소 연결할 `key` 사용 합니다."
  overload: System.Windows.Input.AccessKeyManager.Register*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  id: RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  nameWithType: AccessKeyManager.RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  fullName: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "지정 된 제거 <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed>지정된 된 개체에서 이벤트 처리기.</xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed>"
  syntax:
    content: public static void RemoveAccessKeyPressedHandler (System.Windows.DependencyObject element, System.Windows.Input.AccessKeyPressedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.UIElement&quot;> </xref> 또는 <xref href=&quot;System.Windows.ContentElement&quot;> </xref> 을이 이벤트를 수신 대기 합니다."
    - id: handler
      type: System.Windows.Input.AccessKeyPressedEventHandler
      description: "이벤트 처리기가 제거 됩니다."
  overload: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)
  id: Unregister(System.String,System.Windows.IInputElement)
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: Unregister(String,IInputElement)
  nameWithType: AccessKeyManager.Unregister(String,IInputElement)
  fullName: System.Windows.Input.AccessKeyManager.Unregister(String,IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "지정된 된 선택 키가 지정된 된 요소에서 연결을 끊습니다."
  syntax:
    content: public static void Unregister (string key, System.Windows.IInputElement element);
    parameters:
    - id: key
      type: System.String
      description: "선택 키입니다."
    - id: element
      type: System.Windows.IInputElement
      description: "연결을 끊을 요소 `key`합니다."
  overload: System.Windows.Input.AccessKeyManager.Unregister*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: AccessKeyPressedEvent
  nameWithType: AccessKeyManager.AccessKeyPressedEvent
  fullName: System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  nameWithType: AccessKeyManager.AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  fullName: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.Input.AccessKeyPressedEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: AccessKeyPressedEventHandler
  nameWithType: AccessKeyPressedEventHandler
  fullName: System.Windows.Input.AccessKeyPressedEventHandler
- uid: System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: IsKeyRegistered(Object,String)
  nameWithType: AccessKeyManager.IsKeyRegistered(Object,String)
  fullName: System.Windows.Input.AccessKeyManager.IsKeyRegistered(Object,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: ProcessKey(Object,String,Boolean)
  nameWithType: AccessKeyManager.ProcessKey(Object,String,Boolean)
  fullName: System.Windows.Input.AccessKeyManager.ProcessKey(Object,String,Boolean)
- uid: System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: Register(String,IInputElement)
  nameWithType: AccessKeyManager.Register(String,IInputElement)
  fullName: System.Windows.Input.AccessKeyManager.Register(String,IInputElement)
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  nameWithType: AccessKeyManager.RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  fullName: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
- uid: System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: Unregister(String,IInputElement)
  nameWithType: AccessKeyManager.Unregister(String,IInputElement)
  fullName: System.Windows.Input.AccessKeyManager.Unregister(String,IInputElement)
- uid: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler*
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: AddAccessKeyPressedHandler
  nameWithType: AccessKeyManager.AddAccessKeyPressedHandler
- uid: System.Windows.Input.AccessKeyManager.IsKeyRegistered*
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: IsKeyRegistered
  nameWithType: AccessKeyManager.IsKeyRegistered
- uid: System.Windows.Input.AccessKeyManager.ProcessKey*
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: ProcessKey
  nameWithType: AccessKeyManager.ProcessKey
- uid: System.Windows.Input.AccessKeyManager.Register*
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: Register
  nameWithType: AccessKeyManager.Register
- uid: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler*
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: RemoveAccessKeyPressedHandler
  nameWithType: AccessKeyManager.RemoveAccessKeyPressedHandler
- uid: System.Windows.Input.AccessKeyManager.Unregister*
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: Unregister
  nameWithType: AccessKeyManager.Unregister
