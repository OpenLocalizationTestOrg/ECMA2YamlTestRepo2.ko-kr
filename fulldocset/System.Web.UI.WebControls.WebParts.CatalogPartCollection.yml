### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  id: CatalogPartCollection
  children:
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Collections.ICollection)
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(System.Web.UI.WebControls.WebParts.CatalogPart)
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.Int32)
  - System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.String)
  langs:
  - csharp
  name: CatalogPartCollection
  nameWithType: CatalogPartCollection
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  type: Class
  summary: "컬렉션을 포함 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> 최종 사용자가 웹 페이지에 추가할 수 있는 웹 서버 컨트롤의 카탈로그를 제공 하는 데 사용 되는 컨트롤입니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "CatalogPartCollection 클래스는 읽기 전용 컬렉션의 <xref:System.Web.UI.WebControls.WebParts.CatalogPart>일반적으로 사용 되는 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>의 집합을 추적 하는 영역 <xref:System.Web.UI.WebControls.WebParts.CatalogPart>영역에 포함 된 컨트롤.</xref:System.Web.UI.WebControls.WebParts.CatalogPart> </xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> </xref:System.Web.UI.WebControls.WebParts.CatalogPart>       영역으로 구성 된 새 CatalogPartCollection 개체를 만들고 웹 파트 페이지 카탈로그 모드로 들어가면는 <xref:System.Web.UI.WebControls.WebParts.CatalogPart>컨트롤.</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 각 <xref:System.Web.UI.WebControls.WebParts.CatalogPart>컨트롤 컬렉션에는&0; 개 이상의 웹 서버 컨트롤을 사용 가능한 서버 컨트롤의 카탈로그의 형태로 표시 되는에 대 한 참조가 포함 될 수 있습니다.</xref:System.Web.UI.WebControls.WebParts.CatalogPart>       예를 들어 집합에 대규모 작업을 수행 해야 하는 경우 사용자는 프로그래밍 방식으로 용도 대 한 컨트롤의 CatalogPartCollection 컬렉션을 만들 수 <xref:System.Web.UI.WebControls.WebParts.CatalogPart>컨트롤.</xref:System.Web.UI.WebControls.WebParts.CatalogPart> CatalogPartCollection 개체는 읽기 전용, 경우에 컬렉션에서 참조 하는 내부 컨트롤을 프로그래밍 방식으로 변경 가능 합니다."
  example:
  - "The following code example demonstrates several uses of the CatalogPartCollection class. There are four parts to this code example:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A class for a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control named `TextDisplayWebPart`, which is referenced in the Web page and is contained in one of the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls.  \n  \n-   A Web page that references the `TextDisplayWebPart` control, contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control with two of the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls from the Web Parts control set declared in the zone, and contains event-driven code to create and manipulate a CatalogPartCollection object.  \n  \n-   An explanation of how the code example works when you load it in a browser.  \n  \n The first part of the code example is the user control. The source code for the user control comes from another topic. For this code example to work, you need to obtain the .ascx file for the user control from the [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md) topic, and place the file in the same folder as the .aspx page in this code example.  \n  \n The second part of the code example is the `TextDisplayWebPart` control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md). Note that the control has a property named `ContentText`; this property holds the value that the user enters in the text box.  \n  \n [!code-vb[WebParts_CatalogPartCollection_Overview#3](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_232_1.vb)]\n [!code-cs[WebParts_CatalogPartCollection_Overview#3](~/add/codesnippet/csharp/t-system.web.ui.webcontr_232_1.cs)]  \n  \n The third part of the code example is the Web page. Notice that the `<asp:catalogzone>` element for the page contains declarations for two <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. These controls become part of a custom CatalogPartCollection object that is created when the `Button1_Click` method executes. The <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control contains Web server controls that have been previously closed by a user at run time. Controls in the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control can be added back to a page. The <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control contains a declaration of the custom `TextDisplayWebPart` control. When the page is in catalog mode, a user can add the `TextDisplayWebPart` control to the page so that it can be used in normal browse mode.  \n  \n [!code-cs[WebParts_CatalogPartCollection_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_232_2.aspx)]\n [!code-vb[WebParts_CatalogPartCollection_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_232_2.aspx)]  \n  \n When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. You can add the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control to the page by selecting the check box next to it and clicking **Add**. Click **Close** to return the page to browse mode. On the control you just added, if you click the verbs menu (the down arrow that appears in the title bar) and then click **Close**, the control is removed from the page and added to the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control. Return the page to catalog mode, and click the **Page Catalog** link to view the contents of the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control. Notice that the control you closed now appears there. Clicking the **Display CatalogPart Properties** button accesses the CatalogPartCollection object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls."
  syntax:
    content: 'public sealed class CatalogPartCollection : System.Collections.ReadOnlyCollectionBase'
  inheritance:
  - System.Object
  - System.Collections.ReadOnlyCollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.ReadOnlyCollectionBase.Count
  - System.Collections.ReadOnlyCollectionBase.GetEnumerator
  - System.Collections.ReadOnlyCollectionBase.InnerList
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: CatalogPartCollection()
  nameWithType: CatalogPartCollection.CatalogPartCollection()
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "새로 만든 빈 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPartCollection&quot;> </xref> 클래스입니다."
  remarks: "CatalogPartCollection 생성자 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>클래스</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 의 빈 인스턴스를 초기화합니다. 이 생성자의 오버이 로드에서 내부적으로 사용 되는 <xref:System.Web.UI.WebControls.WebParts.CatalogZone>클래스에 해당 <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A>빈 컬렉션 개체를 만드는 메서드를.</xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> </xref:System.Web.UI.WebControls.WebParts.CatalogZone> 영역에는 다음의 모든 인스턴스 만듭니다는 <xref:System.Web.UI.WebControls.WebParts.CatalogPart>컨트롤 자식 영역 서식 파일에서 선언 하 고 컬렉션의 내부 메서드를 사용 하 여 이러한 추가.</xref:System.Web.UI.WebControls.WebParts.CatalogPart>       <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> <xref:System.Web.UI.WebControls.WebParts.CatalogPart>가 컨트롤</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 을 추가 하 고</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 새 인스턴스를 만드는 CatalogPartCollection 생성자가 오버이 로드를 사용할 수 없습니다. 하나를 사용 해야 다른 오버 로드 중 CatalogPartCollection 생성자에 대 한 대신 합니다."
  syntax:
    content: public CatalogPartCollection ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Collections.ICollection)
  id: '#ctor(System.Collections.ICollection)'
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: CatalogPartCollection(ICollection)
  nameWithType: CatalogPartCollection.CatalogPartCollection(ICollection)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection(ICollection)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPartCollection&quot;> </xref> 전달 하 여 클래스는 <xref:System.Collections.ICollection>컬렉션 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> 컨트롤.</xref:System.Collections.ICollection>"
  remarks: "CatalogPartCollection 생성자의 인스턴스를 초기화 합니다.는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>클래스 및 컬렉션을 전달 <xref:System.Web.UI.WebControls.WebParts.CatalogPart>컨트롤.</xref:System.Web.UI.WebControls.WebParts.CatalogPart> </xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 이 하나의 새 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>개체 및 <xref:System.Web.UI.WebControls.WebParts.CatalogPart>컨트롤 후</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 추가</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 만드는 데 사용할 수 있는 CatalogPartCollection 생성자 오버 로드       하지만 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>생성자가 만든 인스턴스는 읽기 전용, 개별에 액세스할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPart>컬렉션에 프로그래밍 방식으로 제어 하 고 해당 속성 및 메서드를 호출 합니다.</xref:System.Web.UI.WebControls.WebParts.CatalogPart> </xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>       이 생성자를 사용 하기 위한 한 가지 일반적인 시나리오의 전체 집합에 일괄 작업을 수행 하려면 것 <xref:System.Web.UI.WebControls.WebParts.CatalogPart>콘텐츠, 모양 또는 항목의 관련된 그룹의 위치를 변경 하는 등의 컨트롤.</xref:System.Web.UI.WebControls.WebParts.CatalogPart>"
  example:
  - "The following code example demonstrates how you can create a custom <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>, and perform a batch operation to change the individual <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in the collection even though it is read-only. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.  \n  \n The code in the `Button1_Click` method creates an <xref:System.Collections.ArrayList> object, adds the two <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in the page to the object, and then creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object using the CatalogPartCollection constructor. It also demonstrates how you can make batch changes to the underlying <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls, even though the collection itself is read-only. The code loops through the collection, updating the <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> property of each control.  \n  \n [!code-cs[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/csharp/49bc6c07-48e8-4d4b-abba-_1.aspx)]\n [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/visualbasic/49bc6c07-48e8-4d4b-abba-_1.aspx)]  \n  \n When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. Also, if you position your mouse pointer over the title text within the border of the <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control, you can see the new description text that was added to the control when you clicked the button (the description appears in a ToolTip). If you click the **Page Catalog** link to display the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control, you will find that it also has an updated description."
  syntax:
    content: public CatalogPartCollection (System.Collections.ICollection catalogParts);
    parameters:
    - id: catalogParts
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>의 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> 컨트롤.</xref:System.Collections.ICollection>"
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)
  id: '#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)'
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: CatalogPartCollection(CatalogPartCollection,ICollection)
  nameWithType: CatalogPartCollection.CatalogPartCollection(CatalogPartCollection,ICollection)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection(CatalogPartCollection,ICollection)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPartCollection&quot;> </xref> 전달 하 여 클래스는 <xref:System.Collections.ICollection>기존 컬렉션 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> 영역과 추가 컨트롤의 컬렉션에서 컨트롤.</xref:System.Collections.ICollection>"
  syntax:
    content: public CatalogPartCollection (System.Web.UI.WebControls.WebParts.CatalogPartCollection existingCatalogParts, System.Collections.ICollection catalogParts);
    parameters:
    - id: existingCatalogParts
      type: System.Web.UI.WebControls.WebParts.CatalogPartCollection
      description: "<xref:System.Collections.ICollection>기존 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> 영역의 컨트롤.</xref:System.Collections.ICollection>"
    - id: catalogParts
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>추가 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> 컨트롤.</xref:System.Collections.ICollection>"
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(System.Web.UI.WebControls.WebParts.CatalogPart)
  id: Contains(System.Web.UI.WebControls.WebParts.CatalogPart)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: Contains(CatalogPart)
  nameWithType: CatalogPartCollection.Contains(CatalogPart)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(CatalogPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "특정 컨트롤 컬렉션에 있는지 여부를 나타내는 값을 반환 합니다."
  remarks: "Contains 메서드를 사용 하는 특정 지 여부를 결정 하면 <xref:System.Web.UI.WebControls.WebParts.CatalogPart>의 일부인 개체는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>개체입니다.</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> </xref:System.Web.UI.WebControls.WebParts.CatalogPart>"
  example:
  - "The following code example demonstrates how you can determine whether a particular <xref:System.Web.UI.WebControls.WebParts.CatalogPart> control is a member of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.  \n  \n The code in the `Button1_Click` method creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object named `myParts`. The method uses the Contains method to determine whether the `PageCatalogPart1` control exists, and if so, retrieves the control and changes a property value.  \n  \n [!code-cs[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/csharp/2369b958-e1bb-44dd-9619-_1.aspx)]\n [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/visualbasic/2369b958-e1bb-44dd-9619-_1.aspx)]  \n  \n When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. Add the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control to the page by selecting the check box next to it and clicking **Add**. Click **Close** to return the page to browse mode. On the control you just added, if you click the verbs menu (the down arrow that appears in the title bar) and then click **Close**, the control is removed from the page and added to the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control. Return the page to catalog mode, and click the **Page Catalog** link to view the contents of the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control. Notice that the control you closed has been added to it. Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. Select the check box next to the server control contained in the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control, click **Add** to add it back to the page, and then click **Close** to return the page to browse mode. Click the verbs menu again on the control, and note that now the close verb is gone. It was removed by the code in the `Button1_Click` method, when it used the Contains method to check for `PageCatalogPart1`, and then set its <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> property to `false`."
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.WebParts.CatalogPart catalogPart);
    parameters:
    - id: catalogPart
      type: System.Web.UI.WebControls.WebParts.CatalogPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> 컬렉션에 있는지 여부를 확인 하려면 선택 되어 있는 합니다."
    return:
      type: System.Boolean
      description: "컬렉션에 특정 컨트롤 인지 여부를 나타내는 부울 값입니다."
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: CopyTo(CatalogPart[],Int32)
  nameWithType: CatalogPartCollection.CopyTo(CatalogPart[],Int32)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(CatalogPart[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "컬렉션의 배열에 복사 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> 개체입니다."
  remarks: "CopyTo 메서드는 포함 될 수 있는 사용자 지정 배열을 조합 하려는 경우 유용는 <xref:System.Web.UI.WebControls.WebParts.CatalogPart>컨트롤에 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>개체 또는 해당 컨트롤의 하위 집합입니다.</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> </xref:System.Web.UI.WebControls.WebParts.CatalogPart>"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.WebParts.CatalogPart[] array, int index);
    parameters:
    - id: array
      type: System.Web.UI.WebControls.WebParts.CatalogPart[]
      description: "배열을 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> 복사 된 컬렉션을 포함 하는 개체입니다."
    - id: index
      type: System.Int32
      description: "배열에서 컬렉션의 내용을 배치할 수 있는 시작 지점입니다."
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty
  id: Empty
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: Empty
  nameWithType: CatalogPartCollection.Empty
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "컬렉션의 정적, 읽기 전용, 빈 인스턴스를 참조합니다."
  remarks: "정적, 읽기 전용, 빈 인스턴스 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>다른 개체를 사용 하 여 인스턴스를 비교 하거나 메서드에서 올바른 개체 유형을 반환 하려면 빈 컬렉션 인스턴스를 원하는 있지만 인스턴스에 구성원을 추가할 필요가 없습니다에서 메모리 사용량을 줄입니다.</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>"
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.CatalogPartCollection Empty;
    return:
      type: System.Web.UI.WebControls.WebParts.CatalogPartCollection
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)
  id: IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: IndexOf(CatalogPart)
  nameWithType: CatalogPartCollection.IndexOf(CatalogPart)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(CatalogPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "컬렉션의 특정 멤버의 위치를 반환 합니다."
  remarks: "IndexOf 메서드는 여러 개 있을 경우 유용 <xref:System.Web.UI.WebControls.WebParts.CatalogPart>웹 파트 페이지에서 컨트롤 컬렉션에서 특정 컨트롤을 찾이 필요가.</xref:System.Web.UI.WebControls.WebParts.CatalogPart>"
  example:
  - "The following code example demonstrates how you can determine the position of a member of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> collection by using its IndexOf property. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.  \n  \n The code in the `Button1_Click` method creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object named `myParts`. The method uses the IndexOf property to retrieve the position of the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control, and then changes a property value on the control.  \n  \n [!code-cs[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/csharp/5504f26f-74ee-431e-9601-_1.aspx)]\n [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/visualbasic/5504f26f-74ee-431e-9601-_1.aspx)]  \n  \n After you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. Click the **Page Catalog** link to display the contents of the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control. Note that it has only a title and no border, because its <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeType%2A> property value was changed to <xref:System.Web.UI.WebControls.WebParts.PartChromeType> in the code that used the IndexOf property to retrieve the control."
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.WebParts.CatalogPart catalogPart);
    parameters:
    - id: catalogPart
      type: System.Web.UI.WebControls.WebParts.CatalogPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> 컬렉션의 멤버입니다."
    return:
      type: System.Int32
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> 즉의 멤버는 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPartCollection&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: CatalogPartCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "컬렉션에서 해당 위치에 따라 컬렉션의 멤버를 가져오거나 설정 합니다."
  remarks: "항목 인덱서를 사용 하면 기본 액세스할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPart>컨트롤에 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>인덱스로 개체 및 해당 속성 값을 변경 하거나 메서드를 호출 합니다.</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> </xref:System.Web.UI.WebControls.WebParts.CatalogPart>"
  example:
  - "The following code example demonstrates how you can access a member of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object using its index. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.  \n  \n The code in the `Button1_Click` method creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object named `myParts`. Note that the method uses the Item indexer to retrieve information from the first member of the collection.  \n  \n [!code-cs[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1308_1.aspx)]\n [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1308_1.aspx)]  \n  \n When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. The count of available server controls within the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control is obtained by using the Item indexer in the `Button1_Click` method."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.CatalogPart this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "특정 인덱스 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> 컬렉션에 있습니다."
    return:
      type: System.Web.UI.WebControls.WebParts.CatalogPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> 컬렉션에서 지정 된 인덱스입니다."
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: CatalogPartCollection.Item(String)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "고유 문자열 식별자를 기반으로 컬렉션의 멤버를 반환 합니다."
  remarks: "항목 인덱서를 사용 하면 기본 액세스할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPart>컨트롤에 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>문자열 식별자를 사용 하 여 개체입니다.</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> </xref:System.Web.UI.WebControls.WebParts.CatalogPart> 하지만 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>개체는 읽기 전용, 속성 값을 변경 하거나 인덱서를 통해 액세스 하는 내부 컨트롤에서 메서드를 호출할 수 있습니다.</xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>"
  example:
  - "The following code example demonstrates how you can access a member of a <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object using its string ID value. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> class overview topic.  \n  \n The code in the `Button1_Click` method creates a new <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object named `myParts`. The method uses the Item indexer to retrieve information about the <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control, which is the second member of the collection.  \n  \n [!code-cs[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1244_1.aspx)]\n [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1244_1.aspx)]  \n  \n When you load the page in a browser, you can switch the page into catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. Clicking the **Display CatalogPart Properties** button accesses the <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> object and displays certain properties of the contained <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls. The count of available server controls within the <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control is obtained by using the Item indexer in the `Button1_Click` method."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.CatalogPart this[string id] { get; }
    parameters:
    - id: id
      type: System.String
      description: "특정 고유 식별자 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> 컬렉션에 있습니다."
    return:
      type: System.Web.UI.WebControls.WebParts.CatalogPart
      description: "첫 번째 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref> 컬렉션 ID를 가진 값과 같습니다. <code> id </code>합니다."
  overload: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ReadOnlyCollectionBase
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: CatalogPartCollection()
  nameWithType: CatalogPartCollection.CatalogPartCollection()
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection()
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Collections.ICollection)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: CatalogPartCollection(ICollection)
  nameWithType: CatalogPartCollection.CatalogPartCollection(ICollection)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection(ICollection)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: CatalogPartCollection(CatalogPartCollection,ICollection)
  nameWithType: CatalogPartCollection.CatalogPartCollection(CatalogPartCollection,ICollection)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CatalogPartCollection(CatalogPartCollection,ICollection)
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: CatalogPartCollection
  nameWithType: CatalogPartCollection
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(System.Web.UI.WebControls.WebParts.CatalogPart)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: Contains(CatalogPart)
  nameWithType: CatalogPartCollection.Contains(CatalogPart)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(CatalogPart)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.CatalogPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: CatalogPart
  nameWithType: CatalogPart
  fullName: System.Web.UI.WebControls.WebParts.CatalogPart
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: CopyTo(CatalogPart[],Int32)
  nameWithType: CatalogPartCollection.CopyTo(CatalogPart[],Int32)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(CatalogPart[],Int32)
- uid: System.Web.UI.WebControls.WebParts.CatalogPart[]
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: CatalogPart
  nameWithType: CatalogPart
  fullName: System.Web.UI.WebControls.WebParts.CatalogPart[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.WebParts.CatalogPart
    name: CatalogPart
    nameWithType: CatalogPart
    fullName: CatalogPart[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: Empty
  nameWithType: CatalogPartCollection.Empty
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: IndexOf(CatalogPart)
  nameWithType: CatalogPartCollection.IndexOf(CatalogPart)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(CatalogPart)
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: CatalogPartCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(Int32)
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.String)
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: Item(String)
  nameWithType: CatalogPartCollection.Item(String)
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor*
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: CatalogPartCollection
  nameWithType: CatalogPartCollection.CatalogPartCollection
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains*
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: Contains
  nameWithType: CatalogPartCollection.Contains
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo*
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: CopyTo
  nameWithType: CatalogPartCollection.CopyTo
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf*
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: IndexOf
  nameWithType: CatalogPartCollection.IndexOf
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item*
  parent: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  isExternal: false
  name: Item
  nameWithType: CatalogPartCollection.Item
