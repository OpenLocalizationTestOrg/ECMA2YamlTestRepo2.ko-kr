### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection
  id: TimerEventSubscriptionCollection
  children:
  - System.Workflow.Runtime.TimerEventSubscriptionCollection.Add(System.Workflow.Runtime.TimerEventSubscription)
  - System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo(System.Array,System.Int32)
  - System.Workflow.Runtime.TimerEventSubscriptionCollection.Count
  - System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator
  - System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized
  - System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek
  - System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Guid)
  - System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Workflow.Runtime.TimerEventSubscription)
  - System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot
  - System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty
  langs:
  - csharp
  name: TimerEventSubscriptionCollection
  nameWithType: TimerEventSubscriptionCollection
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection
  type: Class
  summary: "정렬된 된 목록을 나타내는 <xref href=&quot;System.Workflow.Runtime.TimerEventSubscription&quot;> </xref> 개체입니다."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]TimerEventSubscriptionCollection의 큐를 나타내고 <xref:System.Workflow.Runtime.TimerEventSubscription>워크플로와 연결 된 개체 인스턴스 및이 큐를 관리 하는 메서드를 제공 합니다.</xref:System.Workflow.Runtime.TimerEventSubscription> 구독에 따라 큐에 정렬 되어 해당 <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A>값 보다 작은 <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A>값 보다 앞에 배치 됩니다 큰 <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A>값.</xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> </xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> </xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> 이 클래스에서 제공 하는 메서드를 사용 하 여 컬렉션에 의해 노출 하는 활성 타이머 이벤트 구독을 관리 하려면 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty>각 워크플로 인스턴스에 대해.</xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty> 사용할 수 있습니다 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A>또는 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%2A>를 추가 하거나 구독을 타이머 큐에서 제거 합니다.</xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%2A> </xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> 타이머 큐의 첫 번째 요소가 변경 될 때마다는 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>에 큐의 시작 부분에 있던 타이머 이벤트를 취소 하 고 새 타이머 이벤트를 예약 하기 위해 호출 됩니다.</xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public class TimerEventSubscriptionCollection : System.Collections.ICollection
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Add(System.Workflow.Runtime.TimerEventSubscription)
  id: Add(System.Workflow.Runtime.TimerEventSubscription)
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  langs:
  - csharp
  name: Add(TimerEventSubscription)
  nameWithType: TimerEventSubscriptionCollection.Add(TimerEventSubscription)
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.Add(TimerEventSubscription)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "추가 <xref href=&quot;System.Workflow.Runtime.TimerEventSubscription&quot;> </xref> 타이머 큐에 있습니다."
  remarks: "추가 <xref:System.Workflow.Runtime.TimerEventSubscription>타이머 큐에.</xref:System.Workflow.Runtime.TimerEventSubscription> 큐의 구독에 따라 배치 됩니다 자신의 <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=fullName>값 보다 작은 값 보다 큰 값 앞에 배치 됩니다.</xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=fullName> 새 구독이 큐의 시작 부분에 추가 된 경우 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=fullName>이 호출에 큐의 시작 부분에 있던 타이머 이벤트를 취소 하 고 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=fullName>새 타이머 이벤트를 예약 하기 위해 호출 됩니다.</xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=fullName> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=fullName> 잠금을 추가 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>전에 새 구독을 추가 하 고 즉, 스레드로부터 안전 합니다.</xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>"
  syntax:
    content: public void Add (System.Workflow.Runtime.TimerEventSubscription item);
    parameters:
    - id: item
      type: System.Workflow.Runtime.TimerEventSubscription
      description: "<xref href=&quot;System.Workflow.Runtime.TimerEventSubscription&quot;> </xref> 타이머 큐에 추가 합니다."
  overload: System.Workflow.Runtime.TimerEventSubscriptionCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>item</code>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  platform:
  - net462
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: TimerEventSubscriptionCollection.CopyTo(Array,Int32)
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "복사본의 <xref href=&quot;System.Workflow.Runtime.TimerEventSubscriptionCollection&quot;> </xref> 요소를 사용 하는 기존&1; 차원 <xref:System.Array>지정한 배열 인덱스부터 시작 합니다.</xref:System.Array>"
  remarks: "CopyTo는 스레드로부터 안전 합니다."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "1 차원 <xref:System.Array>에서 복사한 요소의 대상인은 <xref href=&quot;System.Workflow.Runtime.TimerEventSubscriptionCollection&quot;> </xref>.</xref:System.Array> <xref:System.Array>0부터 시작 하는 인덱스가 있어야 합니다.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "인덱스는&0;부터 시작 `array` 복사가 시작 되는 합니다."
  overload: System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Count
  id: Count
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  langs:
  - csharp
  name: Count
  nameWithType: TimerEventSubscriptionCollection.Count
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.Count
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "개수를 가져옵니다 <xref href=&quot;System.Workflow.Runtime.TimerEventSubscription&quot;> </xref> 타이머 큐에 있는 개체입니다."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "수가 <xref href=&quot;System.Workflow.Runtime.TimerEventSubscription&quot;> </xref> 큐에 있는 개체입니다."
  overload: System.Workflow.Runtime.TimerEventSubscriptionCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: TimerEventSubscriptionCollection.GetEnumerator()
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "반복 하는 열거자를 반환 된 <xref href=&quot;System.Workflow.Runtime.TimerEventSubscriptionCollection&quot;> </xref>합니다."
  remarks: "에 대 한 액세스는 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>동기화 됩니다; 그러나 컬렉션 열거는 기본적으로 스레드 안전한 프로시저가 아닙니다.</xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> 열거자는 컬렉션이 변경 되지으로 유효한 상태를 유지 합니다. 컬렉션 변경 되 면 추가, 수정 또는 요소를 삭제와 같은 열거자는 무효화 하 고 해당 동작은 정의 되지 않습니다. 열거자는 컬렉션에 배타적으로 액세스가 없습니다. 따라서 컬렉션을 열거지 않습니다 본질적으로 스레드로부터 안전한 프로시저가 합니다. 열거 동안 스레드 보안을 보장 하려면는 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A>.</xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> 를 사용 하 여 열거 하는 동안</xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> 잠글 수 있습니다."
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> for the <xref href=&quot;System.Workflow.Runtime.TimerEventSubscriptionCollection&quot;></xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: TimerEventSubscriptionCollection.IsSynchronized
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "나타내는 값을 가져옵니다 여부에 대 한 액세스는 <xref href=&quot;System.Workflow.Runtime.TimerEventSubscriptionCollection&quot;> </xref> 이 동기화 되었으면 (스레드로부터 안전 하 게 보호)."
  remarks: "에 대 한 액세스는 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>동기화 됩니다; 그러나 컬렉션 열거는 기본적으로 스레드 안전한 프로시저가 아닙니다.</xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> 컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다. 을 열거 하는 동안 스레드로부터 안전을 보장 하려면 전체 열거 동안 컬렉션을 잠글 또는 다른 스레드에서 변경 된 내용으로 인해 발생 한 예외를 catch 합니다. <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>.</xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> 에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 반환</xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "항상 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 대 한 액세스를 나타내는 <xref href=&quot;System.Workflow.Runtime.TimerEventSubscriptionCollection&quot;> </xref> 이 동기화 되었으면 (스레드로부터 안전 하 게 보호)."
  overload: System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek
  id: Peek
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  langs:
  - csharp
  name: Peek()
  nameWithType: TimerEventSubscriptionCollection.Peek()
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "반환 된 <xref href=&quot;System.Workflow.Runtime.TimerEventSubscription&quot;> </xref> 제거 하지 않고 타이머 큐의 시작 부분에 있습니다."
  remarks: "피킹은 스레드로부터 안전 합니다."
  syntax:
    content: public System.Workflow.Runtime.TimerEventSubscription Peek ();
    parameters: []
    return:
      type: System.Workflow.Runtime.TimerEventSubscription
      description: "<xref href=&quot;System.Workflow.Runtime.TimerEventSubscription&quot;> </xref> 타이머 큐 또는 null 참조의 시작 부분 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서) 타이머 큐가 비어 있으면 합니다."
  overload: System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Guid)
  id: Remove(System.Guid)
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  langs:
  - csharp
  name: Remove(Guid)
  nameWithType: TimerEventSubscriptionCollection.Remove(Guid)
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "제거는 <xref href=&quot;System.Workflow.Runtime.TimerEventSubscription&quot;> </xref> 된 타이머 큐에서 지정 된 구독 id입니다."
  remarks: "제거는 <xref:System.Workflow.Runtime.TimerEventSubscription>타이머 큐에서 지정 된 구독 id로.</xref:System.Workflow.Runtime.TimerEventSubscription> 큐의 구독에 따라 배치 됩니다 자신의 <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=fullName>값 보다 작은 값 보다 큰 값 앞에 배치 됩니다.</xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=fullName> 구독 제거 되었으면 큐의 시작 부분에 구독 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=fullName>이 구독과 연결 된 타이머 이벤트를 취소 하기 위해 호출 하 고 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=fullName>현재 큐의 시작 부분에 있는 구독에 대 한 타이머 이벤트를 예약 하기 위해 호출 됩니다.</xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=fullName> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=fullName> 제거는 스레드로부터 안전 합니다."
  syntax:
    content: public void Remove (Guid timerSubscriptionId);
    parameters:
    - id: timerSubscriptionId
      type: System.Guid
      description: "<xref:System.Guid>의 <xref href=&quot;System.Workflow.Runtime.TimerEventSubscription&quot;> </xref> 제거 하려면.</xref:System.Guid>"
  overload: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Workflow.Runtime.TimerEventSubscription)
  id: Remove(System.Workflow.Runtime.TimerEventSubscription)
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  langs:
  - csharp
  name: Remove(TimerEventSubscription)
  nameWithType: TimerEventSubscriptionCollection.Remove(TimerEventSubscription)
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(TimerEventSubscription)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "제거는 <xref href=&quot;System.Workflow.Runtime.TimerEventSubscription&quot;> </xref> 타이머 큐에서 합니다."
  remarks: "제거는 <xref:System.Workflow.Runtime.TimerEventSubscription>타이머 큐에서.</xref:System.Workflow.Runtime.TimerEventSubscription> 큐의 구독에 따라 배치 됩니다 자신의 <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=fullName>값 보다 작은 값 보다 큰 값 앞에 배치 됩니다.</xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=fullName> 구독 제거 되었으면 큐의 시작 부분에 구독 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=fullName>이 구독과 연결 된 타이머 이벤트를 취소 하기 위해 호출 하 고 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=fullName>현재 큐의 시작 부분에 있는 구독에 대 한 타이머 이벤트를 예약 하기 위해 호출 됩니다.</xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=fullName> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=fullName> <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29>스레드로부터 안전 합니다.</xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29>"
  syntax:
    content: public void Remove (System.Workflow.Runtime.TimerEventSubscription item);
    parameters:
    - id: item
      type: System.Workflow.Runtime.TimerEventSubscription
      description: "<xref href=&quot;System.Workflow.Runtime.TimerEventSubscription&quot;> </xref> 을 타이머 큐에서 제거 합니다."
  overload: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>item</code>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  platform:
  - net462
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot
  id: SyncRoot
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: TimerEventSubscriptionCollection.SyncRoot
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다는 <xref href=&quot;System.Workflow.Runtime.TimerEventSubscriptionCollection&quot;> </xref>합니다."
  remarks: "SyncRoot <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>.</xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> 에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 반환       에 대 한 액세스는 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>동기화 됩니다; 그러나 컬렉션 열거는 기본적으로 스레드 안전한 프로시저가 아닙니다.</xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> 컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다. 을 열거 하는 동안 스레드로부터 안전을 보장 하려면 잠그거나는 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>SyncRoot 또는 catch 다른 스레드에서 변경 된 내용으로 인해 발생 한 예외를 사용 하 여 열거 하는 동안.</xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "개체에 대 한 액세스를 동기화 하는 데는 <xref href=&quot;System.Workflow.Runtime.TimerEventSubscriptionCollection&quot;> </xref>합니다."
  overload: System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty
  id: TimerCollectionProperty
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  langs:
  - csharp
  name: TimerCollectionProperty
  nameWithType: TimerEventSubscriptionCollection.TimerCollectionProperty
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty
  type: Field
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "워크플로 인스턴스와 연결 된 타이머 큐입니다. 순서가 지정 된 시간을 포함 하는이 큐 <xref href=&quot;System.Workflow.Runtime.TimerEventSubscription&quot;> </xref> 워크플로에 대 한 개체입니다."
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty TimerCollectionProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Add(System.Workflow.Runtime.TimerEventSubscription)
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: Add(TimerEventSubscription)
  nameWithType: TimerEventSubscriptionCollection.Add(TimerEventSubscription)
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.Add(TimerEventSubscription)
- uid: System.Workflow.Runtime.TimerEventSubscription
  parent: System.Workflow.Runtime
  isExternal: false
  name: TimerEventSubscription
  nameWithType: TimerEventSubscription
  fullName: System.Workflow.Runtime.TimerEventSubscription
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo(System.Array,System.Int32)
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: TimerEventSubscriptionCollection.CopyTo(Array,Int32)
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Count
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: Count
  nameWithType: TimerEventSubscriptionCollection.Count
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.Count
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: TimerEventSubscriptionCollection.GetEnumerator()
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: TimerEventSubscriptionCollection.IsSynchronized
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: Peek()
  nameWithType: TimerEventSubscriptionCollection.Peek()
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek()
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Guid)
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: Remove(Guid)
  nameWithType: TimerEventSubscriptionCollection.Remove(Guid)
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Workflow.Runtime.TimerEventSubscription)
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: Remove(TimerEventSubscription)
  nameWithType: TimerEventSubscriptionCollection.Remove(TimerEventSubscription)
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(TimerEventSubscription)
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: SyncRoot
  nameWithType: TimerEventSubscriptionCollection.SyncRoot
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: TimerCollectionProperty
  nameWithType: TimerEventSubscriptionCollection.TimerCollectionProperty
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Add*
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: Add
  nameWithType: TimerEventSubscriptionCollection.Add
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo*
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: CopyTo
  nameWithType: TimerEventSubscriptionCollection.CopyTo
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Count*
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: Count
  nameWithType: TimerEventSubscriptionCollection.Count
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator*
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: TimerEventSubscriptionCollection.GetEnumerator
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized*
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: TimerEventSubscriptionCollection.IsSynchronized
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek*
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: Peek
  nameWithType: TimerEventSubscriptionCollection.Peek
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove*
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: Remove
  nameWithType: TimerEventSubscriptionCollection.Remove
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot*
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: SyncRoot
  nameWithType: TimerEventSubscriptionCollection.SyncRoot
