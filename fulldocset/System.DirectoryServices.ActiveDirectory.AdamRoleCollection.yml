### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  id: AdamRoleCollection
  children:
  - System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamRole)
  - System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamRole[],System.Int32)
  - System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamRole)
  - System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item(System.Int32)
  langs:
  - csharp
  name: AdamRoleCollection
  nameWithType: AdamRoleCollection
  fullName: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  type: Class
  summary: "AdamRoleCollection 클래스는 포함 하는 읽기 전용 컬렉션 <xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamRole&quot;> </xref> 항목입니다."
  remarks: >-
    > [!NOTE]

    >  The AdamRoleCollection class refers to Active Directory Application Mode (ADAM) which has been renamed to Active Directory Lightweight Directory Services (AD LDS).
  syntax:
    content: 'public class AdamRoleCollection : System.Collections.ReadOnlyCollectionBase'
  inheritance:
  - System.Object
  - System.Collections.ReadOnlyCollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.ReadOnlyCollectionBase.Count
  - System.Collections.ReadOnlyCollectionBase.GetEnumerator
  - System.Collections.ReadOnlyCollectionBase.InnerList
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamRole)
  id: Contains(System.DirectoryServices.ActiveDirectory.AdamRole)
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  langs:
  - csharp
  name: Contains(AdamRole)
  nameWithType: AdamRoleCollection.Contains(AdamRole)
  fullName: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains(AdamRole)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "결정 하는 경우 지정 된 <xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamRole&quot;> </xref> 이 컬렉션에 항목을 합니다."
  syntax:
    content: public bool Contains (System.DirectoryServices.ActiveDirectory.AdamRole role);
    parameters:
    - id: role
      type: System.DirectoryServices.ActiveDirectory.AdamRole
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamRole&quot;> </xref> 이 컬렉션에서 검색할 항목입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamRole&quot;> </xref> ;이 컬렉션의 항목은 그렇지 않은 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>role</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>role</code>유효 하지 않거나 <xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamRole&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamRole[],System.Int32)
  id: CopyTo(System.DirectoryServices.ActiveDirectory.AdamRole[],System.Int32)
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  langs:
  - csharp
  name: CopyTo(AdamRole[],Int32)
  nameWithType: AdamRoleCollection.CopyTo(AdamRole[],Int32)
  fullName: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo(AdamRole[],Int32)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "모든 복사 <xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamRole&quot;> </xref> 대상 배열의 지정 된 인덱스부터 지정 된 배열에이 컬렉션의 항목입니다."
  syntax:
    content: public void CopyTo (System.DirectoryServices.ActiveDirectory.AdamRole[] roles, int index);
    parameters:
    - id: roles
      type: System.DirectoryServices.ActiveDirectory.AdamRole[]
      description: "배열 <xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamRole&quot;> </xref> 이 컬렉션의 요소를 수신 하는 항목입니다."
    - id: index
      type: System.Int32
      description: "인덱스는&0;부터 시작 `roles` 이 메서드가이 컬렉션을 복사 하기 시작 합니다."
  overload: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "기본 디렉터리 서비스에 대 한 호출에서 오류가 발생 했습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "대상 배열이 필요한 수의 요소를 포함할 수 있는 크기입니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>roles</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> index </code> 지정 된 매개 변수가 대상 배열의 범위를 벗어났습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamRole)
  id: IndexOf(System.DirectoryServices.ActiveDirectory.AdamRole)
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  langs:
  - csharp
  name: IndexOf(AdamRole)
  nameWithType: AdamRoleCollection.IndexOf(AdamRole)
  fullName: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf(AdamRole)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "지정된 된 첫 번째 반환 <xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamRole&quot;> </xref> 이 컬렉션의 항목입니다."
  syntax:
    content: public int IndexOf (System.DirectoryServices.ActiveDirectory.AdamRole role);
    parameters:
    - id: role
      type: System.DirectoryServices.ActiveDirectory.AdamRole
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamRole&quot;> </xref> 이 컬렉션에서 검색할 항목입니다."
    return:
      type: System.Int32
      description: "첫 번째 일치 하는 항목의&0;부터 시작 하는 인덱스입니다. 이 컬렉션의 어떤 구성원도 같지 않으면-1은 <xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamRole&quot;> </xref> 항목입니다."
  overload: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "기본 디렉터리 서비스에 대 한 호출에서 오류가 발생 했습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>role</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>role</code>유효 하지 않거나 <xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamRole&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: AdamRoleCollection.Item(Int32)
  fullName: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item(Int32)
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "가져옵니다는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamRole&quot;> </xref> 이 컬렉션의 항목입니다."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamRole this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "0부터 시작 인덱스는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamRole&quot;> </xref> 가져올 개체입니다."
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamRole
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamRole&quot;> </xref> 지정된 된 인덱스에 있는 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> index </code> 지정 된 컬렉션의 범위를 벗어났습니다."
  platform:
  - net462
references:
- uid: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ReadOnlyCollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryOperationException
  nameWithType: ActiveDirectoryOperationException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamRole)
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  isExternal: false
  name: Contains(AdamRole)
  nameWithType: AdamRoleCollection.Contains(AdamRole)
  fullName: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains(AdamRole)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.ActiveDirectory.AdamRole
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: AdamRole
  nameWithType: AdamRole
  fullName: System.DirectoryServices.ActiveDirectory.AdamRole
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamRole[],System.Int32)
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  isExternal: false
  name: CopyTo(AdamRole[],Int32)
  nameWithType: AdamRoleCollection.CopyTo(AdamRole[],Int32)
  fullName: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo(AdamRole[],Int32)
- uid: System.DirectoryServices.ActiveDirectory.AdamRole[]
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: AdamRole
  nameWithType: AdamRole
  fullName: System.DirectoryServices.ActiveDirectory.AdamRole[]
  spec.csharp:
  - uid: System.DirectoryServices.ActiveDirectory.AdamRole
    name: AdamRole
    nameWithType: AdamRole
    fullName: AdamRole[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamRole)
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  isExternal: false
  name: IndexOf(AdamRole)
  nameWithType: AdamRoleCollection.IndexOf(AdamRole)
  fullName: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf(AdamRole)
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item(System.Int32)
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: AdamRoleCollection.Item(Int32)
  fullName: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item(Int32)
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains*
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  isExternal: false
  name: Contains
  nameWithType: AdamRoleCollection.Contains
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo*
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  isExternal: false
  name: CopyTo
  nameWithType: AdamRoleCollection.CopyTo
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf*
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  isExternal: false
  name: IndexOf
  nameWithType: AdamRoleCollection.IndexOf
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item*
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  isExternal: false
  name: Item
  nameWithType: AdamRoleCollection.Item
