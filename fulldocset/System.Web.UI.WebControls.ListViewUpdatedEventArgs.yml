### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  id: ListViewUpdatedEventArgs
  children:
  - System.Web.UI.WebControls.ListViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)
  - System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows
  - System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception
  - System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode
  - System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues
  - System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues
  langs:
  - csharp
  name: ListViewUpdatedEventArgs
  nameWithType: ListViewUpdatedEventArgs
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  type: Class
  summary: "에 대 한 데이터를 제공는 <xref href=&quot;System.Web.UI.WebControls.ListView.ItemUpdated&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Web.UI.WebControls.ListView>발생는 <xref:System.Web.UI.WebControls.ListView.ItemUpdated>이벤트 때는 <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A>메서드를 호출 하거나 컨트롤의 업데이트 단추를 클릭할 때, 후는 <xref:System.Web.UI.WebControls.ListView>항목을 업데이트 합니다.</xref:System.Web.UI.WebControls.ListView> </xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> </xref:System.Web.UI.WebControls.ListView.ItemUpdated> </xref:System.Web.UI.WebControls.ListView> (업데이트 단추는 단추 인 `CommandName` 속성을 &quot;업데이트&quot;로 설정 합니다.) 이 업데이트 작업의 결과 확인 하는 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       ListViewUpdatedEventArgs 개체 이벤트 처리 메서드에 전달 됩니다. 이 개체를 사용 하면 업데이트 된 항목의 수를 확인 하 고 모든 예외 발생 했을 수를 가져올 수 있습니다. 업데이트 작업에 의해 영향을 받는 항목의 수를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows%2A>속성.</xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows%2A> 예외가 발생 한 것인지 확인을 사용 하 여는 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception%2A>속성.</xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception%2A> 설정 하 여 이벤트 처리 메서드에서 예외가 처리 되었는지 여부를 나타낼 수 있습니다는 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A>속성.</xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A> 필드의 원래 값을 사용 하 여 액세스할 수 있습니다는 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues%2A>속성.</xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues%2A> 사용 하 여 업데이트 된 필드 값에 액세스할 수 있습니다는 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues%2A>속성.</xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues%2A>       기본적으로는 <xref:System.Web.UI.WebControls.ListView>항목 업데이트 작업 후 읽기 전용 모드로 돌아갑니다.</xref:System.Web.UI.WebControls.ListView> 업데이트 작업 중에 발생 한 예외를 처리 하는 경우 보관할 수 있습니다는 <xref:System.Web.UI.WebControls.ListView>항목을 설정 하 여 편집 모드에는 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode%2A>속성을 `true`.</xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode%2A> </xref:System.Web.UI.WebControls.ListView>       목록이 ListViewUpdatedEventArgs 클래스의 인스턴스에 대 한 초기 속성 값에 대 한 참조는 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.%23ctor%2A>생성자.</xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.%23ctor%2A>"
  example:
  - "The following example shows how to use the ListViewUpdatedEventArgs object to determine whether an exception occurred during an update operation.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.UI.WebControls.ListView.ItemUpdated#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_339_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ListView.ItemUpdated#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_339_1.aspx)]"
  syntax:
    content: 'public class ListViewUpdatedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)
  id: '#ctor(System.Int32,System.Exception)'
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  langs:
  - csharp
  name: ListViewUpdatedEventArgs(Int32,Exception)
  nameWithType: ListViewUpdatedEventArgs.ListViewUpdatedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.ListViewUpdatedEventArgs(Int32,Exception)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.ListViewUpdatedEventArgs&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs>클래스</xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> 의 새 인스턴스를 초기화 하려면이 생성자를 사용 합니다.      > [!NOTE] >이 생성자는 주로 컨트롤 개발자가 사용 이벤트를 발생 시킬 때.       다음 표에서 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs>클래스</xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> 의 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 초기 값 |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows%2A>| 값은 `affectedRows` 매개 변수입니다. |   | <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception%2A>| 에 포함 된 <xref:System.Exception?displayProperty=fullName>개체는 `e` 매개 변수입니다. |   | <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A>| `false`.|   | <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode%2A>| `false`.|</xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode%2A></xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A></xref:System.Exception?displayProperty=fullName></xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception%2A></xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows%2A>"
  syntax:
    content: public ListViewUpdatedEventArgs (int affectedRows, Exception exception);
    parameters:
    - id: affectedRows
      type: System.Int32
      description: "업데이트 작업에 의해 영향을 받는 행의 수입니다."
    - id: exception
      type: System.Exception
      description: "있는 경우 업데이트 작업을 수행할 때 발생 한 예외입니다. 예외가 발생 하는 경우 사용 하 여 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.ListViewUpdatedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows
  id: AffectedRows
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  langs:
  - csharp
  name: AffectedRows
  nameWithType: ListViewUpdatedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "업데이트 작업에 의해 영향을 받는 행의 수를 가져옵니다."
  remarks: "데이터 원본에서 반환 된 업데이트 작업에 의해 영향을 받는 행의 수를 확인 하려면 받는 속성을 사용 합니다. 항목을 하나만 업데이트 되는 일반적으로이 속성 값은 0 또는 1 일반적으로 포함 됩니다.       경우에 따라 업데이트 작업 중 예외가 발생 하지 않는 하는 오류가 발생할 수 있습니다. 이 경우 받는 속성 항목 업데이트 되었는지 확인 데 사용할 수 있습니다."
  example:
  - "The following example shows how to use the AffectedRows property to verify that an item was updated. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> class.  \n  \n [!code-vb[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_677_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_677_1.aspx)]"
  syntax:
    content: public int AffectedRows { get; }
    return:
      type: System.Int32
      description: "업데이트 작업에 의해 영향을 받는 행의 수입니다."
  overload: System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: ListViewUpdatedEventArgs.Exception
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "업데이트 작업 중에 발생 한 예외를 가져옵니다."
  remarks: "(있는 경우) 예외를 확인 하려면 예외 속성을 사용 하는 업데이트 작업 중에 발생 합니다. 이 속성을 반환 하는 경우 예외가 발생 하지, `null`합니다.      > [!NOTE] > 예외가 발생 하 고 이벤트 처리기를 설정에 예외를 처리 하는 경우는 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A>속성을 `true`.</xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A> 그렇지 않은 경우는 <xref:System.Web.UI.WebControls.ListView>제어 예외를 다시 throw 합니다.</xref:System.Web.UI.WebControls.ListView>"
  example:
  - "The following example shows how to use the Exception property to determine whether an exception occurred during an update operation. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> class.  \n  \n [!code-vb[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_764_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_764_1.aspx)]"
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "있는 경우 업데이트 작업 중에 발생 하는 예외 예외가 발생 한, 없으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: ListViewUpdatedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "업데이트 작업 중에 발생 하는 예외 이벤트는 동안 처리 되었는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "업데이트 작업 중에 예외가 발생 하는 경우 이벤트 중 발생 한 예외 처리 되었는지 여부를 나타내려면 ExceptionHandled 속성을 사용 합니다. 이 속성은로 설정 하는 경우 `true`, 예외 처리 된 것으로 간주 되어으로 다시 throw 되지 않습니다는 <xref:System.Web.UI.WebControls.ListView>컨트롤.</xref:System.Web.UI.WebControls.ListView> 이 속성은로 설정 하는 경우 `false`, <xref:System.Web.UI.WebControls.ListView>제어 예외를 다시 throw 합니다.</xref:System.Web.UI.WebControls.ListView> 발생 한 예외를 확인 하려면는 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception%2A>속성.</xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception%2A>"
  example:
  - "The following example shows how to use the ExceptionHandled property to indicate that the exception was handled in the event handler. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> class.  \n  \n [!code-vb[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_148_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_148_1.aspx)]"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>예외 이벤트에 처리기; 처리 된 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode
  id: KeepInEditMode
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  langs:
  - csharp
  name: KeepInEditMode
  nameWithType: ListViewUpdatedEventArgs.KeepInEditMode
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "표시 하는 값을 가져오거나 설정 합니다. 여부는 <xref href=&quot;System.Web.UI.WebControls.ListView&quot;> </xref> 업데이트 작업 후 컨트롤 편집 모드에 유지 해야 합니다."
  remarks: "기본적으로는 <xref:System.Web.UI.WebControls.ListView>컨트롤이 업데이트 작업 후 읽기 전용 모드로 돌아갑니다.</xref:System.Web.UI.WebControls.ListView> KeepInEditMode 속성을 설정 `true` 지정 하는 <xref:System.Web.UI.WebControls.ListView>컨트롤 편집 모드에 유지 해야 합니다.</xref:System.Web.UI.WebControls.ListView> 사용자가 입력 한 값도 유지 됩니다."
  example:
  - "The following example shows how to use the KeepInEditMode property to keep a <xref:System.Web.UI.WebControls.ListView> control in edit mode when an exception occurs. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> class.  \n  \n [!code-vb[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_74_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_74_1.aspx)]"
  syntax:
    content: public bool KeepInEditMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤은 업데이트 작업 후 편집 모드에 유지 해야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues
  id: NewValues
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  langs:
  - csharp
  name: NewValues
  nameWithType: ListViewUpdatedEventArgs.NewValues
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "업데이트 된 항목에 대 한 새 값을 포함 하는 사전을 가져옵니다."
  remarks: "새 값 속성을 사용 하 여 업데이트 된 항목에 대 한 새 필드 값에 액세스 하도록 합니다. 예를 들어 업데이트 된 항목의 로그를 유지 하려면이 값을 사용할 수 있습니다.       구현 하는 개체를 반환 하는 새 값 속성은 <xref:System.Collections.Specialized.IOrderedDictionary>인터페이스.</xref:System.Collections.Specialized.IOrderedDictionary> 개체에 <xref:System.Collections.DictionaryEntry>업데이트 된 항목의 필드를 나타내는 개체입니다.</xref:System.Collections.DictionaryEntry>      > [!NOTE] > 가기로 인덱스를 사용할 수 있습니다는 <xref:System.Collections.Specialized.IOrderedDictionary>직접 값 필드에 액세스 하는 개체입니다.</xref:System.Collections.Specialized.IOrderedDictionary>"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary NewValues { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "업데이트 된 항목에 대 한 새 값입니다."
  overload: System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues
  id: OldValues
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  langs:
  - csharp
  name: OldValues
  nameWithType: ListViewUpdatedEventArgs.OldValues
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "업데이트 된 항목에 대 한 원래 값을 포함 하는 사전을 가져옵니다."
  remarks: "업데이트 된 항목에 대 한 원래 필드 값에 액세스 하려면 OldValues 속성을 사용 합니다. 예를 들어 업데이트 된 항목의 로그를 유지 하려면이 값을 사용할 수 있습니다.       OldValues 속성 구현 하는 개체를 반환 합니다.는 <xref:System.Collections.Specialized.IOrderedDictionary>인터페이스.</xref:System.Collections.Specialized.IOrderedDictionary> 개체에 <xref:System.Collections.DictionaryEntry>업데이트 된 항목의 필드를 나타내는 개체입니다.</xref:System.Collections.DictionaryEntry>      > [!NOTE] > 가기로 인덱스를 사용할 수 있습니다는 <xref:System.Collections.Specialized.IOrderedDictionary>직접 값 필드에 액세스 하는 개체입니다.</xref:System.Collections.Specialized.IOrderedDictionary>"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary OldValues { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "업데이트 된 항목에 대 한 원래 값입니다."
  overload: System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: ListViewUpdatedEventArgs(Int32,Exception)
  nameWithType: ListViewUpdatedEventArgs.ListViewUpdatedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.ListViewUpdatedEventArgs(Int32,Exception)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: ListViewUpdatedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: Exception
  nameWithType: ListViewUpdatedEventArgs.Exception
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: ListViewUpdatedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: KeepInEditMode
  nameWithType: ListViewUpdatedEventArgs.KeepInEditMode
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: NewValues
  nameWithType: ListViewUpdatedEventArgs.NewValues
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: OldValues
  nameWithType: ListViewUpdatedEventArgs.OldValues
  fullName: System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.#ctor*
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: ListViewUpdatedEventArgs
  nameWithType: ListViewUpdatedEventArgs.ListViewUpdatedEventArgs
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows*
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: ListViewUpdatedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception*
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: Exception
  nameWithType: ListViewUpdatedEventArgs.Exception
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: ListViewUpdatedEventArgs.ExceptionHandled
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode*
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: KeepInEditMode
  nameWithType: ListViewUpdatedEventArgs.KeepInEditMode
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues*
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: NewValues
  nameWithType: ListViewUpdatedEventArgs.NewValues
- uid: System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues*
  parent: System.Web.UI.WebControls.ListViewUpdatedEventArgs
  isExternal: false
  name: OldValues
  nameWithType: ListViewUpdatedEventArgs.OldValues
