### YamlMime:ManagedReference
items:
- uid: System.Security.NamedPermissionSet
  id: NamedPermissionSet
  children:
  - System.Security.NamedPermissionSet.#ctor(System.Security.NamedPermissionSet)
  - System.Security.NamedPermissionSet.#ctor(System.String)
  - System.Security.NamedPermissionSet.#ctor(System.String,System.Security.Permissions.PermissionState)
  - System.Security.NamedPermissionSet.#ctor(System.String,System.Security.PermissionSet)
  - System.Security.NamedPermissionSet.Copy
  - System.Security.NamedPermissionSet.Copy(System.String)
  - System.Security.NamedPermissionSet.Description
  - System.Security.NamedPermissionSet.Equals(System.Object)
  - System.Security.NamedPermissionSet.FromXml(System.Security.SecurityElement)
  - System.Security.NamedPermissionSet.GetHashCode
  - System.Security.NamedPermissionSet.Name
  - System.Security.NamedPermissionSet.ToXml
  langs:
  - csharp
  name: NamedPermissionSet
  nameWithType: NamedPermissionSet
  fullName: System.Security.NamedPermissionSet
  type: Class
  summary: "이름 및 설명을 연관 된 사용 권한 집합을 정의 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "명명 된 집합은 특정 코드 그룹에 속해 있는 코드에 부여할 사용 권한을 지정 하려면 보안 정책 관리에서 사용 됩니다. 이름은 영숫자 문자열입니다. 설명 문자열 인쇄 가능한 문자 구성 될 수 있습니다."
  example:
  - "The following code example shows the use of members of the NamedPermissionSet class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class NamedPermissionSet : System.Security.PermissionSet
  inheritance:
  - System.Object
  - System.Security.PermissionSet
  implements: []
  inheritedMembers:
  - System.Security.PermissionSet.AddPermission(System.Security.IPermission)
  - System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)
  - System.Security.PermissionSet.Assert
  - System.Security.PermissionSet.ContainsNonCodeAccessPermissions
  - System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)
  - System.Security.PermissionSet.CopyTo(System.Array,System.Int32)
  - System.Security.PermissionSet.Count
  - System.Security.PermissionSet.Demand
  - System.Security.PermissionSet.Deny
  - System.Security.PermissionSet.GetEnumerator
  - System.Security.PermissionSet.GetEnumeratorImpl
  - System.Security.PermissionSet.GetPermission(System.Type)
  - System.Security.PermissionSet.GetPermissionImpl(System.Type)
  - System.Security.PermissionSet.Intersect(System.Security.PermissionSet)
  - System.Security.PermissionSet.IsEmpty
  - System.Security.PermissionSet.IsReadOnly
  - System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)
  - System.Security.PermissionSet.IsSynchronized
  - System.Security.PermissionSet.IsUnrestricted
  - System.Security.PermissionSet.PermitOnly
  - System.Security.PermissionSet.RemovePermission(System.Type)
  - System.Security.PermissionSet.RemovePermissionImpl(System.Type)
  - System.Security.PermissionSet.RevertAssert
  - System.Security.PermissionSet.SetPermission(System.Security.IPermission)
  - System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)
  - System.Security.PermissionSet.SyncRoot
  - System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  - System.Security.PermissionSet.ToString
  - System.Security.PermissionSet.Union(System.Security.PermissionSet)
  platform:
  - net462
- uid: System.Security.NamedPermissionSet.#ctor(System.Security.NamedPermissionSet)
  id: '#ctor(System.Security.NamedPermissionSet)'
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: NamedPermissionSet(NamedPermissionSet)
  nameWithType: NamedPermissionSet.NamedPermissionSet(NamedPermissionSet)
  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(NamedPermissionSet)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 다른 명명 된 권한 집합에서 클래스입니다."
  syntax:
    content: public NamedPermissionSet (System.Security.NamedPermissionSet permSet);
    parameters:
    - id: permSet
      type: System.Security.NamedPermissionSet
      description: "새 인스턴스를 만드는 데 사용할 설정 명명 된 권한입니다."
  overload: System.Security.NamedPermissionSet.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.NamedPermissionSet.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: NamedPermissionSet(String)
  nameWithType: NamedPermissionSet.NamedPermissionSet(String)
  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "새로 만든 빈 인스턴스를 초기화는 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 지정 된 이름의 클래스입니다."
  remarks: "이 생성자를 사용 하 여 명명된 된 권한 하지만 아무런 권한 집합을 만듭니다는 <xref:System.Security.Permissions.PermissionState>사용 권한 상태입니다.</xref:System.Security.Permissions.PermissionState> 명명된 된 권한 집합을 효과적으로 제한 없는 상태에서 구현 하는 모든 권한이 포함 된 <xref:System.Security.Permissions.IUnrestrictedPermission>인터페이스.</xref:System.Security.Permissions.IUnrestrictedPermission> 모든 기본 제공 사용 권한 뿐만 아니라 모든 사용자 지정 사용자 정의 권한을 <xref:System.Security.Permissions.IUnrestrictedPermission>.</xref:System.Security.Permissions.IUnrestrictedPermission> 를 구현 하는 명명 된 권한 집합이 포함 됩니다. 해당 하는 모든 사용 권한이 됩니다는 `Unrestricted` 사용 권한 상태입니다. 사용 권한을 구현 하지 않는 <xref:System.Security.Permissions.IUnrestrictedPermission>비어 있는 인스턴스에서 됩니다.</xref:System.Security.Permissions.IUnrestrictedPermission>"
  syntax:
    content: public NamedPermissionSet (string name);
    parameters:
    - id: name
      type: System.String
      description: "명명 된 권한 집합을 새 이름입니다."
  overload: System.Security.NamedPermissionSet.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> name </code> 매개 변수는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이거나 빈 문자열 (&quot;&quot;)."
  platform:
  - net462
- uid: System.Security.NamedPermissionSet.#ctor(System.String,System.Security.Permissions.PermissionState)
  id: '#ctor(System.String,System.Security.Permissions.PermissionState)'
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: NamedPermissionSet(String,PermissionState)
  nameWithType: NamedPermissionSet.NamedPermissionSet(String,PermissionState)
  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(String,PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 무제한 또는 완전히 제한 됨된 상태에서 지정된 된 이름 사용 합니다."
  remarks: "명명된 된 권한 집합을 효과적으로 제한 없는 상태에서 구현 하는 모든 권한이 포함 된 <xref:System.Security.Permissions.IUnrestrictedPermission>인터페이스.</xref:System.Security.Permissions.IUnrestrictedPermission> 명명 된 권한 집합에는 모든 기본 제공 사용 권한 뿐만 아니라 모든 사용자 지정 권한이 포함 됩니다. 모든 사용 권한을 갖습니다.는 `Unrestricted` <xref:System.Security.Permissions.PermissionState>.</xref:System.Security.Permissions.PermissionState> 사용 권한을 구현 하지 않는 <xref:System.Security.Permissions.IUnrestrictedPermission>, 예: id 권한 비어 있는 인스턴스에서 됩니다.</xref:System.Security.Permissions.IUnrestrictedPermission>"
  syntax:
    content: public NamedPermissionSet (string name, System.Security.Permissions.PermissionState state);
    parameters:
    - id: name
      type: System.String
      description: "명명 된 권한 집합을 새 이름입니다."
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "중 하나는 <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> 값입니다."
  overload: System.Security.NamedPermissionSet.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> name </code> 매개 변수는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이거나 빈 문자열 (&quot;&quot;)."
  platform:
  - net462
- uid: System.Security.NamedPermissionSet.#ctor(System.String,System.Security.PermissionSet)
  id: '#ctor(System.String,System.Security.PermissionSet)'
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: NamedPermissionSet(String,PermissionSet)
  nameWithType: NamedPermissionSet.NamedPermissionSet(String,PermissionSet)
  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(String,PermissionSet)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 사용 권한 집합에서 지정 된 이름 사용 합니다."
  remarks: ''
  example:
  - "The following code example shows the use of the NamedPermissionSet constructor to create a new <xref:System.Security.NamedPermissionSet> object. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public NamedPermissionSet (string name, System.Security.PermissionSet permSet);
    parameters:
    - id: name
      type: System.String
      description: "명명 된 권한 집합에 대 한 이름입니다."
    - id: permSet
      type: System.Security.PermissionSet
      description: "권한 집합을 가져올 새 명명 된 권한 집합의 값입니다."
  overload: System.Security.NamedPermissionSet.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> name </code> 매개 변수는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이거나 빈 문자열 (&quot;&quot;)."
  platform:
  - net462
- uid: System.Security.NamedPermissionSet.Copy
  id: Copy
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: Copy()
  nameWithType: NamedPermissionSet.Copy()
  fullName: System.Security.NamedPermissionSet.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "명명된 된 권한 집합에서 사용 권한 집합 복사본을 만듭니다."
  remarks: ''
  example:
  - "The following code example shows the use of the Copy method to create a copy of the current <xref:System.Security.NamedPermissionSet>. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public override System.Security.PermissionSet Copy ();
    parameters: []
    return:
      type: System.Security.PermissionSet
      description: "사용 권한 집합을 사용 권한의 복사본 명명 된 권한 집합에 있습니다."
  overload: System.Security.NamedPermissionSet.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.NamedPermissionSet.Copy(System.String)
  id: Copy(System.String)
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: Copy(String)
  nameWithType: NamedPermissionSet.Copy(String)
  fullName: System.Security.NamedPermissionSet.Copy(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "다른 이름을 동일한 사용 권한을 가진 명명 된 권한 집합의 복사본을 만듭니다."
  syntax:
    content: public System.Security.NamedPermissionSet Copy (string name);
    parameters:
    - id: name
      type: System.String
      description: "명명 된 권한 집합을 새 이름입니다."
    return:
      type: System.Security.NamedPermissionSet
      description: "명명 된 권한 집합을 새 이름으로의 복사본입니다."
  overload: System.Security.NamedPermissionSet.Copy*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> name </code> 매개 변수는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이거나 빈 문자열 (&quot;&quot;)."
  platform:
  - net462
- uid: System.Security.NamedPermissionSet.Description
  id: Description
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: Description
  nameWithType: NamedPermissionSet.Description
  fullName: System.Security.NamedPermissionSet.Description
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "현재 명명 된 권한 집합에 대 한 텍스트 설명을 가져오거나 설정 합니다."
  remarks: "설명에 사용 권한을 포함 된 집합 및 해당 용도 이해 관리자를 수 있습니다."
  example:
  - "The following code example shows the use of the Description property to display the description of the current <xref:System.Security.NamedPermissionSet>. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "명명 된 권한 집합의 텍스트 설명입니다."
  overload: System.Security.NamedPermissionSet.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Security.NamedPermissionSet.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: NamedPermissionSet.Equals(Object)
  fullName: System.Security.NamedPermissionSet.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "확인 여부를 지정 된 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 현재 개체가 같은지 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref>합니다."
  remarks: "자세한 내용은 <xref:System.Object.Equals%2A>.</xref:System.Object.Equals%2A> 을 참조 하십시오."
  example:
  - "The following code example shows the use of the Equals method to compare two <xref:System.Security.NamedPermissionSet> objects. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 현재와 비교할 개체 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우 지정 된 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 현재 같은지 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 개체; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.NamedPermissionSet.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.NamedPermissionSet.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: NamedPermissionSet.FromXml(SecurityElement)
  fullName: System.Security.NamedPermissionSet.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "XML 인코딩에서 지정된 된 상태와 명명 된 권한 집합을 다시 만듭니다."
  remarks: "이 메서드 <xref:System.Security.NamedPermissionSet.ToXml%2A>.</xref:System.Security.NamedPermissionSet.ToXml%2A> 에서 이전에 만든 XML 요소에서 명명 된 권한 집합의 상태를 다시 만듭니다."
  example:
  - "The following code example shows the use of the FromXml method to recreate a <xref:System.Security.NamedPermissionSet> object. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement et);
    parameters:
    - id: et
      type: System.Security.SecurityElement
      description: "명명된 된 권한 집합의 XML 표현을 포함 하는 보안 요소입니다."
  overload: System.Security.NamedPermissionSet.FromXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> et </code> 매개 변수는 명명된 된 권한 집합의 한 유효한 표현 되지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>et</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.NamedPermissionSet.GetHashCode
  id: GetHashCode
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: NamedPermissionSet.GetHashCode()
  fullName: System.Security.NamedPermissionSet.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "에 대 한 해시 코드를 가져옵니다는 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 개체 해시 알고리즘 및 데이터 해시 테이블 같은 구조에 적합 합니다."
  remarks: "동일한 사용 권한이의 두 인스턴스에 대 한 해시 코드는 다를 수 있습니다, 따라서 해시 코드를 쓰일 수 없습니다 두 개를 비교 하 <xref:System.Security.NamedPermissionSet>개체입니다.</xref:System.Security.NamedPermissionSet>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "현재에 대 한 해시 코드 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 개체입니다."
  overload: System.Security.NamedPermissionSet.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.NamedPermissionSet.Name
  id: Name
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: Name
  nameWithType: NamedPermissionSet.Name
  fullName: System.Security.NamedPermissionSet.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "현재 명명 된 권한 집합의 이름을 가져오거나 설정 합니다."
  remarks: "코드 그룹 사용 권한 집합 이름으로 참조 합니다."
  example:
  - "The following code example shows the use of the Name property to display the name of a <xref:System.Security.NamedPermissionSet>. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "명명된 된 권한 집합의 이름입니다."
  overload: System.Security.NamedPermissionSet.Name*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "이름은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이거나 빈 문자열 (&quot;&quot;)."
  platform:
  - net462
- uid: System.Security.NamedPermissionSet.ToXml
  id: ToXml
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: ToXml()
  nameWithType: NamedPermissionSet.ToXml()
  fullName: System.Security.NamedPermissionSet.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "명명된 된 권한 집합에 대 한 XML 설명을 요소를 만듭니다."
  remarks: "사용 하 여 <xref:System.Security.NamedPermissionSet.FromXml%2A>에 반환 된 요소에서 나타내는 상태를 다시 만듭니다.</xref:System.Security.NamedPermissionSet.FromXml%2A>"
  example:
  - "The following code example shows the use of the ToXml method to recreate a <xref:System.Security.NamedPermissionSet> object. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "명명 된 권한 집합의 XML 표현입니다."
  overload: System.Security.NamedPermissionSet.ToXml*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.PermissionSet
  isExternal: false
  name: System.Security.PermissionSet
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.NamedPermissionSet.#ctor(System.Security.NamedPermissionSet)
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: NamedPermissionSet(NamedPermissionSet)
  nameWithType: NamedPermissionSet.NamedPermissionSet(NamedPermissionSet)
  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(NamedPermissionSet)
- uid: System.Security.NamedPermissionSet
  parent: System.Security
  isExternal: false
  name: NamedPermissionSet
  nameWithType: NamedPermissionSet
  fullName: System.Security.NamedPermissionSet
- uid: System.Security.NamedPermissionSet.#ctor(System.String)
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: NamedPermissionSet(String)
  nameWithType: NamedPermissionSet.NamedPermissionSet(String)
  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.NamedPermissionSet.#ctor(System.String,System.Security.Permissions.PermissionState)
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: NamedPermissionSet(String,PermissionState)
  nameWithType: NamedPermissionSet.NamedPermissionSet(String,PermissionState)
  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(String,PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.NamedPermissionSet.#ctor(System.String,System.Security.PermissionSet)
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: NamedPermissionSet(String,PermissionSet)
  nameWithType: NamedPermissionSet.NamedPermissionSet(String,PermissionSet)
  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(String,PermissionSet)
- uid: System.Security.NamedPermissionSet.Copy
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: Copy()
  nameWithType: NamedPermissionSet.Copy()
  fullName: System.Security.NamedPermissionSet.Copy()
- uid: System.Security.NamedPermissionSet.Copy(System.String)
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: Copy(String)
  nameWithType: NamedPermissionSet.Copy(String)
  fullName: System.Security.NamedPermissionSet.Copy(String)
- uid: System.Security.NamedPermissionSet.Description
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: Description
  nameWithType: NamedPermissionSet.Description
  fullName: System.Security.NamedPermissionSet.Description
- uid: System.Security.NamedPermissionSet.Equals(System.Object)
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: Equals(Object)
  nameWithType: NamedPermissionSet.Equals(Object)
  fullName: System.Security.NamedPermissionSet.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.NamedPermissionSet.FromXml(System.Security.SecurityElement)
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: NamedPermissionSet.FromXml(SecurityElement)
  fullName: System.Security.NamedPermissionSet.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.NamedPermissionSet.GetHashCode
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: GetHashCode()
  nameWithType: NamedPermissionSet.GetHashCode()
  fullName: System.Security.NamedPermissionSet.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.NamedPermissionSet.Name
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: Name
  nameWithType: NamedPermissionSet.Name
  fullName: System.Security.NamedPermissionSet.Name
- uid: System.Security.NamedPermissionSet.ToXml
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: ToXml()
  nameWithType: NamedPermissionSet.ToXml()
  fullName: System.Security.NamedPermissionSet.ToXml()
- uid: System.Security.NamedPermissionSet.#ctor*
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: NamedPermissionSet
  nameWithType: NamedPermissionSet.NamedPermissionSet
- uid: System.Security.NamedPermissionSet.Copy*
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: Copy
  nameWithType: NamedPermissionSet.Copy
- uid: System.Security.NamedPermissionSet.Description*
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: Description
  nameWithType: NamedPermissionSet.Description
- uid: System.Security.NamedPermissionSet.Equals*
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: Equals
  nameWithType: NamedPermissionSet.Equals
- uid: System.Security.NamedPermissionSet.FromXml*
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: FromXml
  nameWithType: NamedPermissionSet.FromXml
- uid: System.Security.NamedPermissionSet.GetHashCode*
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: GetHashCode
  nameWithType: NamedPermissionSet.GetHashCode
- uid: System.Security.NamedPermissionSet.Name*
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: Name
  nameWithType: NamedPermissionSet.Name
- uid: System.Security.NamedPermissionSet.ToXml*
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: ToXml
  nameWithType: NamedPermissionSet.ToXml
