### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleBinary
  id: OracleBinary
  children:
  - System.Data.OracleClient.OracleBinary.#ctor(System.Byte[])
  - System.Data.OracleClient.OracleBinary.CompareTo(System.Object)
  - System.Data.OracleClient.OracleBinary.Concat(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.Equals(System.Object)
  - System.Data.OracleClient.OracleBinary.Equals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.GetHashCode
  - System.Data.OracleClient.OracleBinary.GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.IsNull
  - System.Data.OracleClient.OracleBinary.Item(System.Int32)
  - System.Data.OracleClient.OracleBinary.Length
  - System.Data.OracleClient.OracleBinary.LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.NotEquals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.Null
  - System.Data.OracleClient.OracleBinary.op_Addition(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.op_Equality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.op_Explicit(System.Data.OracleClient.OracleBinary to System.Byte[])
  - System.Data.OracleClient.OracleBinary.op_GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.op_GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.op_Implicit(System.Byte[])
  - System.Data.OracleClient.OracleBinary.op_Inequality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.op_LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.op_LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  - System.Data.OracleClient.OracleBinary.Value
  langs:
  - csharp
  name: OracleBinary
  nameWithType: OracleBinary
  fullName: System.Data.OracleClient.OracleBinary
  type: Struct
  summary: "이진 데이터를 저장 하거나 데이터베이스에서 검색의 다양 한 길이의 스트림을 나타냅니다."
  remarks: "OracleBinary 개체를 가져오려면 호출는 <xref:System.Data.OracleClient.OracleDataReader.GetOracleBinary%2A>메서드.</xref:System.Data.OracleClient.OracleDataReader.GetOracleBinary%2A>"
  syntax:
    content: 'public struct OracleBinary : IComparable, System.Data.SqlTypes.INullable'
  inheritance:
  - System.ValueType
  implements:
  - System.Data.SqlTypes.INullable
  - System.IComparable
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: OracleBinary(Byte[])
  nameWithType: OracleBinary.OracleBinary(Byte[])
  fullName: System.Data.OracleClient.OracleBinary.OracleBinary(Byte[])
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "새 인스턴스를 초기화는 <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 설정 구조는 <xref:System.Data.OracleClient.OracleBinary.Value*>속성을 제공 된 바이트 배열의 내용.</xref:System.Data.OracleClient.OracleBinary.Value*>"
  syntax:
    content: public OracleBinary (byte[] b);
    parameters:
    - id: b
      type: System.Byte[]
      description: "바이트 배열에 저장할 수는 <xref:System.Data.OracleClient.OracleBinary.Value*>속성.</xref:System.Data.OracleClient.OracleBinary.Value*>"
  overload: System.Data.OracleClient.OracleBinary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: CompareTo(Object)
  nameWithType: OracleBinary.CompareTo(Object)
  fullName: System.Data.OracleClient.OracleBinary.CompareTo(Object)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "비교 하 여 <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> 제공 된 개체는 개체와 상대 값의 표시를 반환 합니다."
  syntax:
    content: public int CompareTo (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "이를 비교할 개체 <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 구조입니다."
    return:
      type: System.Int32
      description: "이 항목의 상대 값을 나타내는 부호 있는 숫자 <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 구조와 개체입니다.       <table><thead><tr><th> 반환 값       </th><th> 조건       </th></tr></thead><tbody><tr><td> 0 보다 작음       </td><td> 이 값 <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 개체가 개체 보다 작은지 메시지를 표시 합니다.       </td></tr><tr><td> 0       </td><td> 이 <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 개체는 개체와 동일 합니다.       </td></tr><tr><td> 0 보다 큼       </td><td> 이 <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 개체는 개체 보다 큽니다.       -또는-개체는 null 참조입니다.       </td></tr></tbody></table>"
  overload: System.Data.OracleClient.OracleBinary.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.Concat(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: Concat(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: Concat(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.Concat(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.Concat(OracleBinary,OracleBinary)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "두 개의 연결 <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> 구조를 만드는 새 <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 구조입니다."
  syntax:
    content: public static System.Data.OracleClient.OracleBinary Concat (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 구조입니다."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 구조입니다."
    return:
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 구조와 연결된 된 값은 <code> x </code> 및 <code> y </code> 매개 변수입니다."
  overload: System.Data.OracleClient.OracleBinary.Concat*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: OracleBinary.Equals(Object)
  fullName: System.Data.OracleClient.OracleBinary.Equals(Object)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "제공 된 개체가 매개 변수를 비교는 <xref:System.Data.OracleClient.OracleBinary.Value*>의 속성은 <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> 개체입니다.</xref:System.Data.OracleClient.OracleBinary.Value*>"
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "비교할 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>개체의 인스턴스 라면 <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> 둘이 같고, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.OracleClient.OracleBinary.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.Equals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: Equals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: Equals(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.Equals(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.Equals(OracleBinary,OracleBinary)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "두 <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> 같은지 확인 하는 구조입니다."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean Equals (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 구조입니다."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 구조입니다."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "<xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 두 인스턴스가 같으면 또는 <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 두 인스턴스가 같지 않으면 합니다. 경우 인스턴스 중 하나가 <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.OracleClient.OracleBoolean.Value*>의 <xref uid=&quot;langword_csharp_OracleBoolean&quot; name=&quot;OracleBoolean&quot; href=&quot;&quot;> </xref> 됩니다 <xref href=&quot;System.Data.OracleClient.OracleBoolean.Null&quot;> </xref>.</xref:System.Data.OracleClient.OracleBoolean.Value*>"
  overload: System.Data.OracleClient.OracleBinary.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.GetHashCode
  id: GetHashCode
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: OracleBinary.GetHashCode()
  fullName: System.Data.OracleClient.OracleBinary.GetHashCode()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "이 대 한 해시 코드를 반환 합니다. <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> 구조입니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "부호 있는 32 비트 정수 해시 코드입니다."
  overload: System.Data.OracleClient.OracleBinary.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: GreaterThan(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.GreaterThan(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.GreaterThan(OracleBinary,OracleBinary)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "두 <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> 구조를 첫 번째 두 번째 인스턴스보다 큰지 확인 합니다."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean GreaterThan (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 구조입니다."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 구조입니다."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "<xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 그렇지 않으면 첫 번째 인스턴스는 두 번째 인스턴스보다 크면 경우 <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref>합니다. 경우 인스턴스 중 하나가 <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.OracleClient.OracleBoolean.Value*>의 <xref uid=&quot;langword_csharp_OracleBoolean&quot; name=&quot;OracleBoolean&quot; href=&quot;&quot;> </xref> 됩니다 <xref href=&quot;System.Data.OracleClient.OracleBoolean.Null&quot;> </xref>.</xref:System.Data.OracleClient.OracleBoolean.Value*>"
  overload: System.Data.OracleClient.OracleBinary.GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: GreaterThanOrEqual(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.GreaterThanOrEqual(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.GreaterThanOrEqual(OracleBinary,OracleBinary)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "두 <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> 첫 번째 두 번째 보다 크거나 인지 확인 하는 구조입니다."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean GreaterThanOrEqual (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 구조입니다."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 구조입니다."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "<xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 경우 첫 번째 인스턴스가 두 번째 인스턴스를 보다 크거나 그렇지 않으면 <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref>합니다. 경우 인스턴스 중 하나가 <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.OracleClient.OracleBoolean.Value*>의 <xref uid=&quot;langword_csharp_OracleBoolean&quot; name=&quot;OracleBoolean&quot; href=&quot;&quot;> </xref> 됩니다 <xref href=&quot;System.Data.OracleClient.OracleBoolean.Null&quot;> </xref>.</xref:System.Data.OracleClient.OracleBoolean.Value*>"
  overload: System.Data.OracleClient.OracleBinary.GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.IsNull
  id: IsNull
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: IsNull
  nameWithType: OracleBinary.IsNull
  fullName: System.Data.OracleClient.OracleBinary.IsNull
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "나타내는 값을 가져옵니다 여부는 <xref:System.Data.OracleClient.OracleBinary.Value*>속성은 <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> 구조는 null입니다.</xref:System.Data.OracleClient.OracleBinary.Value*>"
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;> </xref> 은 null로, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.OracleClient.OracleBinary.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: OracleBinary.Item(Int32)
  fullName: System.Data.OracleClient.OracleBinary.Item(Int32)
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "단일 바이트를 가져옵니다는 <xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;> </xref> 정수 매개 변수가 가리키는 위치에 있는 속성 <code> index </code>합니다. 경우 <code> index </code> 위치를 나타내는 바이트 배열 끝을 넘어 예외가 발생 합니다."
  remarks: "발생 하지 않도록 하려면 한 `OracleNullValueException`를 항상 확인는 <xref:System.Data.OracleClient.OracleBinary.IsNull%2A>속성 및 `Length` 속성을 읽기 전에 `this`.</xref:System.Data.OracleClient.OracleBinary.IsNull%2A>"
  syntax:
    content: public byte this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "검색할 바이트의 위치입니다."
    return:
      type: System.Byte
      description: "정수 매개 변수가 가리키는 위치에 있는 바이트입니다."
  overload: System.Data.OracleClient.OracleBinary.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.Length
  id: Length
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: Length
  nameWithType: OracleBinary.Length
  fullName: System.Data.OracleClient.OracleBinary.Length
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "바이트의 길이 가져옵니다는 <xref:System.Data.OracleClient.OracleBinary.Value*>속성.</xref:System.Data.OracleClient.OracleBinary.Value*> 이 속성은 읽기 전용입니다."
  remarks: "발생 하지 않도록 하려면 한 `OracleNullValueException`를 항상 확인는 <xref:System.Data.OracleClient.OracleBinary.IsNull%2A>속성을 읽기 전에 `Length` 속성.</xref:System.Data.OracleClient.OracleBinary.IsNull%2A>"
  syntax:
    content: public int Length { get; }
    return:
      type: System.Int32
      description: "이진 데이터의 길이 <xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;> </xref> 속성입니다."
  overload: System.Data.OracleClient.OracleBinary.Length*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: LessThan(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.LessThan(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.LessThan(OracleBinary,OracleBinary)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "두 <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> 작은지를 확인 하는 경우 첫 번째 구조 두 번째 인스턴스보다 합니다."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean LessThan (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 구조입니다."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 구조입니다."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "<xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 첫 번째는 두 번째 인스턴스보다 작거나 인스턴스가, 그렇지 않으면 <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref>합니다. 경우 인스턴스 중 하나가 <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.OracleClient.OracleBoolean.Value*>의 <xref uid=&quot;langword_csharp_OracleBoolean&quot; name=&quot;OracleBoolean&quot; href=&quot;&quot;> </xref> 됩니다 <xref href=&quot;System.Data.OracleClient.OracleBoolean.Null&quot;> </xref>.</xref:System.Data.OracleClient.OracleBoolean.Value*>"
  overload: System.Data.OracleClient.OracleBinary.LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: LessThanOrEqual(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.LessThanOrEqual(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.LessThanOrEqual(OracleBinary,OracleBinary)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "두 <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> 첫 번째는 두 번째 보다 작거나 같은 경우를 결정 하는 구조입니다."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean LessThanOrEqual (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 구조입니다."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 구조입니다."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "<xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 경우 첫 번째 인스턴스가 두 번째 인스턴스 보다 작거나 같은 그렇지 않으면 <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref>합니다. 경우 인스턴스 중 하나가 <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.OracleClient.OracleBoolean.Value*>의 <xref uid=&quot;langword_csharp_OracleBoolean&quot; name=&quot;OracleBoolean&quot; href=&quot;&quot;> </xref> 됩니다 <xref href=&quot;System.Data.OracleClient.OracleBoolean.Null&quot;> </xref>.</xref:System.Data.OracleClient.OracleBoolean.Value*>"
  overload: System.Data.OracleClient.OracleBinary.LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.NotEquals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: NotEquals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: NotEquals(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.NotEquals(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.NotEquals(OracleBinary,OracleBinary)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "두 <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> 구조 같지 않은지를 확인 합니다."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean NotEquals (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 구조입니다."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 구조입니다."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "<xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 두 인스턴스가 같지 않으면 또는 <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 두 인스턴스가 같으면 합니다. 경우 인스턴스 중 하나가 <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.OracleClient.OracleBoolean.Value*>의 <xref uid=&quot;langword_csharp_OracleBoolean&quot; name=&quot;OracleBoolean&quot; href=&quot;&quot;> </xref> 됩니다 <xref href=&quot;System.Data.OracleClient.OracleBoolean.Null&quot;> </xref>.</xref:System.Data.OracleClient.OracleBoolean.Value*>"
  overload: System.Data.OracleClient.OracleBinary.NotEquals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.Null
  id: "Null"
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: "Null"
  nameWithType: OracleBinary.Null
  fullName: System.Data.OracleClient.OracleBinary.Null
  type: Field
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "에 할당 될 수 있는 null 값을 나타냅니다는 <xref:System.Data.OracleClient.OracleBinary.Value*>속성은 <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> 구조.</xref:System.Data.OracleClient.OracleBinary.Value*>"
  remarks: '`Null`상수에 대 한 역할을 `OracleBinary` 구조입니다.'
  syntax:
    content: public static readonly System.Data.OracleClient.OracleBinary Null;
    return:
      type: System.Data.OracleClient.OracleBinary
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.op_Addition(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: op_Addition(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: op_Addition(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_Addition(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_Addition(OracleBinary,OracleBinary)
  type: Operator
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "두 연결 <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> 매개 변수를 새 <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 구조입니다."
  remarks: "`x`결과에 맨 먼저 나타납니다 `OracleBinary`옵니다 `y`합니다.       [Visual Basic]       Visual basic에서는 클래스에 정의 된 연산자를 사용할 수 있지만 재정의 하거나 직접 만들 수 없습니다."
  syntax:
    content: public static System.Data.OracleClient.OracleBinary op_Addition (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 개체입니다."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 개체입니다."
    return:
      type: System.Data.OracleClient.OracleBinary
      description: "연결된 된 값은 <code> x </code> 및 <code> y </code> 매개 변수입니다."
  overload: System.Data.OracleClient.OracleBinary.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.op_Equality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: op_Equality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: op_Equality(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_Equality(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_Equality(OracleBinary,OracleBinary)
  type: Operator
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "두 <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> 같은지 확인 하는 구조입니다."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean op_Equality (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 개체입니다."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 개체입니다."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "<xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 두 인스턴스가 같으면 또는 <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 두 인스턴스가 같지 않으면 합니다. 경우 인스턴스 중 하나가 <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.OracleClient.OracleBoolean.Value*>의 <xref uid=&quot;langword_csharp_OracleBoolean&quot; name=&quot;OracleBoolean&quot; href=&quot;&quot;> </xref> 됩니다 <xref href=&quot;System.Data.OracleClient.OracleBoolean.Null&quot;> </xref>.</xref:System.Data.OracleClient.OracleBoolean.Value*>"
  overload: System.Data.OracleClient.OracleBinary.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.op_Explicit(System.Data.OracleClient.OracleBinary to System.Byte[])
  id: op_Explicit(System.Data.OracleClient.OracleBinary to System.Byte[])
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: op_Explicit(OracleBinary)
  nameWithType: OracleBinary.op_Explicit(OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_Explicit(OracleBinary)
  type: Operator
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: public static byte[] op_Explicit (System.Data.OracleClient.OracleBinary x);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "추가할 수 있습니다."
    return:
      type: System.Byte[]
      description: "추가할 수 있습니다."
  overload: System.Data.OracleClient.OracleBinary.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.op_GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: op_GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: op_GreaterThan(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_GreaterThan(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_GreaterThan(OracleBinary,OracleBinary)
  type: Operator
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "두 <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> 구조를 첫 번째 두 번째 인스턴스보다 큰지 확인 합니다."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean op_GreaterThan (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 개체입니다."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 개체입니다."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "<xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 그렇지 않으면 첫 번째 인스턴스는 두 번째 인스턴스보다 크면 경우 <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref>합니다. 경우 인스턴스 중 하나가 <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.OracleClient.OracleBoolean.Value*>의 <xref uid=&quot;langword_csharp_OracleBoolean&quot; name=&quot;OracleBoolean&quot; href=&quot;&quot;> </xref> 됩니다 <xref href=&quot;System.Data.OracleClient.OracleBoolean.Null&quot;> </xref>.</xref:System.Data.OracleClient.OracleBoolean.Value*>"
  overload: System.Data.OracleClient.OracleBinary.op_GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.op_GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: op_GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: op_GreaterThanOrEqual(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_GreaterThanOrEqual(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_GreaterThanOrEqual(OracleBinary,OracleBinary)
  type: Operator
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "두 <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> 첫 번째 두 번째 보다 크거나 인지 확인 하는 구조입니다."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean op_GreaterThanOrEqual (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 개체입니다."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 개체입니다."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "<xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 경우 첫 번째 인스턴스가 두 번째 인스턴스를 보다 크거나 그렇지 않으면 <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref>합니다. 경우 인스턴스 중 하나가 <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.OracleClient.OracleBoolean.Value*>의 <xref uid=&quot;langword_csharp_OracleBoolean&quot; name=&quot;OracleBoolean&quot; href=&quot;&quot;> </xref> 됩니다 <xref href=&quot;System.Data.OracleClient.OracleBoolean.Null&quot;> </xref>.</xref:System.Data.OracleClient.OracleBoolean.Value*>"
  overload: System.Data.OracleClient.OracleBinary.op_GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.op_Implicit(System.Byte[])
  id: op_Implicit(System.Byte[])
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: op_Implicit(Byte[])
  nameWithType: OracleBinary.op_Implicit(Byte[])
  fullName: System.Data.OracleClient.OracleBinary.op_Implicit(Byte[])
  type: Operator
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: public static System.Data.OracleClient.OracleBinary op_Implicit (byte[] b);
    parameters:
    - id: b
      type: System.Byte[]
      description: "추가할 수 있습니다."
    return:
      type: System.Data.OracleClient.OracleBinary
      description: "추가할 수 있습니다."
  overload: System.Data.OracleClient.OracleBinary.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.op_Inequality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: op_Inequality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: op_Inequality(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_Inequality(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_Inequality(OracleBinary,OracleBinary)
  type: Operator
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "두 <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> 같은지 확인 하는 구조입니다."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean op_Inequality (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 개체입니다."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 개체입니다."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "<xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 두 인스턴스가 같지 않으면 또는 <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 두 인스턴스가 같으면 합니다. 경우 인스턴스 중 하나가 <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.OracleClient.OracleBoolean.Value*>의 <xref uid=&quot;langword_csharp_OracleBoolean&quot; name=&quot;OracleBoolean&quot; href=&quot;&quot;> </xref> 됩니다 <xref href=&quot;System.Data.OracleClient.OracleBoolean.Null&quot;> </xref>.</xref:System.Data.OracleClient.OracleBoolean.Value*>"
  overload: System.Data.OracleClient.OracleBinary.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.op_LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: op_LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: op_LessThan(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_LessThan(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_LessThan(OracleBinary,OracleBinary)
  type: Operator
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "두 <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> 작은지를 확인 하는 경우 첫 번째 구조 두 번째 인스턴스보다 합니다."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean op_LessThan (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 개체입니다."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 개체입니다."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "<xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 첫 번째는 두 번째 인스턴스보다 작거나 인스턴스가, 그렇지 않으면 <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref>합니다. 경우 인스턴스 중 하나가 <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.OracleClient.OracleBoolean.Value*>의 <xref uid=&quot;langword_csharp_OracleBoolean&quot; name=&quot;OracleBoolean&quot; href=&quot;&quot;> </xref> 됩니다 <xref href=&quot;System.Data.OracleClient.OracleBoolean.Null&quot;> </xref>.</xref:System.Data.OracleClient.OracleBoolean.Value*>"
  overload: System.Data.OracleClient.OracleBinary.op_LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.op_LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  id: op_LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: op_LessThanOrEqual(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_LessThanOrEqual(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_LessThanOrEqual(OracleBinary,OracleBinary)
  type: Operator
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "두 <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> 첫 번째는 두 번째 보다 작거나 같은 경우를 결정 하는 구조입니다."
  syntax:
    content: public static System.Data.OracleClient.OracleBoolean op_LessThanOrEqual (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);
    parameters:
    - id: x
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 개체입니다."
    - id: y
      type: System.Data.OracleClient.OracleBinary
      description: "<xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 개체입니다."
    return:
      type: System.Data.OracleClient.OracleBoolean
      description: "<xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 즉 <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref> 경우 첫 번째 인스턴스가 두 번째 인스턴스 보다 작거나 같은 그렇지 않으면 <xref href=&quot;System.Data.OracleClient.OracleBoolean&quot;> </xref>합니다. 경우 인스턴스 중 하나가 <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 매개 변수가 null 이면는 <xref:System.Data.OracleClient.OracleBoolean.Value*>의 <xref uid=&quot;langword_csharp_OracleBoolean&quot; name=&quot;OracleBoolean&quot; href=&quot;&quot;> </xref> 됩니다 <xref href=&quot;System.Data.OracleClient.OracleBoolean.Null&quot;> </xref>.</xref:System.Data.OracleClient.OracleBoolean.Value*>"
  overload: System.Data.OracleClient.OracleBinary.op_LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBinary.Value
  id: Value
  parent: System.Data.OracleClient.OracleBinary
  langs:
  - csharp
  name: Value
  nameWithType: OracleBinary.Value
  fullName: System.Data.OracleClient.OracleBinary.Value
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "값을 가져옵니다는 <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> 구조입니다. 이 속성은 읽기 전용입니다."
  remarks: "발생 하지 않도록 하려면 한 `OracleNullValueException`를 항상 확인는 <xref:System.Data.OracleClient.OracleBinary.IsNull%2A>속성을 읽기 전에 `Value` 속성.</xref:System.Data.OracleClient.OracleBinary.IsNull%2A>"
  syntax:
    content: public byte[] Value { get; }
    return:
      type: System.Byte[]
      description: "값은 <xref uid=&quot;langword_csharp_OracleBinary&quot; name=&quot;OracleBinary&quot; href=&quot;&quot;> </xref> 구조입니다."
  overload: System.Data.OracleClient.OracleBinary.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Data.OracleClient.OracleBinary.#ctor(System.Byte[])
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: OracleBinary(Byte[])
  nameWithType: OracleBinary.OracleBinary(Byte[])
  fullName: System.Data.OracleClient.OracleBinary.OracleBinary(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleBinary.CompareTo(System.Object)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: CompareTo(Object)
  nameWithType: OracleBinary.CompareTo(Object)
  fullName: System.Data.OracleClient.OracleBinary.CompareTo(Object)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleBinary.Concat(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: Concat(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.Concat(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.Concat(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBinary
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleBinary
  nameWithType: OracleBinary
  fullName: System.Data.OracleClient.OracleBinary
- uid: System.Data.OracleClient.OracleBinary.Equals(System.Object)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: Equals(Object)
  nameWithType: OracleBinary.Equals(Object)
  fullName: System.Data.OracleClient.OracleBinary.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleBinary.Equals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: Equals(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.Equals(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.Equals(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBoolean
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleBoolean
  nameWithType: OracleBoolean
  fullName: System.Data.OracleClient.OracleBoolean
- uid: System.Data.OracleClient.OracleBinary.GetHashCode
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: GetHashCode()
  nameWithType: OracleBinary.GetHashCode()
  fullName: System.Data.OracleClient.OracleBinary.GetHashCode()
- uid: System.Data.OracleClient.OracleBinary.GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: GreaterThan(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.GreaterThan(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.GreaterThan(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBinary.GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: GreaterThanOrEqual(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.GreaterThanOrEqual(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.GreaterThanOrEqual(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBinary.IsNull
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: IsNull
  nameWithType: OracleBinary.IsNull
  fullName: System.Data.OracleClient.OracleBinary.IsNull
- uid: System.Data.OracleClient.OracleBinary.Item(System.Int32)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: Item(Int32)
  nameWithType: OracleBinary.Item(Int32)
  fullName: System.Data.OracleClient.OracleBinary.Item(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.OracleClient.OracleBinary.Length
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: Length
  nameWithType: OracleBinary.Length
  fullName: System.Data.OracleClient.OracleBinary.Length
- uid: System.Data.OracleClient.OracleBinary.LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: LessThan(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.LessThan(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.LessThan(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBinary.LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: LessThanOrEqual(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.LessThanOrEqual(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.LessThanOrEqual(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBinary.NotEquals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: NotEquals(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.NotEquals(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.NotEquals(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBinary.Null
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: "Null"
  nameWithType: OracleBinary.Null
  fullName: System.Data.OracleClient.OracleBinary.Null
- uid: System.Data.OracleClient.OracleBinary.op_Addition(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_Addition(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_Addition(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_Addition(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBinary.op_Equality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_Equality(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_Equality(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_Equality(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBinary.op_Explicit(System.Data.OracleClient.OracleBinary to System.Byte[])
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_Explicit(OracleBinary)
  nameWithType: OracleBinary.op_Explicit(OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_Explicit(OracleBinary)
- uid: System.Data.OracleClient.OracleBinary.op_GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_GreaterThan(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_GreaterThan(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_GreaterThan(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBinary.op_GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_GreaterThanOrEqual(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_GreaterThanOrEqual(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_GreaterThanOrEqual(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBinary.op_Implicit(System.Byte[])
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_Implicit(Byte[])
  nameWithType: OracleBinary.op_Implicit(Byte[])
  fullName: System.Data.OracleClient.OracleBinary.op_Implicit(Byte[])
- uid: System.Data.OracleClient.OracleBinary.op_Inequality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_Inequality(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_Inequality(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_Inequality(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBinary.op_LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_LessThan(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_LessThan(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_LessThan(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBinary.op_LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_LessThanOrEqual(OracleBinary,OracleBinary)
  nameWithType: OracleBinary.op_LessThanOrEqual(OracleBinary,OracleBinary)
  fullName: System.Data.OracleClient.OracleBinary.op_LessThanOrEqual(OracleBinary,OracleBinary)
- uid: System.Data.OracleClient.OracleBinary.Value
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: Value
  nameWithType: OracleBinary.Value
  fullName: System.Data.OracleClient.OracleBinary.Value
- uid: System.Data.OracleClient.OracleBinary.#ctor*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: OracleBinary
  nameWithType: OracleBinary.OracleBinary
- uid: System.Data.OracleClient.OracleBinary.CompareTo*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: CompareTo
  nameWithType: OracleBinary.CompareTo
- uid: System.Data.OracleClient.OracleBinary.Concat*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: Concat
  nameWithType: OracleBinary.Concat
- uid: System.Data.OracleClient.OracleBinary.Equals*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: Equals
  nameWithType: OracleBinary.Equals
- uid: System.Data.OracleClient.OracleBinary.GetHashCode*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: GetHashCode
  nameWithType: OracleBinary.GetHashCode
- uid: System.Data.OracleClient.OracleBinary.GreaterThan*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: GreaterThan
  nameWithType: OracleBinary.GreaterThan
- uid: System.Data.OracleClient.OracleBinary.GreaterThanOrEqual*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: GreaterThanOrEqual
  nameWithType: OracleBinary.GreaterThanOrEqual
- uid: System.Data.OracleClient.OracleBinary.IsNull*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: IsNull
  nameWithType: OracleBinary.IsNull
- uid: System.Data.OracleClient.OracleBinary.Item*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: Item
  nameWithType: OracleBinary.Item
- uid: System.Data.OracleClient.OracleBinary.Length*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: Length
  nameWithType: OracleBinary.Length
- uid: System.Data.OracleClient.OracleBinary.LessThan*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: LessThan
  nameWithType: OracleBinary.LessThan
- uid: System.Data.OracleClient.OracleBinary.LessThanOrEqual*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: LessThanOrEqual
  nameWithType: OracleBinary.LessThanOrEqual
- uid: System.Data.OracleClient.OracleBinary.NotEquals*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: NotEquals
  nameWithType: OracleBinary.NotEquals
- uid: System.Data.OracleClient.OracleBinary.op_Addition*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_Addition
  nameWithType: OracleBinary.op_Addition
- uid: System.Data.OracleClient.OracleBinary.op_Equality*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_Equality
  nameWithType: OracleBinary.op_Equality
- uid: System.Data.OracleClient.OracleBinary.op_Explicit*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_Explicit
  nameWithType: OracleBinary.op_Explicit
- uid: System.Data.OracleClient.OracleBinary.op_GreaterThan*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_GreaterThan
  nameWithType: OracleBinary.op_GreaterThan
- uid: System.Data.OracleClient.OracleBinary.op_GreaterThanOrEqual*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_GreaterThanOrEqual
  nameWithType: OracleBinary.op_GreaterThanOrEqual
- uid: System.Data.OracleClient.OracleBinary.op_Implicit*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_Implicit
  nameWithType: OracleBinary.op_Implicit
- uid: System.Data.OracleClient.OracleBinary.op_Inequality*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_Inequality
  nameWithType: OracleBinary.op_Inequality
- uid: System.Data.OracleClient.OracleBinary.op_LessThan*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_LessThan
  nameWithType: OracleBinary.op_LessThan
- uid: System.Data.OracleClient.OracleBinary.op_LessThanOrEqual*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: op_LessThanOrEqual
  nameWithType: OracleBinary.op_LessThanOrEqual
- uid: System.Data.OracleClient.OracleBinary.Value*
  parent: System.Data.OracleClient.OracleBinary
  isExternal: false
  name: Value
  nameWithType: OracleBinary.Value
