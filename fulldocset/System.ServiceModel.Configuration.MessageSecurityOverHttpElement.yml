### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Configuration.MessageSecurityOverHttpElement
  id: MessageSecurityOverHttpElement
  children:
  - System.ServiceModel.Configuration.MessageSecurityOverHttpElement.AlgorithmSuite
  - System.ServiceModel.Configuration.MessageSecurityOverHttpElement.ClientCredentialType
  - System.ServiceModel.Configuration.MessageSecurityOverHttpElement.NegotiateServiceCredential
  - System.ServiceModel.Configuration.MessageSecurityOverHttpElement.Properties
  langs:
  - csharp
  name: MessageSecurityOverHttpElement
  nameWithType: MessageSecurityOverHttpElement
  fullName: System.ServiceModel.Configuration.MessageSecurityOverHttpElement
  type: Class
  summary: "HTTP를 사용 하 여 보낸 메시지에 대 한 보안 구성 설정을 정의 합니다."
  syntax:
    content: 'public class MessageSecurityOverHttpElement : System.ServiceModel.Configuration.ServiceModelConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  platform:
  - net462
- uid: System.ServiceModel.Configuration.MessageSecurityOverHttpElement.AlgorithmSuite
  id: AlgorithmSuite
  parent: System.ServiceModel.Configuration.MessageSecurityOverHttpElement
  langs:
  - csharp
  name: AlgorithmSuite
  nameWithType: MessageSecurityOverHttpElement.AlgorithmSuite
  fullName: System.ServiceModel.Configuration.MessageSecurityOverHttpElement.AlgorithmSuite
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "메시지 암호화 및 키 래핑 알고리즘 HTTP 메시지 보안에 사용 되는 값을 가져오거나 설정 합니다."
  syntax:
    content: public System.ServiceModel.Security.SecurityAlgorithmSuite AlgorithmSuite { get; set; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "유효한 <xref href=&quot;System.ServiceModel.Security.SecurityAlgorithmSuite&quot;> </xref> HTTP 메시지 보안에 사용 되는 메시지 암호화 및 키 래핑 알고리즘을 지정 하는 값입니다. 기본값은 <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*>"
  overload: System.ServiceModel.Configuration.MessageSecurityOverHttpElement.AlgorithmSuite*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.MessageSecurityOverHttpElement.ClientCredentialType
  id: ClientCredentialType
  parent: System.ServiceModel.Configuration.MessageSecurityOverHttpElement
  langs:
  - csharp
  name: ClientCredentialType
  nameWithType: MessageSecurityOverHttpElement.ClientCredentialType
  fullName: System.ServiceModel.Configuration.MessageSecurityOverHttpElement.ClientCredentialType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "메시지 기반 보안을 사용 하 여 클라이언트 인증을 수행할 때 사용할 자격 증명의 형식을 지정 하거나 <xref uid=&quot;langword_csharp_TransportWithMessageCredential&quot; name=&quot;TransportWithMessageCredential&quot; href=&quot;&quot;> </xref>합니다."
  syntax:
    content: public System.ServiceModel.MessageCredentialType ClientCredentialType { get; set; }
    return:
      type: System.ServiceModel.MessageCredentialType
      description: "유효한 <xref:System.ServiceModel.MessageCredentialType>메시지 기반 보안을 사용 하 여 클라이언트 인증을 수행할 때 사용 되는 자격 증명의 형식을 지정 하는 값 또는 <xref uid=&quot;langword_csharp_TransportWithMessageCredential&quot; name=&quot;TransportWithMessageCredential&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.MessageCredentialType> 기본값은 <xref:System.ServiceModel.MessageCredentialType>.</xref:System.ServiceModel.MessageCredentialType>"
  overload: System.ServiceModel.Configuration.MessageSecurityOverHttpElement.ClientCredentialType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.MessageSecurityOverHttpElement.NegotiateServiceCredential
  id: NegotiateServiceCredential
  parent: System.ServiceModel.Configuration.MessageSecurityOverHttpElement
  langs:
  - csharp
  name: NegotiateServiceCredential
  nameWithType: MessageSecurityOverHttpElement.NegotiateServiceCredential
  fullName: System.ServiceModel.Configuration.MessageSecurityOverHttpElement.NegotiateServiceCredential
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "서비스 자격 증명에는 클라이언트의 대역, 프로 비전 된 협상 프로세스를 통해 클라이언트에 서비스에서 가져온 하는지 여부를 지정 하는 부울 값을 가져오거나 설정 합니다."
  remarks: "This property specifies whether the service credential is provisioned at the client out-of-band or is obtained from the service to the client through a process of negotiation. Such a negotiation is a precursor to the usual message exchange.  \n  \n If the <xref:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType%2A> property is equal to Anonymous, <xref:System.ServiceModel.MessageCredentialType>, or <xref:System.ServiceModel.MessageCredentialType>, setting this property to `false` implies that the service certificate is available at the client out-of-band, and that the client must specify the <xref:System.ServiceModel.Configuration.ServiceCredentialsElement.ServiceCertificate%2A> property of <xref:System.ServiceModel.Configuration.ServiceCredentialsElement> class. This mode is interoperable with SOAP stacks that implement WS-Trust and WS-SecureConversation.  \n  \n If the <xref:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType%2A> property is equal to <xref:System.ServiceModel.MessageCredentialType>, setting this property to `false` causes a Kerberos-based authentication. This requires that the client and service be part of a Kerberos domain. This mode is interoperable with SOAP stacks that implement the Kerberos token profile (as defined at OASIS WSS TC) as well as WS-Trust and WS-SecureConversation.  \n  \n When this property is `true`, it causes a .NET SOAP negotiation that tunnels SPNego exchange over SOAP messages.  \n  \n This property indicates whether the service credential is negotiated automatically between the client and the service. If this property is `true`, then such negotiation occurs. If this property is `false`, then the service credentials must be specified at the client before communication with the service can occur.  \n  \n If this property is set to `false`, and the binding is configured to use Windows as a client credential type, the service account must be associated with a Service Principal Name (SPN). To do this, run the service under the NETWORK SERVICE account, or LOCAL SYSTEM account. Alternatively, use the SetSpn.exe tool to create an SPN for the service account. In either case, the client must use the correct SPN in the [\\&lt;servicePrincipalName\\&gt;](../Topic/%3CservicePrincipalName%3E.md) element, or by using the <xref:System.ServiceModel.EndpointAddress> constructor. For more information, see [Service Identity and Authentication](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool NegotiateServiceCredential { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>클라이언트의 대역;에서 서비스 자격 증명으로 제공 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Configuration.MessageSecurityOverHttpElement.NegotiateServiceCredential*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.MessageSecurityOverHttpElement.Properties
  id: Properties
  parent: System.ServiceModel.Configuration.MessageSecurityOverHttpElement
  langs:
  - csharp
  name: Properties
  nameWithType: MessageSecurityOverHttpElement.Properties
  fullName: System.ServiceModel.Configuration.MessageSecurityOverHttpElement.Properties
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "가져옵니다는 <xref href=&quot;System.Configuration.ConfigurationPropertyCollection&quot;> </xref> 의 컬렉션을 포함 하는 인스턴스 <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> 특성 일 수 있는 개체 또는 <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> 이 구성 요소 개체입니다."
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "A <xref href=&quot;System.Configuration.ConfigurationPropertyCollection&quot;> </xref> 의 컬렉션을 포함 하는 인스턴스 <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> 특성 일 수 있는 개체 또는 <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> 이 구성 요소 개체입니다."
  overload: System.ServiceModel.Configuration.MessageSecurityOverHttpElement.Properties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement
  isExternal: false
  name: System.ServiceModel.Configuration.ServiceModelConfigurationElement
- uid: System.ServiceModel.Configuration.MessageSecurityOverHttpElement.AlgorithmSuite
  parent: System.ServiceModel.Configuration.MessageSecurityOverHttpElement
  isExternal: false
  name: AlgorithmSuite
  nameWithType: MessageSecurityOverHttpElement.AlgorithmSuite
  fullName: System.ServiceModel.Configuration.MessageSecurityOverHttpElement.AlgorithmSuite
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite
  parent: System.ServiceModel.Security
  isExternal: false
  name: SecurityAlgorithmSuite
  nameWithType: SecurityAlgorithmSuite
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite
- uid: System.ServiceModel.Configuration.MessageSecurityOverHttpElement.ClientCredentialType
  parent: System.ServiceModel.Configuration.MessageSecurityOverHttpElement
  isExternal: false
  name: ClientCredentialType
  nameWithType: MessageSecurityOverHttpElement.ClientCredentialType
  fullName: System.ServiceModel.Configuration.MessageSecurityOverHttpElement.ClientCredentialType
- uid: System.ServiceModel.MessageCredentialType
  parent: System.ServiceModel
  isExternal: true
  name: MessageCredentialType
  nameWithType: MessageCredentialType
  fullName: System.ServiceModel.MessageCredentialType
- uid: System.ServiceModel.Configuration.MessageSecurityOverHttpElement.NegotiateServiceCredential
  parent: System.ServiceModel.Configuration.MessageSecurityOverHttpElement
  isExternal: false
  name: NegotiateServiceCredential
  nameWithType: MessageSecurityOverHttpElement.NegotiateServiceCredential
  fullName: System.ServiceModel.Configuration.MessageSecurityOverHttpElement.NegotiateServiceCredential
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Configuration.MessageSecurityOverHttpElement.Properties
  parent: System.ServiceModel.Configuration.MessageSecurityOverHttpElement
  isExternal: false
  name: Properties
  nameWithType: MessageSecurityOverHttpElement.Properties
  fullName: System.ServiceModel.Configuration.MessageSecurityOverHttpElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.ServiceModel.Configuration.MessageSecurityOverHttpElement.AlgorithmSuite*
  parent: System.ServiceModel.Configuration.MessageSecurityOverHttpElement
  isExternal: false
  name: AlgorithmSuite
  nameWithType: MessageSecurityOverHttpElement.AlgorithmSuite
- uid: System.ServiceModel.Configuration.MessageSecurityOverHttpElement.ClientCredentialType*
  parent: System.ServiceModel.Configuration.MessageSecurityOverHttpElement
  isExternal: false
  name: ClientCredentialType
  nameWithType: MessageSecurityOverHttpElement.ClientCredentialType
- uid: System.ServiceModel.Configuration.MessageSecurityOverHttpElement.NegotiateServiceCredential*
  parent: System.ServiceModel.Configuration.MessageSecurityOverHttpElement
  isExternal: false
  name: NegotiateServiceCredential
  nameWithType: MessageSecurityOverHttpElement.NegotiateServiceCredential
- uid: System.ServiceModel.Configuration.MessageSecurityOverHttpElement.Properties*
  parent: System.ServiceModel.Configuration.MessageSecurityOverHttpElement
  isExternal: false
  name: Properties
  nameWithType: MessageSecurityOverHttpElement.Properties
