### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider
  id: TypeProvider
  children:
  - System.Workflow.ComponentModel.Compiler.TypeProvider.#ctor(System.IServiceProvider)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.AssemblyNameResolver
  - System.Workflow.ComponentModel.Compiler.TypeProvider.Dispose
  - System.Workflow.ComponentModel.Compiler.TypeProvider.GetAssemblyName(System.Type)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.GetEnumNames(System.Type)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.GetEventHandlerType(System.Reflection.EventInfo)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.GetService(System.Type)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.GetTypes
  - System.Workflow.ComponentModel.Compiler.TypeProvider.IsAssignable(System.Type,System.Type)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.IsEnum(System.Type)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.IsSubclassOf(System.Type,System.Type)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedProperty(System.Reflection.PropertyInfo,System.Object)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedPropertyResolver
  - System.Workflow.ComponentModel.Compiler.TypeProvider.LocalAssembly
  - System.Workflow.ComponentModel.Compiler.TypeProvider.ReferencedAssemblies
  - System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit(System.CodeDom.CodeCompileUnit,System.EventHandler)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssembly(System.Reflection.Assembly)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssemblyReference(System.String)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveCodeCompileUnit(System.CodeDom.CodeCompileUnit)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly(System.Reflection.Assembly)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors
  - System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrorsChanged
  - System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged
  langs:
  - csharp
  name: TypeProvider
  nameWithType: TypeProvider
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider
  type: Class
  summary: "구현 <xref href=&quot;System.Workflow.ComponentModel.Compiler.ITypeProvider&quot;> </xref> 컨테이너 역할을 지정 된 어셈블리와 코드 내에서 형식의 컴파일 단위입니다."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]이 <xref:System.Workflow.ComponentModel.Compiler.ITypeProvider>처리 뿐만 아니라 구현, 컴파일된 어셈블리 (<xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%2A> 및 <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference%2A>메서드), 아직 컴파일되지 않은 형식을 처리할 수 있습니다 (<xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit%2A>).</xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit%2A> </xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference%2A> </xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%2A> </xref:System.Workflow.ComponentModel.Compiler.ITypeProvider> <xref:System.Type?displayProperty=fullName>형식 참조를 사용 하 여 <xref:System.CodeDom.CodeCompileUnit>.</xref:System.CodeDom.CodeCompileUnit> 에 대 한 반환 되</xref:System.Type?displayProperty=fullName> 는 제한 된 구현이      > [!NOTE] > TypeProvider 로컬 어셈블리에서 public 및 public이 아닌 형식 및 참조 된 어셈블리에서 public 형식을 반환 합니다."
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public sealed class TypeProvider : IDisposable, IServiceProvider, System.Workflow.ComponentModel.Compiler.ITypeProvider
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.IServiceProvider
  - System.Workflow.ComponentModel.Compiler.ITypeProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: TypeProvider(IServiceProvider)
  nameWithType: TypeProvider.TypeProvider(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.TypeProvider(IServiceProvider)
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Workflow.ComponentModel.Compiler.TypeProvider&quot;> </xref> 클래스입니다."
  remarks: ''
  example:
  - "The following code example shows how to create a new instance of the <xref:System.Workflow.ComponentModel.Compiler.TypeProvider> class.  This code example is part of the BasicDesignerHosting SDK Sample from the WorkflowLoader.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Basic Designer Hosting](http://msdn.microsoft.com/en-us/55925adf-2daa-4dc2-b1bf-61aa0190d734).  \n  \n [!code-cs[WF_Samples#256](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#256)]\n [!code-vb[WF_Samples#256](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#256)]"
  syntax:
    content: public TypeProvider (IServiceProvider serviceProvider);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "캡슐화 된 <xref:System.IServiceProvider>이 인스턴스에 대 한.</xref:System.IServiceProvider>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)
  id: AddAssembly(System.Reflection.Assembly)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: AddAssembly(Assembly)
  nameWithType: TypeProvider.AddAssembly(Assembly)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(Assembly)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "이미 로드 된 어셈블리를 추가합니다. 호출자의 어셈블리를 로드 해야 하 고 <xref href=&quot;System.Workflow.ComponentModel.Compiler.TypeProvider&quot;> </xref> 이 어셈블리의 형식이 포함 되는 경우 분배 <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType*>호출 됩니다.</xref:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType*>"
  syntax:
    content: public void AddAssembly (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "<xref:System.Type.Assembly*>참조 >for를 추가 하려면</xref:System.Type.Assembly*>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assembly</code>가 null 참조 (Visual Basic <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)
  id: AddAssemblyReference(System.String)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: AddAssemblyReference(String)
  nameWithType: TypeProvider.AddAssemblyReference(String)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(String)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "에 대 한 참조 추가 <> </> *> 내부 목록에 있습니다. 이 어셈블리에 사용 되는 <xref:System.Type>의 조회는 <> </> *> 메서드.</xref:System.Type>"
  remarks: ''
  example:
  - "The following code example shows how to create a new instance of the <xref:System.Workflow.ComponentModel.Compiler.TypeProvider> class and run the AddAssemblyReference method. This code example is part of the BasicDesignerHosting SDK Sample from the WorkflowLoader.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Basic Designer Hosting](http://msdn.microsoft.com/en-us/55925adf-2daa-4dc2-b1bf-61aa0190d734).  \n  \n [!code-cs[Wf_samples#256](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#256)]\n [!code-vb[Wf_samples#256](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#256)]"
  syntax:
    content: public void AddAssemblyReference (string path);
    parameters:
    - id: path
      type: System.String
      description: "<xref:System.Type.Assembly*>추가할</xref:System.Type.Assembly*> 경로"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>가 null 참조 (Visual Basic <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)
  id: AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: AddCodeCompileUnit(CodeCompileUnit)
  nameWithType: TypeProvider.AddCodeCompileUnit(CodeCompileUnit)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(CodeCompileUnit)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "에 대 한 참조 추가 <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> 내부 목록에 있습니다. 이 <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> 에 사용 되는 <xref:System.Type>의 조회는 <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType*>메서드.</xref:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType*> </xref:System.Type>"
  syntax:
    content: public void AddCodeCompileUnit (System.CodeDom.CodeCompileUnit codeCompileUnit);
    parameters:
    - id: codeCompileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "The <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;></xref> to add."
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>codeCompileUnit</code>가 null 참조 (Visual Basic <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>codeCompileUnit</code>이 인스턴스에서 이미 참조 되었습니다."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.AssemblyNameResolver
  id: AssemblyNameResolver
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: AssemblyNameResolver
  nameWithType: TypeProvider.AssemblyNameResolver
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.AssemblyNameResolver
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "대리자 매개 변수 및 하나의 반환 값은 어셈블리를 반환 하는 메서드를 표시 이름 지정된 된 형식에 속해 있는 해당 참조를 가져오거나 설정 합니다."
  syntax:
    content: public Func<Type,string> AssemblyNameResolver { get; set; }
    return:
      type: System.Func{System.Type,System.String}
      description: "하나의 매개 변수 및 어셈블리를 반환 하는 한 반환 값을 사용 하 여 메서드를 참조 하는 대리자에는 지정된 된 형식에 속하는 이름을 표시 합니다."
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.AssemblyNameResolver*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.Dispose
  id: Dispose
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: Dispose()
  nameWithType: TypeProvider.Dispose()
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.Dispose()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "사용 하는 모든 리소스를 해제는 <xref href=&quot;System.Workflow.ComponentModel.Compiler.TypeProvider&quot;> </xref>합니다."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetAssemblyName(System.Type)
  id: GetAssemblyName(System.Type)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: GetAssemblyName(Type)
  nameWithType: TypeProvider.GetAssemblyName(Type)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetAssemblyName(Type)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "어셈블리의 표시 이름 지정된 된 형식의 선언 된 어셈블리를 반환 합니다."
  syntax:
    content: public string GetAssemblyName (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "어셈블리 이름이 있는 가져올 형식입니다."
    return:
      type: System.String
      description: "어셈블리에 지정된 된 형식의 선언 된 어셈블리의 이름을 표시 합니다."
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.GetAssemblyName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetEnumNames(System.Type)
  id: GetEnumNames(System.Type)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: GetEnumNames(Type)
  nameWithType: TypeProvider.GetEnumNames(Type)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetEnumNames(Type)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "지정 된 이름을 포함 하는 문자열 배열을 제공 <xref:System.Enum>인덱싱된 순서 대로.</xref:System.Enum>"
  syntax:
    content: public static string[] GetEnumNames (Type enumType);
    parameters:
    - id: enumType
      type: System.Type
      description: "이름을 가져올 형식입니다."
    return:
      type: System.String[]
      description: "지정 된 이름은 <xref:System.Enum>인덱싱된 순서 대로.</xref:System.Enum>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.GetEnumNames*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>enumType</code>가 null 참조 (Visual Basic <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enumType</code>않습니다는 <xref:System.Enum>합니다."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetEventHandlerType(System.Reflection.EventInfo)
  id: GetEventHandlerType(System.Reflection.EventInfo)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: GetEventHandlerType(EventInfo)
  nameWithType: TypeProvider.GetEventHandlerType(EventInfo)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetEventHandlerType(EventInfo)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "가져옵니다는 <xref:System.Type>의 <xref:System.EventHandler>, <xref:System.Reflection.EventInfo>.</xref:System.Reflection.EventInfo> 에 대 한 참조를 지정 된</xref:System.EventHandler> </xref:System.Type>"
  syntax:
    content: public static Type GetEventHandlerType (System.Reflection.EventInfo eventInfo);
    parameters:
    - id: eventInfo
      type: System.Reflection.EventInfo
      description: "<xref:System.Reflection.EventInfo>얻으려고는 <xref:System.EventHandler>유형의.</xref:System.EventHandler> </xref:System.Reflection.EventInfo>"
    return:
      type: System.Type
      description: "<xref:System.Type>의 <xref:System.EventHandler>, <xref:System.Reflection.EventInfo>.</xref:System.Reflection.EventInfo> 에 대 한 참조를 지정 된</xref:System.EventHandler> </xref:System.Type>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.GetEventHandlerType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>eventInfo</code>가 null 참조 (Visual Basic <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: TypeProvider.GetService(Type)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetService(Type)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "<xref:System.Object>지정된 된 서비스 <xref:System.Type>.</xref:System.Type> 를 제공 하는</xref:System.Object> 가져옵니다."
  remarks: "경우 캡슐화 된 <xref:System.IServiceProvider>이 인스턴스와 연결 된가 null 참조 (`Nothing` Visual basic에서) 이면 null 참조 (`Nothing`)이 반환 됩니다.</xref:System.IServiceProvider>"
  syntax:
    content: public object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "서비스 <xref:System.Type>하는 <xref:System.Object>제공 하는 것입니다.</xref:System.Object> </xref:System.Type>"
    return:
      type: System.Object
      description: "<xref:System.Object>지정된 된 서비스 <xref:System.Type>.</xref:System.Type> 를 제공합니다 하는</xref:System.Object>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)
  id: GetType(System.String)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: GetType(String)
  nameWithType: TypeProvider.GetType(String)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(String)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "집합에 추가 된 어셈블리의 형식을 가져옵니다는 <xref uid=&quot;langword_csharp_TypeProvider&quot; name=&quot;TypeProvider&quot; href=&quot;&quot;> </xref> 를 사용 하 여 <> </> *>, <> </> *>, 또는 <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit*>.</xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit*>"
  remarks: "이름을 어셈블리 캐시와이 인스턴스의 컴파일된 단위에서 확인할 수 없는 경우 null 참조 (Visual Basic `Nothing`)이 반환 됩니다. 이 오버 로드를 호출 하는 것과 같습니다 매개 변수의 값을 가진 두 개의 매개 변수 오버 로드를 호출 `throwOnError` 로 설정 `true`합니다."
  syntax:
    content: public Type GetType (string name);
    parameters:
    - id: name
      type: System.String
      description: "형식 이름입니다."
    return:
      type: System.Type
      description: "요청 된 <xref:System.Type>.</xref:System.Type>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.GetType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String,System.Boolean)
  id: GetType(System.String,System.Boolean)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: GetType(String,Boolean)
  nameWithType: TypeProvider.GetType(String,Boolean)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(String,Boolean)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "집합에 추가 된 어셈블리의 형식을 가져옵니다는 <xref uid=&quot;langword_csharp_TypeProvider&quot; name=&quot;TypeProvider&quot; href=&quot;&quot;> </xref> 를 사용 하 여 <> </> *>, <> </> *>, 또는 <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit*>.</xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit*>"
  remarks: "이름을 어셈블리 캐시와이 인스턴스의 컴파일된 단위에서 확인할 수 없는 경우 null 참조 (`Nothing`)를 반환 합니다; 경우에는 `throwOnError` 은 `false`합니다."
  syntax:
    content: public Type GetType (string name, bool throwOnError);
    parameters:
    - id: name
      type: System.String
      description: "형식 이름입니다."
    - id: throwOnError
      type: System.Boolean
      description: "예외를 throw 하는 경우 여부를 나타내는 값 `name` 를 확인할 수 없습니다."
    return:
      type: System.Type
      description: "요청 된 <xref:System.Type>.</xref:System.Type>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.GetType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)"
  - type: System.Exception
    commentId: T:System.Exception
    description: "<code>name</code>확인할 수 없습니다 및 <code>throwOnError</code> 은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetTypes
  id: GetTypes
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: GetTypes()
  nameWithType: TypeProvider.GetTypes()
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetTypes()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "각 들어 있는 배열을 만들어 <xref:System.Type>이 인스턴스에 알려진.</xref:System.Type>"
  syntax:
    content: public Type[] GetTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "각 포함 된 배열을 <xref:System.Type>이 인스턴스에 알려진.</xref:System.Type>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.GetTypes*
  exceptions:
  - type: System.Reflection.ReflectionTypeLoadException
    commentId: T:System.Reflection.ReflectionTypeLoadException
    description: "모든 <xref:System.Type>로드 되지 않습니다.</xref:System.Type>"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsAssignable(System.Type,System.Type)
  id: IsAssignable(System.Type,System.Type)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: IsAssignable(Type,Type)
  nameWithType: TypeProvider.IsAssignable(Type,Type)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.IsAssignable(Type,Type)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "다른 형식에 한 종류를 안전 하 게 지정할 수 있는지 여부를 나타냅니다."
  syntax:
    content: public static bool IsAssignable (Type toType, Type fromType);
    parameters:
    - id: toType
      type: System.Type
      description: "대상 <xref:System.Type>할당의.</xref:System.Type>"
    - id: fromType
      type: System.Type
      description: "소스 <xref:System.Type>할당의.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>할당; 안전 하 게 설정할 수 없으면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.IsAssignable*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsEnum(System.Type)
  id: IsEnum(System.Type)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: IsEnum(Type)
  nameWithType: TypeProvider.IsEnum(Type)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.IsEnum(Type)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "나타냅니다 <xref:System.Type> <xref:System.Enum>.</xref:System.Enum> 유형의</xref:System.Type> 여부"
  syntax:
    content: public static bool IsEnum (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>테스트할.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.Type>은 <xref:System.Enum>고, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Enum> </xref:System.Type>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.IsEnum*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSubclassOf(System.Type,System.Type)
  id: IsSubclassOf(System.Type,System.Type)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: IsSubclassOf(Type,Type)
  nameWithType: TypeProvider.IsSubclassOf(Type,Type)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSubclassOf(Type,Type)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "나타냅니다 <xref:System.Type>다른 <xref:System.Type>.</xref:System.Type> 파생된 클래스 인지</xref:System.Type> 여부"
  syntax:
    content: public static bool IsSubclassOf (Type subclass, Type superClass);
    parameters:
    - id: subclass
      type: System.Type
      description: "<xref:System.Type>파생된 클래스도 테스트</xref:System.Type>"
    - id: superClass
      type: System.Type
      description: "<xref:System.Type>클래스로 테스트할</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>테스트 관계가 true; 이면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSubclassOf*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedProperty(System.Reflection.PropertyInfo,System.Object)
  id: IsSupportedProperty(System.Reflection.PropertyInfo,System.Object)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: IsSupportedProperty(PropertyInfo,Object)
  nameWithType: TypeProvider.IsSupportedProperty(PropertyInfo,Object)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedProperty(PropertyInfo,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "지정된 된 속성이 대상에서 지원 되는지 여부를 결정 하는 값을 반환 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]합니다."
  syntax:
    content: public bool IsSupportedProperty (System.Reflection.PropertyInfo property, object declaringInstance);
    parameters:
    - id: property
      type: System.Reflection.PropertyInfo
      description: "확인할 속성입니다."
    - id: declaringInstance
      type: System.Object
      description: "지정된 된 속성 선언 된 인스턴스."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정된 된 속성이 대상에서 지원 되는 경우 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)], 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedPropertyResolver
  id: IsSupportedPropertyResolver
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: IsSupportedPropertyResolver
  nameWithType: TypeProvider.IsSupportedPropertyResolver
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedPropertyResolver
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "지정된 된 속성이 대상에서 지원 되는지 여부를 결정 하는 하나의 반환 값 및 매개 변수를 사용 하 여 메서드를 참조 하는 대리자를 가져오거나 설정 합니다. [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]합니다."
  syntax:
    content: public Func<System.Reflection.PropertyInfo,object,bool> IsSupportedPropertyResolver { get; set; }
    return:
      type: System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean}
      description: "지정된 된 속성이 대상에서 지원 되는지 여부를 결정 하는 하나의 반환 값 및 매개 변수를 사용 하 여 메서드를 참조 하는 대리자 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]합니다."
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedPropertyResolver*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.LocalAssembly
  id: LocalAssembly
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: LocalAssembly
  nameWithType: TypeProvider.LocalAssembly
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.LocalAssembly
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "로컬로 정의 나타내는 값을 가져옵니다 <xref:System.Reflection.Assembly>이 인스턴스에 대 한.</xref:System.Reflection.Assembly>"
  syntax:
    content: public System.Reflection.Assembly LocalAssembly { get; }
    return:
      type: System.Reflection.Assembly
      description: "로컬로 정의 된 <xref:System.Reflection.Assembly>이 인스턴스에 대 한.</xref:System.Reflection.Assembly>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.LocalAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.ReferencedAssemblies
  id: ReferencedAssemblies
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: ReferencedAssemblies
  nameWithType: TypeProvider.ReferencedAssemblies
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.ReferencedAssemblies
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "<xref:System.Type>.</xref:System.Type> 에서 참조 하는 모든 어셈블리의 컬렉션을 가져옵니다."
  syntax:
    content: public System.Collections.Generic.ICollection<System.Reflection.Assembly> ReferencedAssemblies { get; }
    return:
      type: System.Collections.Generic.ICollection{System.Reflection.Assembly}
      description: "<xref:System.Type>.</xref:System.Type> 에서 참조 하는 모든 어셈블리의 컬렉션"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.ReferencedAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit(System.CodeDom.CodeCompileUnit,System.EventHandler)
  id: RefreshCodeCompileUnit(System.CodeDom.CodeCompileUnit,System.EventHandler)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: RefreshCodeCompileUnit(CodeCompileUnit,EventHandler)
  nameWithType: TypeProvider.RefreshCodeCompileUnit(CodeCompileUnit,EventHandler)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit(CodeCompileUnit,EventHandler)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "업데이트는 <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> 이 인스턴스와 연결 된 참조입니다."
  remarks: "<xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged>이 메서드가 호출 되 면 발생 합니다.</xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged>"
  syntax:
    content: public void RefreshCodeCompileUnit (System.CodeDom.CodeCompileUnit codeCompileUnit, EventHandler refresher);
    parameters:
    - id: codeCompileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "<xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> 갱신 되도록 합니다."
    - id: refresher
      type: System.EventHandler
      description: "<xref:System.EventHandler>이 이벤트를 위임할 수 있습니다.</xref:System.EventHandler>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>codeCompileUnit</code>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "이 인스턴스가 주체를 이미 참조 <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssembly(System.Reflection.Assembly)
  id: RemoveAssembly(System.Reflection.Assembly)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: RemoveAssembly(Assembly)
  nameWithType: TypeProvider.RemoveAssembly(Assembly)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssembly(Assembly)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "주체에 대 한 모든 참조가 제거 <xref:System.Reflection.Assembly>이 인스턴스에서.</xref:System.Reflection.Assembly>"
  remarks: "<xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged>이 메서드가 호출 되 면 발생 합니다.</xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged>"
  syntax:
    content: public void RemoveAssembly (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "<xref:System.Reflection.Assembly>이 인스턴스에서 제거할.</xref:System.Reflection.Assembly>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assembly</code>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssemblyReference(System.String)
  id: RemoveAssemblyReference(System.String)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: RemoveAssemblyReference(String)
  nameWithType: TypeProvider.RemoveAssemblyReference(String)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssemblyReference(String)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "경로 기반 제거 <xref:System.Reflection.Assembly>이 인스턴스에서 참조.</xref:System.Reflection.Assembly>"
  remarks: "<xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged>이 메서드가 호출 되 면 발생 합니다.</xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged>"
  syntax:
    content: public void RemoveAssemblyReference (string path);
    parameters:
    - id: path
      type: System.String
      description: "경로 <xref:System.Reflection.Assembly>제거할.</xref:System.Reflection.Assembly>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssemblyReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveCodeCompileUnit(System.CodeDom.CodeCompileUnit)
  id: RemoveCodeCompileUnit(System.CodeDom.CodeCompileUnit)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: RemoveCodeCompileUnit(CodeCompileUnit)
  nameWithType: TypeProvider.RemoveCodeCompileUnit(CodeCompileUnit)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveCodeCompileUnit(CodeCompileUnit)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "주체에 대 한 모든 참조가 제거 <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> 이 인스턴스에서 합니다."
  remarks: "<xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged>이 메서드가 호출 되 면 발생 합니다.</xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged>"
  syntax:
    content: public void RemoveCodeCompileUnit (System.CodeDom.CodeCompileUnit codeCompileUnit);
    parameters:
    - id: codeCompileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "<xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> 제거 됩니다."
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveCodeCompileUnit*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>codeCompileUnit</code>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly(System.Reflection.Assembly)
  id: SetLocalAssembly(System.Reflection.Assembly)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: SetLocalAssembly(Assembly)
  nameWithType: TypeProvider.SetLocalAssembly(Assembly)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly(Assembly)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "로컬 <xref:System.Reflection.Assembly>참조 <xref:System.Reflection.Assembly>.</xref:System.Reflection.Assembly> </xref:System.Reflection.Assembly> 의 값을 설정"
  remarks: "<xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged>이 메서드가 호출 되 면 발생 합니다.</xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged> <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%28System.Reflection.Assembly%29>그렇지 않으면 아무런 <xref:System.Workflow.ComponentModel.Compiler.TypeProvider>.</xref:System.Workflow.ComponentModel.Compiler.TypeProvider> 효과가</xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%28System.Reflection.Assembly%29> 호출 하기 전에 SetLocalAssembly 호출"
  syntax:
    content: public void SetLocalAssembly (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "<xref:System.Reflection.Assembly>이 값을 설정 하는 데 사용</xref:System.Reflection.Assembly>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors
  id: TypeLoadErrors
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: TypeLoadErrors
  nameWithType: TypeProvider.TypeLoadErrors
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "<xref:System.Collections.IDictionary>키가 <xref:System.Object>있는 <xref:System.Exception>.</xref:System.Exception> 되도록</xref:System.Object> 지정 된 로드 오류 예외의</xref:System.Collections.IDictionary> 가져옵니다."
  remarks: "업데이트 되 고 분리 <xref:System.Collections.IDictionary>이 속성에 대 한 각 참조에 만들어집니다.</xref:System.Collections.IDictionary>"
  syntax:
    content: public System.Collections.Generic.IDictionary<object,Exception> TypeLoadErrors { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.Object,System.Exception}
      description: "<xref:System.Collections.IDictionary>키가 <xref:System.Object>있는 <xref:System.Exception>.</xref:System.Exception> 되도록</xref:System.Object> 지정 된 로드 오류 예외의</xref:System.Collections.IDictionary>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrorsChanged
  id: TypeLoadErrorsChanged
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: TypeLoadErrorsChanged
  nameWithType: TypeProvider.TypeLoadErrorsChanged
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrorsChanged
  type: Event
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "발생 경우 컬렉션 <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors*>수정 됩니다.</xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors*>"
  syntax:
    content: public event EventHandler TypeLoadErrorsChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged
  id: TypesChanged
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: TypesChanged
  nameWithType: TypeProvider.TypesChanged
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged
  type: Event
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "정의 된 형식의 컬렉션이 수정 되 면 발생 합니다."
  syntax:
    content: public event EventHandler TypesChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Reflection.ReflectionTypeLoadException
  isExternal: true
  name: System.Reflection.ReflectionTypeLoadException
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.#ctor(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: TypeProvider(IServiceProvider)
  nameWithType: TypeProvider.TypeProvider(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.TypeProvider(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: AddAssembly(Assembly)
  nameWithType: TypeProvider.AddAssembly(Assembly)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: AddAssemblyReference(String)
  nameWithType: TypeProvider.AddAssemblyReference(String)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: AddCodeCompileUnit(CodeCompileUnit)
  nameWithType: TypeProvider.AddCodeCompileUnit(CodeCompileUnit)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(CodeCompileUnit)
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.AssemblyNameResolver
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: AssemblyNameResolver
  nameWithType: TypeProvider.AssemblyNameResolver
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.AssemblyNameResolver
- uid: System.Func{System.Type,System.String}
  parent: System
  isExternal: true
  name: Func<Type,String>
  nameWithType: Func<Type,String>
  fullName: System.Func<System.Type,System.String>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Type,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.Dispose
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: Dispose()
  nameWithType: TypeProvider.Dispose()
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.Dispose()
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetAssemblyName(System.Type)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: GetAssemblyName(Type)
  nameWithType: TypeProvider.GetAssemblyName(Type)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetAssemblyName(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetEnumNames(System.Type)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: GetEnumNames(Type)
  nameWithType: TypeProvider.GetEnumNames(Type)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetEnumNames(Type)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetEventHandlerType(System.Reflection.EventInfo)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: GetEventHandlerType(EventInfo)
  nameWithType: TypeProvider.GetEventHandlerType(EventInfo)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetEventHandlerType(EventInfo)
- uid: System.Reflection.EventInfo
  parent: System.Reflection
  isExternal: true
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetService(System.Type)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: GetService(Type)
  nameWithType: TypeProvider.GetService(Type)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetService(Type)
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: GetType(String)
  nameWithType: TypeProvider.GetType(String)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(String)
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String,System.Boolean)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: GetType(String,Boolean)
  nameWithType: TypeProvider.GetType(String,Boolean)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetTypes
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: GetTypes()
  nameWithType: TypeProvider.GetTypes()
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetTypes()
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsAssignable(System.Type,System.Type)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: IsAssignable(Type,Type)
  nameWithType: TypeProvider.IsAssignable(Type,Type)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.IsAssignable(Type,Type)
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsEnum(System.Type)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: IsEnum(Type)
  nameWithType: TypeProvider.IsEnum(Type)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.IsEnum(Type)
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSubclassOf(System.Type,System.Type)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: IsSubclassOf(Type,Type)
  nameWithType: TypeProvider.IsSubclassOf(Type,Type)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSubclassOf(Type,Type)
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedProperty(System.Reflection.PropertyInfo,System.Object)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: IsSupportedProperty(PropertyInfo,Object)
  nameWithType: TypeProvider.IsSupportedProperty(PropertyInfo,Object)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedProperty(PropertyInfo,Object)
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedPropertyResolver
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: IsSupportedPropertyResolver
  nameWithType: TypeProvider.IsSupportedPropertyResolver
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedPropertyResolver
- uid: System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean}
  parent: System
  isExternal: true
  name: Func<PropertyInfo,Object,Boolean>
  nameWithType: Func<PropertyInfo,Object,Boolean>
  fullName: System.Func<System.Reflection.PropertyInfo,System.Object,System.Boolean>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: Func<System.Reflection.PropertyInfo,System.Object,System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.LocalAssembly
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: LocalAssembly
  nameWithType: TypeProvider.LocalAssembly
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.LocalAssembly
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.ReferencedAssemblies
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: TypeProvider.ReferencedAssemblies
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.ReferencedAssemblies
- uid: System.Collections.Generic.ICollection{System.Reflection.Assembly}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<Assembly>
  nameWithType: ICollection<Assembly>
  fullName: System.Collections.Generic.ICollection<System.Reflection.Assembly>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Reflection.Assembly>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: Assembly
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit(System.CodeDom.CodeCompileUnit,System.EventHandler)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: RefreshCodeCompileUnit(CodeCompileUnit,EventHandler)
  nameWithType: TypeProvider.RefreshCodeCompileUnit(CodeCompileUnit,EventHandler)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit(CodeCompileUnit,EventHandler)
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssembly(System.Reflection.Assembly)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: RemoveAssembly(Assembly)
  nameWithType: TypeProvider.RemoveAssembly(Assembly)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssembly(Assembly)
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssemblyReference(System.String)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: RemoveAssemblyReference(String)
  nameWithType: TypeProvider.RemoveAssemblyReference(String)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssemblyReference(String)
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveCodeCompileUnit(System.CodeDom.CodeCompileUnit)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: RemoveCodeCompileUnit(CodeCompileUnit)
  nameWithType: TypeProvider.RemoveCodeCompileUnit(CodeCompileUnit)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveCodeCompileUnit(CodeCompileUnit)
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly(System.Reflection.Assembly)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: SetLocalAssembly(Assembly)
  nameWithType: TypeProvider.SetLocalAssembly(Assembly)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly(Assembly)
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: TypeLoadErrors
  nameWithType: TypeProvider.TypeLoadErrors
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors
- uid: System.Collections.Generic.IDictionary{System.Object,System.Exception}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<Object,Exception>
  nameWithType: IDictionary<Object,Exception>
  fullName: System.Collections.Generic.IDictionary<System.Object,System.Exception>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.Object,System.Exception>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrorsChanged
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: TypeLoadErrorsChanged
  nameWithType: TypeProvider.TypeLoadErrorsChanged
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrorsChanged
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: TypesChanged
  nameWithType: TypeProvider.TypesChanged
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.#ctor*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: TypeProvider
  nameWithType: TypeProvider.TypeProvider
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: AddAssembly
  nameWithType: TypeProvider.AddAssembly
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: AddAssemblyReference
  nameWithType: TypeProvider.AddAssemblyReference
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: AddCodeCompileUnit
  nameWithType: TypeProvider.AddCodeCompileUnit
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.AssemblyNameResolver*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: AssemblyNameResolver
  nameWithType: TypeProvider.AssemblyNameResolver
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.Dispose*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: Dispose
  nameWithType: TypeProvider.Dispose
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetAssemblyName*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: GetAssemblyName
  nameWithType: TypeProvider.GetAssemblyName
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetEnumNames*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: GetEnumNames
  nameWithType: TypeProvider.GetEnumNames
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetEventHandlerType*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: GetEventHandlerType
  nameWithType: TypeProvider.GetEventHandlerType
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetService*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: GetService
  nameWithType: TypeProvider.GetService
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetType*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: GetType
  nameWithType: TypeProvider.GetType
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetTypes*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: GetTypes
  nameWithType: TypeProvider.GetTypes
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsAssignable*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: IsAssignable
  nameWithType: TypeProvider.IsAssignable
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsEnum*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: IsEnum
  nameWithType: TypeProvider.IsEnum
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSubclassOf*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: IsSubclassOf
  nameWithType: TypeProvider.IsSubclassOf
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedProperty*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: IsSupportedProperty
  nameWithType: TypeProvider.IsSupportedProperty
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedPropertyResolver*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: IsSupportedPropertyResolver
  nameWithType: TypeProvider.IsSupportedPropertyResolver
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.LocalAssembly*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: LocalAssembly
  nameWithType: TypeProvider.LocalAssembly
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.ReferencedAssemblies*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: TypeProvider.ReferencedAssemblies
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: RefreshCodeCompileUnit
  nameWithType: TypeProvider.RefreshCodeCompileUnit
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssembly*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: RemoveAssembly
  nameWithType: TypeProvider.RemoveAssembly
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssemblyReference*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: RemoveAssemblyReference
  nameWithType: TypeProvider.RemoveAssemblyReference
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveCodeCompileUnit*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: RemoveCodeCompileUnit
  nameWithType: TypeProvider.RemoveCodeCompileUnit
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: SetLocalAssembly
  nameWithType: TypeProvider.SetLocalAssembly
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: TypeLoadErrors
  nameWithType: TypeProvider.TypeLoadErrors
