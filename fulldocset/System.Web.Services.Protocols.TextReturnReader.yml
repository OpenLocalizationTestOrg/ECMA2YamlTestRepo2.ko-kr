### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.TextReturnReader
  id: TextReturnReader
  children:
  - System.Web.Services.Protocols.TextReturnReader.#ctor
  - System.Web.Services.Protocols.TextReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.TextReturnReader.Initialize(System.Object)
  - System.Web.Services.Protocols.TextReturnReader.Read(System.Net.WebResponse,System.IO.Stream)
  langs:
  - csharp
  name: TextReturnReader
  nameWithType: TextReturnReader
  fullName: System.Web.Services.Protocols.TextReturnReader
  type: Class
  summary: "SOAP 하지 않고 HTTP를 사용 하 여 구현 하는 웹 서비스 클라이언트에 대 한 HTTP 응답 텍스트의 값을 반환 하는 읽습니다."
  remarks: "TextReturnReader 및 기타 클래스에는 <xref:System.Web.Services.Protocols>네임 스페이스는 HTTP GET 및 HTTP POST 작업을 통해 웹 서비스의.NET Framework의 구현을 지원 합니다.</xref:System.Web.Services.Protocols> 웹 서비스 작성자 및 독자 serialize 및 deserialize를 각각 매개 변수 또는 웹 메서드의 반환 개체와 HTTP 요청 또는 응답 스트림을 사이입니다. 웹 서비스 작성자 및 독자 전송에 HTTP를 사용 하지만 SOAP 표준을 사용 하 여 메시지를 교환 하지는 않습니다.       TextReturnReader 클래스 웹 메서드 반환 값으로 비-XML 텍스트의 클라이언트 쪽 읽기를 구현합니다. 반환 값을 가져오려면 HTTP 응답의 본문에 인코딩된 텍스트를 구문 분석 되 정규식 패턴 일치를 사용 하 여 특성 <xref:System.Web.Services.Protocols.MatchAttribute>클라이언트 프록시 클래스의 웹 메서드에 적용할 수 있는,</xref:System.Web.Services.Protocols.MatchAttribute> 지정 된 대로 TextReturnReader 클래스 호출은 <xref:System.Web.Services.Protocols.PatternMatcher>실제로 패턴 일치를 수행 하는 클래스입니다.</xref:System.Web.Services.Protocols.PatternMatcher>       텍스트 패턴 일치 웹 서비스의 XML 스키마 정의에 연결 해야 하는 XML 문서를 변환 하지 않고 HTML 콘텐츠를 검색 하는 방법을 제공 합니다. 정규식 검색 대상은 통해 설명 언어 WSDL (웹 서비스) 문서에 지정 된 `match` 내에서 XML 요소 `text` 요소입니다. 두 요소 네임 스페이스 http://microsoft.com/wsdl/mime/textMatching/에 속합니다.       때 **일치** 요소는 WSDL 문서에 지정 된, Wsdl.exe 도구 적용 <xref:System.Web.Services.Protocols.MatchAttribute>생성 되는 클라이언트 프록시 클래스에서 해당 웹 메서드 특성.</xref:System.Web.Services.Protocols.MatchAttribute> 또한 TextReturnReader 대신 사용 됩니다 <xref:System.Web.Services.Protocols.XmlReturnReader>, 웹 메서드를 역직렬화 하는 것에 대 한 기본 클래스는 HTTP GET 및 HTTP POST 작업을 통해 웹 서비스의.NET Framework의 구현에 따라 값을 반환 합니다.</xref:System.Web.Services.Protocols.XmlReturnReader>       일반적으로 않아도 됩니다 TextReturnReader 클래스를 직접 사용 합니다."
  syntax:
    content: 'public class TextReturnReader : System.Web.Services.Protocols.MimeReturnReader'
  inheritance:
  - System.Object
  - System.Web.Services.Protocols.MimeFormatter
  - System.Web.Services.Protocols.MimeReturnReader
  implements: []
  inheritedMembers:
  - System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  platform:
  - net462
- uid: System.Web.Services.Protocols.TextReturnReader.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.TextReturnReader
  langs:
  - csharp
  name: TextReturnReader()
  nameWithType: TextReturnReader.TextReturnReader()
  fullName: System.Web.Services.Protocols.TextReturnReader.TextReturnReader()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.Services.Protocols.TextReturnReader&quot;> </xref> 클래스입니다."
  syntax:
    content: public TextReturnReader ();
    parameters: []
  overload: System.Web.Services.Protocols.TextReturnReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.TextReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  id: GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.TextReturnReader
  langs:
  - csharp
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: TextReturnReader.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.TextReturnReader.GetInitializer(LogicalMethodInfo)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "에 지정된 된 메서드에 대 한 이니셜라이저를 반환합니다."
  remarks: "이니셜라이저는 매개 변수로 전달 되는 개체는 <xref:System.Web.Services.Protocols.TextReturnReader.Initialize%2A>메서드.</xref:System.Web.Services.Protocols.TextReturnReader.Initialize%2A> 에 대 한는 <xref:System.Web.Services.Protocols.TextReturnReader>클래스에서 이니셜라이저는는 <xref:System.Web.Services.Protocols.PatternMatcher>웹 메서드의 반환 형식을 기반으로 하는 개체입니다.</xref:System.Web.Services.Protocols.PatternMatcher> </xref:System.Web.Services.Protocols.TextReturnReader>       GetInitializer 메서드는 서비스 초기화 중 호출 됩니다. 나중 응답 처리 된 시간에는 이니셜라이저는에 전달 된 개체는 <xref:System.Web.Services.Protocols.TextReturnReader.Initialize%2A>다른 방식의 <xref:System.Web.Services.Protocols.TextReturnReader>인스턴스.</xref:System.Web.Services.Protocols.TextReturnReader> </xref:System.Web.Services.Protocols.TextReturnReader.Initialize%2A> 다른 인스턴스의 실제 읽기를 수행합니다."
  syntax:
    content: public override object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);
    parameters:
    - id: methodInfo
      type: System.Web.Services.Protocols.LogicalMethodInfo
      description: "A <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> 이니셜라이저를 가져올 웹 메서드를 지정 하 합니다."
    return:
      type: System.Object
      description: "지정 된 메서드는 이니셜라이저"
  overload: System.Web.Services.Protocols.TextReturnReader.GetInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.TextReturnReader.Initialize(System.Object)
  id: Initialize(System.Object)
  parent: System.Web.Services.Protocols.TextReturnReader
  langs:
  - csharp
  name: Initialize(Object)
  nameWithType: TextReturnReader.Initialize(Object)
  fullName: System.Web.Services.Protocols.TextReturnReader.Initialize(Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "인스턴스를 초기화합니다."
  remarks: "Initialize 메서드를 제공 된 <xref:System.Web.Services.Protocols.PatternMatcher>에서 사용 하는 개체는 <xref:System.Web.Services.Protocols.TextReturnReader.Read%2A>HTTP 응답에 포함 된 텍스트를 구문 분석 메서드.</xref:System.Web.Services.Protocols.TextReturnReader.Read%2A> </xref:System.Web.Services.Protocols.PatternMatcher> Initialize 메서드는 요청이 처리 될 때 호출 됩니다. 입력된 매개 변수 `o`를 호출 하 여 가져온는 <xref:System.Web.Services.Protocols.TextReturnReader.GetInitializer%2A>클라이언트 초기화 중에 가져온 클래스의 다른 인스턴스에서 메서드.</xref:System.Web.Services.Protocols.TextReturnReader.GetInitializer%2A>"
  syntax:
    content: public override void Initialize (object o);
    parameters:
    - id: o
      type: System.Object
      description: "A <xref href=&quot;System.Web.Services.Protocols.PatternMatcher&quot;> </xref> 호출 되 고 웹 메서드의 반환 형식에 대 한 개체입니다."
  overload: System.Web.Services.Protocols.TextReturnReader.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.TextReturnReader.Read(System.Net.WebResponse,System.IO.Stream)
  id: Read(System.Net.WebResponse,System.IO.Stream)
  parent: System.Web.Services.Protocols.TextReturnReader
  langs:
  - csharp
  name: Read(WebResponse,Stream)
  nameWithType: TextReturnReader.Read(WebResponse,Stream)
  fullName: System.Web.Services.Protocols.TextReturnReader.Read(WebResponse,Stream)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "HTTP 응답에 포함 된 텍스트를 구문 분석 합니다."
  remarks: "HTTP 응답의 텍스트 콘텐츠를 구문 분석는 <xref:System.Web.Services.Protocols.TextReturnReader>Read 메서드 클래스의 구현에 사용 된 <xref:System.Web.Services.Protocols.PatternMatcher>에 인수로 전달 된 개체는 <xref:System.Web.Services.Protocols.TextReturnReader.Initialize%2A>메서드.</xref:System.Web.Services.Protocols.TextReturnReader.Initialize%2A> </xref:System.Web.Services.Protocols.PatternMatcher> </xref:System.Web.Services.Protocols.TextReturnReader> 역직렬화 된 웹 메서드 반환 값을 반환 하기 전에 응답 스트림을 닫습니다."
  syntax:
    content: public override object Read (System.Net.WebResponse response, System.IO.Stream responseStream);
    parameters:
    - id: response
      type: System.Net.WebResponse
      description: "A <xref:System.Net.WebResponse>작업에 대 한 출력 메시지를 포함 하는 개체입니다.</xref:System.Net.WebResponse>"
    - id: responseStream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>콘텐츠가 HTTP 응답의 본문 나타내는 `response` 매개 변수.</xref:System.IO.Stream>"
    return:
      type: System.Object
      description: "역직렬화 된 웹 메서드를 포함 하는 개체 값을 반환 합니다."
  overload: System.Web.Services.Protocols.TextReturnReader.Read*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Services.Protocols.MimeReturnReader
  isExternal: false
  name: System.Web.Services.Protocols.MimeReturnReader
- uid: System.Web.Services.Protocols.TextReturnReader.#ctor
  parent: System.Web.Services.Protocols.TextReturnReader
  isExternal: false
  name: TextReturnReader()
  nameWithType: TextReturnReader.TextReturnReader()
  fullName: System.Web.Services.Protocols.TextReturnReader.TextReturnReader()
- uid: System.Web.Services.Protocols.TextReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.TextReturnReader
  isExternal: false
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: TextReturnReader.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.TextReturnReader.GetInitializer(LogicalMethodInfo)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Services.Protocols.LogicalMethodInfo
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo
- uid: System.Web.Services.Protocols.TextReturnReader.Initialize(System.Object)
  parent: System.Web.Services.Protocols.TextReturnReader
  isExternal: false
  name: Initialize(Object)
  nameWithType: TextReturnReader.Initialize(Object)
  fullName: System.Web.Services.Protocols.TextReturnReader.Initialize(Object)
- uid: System.Web.Services.Protocols.TextReturnReader.Read(System.Net.WebResponse,System.IO.Stream)
  parent: System.Web.Services.Protocols.TextReturnReader
  isExternal: false
  name: Read(WebResponse,Stream)
  nameWithType: TextReturnReader.Read(WebResponse,Stream)
  fullName: System.Web.Services.Protocols.TextReturnReader.Read(WebResponse,Stream)
- uid: System.Net.WebResponse
  parent: System.Net
  isExternal: true
  name: WebResponse
  nameWithType: WebResponse
  fullName: System.Net.WebResponse
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.Services.Protocols.TextReturnReader.#ctor*
  parent: System.Web.Services.Protocols.TextReturnReader
  isExternal: false
  name: TextReturnReader
  nameWithType: TextReturnReader.TextReturnReader
- uid: System.Web.Services.Protocols.TextReturnReader.GetInitializer*
  parent: System.Web.Services.Protocols.TextReturnReader
  isExternal: false
  name: GetInitializer
  nameWithType: TextReturnReader.GetInitializer
- uid: System.Web.Services.Protocols.TextReturnReader.Initialize*
  parent: System.Web.Services.Protocols.TextReturnReader
  isExternal: false
  name: Initialize
  nameWithType: TextReturnReader.Initialize
- uid: System.Web.Services.Protocols.TextReturnReader.Read*
  parent: System.Web.Services.Protocols.TextReturnReader
  isExternal: false
  name: Read
  nameWithType: TextReturnReader.Read
