### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement
  id: CompositeDuplexBindingElement
  children:
  - System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor
  - System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress
  - System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone
  - System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  langs:
  - csharp
  name: CompositeDuplexBindingElement
  nameWithType: CompositeDuplexBindingElement
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement
  type: Class
  summary: "클라이언트 서비스를 다시 클라이언트에 메시지를 보낼에 대 한 끝점을 공개 해야 할 때 사용 되는 바인딩 요소를 나타냅니다."
  remarks: "와 같은 전송에 HTTP 이중 통신을 기본적으로 허용 하지 않는 일반적으로 사용 됩니다. 반면, TCP,으로 이중 통신을 허용 하 고 하므로이 바인딩 요소에서 클라이언트로 회신 메시지를 보낼 서비스에 대 한 사용을 요구 하지 않습니다.       클라이언트는 서비스 연결할 수는 서비스에서 클라이언트 연결을 설정 하는 주소를 노출 해야 합니다. 이 클라이언트 주소에서 제공 되는 <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A>속성.</xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] 자동으로 생성 한 <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A>사용자가 명시적으로 설정 하지 않으면 하나.</xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A>"
  syntax:
    content: 'public sealed class CompositeDuplexBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Description.IPolicyExportExtension'
  inheritance:
  - System.ServiceModel.Channels.BindingElement
  implements:
  - System.ServiceModel.Description.IPolicyExportExtension
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  langs:
  - csharp
  name: CompositeDuplexBindingElement()
  nameWithType: CompositeDuplexBindingElement.CompositeDuplexBindingElement()
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.CompositeDuplexBindingElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.Channels.CompositeDuplexBindingElement&quot;> </xref> 클래스입니다."
  syntax:
    content: public CompositeDuplexBindingElement ();
    parameters: []
  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  langs:
  - csharp
  name: BuildChannelFactory(BindingContext)
  nameWithType: CompositeDuplexBindingElement.BuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: public override System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "추가할 수 있습니다."
    return:
      type: System.ServiceModel.Channels.IChannelFactory{TChannel}
      description: "추가할 수 있습니다."
  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  langs:
  - csharp
  name: BuildChannelListener(BindingContext)
  nameWithType: CompositeDuplexBindingElement.BuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public override System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "추가할 수 있습니다."
    return:
      type: System.ServiceModel.Channels.IChannelListener`1
      description: "추가할 수 있습니다."
  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  id: CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  langs:
  - csharp
  name: CanBuildChannelFactory(BindingContext)
  nameWithType: CompositeDuplexBindingElement.CanBuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: public override bool CanBuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "추가할 수 있습니다."
    return:
      type: System.Boolean
      description: "추가할 수 있습니다."
  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  id: CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  langs:
  - csharp
  name: CanBuildChannelListener(BindingContext)
  nameWithType: CompositeDuplexBindingElement.CanBuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public override bool CanBuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "추가할 수 있습니다."
    return:
      type: System.Boolean
      description: "추가할 수 있습니다."
  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress
  id: ClientBaseAddress
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  langs:
  - csharp
  name: ClientBaseAddress
  nameWithType: CompositeDuplexBindingElement.ClientBaseAddress
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "클라이언트에 대 한 기본 주소를 가져오거나 설정 합니다."
  remarks: "이 속성을 서비스 클라이언트를 연결할 수 주소를 제공 합니다. A `null` 값을 사용 하면 클라이언트 기본 주소를 자동으로 생성 됩니다.       이 기본 주소를 절대 주소가 아닙니다. 이 바인딩에서 클라이언트 끝점을 생성할 때 GUID는 기본 주소에 추가 됩니다."
  syntax:
    content: public Uri ClientBaseAddress { get; set; }
    return:
      type: System.Uri
      description: "A <xref:System.Uri>클라이언트에 대 한 기본 주소를 포함 하는.</xref:System.Uri>"
  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone
  id: Clone
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  langs:
  - csharp
  name: Clone()
  nameWithType: CompositeDuplexBindingElement.Clone()
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "현재 바인딩 요소의 전체 복제본을 반환 합니다."
  remarks: "복제를 반환 하면 런타임에서를 여러 개의 사용자 지정 바인딩이 하나의 사용자 지정 바인딩 요소를 공유할 수 있습니다. 복제가 반환 되지 않으면 런타임 동작이 정의 되지 않습니다.       개체의 전체 복제는 개체의 복사본 및 해당 개체에서 직접 또는 간접적으로 참조 하는 모든 대상을 복사를 만듭니다. 이 (전체 개체 그래프 복사 합니다.) 개체의 단순 복제는 달리,만 개체의 복사본입니다. 단순 복사는 참조 된 개체의 복사본은 만들지는 개체가 다른 개체에 대 한 참조를 포함 하는 경우 대신 원본 개체에 대 한 참조만 복사합니다. 전체 복사본 특히 <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement>를 통해 복사는 <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A>값.</xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> </xref:System.ServiceModel.Channels.CompositeDuplexBindingElement>"
  syntax:
    content: public override System.ServiceModel.Channels.BindingElement Clone ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElement
      description: "A <xref href=&quot;System.ServiceModel.Channels.CompositeDuplexBindingElement&quot;> </xref> 현재 바인딩 요소의 전체 복제본입니다."
  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  id: GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  langs:
  - csharp
  name: GetProperty(BindingContext)
  nameWithType: CompositeDuplexBindingElement.GetProperty(BindingContext)
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public override T GetProperty<T> (System.ServiceModel.Channels.BindingContext context) where T : class;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "추가할 수 있습니다."
    return:
      type: T
      description: "추가할 수 있습니다."
  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  id: System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  isEii: true
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  langs:
  - csharp
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  nameWithType: CompositeDuplexBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "바인딩에 복합 이중이 있음을 나타내는 바인딩에 대 한 사용자 지정 정책 어설션을 내보냅니다."
  remarks: '[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]<xref:System.ServiceModel.Description.IPolicyExportExtension>.</xref:System.ServiceModel.Description.IPolicyExportExtension>'
  syntax:
    content: void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);
    parameters:
    - id: exporter
      type: System.ServiceModel.Description.MetadataExporter
      description: "<xref href=&quot;System.ServiceModel.Description.MetadataExporter&quot;> </xref> 내보내기 프로세스를 수정 하는 데 사용할 수 있는 합니다."
    - id: context
      type: System.ServiceModel.Description.PolicyConversionContext
      description: "<xref href=&quot;System.ServiceModel.Description.PolicyConversionContext&quot;> </xref> 를 사용자 지정 정책 어설션을 삽입에 사용할 수 있습니다."
  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: System.ServiceModel.Channels.BindingElement
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: CompositeDuplexBindingElement()
  nameWithType: CompositeDuplexBindingElement.CompositeDuplexBindingElement()
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.CompositeDuplexBindingElement()
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: BuildChannelFactory(BindingContext)
  nameWithType: CompositeDuplexBindingElement.BuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory(BindingContext)
- uid: System.ServiceModel.Channels.IChannelFactory{TChannel}
  parent: System.ServiceModel.Channels
  isExternal: true
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory<TChannel>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TChannel
    name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.BindingContext
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingContext
  nameWithType: BindingContext
  fullName: System.ServiceModel.Channels.BindingContext
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: BuildChannelListener(BindingContext)
  nameWithType: CompositeDuplexBindingElement.BuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener(BindingContext)
- uid: System.ServiceModel.Channels.IChannelListener`1
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelListener<TChannel>
  nameWithType: IChannelListener<TChannel>
  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: CanBuildChannelFactory(BindingContext)
  nameWithType: CompositeDuplexBindingElement.CanBuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory(BindingContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: CanBuildChannelListener(BindingContext)
  nameWithType: CompositeDuplexBindingElement.CanBuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener(BindingContext)
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: ClientBaseAddress
  nameWithType: CompositeDuplexBindingElement.ClientBaseAddress
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: Clone()
  nameWithType: CompositeDuplexBindingElement.Clone()
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone()
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: GetProperty(BindingContext)
  nameWithType: CompositeDuplexBindingElement.GetProperty(BindingContext)
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty(BindingContext)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  nameWithType: CompositeDuplexBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
- uid: System.ServiceModel.Description.MetadataExporter
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataExporter
  nameWithType: MetadataExporter
  fullName: System.ServiceModel.Description.MetadataExporter
- uid: System.ServiceModel.Description.PolicyConversionContext
  parent: System.ServiceModel.Description
  isExternal: false
  name: PolicyConversionContext
  nameWithType: PolicyConversionContext
  fullName: System.ServiceModel.Description.PolicyConversionContext
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor*
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: CompositeDuplexBindingElement
  nameWithType: CompositeDuplexBindingElement.CompositeDuplexBindingElement
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory<TChannel>*
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: BuildChannelFactory<TChannel>
  nameWithType: CompositeDuplexBindingElement.BuildChannelFactory<TChannel>
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener<TChannel>*
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: BuildChannelListener<TChannel>
  nameWithType: CompositeDuplexBindingElement.BuildChannelListener<TChannel>
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory<TChannel>*
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: CanBuildChannelFactory<TChannel>
  nameWithType: CompositeDuplexBindingElement.CanBuildChannelFactory<TChannel>
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener<TChannel>*
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: CanBuildChannelListener<TChannel>
  nameWithType: CompositeDuplexBindingElement.CanBuildChannelListener<TChannel>
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress*
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: ClientBaseAddress
  nameWithType: CompositeDuplexBindingElement.ClientBaseAddress
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone*
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: Clone
  nameWithType: CompositeDuplexBindingElement.Clone
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty<T>*
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: GetProperty<T>
  nameWithType: CompositeDuplexBindingElement.GetProperty<T>
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy
  nameWithType: CompositeDuplexBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy
