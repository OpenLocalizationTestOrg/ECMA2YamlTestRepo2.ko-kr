### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.BuildManager
  id: BuildManager
  children:
  - System.Web.Compilation.BuildManager.AddCompilationDependency(System.String)
  - System.Web.Compilation.BuildManager.AddReferencedAssembly(System.Reflection.Assembly)
  - System.Web.Compilation.BuildManager.BatchCompilationEnabled
  - System.Web.Compilation.BuildManager.CodeAssemblies
  - System.Web.Compilation.BuildManager.CreateCachedFile(System.String)
  - System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(System.String,System.Type)
  - System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String)
  - System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String,System.Boolean)
  - System.Web.Compilation.BuildManager.GetCompiledAssembly(System.String)
  - System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)
  - System.Web.Compilation.BuildManager.GetCompiledType(System.String)
  - System.Web.Compilation.BuildManager.GetGlobalAsaxType
  - System.Web.Compilation.BuildManager.GetObjectFactory(System.String,System.Boolean)
  - System.Web.Compilation.BuildManager.GetReferencedAssemblies
  - System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean)
  - System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean,System.Boolean)
  - System.Web.Compilation.BuildManager.GetVirtualPathDependencies(System.String)
  - System.Web.Compilation.BuildManager.IsPrecompiledApp
  - System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp
  - System.Web.Compilation.BuildManager.ReadCachedFile(System.String)
  - System.Web.Compilation.BuildManager.TargetFramework
  langs:
  - csharp
  name: BuildManager
  nameWithType: BuildManager
  fullName: System.Web.Compilation.BuildManager
  type: Class
  summary: "ASP.NET 응용 프로그램의 컴파일을 관리할 수 있도록 하는 메서드 집합을 제공 합니다."
  remarks: "BuildManager 클래스는 어셈블리 및 응용 프로그램에 대 한 페이지를 컴파일하는 과정을 관리 합니다. 클래스는 봉인된 클래스 이며 상속 될 수 없습니다.       BuildManager 컴파일된 어셈블리에 대 한 정보를 제공 하는 정적 멤버를 포함 합니다."
  syntax:
    content: public sealed class BuildManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.AddCompilationDependency(System.String)
  id: AddCompilationDependency(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: AddCompilationDependency(String)
  nameWithType: BuildManager.AddCompilationDependency(String)
  fullName: System.Web.Compilation.BuildManager.AddCompilationDependency(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "빌드 관리자 깨끗 한 빌드 필요한 지 확인 하는 데 사용 하는 종속성을 나타내는 문자열을 지정 합니다."
  remarks: "메서드를 호출 하는 동안 해야는 `Application_PreStartInit` 응용 프로그램의 단계입니다."
  syntax:
    content: public static void AddCompilationDependency (string dependency);
    parameters:
    - id: dependency
      type: System.String
      description: "종속성을 나타내는 문자열입니다."
  overload: System.Web.Compilation.BuildManager.AddCompilationDependency*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> dependency </code> 매개 변수는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "후 호출 되는 <xref uid=&quot;langword_csharp_Application_PreStartInit&quot; name=&quot;Application_PreStartInit&quot; href=&quot;&quot;> </xref> 응용 프로그램의 단계입니다."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.AddReferencedAssembly(System.Reflection.Assembly)
  id: AddReferencedAssembly(System.Reflection.Assembly)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: AddReferencedAssembly(Assembly)
  nameWithType: BuildManager.AddReferencedAssembly(Assembly)
  fullName: System.Web.Compilation.BuildManager.AddReferencedAssembly(Assembly)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "응용 프로그램의 참조 된 어셈블리 집합에 어셈블리를 추가합니다."
  remarks: "이 메서드를 호출 하는 것의 응용 프로그램 수준 Web.config 파일에 어셈블리를 추가 하는 것과 같습니다. 메서드를 호출 하는 동안 해야는 `Application_PreStartInit` 응용 프로그램의 단계입니다.       <xref:System.Web.Compilation.BuildManager.GetReferencedAssemblies%2A>메서드는 구성 파일에서 결정 하는 어셈블리와이 방법을 사용 하 여 추가 된 모든 어셈블리의 집합을 반환 합니다.</xref:System.Web.Compilation.BuildManager.GetReferencedAssemblies%2A>       이미 추가 된 어셈블리를 추가 하려고 하는 경우에 중복 항목이 무시 됩니다.       하기 전에이 메서드를 호출 해야 합니다는 `Application_Start` Global.asax 파일에는 이벤트가 발생 합니다."
  syntax:
    content: public static void AddReferencedAssembly (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "추가할 어셈블리를 지정 합니다."
  overload: System.Web.Compilation.BuildManager.AddReferencedAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> assembly </code> 매개 변수는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이거나 비어 있습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "하기 전에 메서드를 호출 하지 않았습니다 고 <xref uid=&quot;langword_csharp_Application_Start&quot; name=&quot;Application_Start&quot; href=&quot;&quot;> </xref> Global.asax 파일에는 이벤트가 발생 합니다."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.BatchCompilationEnabled
  id: BatchCompilationEnabled
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: BatchCompilationEnabled
  nameWithType: BuildManager.BatchCompilationEnabled
  fullName: System.Web.Compilation.BuildManager.BatchCompilationEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "일괄 컴파일을 사용 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "이 속성을 사용 하면 일괄 컴파일의 켜기 / 끄기를 프로그래밍 방식으로 합니다. 해당 하는 `batch` 특성의는 `compilation` Web.config 파일의 요소입니다. 자세한 내용은 참조 [compilation 요소 (ASP.NET 설정 스키마)](http://msdn.microsoft.com/en-us/7c319582-074a-4d2a-a787-03b9d4541c12)합니다.       에 속성을 설정할 수는 `PreApplicationStart` 메서드. 에 대 한 자세한 내용은 `PreApplicationStart` 메서드를 참조 <xref:System.Web.PreApplicationStartMethodAttribute>.</xref:System.Web.PreApplicationStartMethodAttribute>"
  syntax:
    content: public static Nullable<bool> BatchCompilationEnabled { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>일괄 처리 컴파일이 항상 사용 하도록 설정 하는 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 일괄 컴파일을 사용 하도록 설정 하지는 경우 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이면 컴파일 설정을 구성 파일에서 결정 됩니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Compilation.BuildManager.BatchCompilationEnabled*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "는 속성이 설정 되지 않은 <xref uid=&quot;langword_csharp_PreApplicationStart&quot; name=&quot;PreApplicationStart&quot; href=&quot;&quot;> </xref> 메서드."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.CodeAssemblies
  id: CodeAssemblies
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: CodeAssemblies
  nameWithType: BuildManager.CodeAssemblies
  fullName: System.Web.Compilation.BuildManager.CodeAssemblies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "App_Code 디렉터리에서 빌드한 어셈블리의 목록을 가져옵니다."
  syntax:
    content: public static System.Collections.IList CodeAssemblies { get; }
    return:
      type: System.Collections.IList
      description: "<xref:System.Collections.IList>App_Code 디렉터리에서 빌드한 어셈블리를 포함 하는 컬렉션.</xref:System.Collections.IList>"
  overload: System.Web.Compilation.BuildManager.CodeAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.CreateCachedFile(System.String)
  id: CreateCachedFile(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: CreateCachedFile(String)
  nameWithType: BuildManager.CreateCachedFile(String)
  fullName: System.Web.Compilation.BuildManager.CreateCachedFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "캐시 된 파일을 만듭니다."
  remarks: "이 메서드는 및 <xref:System.Web.Compilation.BuildManager.ReadCachedFile%2A>메서드를 통해 응용 프로그램 도메인 컴퓨터를 다시 시작할 부분 신뢰 환경에서 지속 되는 캐싱을 수행할 수 있습니다.</xref:System.Web.Compilation.BuildManager.ReadCachedFile%2A> 컨트롤러 조회 결과 캐시 하도록 MVC 프레임 워크에서 사용 됩니다.       데이터를 캐시 하려면에 쓸는 <xref:System.IO.Stream>이 메서드에 의해 반환 되는 개체입니다.</xref:System.IO.Stream>"
  syntax:
    content: public static System.IO.Stream CreateCachedFile (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "만들 파일의 이름입니다."
    return:
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>새 파일에 대 한 개체입니다.</xref:System.IO.Stream>"
  overload: System.Web.Compilation.BuildManager.CreateCachedFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(System.String,System.Type)
  id: CreateInstanceFromVirtualPath(System.String,System.Type)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: CreateInstanceFromVirtualPath(String,Type)
  nameWithType: BuildManager.CreateInstanceFromVirtualPath(String,Type)
  fullName: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(String,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "지정 된 가상 경로, 파일을 처리 하 고 결과의 인스턴스를 만듭니다."
  remarks: "CreateInstanceFromVirtualPath 방법은 컴파일된 정규식과 비 컴파일 페이지에 대 한 작동합니다."
  syntax:
    content: public static object CreateInstanceFromVirtualPath (string virtualPath, Type requiredBaseType);
    parameters:
    - id: virtualPath
      type: System.String
      description: "인스턴스를 만들려는 파일의 가상 경로입니다."
    - id: requiredBaseType
      type: System.Type
      description: "만들 개체를 정의 하는 기본 형식입니다."
    return:
      type: System.Object
      description: "<xref:System.Object>처리 된 파일의 인스턴스를 나타내는.</xref:System.Object>"
  overload: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String)
  id: GetCachedBuildDependencySet(System.Web.HttpContext,System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetCachedBuildDependencySet(HttpContext,String)
  nameWithType: BuildManager.GetCachedBuildDependencySet(HttpContext,String)
  fullName: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(HttpContext,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ASP.NET 캐시에 있는 경우 가상 경로 대해 설정 하는 빌드 종속성을 반환 합니다."
  syntax:
    content: public static System.Web.Compilation.BuildDependencySet GetCachedBuildDependencySet (System.Web.HttpContext context, string virtualPath);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "요청 컨텍스트입니다."
    - id: virtualPath
      type: System.String
      description: "빌드 종속성 집합을 결정 가상 경로입니다."
    return:
      type: System.Web.Compilation.BuildDependencySet
      description: "A <xref href=&quot;System.Web.Compilation.BuildDependencySet&quot;> </xref> 캐시에 저장 된 개체 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 경우는 <xref href=&quot;System.Web.Compilation.BuildDependencySet&quot;> </xref> 캐시에서 개체를 검색할 수 없습니다."
  overload: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String,System.Boolean)
  id: GetCachedBuildDependencySet(System.Web.HttpContext,System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetCachedBuildDependencySet(HttpContext,String,Boolean)
  nameWithType: BuildManager.GetCachedBuildDependencySet(HttpContext,String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(HttpContext,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "콘텐츠를 현재 없는 경우에 ASP.NET 캐시에 있는 경우 가상 경로 대해 설정 하는 빌드 종속성을 반환 합니다."
  remarks: "경우는 `ensureIsUpToDate` 매개 변수 값으로 설정 되어 `true`, 처럼 작동 하며 GetCachedBuildDependencySet 메서드 오버 로드는 <xref:System.Web.Compilation.BuildManager.GetCachedBuildDependencySet%2A?displayProperty=fullName>메서드 오버 로드.</xref:System.Web.Compilation.BuildManager.GetCachedBuildDependencySet%2A?displayProperty=fullName> 두 오버 로드 집합이 있는 경우 현재 빌드 종속성을 반환 하지 않으면 반환 `null`합니다.       그러나 GetCachedBuildDependencySet 메서드 오버 로드를 사용할 수 있는 모든 빌드 종속성 집합을 반환 하는 오래 된 것도는 옵션을 포함합니다. 경우는 `ensureIsUpToDate` 매개 변수 값으로 설정 되어 `false`, 메서드는 사용 가능한 빌드 종속성 집합을 반환 합니다."
  syntax:
    content: public static System.Web.Compilation.BuildDependencySet GetCachedBuildDependencySet (System.Web.HttpContext context, string virtualPath, bool ensureIsUpToDate);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "요청 컨텍스트입니다."
    - id: virtualPath
      type: System.String
      description: "빌드 종속성 집합을 결정 가상 경로입니다."
    - id: ensureIsUpToDate
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>최신 빌드 종속성을 지정 하려면 집합 되돌려야, 또는 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 최신이 경우에 사용할 수 있는 빌드 종속성 집합 반환 되어야 함을, 나타냅니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Web.Compilation.BuildDependencySet
      description: "A <xref href=&quot;System.Web.Compilation.BuildDependencySet&quot;> </xref> 캐시에 저장 된 개체 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 경우는 <xref href=&quot;System.Web.Compilation.BuildDependencySet&quot;> </xref> 캐시에서 개체를 검색할 수 없습니다."
  overload: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetCompiledAssembly(System.String)
  id: GetCompiledAssembly(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetCompiledAssembly(String)
  nameWithType: BuildManager.GetCompiledAssembly(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledAssembly(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "지정된 된 가상 경로 사용 하 여 어셈블리에 파일을 컴파일합니다."
  syntax:
    content: public static System.Reflection.Assembly GetCompiledAssembly (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "어셈블리에 대 한 가상 경로입니다."
    return:
      type: System.Reflection.Assembly
      description: "<xref:System.Reflection.Assembly>메모리 또는 디스크에 캐시 되 지정된 가상 경로에서 컴파일되는 개체입니다.</xref:System.Reflection.Assembly>"
  overload: System.Web.Compilation.BuildManager.GetCompiledAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)
  id: GetCompiledCustomString(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetCompiledCustomString(String)
  nameWithType: BuildManager.GetCompiledCustomString(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledCustomString(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "파일을 지정 된 가상 경로 컴파일하고 빌드 공급자가 캐시에 유지 하는 사용자 지정 문자열을 반환 합니다."
  syntax:
    content: public static string GetCompiledCustomString (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "빌드할 파일의 가상 경로입니다."
    return:
      type: System.String
      description: "반환 되는 문자열은 <xref:System.Web.Compilation.BuildProvider.GetCustomString*>디스크 또는 메모리에 캐시 되는 메서드입니다.</xref:System.Web.Compilation.BuildProvider.GetCustomString*>"
  overload: System.Web.Compilation.BuildManager.GetCompiledCustomString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetCompiledType(System.String)
  id: GetCompiledType(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetCompiledType(String)
  nameWithType: BuildManager.GetCompiledType(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledType(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "파일을 지정 된 가상 경로 컴파일하고 컴파일된 형식을 반환 합니다."
  syntax:
    content: public static Type GetCompiledType (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "형식으로 만들려는 가상 경로입니다."
    return:
      type: System.Type
      description: "<xref:System.Type>가상 경로에서 생성 된 형식을 나타내는 개체</xref:System.Type> 를"
  overload: System.Web.Compilation.BuildManager.GetCompiledType*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "가상 경로 컴파일할 오류가 발생 했습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetGlobalAsaxType
  id: GetGlobalAsaxType
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetGlobalAsaxType()
  nameWithType: BuildManager.GetGlobalAsaxType()
  fullName: System.Web.Compilation.BuildManager.GetGlobalAsaxType()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Global.asax 파일에 대 한 컴파일된 형식을 나타내는 개체를 가져옵니다."
  remarks: "Global.asax 파일 컴파일 전에이 메서드를 호출 하면 예외가 throw 됩니다."
  syntax:
    content: public static Type GetGlobalAsaxType ();
    parameters: []
    return:
      type: System.Type
      description: "Global.asax 파일에 대 한 컴파일된 형식을 나타내는 개체입니다."
  overload: System.Web.Compilation.BuildManager.GetGlobalAsaxType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Global.asax 페이지 컴파일 전에이 메서드를 호출 하려고 했습니다."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetObjectFactory(System.String,System.Boolean)
  id: GetObjectFactory(System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetObjectFactory(String,Boolean)
  nameWithType: BuildManager.GetObjectFactory(String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetObjectFactory(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "지정된 된 가상 경로 대 한 개체 팩터리를 가져옵니다."
  remarks: "이 메서드는 가상 경로 컴파일할 때 형식을 생성할 수 있도록 하는 개체를 반환 합니다. 웹 사이트를 미리 컴파일된 여부에 관계 없이 개체를 반환 합니다."
  syntax:
    content: public static System.Web.Util.IWebObjectFactory GetObjectFactory (string virtualPath, bool throwIfNotFound);
    parameters:
    - id: virtualPath
      type: System.String
      description: "가상 경로입니다."
    - id: throwIfNotFound
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>가상 경로가 없습니다; 오류를 throw 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 가상 경로가 존재 하지 않을 경우 및 `throwIfNotFound` 은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>,이 메서드가 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Web.Util.IWebObjectFactory
      description: "개체 팩터리입니다."
  overload: System.Web.Compilation.BuildManager.GetObjectFactory*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "가상 경로가 존재 하지 않습니다.       -또는-이 메서드가 호출 될 때 더 높은 수준의 예외가 이미 존재 합니다.       -또는-컴파일 프로세스 최상위 파일을 빌드하는 동안이 메서드를 호출 했습니다.       -또는-미리 컴파일된 응용 프로그램 및 가상 경로 캐시에 없습니다.       -또는-순환 참조가 발견 되었습니다."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetReferencedAssemblies
  id: GetReferencedAssemblies
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetReferencedAssemblies()
  nameWithType: BuildManager.GetReferencedAssemblies()
  fullName: System.Web.Compilation.BuildManager.GetReferencedAssemblies()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "모든 페이지 컴파일에서 참조 해야 하는 어셈블리 참조의 목록을 반환 합니다."
  remarks: "GetReferencedAssemblies 메서드에서 반환 되는 어셈블리의 컬렉션에는 Web.config 파일, App_Code 디렉터리에 사용자 지정 코드에서 빌드한 어셈블리 및 다른 최상위 폴더에 어셈블리의 요소에 지정 된 어셈블리에 포함 됩니다.       GetReferencedAssemblies는.NET Framework 버전 3.5에서에서 도입 되었습니다.  자세한 내용은 참조 [.NET Framework 버전 및 종속성](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public static System.Collections.ICollection GetReferencedAssemblies ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>어셈블리 참조의 컬렉션입니다.</xref:System.Collections.ICollection>"
  overload: System.Web.Compilation.BuildManager.GetReferencedAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean)
  id: GetType(System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetType(String,Boolean)
  nameWithType: BuildManager.GetType(String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetType(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "최상위 수준 어셈블리 또는 구성에서 정의 된 어셈블리에서 형식을 찾고 하 고 필요에 따라 실패 한 경우 예외를 throw 합니다."
  remarks: "최상위 어셈블리를 Global.asax 파일 또는 App_GlobalResources, App_WebReferences, App_Code, 또는 App_Browsers 디렉터리에 있는 파일을 참조 합니다."
  syntax:
    content: public static Type GetType (string typeName, bool throwOnError);
    parameters:
    - id: typeName
      type: System.String
      description: "형식의 이름입니다."
    - id: throwOnError
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>예외를 throw 하는 경우는 <xref:System.Type>, 형식 이름에 대해 생성 되지 않았으면 개체 일 수 없습니다 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
    return:
      type: System.Type
      description: "A <xref:System.Type>나타내는 요청 된 개체 <code> typeName </code> 매개 변수.</xref:System.Type>"
  overload: System.Web.Compilation.BuildManager.GetType*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>typeName</code> is invalid.  \n  \n \\- or -  \n  \n <code>typeName</code> is ambiguous.  \n  \n \\- or -  \n  \n <code>typeName</code> could not be found, and <code>throwOnError</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean,System.Boolean)
  id: GetType(System.String,System.Boolean,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetType(String,Boolean,Boolean)
  nameWithType: BuildManager.GetType(String,Boolean,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetType(String,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "최상위 수준 어셈블리 또는 대/소문자 구분 검색을 사용 하 고 필요에 따라 실패 한 경우는 예외를 throw 하 여 구성에서 정의 된 어셈블리에서 형식을 찾습니다."
  remarks: "최상위 어셈블리를 Global.asax 파일 또는 App_GlobalResources, App_WebReferences, App_Code, 또는 App_Browsers 디렉터리에 있는 파일을 참조 합니다."
  syntax:
    content: public static Type GetType (string typeName, bool throwOnError, bool ignoreCase);
    parameters:
    - id: typeName
      type: System.String
      description: "형식의 이름입니다."
    - id: throwOnError
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>예외를 throw 하는 경우는 <xref:System.Type>, 형식 이름에 대해 생성 되지 않았으면 안 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 `typeName` 고, 그러지 않으면 대/소문자 구분 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Type
      description: "A <xref:System.Type>나타내는 요청 된 개체 <code> typeName </code> 매개 변수.</xref:System.Type>"
  overload: System.Web.Compilation.BuildManager.GetType*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>typeName</code> is invalid.  \n  \n \\- or -  \n  \n <code>typeName</code> is ambiguous.  \n  \n \\- or -  \n  \n <code>typeName</code> could not be found, and <code>throwOnError</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetVirtualPathDependencies(System.String)
  id: GetVirtualPathDependencies(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetVirtualPathDependencies(String)
  nameWithType: BuildManager.GetVirtualPathDependencies(String)
  fullName: System.Web.Compilation.BuildManager.GetVirtualPathDependencies(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "지정된 된 가상 경로 대 한 가상 경로 종속성의 컬렉션을 제공합니다."
  syntax:
    content: public static System.Collections.ICollection GetVirtualPathDependencies (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "종속성을 결정 하는 데 사용 되는 가상 경로입니다."
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>가상 경로 대 한 종속성을 캐시 하는 가상 경로 의해 표시 되는 파일의 컬렉션</xref:System.Collections.ICollection>"
  overload: System.Web.Compilation.BuildManager.GetVirtualPathDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.IsPrecompiledApp
  id: IsPrecompiledApp
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: IsPrecompiledApp
  nameWithType: BuildManager.IsPrecompiledApp
  fullName: System.Web.Compilation.BuildManager.IsPrecompiledApp
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "응용 프로그램은 미리 컴파일되어 있는지 여부를 지정 하는 값을 가져옵니다."
  syntax:
    content: public static bool IsPrecompiledApp { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>응용 프로그램이 있는 경우 미리 컴파일된; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Compilation.BuildManager.IsPrecompiledApp*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp
  id: IsUpdatablePrecompiledApp
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: IsUpdatablePrecompiledApp
  nameWithType: BuildManager.IsUpdatablePrecompiledApp
  fullName: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "여부를 응용 프로그램 미리 컴파일된 업데이트할 수 있는 것을 지정 하는 값을 가져옵니다."
  syntax:
    content: public static bool IsUpdatablePrecompiledApp { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>응용 프로그램이 업데이트 가능한;으로 미리 컴파일된 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.ReadCachedFile(System.String)
  id: ReadCachedFile(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: ReadCachedFile(String)
  nameWithType: BuildManager.ReadCachedFile(String)
  fullName: System.Web.Compilation.BuildManager.ReadCachedFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "캐시 된 파일을 읽습니다."
  remarks: "이 메서드는 및 <xref:System.Web.Compilation.BuildManager.CreateCachedFile%2A>메서드를 통해 응용 프로그램 도메인 컴퓨터를 다시 시작할 부분 신뢰 환경에서 지속 되는 캐싱을 수행할 수 있습니다.</xref:System.Web.Compilation.BuildManager.CreateCachedFile%2A> 컨트롤러 조회 결과 캐시 하도록 MVC 프레임 워크에서 사용 됩니다.       캐시 된 데이터를 검색 하려면에서 읽은 <xref:System.IO.Stream>이 메서드에 의해 반환 되는 개체입니다.</xref:System.IO.Stream>"
  syntax:
    content: public static System.IO.Stream ReadCachedFile (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "읽을 파일의 이름입니다."
    return:
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>파일에 대 한 개체 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 파일이 존재 하지 않는 경우.</xref:System.IO.Stream>"
  overload: System.Web.Compilation.BuildManager.ReadCachedFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.TargetFramework
  id: TargetFramework
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: TargetFramework
  nameWithType: BuildManager.TargetFramework
  fullName: System.Web.Compilation.BuildManager.TargetFramework
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "현재 웹 사이트에 대 한.NET Framework의 대상 버전을 가져옵니다."
  remarks: "이 속성의 최신 버전을 사용 하면 ASP.NET 멀티 타기 팅 기능을 지 원하는 [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] .NET Framework의 이전 버전으로 실행 하는 응용 프로그램을 개발할 수 있습니다. 빌드 공급자 공급자의.NET Framework 대상된 버전에 해당 하는 코드를 생성 되도록 하려면이 속성을 사용할 수 있습니다. 예를 들어 있는지 여부를 웹 사이트 대상에 따라 서로 다른 코드를 생성 하려면 수는 [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)] 또는 [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]합니다. 다중 대상 지정 하는 방법에 대 한 자세한 내용은 참조 [ASP.NET 웹 프로젝트에.NET Framework 멀티 타기 팅](~/add/includes/ajax-current-ext-md.md)합니다.       웹 사이트에 Web.config 파일을 찾을 수 없는 경우 ASP.NET 대상 프레임 워크 버전 사이트에서 실행 되는 IIS 응용 프로그램 풀과 연결 된 버전 이라고 가정 합니다. Visual Studio에서 실행 되는 파일 시스템 웹 사이트에 대 한 기본 프레임 워크 버전은 현재 버전의는 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]합니다.       Web.config 파일에는 웹 사이트에, ASP.NET Web.config 파일을 검사 하 여 대상 프레임 워크를 결정 합니다.      ## 대상으로 하는.NET Framework 2.0 웹 응용 프로그램을 대상으로 하는 웹 사이트는 [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] 마치 것 처럼 대상 컴파일되는 [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]합니다. 빌드 프로세스를 구분 하지 않습니다는 [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] 및 [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)] 이러한 버전 중 하나를 대상 하는 경우 Web.config 파일 컴파일러 버전 또는 대상 프레임 워크를 인식 하지 못하기 때문에 있습니다. (에 대 한는 [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)], Web.config 파일에서 컴파일러 버전을 지정 하 고는 [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], Web.config 파일은 대상 프레임 워크를 지정 합니다.) 따라서에 대 한 웹 응용 프로그램 대상으로 하는 [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)],이 속성은 반환 나타내는 대상 프레임 워크 모니커는 [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]합니다.       이 일반적으로 발생 하지 않습니다 문제입니다. [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]에 대 한 참조를 만들지 못하게 하면 [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)] 기능을 대상으로 하는 프로젝트에는 [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]합니다. 예를 들어 [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] 대상으로 하는 프로젝트에서 WCF 서비스에 대 한 항목 템플릿을 제공 하지 않습니다 [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]WCF 버전부터 때문에 [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)] 및와 호환 되지 않습니다는 [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]합니다.       웹 사이트에서 배포 하려는 경우는 [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] 런 타인 환경 하 고 사용 하 여 도구 이외의 [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] 만 호환 되는 참조 기능에 [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)], 오류 또는 경고를 생성 하지 않고 프로젝트 빌드 수 있습니다. 그러나 통해 응용 프로그램에서 웹 사이트를 실행할 때 오류를 생성할 수 있습니다는 [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]합니다."
  syntax:
    content: public static System.Runtime.Versioning.FrameworkName TargetFramework { get; }
    return:
      type: System.Runtime.Versioning.FrameworkName
      description: "현재 웹 사이트에 대 한.NET Framework의 대상 버전입니다."
  overload: System.Web.Compilation.BuildManager.TargetFramework*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Compilation.BuildManager.AddCompilationDependency(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: AddCompilationDependency(String)
  nameWithType: BuildManager.AddCompilationDependency(String)
  fullName: System.Web.Compilation.BuildManager.AddCompilationDependency(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.BuildManager.AddReferencedAssembly(System.Reflection.Assembly)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: AddReferencedAssembly(Assembly)
  nameWithType: BuildManager.AddReferencedAssembly(Assembly)
  fullName: System.Web.Compilation.BuildManager.AddReferencedAssembly(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Web.Compilation.BuildManager.BatchCompilationEnabled
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: BatchCompilationEnabled
  nameWithType: BuildManager.BatchCompilationEnabled
  fullName: System.Web.Compilation.BuildManager.BatchCompilationEnabled
- uid: System.Nullable{System.Boolean}
  parent: System
  isExternal: true
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.Compilation.BuildManager.CodeAssemblies
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CodeAssemblies
  nameWithType: BuildManager.CodeAssemblies
  fullName: System.Web.Compilation.BuildManager.CodeAssemblies
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Web.Compilation.BuildManager.CreateCachedFile(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CreateCachedFile(String)
  nameWithType: BuildManager.CreateCachedFile(String)
  fullName: System.Web.Compilation.BuildManager.CreateCachedFile(String)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(System.String,System.Type)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CreateInstanceFromVirtualPath(String,Type)
  nameWithType: BuildManager.CreateInstanceFromVirtualPath(String,Type)
  fullName: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(String,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCachedBuildDependencySet(HttpContext,String)
  nameWithType: BuildManager.GetCachedBuildDependencySet(HttpContext,String)
  fullName: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(HttpContext,String)
- uid: System.Web.Compilation.BuildDependencySet
  parent: System.Web.Compilation
  isExternal: false
  name: BuildDependencySet
  nameWithType: BuildDependencySet
  fullName: System.Web.Compilation.BuildDependencySet
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCachedBuildDependencySet(HttpContext,String,Boolean)
  nameWithType: BuildManager.GetCachedBuildDependencySet(HttpContext,String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(HttpContext,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Compilation.BuildManager.GetCompiledAssembly(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledAssembly(String)
  nameWithType: BuildManager.GetCompiledAssembly(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledAssembly(String)
- uid: System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledCustomString(String)
  nameWithType: BuildManager.GetCompiledCustomString(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledCustomString(String)
- uid: System.Web.Compilation.BuildManager.GetCompiledType(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledType(String)
  nameWithType: BuildManager.GetCompiledType(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledType(String)
- uid: System.Web.Compilation.BuildManager.GetGlobalAsaxType
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetGlobalAsaxType()
  nameWithType: BuildManager.GetGlobalAsaxType()
  fullName: System.Web.Compilation.BuildManager.GetGlobalAsaxType()
- uid: System.Web.Compilation.BuildManager.GetObjectFactory(System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetObjectFactory(String,Boolean)
  nameWithType: BuildManager.GetObjectFactory(String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetObjectFactory(String,Boolean)
- uid: System.Web.Util.IWebObjectFactory
  parent: System.Web.Util
  isExternal: false
  name: IWebObjectFactory
  nameWithType: IWebObjectFactory
  fullName: System.Web.Util.IWebObjectFactory
- uid: System.Web.Compilation.BuildManager.GetReferencedAssemblies
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetReferencedAssemblies()
  nameWithType: BuildManager.GetReferencedAssemblies()
  fullName: System.Web.Compilation.BuildManager.GetReferencedAssemblies()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetType(String,Boolean)
  nameWithType: BuildManager.GetType(String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetType(String,Boolean)
- uid: System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetType(String,Boolean,Boolean)
  nameWithType: BuildManager.GetType(String,Boolean,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetType(String,Boolean,Boolean)
- uid: System.Web.Compilation.BuildManager.GetVirtualPathDependencies(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetVirtualPathDependencies(String)
  nameWithType: BuildManager.GetVirtualPathDependencies(String)
  fullName: System.Web.Compilation.BuildManager.GetVirtualPathDependencies(String)
- uid: System.Web.Compilation.BuildManager.IsPrecompiledApp
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: IsPrecompiledApp
  nameWithType: BuildManager.IsPrecompiledApp
  fullName: System.Web.Compilation.BuildManager.IsPrecompiledApp
- uid: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: IsUpdatablePrecompiledApp
  nameWithType: BuildManager.IsUpdatablePrecompiledApp
  fullName: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp
- uid: System.Web.Compilation.BuildManager.ReadCachedFile(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: ReadCachedFile(String)
  nameWithType: BuildManager.ReadCachedFile(String)
  fullName: System.Web.Compilation.BuildManager.ReadCachedFile(String)
- uid: System.Web.Compilation.BuildManager.TargetFramework
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: TargetFramework
  nameWithType: BuildManager.TargetFramework
  fullName: System.Web.Compilation.BuildManager.TargetFramework
- uid: System.Runtime.Versioning.FrameworkName
  parent: System.Runtime.Versioning
  isExternal: true
  name: FrameworkName
  nameWithType: FrameworkName
  fullName: System.Runtime.Versioning.FrameworkName
- uid: System.Web.Compilation.BuildManager.AddCompilationDependency*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: AddCompilationDependency
  nameWithType: BuildManager.AddCompilationDependency
- uid: System.Web.Compilation.BuildManager.AddReferencedAssembly*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: AddReferencedAssembly
  nameWithType: BuildManager.AddReferencedAssembly
- uid: System.Web.Compilation.BuildManager.BatchCompilationEnabled*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: BatchCompilationEnabled
  nameWithType: BuildManager.BatchCompilationEnabled
- uid: System.Web.Compilation.BuildManager.CodeAssemblies*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CodeAssemblies
  nameWithType: BuildManager.CodeAssemblies
- uid: System.Web.Compilation.BuildManager.CreateCachedFile*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CreateCachedFile
  nameWithType: BuildManager.CreateCachedFile
- uid: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CreateInstanceFromVirtualPath
  nameWithType: BuildManager.CreateInstanceFromVirtualPath
- uid: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCachedBuildDependencySet
  nameWithType: BuildManager.GetCachedBuildDependencySet
- uid: System.Web.Compilation.BuildManager.GetCompiledAssembly*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledAssembly
  nameWithType: BuildManager.GetCompiledAssembly
- uid: System.Web.Compilation.BuildManager.GetCompiledCustomString*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledCustomString
  nameWithType: BuildManager.GetCompiledCustomString
- uid: System.Web.Compilation.BuildManager.GetCompiledType*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledType
  nameWithType: BuildManager.GetCompiledType
- uid: System.Web.Compilation.BuildManager.GetGlobalAsaxType*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetGlobalAsaxType
  nameWithType: BuildManager.GetGlobalAsaxType
- uid: System.Web.Compilation.BuildManager.GetObjectFactory*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetObjectFactory
  nameWithType: BuildManager.GetObjectFactory
- uid: System.Web.Compilation.BuildManager.GetReferencedAssemblies*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetReferencedAssemblies
  nameWithType: BuildManager.GetReferencedAssemblies
- uid: System.Web.Compilation.BuildManager.GetType*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetType
  nameWithType: BuildManager.GetType
- uid: System.Web.Compilation.BuildManager.GetVirtualPathDependencies*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetVirtualPathDependencies
  nameWithType: BuildManager.GetVirtualPathDependencies
- uid: System.Web.Compilation.BuildManager.IsPrecompiledApp*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: IsPrecompiledApp
  nameWithType: BuildManager.IsPrecompiledApp
- uid: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: IsUpdatablePrecompiledApp
  nameWithType: BuildManager.IsUpdatablePrecompiledApp
- uid: System.Web.Compilation.BuildManager.ReadCachedFile*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: ReadCachedFile
  nameWithType: BuildManager.ReadCachedFile
- uid: System.Web.Compilation.BuildManager.TargetFramework*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: TargetFramework
  nameWithType: BuildManager.TargetFramework
