### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType
  id: AuthorizedType
  children:
  - System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor
  - System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly
  - System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized
  - System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace
  - System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression
  - System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName
  langs:
  - csharp
  name: AuthorizedType
  nameWithType: AuthorizedType
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType
  type: Class
  summary: "허용 되거나 워크플로 컴파일러로 컴파일된 워크플로에서 허용 하는 형식의 집합을 나타냅니다 (값에 따라는 <xref:System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized*>속성).</xref:System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized*> 이 클래스는 상속 될 수 없습니다."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]워크플로 컴파일의 유효성 검사 단계 동안 문서나 관련 규칙 파일이 권한이 부여 된 형식 목록에 없는.NET Framework 형식의 직접 참조 하는 경우 워크플로 소스 문서가 거부 됩니다. 권한이 부여 된 형식 목록 XML 문서는 각 항목을 나타냅니다는 `Assembly`, `Namespace`, `TypeName`, 및는 권한이 부여 된 {`true`|`false`} 표시기입니다. 이 클래스는 목록에 대 한 항목에 해당합니다. 또한 포함 하거나 전체 네임 스페이스를 제외 하려면 와일드 카드 문자 지정이 가능 note 합니다. 예를 들어,를 사용 하 여 `Type=”System.*”` 에 모든 형식을 포함 <xref:System>, 하위 네임 스페이스에 포함 된 형식을 포함 하 여.</xref:System>       사용 권한이 부여 된 형식 목록으로 제어 됩니다는 <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompiler>옵션 `&quot;/checktypes&quot;` </xref:System.Workflow.ComponentModel.Compiler.WorkflowCompiler>"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Xml.Serialization.XmlType("authorizedType")]

      public sealed class AuthorizedType
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor
  id: '#ctor'
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  langs:
  - csharp
  name: AuthorizedType()
  nameWithType: AuthorizedType.AuthorizedType()
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.AuthorizedType()
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Workflow.ComponentModel.Compiler.AuthorizedType&quot;> </xref> 클래스입니다."
  syntax:
    content: public AuthorizedType ();
    parameters: []
  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly
  id: Assembly
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  langs:
  - csharp
  name: Assembly
  nameWithType: AuthorizedType.Assembly
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "이 클래스로 나타낸 형식을 포함 하는 어셈블리의 이름을 가져오거나 설정 합니다."
  syntax:
    content: public string Assembly { get; set; }
    return:
      type: System.String
      description: "어셈블리의 이름입니다."
  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized
  id: Authorized
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  langs:
  - csharp
  name: Authorized
  nameWithType: AuthorizedType.Authorized
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "이 클래스에서 지정한 형식이 워크플로 컴파일에 참여할 권한이 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public string Authorized { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>워크플로 컴파일에 참여할 권한이 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace
  id: Namespace
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  langs:
  - csharp
  name: Namespace
  nameWithType: AuthorizedType.Namespace
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "이 인스턴스에서 나타내는 형식의 네임 스페이스의 이름을 가져오거나 설정 합니다."
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "네임 스페이스의 이름에서 <xref:System.Type>이 인스턴스로 나타낸.</xref:System.Type>"
  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression
  id: RegularExpression
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  langs:
  - csharp
  name: RegularExpression
  nameWithType: AuthorizedType.RegularExpression
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "가져옵니다는 <xref:System.Text.RegularExpressions.Regex>이 인스턴스와 연결 된.</xref:System.Text.RegularExpressions.Regex>"
  remarks: "없기 때문에 와일드 카드 명명이 지원 되는 암시적으로 만든 <xref:System.Text.RegularExpressions.Regex>와일드 카드 명명이 사용 하는 경우.</xref:System.Text.RegularExpressions.Regex> 이 속성에 직접 액세스할 <xref:System.Text.RegularExpressions.Regex>.</xref:System.Text.RegularExpressions.Regex>"
  syntax:
    content: public System.Text.RegularExpressions.Regex RegularExpression { get; }
    return:
      type: System.Text.RegularExpressions.Regex
      description: "이 인스턴스와 연결 된 정규식입니다."
  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName
  id: TypeName
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  langs:
  - csharp
  name: TypeName
  nameWithType: AuthorizedType.TypeName
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "이 인스턴스에 의해 표시 되는 형식의 이름을 가져오거나 설정 합니다."
  syntax:
    content: public string TypeName { get; set; }
    return:
      type: System.String
      description: "이름에서 <xref:System.Type>되 고이 인스턴스가 나타내는.</xref:System.Type>"
  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: AuthorizedType()
  nameWithType: AuthorizedType.AuthorizedType()
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.AuthorizedType()
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: Assembly
  nameWithType: AuthorizedType.Assembly
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: Authorized
  nameWithType: AuthorizedType.Authorized
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: Namespace
  nameWithType: AuthorizedType.Namespace
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: RegularExpression
  nameWithType: AuthorizedType.RegularExpression
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression
- uid: System.Text.RegularExpressions.Regex
  parent: System.Text.RegularExpressions
  isExternal: true
  name: Regex
  nameWithType: Regex
  fullName: System.Text.RegularExpressions.Regex
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: TypeName
  nameWithType: AuthorizedType.TypeName
  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor*
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: AuthorizedType
  nameWithType: AuthorizedType.AuthorizedType
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly*
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: Assembly
  nameWithType: AuthorizedType.Assembly
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized*
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: Authorized
  nameWithType: AuthorizedType.Authorized
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace*
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: Namespace
  nameWithType: AuthorizedType.Namespace
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression*
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: RegularExpression
  nameWithType: AuthorizedType.RegularExpression
- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName*
  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType
  isExternal: false
  name: TypeName
  nameWithType: AuthorizedType.TypeName
