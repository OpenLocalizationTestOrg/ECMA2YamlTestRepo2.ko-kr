### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.BoundColumn
  id: BoundColumn
  children:
  - System.Web.UI.WebControls.BoundColumn.#ctor
  - System.Web.UI.WebControls.BoundColumn.DataField
  - System.Web.UI.WebControls.BoundColumn.DataFormatString
  - System.Web.UI.WebControls.BoundColumn.FormatDataValue(System.Object)
  - System.Web.UI.WebControls.BoundColumn.Initialize
  - System.Web.UI.WebControls.BoundColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  - System.Web.UI.WebControls.BoundColumn.ReadOnly
  - System.Web.UI.WebControls.BoundColumn.thisExpr
  langs:
  - csharp
  name: BoundColumn
  nameWithType: BoundColumn
  fullName: System.Web.UI.WebControls.BoundColumn
  type: Class
  summary: "에 대 한 열 유형을 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 데이터 원본의 필드에 바인딩되는 컨트롤입니다."
  remarks: "BoundColumn 열의 형식에 사용 하 여 한 <xref:System.Web.UI.WebControls.DataGrid>컨트롤을 데이터 원본에는 필드의 내용을 표시 합니다.</xref:System.Web.UI.WebControls.DataGrid> 값은 단일 열에 나열 됩니다. 필드는 BoundColumn에 연결 되므로 데이터 원본 내에서 업데이트의 해당 셀에 반영 됩니다는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid>      > [!NOTE] >이 열 형식은 대 한 기본값은 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid>       이 열의 모양을 제어를의 스타일 속성을 사용 하려면는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid>      > [!CAUTION] > 텍스트 HTML는 BoundColumn에 표시 되기 전에 인코딩되지 않습니다. 따라서 텍스트에 HTML 태그 내에서 스크립트를 포함 시킬 수 있습니다. 값이이 열에 대 한 사용자 입력에 연결 하는 경우에 보안 취약점을 줄이기 위해 값을 확인 해야 합니다."
  example:
  - "The following example demonstrates how to use a BoundColumn column type in the <xref:System.Web.UI.WebControls.DataGrid> control to display the fields in a data source.  \n  \n [!code-vb[Classic BoundColumn Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_358_1.aspx)]\n [!code-cs[Classic BoundColumn Example#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_358_1.aspx)]"
  syntax:
    content: 'public class BoundColumn : System.Web.UI.WebControls.DataGridColumn'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataGridColumn
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.DataGridColumn.DesignMode
  - System.Web.UI.WebControls.DataGridColumn.FooterStyle
  - System.Web.UI.WebControls.DataGridColumn.FooterText
  - System.Web.UI.WebControls.DataGridColumn.HeaderImageUrl
  - System.Web.UI.WebControls.DataGridColumn.HeaderStyle
  - System.Web.UI.WebControls.DataGridColumn.HeaderText
  - System.Web.UI.WebControls.DataGridColumn.IsTrackingViewState
  - System.Web.UI.WebControls.DataGridColumn.ItemStyle
  - System.Web.UI.WebControls.DataGridColumn.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataGridColumn.OnColumnChanged
  - System.Web.UI.WebControls.DataGridColumn.Owner
  - System.Web.UI.WebControls.DataGridColumn.SaveViewState
  - System.Web.UI.WebControls.DataGridColumn.SortExpression
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataGridColumn.ToString
  - System.Web.UI.WebControls.DataGridColumn.TrackViewState
  - System.Web.UI.WebControls.DataGridColumn.ViewState
  - System.Web.UI.WebControls.DataGridColumn.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundColumn.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.BoundColumn
  langs:
  - csharp
  name: BoundColumn()
  nameWithType: BoundColumn.BoundColumn()
  fullName: System.Web.UI.WebControls.BoundColumn.BoundColumn()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.BoundColumn&quot;> </xref> 클래스입니다."
  remarks: "이 생성자를 사용 하 여 만들고 <xref:System.Web.UI.WebControls.BoundColumn>클래스</xref:System.Web.UI.WebControls.BoundColumn> 의 새 인스턴스를 초기화 합니다."
  example:
  - "The following example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.BoundColumn> class and add it to the <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> collection.  \n  \n [!code-cs[DataGridCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_158_1.aspx)]\n [!code-vb[DataGridCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_158_1.aspx)]"
  syntax:
    content: public BoundColumn ();
    parameters: []
  overload: System.Web.UI.WebControls.BoundColumn.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundColumn.DataField
  id: DataField
  parent: System.Web.UI.WebControls.BoundColumn
  langs:
  - csharp
  name: DataField
  nameWithType: BoundColumn.DataField
  fullName: System.Web.UI.WebControls.BoundColumn.DataField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "필드 이름에 바인딩할 데이터 소스에서 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.BoundColumn&quot;> </xref>합니다."
  remarks: "DataField 속성을 사용 하 여 <xref:System.Web.UI.WebControls.BoundColumn>.</xref:System.Web.UI.WebControls.BoundColumn> 바인딩할 필드를 지정 하려면"
  example:
  - "The following example demonstrates how to use the DataField property to specify the name of the field in the data source to bind to the <xref:System.Web.UI.WebControls.BoundColumn>.  \n  \n [!code-vb[Classic BoundColumn Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_147_1.aspx)]\n [!code-cs[Classic BoundColumn Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_147_1.aspx)]"
  syntax:
    content: public virtual string DataField { get; set; }
    return:
      type: System.String
      description: "바인딩할 필드의 이름에서 <xref href=&quot;System.Web.UI.WebControls.BoundColumn&quot;> </xref>합니다. 기본값은 &lt;xref:System.String.Empty?displayProperty=fullName&gt;합니다."
  overload: System.Web.UI.WebControls.BoundColumn.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundColumn.DataFormatString
  id: DataFormatString
  parent: System.Web.UI.WebControls.BoundColumn
  langs:
  - csharp
  name: DataFormatString
  nameWithType: BoundColumn.DataFormatString
  fullName: System.Web.UI.WebControls.BoundColumn.DataFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "열에 있는 항목에 대 한 표시 형식을 지정 하는 문자열을 가져오거나 설정 합니다."
  remarks: "DataFormatString 속성을 사용 하 여 열에 있는 항목에 대 한 사용자 지정 형식을 제공 합니다.       데이터 형식 문자열 형태로 콜론으로 구분 하는 두 부분으로 구성 됩니다 { `A` : `Bxx` }. 예를 들어 형식 문자열은 {0: f2}는 소수 자릿수가 두 자리인 고정 소수점 숫자를 표시합니다.      > [!NOTE] > 전체 문자열을 형식 문자열 및 리터럴 문자열이 아니라 임을 나타내기 위해 중괄호로 묶어야 합니다. 중괄호 밖에 모든 텍스트는 리터럴 텍스트로 표시 됩니다.       값의 콜론 앞 (`A` 예:에서)는&0;부터 시작 하는 매개 변수 목록의 매개 변수 인덱스를 지정 합니다.      > [!NOTE] > 각 셀에 값을 하나만 있기 때문에이 값을 0으로 설정할만 있습니다.       콜론 문자 (`B` 예:에서)에 값 표시 형식을 지정 합니다. 다음 표에서 일반 형식을 나열합니다.      | 형식 문자와 | 설명 |   |----------------------|-----------------|   | `C`| 통화 형식으로 숫자 값을 표시 합니다. |   | `D`|&10; 진수 형식의 숫자 값을 표시 합니다. |   | `E`| Scientific (지 수) 형식으로 숫자 값을 표시 합니다. |   | `F`| 고정된 형식으로 숫자 값을 표시 합니다. |   | `G`| 일반 형식에서 숫자 값을 표시 합니다. |   | `N`| 숫자 형식으로 숫자 값을 표시 합니다. |   | `X`|&16; 진수 형식의 숫자 값을 표시 합니다. |      > [!NOTE] > 형식 문자를 제외 하 고 구분 하지 않습니다. `X`, 지정 된 경우에서&16; 진수 문자를 표시 하는 합니다.       형식 문자 다음 값 (`xx` 예:에서) 유효 자릿수 또는 소수 자릿수의 수를 지정 합니다.       문자열 형식 지정에 대 한 자세한 내용은 참조 하십시오. [형식 지정](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example demonstrates how to use the DataFormatString property to specify various formats for the columns in the <xref:System.Web.UI.WebControls.DataGrid> control. The `Qty` column is formatted as an integer, the `Price` column is formatted as currency, the `Weight` column is formatted as a decimal number, and the `Expires` column is formatted as a short date and time string.  \n  \n [!code-vb[BoundColumnDataFormatString#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_840_1.aspx)]\n [!code-cs[BoundColumnDataFormatString#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_840_1.aspx)]"
  syntax:
    content: public virtual string DataFormatString { get; set; }
    return:
      type: System.String
      description: "열에 있는 항목의 표시 형식을 지정 하는 서식 문자열입니다. 기본값은 &lt;xref:System.String?displayProperty=fullName&gt;합니다."
  overload: System.Web.UI.WebControls.BoundColumn.DataFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundColumn.FormatDataValue(System.Object)
  id: FormatDataValue(System.Object)
  parent: System.Web.UI.WebControls.BoundColumn
  langs:
  - csharp
  name: FormatDataValue(Object)
  nameWithType: BoundColumn.FormatDataValue(Object)
  fullName: System.Web.UI.WebControls.BoundColumn.FormatDataValue(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정된 된 값으로 된 형식으로 변환 된 <xref:System.Web.UI.WebControls.BoundColumn.DataFormatString*>속성.</xref:System.Web.UI.WebControls.BoundColumn.DataFormatString*>"
  remarks: "FormatDataValue 메서드를 사용 하 여 지정 된 값에 지정 된 형식으로 변환 된 <xref:System.Web.UI.WebControls.BoundColumn.DataFormatString%2A>속성.</xref:System.Web.UI.WebControls.BoundColumn.DataFormatString%2A>      > [!NOTE] >이 메서드는 문자열을 반환 값에 해당 하는 경우는 <xref:System.Web.UI.WebControls.BoundColumn.DataFormatString%2A>속성이 설정 되지 않았습니다.</xref:System.Web.UI.WebControls.BoundColumn.DataFormatString%2A>"
  syntax:
    content: protected virtual string FormatDataValue (object dataValue);
    parameters:
    - id: dataValue
      type: System.Object
      description: "값 형식입니다."
    return:
      type: System.String
      description: "지정된 된 값에 지정 된 형식으로 변환 된 <xref:System.Web.UI.WebControls.BoundColumn.DataFormatString*>속성.</xref:System.Web.UI.WebControls.BoundColumn.DataFormatString*>"
  overload: System.Web.UI.WebControls.BoundColumn.FormatDataValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundColumn.Initialize
  id: Initialize
  parent: System.Web.UI.WebControls.BoundColumn
  langs:
  - csharp
  name: Initialize()
  nameWithType: BoundColumn.Initialize()
  fullName: System.Web.UI.WebControls.BoundColumn.Initialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "다시 설정 된 <xref href=&quot;System.Web.UI.WebControls.BoundColumn&quot;> </xref> 를 초기 상태로 있습니다."
  remarks: "Initialize 메서드를 사용 하 여 다시 설정 하는 <xref:System.Web.UI.WebControls.BoundColumn>를 초기 상태로.</xref:System.Web.UI.WebControls.BoundColumn>"
  syntax:
    content: public override void Initialize ();
    parameters: []
  overload: System.Web.UI.WebControls.BoundColumn.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  id: InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  parent: System.Web.UI.WebControls.BoundColumn
  langs:
  - csharp
  name: InitializeCell(TableCell,Int32,ListItemType)
  nameWithType: BoundColumn.InitializeCell(TableCell,Int32,ListItemType)
  fullName: System.Web.UI.WebControls.BoundColumn.InitializeCell(TableCell,Int32,ListItemType)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정된 된 셀을 다시 설정 된 <xref href=&quot;System.Web.UI.WebControls.BoundColumn&quot;> </xref> 를 초기 상태로 있습니다."
  remarks: "지정된 된 셀을 기본값으로 다시 설정 InitializeCell 메서드는 <xref:System.Web.UI.WebControls.BoundColumn>를 초기 상태로.</xref:System.Web.UI.WebControls.BoundColumn>"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.TableCell cell, int columnIndex, System.Web.UI.WebControls.ListItemType itemType);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.TableCell
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> 다시 설정 하는 셀을 나타내는 개체입니다."
    - id: columnIndex
      type: System.Int32
      description: "셀이 있는 열 번호입니다."
    - id: itemType
      type: System.Web.UI.WebControls.ListItemType
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.ListItemType&quot;> </xref> 값입니다."
  overload: System.Web.UI.WebControls.BoundColumn.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundColumn.ReadOnly
  id: ReadOnly
  parent: System.Web.UI.WebControls.BoundColumn
  langs:
  - csharp
  name: ReadOnly
  nameWithType: BoundColumn.ReadOnly
  fullName: System.Web.UI.WebControls.BoundColumn.ReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "표시 하는 값을 가져오거나 설정 합니다. 여부에 있는 항목의 <xref href=&quot;System.Web.UI.WebControls.BoundColumn&quot;> </xref> 편집할 수 있습니다."
  remarks: "ReadOnly 속성을 사용 하 여 지정할 수 있는지 여부를 항목에는 <xref:System.Web.UI.WebControls.BoundColumn>편집할 수 있습니다.</xref:System.Web.UI.WebControls.BoundColumn> 프로그래밍 방식으로 열이 읽기 전용인 지 여부를 확인 하려면이 속성을 사용할 수도 수 있습니다."
  example:
  - "The following example demonstrates how to use the ReadOnly property to specify that a <xref:System.Web.UI.WebControls.BoundColumn> is read-only. The .aspx file defines three BoundColumn controls, and sets the Item column to read-only.  \n  \n [!code-cs[BoundColumnReadOnly#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_154_1.aspx)]\n [!code-vb[BoundColumnReadOnly#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_154_1.aspx)]"
  syntax:
    content: public virtual bool ReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우에 있는 항목의 <xref href=&quot;System.Web.UI.WebControls.BoundColumn&quot;> </xref> 고, 그러지 않으면 편집 될 수 없습니다 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.BoundColumn.ReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundColumn.thisExpr
  id: thisExpr
  parent: System.Web.UI.WebControls.BoundColumn
  langs:
  - csharp
  name: thisExpr
  nameWithType: BoundColumn.thisExpr
  fullName: System.Web.UI.WebControls.BoundColumn.thisExpr
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "문자열을 나타냅니다 &quot;!&quot;. 이 필드는 읽기 전용입니다."
  remarks: "나타내는 thisExpr 필드를 사용 하 여는 &quot;!&quot; 문자열입니다."
  syntax:
    content: public static readonly string thisExpr;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataGridColumn
  isExternal: false
  name: System.Web.UI.WebControls.DataGridColumn
- uid: System.Web.UI.WebControls.BoundColumn.#ctor
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: BoundColumn()
  nameWithType: BoundColumn.BoundColumn()
  fullName: System.Web.UI.WebControls.BoundColumn.BoundColumn()
- uid: System.Web.UI.WebControls.BoundColumn.DataField
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: DataField
  nameWithType: BoundColumn.DataField
  fullName: System.Web.UI.WebControls.BoundColumn.DataField
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.BoundColumn.DataFormatString
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: DataFormatString
  nameWithType: BoundColumn.DataFormatString
  fullName: System.Web.UI.WebControls.BoundColumn.DataFormatString
- uid: System.Web.UI.WebControls.BoundColumn.FormatDataValue(System.Object)
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: FormatDataValue(Object)
  nameWithType: BoundColumn.FormatDataValue(Object)
  fullName: System.Web.UI.WebControls.BoundColumn.FormatDataValue(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.BoundColumn.Initialize
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: Initialize()
  nameWithType: BoundColumn.Initialize()
  fullName: System.Web.UI.WebControls.BoundColumn.Initialize()
- uid: System.Web.UI.WebControls.BoundColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: InitializeCell(TableCell,Int32,ListItemType)
  nameWithType: BoundColumn.InitializeCell(TableCell,Int32,ListItemType)
  fullName: System.Web.UI.WebControls.BoundColumn.InitializeCell(TableCell,Int32,ListItemType)
- uid: System.Web.UI.WebControls.TableCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableCell
  nameWithType: TableCell
  fullName: System.Web.UI.WebControls.TableCell
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.ListItemType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ListItemType
  nameWithType: ListItemType
  fullName: System.Web.UI.WebControls.ListItemType
- uid: System.Web.UI.WebControls.BoundColumn.ReadOnly
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: ReadOnly
  nameWithType: BoundColumn.ReadOnly
  fullName: System.Web.UI.WebControls.BoundColumn.ReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.BoundColumn.thisExpr
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: thisExpr
  nameWithType: BoundColumn.thisExpr
  fullName: System.Web.UI.WebControls.BoundColumn.thisExpr
- uid: System.Web.UI.WebControls.BoundColumn.#ctor*
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: BoundColumn
  nameWithType: BoundColumn.BoundColumn
- uid: System.Web.UI.WebControls.BoundColumn.DataField*
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: DataField
  nameWithType: BoundColumn.DataField
- uid: System.Web.UI.WebControls.BoundColumn.DataFormatString*
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: DataFormatString
  nameWithType: BoundColumn.DataFormatString
- uid: System.Web.UI.WebControls.BoundColumn.FormatDataValue*
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: FormatDataValue
  nameWithType: BoundColumn.FormatDataValue
- uid: System.Web.UI.WebControls.BoundColumn.Initialize*
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: Initialize
  nameWithType: BoundColumn.Initialize
- uid: System.Web.UI.WebControls.BoundColumn.InitializeCell*
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: InitializeCell
  nameWithType: BoundColumn.InitializeCell
- uid: System.Web.UI.WebControls.BoundColumn.ReadOnly*
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: ReadOnly
  nameWithType: BoundColumn.ReadOnly
