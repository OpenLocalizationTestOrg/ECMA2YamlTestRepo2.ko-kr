### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.PowerEase
  id: PowerEase
  children:
  - System.Windows.Media.Animation.PowerEase.#ctor
  - System.Windows.Media.Animation.PowerEase.CreateInstanceCore
  - System.Windows.Media.Animation.PowerEase.EaseInCore(System.Double)
  - System.Windows.Media.Animation.PowerEase.Power
  - System.Windows.Media.Animation.PowerEase.PowerProperty
  langs:
  - csharp
  name: PowerEase
  nameWithType: PowerEase
  fullName: System.Windows.Media.Animation.PowerEase
  type: Class
  summary: "애니메이션을 만드는 감속/가속 함수는 및/또는 수식을 사용 하 여 감속 나타냅니다 *f*(*t*) = *t*<sup>p</sup> p과 같음는 <xref:System.Windows.Media.Animation.PowerEase.Power*>속성.</xref:System.Windows.Media.Animation.PowerEase.Power*>"
  remarks: "제어할 수 있습니다 애니메이션 가속화 여부 감속, 또는 둘 다 있는 <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> 를 지정 하 여 다음 그래프의 다른 값을 보여 주는 <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>여기서 *f*(*t*)에서는 및 *t* 시간을 나타냅니다.</xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>       ![CubicEase EasingMode 그래프 ] (~/add/media/cubicease-graph.png &quot;CubicEase EasingMode 그래프입니다.&quot;)       PowerEase 함수를 사용 하 여 지정할 수 있습니다 가속/감속 지정 하 여 위치를 사용 하는 속도 <xref:System.Windows.Media.Animation.PowerEase.Power%2A>속성: *f*(*t*) = *t*<sup>p</sup> 여기서 `p` 같은지는 <xref:System.Windows.Media.Animation.PowerEase.Power%2A>속성.</xref:System.Windows.Media.Animation.PowerEase.Power%2A> </xref:System.Windows.Media.Animation.PowerEase.Power%2A>       Because of this, the PowerEase function can be substituted for <xref:System.Windows.Media.Animation.QuadraticEase> (*f*(*t*) = *t*<sup>2</sup>), <xref:System.Windows.Media.Animation.CubicEase> (*f*(*t*) = *t*<sup>3</sup>), <xref:System.Windows.Media.Animation.QuarticEase> (*f*(*t*) = *t*<sup>4</sup>), and <xref:System.Windows.Media.Animation.QuinticEase> (*f*(*t*) = *t*<sup>5</sup>).</xref:System.Windows.Media.Animation.QuinticEase></xref:System.Windows.Media.Animation.QuarticEase></xref:System.Windows.Media.Animation.CubicEase></xref:System.Windows.Media.Animation.QuadraticEase> 예를 들어, 동일한 동작을 만들려면 PowerEase 함수를 사용 하려는 경우는 <xref:System.Windows.Media.Animation.QuadraticEase>함수 (*f*(*t*) = *t*<sup>2</sup>)를 지정 하는 경우는 <xref:System.Windows.Media.Animation.PowerEase.Power%2A>속성 값이 2.</xref:System.Windows.Media.Animation.PowerEase.Power%2A> </xref:System.Windows.Media.Animation.QuadraticEase>       여러 다른 감속/가속 함수 PowerEase 다음 Silverlight 샘플을 사용 하 여 확인할 수 있는 것 외에도 있습니다.       [이 샘플을 실행](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery) 실행 시간에 포함 된 감속/가속 함수를 사용 하 여를 <xref:System.Windows.Media.Animation.EasingFunctionBase>.</xref:System.Windows.Media.Animation.EasingFunctionBase> 에서 상속 하 여 사용자 지정 감속/가속 함수를 만들 수 있습니다      <a name=&quot;xamlObjectElementUsage_PowerEase&quot;></a># # XAML 개체 요소 사용```   <PowerEase .../>   ```"
  example:
  - "The following example applies a PowerEase easing function with a <xref:System.Windows.Media.Animation.PowerEase.Power%2A> property value of `20` to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create a decelerating animation. Because the <xref:System.Windows.Media.Animation.PowerEase.Power%2A> value is so high, the deceleration is sudden compared to if you used a lower value.  \n  \n [!code-xml[PowerEase#PowerEase](~/add/codesnippet/xaml/t-system.windows.media.a_27_1.xaml)]\n [!code-xml[PowerEase#PowerEase](~/add/codesnippet/xaml/powerease/window1.xaml#powerease)]"
  syntax:
    content: 'public class PowerEase : System.Windows.Media.Animation.EasingFunctionBase'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.EasingFunctionBase
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.Clone
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValue
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.FreezeCore(System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.EasingFunctionBase.Ease(System.Double)
  - System.Windows.Media.Animation.EasingFunctionBase.EasingMode
  - System.Windows.Media.Animation.EasingFunctionBase.EasingModeProperty
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.PowerEase.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Animation.PowerEase
  langs:
  - csharp
  name: PowerEase()
  nameWithType: PowerEase.PowerEase()
  fullName: System.Windows.Media.Animation.PowerEase.PowerEase()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Media.Animation.PowerEase&quot;> </xref> 클래스입니다."
  syntax:
    content: public PowerEase ();
    parameters: []
  overload: System.Windows.Media.Animation.PowerEase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.PowerEase.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Animation.PowerEase
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: PowerEase.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.PowerEase.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.Windows.Freezable&quot;> </xref> 클래스를 파생 합니다. 파생된 클래스를 만들 때이 메서드를 재정의 해야 합니다."
  remarks: "애니메이션 클래스 <xref:System.Windows.Freezable>.</xref:System.Windows.Freezable> 에서 간접적으로 상속 이 때문에 무시 해야는 <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A>메서드를 사용자 지정 애니메이션 개체를 생성 합니다.</xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A>"
  example:
  - "The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  \n  \n [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/add/codesnippet/visualbasic/freezablesample_visualbasic/freezablesample.vb#createinstancecoreexample)]\n [!code-cs[freezablesample_procedural#CreateInstanceCoreExample](~/add/codesnippet/csharp/freezablesample_csharp/freezablesample.cs#createinstancecoreexample)]"
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "새 인스턴스입니다."
  overload: System.Windows.Media.Animation.PowerEase.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.PowerEase.EaseInCore(System.Double)
  id: EaseInCore(System.Double)
  parent: System.Windows.Media.Animation.PowerEase
  langs:
  - csharp
  name: EaseInCore(Double)
  nameWithType: PowerEase.EaseInCore(Double)
  fullName: System.Windows.Media.Animation.PowerEase.EaseInCore(Double)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "생성 하기 위해 재정의할 수 있는 감속/가속 함수의 논리 부분을 제공 된 <xref href=&quot;System.Windows.Media.Animation.EasingMode&quot;> </xref> 모드의 사용자 지정 감속/가속 함수입니다."
  remarks: "이 메서드는 <xref:System.Windows.Media.Animation.EasingMode> <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> 의 대/소문자</xref:System.Windows.Media.Animation.EasingMode> 에 대 한 애니메이션의 속도 제어 하는 정규화 된 시간 변환       에 대 한 감속/가속 함수를 지정 해야는 <xref:System.Windows.Media.Animation.EasingMode>때문에 대/소문자의 구현을 <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A>메서드 변환 `normalizedTime` 에 대 한는 <xref:System.Windows.Media.Animation.EasingMode>및 <xref:System.Windows.Media.Animation.EasingMode>사례.</xref:System.Windows.Media.Animation.EasingMode> </xref:System.Windows.Media.Animation.EasingMode> </xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> </xref:System.Windows.Media.Animation.EasingMode>"
  syntax:
    content: protected override double EaseInCore (double normalizedTime);
    parameters:
    - id: normalizedTime
      type: System.Double
      description: "애니메이션의 정규화 된 시간 (진행 상황)입니다."
    return:
      type: System.Double
      description: "Double 변형 된 진행 상황을 나타내는입니다."
  overload: System.Windows.Media.Animation.PowerEase.EaseInCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.PowerEase.Power
  id: Power
  parent: System.Windows.Media.Animation.PowerEase
  langs:
  - csharp
  name: Power
  nameWithType: PowerEase.Power
  fullName: System.Windows.Media.Animation.PowerEase.Power
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "애니메이션 보간 활용 지 수를 가져오거나 설정 합니다. 예를 들어 값이 7 수식 뒤에 오는 애니메이션 보간 곡선 만들어집니다 *f*(*t*) = *t*<sup>7</sup>합니다."
  remarks: "[!INCLUDE[DP_ID_field_label](~/add/includes/dp-id-field-label-md.md)]<xref:System.Windows.Media.Animation.PowerEase.PowerProperty> <a name=&quot;xamlAttributeUsage_Power&quot;> </a> # # XAML 특성 사용      ```   <object Power=&quot;double&quot; .../>   ```</xref:System.Windows.Media.Animation.PowerEase.PowerProperty>"
  example:
  - "The following example applies a <xref:System.Windows.Media.Animation.PowerEase> easing function with a Power property value of `20` to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create a decelerating animation. Because the Power value is so high, the deceleration is sudden compared to if you used a lower value.  \n  \n [!code-xml[PowerEase#PowerEase](~/add/codesnippet/xaml/p-system.windows.media.a_3_1.xaml)]\n [!code-xml[PowerEase#PowerEase](~/add/codesnippet/xaml/powerease/window1.xaml#powerease)]"
  syntax:
    content: public double Power { get; set; }
    return:
      type: System.Double
      description: "애니메이션 보간의 지 수 거듭제곱입니다. 이 값은 0 보다 크거나 이어야 합니다. 기본값은 2입니다."
  overload: System.Windows.Media.Animation.PowerEase.Power*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.PowerEase.PowerProperty
  id: PowerProperty
  parent: System.Windows.Media.Animation.PowerEase
  langs:
  - csharp
  name: PowerProperty
  nameWithType: PowerEase.PowerProperty
  fullName: System.Windows.Media.Animation.PowerEase.PowerProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "식별 된 <xref:System.Windows.Media.Animation.PowerEase.Power*>종속성 속성입니다.</xref:System.Windows.Media.Animation.PowerEase.Power*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty PowerProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.EasingFunctionBase
  isExternal: false
  name: System.Windows.Media.Animation.EasingFunctionBase
- uid: System.Windows.Media.Animation.PowerEase.#ctor
  parent: System.Windows.Media.Animation.PowerEase
  isExternal: false
  name: PowerEase()
  nameWithType: PowerEase.PowerEase()
  fullName: System.Windows.Media.Animation.PowerEase.PowerEase()
- uid: System.Windows.Media.Animation.PowerEase.CreateInstanceCore
  parent: System.Windows.Media.Animation.PowerEase
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: PowerEase.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.PowerEase.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Animation.PowerEase.EaseInCore(System.Double)
  parent: System.Windows.Media.Animation.PowerEase
  isExternal: false
  name: EaseInCore(Double)
  nameWithType: PowerEase.EaseInCore(Double)
  fullName: System.Windows.Media.Animation.PowerEase.EaseInCore(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Animation.PowerEase.Power
  parent: System.Windows.Media.Animation.PowerEase
  isExternal: false
  name: Power
  nameWithType: PowerEase.Power
  fullName: System.Windows.Media.Animation.PowerEase.Power
- uid: System.Windows.Media.Animation.PowerEase.PowerProperty
  parent: System.Windows.Media.Animation.PowerEase
  isExternal: false
  name: PowerProperty
  nameWithType: PowerEase.PowerProperty
  fullName: System.Windows.Media.Animation.PowerEase.PowerProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Animation.PowerEase.#ctor*
  parent: System.Windows.Media.Animation.PowerEase
  isExternal: false
  name: PowerEase
  nameWithType: PowerEase.PowerEase
- uid: System.Windows.Media.Animation.PowerEase.CreateInstanceCore*
  parent: System.Windows.Media.Animation.PowerEase
  isExternal: false
  name: CreateInstanceCore
  nameWithType: PowerEase.CreateInstanceCore
- uid: System.Windows.Media.Animation.PowerEase.EaseInCore*
  parent: System.Windows.Media.Animation.PowerEase
  isExternal: false
  name: EaseInCore
  nameWithType: PowerEase.EaseInCore
- uid: System.Windows.Media.Animation.PowerEase.Power*
  parent: System.Windows.Media.Animation.PowerEase
  isExternal: false
  name: Power
  nameWithType: PowerEase.Power
