### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeMethodReferenceExpression
  id: CodeMethodReferenceExpression
  children:
  - System.CodeDom.CodeMethodReferenceExpression.#ctor
  - System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)
  - System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeTypeReference[])
  - System.CodeDom.CodeMethodReferenceExpression.MethodName
  - System.CodeDom.CodeMethodReferenceExpression.TargetObject
  - System.CodeDom.CodeMethodReferenceExpression.TypeArguments
  langs:
  - csharp
  name: CodeMethodReferenceExpression
  nameWithType: CodeMethodReferenceExpression
  fullName: System.CodeDom.CodeMethodReferenceExpression
  type: Class
  summary: "메서드에 대 한 참조를 나타냅니다."
  remarks: "CodeMethodReferenceExpression 한 Object.Method 형식의 식을 나타내는 데 사용할 수 있습니다.       <xref:System.CodeDom.CodeMethodReferenceExpression.TargetObject%2A>속성 메서드를 포함 하는 개체를 나타냅니다.</xref:System.CodeDom.CodeMethodReferenceExpression.TargetObject%2A> <xref:System.CodeDom.CodeMethodReferenceExpression.MethodName%2A>속성 메서드의 이름을 나타냅니다.</xref:System.CodeDom.CodeMethodReferenceExpression.MethodName%2A>       CodeMethodReferenceExpression와 함께 사용 되는 <xref:System.CodeDom.CodeMethodInvokeExpression>호출할 메서드를 나타내기 위해와 <xref:System.CodeDom.CodeDelegateCreateExpression>이벤트를 처리할 메서드를 나타낼.</xref:System.CodeDom.CodeDelegateCreateExpression> </xref:System.CodeDom.CodeMethodInvokeExpression>"
  example:
  - "The following code example uses a CodeMethodReferenceExpression to refer to a method:  \n  \n [!code-cs[CodeMethodReferenceExample#3](~/add/codesnippet/csharp/t-system.codedom.codemet_1_1.cs)]\n [!code-vb[CodeMethodReferenceExample#3](~/add/codesnippet/visualbasic/t-system.codedom.codemet_1_1.vb)]\n [!code-cpp[CodeMethodReferenceExample#3](~/add/codesnippet/cpp/t-system.codedom.codemet_1_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeMethodReferenceExpression : System.CodeDom.CodeExpression
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  - System.CodeDom.CodeExpression
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeObject.UserData
  platform:
  - net462
- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeMethodReferenceExpression
  langs:
  - csharp
  name: CodeMethodReferenceExpression()
  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression()
  fullName: System.CodeDom.CodeMethodReferenceExpression.CodeMethodReferenceExpression()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.CodeDom.CodeMethodReferenceExpression&quot;> </xref> 클래스입니다."
  syntax:
    content: public CodeMethodReferenceExpression ();
    parameters: []
  overload: System.CodeDom.CodeMethodReferenceExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)
  id: '#ctor(System.CodeDom.CodeExpression,System.String)'
  parent: System.CodeDom.CodeMethodReferenceExpression
  langs:
  - csharp
  name: CodeMethodReferenceExpression(CodeExpression,String)
  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String)
  fullName: System.CodeDom.CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.CodeDom.CodeMethodReferenceExpression&quot;> </xref> 클래스는 지정 된 대상 개체 및 메서드 이름을 사용 합니다."
  syntax:
    content: public CodeMethodReferenceExpression (System.CodeDom.CodeExpression targetObject, string methodName);
    parameters:
    - id: targetObject
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> 대상으로 사용할 개체를 나타내는입니다."
    - id: methodName
      type: System.String
      description: "호출할 메서드의 이름입니다."
  overload: System.CodeDom.CodeMethodReferenceExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeTypeReference[])
  id: '#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeTypeReference[])'
  parent: System.CodeDom.CodeMethodReferenceExpression
  langs:
  - csharp
  name: CodeMethodReferenceExpression(CodeExpression,String,CodeTypeReference[])
  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String,CodeTypeReference[])
  fullName: System.CodeDom.CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String,CodeTypeReference[])
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.CodeDom.CodeMethodReferenceExpression&quot;> </xref> 클래스 지정 된 대상 개체, 메서드 이름 및 제네릭 형식 인수를 사용 합니다."
  remarks: "`typeParameters` 매개 변수를 현재 제네릭 메서드의 형식 매개 변수 참조 대체할 형식 참조의 컬렉션을 나타냅니다."
  example:
  - "The following code example shows the use of this constructor.  \n  \n [!code-cs[System.CodeDom.CodeMethodReferenceExpression#1](~/add/codesnippet/csharp/c13bd512-df02-4e88-9c27-_1.cs)]\n [!code-vb[System.CodeDom.CodeMethodReferenceExpression#1](~/add/codesnippet/visualbasic/c13bd512-df02-4e88-9c27-_1.vb)]\n [!code-cpp[System.CodeDom.CodeMethodReferenceExpression#1](~/add/codesnippet/cpp/c13bd512-df02-4e88-9c27-_1.cpp)]"
  syntax:
    content: public CodeMethodReferenceExpression (System.CodeDom.CodeExpression targetObject, string methodName, System.CodeDom.CodeTypeReference[] typeParameters);
    parameters:
    - id: targetObject
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> 대상으로 사용할 개체를 나타내는입니다."
    - id: methodName
      type: System.String
      description: "호출할 메서드의 이름입니다."
    - id: typeParameters
      type: System.CodeDom.CodeTypeReference[]
      description: "배열을 <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> 지정 하는 값은 <xref:System.CodeDom.CodeMethodReferenceExpression.TypeArguments*>이 <xref href=&quot;System.CodeDom.CodeMethodReferenceExpression&quot;> </xref>.</xref:System.CodeDom.CodeMethodReferenceExpression.TypeArguments*>"
  overload: System.CodeDom.CodeMethodReferenceExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeMethodReferenceExpression.MethodName
  id: MethodName
  parent: System.CodeDom.CodeMethodReferenceExpression
  langs:
  - csharp
  name: MethodName
  nameWithType: CodeMethodReferenceExpression.MethodName
  fullName: System.CodeDom.CodeMethodReferenceExpression.MethodName
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "참조 하는 메서드의 이름을 가져오거나 설정 합니다."
  syntax:
    content: public string MethodName { get; set; }
    return:
      type: System.String
      description: "참조 되는 메서드의 이름입니다."
  overload: System.CodeDom.CodeMethodReferenceExpression.MethodName*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeMethodReferenceExpression.TargetObject
  id: TargetObject
  parent: System.CodeDom.CodeMethodReferenceExpression
  langs:
  - csharp
  name: TargetObject
  nameWithType: CodeMethodReferenceExpression.TargetObject
  fullName: System.CodeDom.CodeMethodReferenceExpression.TargetObject
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "참조할 메서드를 나타내는 식을 가져오거나 설정 합니다."
  syntax:
    content: public System.CodeDom.CodeExpression TargetObject { get; set; }
    return:
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> 참조할 메서드를 나타내는입니다."
  overload: System.CodeDom.CodeMethodReferenceExpression.TargetObject*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeMethodReferenceExpression.TypeArguments
  id: TypeArguments
  parent: System.CodeDom.CodeMethodReferenceExpression
  langs:
  - csharp
  name: TypeArguments
  nameWithType: CodeMethodReferenceExpression.TypeArguments
  fullName: System.CodeDom.CodeMethodReferenceExpression.TypeArguments
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "현재 제네릭 메서드 참조 식에 대 한 형식 인수를 가져옵니다."
  remarks: "TypeArguments 속성을 현재 제네릭 메서드의 형식 매개 변수 참조에 대 한 대체 형식 참조의 컬렉션을 나타냅니다."
  syntax:
    content: public System.CodeDom.CodeTypeReferenceCollection TypeArguments { get; }
    return:
      type: System.CodeDom.CodeTypeReferenceCollection
      description: "A <xref href=&quot;System.CodeDom.CodeTypeReferenceCollection&quot;> </xref> 현재 코드에 대 한 형식 인수를 포함 하 <xref href=&quot;System.CodeDom.CodeMethodReferenceExpression&quot;> </xref>합니다."
  overload: System.CodeDom.CodeMethodReferenceExpression.TypeArguments*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeExpression
  isExternal: false
  name: System.CodeDom.CodeExpression
- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: CodeMethodReferenceExpression()
  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression()
  fullName: System.CodeDom.CodeMethodReferenceExpression.CodeMethodReferenceExpression()
- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: CodeMethodReferenceExpression(CodeExpression,String)
  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String)
  fullName: System.CodeDom.CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeTypeReference[])
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: CodeMethodReferenceExpression(CodeExpression,String,CodeTypeReference[])
  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String,CodeTypeReference[])
  fullName: System.CodeDom.CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String,CodeTypeReference[])
- uid: System.CodeDom.CodeTypeReference[]
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference[]
  spec.csharp:
  - uid: System.CodeDom.CodeTypeReference
    name: CodeTypeReference
    nameWithType: CodeTypeReference
    fullName: CodeTypeReference[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.CodeDom.CodeMethodReferenceExpression.MethodName
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: MethodName
  nameWithType: CodeMethodReferenceExpression.MethodName
  fullName: System.CodeDom.CodeMethodReferenceExpression.MethodName
- uid: System.CodeDom.CodeMethodReferenceExpression.TargetObject
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: TargetObject
  nameWithType: CodeMethodReferenceExpression.TargetObject
  fullName: System.CodeDom.CodeMethodReferenceExpression.TargetObject
- uid: System.CodeDom.CodeMethodReferenceExpression.TypeArguments
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: TypeArguments
  nameWithType: CodeMethodReferenceExpression.TypeArguments
  fullName: System.CodeDom.CodeMethodReferenceExpression.TypeArguments
- uid: System.CodeDom.CodeTypeReferenceCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReferenceCollection
  nameWithType: CodeTypeReferenceCollection
  fullName: System.CodeDom.CodeTypeReferenceCollection
- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor*
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: CodeMethodReferenceExpression
  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression
- uid: System.CodeDom.CodeMethodReferenceExpression.MethodName*
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: MethodName
  nameWithType: CodeMethodReferenceExpression.MethodName
- uid: System.CodeDom.CodeMethodReferenceExpression.TargetObject*
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: TargetObject
  nameWithType: CodeMethodReferenceExpression.TargetObject
- uid: System.CodeDom.CodeMethodReferenceExpression.TypeArguments*
  parent: System.CodeDom.CodeMethodReferenceExpression
  isExternal: false
  name: TypeArguments
  nameWithType: CodeMethodReferenceExpression.TypeArguments
