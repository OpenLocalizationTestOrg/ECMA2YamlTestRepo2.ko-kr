### YamlMime:ManagedReference
items:
- uid: System.Data.Objects.ObjectStateManager
  id: ObjectStateManager
  children:
  - System.Data.Objects.ObjectStateManager.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)
  - System.Data.Objects.ObjectStateManager.ChangeObjectState(System.Object,System.Data.EntityState)
  - System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)
  - System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)
  - System.Data.Objects.ObjectStateManager.ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)
  - System.Data.Objects.ObjectStateManager.GetObjectStateEntries(System.Data.EntityState)
  - System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Data.EntityKey)
  - System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Object)
  - System.Data.Objects.ObjectStateManager.GetRelationshipManager(System.Object)
  - System.Data.Objects.ObjectStateManager.MetadataWorkspace
  - System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged
  - System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)
  - System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)
  - System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)
  langs:
  - csharp
  name: ObjectStateManager
  nameWithType: ObjectStateManager
  fullName: System.Data.Objects.ObjectStateManager
  type: Class
  summary: "엔터티 형식 인스턴스 및 관계 인스턴스에 대 한 개체 상태 및 id 관리를 유지 관리합니다."
  remarks: "ObjectStateManager 추적 결과 쿼리하고 겹치는 여러 쿼리 결과 병합 하는 논리를 제공 합니다. 또한 메모리 내 변경 사용자 삽입, 삭제 또는 개체를 수정 하 고 변경 업데이트에 대 한 집합을 제공 하는 경우 추적을 수행 합니다. 이 변경 집합은 수정 된 내용을 유지 하려면 변경 내용 처리기에서 사용 됩니다.       이 클래스에서 사용 되는 일반적으로 <xref:System.Data.Objects.ObjectContext>, 응용 프로그램에서 직접.</xref:System.Data.Objects.ObjectContext>"
  example:
  - "These examples are based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832).  \n  \n The following example gets the ObjectStateManager from the <xref:System.Data.Objects.ObjectContext> and uses the state manager to access an object in the context.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectStateManager](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectstatemanager)]\n [!code-cs[DP ObjectServices Concepts#ObjectStateManager](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectstatemanager)]  \n  \n The following example uses the <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29> method on the returned ObjectStateManager to get an object based on its entity key.  \n  \n [!code-vb[DP ObjectServices Concepts#ApplyItemUpdates](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#applyitemupdates)]\n [!code-cs[DP ObjectServices Concepts#ApplyItemUpdates](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#applyitemupdates)]"
  syntax:
    content: public class ObjectStateManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)
  id: '#ctor(System.Data.Metadata.Edm.MetadataWorkspace)'
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ObjectStateManager(MetadataWorkspace)
  nameWithType: ObjectStateManager.ObjectStateManager(MetadataWorkspace)
  fullName: System.Data.Objects.ObjectStateManager.ObjectStateManager(MetadataWorkspace)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Objects.ObjectStateManager&quot;> </xref> 클래스입니다."
  syntax:
    content: public ObjectStateManager (System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace);
    parameters:
    - id: metadataWorkspace
      type: System.Data.Metadata.Edm.MetadataWorkspace
      description: "<xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref>, 매핑 및 메타 데이터 정보를 제공 하는 합니다."
  overload: System.Data.Objects.ObjectStateManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.ChangeObjectState(System.Object,System.Data.EntityState)
  id: ChangeObjectState(System.Object,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ChangeObjectState(Object,EntityState)
  nameWithType: ObjectStateManager.ChangeObjectState(Object,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeObjectState(Object,EntityState)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "상태를 변경는 <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> 를 지정 된 특정 개체에 대 한 <code> entityState </code>합니다."
  remarks: "개체의 상태를 변경 하려면 ChangeObjectState 메서드를 호출 <xref:System.Data.EntityState>관련된 개체를 삭제할 수를 제한 된 관계의 발생 하지 않습니다.</xref:System.Data.EntityState>       개체의 상태를 변경 하는 관련된 개체는 개체 그래프에 적용 되지 않습니다.       변경 될 때는 <xref:System.Data.EntityState>에 엔터티 개체 항목의 <xref:System.Data.EntityState>, 개체의 모든 속성에는 현재 또는 원래의 값에 관계 없이 수정 하는 것으로 표시 됩니다.</xref:System.Data.EntityState> </xref:System.Data.EntityState>       경우는 <xref:System.Data.EntityState>항목으로 변경 되는 엔터티 개체 <xref:System.Data.EntityState>, <xref:System.Data.EntityState>, 또는 <xref:System.Data.EntityState>, 개체에 대 한 관계 항목도 업데이트 됩니다.</xref:System.Data.EntityState> </xref:System.Data.EntityState> </xref:System.Data.EntityState> </xref:System.Data.EntityState>"
  syntax:
    content: public System.Data.Objects.ObjectStateEntry ChangeObjectState (object entity, System.Data.EntityState entityState);
    parameters:
    - id: entity
      type: System.Object
      description: "상태를 변경 해야 하는 개체입니다."
    - id: entityState
      type: System.Data.EntityState
      description: "개체의 새 상태입니다."
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "The <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;></xref> for the supplied <code>entity</code>."
  overload: System.Data.Objects.ObjectStateManager.ChangeObjectState*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>entity</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "개체가 분리 될 시점과 상태 관리자에서 한 항목을 포함 하지 않습니다.       -또는-상태를 변경 하려고 하면 <xref href=&quot;System.Data.EntityState&quot;> </xref> 다른에서 <xref:System.Data.EntityState.>-또는-때 <code> state </code> 유효 하지 않거나 <xref href=&quot;System.Data.EntityState&quot;> </xref> 값.</xref:System.Data.EntityState.>"
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)
  id: ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ChangeRelationshipState(Object,Object,String,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(Object,Object,String,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(Object,Object,String,EntityState)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "두 관련된 개체와 탐색 속성의 이름에 따라 지정 된 두 엔터티 개체 간 관계의 상태를 변경 합니다."
  remarks: "지정된 된 관계의 양쪽 끝에서 개체에 대 한 항목 <xref:System.Data.Objects.ObjectStateManager>.</xref:System.Data.Objects.ObjectStateManager> 에 있어야 합니다.      > [!NOTE] > 외래 키 연결에 따라 관계에 대 한이 메서드가 지원 되지 않습니다."
  syntax:
    content: public System.Data.Objects.ObjectStateEntry ChangeRelationshipState (object sourceEntity, object targetEntity, string navigationProperty, System.Data.EntityState relationshipState);
    parameters:
    - id: sourceEntity
      type: System.Object
      description: "개체 인스턴스 또는 <xref href=&quot;System.Data.EntityKey&quot;> </xref> 관계의 한쪽 끝에 있는 소스 엔터티의 합니다."
    - id: targetEntity
      type: System.Object
      description: "개체 인스턴스 또는 <xref href=&quot;System.Data.EntityKey&quot;> </xref> 관계의 다른 쪽 끝에서 대상 엔터티의 합니다."
    - id: navigationProperty
      type: System.String
      description: "탐색 속성의 이름 `source` 반환 하는 지정 된 `target`합니다."
    - id: relationshipState
      type: System.Data.EntityState
      description: "요청 된 <xref href=&quot;System.Data.EntityState&quot;> </xref> 지정된 된 관계입니다."
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "<xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> 변경 된 관계에 대 한 합니다."
  overload: System.Data.Objects.ObjectStateManager.ChangeRelationshipState*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>source</code> or <code>target</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이외의 상태에 관계의 상태를 변경 하려고 할 때 <xref href=&quot;System.Data.EntityState&quot;> </xref> 또는 <xref href=&quot;System.Data.EntityState&quot;> </xref> 때 어느 <code> source </code> 또는 <code> target </code> 에 <xref href=&quot;System.Data.EntityState&quot;> </xref> 상태입니다.       -또는-이외의 상태로 관계의 상태를 변경 하려고 하면 <xref href=&quot;System.Data.EntityState&quot;> </xref> 또는 <xref href=&quot;System.Data.EntityState&quot;> </xref> 때 어느 <code> source </code> 또는 <code> target </code> 에 <xref href=&quot;System.Data.EntityState&quot;> </xref> 상태입니다.       -또는-때 <code> state </code> 유효 하지 않거나 <xref href=&quot;System.Data.EntityState&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)
  id: ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ChangeRelationshipState(Object,Object,String,String,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(Object,Object,String,String,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(Object,Object,String,String,EntityState)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "두 관련된 개체 및 관계의 속성에 따라 지정 된 두 엔터티 개체 간 관계의 상태를 변경 합니다."
  remarks: "지정된 된 관계의 양쪽 끝에서 개체에 대 한 항목 <xref:System.Data.Objects.ObjectStateManager>.</xref:System.Data.Objects.ObjectStateManager> 에 있어야 합니다.      > [!NOTE] > 외래 키 연결을 기반으로 하는 관계에 대 한이 메서드가 지원 되지 않습니다. 자세한 내용은 참조 [정 및 관계 관리](http://msdn.microsoft.com/en-us/2c92c097-56bd-4145-989e-16d92475ecda)"
  syntax:
    content: public System.Data.Objects.ObjectStateEntry ChangeRelationshipState (object sourceEntity, object targetEntity, string relationshipName, string targetRoleName, System.Data.EntityState relationshipState);
    parameters:
    - id: sourceEntity
      type: System.Object
      description: "개체 인스턴스 또는 <xref href=&quot;System.Data.EntityKey&quot;> </xref> 관계의 한쪽 끝에 있는 소스 엔터티의 합니다."
    - id: targetEntity
      type: System.Object
      description: "개체 인스턴스 또는 <xref href=&quot;System.Data.EntityKey&quot;> </xref> 관계의 다른 쪽 끝에서 대상 엔터티의 합니다."
    - id: relationshipName
      type: System.String
      description: "관계의 이름입니다."
    - id: targetRoleName
      type: System.String
      description: "에 있는 역할 이름을 `target` 관계의 끝입니다."
    - id: relationshipState
      type: System.Data.EntityState
      description: "요청 된 <xref href=&quot;System.Data.EntityState&quot;> </xref> 지정된 된 관계입니다."
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "<xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> 변경 된 관계에 대 한 합니다."
  overload: System.Data.Objects.ObjectStateManager.ChangeRelationshipState*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>source</code> or <code>target</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이외의 상태에 관계의 상태를 변경 하려고 하면 <xref href=&quot;System.Data.EntityState&quot;> </xref> 또는 <xref href=&quot;System.Data.EntityState&quot;> </xref> 때 어느 <code> source </code> 또는 <code> target </code> 에 <xref href=&quot;System.Data.EntityState&quot;> </xref> 상태입니다.       -또는-이외의 상태로 관계의 상태를 변경 하려고 하면 <xref href=&quot;System.Data.EntityState&quot;> </xref> 또는 <xref href=&quot;System.Data.EntityState&quot;> </xref> 때 어느 <code> source </code> 또는 <code> target </code> 에 <xref href=&quot;System.Data.EntityState&quot;> </xref> 상태입니다.       -또는-때 <code> state </code> 유효 하지 않거나 <xref href=&quot;System.Data.EntityState&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)
  id: ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  syntax:
    content: 'public System.Data.Objects.ObjectStateEntry ChangeRelationshipState<TEntity> (TEntity sourceEntity, object targetEntity, System.Linq.Expressions.Expression<Func<TEntity,object>> navigationPropertySelector, System.Data.EntityState relationshipState) where TEntity : class;'
    parameters:
    - id: sourceEntity
      type: TEntity
      description: "추가할 수 있습니다."
    - id: targetEntity
      type: System.Object
      description: "추가할 수 있습니다."
    - id: navigationPropertySelector
      type: System.Linq.Expressions.Expression{System.Func{TEntity,System.Object}}
      description: "추가할 수 있습니다."
    - id: relationshipState
      type: System.Data.EntityState
      description: "추가할 수 있습니다."
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "추가할 수 있습니다."
  overload: System.Data.Objects.ObjectStateManager.ChangeRelationshipState<TEntity>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntries(System.Data.EntityState)
  id: GetObjectStateEntries(System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: GetObjectStateEntries(EntityState)
  nameWithType: ObjectStateManager.GetObjectStateEntries(EntityState)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntries(EntityState)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "컬렉션을 반환 <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> 개체 또는 지정 된 상태의 관계에 대 한 개체입니다."
  remarks: "<xref:System.Data.EntityState>연산을 수행 하 여 또는 둘 이상의 한 번의 호출에서 여러 상태에 대 한 상태 항목을 검색할 수 있는 비트 필드 이므로 <xref:System.Data.EntityState>값.</xref:System.Data.EntityState> </xref:System.Data.EntityState>"
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Data.Objects.ObjectStateEntry> GetObjectStateEntries (System.Data.EntityState state);
    parameters:
    - id: state
      type: System.Data.EntityState
      description: "<xref href=&quot;System.Data.EntityState&quot;> </xref> 를 사용 하는 반환 된 필터링 <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> 개체입니다."
    return:
      type: System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry}
      description: "컬렉션 <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> 개체에 주어진 <xref href=&quot;System.Data.EntityState&quot;> </xref>합니다."
  overload: System.Data.Objects.ObjectStateManager.GetObjectStateEntries*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "When <code>state</code> is <xref href=&quot;System.Data.EntityState&quot;></xref>."
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Data.EntityKey)
  id: GetObjectStateEntry(System.Data.EntityKey)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: GetObjectStateEntry(EntityKey)
  nameWithType: ObjectStateManager.GetObjectStateEntry(EntityKey)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(EntityKey)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "반환 된 <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> 지정된 된 키와 개체 또는 관계 항목에 대 한 합니다."
  remarks: "사용 하 여는 <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29>반환 하는 메서드는 <xref:System.Data.Objects.ObjectStateEntry>을 처리할 필요 없는 개체는 <xref:System.InvalidOperationException>GetObjectStateEntry 메서드에 의해 발생 합니다.</xref:System.InvalidOperationException> </xref:System.Data.Objects.ObjectStateEntry> </xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29>"
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example gets the <xref:System.Data.Objects.ObjectStateEntry> for the given <xref:System.Data.EntityKey> from the <xref:System.Data.Objects.ObjectStateManager>. Then it gets the current value of the `SalesOrderHeader.PurchaseOrderNumber` property, changes the property's value, and enumerates through the collection of modified properties.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectStateEntry](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectstateentry)]\n [!code-cs[DP ObjectServices Concepts#ObjectStateEntry](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectstateentry)]"
  syntax:
    content: public System.Data.Objects.ObjectStateEntry GetObjectStateEntry (System.Data.EntityKey key);
    parameters:
    - id: key
      type: System.Data.EntityKey
      description: "The <xref href=&quot;System.Data.EntityKey&quot;></xref>."
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "해당 <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> 에 대 한는 주어진 <xref href=&quot;System.Data.EntityKey&quot;> </xref>합니다."
  overload: System.Data.Objects.ObjectStateManager.GetObjectStateEntry*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>key</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "때 지정 된 <code> key </code> 상태 관리자에서 찾을 수 없습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "지정 된 엔터티가 <xref href=&quot;System.Data.EntityKey&quot;> </xref> 에 존재는 <xref href=&quot;System.Data.Objects.ObjectStateManager&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Object)
  id: GetObjectStateEntry(System.Object)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: GetObjectStateEntry(Object)
  nameWithType: ObjectStateManager.GetObjectStateEntry(Object)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "반환 된 <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> 지정 된 개체입니다."
  remarks: "사용 하 여는 <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Object%2CSystem.Data.Objects.ObjectStateEntry%40%29>반환 하는 메서드는 <xref:System.Data.Objects.ObjectStateEntry>을 처리할 필요 없는 개체는 <xref:System.InvalidOperationException>GetObjectStateEntry 메서드에 의해 발생 합니다.</xref:System.InvalidOperationException> </xref:System.Data.Objects.ObjectStateEntry> </xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Object%2CSystem.Data.Objects.ObjectStateEntry%40%29>"
  syntax:
    content: public System.Data.Objects.ObjectStateEntry GetObjectStateEntry (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "<xref:System.Object>있는 검색 <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> 속한.</xref:System.Object>"
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "해당 <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> <xref:System.Object>.</xref:System.Object> 지정"
  overload: System.Data.Objects.ObjectStateManager.GetObjectStateEntry*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "지정 된 엔터티가 <xref:System.Object>에 존재는 <xref href=&quot;System.Data.Objects.ObjectStateManager&quot;> </xref>.</xref:System.Object>"
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.GetRelationshipManager(System.Object)
  id: GetRelationshipManager(System.Object)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: GetRelationshipManager(Object)
  nameWithType: ObjectStateManager.GetRelationshipManager(Object)
  fullName: System.Data.Objects.ObjectStateManager.GetRelationshipManager(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "반환 된 <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref> 지정된 된 개체에서 사용 되는 합니다."
  remarks: "이 GetRelationshipManager 메서드를 호출 하는 <xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A>메서드를 제외 하 고이 메서드가 반환 하는 대신 예외가 발생 `false`.</xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A>       호출의 <xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A>처리를 방지 하기 위해 메서드는 <xref:System.InvalidOperationException>발생 하는 경우는 <xref:System.Data.Objects.DataClasses.RelationshipManager>제공 된 엔터티에 대 한 반환 될 수 없습니다.</xref:System.Data.Objects.DataClasses.RelationshipManager> </xref:System.InvalidOperationException> </xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A>"
  syntax:
    content: public System.Data.Objects.DataClasses.RelationshipManager GetRelationshipManager (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "반환 될 개체는 <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref>합니다."
    return:
      type: System.Data.Objects.DataClasses.RelationshipManager
      description: "<xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref> 지정 된 개체입니다."
  overload: System.Data.Objects.ObjectStateManager.GetRelationshipManager*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "경우는 <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref> 반환할 수 없는 지정 된 <code> entity </code>합니다."
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.MetadataWorkspace
  id: MetadataWorkspace
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: MetadataWorkspace
  nameWithType: ObjectStateManager.MetadataWorkspace
  fullName: System.Data.Objects.ObjectStateManager.MetadataWorkspace
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "가져옵니다는 <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> 이 상태 관리자와 연결 합니다."
  remarks: "<xref:System.Data.Metadata.Edm.MetadataWorkspace>클래스는 런타임에 한 응용 프로그램의 컨텍스트에서 EDM 엔터티 데이터 모델 () 메타 데이터와 상호 작용 하는 데 사용할 수 있는 중앙 프로그래밍 인터페이스입니다.</xref:System.Data.Metadata.Edm.MetadataWorkspace>"
  syntax:
    content: public System.Data.Metadata.Edm.MetadataWorkspace MetadataWorkspace { get; }
    return:
      type: System.Data.Metadata.Edm.MetadataWorkspace
      description: "<xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> 이 연관 <xref href=&quot;System.Data.Objects.ObjectStateManager&quot;> </xref>합니다."
  overload: System.Data.Objects.ObjectStateManager.MetadataWorkspace*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged
  id: ObjectStateManagerChanged
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ObjectStateManagerChanged
  nameWithType: ObjectStateManager.ObjectStateManagerChanged
  fullName: System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged
  type: Event
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "엔터티 추가 되거나 상태 관리자에서 제거 하는 경우 발생 합니다."
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler ObjectStateManagerChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)
  id: TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
  nameWithType: ObjectStateManager.TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
  fullName: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "해당 검색 하려고 하면 <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> 개체 또는 지정 된 관계에 대 한 <xref href=&quot;System.Data.EntityKey&quot;> </xref>합니다."
  remarks: "TryGetObjectStateEntry를 사용 하 여 반환할는 <xref:System.Data.Objects.ObjectStateEntry>을 처리할 필요 없이 <xref:System.InvalidOperationException>에 의해 발생 된 <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Data.EntityKey%29>메서드.</xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Data.EntityKey%29> </xref:System.InvalidOperationException> </xref:System.Data.Objects.ObjectStateEntry>"
  example:
  - "The examples in this topic are based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832).  \n  \n The example attempts to retrieve the corresponding <xref:System.Data.Objects.ObjectStateEntry> for the given <xref:System.Data.EntityKey>.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectStateManager](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectstatemanager)]\n [!code-cs[DP ObjectServices Concepts#ObjectStateManager](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectstatemanager)]  \n  \n The following example uses the TryGetObjectStateEntry method on the returned <xref:System.Data.Objects.ObjectStateManager> to get an object based on its entity key.  \n  \n [!code-vb[DP ObjectServices Concepts#ApplyItemUpdates](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#applyitemupdates)]\n [!code-cs[DP ObjectServices Concepts#ApplyItemUpdates](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#applyitemupdates)]"
  syntax:
    content: public bool TryGetObjectStateEntry (System.Data.EntityKey key, out System.Data.Objects.ObjectStateEntry entry);
    parameters:
    - id: key
      type: System.Data.EntityKey
      description: "주어진 <xref href=&quot;System.Data.EntityKey&quot;> </xref>합니다."
    - id: entry
      type: System.Data.Objects.ObjectStateEntry
      description: "이 메서드가 반환 될 때를 포함 한 <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> 에 대 한는 주어진 <xref href=&quot;System.Data.EntityKey&quot;> </xref> 이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다."
    return:
      type: System.Boolean
      description: "부울 값이 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 해당 하는 경우 <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> 에 대 한는 주어진 <xref href=&quot;System.Data.EntityKey&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)에 값이 제공 <code> key </code>합니다."
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)
  id: TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: TryGetObjectStateEntry(Object,ObjectStateEntry)
  nameWithType: ObjectStateManager.TryGetObjectStateEntry(Object,ObjectStateEntry)
  fullName: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(Object,ObjectStateEntry)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "해당 검색 하려고 하면 <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> <xref:System.Object>.</xref:System.Object> 지정"
  remarks: "TryGetObjectStateEntry 메서드를 사용 하 여 반환 하는 <xref:System.Data.Objects.ObjectStateEntry>을 처리할 필요 없이 <xref:System.InvalidOperationException>에 의해 발생 된 <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Object%29>메서드.</xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Object%29> </xref:System.InvalidOperationException> </xref:System.Data.Objects.ObjectStateEntry>"
  syntax:
    content: public bool TryGetObjectStateEntry (object entity, out System.Data.Objects.ObjectStateEntry entry);
    parameters:
    - id: entity
      type: System.Object
      description: "<xref:System.Object>있는 검색 <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> 속한.</xref:System.Object>"
    - id: entry
      type: System.Data.Objects.ObjectStateEntry
      description: "이 메서드가 반환 될 때 포함 된 <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> 에 대 한는 주어진 <xref href=&quot;System.Data.EntityKey&quot;> </xref> 이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다."
    return:
      type: System.Boolean
      description: "부울 값이 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 해당 하는 경우 <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> 지정 된 개체입니다; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)
  id: TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: TryGetRelationshipManager(Object,RelationshipManager)
  nameWithType: ObjectStateManager.TryGetRelationshipManager(Object,RelationshipManager)
  fullName: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(Object,RelationshipManager)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "반환 된 <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref> 지정된 된 개체에서 사용 되는 합니다."
  remarks: "<xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A>메서드를 가져올를 사용 하는 <xref:System.Data.Objects.DataClasses.RelationshipManager>는 지 속성을 무시 하는 개체에 대 한.</xref:System.Data.Objects.DataClasses.RelationshipManager> </xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A> 개체 구현 하는 경우 <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>형식을 상속 하거나 <xref:System.Data.Objects.DataClasses.EntityObject>, <xref:System.Data.Objects.DataClasses.RelationshipManager>에서 액세스 되는 <xref:System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager%2A>속성.</xref:System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager%2A> </xref:System.Data.Objects.DataClasses.RelationshipManager> </xref:System.Data.Objects.DataClasses.EntityObject> </xref:System.Data.Objects.DataClasses.IEntityWithRelationships>       <xref:System.Data.Objects.DataClasses.RelationshipManager>에 개체가 있으면 반환 될 수 없습니다는 <xref:System.Data.EntityState>상태.</xref:System.Data.EntityState> </xref:System.Data.Objects.DataClasses.RelationshipManager>       이 TryGetRelationshipManager 메서드를 호출 하는 <xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A>메서드를 제외 하 고이 메서드가 반환 `false` 예외를 발생 시키는 대신.</xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A>"
  syntax:
    content: public bool TryGetRelationshipManager (object entity, out System.Data.Objects.DataClasses.RelationshipManager relationshipManager);
    parameters:
    - id: entity
      type: System.Object
      description: "반환 될 개체는 <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref>합니다."
    - id: relationshipManager
      type: System.Data.Objects.DataClasses.RelationshipManager
      description: "이 메서드가 반환 될 때 포함 된 <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref> 에 대 한는 `entity`합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref> 인스턴스가 반환 되었습니다. 제공 된 작업에 대 한 <code> entity </code>고, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.Objects.ObjectStateManager.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ObjectStateManager(MetadataWorkspace)
  nameWithType: ObjectStateManager.ObjectStateManager(MetadataWorkspace)
  fullName: System.Data.Objects.ObjectStateManager.ObjectStateManager(MetadataWorkspace)
- uid: System.Data.Metadata.Edm.MetadataWorkspace
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: MetadataWorkspace
  nameWithType: MetadataWorkspace
  fullName: System.Data.Metadata.Edm.MetadataWorkspace
- uid: System.Data.Objects.ObjectStateManager.ChangeObjectState(System.Object,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeObjectState(Object,EntityState)
  nameWithType: ObjectStateManager.ChangeObjectState(Object,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeObjectState(Object,EntityState)
- uid: System.Data.Objects.ObjectStateEntry
  parent: System.Data.Objects
  isExternal: false
  name: ObjectStateEntry
  nameWithType: ObjectStateEntry
  fullName: System.Data.Objects.ObjectStateEntry
- uid: System.Data.EntityState
  parent: System.Data
  isExternal: false
  name: EntityState
  nameWithType: EntityState
  fullName: System.Data.EntityState
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeRelationshipState(Object,Object,String,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(Object,Object,String,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(Object,Object,String,EntityState)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeRelationshipState(Object,Object,String,String,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(Object,Object,String,String,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(Object,Object,String,String,EntityState)
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
- uid: TEntity
  isExternal: true
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: System.Linq.Expressions.Expression{System.Func{TEntity,System.Object}}
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression<Func<TEntity,Object>>
  nameWithType: Expression<Func<TEntity,Object>>
  fullName: System.Linq.Expressions.Expression<System.Func<TEntity,System.Object>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression<System.Func<TEntity,System.Object>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<TEntity,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TEntity
    name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntries(System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetObjectStateEntries(EntityState)
  nameWithType: ObjectStateManager.GetObjectStateEntries(EntityState)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntries(EntityState)
- uid: System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ObjectStateEntry>
  nameWithType: IEnumerable<ObjectStateEntry>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Objects.ObjectStateEntry>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Data.Objects.ObjectStateEntry>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Objects.ObjectStateEntry
    name: ObjectStateEntry
    nameWithType: ObjectStateEntry
    fullName: ObjectStateEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Data.EntityKey)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetObjectStateEntry(EntityKey)
  nameWithType: ObjectStateManager.GetObjectStateEntry(EntityKey)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(EntityKey)
- uid: System.Data.EntityKey
  parent: System.Data
  isExternal: false
  name: EntityKey
  nameWithType: EntityKey
  fullName: System.Data.EntityKey
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Object)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetObjectStateEntry(Object)
  nameWithType: ObjectStateManager.GetObjectStateEntry(Object)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(Object)
- uid: System.Data.Objects.ObjectStateManager.GetRelationshipManager(System.Object)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetRelationshipManager(Object)
  nameWithType: ObjectStateManager.GetRelationshipManager(Object)
  fullName: System.Data.Objects.ObjectStateManager.GetRelationshipManager(Object)
- uid: System.Data.Objects.DataClasses.RelationshipManager
  parent: System.Data.Objects.DataClasses
  isExternal: false
  name: RelationshipManager
  nameWithType: RelationshipManager
  fullName: System.Data.Objects.DataClasses.RelationshipManager
- uid: System.Data.Objects.ObjectStateManager.MetadataWorkspace
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: MetadataWorkspace
  nameWithType: ObjectStateManager.MetadataWorkspace
  fullName: System.Data.Objects.ObjectStateManager.MetadataWorkspace
- uid: System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ObjectStateManagerChanged
  nameWithType: ObjectStateManager.ObjectStateManagerChanged
  fullName: System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
  nameWithType: ObjectStateManager.TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
  fullName: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: TryGetObjectStateEntry(Object,ObjectStateEntry)
  nameWithType: ObjectStateManager.TryGetObjectStateEntry(Object,ObjectStateEntry)
  fullName: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(Object,ObjectStateEntry)
- uid: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: TryGetRelationshipManager(Object,RelationshipManager)
  nameWithType: ObjectStateManager.TryGetRelationshipManager(Object,RelationshipManager)
  fullName: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(Object,RelationshipManager)
- uid: System.Data.Objects.ObjectStateManager.#ctor*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ObjectStateManager
  nameWithType: ObjectStateManager.ObjectStateManager
- uid: System.Data.Objects.ObjectStateManager.ChangeObjectState*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeObjectState
  nameWithType: ObjectStateManager.ChangeObjectState
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeRelationshipState
  nameWithType: ObjectStateManager.ChangeRelationshipState
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState<TEntity>*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeRelationshipState<TEntity>
  nameWithType: ObjectStateManager.ChangeRelationshipState<TEntity>
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntries*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetObjectStateEntries
  nameWithType: ObjectStateManager.GetObjectStateEntries
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntry*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetObjectStateEntry
  nameWithType: ObjectStateManager.GetObjectStateEntry
- uid: System.Data.Objects.ObjectStateManager.GetRelationshipManager*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetRelationshipManager
  nameWithType: ObjectStateManager.GetRelationshipManager
- uid: System.Data.Objects.ObjectStateManager.MetadataWorkspace*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: MetadataWorkspace
  nameWithType: ObjectStateManager.MetadataWorkspace
- uid: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: TryGetObjectStateEntry
  nameWithType: ObjectStateManager.TryGetObjectStateEntry
- uid: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: TryGetRelationshipManager
  nameWithType: ObjectStateManager.TryGetRelationshipManager
