### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.DesignerLoader
  id: DesignerLoader
  children:
  - System.ComponentModel.Design.Serialization.DesignerLoader.#ctor
  - System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)
  - System.ComponentModel.Design.Serialization.DesignerLoader.Dispose
  - System.ComponentModel.Design.Serialization.DesignerLoader.Flush
  - System.ComponentModel.Design.Serialization.DesignerLoader.Loading
  langs:
  - csharp
  name: DesignerLoader
  nameWithType: DesignerLoader
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader
  type: Class
  summary: "사용자 지정 디자이너 로더를 구현 하는 데 사용할 수 있는 기본 디자이너 로더 인터페이스를 제공 합니다."
  remarks: "DesignerLoader는 디자이너 및 디자이너 구성 요소 사용자 지정 로딩을 지원 하기 위해 구현할 수 있습니다. 또한 디자이너 로더는 후 문서 로딩 시 로더가 사용한 저장소에 다시 열려 있는 문서에 변경 내용을 기록 합니다는 <xref:System.ComponentModel.Design.Serialization.DesignerLoader.Flush%2A>메서드를 호출 합니다.</xref:System.ComponentModel.Design.Serialization.DesignerLoader.Flush%2A>       기본적으로 Visual Studio 개발 환경에서는 다양 한 기본 디자이너 프로젝트를 로드할 수 있는 DesignerLoader 자체를 만듭니다. 사용자 지정 디자이너 로더를 만들려면에서 상속 하 고 추상 DesignerLoader 클래스를 구현 해야 합니다. 직접 생성자가 없는 공개 하는 대로 DesignerLoader를 인스턴스화할 수 없습니다.       때 <xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A>은 호출 디자이너 로더 디자인 문서를 로드, 사용해는 디자이너 화면 표시는 <xref:System.ComponentModel.Design.IDesignerHost>인터페이스 및 호출 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A>에 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost>완료 한 후에 인터페이스.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost> </xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A> </xref:System.ComponentModel.Design.IDesignerHost> </xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A> <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost>구현 <xref:System.ComponentModel.Design.IDesignerHost>.</xref:System.ComponentModel.Design.IDesignerHost> 를 구현 하는 동일한 클래스 일반적으로는</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class DesignerLoader
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  langs:
  - csharp
  name: DesignerLoader()
  nameWithType: DesignerLoader.DesignerLoader()
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.DesignerLoader()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerLoader&quot;> </xref> 클래스입니다."
  syntax:
    content: protected DesignerLoader ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.DesignerLoader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)
  id: BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  langs:
  - csharp
  name: BeginLoad(IDesignerLoaderHost)
  nameWithType: DesignerLoader.BeginLoad(IDesignerLoaderHost)
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad(IDesignerLoaderHost)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "디자이너를 로드 되기 시작 합니다."
  remarks: "<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost>에 전달 되는 `host` 매개 변수는 일반적으로 디자이너 호스트와 같은 개체입니다.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost> 로더 호스트에이 참조를 통해 디자이너 로더는 디자인 문서를 다시 로드할 수 있으며 디자인 문서를 로드 완료 되었음을 나타냅니다."
  syntax:
    content: public abstract void BeginLoad (System.ComponentModel.Design.Serialization.IDesignerLoaderHost host);
    parameters:
    - id: host
      type: System.ComponentModel.Design.Serialization.IDesignerLoaderHost
      description: "이 로더는 구성 요소를 로드 하는 로더 호스트입니다."
  overload: System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.Dispose
  id: Dispose
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  langs:
  - csharp
  name: Dispose()
  nameWithType: DesignerLoader.Dispose()
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "사용 하는 모든 리소스를 해제는 <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerLoader&quot;> </xref>합니다."
  remarks: "<xref:System.ComponentModel.Design.Serialization.DesignerLoader>.</xref:System.ComponentModel.Design.Serialization.DesignerLoader> 를 사용 하 여 작업을 마쳤으면 Dispose를 호출 합니다. Dispose 메서드는 <xref:System.ComponentModel.Design.Serialization.DesignerLoader>불안정 한 상태가.</xref:System.ComponentModel.Design.Serialization.DesignerLoader> Dispose를 호출한 후에 대 한 모든 참조를 해제 해야는 <xref:System.ComponentModel.Design.Serialization.DesignerLoader>가비지 수집기는 메모리를 회수할 수 있도록 하는 <xref:System.ComponentModel.Design.Serialization.DesignerLoader>차지한.</xref:System.ComponentModel.Design.Serialization.DesignerLoader> </xref:System.ComponentModel.Design.Serialization.DesignerLoader> 자세한 내용은 참조 [관리 되지 않는 리소스 정리](~/add/includes/ajax-current-ext-md.md) 및 [Dispose 메서드를 구현](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > <xref:System.ComponentModel.Design.Serialization.DesignerLoader>.</xref:System.ComponentModel.Design.Serialization.DesignerLoader> 에 대 한 마지막 참조를 해제 하기 전에 항상 호출 삭제 사용 중인 리소스가 가비지 수집기 호출할 때까지 해제 되지 것입니다 그렇지 않은 경우는 <xref:System.ComponentModel.Design.Serialization.DesignerLoader>개체의 `Finalize` 메서드.</xref:System.ComponentModel.Design.Serialization.DesignerLoader>"
  syntax:
    content: public abstract void Dispose ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.DesignerLoader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.Flush
  id: Flush
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  langs:
  - csharp
  name: Flush()
  nameWithType: DesignerLoader.Flush()
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.Flush()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "캐시 된 디자이너에서 로드 된 위치에 대 한 변경을 씁니다."
  remarks: "디자이너 호스트는이 메서드는 문서의 변경 내용을 디자이너 로더에 의해 저장 된를 주기적으로 호출 합니다. 이 메서드는 성능 향상을 위해 비동기 쓰기 체계를 구현 하려면 디자이너 로더를 사용 합니다. 이 메서드의 기본 구현은 아무 작업도 수행합니다."
  syntax:
    content: public virtual void Flush ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.DesignerLoader.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.Loading
  id: Loading
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  langs:
  - csharp
  name: Loading
  nameWithType: DesignerLoader.Loading
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.Loading
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "로더 현재 문서를 로드 하는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public virtual bool Loading { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>로더는 현재; 문서를 로드 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.Design.Serialization.DesignerLoader.Loading*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.#ctor
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: DesignerLoader()
  nameWithType: DesignerLoader.DesignerLoader()
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.DesignerLoader()
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: BeginLoad(IDesignerLoaderHost)
  nameWithType: DesignerLoader.BeginLoad(IDesignerLoaderHost)
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad(IDesignerLoaderHost)
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderHost
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: IDesignerLoaderHost
  nameWithType: IDesignerLoaderHost
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderHost
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.Dispose
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: Dispose()
  nameWithType: DesignerLoader.Dispose()
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.Dispose()
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.Flush
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: Flush()
  nameWithType: DesignerLoader.Flush()
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.Flush()
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.Loading
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: Loading
  nameWithType: DesignerLoader.Loading
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.Loading
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.#ctor*
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: DesignerLoader
  nameWithType: DesignerLoader.DesignerLoader
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad*
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: BeginLoad
  nameWithType: DesignerLoader.BeginLoad
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.Dispose*
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: Dispose
  nameWithType: DesignerLoader.Dispose
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.Flush*
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: Flush
  nameWithType: DesignerLoader.Flush
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.Loading*
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: Loading
  nameWithType: DesignerLoader.Loading
