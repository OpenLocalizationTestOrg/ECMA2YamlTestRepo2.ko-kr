### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.FileDialog
  id: FileDialog
  children:
  - System.Windows.Forms.FileDialog.AddExtension
  - System.Windows.Forms.FileDialog.AutoUpgradeEnabled
  - System.Windows.Forms.FileDialog.CheckFileExists
  - System.Windows.Forms.FileDialog.CheckPathExists
  - System.Windows.Forms.FileDialog.CustomPlaces
  - System.Windows.Forms.FileDialog.DefaultExt
  - System.Windows.Forms.FileDialog.DereferenceLinks
  - System.Windows.Forms.FileDialog.EventFileOk
  - System.Windows.Forms.FileDialog.FileName
  - System.Windows.Forms.FileDialog.FileNames
  - System.Windows.Forms.FileDialog.FileOk
  - System.Windows.Forms.FileDialog.Filter
  - System.Windows.Forms.FileDialog.FilterIndex
  - System.Windows.Forms.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  - System.Windows.Forms.FileDialog.InitialDirectory
  - System.Windows.Forms.FileDialog.Instance
  - System.Windows.Forms.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  - System.Windows.Forms.FileDialog.Options
  - System.Windows.Forms.FileDialog.Reset
  - System.Windows.Forms.FileDialog.RestoreDirectory
  - System.Windows.Forms.FileDialog.RunDialog(System.IntPtr)
  - System.Windows.Forms.FileDialog.ShowHelp
  - System.Windows.Forms.FileDialog.SupportMultiDottedExtensions
  - System.Windows.Forms.FileDialog.Title
  - System.Windows.Forms.FileDialog.ToString
  - System.Windows.Forms.FileDialog.ValidateNames
  langs:
  - csharp
  name: FileDialog
  nameWithType: FileDialog
  fullName: System.Windows.Forms.FileDialog
  type: Class
  summary: "사용자 파일을 선택할 수 있는 대화 상자가 표시 됩니다."
  remarks: "FileDialog 클래스는 추상 클래스에 대 한 일반적인 동작을 포함 하는 <xref:System.Windows.Forms.OpenFileDialog>및 <xref:System.Windows.Forms.SaveFileDialog>클래스.</xref:System.Windows.Forms.SaveFileDialog> </xref:System.Windows.Forms.OpenFileDialog> 이러한 두 클래스에 공통적인 동작을 포함 하지만 직접 사용할 수 없습니다. FileDialog의 인스턴스를 만들 수 없습니다. 클래스는 public으로 선언 하지만에서 상속할 수, 내부 추상 메서드가 포함 되어 있어야 합니다. <xref:System.Windows.Forms.OpenFileDialog>또는 <xref:System.Windows.Forms.SaveFileDialog>.</xref:System.Windows.Forms.SaveFileDialog> </xref:System.Windows.Forms.OpenFileDialog> 사용을 선택 하거나 파일을 저장 하는 대화 상자를 만들려면       FileDialog는 모달 대화 상자. 따라서 표시 된 사용자가 파일을 선택 될 때까지 응용 프로그램의 나머지를 차단 됩니다. 대화 상자 모달 형식으로 표시 되 면 (키보드나 마우스 클릭)을 입력 하지 않고 대화 상자에 있는 개체를 제외 하 고 발생할 수 있습니다. 프로그램 숨기 거 나 닫기를 호출 프로그램에 입력 하기 전에 대화 상자 (일반적으로 사용자의 일부 동작에 대 한 응답)에서 발생할 수 있습니다.      > [!CAUTION] >와 같은, FileDialog에서 파생 된 클래스를 사용 하는 경우 <xref:System.Windows.Forms.OpenFileDialog>및 <xref:System.Windows.Forms.SaveFileDialog>, 절대 경로 포함 하는 문자열 리터럴을 사용 하지 마십시오.</xref:System.Windows.Forms.SaveFileDialog> </xref:System.Windows.Forms.OpenFileDialog> 다음 표에 설명 된 방법 중 하나 이상을 사용 하 여 경로 동적으로 가져오는 대신 합니다.       사용자가 파일을 대신 폴더를 선택할 수 있도록 하려는 경우 사용 <xref:System.Windows.Forms.FolderBrowserDialog>.</xref:System.Windows.Forms.FolderBrowserDialog>       응용 프로그램, 응용 프로그램와 관련 된 데이터 저장 되는 방법 및 파일 시스템에 액세스 하기 위한 이유의 유형에 따라 여러 가지 가능한 방법으로 디렉터리 경로 만들 수 있습니다. 다음 표에서 경로 동적으로 작성 하는 기술을 보여 줍니다.      | 경로 또는 프로그램 범주 | 클래스 및 멤버를 사용 하 여 |   |------------------------------|------------------------------|   | 프로그램 파일, 내 문서, 데스크톱 등과 같은 표준 Windows 경로 | <xref:System.Environment?displayProperty=fullName>클래스는 <xref:System.Environment.SystemDirectory%2A>, 등의 정적 메서드를 통해 이들에 대 한 가장 완벽 한 소스 또는 열거 값을는 <xref:System.Environment.SpecialFolder>중 하나를 사용 하 여 <xref:System.Environment.GetFolderPath%2A>메서드를 통과 합니다. |   | 현재 응용 프로그램 경로 관련 된 | <xref:System.Windows.Forms.Application>클래스에 정적 멤버와 같은 특정 경로 가져오려면 <xref:System.Windows.Forms.Application.StartupPath%2A>, <xref:System.Windows.Forms.Application.ExecutablePath%2A>, <xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A>, 및 <xref:System.Windows.Forms.Application.CommonAppDataPath%2A>.</xref:System.Windows.Forms.Application.CommonAppDataPath%2A> </xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A> </xref:System.Windows.Forms.Application.ExecutablePath%2A> </xref:System.Windows.Forms.Application.StartupPath%2A> </xref:System.Windows.Forms.Application>  </xref:System.Environment.GetFolderPath%2A></xref:System.Environment.SpecialFolder> </xref:System.Environment.SystemDirectory%2A> </xref:System.Environment?displayProperty=fullName><br /><br /> <xref:System.IO.Path.GetTempPath%2A>의 메서드는 <xref:System.IO.Path?displayProperty=fullName>임시 폴더의 경로 반환 합니다.</xref:System.IO.Path?displayProperty=fullName> </xref:System.IO.Path.GetTempPath%2A><br /><br /> <xref:System.IO.Directory.GetCurrentDirectory%2A>의 메서드는 <xref:System.IO.Directory?displayProperty=fullName>클래스 응용 프로그램의 현재 실행 중인 디렉터리를 반환 합니다.</xref:System.IO.Directory?displayProperty=fullName> </xref:System.IO.Directory.GetCurrentDirectory%2A><br /><br /> <xref:System.IO.DriveInfo>클래스의 <xref:System.IO.DriveInfo.RootDirectory%2A>속성은 지정 된 드라이브의 루트 디렉터리를 나타냅니다. |   | 응용 프로그램 설정으로 저장 된 경로 | <xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase> 에서 파생 된 래퍼 클래스의 해당 응용 프로그램 설정 속성 액세스 </xref:System.IO.DriveInfo.RootDirectory%2A></xref:System.IO.DriveInfo> 자세한 내용은 참조 [Windows Forms에 대 한 응용 프로그램 설정](~/add/includes/ajax-current-ext-md.md). |   | 레지스트리 저장소 | 일부 응용 프로그램 디렉터리 정보를 레지스트리에 저장 합니다. <xref:System.Windows.Forms.Application>클래스에는 <xref:System.Windows.Forms.Application.CommonAppDataPath%2A> <xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A>하는 속성과 <xref:Microsoft.Win32.RegistryKey>값으로 확인 합니다. |   | ClickOnce 응용 프로그램 | ClickOnce 응용 프로그램에 사용 하 여 <xref:System.Windows.Forms.Application>클래스 멤버와 같은 <xref:System.Windows.Forms.Application.UserAppDataPath%2A>는 ClickOnce 데이터 디렉터리에 대 한 포인터를 반환 합니다.</xref:System.Windows.Forms.Application.UserAppDataPath%2A> </xref:System.Windows.Forms.Application> </xref:Microsoft.Win32.RegistryKey> </xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A> </xref:System.Windows.Forms.Application.CommonAppDataPath%2A> </xref:System.Windows.Forms.Application> 자세한 내용은 참조 [로컬 액세스 및 ClickOnce 응용 프로그램의 원격 데이터](~/add/includes/ajax-current-ext-md.md). |   | 국가별 응용 프로그램 | 국가별 응용 프로그램에 대 한 상대 경로 부분 문자열의 리소스 응용 프로그램에서 <xref:System.Resources.ResourceReader?displayProperty=fullName>클래스</xref:System.Resources.ResourceReader?displayProperty=fullName> 를 사용 하 여 검색 전역화 및 지역화 하는 방법에 대 한 자세한 내용은 항목을 참조 하십시오. [전역화 및 지역화](~/add/includes/ajax-current-ext-md.md). |       전체 경로 수를 작성할 수 있는지 하나 이상 설명한 기술을 사용 하 여 확인 합니다. 예를 들어는 <xref:System.Environment.GetFolderPath%2A>메서드 내 문서 폴더의 경로를 가져오는 데 사용할 수 있습니다 다음 응용 프로그램 설정 추가 예를 사용할 수 있습니다.</xref:System.Environment.GetFolderPath%2A>       <xref:System.IO.Path?displayProperty=fullName>반면 절대 곡선과 상대 경로 문자열 조작을 지원 하기 위해 정적 멤버를 포함 하는 클래스는 <xref:System.IO.File?displayProperty=fullName>및 <xref:System.IO.Directory?displayProperty=fullName>클래스에는 실제로 각각 파일 및 디렉터리를 조작 하는 정적 멤버.</xref:System.IO.Directory?displayProperty=fullName> </xref:System.IO.File?displayProperty=fullName> </xref:System.IO.Path?displayProperty=fullName>      > [!IMPORTANT] > 응용 프로그램의 사용자는 FileDialog에서 폴더를 변경할 경우 응용 프로그램에 대 한 현재 작업 디렉터리는 FileDialog에 지정 된 위치에 설정 되어 있습니다. 이 방지 하려면 설정는 <xref:System.Windows.Forms.FileDialog.RestoreDirectory%2A>속성을 `true`.</xref:System.Windows.Forms.FileDialog.RestoreDirectory%2A>"
  example:
  - "The following code example uses the <xref:System.Windows.Forms.OpenFileDialog> implementation of FileDialog and illustrates creating, setting of properties, and showing the dialog box. The example uses the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> method to display the dialog box and return the <xref:System.Windows.Forms.DialogResult>. The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and the <xref:System.IO> namespace added to it.  \n  \n [!code-cpp[Classic OpenFileDialog Example#1](~/add/codesnippet/cpp/t-system.windows.forms.f_8_1.cpp)]\n [!code-cs[Classic OpenFileDialog Example#1](~/add/codesnippet/csharp/t-system.windows.forms.f_8_1.cs)]\n [!code-vb[Classic OpenFileDialog Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.f_8_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("FileOk")]

      [System.ComponentModel.DefaultProperty("FileName")]

      public abstract class FileDialog : System.Windows.Forms.CommonDialog
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Windows.Forms.CommonDialog
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Windows.Forms.CommonDialog.HelpRequest
  - System.Windows.Forms.CommonDialog.OnHelpRequest(System.EventArgs)
  - System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  - System.Windows.Forms.CommonDialog.ShowDialog
  - System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)
  - System.Windows.Forms.CommonDialog.Tag
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.AddExtension
  id: AddExtension
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: AddExtension
  nameWithType: FileDialog.AddExtension
  fullName: System.Windows.Forms.FileDialog.AddExtension
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "대화 상자에 자동으로 추가할지 확장 파일 이름 확장명을 생략 하는 경우를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "파일 이름에 추가 하는 확장의 값과 현재 선택한 파일 필터에 따라 달라 집니다는 <xref:System.Windows.Forms.FileDialog.CheckFileExists%2A>속성.</xref:System.Windows.Forms.FileDialog.CheckFileExists%2A>       경우는 <xref:System.Windows.Forms.FileDialog.CheckFileExists%2A>속성은 `true`, 기존 파일을 일치 하는 현재 파일 필터에서 첫 번째 확장 프로그램을 추가 하는 대화 상자.</xref:System.Windows.Forms.FileDialog.CheckFileExists%2A> 대화 상자에 지정 된 확장명 추가 파일이 현재 파일 필터와 일치 하는 경우는 <xref:System.Windows.Forms.FileDialog.DefaultExt%2A>속성.</xref:System.Windows.Forms.FileDialog.DefaultExt%2A>       경우는 <xref:System.Windows.Forms.FileDialog.CheckFileExists%2A>속성은 `false`, 대화 상자에서 현재 파일 필터는 첫 번째 유효한 파일 이름 확장명을 추가 합니다.</xref:System.Windows.Forms.FileDialog.CheckFileExists%2A> 현재 파일 필터에 없는 파일 이름 확장명, 대화 상자에 지정 된 확장명 추가 <xref:System.Windows.Forms.FileDialog.DefaultExt%2A>속성.</xref:System.Windows.Forms.FileDialog.DefaultExt%2A>"
  syntax:
    content: public bool AddExtension { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>대화 상자가; 확장명을 생략 하는 경우 파일 이름에 확장명을 추가 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.FileDialog.AddExtension*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.AutoUpgradeEnabled
  id: AutoUpgradeEnabled
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: AutoUpgradeEnabled
  nameWithType: FileDialog.AutoUpgradeEnabled
  fullName: System.Windows.Forms.FileDialog.AutoUpgradeEnabled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "나타내는 값을 가져오거나 여부이 <xref href=&quot;System.Windows.Forms.FileDialog&quot;> </xref> 인스턴스 자동으로 업그레이드 해야 모양 및 동작에서 실행할 때 [!INCLUDE[wiprlhext](~/add/includes/wiprlhext-md.md)]합니다."
  remarks: "이 속성이 `false`, <xref:System.Windows.Forms.FileDialog>클래스는 [!INCLUDE[winxp](~/add/includes/winxp-md.md)]-에 모양 및 동작 스타일 [!INCLUDE[wiprlhext](~/add/includes/wiprlhext-md.md)].</xref:System.Windows.Forms.FileDialog>       [!INCLUDE[winxp](~/add/includes/winxp-md.md)],이 속성이 아무런 영향도 주지가 없습니다."
  syntax:
    content: public bool AutoUpgradeEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 경우 <xref href=&quot;System.Windows.Forms.FileDialog&quot;> </xref> 인스턴스 자동으로 업그레이드 해야 모양 및 동작에서 실행할 때 [!INCLUDE[wiprlhext](~/add/includes/wiprlhext-md.md)], 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.FileDialog.AutoUpgradeEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.CheckFileExists
  id: CheckFileExists
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: CheckFileExists
  nameWithType: FileDialog.CheckFileExists
  fullName: System.Windows.Forms.FileDialog.CheckFileExists
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "존재 하지 않는 파일 이름을 지정할 경우 대화 상자에 경고가 표시 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "기본값은 `true` 상속 하는 대 한 <xref:System.Windows.Forms.OpenFileDialog>및 `false` 상속 <xref:System.Windows.Forms.SaveFileDialog>.</xref:System.Windows.Forms.SaveFileDialog> </xref:System.Windows.Forms.OpenFileDialog>"
  syntax:
    content: public virtual bool CheckFileExists { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>존재 하지 않는; 파일 이름을 지정할 경우 대화 상자에 경고가 표시 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.FileDialog.CheckFileExists*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.CheckPathExists
  id: CheckPathExists
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: CheckPathExists
  nameWithType: FileDialog.CheckPathExists
  fullName: System.Windows.Forms.FileDialog.CheckPathExists
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "존재 하지 않는 경로 지정할 경우 대화 상자에 경고가 표시 여부를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public bool CheckPathExists { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>존재 하지 않는; 경로 지정할 때 대화 상자에 경고가 표시 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.FileDialog.CheckPathExists*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.CustomPlaces
  id: CustomPlaces
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: CustomPlaces
  nameWithType: FileDialog.CustomPlaces
  fullName: System.Windows.Forms.FileDialog.CustomPlaces
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 대 한 사용자 지정 위치 컬렉션을 가져옵니다 <xref href=&quot;System.Windows.Forms.FileDialog&quot;> </xref> 인스턴스."
  remarks: "[!INCLUDE[winxp](~/add/includes/winxp-md.md)],이 속성이 아무런 영향도 주지가 없습니다."
  example:
  - "The following code example demonstrates how to use the CustomPlaces collection. To run this example, paste the following code into a Windows Form and call `InitializeDialogAndButton` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \n  \n [!code-vb[System.Windows.Forms.FileDialogCommonPlaces#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_53_1.vb)]\n [!code-cs[System.Windows.Forms.FileDialogCommonPlaces#1](~/add/codesnippet/csharp/p-system.windows.forms.f_53_1.cs)]"
  syntax:
    content: public System.Windows.Forms.FileDialogCustomPlacesCollection CustomPlaces { get; }
    return:
      type: System.Windows.Forms.FileDialogCustomPlacesCollection
      description: "사용자 지정 배치이 대 한 컬렉션 <xref href=&quot;System.Windows.Forms.FileDialog&quot;> </xref> 인스턴스."
  overload: System.Windows.Forms.FileDialog.CustomPlaces*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.DefaultExt
  id: DefaultExt
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: DefaultExt
  nameWithType: FileDialog.DefaultExt
  fullName: System.Windows.Forms.FileDialog.DefaultExt
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "기본 파일 이름 확장명을 가져오거나 설정 합니다."
  remarks: "응용 프로그램의 사용자가 확장명 없이 파일 이름을 지정 하는 경우는 <xref:System.Windows.Forms.FileDialog>파일 이름에 확장을 추가 합니다.</xref:System.Windows.Forms.FileDialog> 사용 되는 확장명에 따라 결정 되는 <xref:System.Windows.Forms.FileDialog.Filter%2A>및 DefaultExt 속성.</xref:System.Windows.Forms.FileDialog.Filter%2A> 필터를 선택한 경우에 <xref:System.Windows.Forms.FileDialog>필터 확장을 지정 하 고 다음 해당 확장이 사용 됩니다.</xref:System.Windows.Forms.FileDialog> 필터 선택 DefaultExt 속성에 지정 된 확장명 사용은 확장을 대신 와일드 카드를 사용 합니다."
  example:
  - "The following code example demonstrates using the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A?displayProperty=fullName> and <xref:System.Windows.Forms.RichTextBox.LoadFile%2A?displayProperty=fullName> methods with streams. It also demonstrates using the <xref:System.Windows.Forms.FileDialog.FileName%2A>, DefaultExt, <xref:System.Windows.Forms.SaveFileDialog.CreatePrompt%2A?displayProperty=fullName>, and <xref:System.Windows.Forms.SaveFileDialog.OverwritePrompt%2A?displayProperty=fullName> members.  \n  \n This is a complete example that is ready to run when you copy it to your project.  \n  \n [!code-cs[System.Windows.Forms.RichTextBoxSaveFile#1](~/add/codesnippet/csharp/p-system.windows.forms.f_16_1.cs)]\n [!code-vb[System.Windows.Forms.RichTextBoxSaveFile#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_16_1.vb)]\n [!code-cpp[System.Windows.Forms.RichTextBoxSaveFile#1](~/add/codesnippet/cpp/p-system.windows.forms.f_16_1.cpp)]"
  syntax:
    content: public string DefaultExt { get; set; }
    return:
      type: System.String
      description: "기본 파일 이름 확장명입니다. 반환 된 문자열의 기간을 포함 하지 않습니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Windows.Forms.FileDialog.DefaultExt*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.DereferenceLinks
  id: DereferenceLinks
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: DereferenceLinks
  nameWithType: FileDialog.DereferenceLinks
  fullName: System.Windows.Forms.FileDialog.DereferenceLinks
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "대화 상자는 바로 가기로 참조 되는 파일의 위치를 반환 하는지 여부 또는 바로 가기 (.lnk)의 위치를 반환 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public bool DereferenceLinks { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>대화 상자에서 바로 가기가 참조 하는 파일의 위치를 반환 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.FileDialog.DereferenceLinks*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.EventFileOk
  id: EventFileOk
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: EventFileOk
  nameWithType: FileDialog.EventFileOk
  fullName: System.Windows.Forms.FileDialog.EventFileOk
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "소유 하는 <xref href=&quot;System.Windows.Forms.FileDialog.FileOk&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected static readonly object EventFileOk;
    return:
      type: System.Object
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.FileName
  id: FileName
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: FileName
  nameWithType: FileDialog.FileName
  fullName: System.Windows.Forms.FileDialog.FileName
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "파일 대화 상자에서 선택한 파일 이름을 포함 하는 문자열을 가져오거나 설정 합니다."
  remarks: "파일 이름에는 파일 경로 확장명을 모두 포함 됩니다. 이 메서드는 빈 문자열을 반환 없는 파일을 선택 하는 경우 (&quot;&quot;).       사용 될 경우는 <xref:System.Windows.Forms.SaveFileDialog>클래스,이 속성은 나타냅니다 저장;에서 사용 될 경우 파일의 <xref:System.Windows.Forms.OpenFileDialog>클래스, 열리는 파일 나타냅니다.</xref:System.Windows.Forms.OpenFileDialog> </xref:System.Windows.Forms.SaveFileDialog>       이 속성에는 하나의 선택 된 파일의 이름 수만 있습니다. <xref:System.Windows.Forms.FileDialog.FileNames%2A>.</xref:System.Windows.Forms.FileDialog.FileNames%2A> 를 사용 하 여 다중 선택 대화 상자에서 선택한 모든 파일의 이름이 포함 된 배열을 반환 하려는 경우"
  example:
  - "The following code example demonstrates using the <xref:System.Windows.Forms.RichTextBox.SaveFile%2A?displayProperty=fullName> and <xref:System.Windows.Forms.RichTextBox.LoadFile%2A?displayProperty=fullName> methods with streams. It also demonstrates using the FileName, <xref:System.Windows.Forms.FileDialog.DefaultExt%2A>, <xref:System.Windows.Forms.SaveFileDialog.CreatePrompt%2A?displayProperty=fullName>, and <xref:System.Windows.Forms.SaveFileDialog.OverwritePrompt%2A?displayProperty=fullName> members.  \n  \n This is a complete example that is ready to run when you copy it to your project.  \n  \n [!code-cs[System.Windows.Forms.RichTextBoxSaveFile#1](~/add/codesnippet/csharp/p-system.windows.forms.f_44_1.cs)]\n [!code-vb[System.Windows.Forms.RichTextBoxSaveFile#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_44_1.vb)]\n [!code-cpp[System.Windows.Forms.RichTextBoxSaveFile#1](~/add/codesnippet/cpp/p-system.windows.forms.f_44_1.cpp)]"
  syntax:
    content: public string FileName { get; set; }
    return:
      type: System.String
      description: "파일 대화 상자에서 선택한 파일 이름입니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Windows.Forms.FileDialog.FileName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.FileNames
  id: FileNames
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: FileNames
  nameWithType: FileDialog.FileNames
  fullName: System.Windows.Forms.FileDialog.FileNames
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "대화 상자에서 선택한 모든 파일의 파일 이름을 가져옵니다."
  remarks: "각 파일 이름에는 파일 경로 확장명을 모두 포함 됩니다. 없는 파일을 선택 하는 경우이 메서드는 빈 배열을 반환 합니다."
  example:
  - "The following code example allows the user to select a number of images and display them in <xref:System.Windows.Forms.PictureBox> controls on a Form. It demonstrates initializing an <xref:System.Windows.Forms.OpenFileDialog>, setting the <xref:System.Windows.Forms.FileDialog.Title%2A> and <xref:System.Windows.Forms.FileDialog.Filter%2A> properties, and allowing the user to select multiple files by setting the <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A> property to true. This code example assumes that your form already has an <xref:System.Windows.Forms.OpenFileDialog> control named `openFileDialog1`, a <xref:System.Windows.Forms.Button> named `SelectFileButton`, and a <xref:System.Windows.Forms.FlowLayoutPanel> named `flowLayoutPanel1`.  \n  \n [!code-vb[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/add/codesnippet/visualbasic/TestOpenFileDialogMultiSelectVB/Form1.vb#1)]\n [!code-cs[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/add/codesnippet/csharp/TestOpenFileDialogMultiSelect/Form1.cs#1)]"
  syntax:
    content: public string[] FileNames { get; }
    return:
      type: System.String[]
      description: "형식의 배열 <xref:System.String>, 대화 상자에서 선택한 모든 파일의 이름을 포함 합니다.</xref:System.String>"
  overload: System.Windows.Forms.FileDialog.FileNames*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.FileOk
  id: FileOk
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: FileOk
  nameWithType: FileDialog.FileOk
  fullName: System.Windows.Forms.FileDialog.FileOk
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "사용자가 클릭할 때 발생는 **열려** 또는 **저장** 파일 대화 상자에서 단추입니다."
  remarks: "이벤트를 처리 하는 방법에 대 한 정보를 참조 하십시오. [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates using the <xref:System.Windows.Forms.FileDialog.FileNames%2A> property, handling the FileOk event and using the <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=fullName> method. When the example runs, a user can select graphics files from an <xref:System.Windows.Forms.OpenFileDialog> object. The selected files are displayed in the form. The <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=fullName> method forces a repaint of the form for each graphics file opened. To run this example paste the following code in a form containing a <xref:System.Windows.Forms.PictureBox> named `PictureBox1`, an <xref:System.Windows.Forms.OpenFileDialog> named `OpenFileDialog1`, and a <xref:System.Windows.Forms.Button> named `fileButton`. Call the `InitializePictureBox` and `InitializeOpenFileDialog` methods from the form's constructor or `Load` method. When the example is running, display the dialog box by clicking the button.  \n  \n [!code-cs[System.Windows.Forms.FileDialog#1](~/add/codesnippet/csharp/e-system.windows.forms.f_1_1.cs)]\n [!code-cpp[System.Windows.Forms.FileDialog#1](~/add/codesnippet/cpp/e-system.windows.forms.f_1_1.cpp)]\n [!code-vb[System.Windows.Forms.FileDialog#1](~/add/codesnippet/visualbasic/e-system.windows.forms.f_1_1.vb)]"
  syntax:
    content: public event System.ComponentModel.CancelEventHandler FileOk;
    return:
      type: System.ComponentModel.CancelEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.Filter
  id: Filter
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: Filter
  nameWithType: FileDialog.Filter
  fullName: System.Windows.Forms.FileDialog.Filter
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "대화 상자에서 &quot;파일 형식&quot; 상자 또는 현재 파일 &quot;파일 형식으로 저장&quot;에 표시 되는 선택 항목을 결정 하는 이름 필터 문자열을 가져오거나 설정 합니다."
  remarks: "각 필터링 옵션에 대 한 필터 문자열에 세로줄 필터에 대 한 설명을 포함 막대 (|)와 필터 패턴입니다. 다양 한 필터링 옵션에 대 한 문자열 세로 막대로 구분 됩니다.       다음은 필터 문자열의 예: `Text files (*.txt)|*.txt|All files (*.*)|*.*` 예를 들어 파일 형식 세미콜론으로 구분 하 여 여러 필터 패턴 필터에 추가할 수 있습니다: `Image Files(*.BMP;*.JPG;*.GIF)|*.BMP;*.JPG;*.GIF|All files (*.*)|*.*` 사용은 <xref:System.Windows.Forms.FileDialog.FilterIndex%2A>사용자에 게 첫 번째는 필터링 옵션을 설정 하는 속성이 표시 됩니다.</xref:System.Windows.Forms.FileDialog.FilterIndex%2A>"
  example:
  - "The following code example uses the <xref:System.Windows.Forms.OpenFileDialog> implementation of <xref:System.Windows.Forms.FileDialog> and illustrates creating, setting of properties, and showing the dialog box. The example uses the Filter and <xref:System.Windows.Forms.FileDialog.FilterIndex%2A> properties to provide a list of filters for the user. The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and the <xref:System.IO> namespace added to it.  \n  \n [!code-cpp[Classic OpenFileDialog Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_54_1.cpp)]\n [!code-cs[Classic OpenFileDialog Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_54_1.cs)]\n [!code-vb[Classic OpenFileDialog Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_54_1.vb)]"
  syntax:
    content: public string Filter { get; set; }
    return:
      type: System.String
      description: "파일 대화 상자에서 사용할 수 있는 옵션을 필터링 합니다."
  overload: System.Windows.Forms.FileDialog.Filter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Filter</code>형식이 올바르지 않습니다."
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.FilterIndex
  id: FilterIndex
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: FilterIndex
  nameWithType: FileDialog.FilterIndex
  fullName: System.Windows.Forms.FileDialog.FilterIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "파일 대화 상자에서 현재 선택한 필터의 인덱스를 가져오거나 설정 합니다."
  remarks: "사용자에 게는 필터링 옵션 첫 번째 표시 FilterIndex 속성을 설정 하려면 사용 합니다. 선택한 필터에 따라 특수 한 파일 작업을 수행할 수 파일 대화 상자를 표시 한 후 FilterIndex의 값을 사용할 수도 있습니다.      > [!NOTE] > 첫 번째 필터 항목의 인덱스 값은 1입니다."
  example:
  - "The following code example uses the <xref:System.Windows.Forms.OpenFileDialog> implementation of <xref:System.Windows.Forms.FileDialog> and illustrates creating, setting of properties, and showing the dialog box. The example uses the <xref:System.Windows.Forms.FileDialog.Filter%2A> and FilterIndex properties to provide a list of filters for the user. The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and the <xref:System.IO> namespace added to it.  \n  \n [!code-cpp[Classic OpenFileDialog Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_0_1.cpp)]\n [!code-cs[Classic OpenFileDialog Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_0_1.cs)]\n [!code-vb[Classic OpenFileDialog Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_0_1.vb)]"
  syntax:
    content: public int FilterIndex { get; set; }
    return:
      type: System.Int32
      description: "파일 대화 상자에서 현재 선택한 필터의 인덱스를 포함 하는 값입니다. 기본값은 1입니다."
  overload: System.Windows.Forms.FileDialog.FilterIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  id: HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: HookProc(IntPtr,Int32,IntPtr,IntPtr)
  nameWithType: FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
  fullName: System.Windows.Forms.FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "파일 대화 상자에 특정 기능을 추가 하도록 재정의 된 일반 대화 상자의 후크 프로시저를 정의 합니다."
  remarks: "후크 프로시저를 연결 하거나 다른 루틴 디버깅 또는 기능을 향상 하기 위해 응용 프로그램 또는 루틴에 삽입할 수 있습니다.       기본적으로 후크 프로시저 WM_INITDIALOG 메시지에 대 한 응답으로 화면에 대화 상자를 배치 합니다."
  syntax:
    content: protected override IntPtr HookProc (IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);
    parameters:
    - id: hWnd
      type: System.IntPtr
      description: "대화 상자 창에 대 한 핸들입니다."
    - id: msg
      type: System.Int32
      description: "대화 상자에서 수신 하는 메시지입니다."
    - id: wparam
      type: System.IntPtr
      description: "메시지에 대 한 추가 정보입니다."
    - id: lparam
      type: System.IntPtr
      description: "메시지에 대 한 추가 정보입니다."
    return:
      type: System.IntPtr
      description: "기본 대화 상자 프로시저가 메시지를 처리 하는 경우&0;을 반환 합니다. 기본 대화 상자 프로시저가 메시지를 무시 하는 경우&0;이 아닌 값을 반환 합니다."
  overload: System.Windows.Forms.FileDialog.HookProc*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.InitialDirectory
  id: InitialDirectory
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: InitialDirectory
  nameWithType: FileDialog.InitialDirectory
  fullName: System.Windows.Forms.FileDialog.InitialDirectory
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "파일 대화 상자에서 표시 하는 초기 디렉터리를 가져오거나 설정 합니다."
  remarks: "InitialDirectory 속성은 일반적으로 다음 원본 중 하나를 사용 하 여 설정:-마지막 디렉터리 또는 파일 작업에서 유지 프로그램에서 이전에 사용한 경로입니다.      -응용 프로그램 설정 등의 영구 원본에서 읽어 온 경로 <xref:Microsoft.Win32.Registry>또는 응용 프로그램에서 문자열 리소스입니다.</xref:Microsoft.Win32.Registry>      -표준 Windows 시스템 및 사용자와 같은 경로 프로그램 파일, 내 문서, 내 음악, 등에 (사용 하 여 가져올 수 있습니다는 <xref:System.Environment.GetFolderPath%2A>메서드)-의 시작 디렉터리와 같은 현재 응용 프로그램 관련 경로 (에서 속성을 사용 하 여 가져올 수 있습니다는 <xref:System.Windows.Forms.Application>개체).</xref:System.Windows.Forms.Application> </xref:System.Environment.GetFolderPath%2A>       동적 경로 만들기에 대 한 자세한 내용은 참조는 <xref:System.Windows.Forms.FileDialog>클래스 개요.</xref:System.Windows.Forms.FileDialog>       [!INCLUDE[wiprlhext](~/add/includes/wiprlhext-md.md)], 응용 프로그램 경로 또는 사용자 파일을 마지막 선택 된 디렉터리 초기 디렉터리가 기본적 InitialDirectory를 디렉터리 경로 뿐 아니라 전체 파일 이름으로 설정 됩니다."
  example:
  - "The following code example uses the <xref:System.Windows.Forms.OpenFileDialog> implementation of <xref:System.Windows.Forms.FileDialog> and illustrates creating, setting of properties, and showing the dialog box. The example uses the InitialDirectory property to set what the initial directory is when the dialog box is displayed to the user. The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and the <xref:System.IO> namespace added to it.  \n  \n [!code-cpp[Classic OpenFileDialog Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_30_1.cpp)]\n [!code-cs[Classic OpenFileDialog Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_30_1.cs)]\n [!code-vb[Classic OpenFileDialog Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_30_1.vb)]"
  syntax:
    content: public string InitialDirectory { get; set; }
    return:
      type: System.String
      description: "파일 대화 상자에서 표시 되는 초기 디렉터리. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Windows.Forms.FileDialog.InitialDirectory*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.Instance
  id: Instance
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: Instance
  nameWithType: FileDialog.Instance
  fullName: System.Windows.Forms.FileDialog.Instance
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "응용 프로그램에 대 한 Win32 인스턴스 핸들을 가져옵니다."
  syntax:
    content: protected virtual IntPtr Instance { get; }
    return:
      type: System.IntPtr
      description: "응용 프로그램에 대 한 Win32 인스턴스 핸들입니다."
  overload: System.Windows.Forms.FileDialog.Instance*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  id: OnFileOk(System.ComponentModel.CancelEventArgs)
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: OnFileOk(CancelEventArgs)
  nameWithType: FileDialog.OnFileOk(CancelEventArgs)
  fullName: System.Windows.Forms.FileDialog.OnFileOk(CancelEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.FileDialog.FileOk&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected void OnFileOk (System.ComponentModel.CancelEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.CancelEventArgs
      description: "A <xref:System.ComponentModel.CancelEventArgs>이벤트 데이터를 포함 하는.</xref:System.ComponentModel.CancelEventArgs>"
  overload: System.Windows.Forms.FileDialog.OnFileOk*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.Options
  id: Options
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: Options
  nameWithType: FileDialog.Options
  fullName: System.Windows.Forms.FileDialog.Options
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "초기화 하는 값을 가져옵니다는 <xref href=&quot;System.Windows.Forms.FileDialog&quot;> </xref>합니다."
  remarks: "Options 속성 Win32를 사용 하 여 파일 대화 상자를 초기화 하는 데 사용 하는 플래그에 해당 합니다. 속성을 사용 하 여는 <xref:System.Windows.Forms.FileDialog>가져오고 옵션을 설정 하는 클래스입니다.</xref:System.Windows.Forms.FileDialog>"
  syntax:
    content: protected int Options { get; }
    return:
      type: System.Int32
      description: "초기화 하는 내부 값의 비트 조합 된 <xref href=&quot;System.Windows.Forms.FileDialog&quot;> </xref>합니다."
  overload: System.Windows.Forms.FileDialog.Options*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.Reset
  id: Reset
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: Reset()
  nameWithType: FileDialog.Reset()
  fullName: System.Windows.Forms.FileDialog.Reset()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "모든 속성을 기본값으로 다시 설정합니다."
  syntax:
    content: public override void Reset ();
    parameters: []
  overload: System.Windows.Forms.FileDialog.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.RestoreDirectory
  id: RestoreDirectory
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: RestoreDirectory
  nameWithType: FileDialog.RestoreDirectory
  fullName: System.Windows.Forms.FileDialog.RestoreDirectory
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "대화 상자를 닫기 전에 이전에 선택한 디렉터리로 디렉터리를 복원할지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: ''
  example:
  - "The following code example uses the <xref:System.Windows.Forms.OpenFileDialog> implementation of <xref:System.Windows.Forms.FileDialog> and illustrates creating, setting of properties, and showing the dialog box. The example uses the RestoreDirectory property to ensure that the previously selected directory is restored when the dialog box is closed. The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and the <xref:System.IO> namespace added to it.  \n  \n [!code-cpp[Classic OpenFileDialog Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_5_1.cpp)]\n [!code-cs[Classic OpenFileDialog Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_5_1.cs)]\n [!code-vb[Classic OpenFileDialog Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_5_1.vb)]"
  syntax:
    content: public bool RestoreDirectory { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>파일;에 대 한 검색 하는 동안 디렉터리를 변경한 경우 대화 상자를 이전에 선택한 디렉터리로 현재 디렉터리를 복원 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.FileDialog.RestoreDirectory*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.RunDialog(System.IntPtr)
  id: RunDialog(System.IntPtr)
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: RunDialog(IntPtr)
  nameWithType: FileDialog.RunDialog(IntPtr)
  fullName: System.Windows.Forms.FileDialog.RunDialog(IntPtr)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "일반 대화 상자를 지정합니다."
  remarks: "이 메서드는의 구현을 제공 <xref:System.Windows.Forms.CommonDialog.RunDialog%2A>, 파일 대화 상자의 사용자 <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>.</xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> 호출 될 때 호출 되 고</xref:System.Windows.Forms.CommonDialog.RunDialog%2A>       파생된 클래스에서 <xref:System.Windows.Forms.OpenFileDialog>및 <xref:System.Windows.Forms.SaveFileDialog>잘못 된 파일 이름이 <xref:System.Exception>발생할 수 있습니다.</xref:System.Exception> </xref:System.Windows.Forms.SaveFileDialog> </xref:System.Windows.Forms.OpenFileDialog>"
  syntax:
    content: protected override bool RunDialog (IntPtr hWndOwner);
    parameters:
    - id: hWndOwner
      type: System.IntPtr
      description: "일반 대화 상자에 대 한 소유자 창의 창 핸들을 나타내는 값입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>파일을 열 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.FileDialog.RunDialog*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.ShowHelp
  id: ShowHelp
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: ShowHelp
  nameWithType: FileDialog.ShowHelp
  fullName: System.Windows.Forms.FileDialog.ShowHelp
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "나타내는 값을 가져오거나 여부는 **도움말** 파일 대화 상자에 단추가 표시 됩니다."
  remarks: "A <xref:System.Windows.Forms.Control.HelpRequested>이벤트는 사용자가 클릭할 때 발생는 **도움말** 단추.</xref:System.Windows.Forms.Control.HelpRequested>"
  syntax:
    content: public bool ShowHelp { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>대화 상자에 도움말 단추가 포함 된 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.FileDialog.ShowHelp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.SupportMultiDottedExtensions
  id: SupportMultiDottedExtensions
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: SupportMultiDottedExtensions
  nameWithType: FileDialog.SupportMultiDottedExtensions
  fullName: System.Windows.Forms.FileDialog.SupportMultiDottedExtensions
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "대화 상자에서 여러 파일 이름 확장명을 가진 파일을 표시 및 저장을 지원 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "경우에 따라 사용자를 열고 여러 파일 이름 확장명을 사용 하는 파일을 저장 해야 합니다. 예를 들어 응용 프로그램 매니페스트 사용 되는 파일과 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 복잡 한 파일 이름 확장명의 배포 기술 종료 &quot;. exe.manifest&quot;입니다. 이 속성을 설정 `true` 설정할 수 있습니다는 <xref:System.Windows.Forms.FileDialog.Filter%2A>속성을 여러 개의 점을 확장명을.</xref:System.Windows.Forms.FileDialog.Filter%2A>       SupportMultiDottedExtensions 이면 `false`에 대 한 여러 개의 점을 확장 할당 <xref:System.Windows.Forms.FileDialog.Filter%2A>와 같은 컨트롤을 파생 <xref:System.Windows.Forms.SaveFileDialog>만 사용 하 여 문자열에서 마지막 확장 됩니다.</xref:System.Windows.Forms.SaveFileDialog> </xref:System.Windows.Forms.FileDialog.Filter%2A> 대신 &quot;.manifest&quot;가 사용 하는 예를 들어, &quot;. exe.manifest&quot;입니다."
  example:
  - "The following code example saves files with the extension \".data.txt\". This code example requires that your application host a <xref:System.Windows.Forms.SaveFileDialog> named `saveFileDialog1` and a <xref:System.Windows.Forms.Button> named `button1`.  \n  \n [!code-cs[SupportMultiDottedExtensions#1](~/add/codesnippet/csharp/TestSaveFileDialog/Form1.cs#1)]\n [!code-vb[SupportMultiDottedExtensions#1](~/add/codesnippet/visualbasic/TestSaveFileDialogVB/Form1.vb#1)]"
  syntax:
    content: public bool SupportMultiDottedExtensions { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>대화 상자에서 여러 파일 이름 확장명; 지 원하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.FileDialog.SupportMultiDottedExtensions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.Title
  id: Title
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: Title
  nameWithType: FileDialog.Title
  fullName: System.Windows.Forms.FileDialog.Title
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "파일 대화 상자 제목을 가져오거나 설정 합니다."
  remarks: "문자열 대화 상자의 제목 표시줄에 배치 됩니다. 제목이 빈 문자열인 경우 &quot;다른 이름으로 저장&quot; 또는 &quot;열린&quot; 중 하나를 기본 제목을 사용 됩니다."
  example:
  - "The following code example demonstrates initializing an <xref:System.Windows.Forms.OpenFileDialog>, setting the Title and <xref:System.Windows.Forms.FileDialog.Filter%2A> properties, and allowing the user to select multiple files by setting the <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A?displayProperty=fullName> property to true. To run this example, paste the following code in a form containing an <xref:System.Windows.Forms.OpenFileDialog> named `OpenFileDialog1` and a <xref:System.Windows.Forms.Button> named `fileButton`. Call the `InitializeOpenFileDialog` method in the form's constructor or `Load` method. The example also requires that the `Click` event of the `Button` control is connected to the event handler defined in the example.  \n  \n [!code-cs[System.Windows.Forms.FileDialog#6](~/add/codesnippet/csharp/p-system.windows.forms.f_25_1.cs)]\n [!code-cpp[System.Windows.Forms.FileDialog#6](~/add/codesnippet/cpp/p-system.windows.forms.f_25_1.cpp)]\n [!code-vb[System.Windows.Forms.FileDialog#6](~/add/codesnippet/visualbasic/p-system.windows.forms.f_25_1.vb)]"
  syntax:
    content: public string Title { get; set; }
    return:
      type: System.String
      description: "파일 대화 상자 제목입니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Windows.Forms.FileDialog.Title*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.ToString
  id: ToString
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: ToString()
  nameWithType: FileDialog.ToString()
  fullName: System.Windows.Forms.FileDialog.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 개체의 문자열 버전을 제공합니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "이 개체의 문자열 버전입니다."
  overload: System.Windows.Forms.FileDialog.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.FileDialog.ValidateNames
  id: ValidateNames
  parent: System.Windows.Forms.FileDialog
  langs:
  - csharp
  name: ValidateNames
  nameWithType: FileDialog.ValidateNames
  fullName: System.Windows.Forms.FileDialog.ValidateNames
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "대화 상자 유효한 Win32 파일 이름만 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "편집 컨트롤에 항목이 들어 있는 하지만 간격을 클릭할 때 **확인**, 여부 유효한 지 여부를 대화 상자에 파일 이름을 반환 합니다. 기본 확장명 없음 텍스트에 추가 됩니다."
  syntax:
    content: public bool ValidateNames { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>대화 상자에서 유효한 Win32 파일 이름만;을 사용할 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.FileDialog.ValidateNames*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.CommonDialog
  isExternal: false
  name: System.Windows.Forms.CommonDialog
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Forms.FileDialog.AddExtension
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: AddExtension
  nameWithType: FileDialog.AddExtension
  fullName: System.Windows.Forms.FileDialog.AddExtension
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.FileDialog.AutoUpgradeEnabled
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: AutoUpgradeEnabled
  nameWithType: FileDialog.AutoUpgradeEnabled
  fullName: System.Windows.Forms.FileDialog.AutoUpgradeEnabled
- uid: System.Windows.Forms.FileDialog.CheckFileExists
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: CheckFileExists
  nameWithType: FileDialog.CheckFileExists
  fullName: System.Windows.Forms.FileDialog.CheckFileExists
- uid: System.Windows.Forms.FileDialog.CheckPathExists
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: CheckPathExists
  nameWithType: FileDialog.CheckPathExists
  fullName: System.Windows.Forms.FileDialog.CheckPathExists
- uid: System.Windows.Forms.FileDialog.CustomPlaces
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: CustomPlaces
  nameWithType: FileDialog.CustomPlaces
  fullName: System.Windows.Forms.FileDialog.CustomPlaces
- uid: System.Windows.Forms.FileDialogCustomPlacesCollection
  parent: System.Windows.Forms
  isExternal: false
  name: FileDialogCustomPlacesCollection
  nameWithType: FileDialogCustomPlacesCollection
  fullName: System.Windows.Forms.FileDialogCustomPlacesCollection
- uid: System.Windows.Forms.FileDialog.DefaultExt
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: DefaultExt
  nameWithType: FileDialog.DefaultExt
  fullName: System.Windows.Forms.FileDialog.DefaultExt
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.FileDialog.DereferenceLinks
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: DereferenceLinks
  nameWithType: FileDialog.DereferenceLinks
  fullName: System.Windows.Forms.FileDialog.DereferenceLinks
- uid: System.Windows.Forms.FileDialog.EventFileOk
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: EventFileOk
  nameWithType: FileDialog.EventFileOk
  fullName: System.Windows.Forms.FileDialog.EventFileOk
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.FileDialog.FileName
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: FileName
  nameWithType: FileDialog.FileName
  fullName: System.Windows.Forms.FileDialog.FileName
- uid: System.Windows.Forms.FileDialog.FileNames
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: FileNames
  nameWithType: FileDialog.FileNames
  fullName: System.Windows.Forms.FileDialog.FileNames
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.FileDialog.FileOk
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: FileOk
  nameWithType: FileDialog.FileOk
  fullName: System.Windows.Forms.FileDialog.FileOk
- uid: System.ComponentModel.CancelEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CancelEventHandler
  nameWithType: CancelEventHandler
  fullName: System.ComponentModel.CancelEventHandler
- uid: System.Windows.Forms.FileDialog.Filter
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Filter
  nameWithType: FileDialog.Filter
  fullName: System.Windows.Forms.FileDialog.Filter
- uid: System.Windows.Forms.FileDialog.FilterIndex
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: FilterIndex
  nameWithType: FileDialog.FilterIndex
  fullName: System.Windows.Forms.FileDialog.FilterIndex
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: HookProc(IntPtr,Int32,IntPtr,IntPtr)
  nameWithType: FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
  fullName: System.Windows.Forms.FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Forms.FileDialog.InitialDirectory
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: InitialDirectory
  nameWithType: FileDialog.InitialDirectory
  fullName: System.Windows.Forms.FileDialog.InitialDirectory
- uid: System.Windows.Forms.FileDialog.Instance
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Instance
  nameWithType: FileDialog.Instance
  fullName: System.Windows.Forms.FileDialog.Instance
- uid: System.Windows.Forms.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: OnFileOk(CancelEventArgs)
  nameWithType: FileDialog.OnFileOk(CancelEventArgs)
  fullName: System.Windows.Forms.FileDialog.OnFileOk(CancelEventArgs)
- uid: System.ComponentModel.CancelEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: CancelEventArgs
  nameWithType: CancelEventArgs
  fullName: System.ComponentModel.CancelEventArgs
- uid: System.Windows.Forms.FileDialog.Options
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Options
  nameWithType: FileDialog.Options
  fullName: System.Windows.Forms.FileDialog.Options
- uid: System.Windows.Forms.FileDialog.Reset
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Reset()
  nameWithType: FileDialog.Reset()
  fullName: System.Windows.Forms.FileDialog.Reset()
- uid: System.Windows.Forms.FileDialog.RestoreDirectory
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: RestoreDirectory
  nameWithType: FileDialog.RestoreDirectory
  fullName: System.Windows.Forms.FileDialog.RestoreDirectory
- uid: System.Windows.Forms.FileDialog.RunDialog(System.IntPtr)
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: RunDialog(IntPtr)
  nameWithType: FileDialog.RunDialog(IntPtr)
  fullName: System.Windows.Forms.FileDialog.RunDialog(IntPtr)
- uid: System.Windows.Forms.FileDialog.ShowHelp
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: ShowHelp
  nameWithType: FileDialog.ShowHelp
  fullName: System.Windows.Forms.FileDialog.ShowHelp
- uid: System.Windows.Forms.FileDialog.SupportMultiDottedExtensions
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: SupportMultiDottedExtensions
  nameWithType: FileDialog.SupportMultiDottedExtensions
  fullName: System.Windows.Forms.FileDialog.SupportMultiDottedExtensions
- uid: System.Windows.Forms.FileDialog.Title
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Title
  nameWithType: FileDialog.Title
  fullName: System.Windows.Forms.FileDialog.Title
- uid: System.Windows.Forms.FileDialog.ToString
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: ToString()
  nameWithType: FileDialog.ToString()
  fullName: System.Windows.Forms.FileDialog.ToString()
- uid: System.Windows.Forms.FileDialog.ValidateNames
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: ValidateNames
  nameWithType: FileDialog.ValidateNames
  fullName: System.Windows.Forms.FileDialog.ValidateNames
- uid: System.Windows.Forms.FileDialog.AddExtension*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: AddExtension
  nameWithType: FileDialog.AddExtension
- uid: System.Windows.Forms.FileDialog.AutoUpgradeEnabled*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: AutoUpgradeEnabled
  nameWithType: FileDialog.AutoUpgradeEnabled
- uid: System.Windows.Forms.FileDialog.CheckFileExists*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: CheckFileExists
  nameWithType: FileDialog.CheckFileExists
- uid: System.Windows.Forms.FileDialog.CheckPathExists*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: CheckPathExists
  nameWithType: FileDialog.CheckPathExists
- uid: System.Windows.Forms.FileDialog.CustomPlaces*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: CustomPlaces
  nameWithType: FileDialog.CustomPlaces
- uid: System.Windows.Forms.FileDialog.DefaultExt*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: DefaultExt
  nameWithType: FileDialog.DefaultExt
- uid: System.Windows.Forms.FileDialog.DereferenceLinks*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: DereferenceLinks
  nameWithType: FileDialog.DereferenceLinks
- uid: System.Windows.Forms.FileDialog.FileName*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: FileName
  nameWithType: FileDialog.FileName
- uid: System.Windows.Forms.FileDialog.FileNames*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: FileNames
  nameWithType: FileDialog.FileNames
- uid: System.Windows.Forms.FileDialog.Filter*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Filter
  nameWithType: FileDialog.Filter
- uid: System.Windows.Forms.FileDialog.FilterIndex*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: FilterIndex
  nameWithType: FileDialog.FilterIndex
- uid: System.Windows.Forms.FileDialog.HookProc*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: HookProc
  nameWithType: FileDialog.HookProc
- uid: System.Windows.Forms.FileDialog.InitialDirectory*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: InitialDirectory
  nameWithType: FileDialog.InitialDirectory
- uid: System.Windows.Forms.FileDialog.Instance*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Instance
  nameWithType: FileDialog.Instance
- uid: System.Windows.Forms.FileDialog.OnFileOk*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: OnFileOk
  nameWithType: FileDialog.OnFileOk
- uid: System.Windows.Forms.FileDialog.Options*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Options
  nameWithType: FileDialog.Options
- uid: System.Windows.Forms.FileDialog.Reset*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Reset
  nameWithType: FileDialog.Reset
- uid: System.Windows.Forms.FileDialog.RestoreDirectory*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: RestoreDirectory
  nameWithType: FileDialog.RestoreDirectory
- uid: System.Windows.Forms.FileDialog.RunDialog*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: RunDialog
  nameWithType: FileDialog.RunDialog
- uid: System.Windows.Forms.FileDialog.ShowHelp*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: ShowHelp
  nameWithType: FileDialog.ShowHelp
- uid: System.Windows.Forms.FileDialog.SupportMultiDottedExtensions*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: SupportMultiDottedExtensions
  nameWithType: FileDialog.SupportMultiDottedExtensions
- uid: System.Windows.Forms.FileDialog.Title*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: Title
  nameWithType: FileDialog.Title
- uid: System.Windows.Forms.FileDialog.ToString*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: ToString
  nameWithType: FileDialog.ToString
- uid: System.Windows.Forms.FileDialog.ValidateNames*
  parent: System.Windows.Forms.FileDialog
  isExternal: false
  name: ValidateNames
  nameWithType: FileDialog.ValidateNames
