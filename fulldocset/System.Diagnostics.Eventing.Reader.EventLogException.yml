### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Eventing.Reader.EventLogException
  id: EventLogException
  children:
  - System.Diagnostics.Eventing.Reader.EventLogException.#ctor
  - System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Int32)
  - System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String)
  - System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String,System.Exception)
  - System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Diagnostics.Eventing.Reader.EventLogException.Message
  langs:
  - csharp
  name: EventLogException
  nameWithType: EventLogException
  fullName: System.Diagnostics.Eventing.Reader.EventLogException
  type: Class
  summary: "관련 정보를 이벤트 로그를 읽는 동안 오류가 발생 한 경우 throw 되는 모든 예외에 대 한 기본 클래스를 나타냅니다."
  syntax:
    content: 'public class EventLogException : Exception'
  inheritance:
  - System.Exception
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor
  id: '#ctor'
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  langs:
  - csharp
  name: EventLogException()
  nameWithType: EventLogException.EventLogException()
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogException&quot;> </xref> 클래스입니다."
  syntax:
    content: public EventLogException ();
    parameters: []
  overload: System.Diagnostics.Eventing.Reader.EventLogException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  langs:
  - csharp
  name: EventLogException(Int32)
  nameWithType: EventLogException.EventLogException(Int32)
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException(Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogException&quot;> </xref> 예외에 대 한 오류 코드를 사용 하 여 클래스입니다."
  syntax:
    content: protected EventLogException (int errorCode);
    parameters:
    - id: errorCode
      type: System.Int32
      description: "오류 코드를 읽거나 이벤트 로그를 구성 하는 동안 발생 한 오류에 대 한 관련 정보입니다. 자세한 내용 및 이벤트 로그의 목록에 대 한 관련된 오류 코드는 http://go.microsoft.com/fwlink/?LinkId=82629 참조 합니다."
  overload: System.Diagnostics.Eventing.Reader.EventLogException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  langs:
  - csharp
  name: EventLogException(String)
  nameWithType: EventLogException.EventLogException(String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogException&quot;> </xref> 현재 예외를 설명 하는 오류 메시지를 지정 하 여 클래스입니다."
  syntax:
    content: public EventLogException (string message);
    parameters:
    - id: message
      type: System.String
      description: "현재 예외를 설명 하는 오류 메시지입니다."
  overload: System.Diagnostics.Eventing.Reader.EventLogException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  langs:
  - csharp
  name: EventLogException(SerializationInfo,StreamingContext)
  nameWithType: EventLogException.EventLogException(SerializationInfo,StreamingContext)
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogException&quot;> </xref> serialize 된 데이터 클래스입니다."
  syntax:
    content: protected EventLogException (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> throw 되는 예외에 대 한 직렬화 된 개체 데이터를 보유 하는 개체입니다."
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>소스 또는 대상에 대 한 컨텍스트 정보를 포함 하는 개체입니다.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Diagnostics.Eventing.Reader.EventLogException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  langs:
  - csharp
  name: EventLogException(String,Exception)
  nameWithType: EventLogException.EventLogException(String,Exception)
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException(String,Exception)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogException&quot;> </xref> 클래스 오류 메시지와 내부 예외를 사용 합니다."
  syntax:
    content: public EventLogException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "현재 예외를 설명 하는 오류 메시지입니다."
    - id: innerException
      type: System.Exception
      description: "현재 예외를 발생 시킨 예외 인스턴스입니다."
  overload: System.Diagnostics.Eventing.Reader.EventLogException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: EventLogException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "예외에 대 한 정보로 SerializationInfo 개체를 설정합니다."
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> throw 된 예외에 대 한 직렬화 된 개체 데이터를 보유 하는 개체입니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>소스 또는 대상에 대 한 컨텍스트 정보를 포함 하는 개체입니다.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogException.Message
  id: Message
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  langs:
  - csharp
  name: Message
  nameWithType: EventLogException.Message
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.Message
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "현재 예외를 설명 하는 오류 메시지를 가져옵니다."
  syntax:
    content: public override string Message { get; }
    return:
      type: System.String
      description: "현재 예외를 설명 하는 오류 메시지를 포함 하는 문자열을 반환 합니다."
  overload: System.Diagnostics.Eventing.Reader.EventLogException.Message*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Exception
  isExternal: false
  name: System.Exception
- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  isExternal: false
  name: EventLogException()
  nameWithType: EventLogException.EventLogException()
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException()
- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Int32)
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  isExternal: false
  name: EventLogException(Int32)
  nameWithType: EventLogException.EventLogException(Int32)
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String)
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  isExternal: false
  name: EventLogException(String)
  nameWithType: EventLogException.EventLogException(String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  isExternal: false
  name: EventLogException(SerializationInfo,StreamingContext)
  nameWithType: EventLogException.EventLogException(SerializationInfo,StreamingContext)
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String,System.Exception)
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  isExternal: false
  name: EventLogException(String,Exception)
  nameWithType: EventLogException.EventLogException(String,Exception)
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException(String,Exception)
- uid: System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: EventLogException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Diagnostics.Eventing.Reader.EventLogException.Message
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  isExternal: false
  name: Message
  nameWithType: EventLogException.Message
  fullName: System.Diagnostics.Eventing.Reader.EventLogException.Message
- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor*
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  isExternal: false
  name: EventLogException
  nameWithType: EventLogException.EventLogException
- uid: System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData*
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  isExternal: false
  name: GetObjectData
  nameWithType: EventLogException.GetObjectData
- uid: System.Diagnostics.Eventing.Reader.EventLogException.Message*
  parent: System.Diagnostics.Eventing.Reader.EventLogException
  isExternal: false
  name: Message
  nameWithType: EventLogException.Message
