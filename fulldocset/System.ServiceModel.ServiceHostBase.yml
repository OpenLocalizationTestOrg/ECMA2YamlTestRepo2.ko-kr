### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ServiceHostBase
  id: ServiceHostBase
  children:
  - System.ServiceModel.ServiceHostBase.#ctor
  - System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  - System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.ServiceHostBase.ApplyConfiguration
  - System.ServiceModel.ServiceHostBase.Authentication
  - System.ServiceModel.ServiceHostBase.Authorization
  - System.ServiceModel.ServiceHostBase.BaseAddresses
  - System.ServiceModel.ServiceHostBase.ChannelDispatchers
  - System.ServiceModel.ServiceHostBase.CloseTimeout
  - System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  - System.ServiceModel.ServiceHostBase.Credentials
  - System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  - System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  - System.ServiceModel.ServiceHostBase.Description
  - System.ServiceModel.ServiceHostBase.Extensions
  - System.ServiceModel.ServiceHostBase.ImplementedContracts
  - System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  - System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHostBase.InitializeRuntime
  - System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  - System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  - System.ServiceModel.ServiceHostBase.OnAbort
  - System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnClosed
  - System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnOpened
  - System.ServiceModel.ServiceHostBase.OpenTimeout
  - System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  - System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  - System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  - System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  langs:
  - csharp
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
  type: Class
  summary: "사용자 지정 프로그래밍 모델을 노출 하는 호스트를 구현 하려면 ServiceHostBase 클래스를 확장 합니다."
  remarks: "사용자 지정 프로그래밍 모델을 제공 하는 호스트를 만들려면 ServiceHostBase 클래스를 사용 합니다. [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] 서비스 프로그래밍 모델 <xref:System.ServiceModel.ServiceHost>클래스</xref:System.ServiceModel.ServiceHost> 를 사용 하 여       이 클래스에서 파생 된 Managed c + + 사용자 관련 참고 사항:-프로그램 정리에서 코드 (On) (Begin) Close (및/또는 OnAbort), 소멸자가 아니라 입력 합니다.      -; 소멸자를 방지 합니다. 자동 생성 <xref:System.IDisposable>.</xref:System.IDisposable> 컴파일러가      -; 비참조 멤버를 방지 합니다. 컴파일러에서 자동 생성 <xref:System.IDisposable>.</xref:System.IDisposable> 를 유발할 수 있습니다.      -종료자를 방지 합니다. 종료자를 포함 하는 경우 빌드 경고를 호출 표시 해야 하지만 <xref:System.GC.SuppressFinalize%28System.Object%29>및는 종료자에서 (On) (Begin) Close (및/또는 OnAbort)을 자동으로 생성 되 에뮬레이션 하기 위해 <xref:System.IDisposable>동작.</xref:System.IDisposable> </xref:System.GC.SuppressFinalize%28System.Object%29>"
  example:
  - "This sample uses the <xref:System.ServiceModel.ServiceHost> class, which is derived from ServiceHostBase.  \n  \n [!code-cs[S_SelfHost#1](~/add/codesnippet/csharp/t-system.servicemodel.se_10_1.cs)]\n [!code-vb[S_SelfHost#1](~/add/codesnippet/visualbasic/t-system.servicemodel.se_10_1.vb)]"
  syntax:
    content: 'public abstract class ServiceHostBase : System.ServiceModel.Channels.CommunicationObject, IDisposable, System.ServiceModel.IExtensibleObject<System.ServiceModel.ServiceHostBase>'
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  implements:
  - System.IDisposable
  - System.ServiceModel.IExtensibleObject<System.ServiceModel.ServiceHostBase>
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.#ctor
  id: '#ctor'
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ServiceHostBase()
  nameWithType: ServiceHostBase.ServiceHostBase()
  fullName: System.ServiceModel.ServiceHostBase.ServiceHostBase()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref> 클래스입니다."
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#30](~/add/codesnippet/csharp/m-system.servicemodel.se_0_1.cs)]'
  syntax:
    content: protected ServiceHostBase ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  id: AddBaseAddress(System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddBaseAddress(Uri)
  nameWithType: ServiceHostBase.AddBaseAddress(Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddBaseAddress(Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "서비스 호스트에 기본 주소를 추가합니다."
  remarks: "이 속성을 확장 하는 사용자가 사용 하면 <xref:System.ServiceModel.ServiceHostBase>경우 호스트가 생성 된 후 기본 주소를 제공 합니다.</xref:System.ServiceModel.ServiceHostBase> AddBaseAddress 기본 주소는 기존 호스트를 추가 하려면 사용할 수 있지만 설명이 이미 초기화 하는 경우 예외를 throw 합니다."
  syntax:
    content: protected void AddBaseAddress (Uri baseAddress);
    parameters:
    - id: baseAddress
      type: System.Uri
      description: "A <xref:System.Uri>현재 호스트에서 호스트 되는 서비스에 대 한 기본 주소를 포함 하는.</xref:System.Uri>"
  overload: System.ServiceModel.ServiceHostBase.AddBaseAddress*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code> baseAddress </code> 호출할 수 없습니다."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  id: AddDefaultEndpoints
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddDefaultEndpoints()
  nameWithType: ServiceHostBase.AddDefaultEndpoints()
  fullName: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "기본 바인딩을 사용 하 여 서비스 호스트에 있는 각 계약에서 모든 기본 주소에 대 한 서비스 끝점을 추가 합니다."
  syntax:
    content: public virtual System.Collections.ObjectModel.ReadOnlyCollection<System.ServiceModel.Description.ServiceEndpoint> AddDefaultEndpoints ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.ServiceModel.Description.ServiceEndpoint}
      description: "기본 끝점의 읽기 전용 컬렉션입니다."
  overload: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  id: AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddServiceEndpoint(ServiceEndpoint)
  nameWithType: ServiceHostBase.AddServiceEndpoint(ServiceEndpoint)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(ServiceEndpoint)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "지정된 된 서비스 끝점을 호스팅된 서비스에 추가합니다."
  remarks: "메서드를 사용 하는 경우 서비스 호스트는 계약 설명에서 &quot;-구성-이름별&quot; 유효성 검사를 수행 합니다. 호스트 확인 즉, <xref:System.ServiceModel.Description.ContractDescription.ConfigurationName%2A>서비스에서 구현 하는 서비스 계약의 구성 이름이 목록에 있습니다.</xref:System.ServiceModel.Description.ContractDescription.ConfigurationName%2A> 경우는 유효성 검사에 통과 되는 설명의 <xref:System.ServiceModel.Description.ServiceEndpoint>, 사용 되는 경우에는 <xref:System.ServiceModel.Description.ContractDescription>에서 반영 서비스는 서로 다른.</xref:System.ServiceModel.Description.ContractDescription> </xref:System.ServiceModel.Description.ServiceEndpoint>       예를 들어, ServiceEndpoint에 설명을 반영 서비스에서 계약 설명은 이름이 같고 서로 다른 작업 동작을 가정 합니다. &quot;-구성-이름별&quot; 유효성 검사만 알리지 동작 서 동일 하며 업데이트가 하나에 대 한 설명이 다른 설명으로 인해 유효성 된다는 점입니다.       경우는 `address` 상대 uri의 기본 주소 중 하나는 <xref:System.ServiceModel.ServiceHost>끝점의 기본 주소로 사용 됩니다 (바인딩 프로토콜)에 따라 다름.</xref:System.ServiceModel.ServiceHost>"
  syntax:
    content: public virtual void AddServiceEndpoint (System.ServiceModel.Description.ServiceEndpoint endpoint);
    parameters:
    - id: endpoint
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "서비스 끝점입니다."
  overload: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>Endpoint</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "호스트가 Created 또는 Opening 상태가 아니거나는 없는 <xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;> </xref> 호스팅된 서비스에 대 한 합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>Address</code>, <code>Binding, </code> or <code>Contract</code> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  id: AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddServiceEndpoint(String,Binding,String)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,String)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "지정 된 계약, 바인딩 및 끝점 주소와 호스팅된 서비스에 서비스 끝점을 추가합니다."
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#40](~/add/codesnippet/csharp/edf6e090-b786-4010-8e21-_1.cs)]'
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, string address);
    parameters:
    - id: implementedContract
      type: System.String
      description: "끝점에서 구현 하는 계약입니다."
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>추가 된 끝점에 대 한.</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.String
      description: "추가 된 끝점의 주소입니다. 이 절대 uri 나 상대 URI를 수 있습니다. 기본 주소 중 하나는 상대 URI 인 경우는 <xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> (바인딩 프로토콜)에 따라 끝점의 기본 주소로 사용 됩니다."
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>호스팅된 서비스에 추가 합니다.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>implementedContract</code>or <code>binding</code> or <code>address</code> or is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "호스트에 있지 않은 한 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>있거나 상태는 없는 <xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;> </xref> 바인딩에 바인딩 체계의 전송이 없는 또는 호스팅된 서비스에 대 한 끝점을 추가할 수 없습니다.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  id: AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddServiceEndpoint(String,Binding,Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "지정 된 계약, 바인딩 및 끝점 주소를 포함 하는 URI와 호스팅된 서비스에 서비스 끝점을 추가 합니다."
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, Uri address);
    parameters:
    - id: implementedContract
      type: System.String
      description: "끝점에서 구현 하는 계약입니다."
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>추가 된 끝점에 대 한.</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.Uri
      description: "<xref:System.Uri>추가 된 끝점 주소가 포함 된.</xref:System.Uri> 이 절대 uri 나 상대 URI를 수 있습니다. 기본 주소 중 하나는 상대 URI 인 경우는 <xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> (바인딩 프로토콜)에 따라 끝점의 기본 주소로 사용 됩니다."
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>호스팅된 서비스에 추가 합니다.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>implementedContract</code>or <code>binding</code> or <code>address</code> or is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "호스트에 있지 않은 한 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>있거나 상태는 없는 <xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;> </xref> 호스팅된 서비스에 대 한 끝점을 추가할 수 없습니다.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  id: AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddServiceEndpoint(String,Binding,String,Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,String,Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,String,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "지정 된 계약, 바인딩, 끝점 주소 및 수신 위치의 주소가 포함 된 URI는 호스팅된 서비스에 서비스 끝점을 추가 합니다."
  remarks: "경우는 `address` 상대 uri의 기본 주소 중 하나는 <xref:System.ServiceModel.ServiceHost>끝점의 기본 주소로 사용 됩니다 (바인딩 프로토콜)에 따라 다름.</xref:System.ServiceModel.ServiceHost>"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, string address, Uri listenUri);
    parameters:
    - id: implementedContract
      type: System.String
      description: "끝점에서 구현 하는 계약입니다."
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>추가 된 끝점에 대 한.</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.String
      description: "추가 된 끝점의 주소입니다. 이 주소는 절대 uri 나 상대 URI를 수 있습니다. 기본 주소 중 하나는 상대 URI 인 경우는 <xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> (바인딩 프로토콜)에 따라 끝점의 기본 주소로 사용 됩니다."
    - id: listenUri
      type: System.Uri
      description: "<xref:System.Uri>끝점이 들어오는 메시지를 수신 대기 하는 주소를 포함 하는.</xref:System.Uri> 이 URI는 상대 또는 절대 수 있습니다."
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>호스팅된 서비스에 추가 합니다.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>implementedContract</code>or <code>binding</code> or <code>address</code> or is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "호스트에 있지 않은 한 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>있거나 상태는 없는 <xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;> </xref> 호스팅된 서비스에 대 한 끝점을 추가할 수 없습니다.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  id: AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddServiceEndpoint(String,Binding,Uri,Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,Uri,Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,Uri,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "지정 된 계약, 바인딩, 끝점과 수신 주소가 포함 된 Uri를 호스팅된 서비스에 서비스 끝점을 추가 합니다."
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, Uri address, Uri listenUri);
    parameters:
    - id: implementedContract
      type: System.String
      description: "끝점에서 구현 하는 계약입니다."
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>추가 된 끝점에 대 한.</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.Uri
      description: "<xref:System.Uri>추가 된 끝점 주소가 포함 된.</xref:System.Uri> 기본 주소 중 하나는 상대 URI 인 경우는 <xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> (바인딩 프로토콜)에 따라 끝점의 기본 주소로 사용 됩니다."
    - id: listenUri
      type: System.Uri
      description: "<xref:System.Uri>들어오는 메시지에 대 한 수신 하는 끝점 주소가 포함 된.</xref:System.Uri>"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>호스팅된 서비스에 추가 합니다.</xref:System.ServiceModel.Description.ServiceEndpoint> 절대 또는 상대이 URI 일 수 있습니다."
  overload: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>implementedContract</code>or <code>binding</code> or <code>address</code> or is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "호스트에 있지 않은 한 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>있거나 상태는 없는 <xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;> </xref> 호스팅된 서비스에 대 한 끝점을 추가할 수 없습니다.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.ApplyConfiguration
  id: ApplyConfiguration
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ApplyConfiguration()
  nameWithType: ServiceHostBase.ApplyConfiguration()
  fullName: System.ServiceModel.ServiceHostBase.ApplyConfiguration()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "구성 파일에서 서비스 설명 정보를 로드 하 고 생성 중인 런타임에 적용 합니다."
  syntax:
    content: protected virtual void ApplyConfiguration ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.ApplyConfiguration*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "호스팅된 서비스에 대해 설명 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.Authentication
  id: Authentication
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: Authentication
  nameWithType: ServiceHostBase.Authentication
  fullName: System.ServiceModel.ServiceHostBase.Authentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "서비스 인증 동작을 가져옵니다."
  syntax:
    content: public System.ServiceModel.Description.ServiceAuthenticationBehavior Authentication { get; }
    return:
      type: System.ServiceModel.Description.ServiceAuthenticationBehavior
      description: "서비스 인증 동작입니다."
  overload: System.ServiceModel.ServiceHostBase.Authentication*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.Authorization
  id: Authorization
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: Authorization
  nameWithType: ServiceHostBase.Authorization
  fullName: System.ServiceModel.ServiceHostBase.Authorization
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "호스팅된 서비스에 대 한 인증 동작을 가져옵니다."
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#36](~/add/codesnippet/csharp/p-system.servicemodel.se_20_1.cs)]'
  syntax:
    content: public System.ServiceModel.Description.ServiceAuthorizationBehavior Authorization { get; }
    return:
      type: System.ServiceModel.Description.ServiceAuthorizationBehavior
      description: "<xref href=&quot;System.ServiceModel.Description.ServiceAuthorizationBehavior&quot;> </xref> 호스팅된 서비스에 대 한 합니다."
  overload: System.ServiceModel.ServiceHostBase.Authorization*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.BaseAddresses
  id: BaseAddresses
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: BaseAddresses
  nameWithType: ServiceHostBase.BaseAddresses
  fullName: System.ServiceModel.ServiceHostBase.BaseAddresses
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "호스팅된 서비스에서 사용 하는 기본 주소를 가져옵니다."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<Uri> BaseAddresses { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Uri}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; 형식의 <xref:System.Uri>호스팅된 서비스에 대 한 기본 주소를 포함 하는.</xref:System.Uri>"
  overload: System.ServiceModel.ServiceHostBase.BaseAddresses*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.ChannelDispatchers
  id: ChannelDispatchers
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ChannelDispatchers
  nameWithType: ServiceHostBase.ChannelDispatchers
  fullName: System.ServiceModel.ServiceHostBase.ChannelDispatchers
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "서비스 호스트에서 사용 되는 채널 디스패처 컬렉션을 가져옵니다."
  syntax:
    content: public System.ServiceModel.Dispatcher.ChannelDispatcherCollection ChannelDispatchers { get; }
    return:
      type: System.ServiceModel.Dispatcher.ChannelDispatcherCollection
      description: "<xref href=&quot;System.ServiceModel.Dispatcher.ChannelDispatcherCollection&quot;> </xref> 서비스 호스트에서 사용 되는 채널 디스패처를 포함 하는 합니다."
  overload: System.ServiceModel.ServiceHostBase.ChannelDispatchers*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.CloseTimeout
  id: CloseTimeout
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: CloseTimeout
  nameWithType: ServiceHostBase.CloseTimeout
  fullName: System.ServiceModel.ServiceHostBase.CloseTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "서비스 호스트를 닫는 데 허용 되는 시간 간격을 가져오거나 설정 합니다."
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#33](~/add/codesnippet/csharp/p-system.servicemodel.se_0_1.cs)]'
  syntax:
    content: public TimeSpan CloseTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>서비스 호스트를 닫는 데 허용 되는 시간 간격을 지정 하는.</xref:System.TimeSpan>"
  overload: System.ServiceModel.ServiceHostBase.CloseTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "밀리초에서 값은 음수 이거나 보다 크면 <xref:System.Int32.MaxValue>(2147483647 또는 16 진수 표기법으로 0X7FFFFFFF).</xref:System.Int32.MaxValue>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "호스트는 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>상태 이며 수정할 수 없습니다.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "호스트를 이미는 <xref:System.ServiceModel.CommunicationState>상태 이며 수정할 수 없습니다.</xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "호스트는 <xref:System.ServiceModel.CommunicationState>상태 이며 수정할 수 없습니다.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  id: CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: CreateDescription(IDictionary<String,ContractDescription>)
  nameWithType: ServiceHostBase.CreateDescription(IDictionary<String,ContractDescription>)
  fullName: System.ServiceModel.ServiceHostBase.CreateDescription(IDictionary<String,ContractDescription>)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "파생된 클래스에서 구현 된 경우에 호스팅된 서비스의 설명을 만듭니다."
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#41](~/add/codesnippet/csharp/08a56b4f-56f2-446f-b0f7-_1.cs)]'
  syntax:
    content: protected abstract System.ServiceModel.Description.ServiceDescription CreateDescription (out System.Collections.Generic.IDictionary<string,System.ServiceModel.Description.ContractDescription> implementedContracts);
    parameters:
    - id: implementedContracts
      type: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
      description: "&lt;xref:System.Collections.Generic.IDictionary%602&gt; 를 포함 하는 <xref:System.ServiceModel.Description.ContractDescription>서비스에 대 한 개체입니다.</xref:System.ServiceModel.Description.ContractDescription>"
    return:
      type: System.ServiceModel.Description.ServiceDescription
      description: "<xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;> </xref> 호스팅된 서비스에 대 한 합니다."
  overload: System.ServiceModel.ServiceHostBase.CreateDescription*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.Credentials
  id: Credentials
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: Credentials
  nameWithType: ServiceHostBase.Credentials
  fullName: System.ServiceModel.ServiceHostBase.Credentials
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "호스팅된 서비스에 대 한 자격 증명을 가져옵니다."
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#37](~/add/codesnippet/csharp/p-system.servicemodel.se_11_1.cs)]'
  syntax:
    content: public System.ServiceModel.Description.ServiceCredentials Credentials { get; }
    return:
      type: System.ServiceModel.Description.ServiceCredentials
      description: "<xref href=&quot;System.ServiceModel.Description.ServiceCredentials&quot;> </xref> 호스팅된 서비스에 대 한 합니다."
  overload: System.ServiceModel.ServiceHostBase.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  id: DefaultCloseTimeout
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: DefaultCloseTimeout
  nameWithType: ServiceHostBase.DefaultCloseTimeout
  fullName: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "서비스 호스트를 닫는 데 허용 되는 시간 기본 간격을 가져옵니다."
  syntax:
    content: protected override TimeSpan DefaultCloseTimeout { get; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>서비스 호스트를 닫는 데 허용 되는 시간 기본 간격을 지정 하는.</xref:System.TimeSpan>"
  overload: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  id: DefaultOpenTimeout
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: DefaultOpenTimeout
  nameWithType: ServiceHostBase.DefaultOpenTimeout
  fullName: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "서비스 호스트를 여 허용 되는 시간 기본 간격을 가져옵니다."
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#35](~/add/codesnippet/csharp/p-system.servicemodel.se_16_1.cs)]'
  syntax:
    content: protected override TimeSpan DefaultOpenTimeout { get; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>허용 되는 서비스 호스트를 여는 시간 기본 간격을 지정 하는.</xref:System.TimeSpan>"
  overload: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.Description
  id: Description
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: Description
  nameWithType: ServiceHostBase.Description
  fullName: System.ServiceModel.ServiceHostBase.Description
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "호스팅된 서비스의 설명을 가져옵니다."
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#38](~/add/codesnippet/csharp/p-system.servicemodel.se_3_1.cs)]'
  syntax:
    content: public System.ServiceModel.Description.ServiceDescription Description { get; }
    return:
      type: System.ServiceModel.Description.ServiceDescription
      description: "<xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;> </xref> 호스팅된 서비스에 대 한 합니다."
  overload: System.ServiceModel.ServiceHostBase.Description*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.Extensions
  id: Extensions
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: Extensions
  nameWithType: ServiceHostBase.Extensions
  fullName: System.ServiceModel.ServiceHostBase.Extensions
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "현재 지정 된 서비스 호스트에 대 한 확장을 가져옵니다."
  syntax:
    content: public System.ServiceModel.IExtensionCollection<System.ServiceModel.ServiceHostBase> Extensions { get; }
    return:
      type: System.ServiceModel.IExtensionCollection{System.ServiceModel.ServiceHostBase}
      description: "&lt;xref:System.ServiceModel.IExtensionCollection%601&gt; 형식의 <xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref>합니다."
  overload: System.ServiceModel.ServiceHostBase.Extensions*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.ImplementedContracts
  id: ImplementedContracts
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ImplementedContracts
  nameWithType: ServiceHostBase.ImplementedContracts
  fullName: System.ServiceModel.ServiceHostBase.ImplementedContracts
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "호스팅된 서비스에서 구현 된 계약을 검색 합니다."
  syntax:
    content: protected System.Collections.Generic.IDictionary<string,System.ServiceModel.Description.ContractDescription> ImplementedContracts { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
      description: "&lt;xref:System.Collections.Generic.IDictionary%602&gt; 를 포함 하는 <xref:System.ServiceModel.Description.ContractDescription>서비스에 대 한 개체입니다.</xref:System.ServiceModel.Description.ContractDescription>"
  overload: System.ServiceModel.ServiceHostBase.ImplementedContracts*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  id: IncrementManualFlowControlLimit(System.Int32)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: IncrementManualFlowControlLimit(Int32)
  nameWithType: ServiceHostBase.IncrementManualFlowControlLimit(Int32)
  fullName: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(Int32)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "호스팅된 서비스에 메시지 흐름 속도 한도 지정 된 증분만큼 늘립니다."
  remarks: "이 한도 사용 하 여 액세스할 수는 <xref:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit%2A>속성.</xref:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit%2A>"
  example:
  - '[!code-cs[S_SelfHost#42](~/add/codesnippet/csharp/84777560-890d-4922-a9a5-_1.cs)]'
  syntax:
    content: public int IncrementManualFlowControlLimit (int incrementBy);
    parameters:
    - id: incrementBy
      type: System.Int32
      description: "흐름 제어 한도 늘릴 수 있는 메시지 수입니다."
    return:
      type: System.Int32
      description: "증분이 추가 된 후 새 제한입니다."
  overload: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "값이&0; 보다 작습니다."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  id: InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: InitializeDescription(UriSchemeKeyedCollection)
  nameWithType: ServiceHostBase.InitializeDescription(UriSchemeKeyedCollection)
  fullName: System.ServiceModel.ServiceHostBase.InitializeDescription(UriSchemeKeyedCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "만들고 계약 및 서비스 설명 사용 하는 서비스 호스트를 초기화 합니다."
  syntax:
    content: protected void InitializeDescription (System.ServiceModel.UriSchemeKeyedCollection baseAddresses);
    parameters:
    - id: baseAddresses
      type: System.ServiceModel.UriSchemeKeyedCollection
      description: "A <xref href=&quot;System.ServiceModel.UriSchemeKeyedCollection&quot;> </xref> 호스팅된 서비스에 대 한 기본 주소를 포함 하는 합니다."
  overload: System.ServiceModel.ServiceHostBase.InitializeDescription*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.InitializeRuntime
  id: InitializeRuntime
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: InitializeRuntime()
  nameWithType: ServiceHostBase.InitializeRuntime()
  fullName: System.ServiceModel.ServiceHostBase.InitializeRuntime()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "서비스 호스트의 런타임을 초기화합니다."
  syntax:
    content: protected virtual void InitializeRuntime ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.InitializeRuntime*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "호스팅된 서비스에 대해 설명 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  id: LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: LoadConfigurationSection(ServiceElement)
  nameWithType: ServiceHostBase.LoadConfigurationSection(ServiceElement)
  fullName: System.ServiceModel.ServiceHostBase.LoadConfigurationSection(ServiceElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "호스팅된 서비스의 구성 파일에서 서비스 요소를 로드합니다."
  syntax:
    content: protected void LoadConfigurationSection (System.ServiceModel.Configuration.ServiceElement serviceSection);
    parameters:
    - id: serviceSection
      type: System.ServiceModel.Configuration.ServiceElement
      description: "<xref href=&quot;System.ServiceModel.Configuration.ServiceElement&quot;> </xref> 구성에서 로드 되도록 합니다."
  overload: System.ServiceModel.ServiceHostBase.LoadConfigurationSection*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceSection</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "호스팅된 서비스에 대해 설명 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  id: ManualFlowControlLimit
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ManualFlowControlLimit
  nameWithType: ServiceHostBase.ManualFlowControlLimit
  fullName: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "호스팅된 서비스에서 수신 된 메시지에 대 한 흐름 제어 한도 가져오거나 설정 합니다."
  remarks: "사용 하 여이 한도 높일 수는 <xref:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit%28System.Int32%29>메서드.</xref:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit%28System.Int32%29>"
  example:
  - '[!code-cs[S_SelfHost#39](~/add/codesnippet/csharp/p-system.servicemodel.se_10_1.cs)]'
  syntax:
    content: public int ManualFlowControlLimit { get; set; }
    return:
      type: System.Int32
      description: "호스팅된 서비스에서 수신 된 메시지에 대 한 흐름 제어도 합니다."
  overload: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "값이&0; 보다 작습니다."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnAbort
  id: OnAbort
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnAbort()
  nameWithType: ServiceHostBase.OnAbort()
  fullName: System.ServiceModel.ServiceHostBase.OnAbort()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "서비스를 중단합니다."
  syntax:
    content: protected override void OnAbort ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.OnAbort*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnBeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: ServiceHostBase.OnBeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.ServiceHostBase.OnBeginClose(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "서비스 호스트 닫기에 호출 되는 비동기 작업을 시작 합니다."
  syntax:
    content: protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>닫기 작업에서 시간이 초과 되기 전에 완료 해야 기간을 지정 하는.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>비동기 작업 닫기 완료 알림을 받는 대리자입니다.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "비동기 닫기 작업과 연결 된 상태 정보를 포함 하는 응용 프로그램이 지정한는 개체입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>비동기 닫기 작업을 참조 하는.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.ServiceHostBase.OnBeginClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnBeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: ServiceHostBase.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.ServiceHostBase.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "서비스 호스트를 열기에서 호출 되는 비동기 작업을 시작 합니다."
  syntax:
    content: protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>열기 작업에서 시간이 초과 되기 전에 완료 해야 기간을 지정 하는.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>비동기 작업 열기 완료 알림을 받는 대리자입니다.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "비동기 열기 작업과 연결 된 상태 정보를 포함 하는 응용 프로그램이 지정한는 개체입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>비동기 열기 작업을 참조 하는.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.ServiceHostBase.OnBeginOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)
  id: OnClose(System.TimeSpan)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnClose(TimeSpan)
  nameWithType: ServiceHostBase.OnClose(TimeSpan)
  fullName: System.ServiceModel.ServiceHostBase.OnClose(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "채널 디스패처 및 연결 된 인스턴스 컨텍스트 및 수신기를 포함 하 여 호스팅된 서비스를 닫습니다."
  remarks: "다음 작업을 수행 OnClose 호출:-모든 입력을 닫습니다 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>, 닫힙니다 이와 관련 된 <xref:System.ServiceModel.Channels.IChannelListener>인스턴스.</xref:System.ServiceModel.Channels.IChannelListener> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 모든 새 채널의 수락을 중지 합니다.      -호출 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput%2A>모든 <xref:System.ServiceModel.InstanceContext>새 메시지를 수락 하지는 개체입니다.</xref:System.ServiceModel.InstanceContext> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput%2A>      -모든 대기 <xref:System.ServiceModel.InstanceContext>관련된 채널을 보류 중인 모든 메시지를 보내기 완료 수행 됨을 닫기 위한 개체입니다.</xref:System.ServiceModel.InstanceContext>      -닫습니다는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>호스트와 연결 된 개체입니다.</xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  syntax:
    content: protected override void OnClose (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>닫기 작업에서 시간이 초과 되기 전에 완료 해야 기간을 지정 하는.</xref:System.TimeSpan>"
  overload: System.ServiceModel.ServiceHostBase.OnClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnClosed
  id: OnClosed
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnClosed()
  nameWithType: ServiceHostBase.OnClosed()
  fullName: System.ServiceModel.ServiceHostBase.OnClosed()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "서비스 호스트에서 사용 하는 리소스를 해제 합니다."
  syntax:
    content: protected override void OnClosed ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.OnClosed*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)
  id: OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnEndClose(IAsyncResult)
  nameWithType: ServiceHostBase.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.ServiceHostBase.OnEndClose(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "서비스 호스트의 마감에 호출 되는 비동기 작업을 완료 합니다."
  syntax:
    content: protected override void OnEndClose (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>에 대 한 호출에서 반환 되는 &lt;xref:System.ServiceModel.ServiceHostBase.OnBeginClose%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt; 메서드.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.ServiceHostBase.OnEndClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  id: OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnEndOpen(IAsyncResult)
  nameWithType: ServiceHostBase.OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.ServiceHostBase.OnEndOpen(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "서비스 호스트를 열기에서 호출 되는 비동기 작업을 완료 합니다."
  syntax:
    content: protected override void OnEndOpen (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>에 대 한 호출에서 반환 되는 &lt;xref:System.ServiceModel.ServiceHostBase.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt; 메서드.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.ServiceHostBase.OnEndOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  id: OnOpen(System.TimeSpan)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnOpen(TimeSpan)
  nameWithType: ServiceHostBase.OnOpen(TimeSpan)
  fullName: System.ServiceModel.ServiceHostBase.OnOpen(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "채널 디스패처를 엽니다."
  syntax:
    content: protected override void OnOpen (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>열기 작업에서 시간이 초과 되기 전에 완료 해야 기간을 지정 하는.</xref:System.TimeSpan>"
  overload: System.ServiceModel.ServiceHostBase.OnOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnOpened
  id: OnOpened
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnOpened()
  nameWithType: ServiceHostBase.OnOpened()
  fullName: System.ServiceModel.ServiceHostBase.OnOpened()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "호스팅된 서비스에 대 한 서비스 자격 증명, 서비스 인증 및 권한 부여 동작을 가져옵니다."
  remarks: "이러한 동작은 서비스를 열 때 초기화 후에 변경할 수 없습니다."
  syntax:
    content: protected override void OnOpened ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.OnOpened*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OpenTimeout
  id: OpenTimeout
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OpenTimeout
  nameWithType: ServiceHostBase.OpenTimeout
  fullName: System.ServiceModel.ServiceHostBase.OpenTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "서비스 호스트를 여 허용 되는 시간 간격을 가져오거나 설정 합니다."
  syntax:
    content: public TimeSpan OpenTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>허용 되는 서비스 호스트를 여는 시간 간격을 지정 하는.</xref:System.TimeSpan>"
  overload: System.ServiceModel.ServiceHostBase.OpenTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "값은 음수 이거나 보다 크면 <xref:System.Int32.MaxValue>(2147483647 또는 16 진수 표기법으로 0X7FFFFFFF).</xref:System.Int32.MaxValue>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "호스트는 <xref:System.ServiceModel.CommunicationState>또는 <xref:System.ServiceModel.CommunicationState>상태 이며 수정할 수 없습니다.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "호스트를 이미는 <xref:System.ServiceModel.CommunicationState>상태 이며 수정할 수 없습니다.</xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "호스트는 <xref:System.ServiceModel.CommunicationState>상태 이며 수정할 수 없습니다.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  id: ReleasePerformanceCounters
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ReleasePerformanceCounters()
  nameWithType: ServiceHostBase.ReleasePerformanceCounters()
  fullName: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "호스팅된 서비스에 대 한 서비스 및 채널 디스패처 성능 카운터를 해제합니다."
  remarks: "이 메서드는 <xref:System.ServiceModel.ServiceHostBase.OnClose%28System.TimeSpan%29>및 <xref:System.ServiceModel.ServiceHostBase.OnEndClose%28System.IAsyncResult%29>.</xref:System.ServiceModel.ServiceHostBase.OnEndClose%28System.IAsyncResult%29> </xref:System.ServiceModel.ServiceHostBase.OnClose%28System.TimeSpan%29> 를 호출할 때 호출 됩니다."
  syntax:
    content: protected void ReleasePerformanceCounters ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  id: SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: SetEndpointAddress(ServiceEndpoint,String)
  nameWithType: ServiceHostBase.SetEndpointAddress(ServiceEndpoint,String)
  fullName: System.ServiceModel.ServiceHostBase.SetEndpointAddress(ServiceEndpoint,String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "지정된 된 주소에 지정된 된 끝점의 끝점 주소를 설정합니다."
  syntax:
    content: public void SetEndpointAddress (System.ServiceModel.Description.ServiceEndpoint endpoint, string relativeAddress);
    parameters:
    - id: endpoint
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "서비스 끝점입니다."
    - id: relativeAddress
      type: System.String
      description: "끝점 주소입니다."
  overload: System.ServiceModel.ServiceHostBase.SetEndpointAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: ServiceHostBase.System.IDisposable.Dispose()
  fullName: System.ServiceModel.ServiceHostBase.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "서비스 호스트를 닫습니다."
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  id: UnknownMessageReceived
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: UnknownMessageReceived
  nameWithType: ServiceHostBase.UnknownMessageReceived
  fullName: System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  type: Event
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "알 수 없는 메시지를 받을 때 발생 합니다."
  remarks: >-
    > [!WARNING]

    >  When using <xref:System.ServiceModel.WorkflowServiceHost>, exposing a hosting endpoint, and a UnknownMessageReceived exception is thrown, the host passes the message to the event handler. If an attempt is made to read this message an <xref:System.InvalidOperationException> is thrown. The description of the exception will say “This message cannot support the operation because it has been read.”  The WCF infrastructure reads the message while extracting the message parameters. This message is then passed to the event handler and any attempt to read it causes an exception. If you need to access message parameters in your <xref:System.InvalidOperationException> handler from a hosting endpoint, define the hosting endpoint contract using MessageContract and place the needed data into a message header. [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] hosting endpoints see [Workflow Service Host Extensibility](~/add/includes/ajax-current-ext-md.md)
  syntax:
    content: public event EventHandler<System.ServiceModel.UnknownMessageReceivedEventArgs> UnknownMessageReceived;
    return:
      type: System.EventHandler{System.ServiceModel.UnknownMessageReceivedEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: System.ServiceModel.Channels.CommunicationObject
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ServiceModel.CommunicationObjectFaultedException
  isExternal: true
  name: System.ServiceModel.CommunicationObjectFaultedException
- uid: System.ServiceModel.ServiceHostBase.#ctor
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ServiceHostBase()
  nameWithType: ServiceHostBase.ServiceHostBase()
  fullName: System.ServiceModel.ServiceHostBase.ServiceHostBase()
- uid: System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddBaseAddress(Uri)
  nameWithType: ServiceHostBase.AddBaseAddress(Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddBaseAddress(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddDefaultEndpoints()
  nameWithType: ServiceHostBase.AddDefaultEndpoints()
  fullName: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.ServiceModel.Description.ServiceEndpoint}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ServiceEndpoint>
  nameWithType: ReadOnlyCollection<ServiceEndpoint>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.ServiceModel.Description.ServiceEndpoint>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.ServiceModel.Description.ServiceEndpoint>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ServiceEndpoint
    name: ServiceEndpoint
    nameWithType: ServiceEndpoint
    fullName: ServiceEndpoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint(ServiceEndpoint)
  nameWithType: ServiceHostBase.AddServiceEndpoint(ServiceEndpoint)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(ServiceEndpoint)
- uid: System.ServiceModel.Description.ServiceEndpoint
  parent: System.ServiceModel.Description
  isExternal: true
  name: ServiceEndpoint
  nameWithType: ServiceEndpoint
  fullName: System.ServiceModel.Description.ServiceEndpoint
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint(String,Binding,String)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,String)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint(String,Binding,Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,Uri)
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint(String,Binding,String,Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,String,Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,String,Uri)
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint(String,Binding,Uri,Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,Uri,Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,Uri,Uri)
- uid: System.ServiceModel.ServiceHostBase.ApplyConfiguration
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ApplyConfiguration()
  nameWithType: ServiceHostBase.ApplyConfiguration()
  fullName: System.ServiceModel.ServiceHostBase.ApplyConfiguration()
- uid: System.ServiceModel.ServiceHostBase.Authentication
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Authentication
  nameWithType: ServiceHostBase.Authentication
  fullName: System.ServiceModel.ServiceHostBase.Authentication
- uid: System.ServiceModel.Description.ServiceAuthenticationBehavior
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceAuthenticationBehavior
  nameWithType: ServiceAuthenticationBehavior
  fullName: System.ServiceModel.Description.ServiceAuthenticationBehavior
- uid: System.ServiceModel.ServiceHostBase.Authorization
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Authorization
  nameWithType: ServiceHostBase.Authorization
  fullName: System.ServiceModel.ServiceHostBase.Authorization
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceAuthorizationBehavior
  nameWithType: ServiceAuthorizationBehavior
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior
- uid: System.ServiceModel.ServiceHostBase.BaseAddresses
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: BaseAddresses
  nameWithType: ServiceHostBase.BaseAddresses
  fullName: System.ServiceModel.ServiceHostBase.BaseAddresses
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Uri}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<Uri>
  nameWithType: ReadOnlyCollection<Uri>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Uri>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Uri>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceHostBase.ChannelDispatchers
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ChannelDispatchers
  nameWithType: ServiceHostBase.ChannelDispatchers
  fullName: System.ServiceModel.ServiceHostBase.ChannelDispatchers
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherCollection
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: ChannelDispatcherCollection
  nameWithType: ChannelDispatcherCollection
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherCollection
- uid: System.ServiceModel.ServiceHostBase.CloseTimeout
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: CloseTimeout
  nameWithType: ServiceHostBase.CloseTimeout
  fullName: System.ServiceModel.ServiceHostBase.CloseTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: CreateDescription(IDictionary<String,ContractDescription>)
  nameWithType: ServiceHostBase.CreateDescription(IDictionary<String,ContractDescription>)
  fullName: System.ServiceModel.ServiceHostBase.CreateDescription(IDictionary<String,ContractDescription>)
- uid: System.ServiceModel.Description.ServiceDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.ServiceModel.Description.ServiceDescription
- uid: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,ContractDescription>
  nameWithType: IDictionary<String,ContractDescription>
  fullName: System.Collections.Generic.IDictionary<System.String,System.ServiceModel.Description.ContractDescription>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.ServiceModel.Description.ContractDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.ServiceModel.Description.ContractDescription
    name: ContractDescription
    nameWithType: ContractDescription
    fullName: ContractDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceHostBase.Credentials
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Credentials
  nameWithType: ServiceHostBase.Credentials
  fullName: System.ServiceModel.ServiceHostBase.Credentials
- uid: System.ServiceModel.Description.ServiceCredentials
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceCredentials
  nameWithType: ServiceCredentials
  fullName: System.ServiceModel.Description.ServiceCredentials
- uid: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ServiceHostBase.DefaultCloseTimeout
  fullName: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
- uid: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ServiceHostBase.DefaultOpenTimeout
  fullName: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
- uid: System.ServiceModel.ServiceHostBase.Description
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Description
  nameWithType: ServiceHostBase.Description
  fullName: System.ServiceModel.ServiceHostBase.Description
- uid: System.ServiceModel.ServiceHostBase.Extensions
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Extensions
  nameWithType: ServiceHostBase.Extensions
  fullName: System.ServiceModel.ServiceHostBase.Extensions
- uid: System.ServiceModel.IExtensionCollection{System.ServiceModel.ServiceHostBase}
  parent: System.ServiceModel
  isExternal: true
  name: IExtensionCollection<ServiceHostBase>
  nameWithType: IExtensionCollection<ServiceHostBase>
  fullName: System.ServiceModel.IExtensionCollection<System.ServiceModel.ServiceHostBase>
  spec.csharp:
  - uid: System.ServiceModel.IExtensionCollection`1
    name: IExtensionCollection
    nameWithType: IExtensionCollection
    fullName: IExtensionCollection<System.ServiceModel.ServiceHostBase>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.ServiceHostBase
    name: ServiceHostBase
    nameWithType: ServiceHostBase
    fullName: ServiceHostBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceHostBase.ImplementedContracts
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ImplementedContracts
  nameWithType: ServiceHostBase.ImplementedContracts
  fullName: System.ServiceModel.ServiceHostBase.ImplementedContracts
- uid: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: IncrementManualFlowControlLimit(Int32)
  nameWithType: ServiceHostBase.IncrementManualFlowControlLimit(Int32)
  fullName: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: InitializeDescription(UriSchemeKeyedCollection)
  nameWithType: ServiceHostBase.InitializeDescription(UriSchemeKeyedCollection)
  fullName: System.ServiceModel.ServiceHostBase.InitializeDescription(UriSchemeKeyedCollection)
- uid: System.ServiceModel.UriSchemeKeyedCollection
  parent: System.ServiceModel
  isExternal: false
  name: UriSchemeKeyedCollection
  nameWithType: UriSchemeKeyedCollection
  fullName: System.ServiceModel.UriSchemeKeyedCollection
- uid: System.ServiceModel.ServiceHostBase.InitializeRuntime
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: InitializeRuntime()
  nameWithType: ServiceHostBase.InitializeRuntime()
  fullName: System.ServiceModel.ServiceHostBase.InitializeRuntime()
- uid: System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: LoadConfigurationSection(ServiceElement)
  nameWithType: ServiceHostBase.LoadConfigurationSection(ServiceElement)
  fullName: System.ServiceModel.ServiceHostBase.LoadConfigurationSection(ServiceElement)
- uid: System.ServiceModel.Configuration.ServiceElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: ServiceElement
  nameWithType: ServiceElement
  fullName: System.ServiceModel.Configuration.ServiceElement
- uid: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ManualFlowControlLimit
  nameWithType: ServiceHostBase.ManualFlowControlLimit
  fullName: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
- uid: System.ServiceModel.ServiceHostBase.OnAbort
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnAbort()
  nameWithType: ServiceHostBase.OnAbort()
  fullName: System.ServiceModel.ServiceHostBase.OnAbort()
- uid: System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnBeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: ServiceHostBase.OnBeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.ServiceHostBase.OnBeginClose(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnBeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: ServiceHostBase.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.ServiceHostBase.OnBeginOpen(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnClose(TimeSpan)
  nameWithType: ServiceHostBase.OnClose(TimeSpan)
  fullName: System.ServiceModel.ServiceHostBase.OnClose(TimeSpan)
- uid: System.ServiceModel.ServiceHostBase.OnClosed
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnClosed()
  nameWithType: ServiceHostBase.OnClosed()
  fullName: System.ServiceModel.ServiceHostBase.OnClosed()
- uid: System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnEndClose(IAsyncResult)
  nameWithType: ServiceHostBase.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.ServiceHostBase.OnEndClose(IAsyncResult)
- uid: System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnEndOpen(IAsyncResult)
  nameWithType: ServiceHostBase.OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.ServiceHostBase.OnEndOpen(IAsyncResult)
- uid: System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnOpen(TimeSpan)
  nameWithType: ServiceHostBase.OnOpen(TimeSpan)
  fullName: System.ServiceModel.ServiceHostBase.OnOpen(TimeSpan)
- uid: System.ServiceModel.ServiceHostBase.OnOpened
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnOpened()
  nameWithType: ServiceHostBase.OnOpened()
  fullName: System.ServiceModel.ServiceHostBase.OnOpened()
- uid: System.ServiceModel.ServiceHostBase.OpenTimeout
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OpenTimeout
  nameWithType: ServiceHostBase.OpenTimeout
  fullName: System.ServiceModel.ServiceHostBase.OpenTimeout
- uid: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ReleasePerformanceCounters()
  nameWithType: ServiceHostBase.ReleasePerformanceCounters()
  fullName: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters()
- uid: System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: SetEndpointAddress(ServiceEndpoint,String)
  nameWithType: ServiceHostBase.SetEndpointAddress(ServiceEndpoint,String)
  fullName: System.ServiceModel.ServiceHostBase.SetEndpointAddress(ServiceEndpoint,String)
- uid: System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: ServiceHostBase.System.IDisposable.Dispose()
  fullName: System.ServiceModel.ServiceHostBase.System.IDisposable.Dispose()
- uid: System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: UnknownMessageReceived
  nameWithType: ServiceHostBase.UnknownMessageReceived
  fullName: System.ServiceModel.ServiceHostBase.UnknownMessageReceived
- uid: System.EventHandler{System.ServiceModel.UnknownMessageReceivedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<UnknownMessageReceivedEventArgs>
  nameWithType: EventHandler<UnknownMessageReceivedEventArgs>
  fullName: System.EventHandler<System.ServiceModel.UnknownMessageReceivedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.ServiceModel.UnknownMessageReceivedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.UnknownMessageReceivedEventArgs
    name: UnknownMessageReceivedEventArgs
    nameWithType: UnknownMessageReceivedEventArgs
    fullName: UnknownMessageReceivedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceHostBase.#ctor*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase.ServiceHostBase
- uid: System.ServiceModel.ServiceHostBase.AddBaseAddress*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddBaseAddress
  nameWithType: ServiceHostBase.AddBaseAddress
- uid: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddDefaultEndpoints
  nameWithType: ServiceHostBase.AddDefaultEndpoints
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint
  nameWithType: ServiceHostBase.AddServiceEndpoint
- uid: System.ServiceModel.ServiceHostBase.ApplyConfiguration*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ApplyConfiguration
  nameWithType: ServiceHostBase.ApplyConfiguration
- uid: System.ServiceModel.ServiceHostBase.Authentication*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Authentication
  nameWithType: ServiceHostBase.Authentication
- uid: System.ServiceModel.ServiceHostBase.Authorization*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Authorization
  nameWithType: ServiceHostBase.Authorization
- uid: System.ServiceModel.ServiceHostBase.BaseAddresses*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: BaseAddresses
  nameWithType: ServiceHostBase.BaseAddresses
- uid: System.ServiceModel.ServiceHostBase.ChannelDispatchers*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ChannelDispatchers
  nameWithType: ServiceHostBase.ChannelDispatchers
- uid: System.ServiceModel.ServiceHostBase.CloseTimeout*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: CloseTimeout
  nameWithType: ServiceHostBase.CloseTimeout
- uid: System.ServiceModel.ServiceHostBase.CreateDescription*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: CreateDescription
  nameWithType: ServiceHostBase.CreateDescription
- uid: System.ServiceModel.ServiceHostBase.Credentials*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Credentials
  nameWithType: ServiceHostBase.Credentials
- uid: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ServiceHostBase.DefaultCloseTimeout
- uid: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ServiceHostBase.DefaultOpenTimeout
- uid: System.ServiceModel.ServiceHostBase.Description*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Description
  nameWithType: ServiceHostBase.Description
- uid: System.ServiceModel.ServiceHostBase.Extensions*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Extensions
  nameWithType: ServiceHostBase.Extensions
- uid: System.ServiceModel.ServiceHostBase.ImplementedContracts*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ImplementedContracts
  nameWithType: ServiceHostBase.ImplementedContracts
- uid: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: IncrementManualFlowControlLimit
  nameWithType: ServiceHostBase.IncrementManualFlowControlLimit
- uid: System.ServiceModel.ServiceHostBase.InitializeDescription*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: InitializeDescription
  nameWithType: ServiceHostBase.InitializeDescription
- uid: System.ServiceModel.ServiceHostBase.InitializeRuntime*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: InitializeRuntime
  nameWithType: ServiceHostBase.InitializeRuntime
- uid: System.ServiceModel.ServiceHostBase.LoadConfigurationSection*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: LoadConfigurationSection
  nameWithType: ServiceHostBase.LoadConfigurationSection
- uid: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ManualFlowControlLimit
  nameWithType: ServiceHostBase.ManualFlowControlLimit
- uid: System.ServiceModel.ServiceHostBase.OnAbort*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnAbort
  nameWithType: ServiceHostBase.OnAbort
- uid: System.ServiceModel.ServiceHostBase.OnBeginClose*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnBeginClose
  nameWithType: ServiceHostBase.OnBeginClose
- uid: System.ServiceModel.ServiceHostBase.OnBeginOpen*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnBeginOpen
  nameWithType: ServiceHostBase.OnBeginOpen
- uid: System.ServiceModel.ServiceHostBase.OnClose*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnClose
  nameWithType: ServiceHostBase.OnClose
- uid: System.ServiceModel.ServiceHostBase.OnClosed*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnClosed
  nameWithType: ServiceHostBase.OnClosed
- uid: System.ServiceModel.ServiceHostBase.OnEndClose*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnEndClose
  nameWithType: ServiceHostBase.OnEndClose
- uid: System.ServiceModel.ServiceHostBase.OnEndOpen*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnEndOpen
  nameWithType: ServiceHostBase.OnEndOpen
- uid: System.ServiceModel.ServiceHostBase.OnOpen*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnOpen
  nameWithType: ServiceHostBase.OnOpen
- uid: System.ServiceModel.ServiceHostBase.OnOpened*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnOpened
  nameWithType: ServiceHostBase.OnOpened
- uid: System.ServiceModel.ServiceHostBase.OpenTimeout*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OpenTimeout
  nameWithType: ServiceHostBase.OpenTimeout
- uid: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ReleasePerformanceCounters
  nameWithType: ServiceHostBase.ReleasePerformanceCounters
- uid: System.ServiceModel.ServiceHostBase.SetEndpointAddress*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: SetEndpointAddress
  nameWithType: ServiceHostBase.SetEndpointAddress
- uid: System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: ServiceHostBase.System.IDisposable.Dispose
