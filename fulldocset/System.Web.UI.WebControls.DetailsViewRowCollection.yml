### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.DetailsViewRowCollection
  id: DetailsViewRowCollection
  children:
  - System.Web.UI.WebControls.DetailsViewRowCollection.#ctor(System.Collections.ArrayList)
  - System.Web.UI.WebControls.DetailsViewRowCollection.CopyTo(System.Web.UI.WebControls.DetailsViewRow[],System.Int32)
  - System.Web.UI.WebControls.DetailsViewRowCollection.Count
  - System.Web.UI.WebControls.DetailsViewRowCollection.GetEnumerator
  - System.Web.UI.WebControls.DetailsViewRowCollection.IsReadOnly
  - System.Web.UI.WebControls.DetailsViewRowCollection.IsSynchronized
  - System.Web.UI.WebControls.DetailsViewRowCollection.Item(System.Int32)
  - System.Web.UI.WebControls.DetailsViewRowCollection.SyncRoot
  - System.Web.UI.WebControls.DetailsViewRowCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  langs:
  - csharp
  name: DetailsViewRowCollection
  nameWithType: DetailsViewRowCollection
  fullName: System.Web.UI.WebControls.DetailsViewRowCollection
  type: Class
  summary: "컬렉션을 나타냅니다 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref> 개체에 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "DetailsViewRowCollection 클래스는 저장 하 고 컬렉션을 관리 하는 데 사용 <xref:System.Web.UI.WebControls.DetailsViewRow>개체에 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsViewRow> 각 행에는 <xref:System.Web.UI.WebControls.DetailsView>제어로 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsViewRow>개체입니다.</xref:System.Web.UI.WebControls.DetailsViewRow> </xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView>컨트롤에 대 한 DetailsViewRowCollection 클래스를 사용 하 여 해당 <xref:System.Web.UI.WebControls.DetailsView.Rows%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.Rows%2A> </xref:System.Web.UI.WebControls.DetailsView>      > [!NOTE] >는 <xref:System.Web.UI.WebControls.DetailsView.Rows%2A>속성에는 데이터 행만 포함 합니다.</xref:System.Web.UI.WebControls.DetailsView.Rows%2A> 머리글 행, 바닥글 행, 위쪽 페이저 행 및 아래쪽 호출기 행을 액세스 하려면 사용 된 <xref:System.Web.UI.WebControls.DetailsView.HeaderRow%2A>, <xref:System.Web.UI.WebControls.DetailsView.FooterRow%2A>, <xref:System.Web.UI.WebControls.DetailsView.TopPagerRow%2A>, 및 <xref:System.Web.UI.WebControls.DetailsView.BottomPagerRow%2A>속성을 각각.</xref:System.Web.UI.WebControls.DetailsView.BottomPagerRow%2A> </xref:System.Web.UI.WebControls.DetailsView.TopPagerRow%2A> </xref:System.Web.UI.WebControls.DetailsView.FooterRow%2A> </xref:System.Web.UI.WebControls.DetailsView.HeaderRow%2A>       DetailsViewRowCollection 클래스를 사용 하는 컬렉션의 항목에 액세스 하는 여러 방법을 지원:-사용 된 <xref:System.Web.UI.WebControls.DetailsViewRowCollection.Item%2A>인덱서를 직접 검색 하는 <xref:System.Web.UI.WebControls.DetailsViewRow>개체 컬렉션에서 특정 인덱스에.</xref:System.Web.UI.WebControls.DetailsViewRow> </xref:System.Web.UI.WebControls.DetailsViewRowCollection.Item%2A>      -사용 된 <xref:System.Web.UI.WebControls.DetailsViewRowCollection.GetEnumerator%2A>메서드는 컬렉션을 반복 하는 데 사용할 수 있는 열거자를 검색 합니다.</xref:System.Web.UI.WebControls.DetailsViewRowCollection.GetEnumerator%2A>      -사용은 <xref:System.Web.UI.WebControls.DetailsViewRowCollection.CopyTo%2A>메서드 컬렉션의 항목에 액세스 하도록 한 다음 사용할 수 있는 배열에 컬렉션의 항목을 복사 합니다.</xref:System.Web.UI.WebControls.DetailsViewRowCollection.CopyTo%2A>       컬렉션에 있는 항목의 총 수를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsViewRowCollection.Count%2A>속성.</xref:System.Web.UI.WebControls.DetailsViewRowCollection.Count%2A>"
  example:
  - "The following code example demonstrates how to iterate through the <xref:System.Web.UI.WebControls.DetailsViewRow> objects in the <xref:System.Web.UI.WebControls.DetailsView.Rows%2A> collection of a <xref:System.Web.UI.WebControls.DetailsView> control. The value of each row is then displayed on the page.  \n  \n [!code-vb[DetailsViewRowCollection#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_27_1.aspx)]\n [!code-cs[DetailsViewRowCollection#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_27_1.aspx)]"
  syntax:
    content: 'public class DetailsViewRowCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsViewRowCollection.#ctor(System.Collections.ArrayList)
  id: '#ctor(System.Collections.ArrayList)'
  parent: System.Web.UI.WebControls.DetailsViewRowCollection
  langs:
  - csharp
  name: DetailsViewRowCollection(ArrayList)
  nameWithType: DetailsViewRowCollection.DetailsViewRowCollection(ArrayList)
  fullName: System.Web.UI.WebControls.DetailsViewRowCollection.DetailsViewRowCollection(ArrayList)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRowCollection&quot;> </xref> 사용 하 여 지정 된 클래스 <xref href=&quot;System.Collections.ArrayList&quot;> </xref> 개체입니다."
  remarks: "새 인스턴스를 초기화 하려면이 생성자를 사용 하는 <xref:System.Web.UI.WebControls.DetailsViewRowCollection>사용 하 여 지정 된 클래스 <xref:System.Collections.ArrayList>개체입니다.</xref:System.Collections.ArrayList> </xref:System.Web.UI.WebControls.DetailsViewRowCollection> <xref:System.Collections.ArrayList>개체에 포함 되어는 <xref:System.Web.UI.WebControls.DetailsViewRow>하는 컬렉션을 채우는 데 사용할 개체입니다.</xref:System.Web.UI.WebControls.DetailsViewRow> </xref:System.Collections.ArrayList>"
  syntax:
    content: public DetailsViewRowCollection (System.Collections.ArrayList rows);
    parameters:
    - id: rows
      type: System.Collections.ArrayList
      description: "<xref href=&quot;System.Collections.ArrayList&quot;> </xref> 를 포함 하는 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref> 컬렉션을 초기화 하는 개체입니다."
  overload: System.Web.UI.WebControls.DetailsViewRowCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsViewRowCollection.CopyTo(System.Web.UI.WebControls.DetailsViewRow[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.DetailsViewRow[],System.Int32)
  parent: System.Web.UI.WebControls.DetailsViewRowCollection
  langs:
  - csharp
  name: CopyTo(DetailsViewRow[],Int32)
  nameWithType: DetailsViewRowCollection.CopyTo(DetailsViewRow[],Int32)
  fullName: System.Web.UI.WebControls.DetailsViewRowCollection.CopyTo(DetailsViewRow[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 모든 항목을 복사 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRowCollection&quot;> </xref> 개체 지정한 <xref:System.Array> <xref:System.Array>.</xref:System.Array> 지정된 된 인덱스에서 시작 하는 개체</xref:System.Array>"
  remarks: "에 항목을 복사 하려면이 메서드를 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsViewRowCollection>지정 된 인덱스부터 지정된 된 배열에는 개체입니다.</xref:System.Web.UI.WebControls.DetailsViewRowCollection> 다음 배열 컬렉션의 항목 액세스 데 사용할 수 있습니다.      > [!NOTE] >에 대 한&0;부터 시작 하는 배열을 사용 해야는 `array` 매개 변수입니다."
  example:
  - "The following code example demonstrates how to use the CopyTo method to copy the items in a <xref:System.Web.UI.WebControls.DetailsViewRowCollection> object to an array. The array is then iterated through and the value of each row is displayed on the page.  \n  \n [!code-cs[DetailsViewRowCollectionCopyTo#1](~/add/codesnippet/csharp/a5b63f53-4f67-4339-95dc-_1.aspx)]\n [!code-vb[DetailsViewRowCollectionCopyTo#1](~/add/codesnippet/visualbasic/a5b63f53-4f67-4339-95dc-_1.aspx)]"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.DetailsViewRow[] array, int index);
    parameters:
    - id: array
      type: System.Web.UI.WebControls.DetailsViewRow[]
      description: "0부터 시작 <xref:System.Array>에서 복사한 항목을 수신 하는 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRowCollection&quot;> </xref>.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "지정 된 첫 번째 인덱스 <xref:System.Array>복사한 내용을 받도록.</xref:System.Array>"
  overload: System.Web.UI.WebControls.DetailsViewRowCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsViewRowCollection.Count
  id: Count
  parent: System.Web.UI.WebControls.DetailsViewRowCollection
  langs:
  - csharp
  name: Count
  nameWithType: DetailsViewRowCollection.Count
  fullName: System.Web.UI.WebControls.DetailsViewRowCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 있는 항목의 수를 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRowCollection&quot;> </xref> 개체입니다."
  remarks: "Count 속성을 사용 하 여 컬렉션의 항목 수를 결정 합니다. Count 속성 컬렉션을 반복 하는 경우의 상한을 결정 하 일반적으로 사용 됩니다. Count 속성 컬렉션이 비어 있는지 여부를 확인 하려면 일반적으로 사용 됩니다."
  example:
  - "The following code example demonstrates how to use the Count property to determine whether a <xref:System.Web.UI.WebControls.DetailsViewRowCollection> object contains any items before iterating through the collection.  \n  \n [!code-vb[DetailsViewRowCollection#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_651_1.aspx)]\n [!code-cs[DetailsViewRowCollection#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_651_1.aspx)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "항목 수는 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRowCollection&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DetailsViewRowCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsViewRowCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.DetailsViewRowCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DetailsViewRowCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.DetailsViewRowCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "모두 포함 하는 열거자를 반환 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref> 개체에 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRowCollection&quot;> </xref> 개체입니다."
  remarks: "이 메서드를 사용 하 여 각 항목에 액세스 하기 위해 지속적으로 반복할 수 있는 열거자를 가져옵니다는 <xref:System.Web.UI.WebControls.DetailsViewRowCollection>개체입니다.</xref:System.Web.UI.WebControls.DetailsViewRowCollection> 열거자의 현재 위치에 있는 항목에 액세스 하려면 사용 된 <xref:System.Collections.IEnumerator.Current%2A>속성.</xref:System.Collections.IEnumerator.Current%2A> 사용 하 여는 <xref:System.Collections.IEnumerator.MoveNext%2A>컬렉션의 다음 항목으로 이동 하는 메서드.</xref:System.Collections.IEnumerator.MoveNext%2A> 초기 위치에 열거자를 이동 하려면 사용 된 <xref:System.Collections.IEnumerator.Reset%2A>메서드.</xref:System.Collections.IEnumerator.Reset%2A>      > [!NOTE] > 처음에 열거자를 가져옵니다. 하거나 때 사용 하 여는 <xref:System.Collections.IEnumerator.Reset%2A>열거자는 컬렉션의 첫 번째 항목을 이동 하는 메서드를 호출 해야 합니다는 <xref:System.Collections.IEnumerator.MoveNext%2A>메서드.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> 그렇지 않은 경우으로 표시 되는 항목의 <xref:System.Collections.IEnumerator.Current%2A>속성이 정의 되지 않습니다.</xref:System.Collections.IEnumerator.Current%2A>"
  example:
  - "The following code example demonstrates how to use the GetEnumerator method to retrieve an enumerator that contains the items from the collection. The enumerator is then iterated through and the value of each row is displayed on the page.  \n  \n [!code-vb[DetailsViewRowCollectionGetEnumerator#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_175_1.aspx)]\n [!code-cs[DetailsViewRowCollectionGetEnumerator#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_175_1.aspx)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>-구현 모두 포함 하는 개체 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref> 개체에 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRowCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Web.UI.WebControls.DetailsViewRowCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsViewRowCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.WebControls.DetailsViewRowCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: DetailsViewRowCollection.IsReadOnly
  fullName: System.Web.UI.WebControls.DetailsViewRowCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져옵니다 여부의 행은 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRowCollection&quot;> </xref> 개체를 수정할 수 있습니다."
  remarks: "IsReadOnly 속성을 사용 여부는 <xref:System.Web.UI.WebControls.DetailsViewRow>개체에 <xref:System.Web.UI.WebControls.DetailsViewRowCollection>개체를 수정할 수 있습니다.</xref:System.Web.UI.WebControls.DetailsViewRowCollection> </xref:System.Web.UI.WebControls.DetailsViewRow>      > [!NOTE] > 항상 반환 하도록이 속성은 재정의 `false`를 나타내기 위해는 <xref:System.Web.UI.WebControls.DetailsViewRow>개체에 <xref:System.Web.UI.WebControls.DetailsViewRowCollection>모든 경우에서 개체를 수정할 수 있습니다.</xref:System.Web.UI.WebControls.DetailsViewRowCollection> </xref:System.Web.UI.WebControls.DetailsViewRow>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "항상 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DetailsViewRowCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsViewRowCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.DetailsViewRowCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: DetailsViewRowCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.DetailsViewRowCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRowCollection&quot;> </xref> 개체가 동기화 되었는지 (스레드로부터 안전함)."
  remarks: "IsSynchronized 속성을 사용 여부는 <xref:System.Web.UI.WebControls.DetailsViewRowCollection>개체는 스레드로부터 안전 합니다.</xref:System.Web.UI.WebControls.DetailsViewRowCollection>      > [!NOTE] > 항상 반환 하도록이 속성은 재정의 `false` 임을 나타내는 <xref:System.Web.UI.WebControls.DetailsViewRowCollection>개체는 스레드로부터 안전 하지 않습니다.</xref:System.Web.UI.WebControls.DetailsViewRowCollection>       IsSynchronized 속성에 대 한 자세한 내용은 참조는 <xref:System.Collections.ICollection.IsSynchronized%2A>의 속성은 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection> </xref:System.Collections.ICollection.IsSynchronized%2A>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "항상 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DetailsViewRowCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsViewRowCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.DetailsViewRowCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DetailsViewRowCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.DetailsViewRowCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref> 컬렉션에서 지정된 된 인덱스에는 개체입니다."
  remarks: "이 인덱서를 사용 하 여 검색 한 <xref:System.Web.UI.WebControls.DetailsViewRow>배열 표기법을 사용 하 여 지정된 된 인덱스에 컬렉션 개체입니다.</xref:System.Web.UI.WebControls.DetailsViewRow>"
  example:
  - "The following code example demonstrates how to use the indexer to retrieve a <xref:System.Web.UI.WebControls.DetailsViewRow> object from the collection at a specific index.  \n  \n [!code-cs[DetailsViewRowCollectionIndexer#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_694_1.aspx)]\n [!code-vb[DetailsViewRowCollectionIndexer#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_694_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.DetailsViewRow this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "인덱스는 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref> 컬렉션에서 검색할 수 있습니다."
    return:
      type: System.Web.UI.WebControls.DetailsViewRow
      description: "<xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref> 컬렉션에서 지정 된 인덱스입니다."
  overload: System.Web.UI.WebControls.DetailsViewRowCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsViewRowCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.DetailsViewRowCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: DetailsViewRowCollection.SyncRoot
  fullName: System.Web.UI.WebControls.DetailsViewRowCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컬렉션에 대 한 액세스를 동기화 하는 데 사용 하는 개체를 가져옵니다."
  remarks: "SyncRoot 속성을 사용 하 여 컬렉션에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다. 이 구현에서 반환 되는 개체는 <xref:System.Web.UI.WebControls.DetailsViewRowCollection>개체 자체입니다.</xref:System.Web.UI.WebControls.DetailsViewRowCollection>       SyncRoot 속성에 대 한 자세한 내용은 참조는 <xref:System.Collections.ICollection.SyncRoot%2A>의 속성은 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection> </xref:System.Collections.ICollection.SyncRoot%2A>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt; 컬렉션에 대 한 액세스를 동기화에 사용할 수 있는 합니다."
  overload: System.Web.UI.WebControls.DetailsViewRowCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsViewRowCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Web.UI.WebControls.DetailsViewRowCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: DetailsViewRowCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.DetailsViewRowCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 모든 항목을 복사 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRowCollection&quot;> </xref> 개체 지정한 <xref:System.Array> <xref:System.Array>.</xref:System.Array> 지정된 된 인덱스에서 시작 하는 개체</xref:System.Array>"
  remarks: "이렇게이 구현 ICollection.CopyTo 메서드는에서 사용 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DetailsViewRowCollection>에 항목을 복사 하는 클래스는 <xref:System.Web.UI.WebControls.DetailsViewRowCollection>여 지정 된 개체 <xref:System.Array>지정된 된 인덱스에서 시작 하는 개체입니다.</xref:System.Array> </xref:System.Web.UI.WebControls.DetailsViewRowCollection> </xref:System.Web.UI.WebControls.DetailsViewRowCollection> <xref:System.Array>개체 컬렉션의 항목에 액세스를 사용할 수 있습니다.</xref:System.Array>      > [!NOTE] >는&0;부터 시작을 사용 해야 <xref:System.Array>개체에 대 한는 `array` 매개 변수.</xref:System.Array>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "0부터 시작 <xref:System.Array>에서 복사한 항목을 수신 하는 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRowCollection&quot;> </xref>.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "지정 된 첫 번째 인덱스 <xref:System.Array>복사한 내용을 받도록.</xref:System.Array>"
  overload: System.Web.UI.WebControls.DetailsViewRowCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.WebControls.DetailsViewRowCollection.#ctor(System.Collections.ArrayList)
  parent: System.Web.UI.WebControls.DetailsViewRowCollection
  isExternal: false
  name: DetailsViewRowCollection(ArrayList)
  nameWithType: DetailsViewRowCollection.DetailsViewRowCollection(ArrayList)
  fullName: System.Web.UI.WebControls.DetailsViewRowCollection.DetailsViewRowCollection(ArrayList)
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Web.UI.WebControls.DetailsViewRowCollection.CopyTo(System.Web.UI.WebControls.DetailsViewRow[],System.Int32)
  parent: System.Web.UI.WebControls.DetailsViewRowCollection
  isExternal: false
  name: CopyTo(DetailsViewRow[],Int32)
  nameWithType: DetailsViewRowCollection.CopyTo(DetailsViewRow[],Int32)
  fullName: System.Web.UI.WebControls.DetailsViewRowCollection.CopyTo(DetailsViewRow[],Int32)
- uid: System.Web.UI.WebControls.DetailsViewRow[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewRow
  nameWithType: DetailsViewRow
  fullName: System.Web.UI.WebControls.DetailsViewRow[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.DetailsViewRow
    name: DetailsViewRow
    nameWithType: DetailsViewRow
    fullName: DetailsViewRow[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.DetailsViewRowCollection.Count
  parent: System.Web.UI.WebControls.DetailsViewRowCollection
  isExternal: false
  name: Count
  nameWithType: DetailsViewRowCollection.Count
  fullName: System.Web.UI.WebControls.DetailsViewRowCollection.Count
- uid: System.Web.UI.WebControls.DetailsViewRowCollection.GetEnumerator
  parent: System.Web.UI.WebControls.DetailsViewRowCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: DetailsViewRowCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.DetailsViewRowCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.DetailsViewRowCollection.IsReadOnly
  parent: System.Web.UI.WebControls.DetailsViewRowCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: DetailsViewRowCollection.IsReadOnly
  fullName: System.Web.UI.WebControls.DetailsViewRowCollection.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.DetailsViewRowCollection.IsSynchronized
  parent: System.Web.UI.WebControls.DetailsViewRowCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: DetailsViewRowCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.DetailsViewRowCollection.IsSynchronized
- uid: System.Web.UI.WebControls.DetailsViewRowCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.DetailsViewRowCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DetailsViewRowCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.DetailsViewRowCollection.Item(Int32)
- uid: System.Web.UI.WebControls.DetailsViewRow
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewRow
  nameWithType: DetailsViewRow
  fullName: System.Web.UI.WebControls.DetailsViewRow
- uid: System.Web.UI.WebControls.DetailsViewRowCollection.SyncRoot
  parent: System.Web.UI.WebControls.DetailsViewRowCollection
  isExternal: false
  name: SyncRoot
  nameWithType: DetailsViewRowCollection.SyncRoot
  fullName: System.Web.UI.WebControls.DetailsViewRowCollection.SyncRoot
- uid: System.Web.UI.WebControls.DetailsViewRowCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.DetailsViewRowCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: DetailsViewRowCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.DetailsViewRowCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.UI.WebControls.DetailsViewRowCollection.#ctor*
  parent: System.Web.UI.WebControls.DetailsViewRowCollection
  isExternal: false
  name: DetailsViewRowCollection
  nameWithType: DetailsViewRowCollection.DetailsViewRowCollection
- uid: System.Web.UI.WebControls.DetailsViewRowCollection.CopyTo*
  parent: System.Web.UI.WebControls.DetailsViewRowCollection
  isExternal: false
  name: CopyTo
  nameWithType: DetailsViewRowCollection.CopyTo
- uid: System.Web.UI.WebControls.DetailsViewRowCollection.Count*
  parent: System.Web.UI.WebControls.DetailsViewRowCollection
  isExternal: false
  name: Count
  nameWithType: DetailsViewRowCollection.Count
- uid: System.Web.UI.WebControls.DetailsViewRowCollection.GetEnumerator*
  parent: System.Web.UI.WebControls.DetailsViewRowCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: DetailsViewRowCollection.GetEnumerator
- uid: System.Web.UI.WebControls.DetailsViewRowCollection.IsReadOnly*
  parent: System.Web.UI.WebControls.DetailsViewRowCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: DetailsViewRowCollection.IsReadOnly
- uid: System.Web.UI.WebControls.DetailsViewRowCollection.IsSynchronized*
  parent: System.Web.UI.WebControls.DetailsViewRowCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: DetailsViewRowCollection.IsSynchronized
- uid: System.Web.UI.WebControls.DetailsViewRowCollection.Item*
  parent: System.Web.UI.WebControls.DetailsViewRowCollection
  isExternal: false
  name: Item
  nameWithType: DetailsViewRowCollection.Item
- uid: System.Web.UI.WebControls.DetailsViewRowCollection.SyncRoot*
  parent: System.Web.UI.WebControls.DetailsViewRowCollection
  isExternal: false
  name: SyncRoot
  nameWithType: DetailsViewRowCollection.SyncRoot
- uid: System.Web.UI.WebControls.DetailsViewRowCollection.System#Collections#ICollection#CopyTo*
  parent: System.Web.UI.WebControls.DetailsViewRowCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: DetailsViewRowCollection.System.Collections.ICollection.CopyTo
